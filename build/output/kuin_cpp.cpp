#include "common.h"
namespace {
// Class
class fz : public Class_{
public:
fz();
virtual int64_t cmp_(Class_* t) override;
virtual Class_* copy_(Class_* t) override;
};
// HasType
class fy : public fz{
public:
fy();
virtual Class_* copy_(Class_* t) override;
int64_t lw; // typeId
};
// Pos
class ga : public fz{
public:
ga();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* hk; // srcName
int64_t hl; // row
int64_t hm; // col
};
// Ast
class fx : public fy{
public:
fx();
virtual int64_t cmp_(Class_* t) override;
virtual Class_* copy_(Class_* t) override;
ga* ne; // pos
Array_<char16_t>* nf; // name
fx* ng; // scopeParent
Dict_<Array_<char16_t>*, fx*>* nh; // scopeChildren
Array_<char16_t>* ni; // refName
fx* nj; // refItem
fy* nk; // extra
bool no; // publicInSrc
};
// AstType
class gc : public fx{
public:
gc();
virtual Class_* copy_(Class_* t) override;
};
// AstExpr
class gd : public fx{
public:
gd();
virtual Class_* copy_(Class_* t) override;
gc* pf; // type
int64_t pj; // varKind
};
// AstArg
class gb : public fx{
public:
gb();
virtual Class_* copy_(Class_* t) override;
int64_t qk; // kind
bool ql; // refVar
gc* qf; // type
gd* qg; // expr
};
// AstStat
class ge : public fx{
public:
ge();
virtual Class_* copy_(Class_* t) override;
};
// AstFunc
class fw : public fx{
public:
fw();
virtual Class_* copy_(Class_* t) override;
int64_t sm; // funcOption
List_<Array_<char16_t>*>* sf; // funcAttr
List_<gb*>* sg; // args
gc* sh; // ret_
List_<ge*>* si; // stats
};
// ResFiles
class gj : public fz{
public:
gj();
virtual Class_* copy_(Class_* t) override;
List_<Array_<char16_t>*>* gk; // files
};
// Bool
class kl : public fz{
public:
kl();
virtual int64_t cmp_(Class_* t) override;
virtual Class_* copy_(Class_* t) override;
bool km; // value
};
// AstClassItem
class um : public fz{
public:
um();
virtual Class_* copy_(Class_* t) override;
bool azq; // public
bool azr; // override
fx* azl; // def
um* azm; // parentItem
};
// AstClass
class ul : public fx{
public:
ul();
virtual Class_* copy_(Class_* t) override;
List_<um*>* bag; // items
};
// TmpVar
class un : public fz{
public:
un();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bbe; // identifier
gc* bbf; // type
};
// TmpVar
class va : public fz{
public:
va();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bif; // identifier
gc* big; // type
};
// Reader
class auz : public fz{
public:
auz();
virtual Class_* copy_(Class_* t) override;
int64_t bpa; // handle
int64_t bqr; // delimiterNum
int64_t bqs; // delimiters
int64_t bqt; // fileSize_
};
// ScopeRefedItem
class avl : public fz{
public:
avl();
virtual Class_* copy_(Class_* t) override;
fx* awk; // def
fx* axf; // scope
};
// AstRoot
class avk : public fx{
public:
avk();
virtual Class_* copy_(Class_* t) override;
List_<fx*>* aza; // items
List_<avl*>* awd; // scopeRefedItems
};
// CppInfo
class bby : public fy{
public:
bby();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bdy; // id
Array_<char16_t>* cav; // breakLabel
Array_<char16_t>* cay; // skipLabel
int64_t bft; // classTableOffset
bool bca; // alreadyWritten
bool cbb; // breakLabelUsed
bool cbc; // skipLabelUsed
};
// AstVar
class bgi : public fx{
public:
bgi();
virtual Class_* copy_(Class_* t) override;
gb* bgk; // arg
};
// Writer
class bho : public fz{
public:
bho();
virtual Class_* copy_(Class_* t) override;
int64_t cpp; // handle
};
// WebInfo
class bix : public fy{
public:
bix();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bjn; // id
Array_<char16_t>* crx; // breakSkipLabel
bool biz; // alreadyWritten
};
// AstConst
class bsl : public fx{
public:
bsl();
virtual Class_* copy_(Class_* t) override;
gb* btb; // arg
};
// AstAlias
class bso : public fx{
public:
bso();
virtual Class_* copy_(Class_* t) override;
gc* dje; // type
};
// AstEnum
class bsu : public fx{
public:
bsu();
virtual Class_* copy_(Class_* t) override;
List_<gd*>* dma; // items
};
// AstStatBreakable
class bvr : public ge{
public:
bvr();
virtual Class_* copy_(Class_* t) override;
gb* bwb; // blockVar
};
// AstStatBlock
class bvs : public bvr{
public:
bvs();
virtual Class_* copy_(Class_* t) override;
List_<ge*>* bwe; // stats
};
// ExprPair
class bvu : public fz{
public:
bvu();
virtual Class_* copy_(Class_* t) override;
gd* bxq; // expr0
gd* bxv; // expr1
};
// AstStatCatch
class bvt : public ge{
public:
bvt();
virtual Class_* copy_(Class_* t) override;
List_<bvu*>* bxd; // conds
bvs* bxg; // statBlock
};
// AstStatTry
class bvq : public bvr{
public:
bvq();
virtual Class_* copy_(Class_* t) override;
bvs* bwf; // statBlock
List_<bvt*>* bwg; // catches
bvs* bwj; // finallyStatBlock
};
// AstTypePrim
class bvz : public gc{
public:
bvz();
virtual Class_* copy_(Class_* t) override;
int64_t bwa; // kind
};
// AstStatDo
class bwq : public ge{
public:
bwq();
virtual Class_* copy_(Class_* t) override;
gd* bxa; // expr
};
// AstExprCallArg
class bwu : public fz{
public:
bwu();
virtual Class_* copy_(Class_* t) override;
gd* byi; // arg
bool bye; // refVar
bool byf; // skipVar
};
// AstExprCall
class bwt : public gd{
public:
bwt();
virtual Class_* copy_(Class_* t) override;
gd* bwz; // func_
List_<bwu*>* bww; // args
};
// AstExprValue
class bxm : public gd{
public:
bxm();
virtual Class_* copy_(Class_* t) override;
};
// AstExprValuePrim
class bxl : public bxm{
public:
bxl();
virtual Class_* copy_(Class_* t) override;
uint64_t bxn; // value
};
// AstExpr2
class bzx : public gd{
public:
bzx();
virtual Class_* copy_(Class_* t) override;
int64_t bzy; // kind
gd* cab; // children0
gd* cac; // children1
};
// AstTypeNullable
class ccf : public gc{
public:
ccf();
virtual Class_* copy_(Class_* t) override;
};
// AstTypeArray
class cce : public ccf{
public:
cce();
virtual Class_* copy_(Class_* t) override;
gc* ccg; // itemType
};
// AstTypeBit
class cci : public gc{
public:
cci();
virtual Class_* copy_(Class_* t) override;
int64_t ccj; // size
};
// AstTypeFuncArg
class ccn : public fz{
public:
ccn();
virtual Class_* copy_(Class_* t) override;
gc* cdc; // arg
bool cde; // refVar
};
// AstTypeFunc
class ccm : public ccf{
public:
ccm();
virtual Class_* copy_(Class_* t) override;
int64_t elm; // funcOption
List_<Array_<char16_t>*>* eli; // funcAttr
List_<ccn*>* ccu; // args
gc* ccp; // ret_
};
// AstTypeGen
class cdj : public ccf{
public:
cdj();
virtual Class_* copy_(Class_* t) override;
int64_t cdm; // kind
gc* cdo; // itemType
};
// AstTypeDict
class cdu : public ccf{
public:
cdu();
virtual Class_* copy_(Class_* t) override;
gc* cdv; // itemTypeKey
gc* cdw; // itemTypeValue
};
// AstStatElIf
class cle : public ge{
public:
cle();
virtual Class_* copy_(Class_* t) override;
gd* epa; // cond
bvs* epb; // statBlock
};
// AstStatIf
class cld : public bvr{
public:
cld();
virtual Class_* copy_(Class_* t) override;
gd* eop; // cond
bvs* eor; // statBlock
List_<cle*>* eox; // elIfs
bvs* epd; // elseStatBlock
};
// AstStatCase
class cli : public ge{
public:
cli();
virtual Class_* copy_(Class_* t) override;
List_<bvu*>* ery; // conds
bvs* esm; // statBlock
};
// AstStatSwitch
class clh : public bvr{
public:
clh();
virtual Class_* copy_(Class_* t) override;
gd* erq; // cond
List_<cli*>* eru; // cases
bvs* eso; // defaultStatBlock
};
// AstStatSkipable
class clm : public bvr{
public:
clm();
virtual Class_* copy_(Class_* t) override;
};
// AstStatWhile
class cll : public clm{
public:
cll();
virtual Class_* copy_(Class_* t) override;
gd* evt; // cond
bool ewb; // skip_
List_<ge*>* evv; // stats
};
// AstStatFor
class clp : public clm{
public:
clp();
virtual Class_* copy_(Class_* t) override;
gd* eys; // start
gd* eyr; // cond
gd* eyt; // step
List_<ge*>* ezb; // stats
};
// AstStatThrow
class clu : public ge{
public:
clu();
virtual Class_* copy_(Class_* t) override;
gd* fbs; // code
};
// AstStatRet
class clz : public ge{
public:
clz();
virtual Class_* copy_(Class_* t) override;
gd* fcy; // value
};
// AstStatAssert
class cmi : public ge{
public:
cmi();
virtual Class_* copy_(Class_* t) override;
gd* fem; // cond
};
// AstTypeUser
class dgu : public ccf{
public:
dgu();
virtual Class_* copy_(Class_* t) override;
};
// AstExpr1
class ebf : public gd{
public:
ebf();
virtual Class_* copy_(Class_* t) override;
int64_t gfp; // kind
gd* gfj; // child
};
// AstExpr3
class ebk : public gd{
public:
ebk();
virtual Class_* copy_(Class_* t) override;
gd* gqn; // children0
gd* gqq; // children1
gd* gqt; // children2
};
// AstExprNew
class ebn : public gd{
public:
ebn();
virtual Class_* copy_(Class_* t) override;
gc* gso; // itemType
};
// AstExprNewArray
class ebq : public gd{
public:
ebq();
virtual Class_* copy_(Class_* t) override;
List_<gd*>* gtz; // idces
gc* gui; // itemType
};
// AstExprAs
class ebt : public gd{
public:
ebt();
virtual Class_* copy_(Class_* t) override;
int64_t gwe; // kind
gd* gvw; // child
gc* gvz; // childType
};
// AstExprToBin
class ebw : public gd{
public:
ebw();
virtual Class_* copy_(Class_* t) override;
gd* had; // child
gc* haj; // childType
};
// AstExprFromBin
class ebz : public gd{
public:
ebz();
virtual Class_* copy_(Class_* t) override;
gd* hbo; // child
gc* hbt; // childType
gd* hbu; // offset
};
// AstExprArray
class ece : public gd{
public:
ece();
virtual Class_* copy_(Class_* t) override;
gd* hfg; // var_
gd* hfl; // idx
};
// AstExprDot
class ech : public gd{
public:
ech();
virtual Class_* copy_(Class_* t) override;
gd* hdo; // var_
Array_<char16_t>* hhe; // member
um* hhr; // classItem
};
// AstExprValueStr
class eco : public bxm{
public:
eco();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* gld; // value
};
// AstExprValueEnumElement
class ecr : public bxm{
public:
ecr();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* gjp; // identifier
};
// AstExprValueFloat
class ecu : public bxm{
public:
ecu();
virtual Class_* copy_(Class_* t) override;
double ggf; // value
};
// AstExprValueArray
class ecx : public gd{
public:
ecx();
virtual Class_* copy_(Class_* t) override;
List_<gd*>* hdx; // values
};
// AstStatVar
class eeo : public ge{
public:
eeo();
virtual Class_* copy_(Class_* t) override;
bgi* eeq; // def
};
// AstTypeNull
class egu : public gc{
public:
egu();
virtual Class_* copy_(Class_* t) override;
};
// AstStatFunc
class ihc : public ge{
public:
ihc();
virtual Class_* copy_(Class_* t) override;
fw* ihd; // def
};
// AstStatConst
class ihg : public ge{
public:
ihg();
virtual Class_* copy_(Class_* t) override;
bsl* ihh; // def
};
// AstStatAlias
class ihj : public ge{
public:
ihj();
virtual Class_* copy_(Class_* t) override;
bso* ihk; // def
};
// AstStatClass
class ihm : public ge{
public:
ihm();
virtual Class_* copy_(Class_* t) override;
ul* ihn; // def
};
// AstStatEnum
class ihp : public ge{
public:
ihp();
virtual Class_* copy_(Class_* t) override;
bsu* ihq; // def
};
// AstTypeEnumElement
class kvv : public gc{
public:
kvv();
virtual Class_* copy_(Class_* t) override;
};
static void a();
static void e();
static void f();
static void g();
static void i();
static void j();
static void l(int64_t bp /*excpt*/);
static bool o();
static void q(int64_t fh /*code*/);
static void u(Array_<char16_t>* fm /*str*/);
template<typename T_> static Array_<char16_t>* v(T_ fn /*me_*/, Array_<int64_t>* fo /*type*/);
static bool ab();
static void ad(int64_t hb /*id*/, ga* hc /*pos*/, Array_<Array_<char16_t>*>* hd /*args*/);
static Array_<Array_<char16_t>*>* br();
static bool cf(Array_<char16_t>** hq /*out*/, Array_<Array_<char16_t>*>* hr /*cmdLines*/, int64_t* hs /*idx*/, char16_t ht /*option*/);
static bool cs(bool* hx /*out*/, char16_t hy /*option*/);
template<typename T_, typename K_, typename V_> static void dv(T_ ib /*me_*/, Array_<int64_t>* ic /*type*/, K_ id /*key*/, V_ ie /*item*/);
static int64_t eo(int64_t ig /*min*/, int64_t ih /*max*/);
static int64_t eq(Array_<char16_t>* ii /*me_*/, bool* ij /*success*/);
static Array_<char16_t>* ew(Array_<char16_t>* ik /*path*/);
static Array_<char16_t>* ey(Array_<char16_t>* ix /*path*/);
static Array_<char16_t>* fd(Array_<char16_t>* jj /*path*/);
static Array_<char16_t>* ff(Array_<char16_t>* jw /*path*/);
static int64_t fr();
static Dict_<Array_<char16_t>*, fx*>* ft();
static fw* fv(Dict_<Array_<char16_t>*, fx*>* kq /*asts*/);
static void kx(fz* ky /*me*/);
static void kz(fz* la /*me*/);
static int64_t lb(fz* lc /*me*/, fz* ld /*t*/);
static fz* le(fz* lf /*me*/);
static Array_<uint8_t>* lh(fz* li /*me*/);
static fz* lk(fz* ll /*me*/, Array_<uint8_t>* lm /*bin*/, int64_t* ln /*idx*/);
static Array_<char16_t>* lp(fz* lq /*me*/);
static void lr(fy* ls);
static fy* lt(fy* lu);
static Array_<uint8_t>* lx(fy* ly);
static fy* mb(fy* mc, Array_<uint8_t>* md, int64_t* me);
static int64_t mg(fx* mh /*me*/, fx* mi /*t*/);
static void mm(ga* mn);
static ga* mo(ga* mp);
static Array_<uint8_t>* mr(ga* ms);
static ga* mx(ga* my, Array_<uint8_t>* mz, int64_t* na);
static void nc(fx* nd);
static fx* nl(fx* nm);
static Array_<uint8_t>* np(fx* nq);
static fx* ob(fx* oc, Array_<uint8_t>* od, int64_t* oe);
static void og(gc* oh);
static gc* oi(gc* oj);
static Array_<uint8_t>* ol(gc* om);
static gc* oy(gc* oz, Array_<uint8_t>* pa, int64_t* pb);
static void pd(gd* pe);
static gd* pg(gd* ph);
static Array_<uint8_t>* pk(gd* pl);
static gd* py(gd* pz, Array_<uint8_t>* qa, int64_t* qb);
static void qd(gb* qe);
static gb* qh(gb* qi);
static Array_<uint8_t>* qm(gb* qn);
static gb* rc(gb* rd, Array_<uint8_t>* re, int64_t* rf);
static void rh(ge* ri);
static ge* rj(ge* rk);
static Array_<uint8_t>* rm(ge* rn);
static ge* ry(ge* rz, Array_<uint8_t>* sa, int64_t* sb);
static void sd(fw* se);
static fw* sj(fw* sk);
static Array_<uint8_t>* sn(fw* so);
static fw* te(fw* tf, Array_<uint8_t>* tg, int64_t* th);
static void tj(gj* tk);
static gj* tl(gj* tm);
static Array_<uint8_t>* to(gj* tp);
static gj* ts(gj* tt, Array_<uint8_t>* tu, int64_t* tv);
static bool gm(Array_<char16_t>* tx /*path*/);
typedef bool(*ub)(Array_<char16_t>*, bool, fz*);
static bool go(Array_<char16_t>* ty /*path*/, bool tz /*recursion*/, ub ua /*callback*/, fz* uc /*data*/);
static bool gp(Array_<char16_t>* ud /*path*/, bool ue /*isDir*/, fz* uf /*data*/);
static bool gu(fw* ui /*entry*/, List_<Array_<char16_t>*>* uj /*resFiles*/);
static bool gy(fw* uy /*entry*/, List_<Array_<char16_t>*>* uz /*resFiles*/);
static Array_<char16_t>* hh(int64_t vj /*id*/, Array_<Array_<char16_t>*>* vk /*args*/);
static int64_t atm(kl* atn /*me*/, kl* ato /*t*/);
static Array_<char16_t>* atq(kl* atr /*me*/);
static void ats(kl* att);
static kl* atu(kl* atv);
static Array_<uint8_t>* atx(kl* aty);
static kl* aub(kl* auc, Array_<uint8_t>* aud, int64_t* aue);
template<typename T_, typename K_, typename V_> static bool ko(T_ aug /*me_*/, Array_<int64_t>* auh /*type*/, const void* aui /*callback*/, fz* auj /*data*/);
static bool kp(Array_<char16_t>* auk /*key*/, fx* aul /*value*/, fz* aum /*data*/);
static fw* ks();
static bool kv(Array_<char16_t>* avz /*key*/, fx* awa /*value*/, fz* awb /*data*/);
static fw* kw(fw* ayt /*mainFunc*/);
static uint64_t mk(fz* azc /*class_*/);
template<typename T_, typename C_> static void uh(T_ azd /*me_*/, Array_<int64_t>* aze /*type*/, C_ azf /*item*/);
template<typename T_, typename C_> static void uk(T_ azg /*me_*/, Array_<int64_t>* azh /*type*/, C_ azi /*item*/);
static void azj(um* azk);
static um* azn(um* azo);
static Array_<uint8_t>* azs(um* azt);
static um* azz(um* baa, Array_<uint8_t>* bab, int64_t* bac);
static void bae(ul* baf);
static ul* bah(ul* bai);
static Array_<uint8_t>* bak(ul* bal);
static ul* bax(ul* bay, Array_<uint8_t>* baz, int64_t* bba);
static void bbc(un* bbd);
static un* bbg(un* bbh);
static Array_<uint8_t>* bbj(un* bbk);
static un* bbo(un* bbp, Array_<uint8_t>* bbq, int64_t* bbr);
template<typename T_, typename R_> static R_ us(T_ bbt /*me_*/, Array_<int64_t>* bbu /*type*/);
static void ut(fw* bbv /*ast*/);
static void uw(ul* bfk /*ast*/);
static void ux(List_<Array_<char16_t>*>* bhk /*resFiles*/);
static void bid(va* bie);
static va* bih(va* bii);
static Array_<uint8_t>* bik(va* bil);
static va* bip(va* biq, Array_<uint8_t>* bir, int64_t* bis);
static void ve(fw* biu /*ast*/);
static void vh(ul* bkt /*ast*/);
static void vi(List_<Array_<char16_t>*>* blp /*resFiles*/);
static int64_t atp(int64_t bnt /*me_*/);
static bool auq(Array_<char16_t>* bnu /*name*/);
static Array_<char16_t>* auv(Array_<char16_t>* bon /*path*/);
template<typename T_> static T_ auw(T_ bou /*me_*/, Array_<int64_t>* bov /*type*/, int64_t bow /*start*/, int64_t box /*len*/);
static auz* auy(auz* boy /*me2*/, Array_<char16_t>* boz /*path*/);
static void bpb(auz* bpc /*me*/);
static void avm(auz* bpd /*me*/);
static void bpe(auz* bpf /*me*/, int64_t bpg /*origin*/, int64_t bph /*pos*/);
static int64_t bpi(auz* bpj /*me*/);
static void bpk(auz* bpl /*me*/, Array_<char16_t>* bpm /*delimiters*/);
static Array_<uint8_t>* bpn(auz* bpo /*me*/, int64_t bpp /*size*/);
static char16_t bpq(auz* bpr /*me*/);
static int64_t bps(auz* bpt /*me*/);
static double bpu(auz* bpv /*me*/);
static char16_t bpw(auz* bpx /*me*/);
static Array_<char16_t>* bpy(auz* bpz /*me*/);
static Array_<char16_t>* bmu(auz* bqa /*me*/);
static int64_t bql(auz* bqm /*me*/);
static bool bms(auz* bqn /*me*/);
static auz* bqo(auz* bqp);
static Array_<uint8_t>* bqu(auz* bqv);
static auz* brb(auz* brc, Array_<uint8_t>* brd, int64_t* bre);
static avk* avj();
static void bte(avl* btf);
static avl* btg(avl* bth);
static Array_<uint8_t>* btj(avl* btk);
static avl* bto(avl* btp, Array_<uint8_t>* btq, int64_t* btr);
static void btt(avk* btu);
static avk* btv(avk* btw);
static Array_<uint8_t>* bty(avk* btz);
static avk* bum(avk* bun, Array_<uint8_t>* buo, int64_t* bup);
template<typename T_, typename C_, typename R_> static R_ avo(T_ bur /*me_*/, Array_<int64_t>* bus /*type*/, C_ but /*key*/, bool* buu /*existed*/);
template<typename T_> static void awe(T_ buv /*me_*/, Array_<int64_t>* buw /*type*/);
template<typename T_> static bool awg(T_ bux /*me_*/, Array_<int64_t>* buy /*type*/);
template<typename T_, typename R_> static R_ awi(T_ buz /*me_*/, Array_<int64_t>* bva /*type*/);
template<typename T_, typename C_> static int64_t awn(T_ bvb /*me_*/, Array_<int64_t>* bvc /*type*/, C_ bvd /*item*/, int64_t bve /*start*/);
template<typename T_> static T_ aye(T_ bvf /*me_*/, Array_<int64_t>* bvg /*type*/, T_ bvh /*n*/);
template<typename T_> static void ays(T_ bvi /*me_*/, Array_<int64_t>* bvj /*type*/);
static fw* ayw(fw* bvk /*mainFunc*/);
static void ayx(fw* bys /*ast*/);
static bool azb(Array_<char16_t>* bzc /*key*/, fx* bzd /*value*/, fz* bze /*data*/);
static bby* bbx(fx* cao /*ast*/);
static void cbd(bby* cbe);
static bby* cbf(bby* cbg);
static Array_<uint8_t>* cbi(bby* cbj);
static bby* cbt(bby* cbu, Array_<uint8_t>* cbv, int64_t* cbw);
static Array_<char16_t>* bct(gc* cby /*type*/);
static bool bdg(gc* ceo /*type*/);
static void beq(List_<Array_<char16_t>*>* cep /*codes*/, Array_<char16_t>* ceq /*attr*/, List_<gb*>* cer /*args*/, List_<um*>* ces /*members*/);
template<typename T_> static void beu(T_ ckq /*me_*/, Array_<int64_t>* ckr /*type*/);
template<typename T_> static int64_t bew(T_ cks /*me_*/, Array_<int64_t>* ckt /*type*/);
static void bex(List_<ge*>* cku /*stats*/, ge* ckv /*breakStat*/, ge* ckw /*skipStat*/);
template<typename T_> static void bey(T_ cmk /*me_*/, Array_<int64_t>* cml /*type*/, int64_t cmm /*offset*/);
template<typename T_, typename C_> static void bfe(T_ cmn /*me_*/, Array_<int64_t>* cmo /*type*/, C_ cmp /*item*/);
static Array_<char16_t>* bff(gc* cmq /*type*/);
template<typename T_> static void bfh(T_ cnh /*me_*/, Array_<int64_t>* cni /*type*/);
static Array_<char16_t>* bfo(ul* cnj /*ast*/);
static void cog(bgi* coh);
static bgi* coi(bgi* coj);
static Array_<uint8_t>* col(bgi* com);
static bgi* coy(bgi* coz, Array_<uint8_t>* cpa, int64_t* cpb);
static fw* bgn(ul* cpd /*ast*/, Array_<char16_t>* cpe /*name*/);
static bool bhl(Array_<char16_t>* cpk /*dst*/, Array_<char16_t>* cpl /*src*/);
static bho* bhn(bho* cpm /*me2*/, Array_<char16_t>* cpn /*path*/, bool cpo /*append*/);
static void cpq(bho* cpr /*me*/);
static void bic(bho* cps /*me*/);
static void cpt(bho* cpu /*me*/, int64_t cpv /*origin*/, int64_t cpw /*pos*/);
static int64_t cpx(bho* cpy /*me*/);
static void cpz(bho* cqa /*me*/, Array_<uint8_t>* cqb /*bin*/);
static void cqc(bho* cqd /*me*/, int64_t cqe /*n*/);
static void cqm(bho* cqn /*me*/, double cqo /*n*/);
static void cql(bho* cqv /*me*/, char16_t cqw /*n*/);
static void bhp(bho* cqx /*me*/, Array_<char16_t>* cqy /*n*/);
static bho* cre(bho* crf);
static Array_<uint8_t>* crh(bho* cri);
static bho* crl(bho* crm, Array_<uint8_t>* crn, int64_t* cro);
static bix* biw(fx* crq /*ast*/);
static void crz(bix* csa);
static bix* csb(bix* csc);
static Array_<uint8_t>* cse(bix* csf);
static bix* csl(bix* csm, Array_<uint8_t>* csn, int64_t* cso);
static void bke(List_<Array_<char16_t>*>* csq /*codes*/, Array_<char16_t>* csr /*attr*/, List_<gb*>* css /*args*/, List_<um*>* cst /*members*/);
static void bkj(List_<ge*>* czh /*stats*/);
static Array_<char16_t>* bkp(gc* dal /*type*/);
static Array_<char16_t>* bkx(ul* dba /*ast*/);
static fw* blf(ul* dbg /*ast*/, Array_<char16_t>* dbh /*name*/);
static Array_<char16_t>* bmm(char16_t dbn /*c*/);
static void brh(fx* dbv /*ast*/, int64_t dbw /*typeId*/, ga* dbx /*pos*/, Array_<char16_t>* dby /*name*/, bool dbz /*setParent*/);
static ga* bri(Array_<char16_t>* dcb /*srcName*/, int64_t dcc /*row*/, int64_t dcd /*col*/);
template<typename T_, typename C_> static void brj(T_ dcf /*me_*/, Array_<int64_t>* dcg /*type*/, C_ dch /*item*/);
static char16_t brk();
static Array_<char16_t>* bsb(bool dcz /*skipSpaces*/, bool dda /*refName*/);
static fw* bsg(Array_<char16_t>* deh /*parentClass*/, bool dei /*overritten*/);
static bgi* bsi(int64_t dic /*kind*/, Array_<char16_t>* did /*parentClass*/);
static bsl* bsk();
static void dig(bsl* dih);
static bsl* dii(bsl* dij);
static Array_<uint8_t>* dil(bsl* dim);
static bsl* diy(bsl* diz, Array_<uint8_t>* dja, int64_t* djb);
static bso* bsn();
static void djf(bso* djg);
static bso* djh(bso* dji);
static Array_<uint8_t>* djk(bso* djl);
static bso* djx(bso* djy, Array_<uint8_t>* djz, int64_t* dka);
static ul* bsr();
static bsu* bst();
static void dna(bsu* dnb);
static bsu* dnc(bsu* dnd);
static Array_<uint8_t>* dnf(bsu* dng);
static bsu* dns(bsu* dnt, Array_<uint8_t>* dnu, int64_t* dnv);
static void bsw(char16_t dnx /*c*/);
static char16_t bsx();
template<typename T_, typename R_> static R_ btd(T_ dof /*me_*/, Array_<int64_t>* dog /*type*/);
static void bvn(fx* doh /*ast*/, int64_t doi /*typeId*/, ga* doj /*pos*/);
static void dol(bvr* dom);
static bvr* don(bvr* doo);
static Array_<uint8_t>* doq(bvr* dor);
static bvr* dpd(bvr* dpe, Array_<uint8_t>* dpf, int64_t* dpg);
static void dpi(bvs* dpj);
static bvs* dpk(bvs* dpl);
static Array_<uint8_t>* dpn(bvs* dpo);
static bvs* dqb(bvs* dqc, Array_<uint8_t>* dqd, int64_t* dqe);
static void dqg(bvu* dqh);
static bvu* dqi(bvu* dqj);
static Array_<uint8_t>* dql(bvu* dqm);
static bvu* dqq(bvu* dqr, Array_<uint8_t>* dqs, int64_t* dqt);
static void dqv(bvt* dqw);
static bvt* dqx(bvt* dqy);
static Array_<uint8_t>* dra(bvt* drb);
static bvt* dro(bvt* drp, Array_<uint8_t>* drq, int64_t* drr);
static void drt(bvq* dru);
static bvq* drv(bvq* drw);
static Array_<uint8_t>* dry(bvq* drz);
static bvq* dso(bvq* dsp, Array_<uint8_t>* dsq, int64_t* dsr);
static void dst(bvz* dsu);
static bvz* dsv(bvz* dsw);
static Array_<uint8_t>* dsy(bvz* dsz);
static bvz* dtl(bvz* dtm, Array_<uint8_t>* dtn, int64_t* dto);
static fx* bwm(Array_<char16_t>* dtq /*src*/, Array_<char16_t>* dtr /*identifier*/, bool dts /*makeExprRef*/);
static void duf(bwq* dug);
static bwq* duh(bwq* dui);
static Array_<uint8_t>* duk(bwq* dul);
static bwq* dux(bwq* duy, Array_<uint8_t>* duz, int64_t* dva);
static void dvc(bwu* dvd);
static bwu* dve(bwu* dvf);
static Array_<uint8_t>* dvh(bwu* dvi);
static bwu* dvn(bwu* dvo, Array_<uint8_t>* dvp, int64_t* dvq);
static void dvs(bwt* dvt);
static bwt* dvu(bwt* dvv);
static Array_<uint8_t>* dvx(bwt* dvy);
static bwt* dwn(bwt* dwo, Array_<uint8_t>* dwp, int64_t* dwq);
static void bwv(gd* dws /*ast*/, int64_t dwt /*typeId*/, ga* dwu /*pos*/);
static void dwv(bxm* dww);
static bxm* dwx(bxm* dwy);
static Array_<uint8_t>* dxa(bxm* dxb);
static bxm* dxo(bxm* dxp, Array_<uint8_t>* dxq, int64_t* dxr);
static void dxt(bxl* dxu);
static bxl* dxv(bxl* dxw);
static Array_<uint8_t>* dxy(bxl* dxz);
static bxl* dyn(bxl* dyo, Array_<uint8_t>* dyp, int64_t* dyq);
static void byx(gb* dys /*ast*/);
static gc* bza(gc* dzi /*ast*/, bso* dzj /*parentAlias*/);
static List_<ge*>* bzb(List_<ge*>* eao /*stats*/, gc* eap /*retType*/, fw* eaq /*parentFunc*/);
static gd* bzt(gd* eaw /*ast*/, bool eax /*nullable*/);
static void edd(bzx* ede);
static bzx* edf(bzx* edg);
static Array_<uint8_t>* edi(bzx* edj);
static bzx* edz(bzx* eea, Array_<uint8_t>* eeb, int64_t* eec);
static ge* cad(ge* eee /*ast*/, gc* eef /*retType*/, fw* eeg /*parentFunc*/);
static bool caf(gc* egn /*type*/);
static bxm* cam(ga* egq /*pos*/);
static Array_<char16_t>* cas();
static void eib(ccf* eic);
static ccf* eid(ccf* eie);
static Array_<uint8_t>* eig(ccf* eih);
static ccf* eis(ccf* eit, Array_<uint8_t>* eiu, int64_t* eiv);
static void eix(cce* eiy);
static cce* eiz(cce* eja);
static Array_<uint8_t>* ejc(cce* ejd);
static cce* ejp(cce* ejq, Array_<uint8_t>* ejr, int64_t* ejs);
static void eju(cci* ejv);
static cci* ejw(cci* ejx);
static Array_<uint8_t>* ejz(cci* eka);
static cci* ekm(cci* ekn, Array_<uint8_t>* eko, int64_t* ekp);
static void ekr(ccn* eks);
static ccn* ekt(ccn* eku);
static Array_<uint8_t>* ekw(ccn* ekx);
static ccn* elb(ccn* elc, Array_<uint8_t>* eld, int64_t* ele);
static void elg(ccm* elh);
static ccm* elj(ccm* elk);
static Array_<uint8_t>* eln(ccm* elo);
static ccm* emd(ccm* eme, Array_<uint8_t>* emf, int64_t* emg);
static void emi(cdj* emj);
static cdj* emk(cdj* eml);
static Array_<uint8_t>* emn(cdj* emo);
static cdj* enb(cdj* enc, Array_<uint8_t>* end, int64_t* ene);
static void eng(cdu* enh);
static cdu* eni(cdu* enj);
static Array_<uint8_t>* enl(cdu* enm);
static cdu* enz(cdu* eoa, Array_<uint8_t>* eob, int64_t* eoc);
static bby* cix(List_<um*>* eoe /*members*/, Array_<char16_t>* eof /*name*/);
static void clc(cld* eok /*ast*/, ge* eol /*breakStat*/, ge* eom /*skipStat*/);
static void eph(cle* epi);
static cle* epj(cle* epk);
static Array_<uint8_t>* epm(cle* epn);
static cle* eqa(cle* eqb, Array_<uint8_t>* eqc, int64_t* eqd);
static void eqf(cld* eqg);
static cld* eqh(cld* eqi);
static Array_<uint8_t>* eqk(cld* eql);
static cld* erb(cld* erc, Array_<uint8_t>* erd, int64_t* ere);
static void clg(clh* erg /*ast*/, ge* erh /*breakStat*/, ge* eri /*skipStat*/);
static void etq(cli* etr);
static cli* ets(cli* ett);
static Array_<uint8_t>* etv(cli* etw);
static cli* euj(cli* euk, Array_<uint8_t>* eul, int64_t* eum);
static void euo(clh* eup);
static clh* euq(clh* eur);
static Array_<uint8_t>* eut(clh* euu);
static clh* evj(clh* evk, Array_<uint8_t>* evl, int64_t* evm);
static void clk(cll* evo /*ast*/, ge* evp /*breakStat*/, ge* evq /*skipStat*/);
static void ewl(clm* ewm);
static clm* ewn(clm* ewo);
static Array_<uint8_t>* ewq(clm* ewr);
static clm* exd(clm* exe, Array_<uint8_t>* exf, int64_t* exg);
static void exi(cll* exj);
static cll* exk(cll* exl);
static Array_<uint8_t>* exn(cll* exo);
static cll* eyd(cll* eye, Array_<uint8_t>* eyf, int64_t* eyg);
static void clo(clp* eyi /*ast*/, ge* eyj /*breakStat*/, ge* eyk /*skipStat*/);
static void ezg(clp* ezh);
static clp* ezi(clp* ezj);
static Array_<uint8_t>* ezl(clp* ezm);
static clp* fac(clp* fad, Array_<uint8_t>* fae, int64_t* faf);
static void clr(bvq* fah /*ast*/, ge* fai /*breakStat*/, ge* faj /*skipStat*/);
static void clt(clu* fbr /*ast*/);
static void fbt(clu* fbu);
static clu* fbv(clu* fbw);
static Array_<uint8_t>* fby(clu* fbz);
static clu* fcl(clu* fcm, Array_<uint8_t>* fcn, int64_t* fco);
static void clw(bvs* fcq /*ast*/, ge* fcr /*breakStat*/, ge* fcs /*skipStat*/);
static void cly(clz* fcw /*ast*/);
static void fdb(clz* fdc);
static clz* fdd(clz* fde);
static Array_<uint8_t>* fdg(clz* fdh);
static clz* fdt(clz* fdu, Array_<uint8_t>* fdv, int64_t* fdw);
static void cmb(bwq* fdy /*ast*/);
static void cmd(ge* fdz /*ast*/, ge* fea /*breakStat*/);
static void cmf(ge* fef /*ast*/, ge* feg /*skipStat*/);
static void cmh(cmi* fel /*ast*/);
static void fen(cmi* feo);
static cmi* fep(cmi* feq);
static Array_<uint8_t>* fes(cmi* fet);
static cmi* fff(cmi* ffg, Array_<uint8_t>* ffh, int64_t* ffi);
static bool cms(gc* ffk /*type*/);
static bool cmx(gc* ffl /*type*/);
static Array_<char16_t>* cru();
static bix* cxd(List_<um*>* fgt /*members*/, Array_<char16_t>* fgu /*name*/);
static void czn(cld* fgz /*ast*/);
static void czp(clh* fhq /*ast*/);
static void czr(cll* fjy /*ast*/);
static void czt(clp* fkk /*ast*/);
static void czv(bvq* fla /*ast*/);
static void czx(clu* fme /*ast*/);
static void czz(bvs* fmf /*ast*/);
static void dab(clz* fml /*ast*/);
static void dad(bwq* fmp /*ast*/);
static void daf(ge* fmq /*ast*/);
static void dah(ge* fms /*ast*/);
static void daj(cmi* fmu /*ast*/);
static void dca(fx* fmv /*ast*/, int64_t fmw /*typeId*/, ga* fmx /*pos*/, Array_<char16_t>* fmy /*name*/, bool fmz /*setParent*/);
static char16_t dct();
static ga* dde();
static Array_<char16_t>* ddf(char16_t fnw /*c*/);
static void dea(Array_<char16_t>* fod /*name*/);
static Array_<char16_t>* deu();
template<typename T_> static T_ dfc(T_ foq /*me_*/, Array_<int64_t>* fos /*type*/, T_ fot /*n*/);
static void dgi(char16_t fou /*c*/, char16_t fov /*c2*/);
static void dgm(fx* fow /*ast*/, Array_<char16_t>* fox /*name*/);
static void dgn(char16_t foz /*c*/, bool fpa /*skipSpaces*/);
static void dgr(fx* fpe /*ast*/, bool fpf /*refuseReserved*/);
static void fqq(dgu* fqr);
static dgu* fqs(dgu* fqt);
static Array_<uint8_t>* fqv(dgu* fqw);
static dgu* frh(dgu* fri, Array_<uint8_t>* frj, int64_t* frk);
static gb* dhc(int64_t frm /*kind*/, Array_<char16_t>* frn /*parentClass*/);
static gc* dhn();
static ge* dhu(fx* fur /*block_*/);
static gd* dms();
static void dmx(gd* fya /*ast*/, int64_t fyb /*typeId*/, ga* fyc /*pos*/);
static void dod();
static void dok(fx* fzv /*ast*/, int64_t fzw /*typeId*/, ga* fzx /*pos*/);
static gd* due(gd* fzy /*ast*/);
static bool dze(gc* gbf /*type1*/, gc* gbg /*type2*/, bool gbh /*strict*/);
static bxl* dzh(gd* gdl /*enumElement*/, gc* gdm /*type*/);
static void dzw(ul* gdp /*ast*/);
static void dzy(bsu* gdy /*ast*/);
static void eaa(bso* gfa /*ast*/, bso* gfb /*parent*/);
static gd* ebe(ebf* gfg /*ast*/);
static void ggx(ebf* ggy);
static ebf* ggz(ebf* gha);
static Array_<uint8_t>* ghc(ebf* ghd);
static ebf* ghs(ebf* ght, Array_<uint8_t>* ghu, int64_t* ghv);
static gd* ebh(bzx* ghx /*ast*/);
static gd* ebj(ebk* gqk /*ast*/);
static void grk(ebk* grl);
static ebk* grm(ebk* grn);
static Array_<uint8_t>* grp(ebk* grq);
static ebk* gsg(ebk* gsh, Array_<uint8_t>* gsi, int64_t* gsj);
static gd* ebm(ebn* gsl /*ast*/);
static void gsv(ebn* gsw);
static ebn* gsx(ebn* gsy);
static Array_<uint8_t>* gta(ebn* gtb);
static ebn* gtp(ebn* gtq, Array_<uint8_t>* gtr, int64_t* gts);
static gd* ebp(ebq* gtu /*ast*/);
static void gut(ebq* guu);
static ebq* guv(ebq* guw);
static Array_<uint8_t>* guy(ebq* guz);
static ebq* gvo(ebq* gvp, Array_<uint8_t>* gvq, int64_t* gvr);
static gd* ebs(ebt* gvt /*ast*/);
static void gyz(ebt* gza);
static ebt* gzb(ebt* gzc);
static Array_<uint8_t>* gze(ebt* gzf);
static ebt* gzv(ebt* gzw, Array_<uint8_t>* gzx, int64_t* gzy);
static gd* ebv(ebw* haa /*ast*/);
static void hal(ebw* ham);
static ebw* han(ebw* hao);
static Array_<uint8_t>* haq(ebw* har);
static ebw* hbg(ebw* hbh, Array_<uint8_t>* hbi, int64_t* hbj);
static gd* eby(ebz* hbl /*ast*/);
static void hbv(ebz* hbw);
static ebz* hbx(ebz* hby);
static Array_<uint8_t>* hca(ebz* hcb);
static ebz* hcr(ebz* hcs, Array_<uint8_t>* hct, int64_t* hcu);
static gd* ecb(bwt* hcw /*ast*/);
static gd* ecd(ece* hfd /*ast*/);
static void hfq(ece* hfr);
static ece* hfs(ece* hft);
static Array_<uint8_t>* hfv(ece* hfw);
static ece* hgl(ece* hgm, Array_<uint8_t>* hgn, int64_t* hgo);
static gd* ecg(ech* hgq /*ast*/);
static void hkm(ech* hkn);
static ech* hko(ech* hkp);
static Array_<uint8_t>* hkr(ech* hks);
static ech* hli(ech* hlj, Array_<uint8_t>* hlk, int64_t* hll);
static gd* ecj(bxm* hln /*ast*/);
static gd* ecl(bxl* hlq /*ast*/);
static gd* ecn(eco* hlt /*ast*/);
static void hlw(eco* hlx);
static eco* hly(eco* hlz);
static Array_<uint8_t>* hmb(eco* hmc);
static eco* hmq(eco* hmr, Array_<uint8_t>* hms, int64_t* hmt);
static gd* ecq(ecr* hmv /*ast*/);
static void hmy(ecr* hmz);
static ecr* hna(ecr* hnb);
static Array_<uint8_t>* hnd(ecr* hne);
static ecr* hns(ecr* hnt, Array_<uint8_t>* hnu, int64_t* hnv);
static gd* ect(ecu* hnx /*ast*/);
static void hoa(ecu* hob);
static ecu* hoc(ecu* hod);
static Array_<uint8_t>* hof(ecu* hog);
static ecu* hou(ecu* hov, Array_<uint8_t>* how, int64_t* hox);
static gd* ecw(ecx* hoz /*ast*/);
static void hrh(ecx* hri);
static ecx* hrj(ecx* hrk);
static Array_<uint8_t>* hrm(ecx* hrn);
static ecx* hsb(ecx* hsc, Array_<uint8_t>* hsd, int64_t* hse);
static void hsg(eeo* hsh);
static eeo* hsi(eeo* hsj);
static Array_<uint8_t>* hsl(eeo* hsm);
static eeo* hsy(eeo* hsz, Array_<uint8_t>* hta, int64_t* htb);
static void eep(bgi* htd /*ast*/);
static ge* efn(cld* htg /*ast*/, gc* hth /*retType*/, fw* hti /*parentFunc*/);
static ge* efp(clh* hut /*ast*/, gc* huu /*retType*/, fw* huv /*parentFunc*/);
static ge* efr(cll* hvx /*ast*/, gc* hvy /*retType*/, fw* hvz /*parentFunc*/);
static ge* eft(clp* hwg /*ast*/, gc* hwh /*retType*/, fw* hwi /*parentFunc*/);
static ge* efv(bvq* hwz /*ast*/, gc* hxa /*retType*/, fw* hxb /*parentFunc*/);
static ge* efx(clu* hxu /*ast*/);
static ge* efz(bvs* hxz /*ast*/, gc* hya /*retType*/, fw* hyb /*parentFunc*/);
static ge* egb(clz* hye /*ast*/, gc* hyf /*retType*/);
static ge* egd(bwq* hys /*ast*/);
static ge* egf(ge* iac /*ast*/, gc* iad /*retType*/, fw* iae /*parentFunc*/);
static ge* egh(ge* iaj /*ast*/, gc* iak /*retType*/, fw* ial /*parentFunc*/);
static ge* egj(cmi* iaq /*ast*/);
static bool egp(gc* iax /*type*/);
static void iay(egu* iaz);
static egu* iba(egu* ibb);
static Array_<uint8_t>* ibd(egu* ibe);
static egu* ibp(egu* ibq, Array_<uint8_t>* ibr, int64_t* ibs);
template<typename T_, typename C_> static void ehi(T_ ibu /*me_*/, Array_<int64_t>* ibv /*type*/, C_ ibw /*value*/);
static char16_t ehm(char16_t ibx /*me_*/, int64_t iby /*n*/);
static void eou(gd* ibz /*ast*/);
static bool err(gc* idl /*type*/);
static Array_<char16_t>* eyq(gc* idm /*type*/);
static void fhj(gd* ido /*ast*/);
static bool fjp(gc* ifa /*type*/);
static Array_<char16_t>* fkq(gc* ifg /*type*/);
template<typename T_, typename R_> static R_ fne(T_ ifi /*me_*/, Array_<int64_t>* ifj /*type*/);
static bool fph(Array_<char16_t>* ifk /*name*/);
static ge* fve(int64_t ifv /*row*/, int64_t ifw /*col*/, fx* ifx /*block_*/);
static ge* fvg();
static ge* fvi();
static ge* fvk();
static ge* fvm();
static ge* fvo();
static ge* fvq();
static ge* fvs();
static ge* fvu(int64_t iib /*row*/, int64_t iic /*col*/, fx* iid /*block_*/);
static ge* fvw(int64_t iih /*row*/, int64_t iii /*col*/, fx* iij /*block_*/);
static ge* fvy(int64_t iin /*row*/, int64_t iio /*col*/);
static ge* fwa(int64_t ijh /*row*/, int64_t iji /*col*/, fx* ijj /*block_*/);
static ge* fwc(int64_t ikh /*row*/, int64_t iki /*col*/, fx* ikj /*block_*/);
static ge* fwe();
static ge* fwg(int64_t ilh /*row*/, int64_t ili /*col*/);
static ge* fwi(int64_t imb /*row*/, int64_t imc /*col*/);
static ge* fwk(int64_t ims /*row*/, int64_t imt /*col*/, fx* imu /*block_*/);
static ge* fwm(int64_t inz /*row*/, int64_t ioa /*col*/, fx* iob /*block_*/);
static ge* fwo();
static ge* fwq();
static ge* fws();
static ge* fwu();
static ge* fww();
static ge* fwy();
static ge* fxa();
static gd* fxf();
static char16_t fyp();
static uint64_t gdo(ecr* iqb /*ast*/, bsu* iqc /*enum_*/);
static void gdw(ul* iql /*ast*/, fw** iqm /*dtor*/, fw** iqn /*copy*/, fw** iqo /*toBin*/, fw** iqp /*fromBin*/);
static void gdx(ul* iut /*ast*/, fw* iuu /*dtor*/, fw* iuv /*copy*/, fw* iuw /*toBin*/, fw* iux /*fromBin*/);
static bool gfs(gc* izy /*type*/);
static bool ggi(gc* izz /*type*/);
static bool gji(gc* jaa /*type*/, bool jab /*lessOrGreater*/);
static int64_t glc(Array_<char16_t>* jag /*s1*/, Array_<char16_t>* jah /*s2*/);
static uint64_t goj(int64_t jan /*size*/, uint64_t jao /*n*/);
static Array_<char16_t>* hek(gc* jav /*type*/);
static bool hhy(Array_<char16_t>** jct /*member*/, gc* jcu /*type*/);
static gd* hzs(List_<ge*>* jhb /*stats*/, gd* jhc /*ast*/, ga* jhd /*pos*/);
static void icd(ebf* jhp /*ast*/);
static void icf(bzx* jhy /*ast*/);
static void ich(ebk* jjv /*ast*/);
static void icj(ebn* jjw /*ast*/);
static void icl(ebq* jkn /*ast*/);
static void icn(ebt* jkr /*ast*/);
static void icp(ebw* jlh /*ast*/);
static void icr(ebz* jli /*ast*/);
static void ict(bwt* jlj /*ast*/);
static void icv(ece* jnf /*ast*/);
static void icx(ech* jng /*ast*/);
static void icz(bxm* jnp /*ast*/);
static void idb(bxl* jnq /*ast*/);
static void idd(eco* jof /*ast*/);
static void idf(ecu* jop /*ast*/);
static void idh(ecx* jov /*ast*/);
static void idj(gd* joy /*ast*/);
static void ids(ebf* jpr /*ast*/);
static void idu(bzx* jqq /*ast*/);
static void idw(ebk* jtb /*ast*/);
static void idy(ebn* jtc /*ast*/);
static void iea(ebq* jts /*ast*/);
static void iec(ebt* juo /*ast*/);
static void iee(ebw* jvp /*ast*/);
static void ieg(ebz* jvq /*ast*/);
static void iei(bwt* jvr /*ast*/);
static void iek(ece* jxv /*ast*/);
static void iem(ech* jxz /*ast*/);
static void ieo(bxm* jyi /*ast*/);
static void ieq(bxl* jyj /*ast*/);
static void ies(eco* jyy /*ast*/);
static void ieu(ecu* jzi /*ast*/);
static void iew(ecx* jzn /*ast*/);
static void iey(gd* jzu /*ast*/);
template<typename T_, typename C_> static int64_t ifu(T_ kao /*me_*/, Array_<int64_t>* kap /*type*/, C_ kaq /*item*/);
static void kar(ihc* kas);
static ihc* kat(ihc* kau);
static Array_<uint8_t>* kaw(ihc* kax);
static ihc* kbj(ihc* kbk, Array_<uint8_t>* kbl, int64_t* kbm);
static void kbo(ihg* kbp);
static ihg* kbq(ihg* kbr);
static Array_<uint8_t>* kbt(ihg* kbu);
static ihg* kcg(ihg* kch, Array_<uint8_t>* kci, int64_t* kcj);
static void kcl(ihj* kcm);
static ihj* kcn(ihj* kco);
static Array_<uint8_t>* kcq(ihj* kcr);
static ihj* kdd(ihj* kde, Array_<uint8_t>* kdf, int64_t* kdg);
static void kdi(ihm* kdj);
static ihm* kdk(ihm* kdl);
static Array_<uint8_t>* kdn(ihm* kdo);
static ihm* kea(ihm* keb, Array_<uint8_t>* kec, int64_t* ked);
static void kef(ihp* keg);
static ihp* keh(ihp* kei);
static Array_<uint8_t>* kek(ihp* kel);
static ihp* kex(ihp* key, Array_<uint8_t>* kez, int64_t* kfa);
static void ihs(fx* kfc /*ast*/);
static void iht(fx* kff /*ast*/);
static bvs* ihv(ge** kfk /*outStat*/, int64_t* kfl /*outTypeId*/, int64_t kfm /*typeId*/, fx* kfn /*block_*/);
static gb* iiq(ga* khn /*pos*/);
static bxl* ilp(ga* khp /*pos*/, int64_t khq /*kind*/, uint64_t khr /*value*/);
static gd* ipi();
static fw* ity(ul* kih /*class_*/, Array_<char16_t>* kii /*name*/);
static ech* ivj(ul* kiz /*class_*/, gb* kja /*arg*/, Array_<char16_t>* kjb /*name*/);
static Array_<char16_t>* jpz(gc* kjh /*type*/);
static gd* khw();
static List_<int64_t>* kjl(gc* kkf /*type*/);
static gd* kju();
static void kkh(gc* klx /*type*/, List_<int64_t>* kly /*output*/);
static gd* kkj();
static gd* knh();
static gd* knt();
static gd* koi();
static gd* koz();
static gd* kqi();
static gd* kqt();
static eco* ktl(ga* kwr /*pos*/, Array_<char16_t>* kws /*value*/);
static char16_t kts(char16_t kwy /*c*/);
static void kxq(kvv* kxr);
static kvv* kxs(kvv* kxt);
static Array_<uint8_t>* kxv(kvv* kxw);
static kvv* kyh(kvv* kyi, Array_<uint8_t>* kyj, int64_t* kyk);
static gd* kvz(int64_t kym /*row*/, int64_t kyn /*col*/, char16_t kyo /*c*/);
static ecu* kwi(ga* lby /*pos*/, double lbz /*value*/);
static double lan(Array_<char16_t>* lcd /*me_*/, bool* lce /*success*/);
static uint64_t lbi(Array_<char16_t>* lcf /*me_*/, bool* lcg /*success*/);
static int64_t classTable_[152];
static int64_t argc_;
static char** argv_;
static int64_t m;
static bool s;
static bool x;
static Array_<char16_t>* y;
static bool af;
static Dict_<Array_<char16_t>*, fx*>* ah;
static Dict_<Array_<char16_t>*, int64_t>* ai;
static Queue_<fw*>* aj;
static Queue_<ul*>* ak;
static Array_<char16_t>* al;
static List_<Array_<char16_t>*>* am;
static List_<Array_<char16_t>*>* an;
static List_<Array_<char16_t>*>* ao;
static List_<Array_<char16_t>*>* ap;
static List_<un*>* aq;
static List_<gb*>* ar;
static List_<gb*>* as;
static List_<Array_<char16_t>*>* at;
static Array_<char16_t>* au;
static Array_<char16_t>* av;
static Array_<char16_t>* aw;
static Dict_<Array_<char16_t>*, bool>* ax;
static Array_<char16_t>* ay;
static Array_<char16_t>* az;
static Array_<char16_t>* ba;
static Array_<Array_<char16_t>*>* bb;
static Dict_<Array_<char16_t>*, fx*>* bc;
static Dict_<Array_<char16_t>*, fx*>* bd;
static auz* be;
static Array_<char16_t>* bf;
static Stack_<fx*>* bg;
static List_<avl*>* bh;
static Queue_<fw*>* bi;
static Queue_<ul*>* bj;
static Array_<char16_t>* bk;
static List_<Array_<char16_t>*>* bl;
static List_<va*>* bm;
static List_<gb*>* bn;
static List_<gb*>* bo;
static bool ct;
static bool dp;
static int64_t ec;
static int64_t en;
static int64_t fp;
static int64_t uo;
static int64_t avc;
static int64_t avd;
static char16_t ave;
static char16_t avf;
static bool avg;
static int64_t avh;
fz::fz(): Class_(){
Y = 0;
kx(this);
}
int64_t fz::cmp_(Class_* t){
fz* u = reinterpret_cast<fz*>(t);
return lb(this, u);
}
Class_* fz::copy_(Class_* t){
return le(this);
}
fy::fy(): fz(), lw(){
Y = 2;
}
Class_* fy::copy_(Class_* t){
return lt(this);
}
ga::ga(): fz(), hk(), hl(), hm(){
Y = 6;
}
Class_* ga::copy_(Class_* t){
return mo(this);
}
fx::fx(): fy(), ne(), nf(), ng(), nh(), ni(), nj(), nk(), no(){
Y = 4;
}
int64_t fx::cmp_(Class_* t){
fx* u = reinterpret_cast<fx*>(t);
return mg(this, u);
}
Class_* fx::copy_(Class_* t){
return nl(this);
}
gc::gc(): fx(){
Y = 12;
}
Class_* gc::copy_(Class_* t){
return oi(this);
}
gd::gd(): fx(), pf(), pj(){
Y = 14;
}
Class_* gd::copy_(Class_* t){
return pg(this);
}
gb::gb(): fx(), qk(), ql(), qf(), qg(){
Y = 10;
}
Class_* gb::copy_(Class_* t){
return qh(this);
}
ge::ge(): fx(){
Y = 16;
}
Class_* ge::copy_(Class_* t){
return rj(this);
}
fw::fw(): fx(), sm(), sf(), sg(), sh(), si(){
Y = 8;
}
Class_* fw::copy_(Class_* t){
return sj(this);
}
gj::gj(): fz(), gk(){
Y = 18;
}
Class_* gj::copy_(Class_* t){
return tl(this);
}
kl::kl(): fz(), km(){
Y = 20;
}
int64_t kl::cmp_(Class_* t){
kl* u = reinterpret_cast<kl*>(t);
return atm(this, u);
}
Class_* kl::copy_(Class_* t){
return atu(this);
}
um::um(): fz(), azq(), azr(), azl(), azm(){
Y = 24;
}
Class_* um::copy_(Class_* t){
return azn(this);
}
ul::ul(): fx(), bag(){
Y = 22;
}
Class_* ul::copy_(Class_* t){
return bah(this);
}
un::un(): fz(), bbe(), bbf(){
Y = 26;
}
Class_* un::copy_(Class_* t){
return bbg(this);
}
va::va(): fz(), bif(), big(){
Y = 28;
}
Class_* va::copy_(Class_* t){
return bih(this);
}
auz::auz(): fz(), bpa(), bqr(), bqs(), bqt(){
Y = 30;
}
Class_* auz::copy_(Class_* t){
return bqo(this);
}
avl::avl(): fz(), awk(), axf(){
Y = 34;
}
Class_* avl::copy_(Class_* t){
return btg(this);
}
avk::avk(): fx(), aza(), awd(){
Y = 32;
}
Class_* avk::copy_(Class_* t){
return btv(this);
}
bby::bby(): fy(), bdy(), cav(), cay(), bft(), bca(), cbb(), cbc(){
Y = 36;
}
Class_* bby::copy_(Class_* t){
return cbf(this);
}
bgi::bgi(): fx(), bgk(){
Y = 38;
}
Class_* bgi::copy_(Class_* t){
return coi(this);
}
bho::bho(): fz(), cpp(){
Y = 40;
}
Class_* bho::copy_(Class_* t){
return cre(this);
}
bix::bix(): fy(), bjn(), crx(), biz(){
Y = 42;
}
Class_* bix::copy_(Class_* t){
return csb(this);
}
bsl::bsl(): fx(), btb(){
Y = 44;
}
Class_* bsl::copy_(Class_* t){
return dii(this);
}
bso::bso(): fx(), dje(){
Y = 46;
}
Class_* bso::copy_(Class_* t){
return djh(this);
}
bsu::bsu(): fx(), dma(){
Y = 48;
}
Class_* bsu::copy_(Class_* t){
return dnc(this);
}
bvr::bvr(): ge(), bwb(){
Y = 50;
}
Class_* bvr::copy_(Class_* t){
return don(this);
}
bvs::bvs(): bvr(), bwe(){
Y = 54;
}
Class_* bvs::copy_(Class_* t){
return dpk(this);
}
bvu::bvu(): fz(), bxq(), bxv(){
Y = 58;
}
Class_* bvu::copy_(Class_* t){
return dqi(this);
}
bvt::bvt(): ge(), bxd(), bxg(){
Y = 56;
}
Class_* bvt::copy_(Class_* t){
return dqx(this);
}
bvq::bvq(): bvr(), bwf(), bwg(), bwj(){
Y = 52;
}
Class_* bvq::copy_(Class_* t){
return drv(this);
}
bvz::bvz(): gc(), bwa(){
Y = 60;
}
Class_* bvz::copy_(Class_* t){
return dsv(this);
}
bwq::bwq(): ge(), bxa(){
Y = 62;
}
Class_* bwq::copy_(Class_* t){
return duh(this);
}
bwu::bwu(): fz(), byi(), bye(), byf(){
Y = 66;
}
Class_* bwu::copy_(Class_* t){
return dve(this);
}
bwt::bwt(): gd(), bwz(), bww(){
Y = 64;
}
Class_* bwt::copy_(Class_* t){
return dvu(this);
}
bxm::bxm(): gd(){
Y = 68;
}
Class_* bxm::copy_(Class_* t){
return dwx(this);
}
bxl::bxl(): bxm(), bxn(){
Y = 70;
}
Class_* bxl::copy_(Class_* t){
return dxv(this);
}
bzx::bzx(): gd(), bzy(), cab(), cac(){
Y = 72;
}
Class_* bzx::copy_(Class_* t){
return edf(this);
}
ccf::ccf(): gc(){
Y = 74;
}
Class_* ccf::copy_(Class_* t){
return eid(this);
}
cce::cce(): ccf(), ccg(){
Y = 76;
}
Class_* cce::copy_(Class_* t){
return eiz(this);
}
cci::cci(): gc(), ccj(){
Y = 78;
}
Class_* cci::copy_(Class_* t){
return ejw(this);
}
ccn::ccn(): fz(), cdc(), cde(){
Y = 82;
}
Class_* ccn::copy_(Class_* t){
return ekt(this);
}
ccm::ccm(): ccf(), elm(), eli(), ccu(), ccp(){
Y = 80;
}
Class_* ccm::copy_(Class_* t){
return elj(this);
}
cdj::cdj(): ccf(), cdm(), cdo(){
Y = 84;
}
Class_* cdj::copy_(Class_* t){
return emk(this);
}
cdu::cdu(): ccf(), cdv(), cdw(){
Y = 86;
}
Class_* cdu::copy_(Class_* t){
return eni(this);
}
cle::cle(): ge(), epa(), epb(){
Y = 90;
}
Class_* cle::copy_(Class_* t){
return epj(this);
}
cld::cld(): bvr(), eop(), eor(), eox(), epd(){
Y = 88;
}
Class_* cld::copy_(Class_* t){
return eqh(this);
}
cli::cli(): ge(), ery(), esm(){
Y = 94;
}
Class_* cli::copy_(Class_* t){
return ets(this);
}
clh::clh(): bvr(), erq(), eru(), eso(){
Y = 92;
}
Class_* clh::copy_(Class_* t){
return euq(this);
}
clm::clm(): bvr(){
Y = 96;
}
Class_* clm::copy_(Class_* t){
return ewn(this);
}
cll::cll(): clm(), evt(), ewb(), evv(){
Y = 98;
}
Class_* cll::copy_(Class_* t){
return exk(this);
}
clp::clp(): clm(), eys(), eyr(), eyt(), ezb(){
Y = 100;
}
Class_* clp::copy_(Class_* t){
return ezi(this);
}
clu::clu(): ge(), fbs(){
Y = 102;
}
Class_* clu::copy_(Class_* t){
return fbv(this);
}
clz::clz(): ge(), fcy(){
Y = 104;
}
Class_* clz::copy_(Class_* t){
return fdd(this);
}
cmi::cmi(): ge(), fem(){
Y = 106;
}
Class_* cmi::copy_(Class_* t){
return fep(this);
}
dgu::dgu(): ccf(){
Y = 108;
}
Class_* dgu::copy_(Class_* t){
return fqs(this);
}
ebf::ebf(): gd(), gfp(), gfj(){
Y = 110;
}
Class_* ebf::copy_(Class_* t){
return ggz(this);
}
ebk::ebk(): gd(), gqn(), gqq(), gqt(){
Y = 112;
}
Class_* ebk::copy_(Class_* t){
return grm(this);
}
ebn::ebn(): gd(), gso(){
Y = 114;
}
Class_* ebn::copy_(Class_* t){
return gsx(this);
}
ebq::ebq(): gd(), gtz(), gui(){
Y = 116;
}
Class_* ebq::copy_(Class_* t){
return guv(this);
}
ebt::ebt(): gd(), gwe(), gvw(), gvz(){
Y = 118;
}
Class_* ebt::copy_(Class_* t){
return gzb(this);
}
ebw::ebw(): gd(), had(), haj(){
Y = 120;
}
Class_* ebw::copy_(Class_* t){
return han(this);
}
ebz::ebz(): gd(), hbo(), hbt(), hbu(){
Y = 122;
}
Class_* ebz::copy_(Class_* t){
return hbx(this);
}
ece::ece(): gd(), hfg(), hfl(){
Y = 124;
}
Class_* ece::copy_(Class_* t){
return hfs(this);
}
ech::ech(): gd(), hdo(), hhe(), hhr(){
Y = 126;
}
Class_* ech::copy_(Class_* t){
return hko(this);
}
eco::eco(): bxm(), gld(){
Y = 128;
}
Class_* eco::copy_(Class_* t){
return hly(this);
}
ecr::ecr(): bxm(), gjp(){
Y = 130;
}
Class_* ecr::copy_(Class_* t){
return hna(this);
}
ecu::ecu(): bxm(), ggf(){
Y = 132;
}
Class_* ecu::copy_(Class_* t){
return hoc(this);
}
ecx::ecx(): gd(), hdx(){
Y = 134;
}
Class_* ecx::copy_(Class_* t){
return hrj(this);
}
eeo::eeo(): ge(), eeq(){
Y = 136;
}
Class_* eeo::copy_(Class_* t){
return hsi(this);
}
egu::egu(): gc(){
Y = 138;
}
Class_* egu::copy_(Class_* t){
return iba(this);
}
ihc::ihc(): ge(), ihd(){
Y = 140;
}
Class_* ihc::copy_(Class_* t){
return kat(this);
}
ihg::ihg(): ge(), ihh(){
Y = 142;
}
Class_* ihg::copy_(Class_* t){
return kbq(this);
}
ihj::ihj(): ge(), ihk(){
Y = 144;
}
Class_* ihj::copy_(Class_* t){
return kcn(this);
}
ihm::ihm(): ge(), ihn(){
Y = 146;
}
Class_* ihm::copy_(Class_* t){
return kdk(this);
}
ihp::ihp(): ge(), ihq(){
Y = 148;
}
Class_* ihp::copy_(Class_* t){
return keh(this);
}
kvv::kvv(): gc(){
Y = 150;
}
Class_* kvv::copy_(Class_* t){
return kxs(this);
}
// $
static void a(){
int64_t c = 0; // $
try{
try{
(e)();
(f)();
(g)();
(i)();
(j)();
}catch(int64_t c){
if((0LL) <= c && c <= (4294967295LL)){
(l)((c));
}
else{
throw;
}
}
}
catch(...){
(i)();
(j)();
throw;
}
}
// _init
static void e(){
}
// _initVars
static void f(){
(m) = (1LL);
}
// main
static void g(){
if(!((o)())){
(q)((1LL));
return;
}
if(s){
(u)((((new Array_<char16_t>(28, u'\u004B', u'\u0075', u'\u0069', u'\u006E', u'\u0020', u'\u0050', u'\u0072', u'\u006F', u'\u0067', u'\u0072', u'\u0061', u'\u006D', u'\u006D', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u004C', u'\u0061', u'\u006E', u'\u0067', u'\u0075', u'\u0061', u'\u0067', u'\u0065', u'\u0020', u'\u0076', u'\u002E'))->Cat(v<int64_t>((2019LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<int64_t>((10LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<int64_t>((17LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))))));
(u)((new Array_<char16_t>(14, u'\u0028', u'\u0043', u'\u0029', u'\u004B', u'\u0075', u'\u0069', u'\u006E', u'\u0061', u'\u002D', u'\u0063', u'\u0068', u'\u0061', u'\u006E', u'\u000A')));
(q)((0LL));
return;
}
if((x) || (eqAddr_((y), (nullptr)))){
(u)((new Array_<char16_t>(128, u'\u0055', u'\u0073', u'\u0061', u'\u0067', u'\u0065', u'\u003A', u'\u0020', u'\u006B', u'\u0075', u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0020', u'\u005B', u'\u002D', u'\u0069', u'\u0020', u'\u0069', u'\u006E', u'\u0070', u'\u0075', u'\u0074', u'\u002E', u'\u006B', u'\u006E', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u006F', u'\u0020', u'\u006F', u'\u0075', u'\u0074', u'\u0070', u'\u0075', u'\u0074', u'\u002E', u'\u006B', u'\u006E', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0073', u'\u0020', u'\u0027', u'\u0073', u'\u0079', u'\u0073', u'\u0027', u'\u0020', u'\u0064', u'\u0069', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006F', u'\u0072', u'\u0079', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0063', u'\u0020', u'\u0069', u'\u0063', u'\u006F', u'\u006E', u'\u002E', u'\u0069', u'\u0063', u'\u006F', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0065', u'\u0020', u'\u0065', u'\u006E', u'\u0076', u'\u0069', u'\u0072', u'\u006F', u'\u006E', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0061', u'\u0020', u'\u0061', u'\u0070', u'\u0070', u'\u0063', u'\u006F', u'\u0064', u'\u0065', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0072', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0068', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0076', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0071', u'\u005D', u'\u000A')));
(q)((0LL));
return;
}
if((ab)()){
(ad)((196609LL), (nullptr), (nullptr));
(q)((0LL));
return;
}
if(!(af)){
(ad)((196610LL), (nullptr), (nullptr));
}
(q)((1LL));
}
// _finVars
static void i(){
(ah) = (nullptr);
(ai) = (nullptr);
(aj) = (nullptr);
(ak) = (nullptr);
(al) = (nullptr);
(am) = (nullptr);
(an) = (nullptr);
(ao) = (nullptr);
(ap) = (nullptr);
(aq) = (nullptr);
(ar) = (nullptr);
(as) = (nullptr);
(at) = (nullptr);
(y) = (nullptr);
(au) = (nullptr);
(av) = (nullptr);
(aw) = (nullptr);
(ax) = (nullptr);
(ay) = (nullptr);
(az) = (nullptr);
(ba) = (nullptr);
(bb) = (nullptr);
(bc) = (nullptr);
(bd) = (nullptr);
(be) = (nullptr);
(bf) = (nullptr);
(bg) = (nullptr);
(bh) = (nullptr);
(bi) = (nullptr);
(bj) = (nullptr);
(bk) = (nullptr);
(bl) = (nullptr);
(bm) = (nullptr);
(bn) = (nullptr);
(bo) = (nullptr);
}
// _fin
static void j(){
}
// _err
static void l(int64_t bp /*excpt*/){
}
// acquireOption
static bool o(){
Array_<Array_<char16_t>*>* bq = nullptr; // cmdLines
int64_t bv = 0;
Array_<char16_t>* bx = nullptr; // cmdLine
char16_t cc = 0;
Array_<char16_t>* cx = nullptr; // envStr
Array_<char16_t>* dk = nullptr; // appCodeStr
Array_<char16_t>* dt = nullptr; // extra
Array_<char16_t>* ef = nullptr;
bool er = false; // success
int64_t bw = 0;
(bq) = ((br)());
(ax) = (new Dict_<Array_<char16_t>*, bool>());
for(bv = (0LL), bw = (((bq)->Len()) - (1LL)); bv <= bw; bv += (1LL)){
(bx) = ((bq)->At(bv));
if((((bx)->Len()) == (2LL)) && (((bx)->At(0LL)) == (u'\u002D'))){
switch((bx)->At(1LL)){
case u'\u0069':
if(!((cf)((&y), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u006F':
if(!((cf)((&au), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0073':
if(!((cf)((&av), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0063':
if(!((cf)((&aw), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0072':
if(!((cs)((&ct), (cc)))){
return false;
}
break;
case u'\u0065':
if(!((cf)((&cx), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0068':
if(!((cs)((&x), (cc)))){
return false;
}
break;
case u'\u0076':
if(!((cs)((&s), (cc)))){
return false;
}
break;
case u'\u0071':
if(!((cs)((&af), (cc)))){
return false;
}
break;
case u'\u0061':
if(!((cf)((&dk), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0064':
if(!((cs)((&dp), (cc)))){
return false;
}
break;
case u'\u0078':
if(!((cf)((&dt), (bq), (&bv), (cc)))){
return false;
}
dv<Dict_<Array_<char16_t>*, bool>*, Array_<char16_t>*, bool>((ax), (new Array_<int64_t>(1, (0LL))), (dt), (true));
break;
default:
(ad)((2LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(1, u'\u002D'))->Cat(v<char16_t>((cc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
break;
}
}
else{
(ad)((2LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
}
}
if(eqAddr_((y), (nullptr))){
return true;
}
if(eqAddr_((cx), (nullptr))){
(ec) = (0LL);
}
else{
ef = cx;
if(cmp_(ef, (new Array_<char16_t>(3, u'\u0063', u'\u0075', u'\u0069'))) == 0){
(ec) = (0LL);
}
else if(cmp_(ef, (new Array_<char16_t>(3, u'\u0077', u'\u006E', u'\u0064'))) == 0){
(ec) = (1LL);
}
else if(cmp_(ef, (new Array_<char16_t>(3, u'\u0077', u'\u0065', u'\u0062'))) == 0){
(ec) = (2LL);
}
else if(cmp_(ef, (new Array_<char16_t>(3, u'\u0063', u'\u0070', u'\u0070'))) == 0){
(ec) = (3LL);
}
else{(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(2, u'\u002D', u'\u0065')))));
}
}
if(eqAddr_((dk), (nullptr))){
(en) = ((eo)((1LL), (4294967295LL)));
}
else{
(en) = ((eq)((dk), (&er)));
if(!(er)){
(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(2, u'\u002D', u'\u0061')))));
return false;
}
}
if(eqAddr_((au), (nullptr))){
(au) = (((ew)((y)))->Cat(new Array_<char16_t>(3, u'\u006F', u'\u0075', u'\u0074')));
}
else{
(au) = ((ey)((au)));
}
if(eqAddr_((av), (nullptr))){
(av) = (new Array_<char16_t>(4, u'\u0073', u'\u0079', u'\u0073', u'\u002F'));
}
if(eqAddr_((aw), (nullptr))){
(aw) = ((av)->Cat(new Array_<char16_t>(11, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u002E', u'\u0069', u'\u0063', u'\u006F')));
}
(ay) = ((ew)((y)));
(az) = ((ey)(((fd)((y)))));
(ba) = ((ew)((au)));
if(cmp_(((ff)((y))), (new Array_<char16_t>(2, u'\u006B', u'\u006E'))) != 0){
(ad)((3LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (az))));
}
return true;
}
// exitCode
static void q(int64_t fh /*code*/){
if(((fh) < (0LL)) || ((4294967295LL) < (fh))){
throw 3910598662LL;
}
}
// print
static void u(Array_<char16_t>* fm /*str*/){
std::u16string s_ = fm->B;
const std::string& t_ = utf16ToUtf8_(s_);
std::cout << t_ << std::flush;
}
// _toStr
template<typename T_> static Array_<char16_t>* v(T_ fn /*me_*/, Array_<int64_t>* fo /*type*/){
return toStr_(fn);
}
// build
static bool ab(){
int64_t fq = 0; // beginTime
Dict_<Array_<char16_t>*, fx*>* fs = nullptr; // asts
fw* fu = nullptr; // entry
Array_<char16_t>* gh = nullptr; // resDir
gj* gi = nullptr; // resFiles
int64_t gr = 0;
(fp) = (0LL);
(fq) = ((fr)());
(ad)((196611LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((fr)()) - (fq))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
(fs) = ((ft)());
(ad)((196612LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((fr)()) - (fq))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
(fu) = ((fv)((fs)));
(ad)((196613LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((fr)()) - (fq))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
if((fp) > (0LL)){
return false;
}
(gh) = ((ay)->Cat(new Array_<char16_t>(4, u'\u0072', u'\u0065', u'\u0073', u'\u002F')));
(gi) = (new gj());
((gi)->gk) = (new List_<Array_<char16_t>*>());
if((gm)((gh))){
(go)((gh), (true), (gp), (gi));
}
switch(ec){
case 3LL:
if(!((gu)((fu), ((gi)->gk)))){
return false;
}
break;
case 2LL:
if(!((gy)((fu), ((gi)->gk)))){
return false;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(ad)((196614LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((fr)()) - (fq))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
return true;
}
// err
static void ad(int64_t hb /*id*/, ga* hc /*pos*/, Array_<Array_<char16_t>*>* hd /*args*/){
Array_<char16_t>* hg = nullptr; // msg
if(((hb) < (196608LL)) && ((fp) >= (100LL))){
return;
}
(hg) = ((hh)((hb), (hd)));
(u)(((v<uint32_t>((static_cast<uint32_t>(hb)), (new Array_<int64_t>(1, (0LL)))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u0020'))));
if(!eqAddr_((hc), (nullptr))){
(u)((((new Array_<char16_t>(1, u'\u005B'))->Cat(v<Array_<char16_t>*>(((hc)->hk), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003A', u'\u0020'))->Cat(v<int64_t>(((hc)->hl), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<int64_t>(((hc)->hm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u005D'))))));
}
(u)(((hg)->Cat(new Array_<char16_t>(1, u'\u000A'))));
if((hb) < (196608LL)){
(fp) = ((fp) + (1LL));
}
}
// cmdLine
static Array_<Array_<char16_t>*>* br(){
Array_<Array_<char16_t>*>* a_ = new Array_<Array_<char16_t>*>();
a_->L = argc_;
a_->B = new Array_<char16_t>*[static_cast<size_t>(argc_)];
for (int64_t i_ = 0; i_ < argc_; i_++){
std::string s_ = argv_[i_];
const std::u16string t_ = utf8ToUtf16_(s_);
a_->B[i_] = new Array_<char16_t>();
a_->B[i_]->L = static_cast<int64_t>(t_.size());
a_->B[i_]->B = new char16_t[t_.size() + 1];
std::memcpy(a_->B[i_]->B, t_.c_str(), sizeof(char16_t) * (t_.size() + 1));
}
return a_;
}
// getArg1
static bool cf(Array_<char16_t>** hq /*out*/, Array_<Array_<char16_t>*>* hr /*cmdLines*/, int64_t* hs /*idx*/, char16_t ht /*option*/){
if((!eqAddr_((*hq), (nullptr))) || (((*hs) + (1LL)) >= ((hr)->Len()))){
(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(1, u'\u002D'))->Cat(v<char16_t>((ht), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
}
(*hq) = ((hr)->At((*hs) + (1LL)));
(*hs) = ((*hs) + (1LL));
return true;
}
// getArg0
static bool cs(bool* hx /*out*/, char16_t hy /*option*/){
if((*hx) != (false)){
(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(1, u'\u002D'))->Cat(v<char16_t>((hy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
}
(*hx) = (true);
return true;
}
// _addDict
template<typename T_, typename K_, typename V_> static void dv(T_ ib /*me_*/, Array_<int64_t>* ic /*type*/, K_ id /*key*/, V_ ie /*item*/){
ib->Add(id, ie);
}
// rnd
static int64_t eo(int64_t ig /*min*/, int64_t ih /*max*/){
return rnd_(ig, ih);
}
// _toInt
static int64_t eq(Array_<char16_t>* ii /*me_*/, bool* ij /*success*/){
std::u16string s_ = ii->B;
const std::string& t_ = utf16ToUtf8_(s_);
try{
size_t s_;
int64_t v_ = t_.size() > 2 && t_[0] == '0' && t_[1] == 'x' ? std::stoll(t_, &s_, 16) : std::stoull(t_, &s_);
if(s_ == t_.size()){
*ij = true;
return v_;
}else{
*ij = false;
return 0;
}
}catch(...){
*ij = false;
return 0;
}
}
// dir
static Array_<char16_t>* ew(Array_<char16_t>* ik /*path*/){
int64_t il = 0; // p
Array_<char16_t>* ir = nullptr; // r
int64_t iv = 0;
int64_t iw = 0;
if(!(!eqAddr_((ik), (nullptr)))){
throw 0xE9170000U;
}
(il) = (((ik)->Len()) - (1LL));
while((((il) >= (0LL)) && (((ik)->At(il)) != (u'\u002F'))) && (((ik)->At(il)) != (u'\u005C'))){
(il) = ((il) - (1LL));
}
if((il) < (0LL)){
return new Array_<char16_t>(2, u'\u002E', u'\u002F');
}
else{
(ir) = (newArray_<char16_t, Array_<char16_t>*>(1, ((il) + (1LL))));
for(iv = (0LL), iw = (il); iv <= iw; iv += (1LL)){
((ir)->At(iv)) = ((((ik)->At(iv)) == (u'\u005C')) ? (u'\u002F') : ((ik)->At(iv)));
}
return ir;
}
}
// delExt
static Array_<char16_t>* ey(Array_<char16_t>* ix /*path*/){
int64_t iy = 0; // p
Array_<char16_t>* jd = nullptr; // r
int64_t jh = 0;
int64_t ji = 0;
if(!(!eqAddr_((ix), (nullptr)))){
throw 0xE9170000U;
}
(iy) = (((ix)->Len()) - (1LL));
while(((((iy) >= (0LL)) && (((ix)->At(iy)) != (u'\u002F'))) && (((ix)->At(iy)) != (u'\u005C'))) && (((ix)->At(iy)) != (u'\u002E'))){
(iy) = ((iy) - (1LL));
}
if(((iy) < (0LL)) || (((ix)->At(iy)) != (u'\u002E'))){
return ix;
}
(jd) = (newArray_<char16_t, Array_<char16_t>*>(1, (iy)));
for(jh = (0LL), ji = ((iy) - (1LL)); jh <= ji; jh += (1LL)){
((jd)->At(jh)) = ((((ix)->At(jh)) == (u'\u005C')) ? (u'\u002F') : ((ix)->At(jh)));
}
return jd;
}
// fileName
static Array_<char16_t>* fd(Array_<char16_t>* jj /*path*/){
int64_t jk = 0; // p
Array_<char16_t>* jq = nullptr; // r
int64_t ju = 0;
int64_t jv = 0;
if(!(!eqAddr_((jj), (nullptr)))){
throw 0xE9170000U;
}
(jk) = (((jj)->Len()) - (1LL));
while((((jk) >= (0LL)) && (((jj)->At(jk)) != (u'\u002F'))) && (((jj)->At(jk)) != (u'\u005C'))){
(jk) = ((jk) - (1LL));
}
if((jk) < (0LL)){
return jj;
}
(jk) = ((jk) + (1LL));
(jq) = (newArray_<char16_t, Array_<char16_t>*>(1, (((jj)->Len()) - (jk))));
for(ju = (0LL), jv = ((((jj)->Len()) - (jk)) - (1LL)); ju <= jv; ju += (1LL)){
((jq)->At(ju)) = ((jj)->At((jk) + (ju)));
}
return jq;
}
// ext
static Array_<char16_t>* ff(Array_<char16_t>* jw /*path*/){
int64_t jx = 0; // p
Array_<char16_t>* ke = nullptr; // r
int64_t ki = 0;
int64_t kj = 0;
if(!(!eqAddr_((jw), (nullptr)))){
throw 0xE9170000U;
}
(jx) = (((jw)->Len()) - (1LL));
while(((((jx) >= (0LL)) && (((jw)->At(jx)) != (u'\u002F'))) && (((jw)->At(jx)) != (u'\u005C'))) && (((jw)->At(jx)) != (u'\u002E'))){
(jx) = ((jx) - (1LL));
}
if(((jw)->At(jx)) != (u'\u002E')){
return new Array_<char16_t>(0);
}
else{
(jx) = ((jx) + (1LL));
(ke) = (newArray_<char16_t, Array_<char16_t>*>(1, (((jw)->Len()) - (jx))));
for(ki = (0LL), kj = ((((jw)->Len()) - (jx)) - (1LL)); ki <= kj; ki += (1LL)){
((ke)->At(ki)) = ((jw)->At((jx) + (ki)));
}
return ke;
}
}
// sysTime
static int64_t fr(){
return static_cast<int64_t>(std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::system_clock::now().time_since_epoch()).count());
}
// parse
static Dict_<Array_<char16_t>*, fx*>* ft(){
kl* kk = nullptr; // endFlag
(bc) = (new Dict_<Array_<char16_t>*, fx*>());
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bc), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u005C'))->Cat(az)), (nullptr));
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bc), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (nullptr));
(kk) = (new kl());
((kk)->km) = (false);
while(!((kk)->km)){
((kk)->km) = (true);
(bd) = (new Dict_<Array_<char16_t>*, fx*>());
ko<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bc), (new Array_<int64_t>(1, (0LL))), (kp), (kk));
(bc) = (bd);
}
return bc;
}
// analyze
static fw* fv(Dict_<Array_<char16_t>*, fx*>* kq /*asts*/){
fw* kr = nullptr; // mainFunc
(ah) = (kq);
(kr) = ((ks)());
if(eqAddr_((kr), (nullptr))){
return nullptr;
}
ko<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((kq), (new Array_<int64_t>(1, (0LL))), (kv), (nullptr));
return (kw)((kr));
}
// ctor
static void kx(fz* ky /*me*/){
}
// _dtor
static void kz(fz* la /*me*/){
}
// cmp
static int64_t lb(fz* lc /*me*/, fz* ld /*t*/){
throw 3910598660LL;
}
// _copy
static fz* le(fz* lf /*me*/){
fz* lg = nullptr;
(lg) = (new fz());
return as_<fz>(classTable_, (lg), 0);
}
// _toBin
static Array_<uint8_t>* lh(fz* li /*me*/){
Array_<uint8_t>* lj = nullptr;
(lj) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
return lj;
}
// _fromBin
static fz* lk(fz* ll /*me*/, Array_<uint8_t>* lm /*bin*/, int64_t* ln /*idx*/){
fz* lo = nullptr;
(lo) = (new fz());
return lo;
}
// toStr
static Array_<char16_t>* lp(fz* lq /*me*/){
return new Array_<char16_t>(0);
}
// _dtor
static void lr(fy* ls){
}
// _copy
static fy* lt(fy* lu){
fy* lv = nullptr;
(lv) = (new fy());
((lv)->lw) = ((lu)->lw);
return as_<fy>(classTable_, (lv), 2);
}
// _toBin
static Array_<uint8_t>* lx(fy* ly){
Array_<uint8_t>* lz = nullptr;
(lz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(lz) = ((lz)->Cat(toBin_((ly)->lw)));
return lz;
}
// _fromBin
static fy* mb(fy* mc, Array_<uint8_t>* md, int64_t* me){
fy* mf = nullptr;
(mf) = (new fy());
((mf)->lw) = (fromBin_<int64_t>((md), (*me)));
return mf;
}
// cmp
static int64_t mg(fx* mh /*me*/, fx* mi /*t*/){
uint64_t mj = 0; // meAddr
uint64_t ml = 0; // tAddr
(mj) = ((mk)((mh)));
(ml) = ((mk)((mi)));
return ((mj) > (ml)) ? (1LL) : (((mj) < (ml)) ? (-1LL) : (0LL));
}
// _dtor
static void mm(ga* mn){
((mn)->hk) = (nullptr);
}
// _copy
static ga* mo(ga* mp){
ga* mq = nullptr;
(mq) = (new ga());
((mq)->hk) = (copy_((mp)->hk));
((mq)->hl) = ((mp)->hl);
((mq)->hm) = ((mp)->hm);
return as_<ga>(classTable_, (mq), 6);
}
// _toBin
static Array_<uint8_t>* mr(ga* ms){
Array_<uint8_t>* mt = nullptr;
(mt) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(mt) = ((mt)->Cat(toBin_((ms)->hk)));
(mt) = ((mt)->Cat(toBin_((ms)->hl)));
(mt) = ((mt)->Cat(toBin_((ms)->hm)));
return mt;
}
// _fromBin
static ga* mx(ga* my, Array_<uint8_t>* mz, int64_t* na){
ga* nb = nullptr;
(nb) = (new ga());
((nb)->hk) = (fromBin_<Array_<char16_t>*>((mz), (*na)));
((nb)->hl) = (fromBin_<int64_t>((mz), (*na)));
((nb)->hm) = (fromBin_<int64_t>((mz), (*na)));
return nb;
}
// _dtor
static void nc(fx* nd){
((nd)->ne) = (nullptr);
((nd)->nf) = (nullptr);
((nd)->ng) = (nullptr);
((nd)->nh) = (nullptr);
((nd)->ni) = (nullptr);
((nd)->nj) = (nullptr);
((nd)->nk) = (nullptr);
}
// _copy
static fx* nl(fx* nm){
fx* nn = nullptr;
(nn) = (new fx());
((nn)->ne) = (copy_((nm)->ne));
((nn)->nf) = (copy_((nm)->nf));
((nn)->ng) = (copy_((nm)->ng));
((nn)->nh) = (copy_((nm)->nh));
((nn)->ni) = (copy_((nm)->ni));
((nn)->nj) = (copy_((nm)->nj));
((nn)->nk) = (copy_((nm)->nk));
((nn)->no) = ((nm)->no);
((nn)->lw) = ((nm)->lw);
return as_<fx>(classTable_, (nn), 4);
}
// _toBin
static Array_<uint8_t>* np(fx* nq){
Array_<uint8_t>* nr = nullptr;
(nr) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(nr) = ((nr)->Cat(toBin_((nq)->ne)));
(nr) = ((nr)->Cat(toBin_((nq)->nf)));
(nr) = ((nr)->Cat(toBin_((nq)->ng)));
(nr) = ((nr)->Cat(toBin_((nq)->nh)));
(nr) = ((nr)->Cat(toBin_((nq)->ni)));
(nr) = ((nr)->Cat(toBin_((nq)->nj)));
(nr) = ((nr)->Cat(toBin_((nq)->nk)));
(nr) = ((nr)->Cat(toBin_((nq)->no)));
(nr) = ((nr)->Cat(toBin_((nq)->lw)));
return nr;
}
// _fromBin
static fx* ob(fx* oc, Array_<uint8_t>* od, int64_t* oe){
fx* of = nullptr;
(of) = (new fx());
((of)->ne) = (fromBin_<ga*>((od), (*oe)));
((of)->nf) = (fromBin_<Array_<char16_t>*>((od), (*oe)));
((of)->ng) = (fromBin_<fx*>((od), (*oe)));
((of)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((od), (*oe)));
((of)->ni) = (fromBin_<Array_<char16_t>*>((od), (*oe)));
((of)->nj) = (fromBin_<fx*>((od), (*oe)));
((of)->nk) = (fromBin_<fy*>((od), (*oe)));
((of)->no) = (fromBin_<bool>((od), (*oe)));
((of)->lw) = (fromBin_<int64_t>((od), (*oe)));
return of;
}
// _dtor
static void og(gc* oh){
((oh)->ne) = (nullptr);
((oh)->nf) = (nullptr);
((oh)->ng) = (nullptr);
((oh)->nh) = (nullptr);
((oh)->ni) = (nullptr);
((oh)->nj) = (nullptr);
((oh)->nk) = (nullptr);
}
// _copy
static gc* oi(gc* oj){
gc* ok = nullptr;
(ok) = (new gc());
((ok)->ne) = (copy_((oj)->ne));
((ok)->nf) = (copy_((oj)->nf));
((ok)->ng) = (copy_((oj)->ng));
((ok)->nh) = (copy_((oj)->nh));
((ok)->ni) = (copy_((oj)->ni));
((ok)->nj) = (copy_((oj)->nj));
((ok)->nk) = (copy_((oj)->nk));
((ok)->no) = ((oj)->no);
((ok)->lw) = ((oj)->lw);
return as_<gc>(classTable_, (ok), 12);
}
// _toBin
static Array_<uint8_t>* ol(gc* om){
Array_<uint8_t>* on = nullptr;
(on) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(on) = ((on)->Cat(toBin_((om)->ne)));
(on) = ((on)->Cat(toBin_((om)->nf)));
(on) = ((on)->Cat(toBin_((om)->ng)));
(on) = ((on)->Cat(toBin_((om)->nh)));
(on) = ((on)->Cat(toBin_((om)->ni)));
(on) = ((on)->Cat(toBin_((om)->nj)));
(on) = ((on)->Cat(toBin_((om)->nk)));
(on) = ((on)->Cat(toBin_((om)->no)));
(on) = ((on)->Cat(toBin_((om)->lw)));
return on;
}
// _fromBin
static gc* oy(gc* oz, Array_<uint8_t>* pa, int64_t* pb){
gc* pc = nullptr;
(pc) = (new gc());
((pc)->ne) = (fromBin_<ga*>((pa), (*pb)));
((pc)->nf) = (fromBin_<Array_<char16_t>*>((pa), (*pb)));
((pc)->ng) = (fromBin_<fx*>((pa), (*pb)));
((pc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((pa), (*pb)));
((pc)->ni) = (fromBin_<Array_<char16_t>*>((pa), (*pb)));
((pc)->nj) = (fromBin_<fx*>((pa), (*pb)));
((pc)->nk) = (fromBin_<fy*>((pa), (*pb)));
((pc)->no) = (fromBin_<bool>((pa), (*pb)));
((pc)->lw) = (fromBin_<int64_t>((pa), (*pb)));
return pc;
}
// _dtor
static void pd(gd* pe){
((pe)->pf) = (nullptr);
((pe)->ne) = (nullptr);
((pe)->nf) = (nullptr);
((pe)->ng) = (nullptr);
((pe)->nh) = (nullptr);
((pe)->ni) = (nullptr);
((pe)->nj) = (nullptr);
((pe)->nk) = (nullptr);
}
// _copy
static gd* pg(gd* ph){
gd* pi = nullptr;
(pi) = (new gd());
((pi)->pf) = (copy_((ph)->pf));
((pi)->pj) = ((ph)->pj);
((pi)->ne) = (copy_((ph)->ne));
((pi)->nf) = (copy_((ph)->nf));
((pi)->ng) = (copy_((ph)->ng));
((pi)->nh) = (copy_((ph)->nh));
((pi)->ni) = (copy_((ph)->ni));
((pi)->nj) = (copy_((ph)->nj));
((pi)->nk) = (copy_((ph)->nk));
((pi)->no) = ((ph)->no);
((pi)->lw) = ((ph)->lw);
return as_<gd>(classTable_, (pi), 14);
}
// _toBin
static Array_<uint8_t>* pk(gd* pl){
Array_<uint8_t>* pm = nullptr;
(pm) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(pm) = ((pm)->Cat(toBin_((pl)->pf)));
(pm) = ((pm)->Cat(toBin_((pl)->pj)));
(pm) = ((pm)->Cat(toBin_((pl)->ne)));
(pm) = ((pm)->Cat(toBin_((pl)->nf)));
(pm) = ((pm)->Cat(toBin_((pl)->ng)));
(pm) = ((pm)->Cat(toBin_((pl)->nh)));
(pm) = ((pm)->Cat(toBin_((pl)->ni)));
(pm) = ((pm)->Cat(toBin_((pl)->nj)));
(pm) = ((pm)->Cat(toBin_((pl)->nk)));
(pm) = ((pm)->Cat(toBin_((pl)->no)));
(pm) = ((pm)->Cat(toBin_((pl)->lw)));
return pm;
}
// _fromBin
static gd* py(gd* pz, Array_<uint8_t>* qa, int64_t* qb){
gd* qc = nullptr;
(qc) = (new gd());
((qc)->pf) = (fromBin_<gc*>((qa), (*qb)));
((qc)->pj) = (fromBin_<int64_t>((qa), (*qb)));
((qc)->ne) = (fromBin_<ga*>((qa), (*qb)));
((qc)->nf) = (fromBin_<Array_<char16_t>*>((qa), (*qb)));
((qc)->ng) = (fromBin_<fx*>((qa), (*qb)));
((qc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((qa), (*qb)));
((qc)->ni) = (fromBin_<Array_<char16_t>*>((qa), (*qb)));
((qc)->nj) = (fromBin_<fx*>((qa), (*qb)));
((qc)->nk) = (fromBin_<fy*>((qa), (*qb)));
((qc)->no) = (fromBin_<bool>((qa), (*qb)));
((qc)->lw) = (fromBin_<int64_t>((qa), (*qb)));
return qc;
}
// _dtor
static void qd(gb* qe){
((qe)->qf) = (nullptr);
((qe)->qg) = (nullptr);
((qe)->ne) = (nullptr);
((qe)->nf) = (nullptr);
((qe)->ng) = (nullptr);
((qe)->nh) = (nullptr);
((qe)->ni) = (nullptr);
((qe)->nj) = (nullptr);
((qe)->nk) = (nullptr);
}
// _copy
static gb* qh(gb* qi){
gb* qj = nullptr;
(qj) = (new gb());
((qj)->qk) = ((qi)->qk);
((qj)->ql) = ((qi)->ql);
((qj)->qf) = (copy_((qi)->qf));
((qj)->qg) = (copy_((qi)->qg));
((qj)->ne) = (copy_((qi)->ne));
((qj)->nf) = (copy_((qi)->nf));
((qj)->ng) = (copy_((qi)->ng));
((qj)->nh) = (copy_((qi)->nh));
((qj)->ni) = (copy_((qi)->ni));
((qj)->nj) = (copy_((qi)->nj));
((qj)->nk) = (copy_((qi)->nk));
((qj)->no) = ((qi)->no);
((qj)->lw) = ((qi)->lw);
return as_<gb>(classTable_, (qj), 10);
}
// _toBin
static Array_<uint8_t>* qm(gb* qn){
Array_<uint8_t>* qo = nullptr;
(qo) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(qo) = ((qo)->Cat(toBin_((qn)->qk)));
(qo) = ((qo)->Cat(toBin_((qn)->ql)));
(qo) = ((qo)->Cat(toBin_((qn)->qf)));
(qo) = ((qo)->Cat(toBin_((qn)->qg)));
(qo) = ((qo)->Cat(toBin_((qn)->ne)));
(qo) = ((qo)->Cat(toBin_((qn)->nf)));
(qo) = ((qo)->Cat(toBin_((qn)->ng)));
(qo) = ((qo)->Cat(toBin_((qn)->nh)));
(qo) = ((qo)->Cat(toBin_((qn)->ni)));
(qo) = ((qo)->Cat(toBin_((qn)->nj)));
(qo) = ((qo)->Cat(toBin_((qn)->nk)));
(qo) = ((qo)->Cat(toBin_((qn)->no)));
(qo) = ((qo)->Cat(toBin_((qn)->lw)));
return qo;
}
// _fromBin
static gb* rc(gb* rd, Array_<uint8_t>* re, int64_t* rf){
gb* rg = nullptr;
(rg) = (new gb());
((rg)->qk) = (fromBin_<int64_t>((re), (*rf)));
((rg)->ql) = (fromBin_<bool>((re), (*rf)));
((rg)->qf) = (fromBin_<gc*>((re), (*rf)));
((rg)->qg) = (fromBin_<gd*>((re), (*rf)));
((rg)->ne) = (fromBin_<ga*>((re), (*rf)));
((rg)->nf) = (fromBin_<Array_<char16_t>*>((re), (*rf)));
((rg)->ng) = (fromBin_<fx*>((re), (*rf)));
((rg)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((re), (*rf)));
((rg)->ni) = (fromBin_<Array_<char16_t>*>((re), (*rf)));
((rg)->nj) = (fromBin_<fx*>((re), (*rf)));
((rg)->nk) = (fromBin_<fy*>((re), (*rf)));
((rg)->no) = (fromBin_<bool>((re), (*rf)));
((rg)->lw) = (fromBin_<int64_t>((re), (*rf)));
return rg;
}
// _dtor
static void rh(ge* ri){
((ri)->ne) = (nullptr);
((ri)->nf) = (nullptr);
((ri)->ng) = (nullptr);
((ri)->nh) = (nullptr);
((ri)->ni) = (nullptr);
((ri)->nj) = (nullptr);
((ri)->nk) = (nullptr);
}
// _copy
static ge* rj(ge* rk){
ge* rl = nullptr;
(rl) = (new ge());
((rl)->ne) = (copy_((rk)->ne));
((rl)->nf) = (copy_((rk)->nf));
((rl)->ng) = (copy_((rk)->ng));
((rl)->nh) = (copy_((rk)->nh));
((rl)->ni) = (copy_((rk)->ni));
((rl)->nj) = (copy_((rk)->nj));
((rl)->nk) = (copy_((rk)->nk));
((rl)->no) = ((rk)->no);
((rl)->lw) = ((rk)->lw);
return as_<ge>(classTable_, (rl), 16);
}
// _toBin
static Array_<uint8_t>* rm(ge* rn){
Array_<uint8_t>* ro = nullptr;
(ro) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ro) = ((ro)->Cat(toBin_((rn)->ne)));
(ro) = ((ro)->Cat(toBin_((rn)->nf)));
(ro) = ((ro)->Cat(toBin_((rn)->ng)));
(ro) = ((ro)->Cat(toBin_((rn)->nh)));
(ro) = ((ro)->Cat(toBin_((rn)->ni)));
(ro) = ((ro)->Cat(toBin_((rn)->nj)));
(ro) = ((ro)->Cat(toBin_((rn)->nk)));
(ro) = ((ro)->Cat(toBin_((rn)->no)));
(ro) = ((ro)->Cat(toBin_((rn)->lw)));
return ro;
}
// _fromBin
static ge* ry(ge* rz, Array_<uint8_t>* sa, int64_t* sb){
ge* sc = nullptr;
(sc) = (new ge());
((sc)->ne) = (fromBin_<ga*>((sa), (*sb)));
((sc)->nf) = (fromBin_<Array_<char16_t>*>((sa), (*sb)));
((sc)->ng) = (fromBin_<fx*>((sa), (*sb)));
((sc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((sa), (*sb)));
((sc)->ni) = (fromBin_<Array_<char16_t>*>((sa), (*sb)));
((sc)->nj) = (fromBin_<fx*>((sa), (*sb)));
((sc)->nk) = (fromBin_<fy*>((sa), (*sb)));
((sc)->no) = (fromBin_<bool>((sa), (*sb)));
((sc)->lw) = (fromBin_<int64_t>((sa), (*sb)));
return sc;
}
// _dtor
static void sd(fw* se){
((se)->sf) = (nullptr);
((se)->sg) = (nullptr);
((se)->sh) = (nullptr);
((se)->si) = (nullptr);
((se)->ne) = (nullptr);
((se)->nf) = (nullptr);
((se)->ng) = (nullptr);
((se)->nh) = (nullptr);
((se)->ni) = (nullptr);
((se)->nj) = (nullptr);
((se)->nk) = (nullptr);
}
// _copy
static fw* sj(fw* sk){
fw* sl = nullptr;
(sl) = (new fw());
((sl)->sm) = ((sk)->sm);
((sl)->sf) = (copy_((sk)->sf));
((sl)->sg) = (copy_((sk)->sg));
((sl)->sh) = (copy_((sk)->sh));
((sl)->si) = (copy_((sk)->si));
((sl)->ne) = (copy_((sk)->ne));
((sl)->nf) = (copy_((sk)->nf));
((sl)->ng) = (copy_((sk)->ng));
((sl)->nh) = (copy_((sk)->nh));
((sl)->ni) = (copy_((sk)->ni));
((sl)->nj) = (copy_((sk)->nj));
((sl)->nk) = (copy_((sk)->nk));
((sl)->no) = ((sk)->no);
((sl)->lw) = ((sk)->lw);
return as_<fw>(classTable_, (sl), 8);
}
// _toBin
static Array_<uint8_t>* sn(fw* so){
Array_<uint8_t>* sp = nullptr;
(sp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(sp) = ((sp)->Cat(toBin_((so)->sm)));
(sp) = ((sp)->Cat(toBin_((so)->sf)));
(sp) = ((sp)->Cat(toBin_((so)->sg)));
(sp) = ((sp)->Cat(toBin_((so)->sh)));
(sp) = ((sp)->Cat(toBin_((so)->si)));
(sp) = ((sp)->Cat(toBin_((so)->ne)));
(sp) = ((sp)->Cat(toBin_((so)->nf)));
(sp) = ((sp)->Cat(toBin_((so)->ng)));
(sp) = ((sp)->Cat(toBin_((so)->nh)));
(sp) = ((sp)->Cat(toBin_((so)->ni)));
(sp) = ((sp)->Cat(toBin_((so)->nj)));
(sp) = ((sp)->Cat(toBin_((so)->nk)));
(sp) = ((sp)->Cat(toBin_((so)->no)));
(sp) = ((sp)->Cat(toBin_((so)->lw)));
return sp;
}
// _fromBin
static fw* te(fw* tf, Array_<uint8_t>* tg, int64_t* th){
fw* ti = nullptr;
(ti) = (new fw());
((ti)->sm) = (fromBin_<int64_t>((tg), (*th)));
((ti)->sf) = (fromBin_<List_<Array_<char16_t>*>*>((tg), (*th)));
((ti)->sg) = (fromBin_<List_<gb*>*>((tg), (*th)));
((ti)->sh) = (fromBin_<gc*>((tg), (*th)));
((ti)->si) = (fromBin_<List_<ge*>*>((tg), (*th)));
((ti)->ne) = (fromBin_<ga*>((tg), (*th)));
((ti)->nf) = (fromBin_<Array_<char16_t>*>((tg), (*th)));
((ti)->ng) = (fromBin_<fx*>((tg), (*th)));
((ti)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((tg), (*th)));
((ti)->ni) = (fromBin_<Array_<char16_t>*>((tg), (*th)));
((ti)->nj) = (fromBin_<fx*>((tg), (*th)));
((ti)->nk) = (fromBin_<fy*>((tg), (*th)));
((ti)->no) = (fromBin_<bool>((tg), (*th)));
((ti)->lw) = (fromBin_<int64_t>((tg), (*th)));
return ti;
}
// _dtor
static void tj(gj* tk){
((tk)->gk) = (nullptr);
}
// _copy
static gj* tl(gj* tm){
gj* tn = nullptr;
(tn) = (new gj());
((tn)->gk) = (copy_((tm)->gk));
return as_<gj>(classTable_, (tn), 18);
}
// _toBin
static Array_<uint8_t>* to(gj* tp){
Array_<uint8_t>* tq = nullptr;
(tq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(tq) = ((tq)->Cat(toBin_((tp)->gk)));
return tq;
}
// _fromBin
static gj* ts(gj* tt, Array_<uint8_t>* tu, int64_t* tv){
gj* tw = nullptr;
(tw) = (new gj());
((tw)->gk) = (fromBin_<List_<Array_<char16_t>*>*>((tu), (*tv)));
return tw;
}
// exist
static bool gm(Array_<char16_t>* tx /*path*/){
return false;
}
// forEach
static bool go(Array_<char16_t>* ty /*path*/, bool tz /*recursion*/, ub ua /*callback*/, fz* uc /*data*/){
return false;
}
// searchResFiles
static bool gp(Array_<char16_t>* ud /*path*/, bool ue /*isDir*/, fz* uf /*data*/){
gj* ug = nullptr; // data2
(ug) = (as_<gj>(classTable_, (uf), 18));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((ug)->gk), (new Array_<int64_t>(1, (0LL))), (ud));
return true;
}
// output
static bool gu(fw* ui /*entry*/, List_<Array_<char16_t>*>* uj /*resFiles*/){
fw* ur = nullptr; // func_
ul* uv = nullptr; // class_
(aj) = (new Queue_<fw*>());
uk<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL))), (ui));
(ak) = (new Queue_<ul*>());
(al) = (new Array_<char16_t>(1, u'\u0061'));
(am) = (new List_<Array_<char16_t>*>());
(an) = (new List_<Array_<char16_t>*>());
(ao) = (new List_<Array_<char16_t>*>());
(ap) = (new List_<Array_<char16_t>*>());
(aq) = (new List_<un*>());
(ar) = (new List_<gb*>());
(as) = (new List_<gb*>());
(uo) = (0LL);
(at) = (new List_<Array_<char16_t>*>());
while((((aj)->Len()) > (0LL)) || (((ak)->Len()) > (0LL))){
while(((aj)->Len()) > (0LL)){
(ur) = (us<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL)))));
(ut)((ur));
}
while(((ak)->Len()) > (0LL)){
(uv) = (us<Queue_<ul*>*, ul*>((ak), (new Array_<int64_t>(1, (0LL)))));
(uw)((uv));
}
}
(ux)((uj));
return true;
}
// output
static bool gy(fw* uy /*entry*/, List_<Array_<char16_t>*>* uz /*resFiles*/){
fw* vd = nullptr; // func_
ul* vg = nullptr; // class_
(bi) = (new Queue_<fw*>());
uk<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL))), (uy));
(bj) = (new Queue_<ul*>());
(bk) = (new Array_<char16_t>(1, u'\u0061'));
(bl) = (new List_<Array_<char16_t>*>());
(bm) = (new List_<va*>());
(bn) = (new List_<gb*>());
(bo) = (new List_<gb*>());
while((((bi)->Len()) > (0LL)) || (((bj)->Len()) > (0LL))){
while(((bi)->Len()) > (0LL)){
(vd) = (us<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL)))));
(ve)((vd));
}
while(((bj)->Len()) > (0LL)){
(vg) = (us<Queue_<ul*>*, ul*>((bj), (new Array_<int64_t>(1, (0LL)))));
(vh)((vg));
}
}
(vi)((uz));
return true;
}
// get
static Array_<char16_t>* hh(int64_t vj /*id*/, Array_<Array_<char16_t>*>* vk /*args*/){
int64_t vm = 0;
int64_t vp = 0;
int64_t vu = 0;
int64_t vz = 0;
int64_t we = 0;
int64_t wj = 0;
int64_t wo = 0;
int64_t wt = 0;
int64_t wy = 0;
int64_t xd = 0;
int64_t xi = 0;
int64_t xn = 0;
int64_t xs = 0;
int64_t xx = 0;
int64_t yc = 0;
int64_t yh = 0;
int64_t ym = 0;
int64_t yr = 0;
int64_t yw = 0;
int64_t zb = 0;
int64_t zg = 0;
int64_t zl = 0;
int64_t zq = 0;
int64_t zv = 0;
int64_t aaa = 0;
int64_t aaf = 0;
int64_t aak = 0;
int64_t aap = 0;
int64_t aau = 0;
int64_t aaz = 0;
int64_t abe = 0;
int64_t abj = 0;
int64_t abo = 0;
int64_t abt = 0;
int64_t aby = 0;
int64_t acd = 0;
int64_t aci = 0;
int64_t acn = 0;
int64_t acs = 0;
int64_t acx = 0;
int64_t adc = 0;
int64_t adh = 0;
int64_t adm = 0;
int64_t adr = 0;
int64_t adw = 0;
int64_t aeb = 0;
int64_t aeg = 0;
int64_t ael = 0;
int64_t aeq = 0;
int64_t aev = 0;
int64_t afa = 0;
int64_t aff = 0;
int64_t afk = 0;
int64_t afp = 0;
int64_t afu = 0;
int64_t afz = 0;
int64_t age = 0;
int64_t agj = 0;
int64_t ago = 0;
int64_t agt = 0;
int64_t agy = 0;
int64_t ahd = 0;
int64_t ahi = 0;
int64_t ahn = 0;
int64_t ahs = 0;
int64_t ahx = 0;
int64_t aic = 0;
int64_t aih = 0;
int64_t aim = 0;
int64_t air = 0;
int64_t aiw = 0;
int64_t ajb = 0;
int64_t ajg = 0;
int64_t ajl = 0;
int64_t ajq = 0;
int64_t ajv = 0;
int64_t aka = 0;
int64_t akf = 0;
int64_t akk = 0;
int64_t akp = 0;
int64_t aku = 0;
int64_t akz = 0;
int64_t ale = 0;
int64_t alj = 0;
int64_t alo = 0;
int64_t alt = 0;
int64_t aly = 0;
int64_t amd = 0;
int64_t ami = 0;
int64_t amn = 0;
int64_t ams = 0;
int64_t amx = 0;
int64_t anc = 0;
int64_t ani = 0;
int64_t ann = 0;
int64_t ans = 0;
int64_t anx = 0;
int64_t aoc = 0;
int64_t aoh = 0;
int64_t aom = 0;
int64_t aor = 0;
int64_t aow = 0;
int64_t apb = 0;
int64_t apg = 0;
int64_t apl = 0;
int64_t apq = 0;
int64_t apv = 0;
int64_t aqa = 0;
int64_t aqf = 0;
int64_t aqk = 0;
int64_t aqp = 0;
int64_t aqu = 0;
int64_t aqz = 0;
int64_t are = 0;
int64_t arj = 0;
int64_t aro = 0;
int64_t art = 0;
int64_t ary = 0;
int64_t asd = 0;
int64_t asi = 0;
int64_t aso = 0;
int64_t ast = 0;
int64_t asy = 0;
int64_t atd = 0;
int64_t ati = 0;
switch(vj){
case 1LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(6, u'\u30AA', u'\u30D7', u'\u30B7', u'\u30E7', u'\u30F3', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u300D', u'\u306E', u'\u4F7F', u'\u308F', u'\u308C', u'\u65B9', u'\u304C', u'\u6B63', u'\u3057', u'\u304F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006F', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u002E'));
break;
}
break;
case 2LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u4E0D', u'\u660E', u'\u306A', u'\u30AA', u'\u30D7', u'\u30B7', u'\u30E7', u'\u30F3', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u6307', u'\u5B9A', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(20, u'\u0055', u'\u006E', u'\u0065', u'\u0078', u'\u0070', u'\u0065', u'\u0063', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u006F', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u003A', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 3LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u5165', u'\u529B', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u300D', u'\u306E', u'\u62E1', u'\u5F35', u'\u5B50', u'\u306F', u'\u300C', u'\u002E', u'\u006B', u'\u006E', u'\u300D', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(33, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0078', u'\u0074', u'\u0065', u'\u006E', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0070', u'\u0075', u'\u0074', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u002E', u'\u006B', u'\u006E', u'\u0027', u'\u002E'));
break;
}
break;
case 4LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u540D', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u300D', u'\u306B', u'\u4F7F', u'\u3048', u'\u306A', u'\u3044', u'\u6587', u'\u5B57', u'\u304C', u'\u542B', u'\u307E', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(22, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(42, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0073', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 5LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u958B', u'\u3051', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(25, u'\u0043', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u006E', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 6LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30B7', u'\u30B9', u'\u30C6', u'\u30E0', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u958B', u'\u3051', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0079', u'\u0073', u'\u0074', u'\u0065', u'\u006D', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u006E', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 7LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30B7', u'\u30B9', u'\u30C6', u'\u30E0', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u58CA', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0079', u'\u0073', u'\u0074', u'\u0065', u'\u006D', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0062', u'\u0072', u'\u006F', u'\u006B', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65537LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(16, u'\u540C', u'\u3058', u'\u30B9', u'\u30B3', u'\u30FC', u'\u30D7', u'\u5185', u'\u306B', u'\u65E2', u'\u306B', u'\u540C', u'\u3058', u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(35, u'\u0027', u'\u0020', u'\u0061', u'\u006C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0073', u'\u0063', u'\u006F', u'\u0070', u'\u0065', u'\u002E'));
break;
}
break;
case 65538LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(17, u'\u4E0A', u'\u4F4D', u'\u306E', u'\u30B9', u'\u30B3', u'\u30FC', u'\u30D7', u'\u5185', u'\u306B', u'\u65E2', u'\u306B', u'\u540C', u'\u3058', u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(36, u'\u0027', u'\u0020', u'\u0061', u'\u006C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0075', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0020', u'\u0073', u'\u0063', u'\u006F', u'\u0070', u'\u0065', u'\u002E'));
break;
}
break;
case 65539LL:
switch(m){
case 0LL:
return new Array_<char16_t>(24, u'\u30B3', u'\u30E1', u'\u30F3', u'\u30C8', u'\u306E', u'\u300C', u'\u007B', u'\u300D', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u007D', u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(49, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0020', u'\u0027', u'\u007D', u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0027', u'\u007B', u'\u0027', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E');
break;
}
break;
case 65540LL:
switch(m){
case 0LL:
return new Array_<char16_t>(54, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u3084', u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u4E2D', u'\u306B', u'\u30BF', u'\u30D6', u'\u6587', u'\u5B57', u'\u306F', u'\u8A18', u'\u8FF0', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u0020', u'\u30A8', u'\u30B9', u'\u30B1', u'\u30FC', u'\u30D7', u'\u30B7', u'\u30FC', u'\u30B1', u'\u30F3', u'\u30B9', u'\u300C', u'\u005C', u'\u0074', u'\u300D', u'\u3092', u'\u4EE3', u'\u7528', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(113, u'\u0054', u'\u0061', u'\u0062', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u002E', u'\u0020', u'\u0055', u'\u0073', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0073', u'\u0063', u'\u0061', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0071', u'\u0075', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027', u'\u005C', u'\u0074', u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0065', u'\u0061', u'\u0064', u'\u002E');
break;
}
break;
case 65541LL:
switch(m){
case 0LL:
return new Array_<char16_t>(50, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u3084', u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u4E2D', u'\u3067', u'\u306F', u'\u6539', u'\u884C', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u0020', u'\u30A8', u'\u30B9', u'\u30B1', u'\u30FC', u'\u30D7', u'\u30B7', u'\u30FC', u'\u30B1', u'\u30F3', u'\u30B9', u'\u300C', u'\u005C', u'\u006E', u'\u300D', u'\u3092', u'\u4EE3', u'\u7528', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(108, u'\u004C', u'\u0069', u'\u006E', u'\u0065', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u0073', u'\u0020', u'\u0061', u'\u0072', u'\u0065', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u002E', u'\u0020', u'\u0055', u'\u0073', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0073', u'\u0063', u'\u0061', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0071', u'\u0075', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027', u'\u005C', u'\u006E', u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0065', u'\u0061', u'\u0064', u'\u002E');
break;
}
break;
case 65542LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(12, u'\u8B58', u'\u5225', u'\u5B50', u'\u306B', u'\u306F', u'\u4F7F', u'\u3048', u'\u306A', u'\u3044', u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(15, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(49, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65543LL:
switch(m){
case 0LL:
return new Array_<char16_t>(24, u'\u8B58', u'\u5225', u'\u5B50', u'\u306B', u'\u6B63', u'\u3057', u'\u304F', u'\u306A', u'\u3044', u'\u5F62', u'\u5F0F', u'\u3067', u'\u300C', u'\u0040', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(43, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0027', u'\u0040', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u002E');
break;
}
break;
case 65544LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(12, u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u540D', u'\u306E', u'\u6307', u'\u5B9A', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u300D', u'\u306B', u'\u5927', u'\u6587', u'\u5B57', u'\u304C', u'\u542B', u'\u307E', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0041', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(29, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0073', u'\u0020', u'\u0075', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u006C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u002E'));
break;
}
break;
case 65545LL:
switch(m){
case 0LL:
return new Array_<char16_t>(24, u'\u8B58', u'\u5225', u'\u5B50', u'\u306B', u'\u6B63', u'\u3057', u'\u304F', u'\u306A', u'\u3044', u'\u5F62', u'\u5F0F', u'\u3067', u'\u300C', u'\u005C', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(43, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0027', u'\u005C', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u002E');
break;
}
break;
case 65546LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(16, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(49, u'\u002E', u'\u002E', u'\u002E', u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65547LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(16, u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u6587', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0073', u'\u0065', u'\u006E', u'\u0074', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65548LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(13, u'\u95A2', u'\u6570', u'\u5C5E', u'\u6027', u'\u306B', u'\u306F', u'\u4F7F', u'\u3048', u'\u306A', u'\u3044', u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(15, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(57, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0061', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0073', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65549LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(5, u'\u95A2', u'\u6570', u'\u5C5E', u'\u6027', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(24, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0061', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(49, u'\u002E', u'\u002E', u'\u002E', u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65550LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(3, u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(19, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u7B87', u'\u6240', u'\u306B', u'\u3001', u'\u4E0D', u'\u6B63', u'\u306A', u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(22, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(46, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0070', u'\u006C', u'\u0061', u'\u0063', u'\u0065', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u0027', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E')));
break;
}
break;
case 65551LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u300D', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(20, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E')));
break;
}
break;
case 65552LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u95A2', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3092', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u004F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 65553LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(14, u'\u95A2', u'\u6570', u'\u304A', u'\u3088', u'\u3073', u'\u5909', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u300D', u'\u3092', u'\u516C', u'\u958B', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(55, u'\u0027', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0073', u'\u0020', u'\u0068', u'\u0061', u'\u0073', u'\u0020', u'\u0062', u'\u0065', u'\u0065', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u006C', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 65554LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u300D', u'\u304C', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u300D', u'\u3067', u'\u306F', u'\u306A', u'\u304F', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u3067', u'\u9589', u'\u3058', u'\u3089', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(1, u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(31, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(18, u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0065', u'\u0061', u'\u0064', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'))));
break;
}
break;
case 65555LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(12, u'\u6B63', u'\u3057', u'\u304F', u'\u306A', u'\u3044', u'\u5F62', u'\u5F0F', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(30, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u006D', u'\u0061', u'\u0074', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65556LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u5F15', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u5909', u'\u6570', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0026', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(53, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0026', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E');
break;
}
break;
case 65557LL:
switch(m){
case 0LL:
return new Array_<char16_t>(25, u'\u5F15', u'\u6570', u'\u306B', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3059', u'\u308B', u'\u3053', u'\u3068', u'\u306F', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u002E');
break;
}
break;
case 65558LL:
switch(m){
case 0LL:
return new Array_<char16_t>(26, u'\u30E1', u'\u30F3', u'\u30D0', u'\u306B', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3059', u'\u308B', u'\u3053', u'\u3068', u'\u306F', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(50, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0073', u'\u002E');
break;
}
break;
case 65559LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u6587', u'\u306B', u'\u306F', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(57, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u002E');
break;
}
break;
case 65560LL:
switch(m){
case 0LL:
return new Array_<char16_t>(22, u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(43, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0061', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002E');
break;
}
break;
case 65561LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(5, u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u306F', u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u3067', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(5, u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(27, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u006D', u'\u0061', u'\u0074', u'\u0074', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 65562LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(18, u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3068', u'\u5BFE', u'\u5FDC', u'\u3057', u'\u306A', u'\u3044', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u3067', u'\u9589', u'\u3058', u'\u3089', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(25, u'\u0043', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(40, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002E'));
break;
}
break;
case 65563LL:
switch(m){
case 0LL:
return new Array_<char16_t>(46, u'\u300C', u'\u0069', u'\u0066', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u306E', u'\u5F8C', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u300D', u'\u7BC0', u'\u3084', u'\u300C', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(88, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0061', u'\u0066', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u002E');
break;
}
break;
case 65564LL:
switch(m){
case 0LL:
return new Array_<char16_t>(56, u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u300D', u'\u7BC0', u'\u306E', u'\u5F8C', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u3084', u'\u300C', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(96, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0061', u'\u0066', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u002E');
break;
}
break;
case 65565LL:
switch(m){
case 0LL:
return new Array_<char16_t>(54, u'\u300C', u'\u0074', u'\u0072', u'\u0079', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u300D', u'\u7BC0', u'\u306E', u'\u5F8C', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u7BC0', u'\u3084', u'\u300C', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(94, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0074', u'\u0072', u'\u0079', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0061', u'\u0066', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u002E');
break;
}
break;
case 65566LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(12, u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u4EE5', u'\u5916', u'\u3067', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(11, u'\u0041', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(30, u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u006F', u'\u0075', u'\u0074', u'\u0073', u'\u0069', u'\u0064', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0073', u'\u002E')));
break;
}
break;
case 65567LL:
switch(m){
case 0LL:
return new Array_<char16_t>(69, u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u300D', u'\u300C', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u300D', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u306E', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u7B87', u'\u6240', u'\u306B', u'\u305D', u'\u308C', u'\u4EE5', u'\u5916', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(88, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0027', u'\u002C', u'\u0020', u'\u0027', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u0027', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0077', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E');
break;
}
break;
case 65568LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(16, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u7B87', u'\u6240', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(12, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(21, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u0027', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E')));
break;
}
break;
case 65569LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(11, u'\u300C', u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u6F14', u'\u7B97', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65570LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(31, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(20, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(47, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65571LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(18, u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u30A8', u'\u30B9', u'\u30B1', u'\u30FC', u'\u30D7', u'\u30B7', u'\u30FC', u'\u30B1', u'\u30F3', u'\u30B9', u'\u300C', u'\u005C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(28, u'\u0041', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0065', u'\u0073', u'\u0063', u'\u0061', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0071', u'\u0075', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027', u'\u005C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65572LL:
switch(m){
case 0LL:
return new Array_<char16_t>(54, u'\u6587', u'\u5B57', u'\u30B3', u'\u30FC', u'\u30C9', u'\u8868', u'\u8A18', u'\u306F', u'\u300C', u'\u005C', u'\u0075', u'\u300D', u'\u306B', u'\u7D9A', u'\u3044', u'\u3066', u'\u3001', u'\u6570', u'\u5B57', u'\u307E', u'\u305F', u'\u306F', u'\u5927', u'\u6587', u'\u5B57', u'\u30A2', u'\u30EB', u'\u30D5', u'\u30A1', u'\u30D9', u'\u30C3', u'\u30C8', u'\u3067', u'\u0034', u'\u6841', u'\u306E', u'\u0031', u'\u0036', u'\u9032', u'\u6570', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(115, u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0063', u'\u006F', u'\u0064', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0065', u'\u006E', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u005C', u'\u0075', u'\u0027', u'\u0020', u'\u0066', u'\u006F', u'\u006C', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0079', u'\u0020', u'\u0061', u'\u0020', u'\u0034', u'\u002D', u'\u0064', u'\u0069', u'\u0067', u'\u0069', u'\u0074', u'\u0020', u'\u0068', u'\u0065', u'\u0078', u'\u0061', u'\u0064', u'\u0065', u'\u0063', u'\u0069', u'\u006D', u'\u0061', u'\u006C', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0063', u'\u0061', u'\u0070', u'\u0069', u'\u0074', u'\u0061', u'\u006C', u'\u0020', u'\u006C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u002E');
break;
}
break;
case 65573LL:
switch(m){
case 0LL:
return new Array_<char16_t>(28, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u304C', u'\u9589', u'\u3058', u'\u3089', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0041', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0064', u'\u002E');
break;
}
break;
case 65574LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u6587', u'\u5B57', u'\u5206', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(65, u'\u002E', u'\u002E', u'\u002E', u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u0041', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u002E'));
break;
}
break;
case 65575LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u304C', u'\u7A7A', u'\u3067', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u6587', u'\u5B57', u'\u5206', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(84, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0065', u'\u006D', u'\u0070', u'\u0074', u'\u0079', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u002E', u'\u0020', u'\u0041', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u002E');
break;
}
break;
case 65576LL:
switch(m){
case 0LL:
return new Array_<char16_t>(29, u'\u62EC', u'\u5F27', u'\u300C', u'\u0028', u'\u300D', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u0029', u'\u300D', u'\u304C', u'\u3001', u'\u3042', u'\u308B', u'\u3079', u'\u304D', u'\u5834', u'\u6240', u'\u306B', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(79, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0029', u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0068', u'\u0065', u'\u0073', u'\u0069', u'\u0073', u'\u0020', u'\u0027', u'\u0028', u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0074', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u002E');
break;
}
break;
case 65577LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(14, u'\u6570', u'\u5024', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(35, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0069', u'\u0063', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u002E'));
break;
}
break;
case 65578LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u6570', u'\u5024', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(31, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0069', u'\u0063', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(47, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65579LL:
switch(m){
case 0LL:
return new Array_<char16_t>(27, u'\u0031', u'\u0036', u'\u9032', u'\u6570', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u306F', u'\u300C', u'\u0030', u'\u0078', u'\u300D', u'\u304B', u'\u3089', u'\u59CB', u'\u3081', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(42, u'\u0048', u'\u0065', u'\u0078', u'\u0061', u'\u0064', u'\u0065', u'\u0063', u'\u0069', u'\u006D', u'\u0061', u'\u006C', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0027', u'\u0030', u'\u0078', u'\u0027', u'\u002E');
break;
}
break;
case 65580LL:
switch(m){
case 0LL:
return new Array_<char16_t>(43, u'\u6307', u'\u6570', u'\u8868', u'\u8A18', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u306F', u'\u300C', u'\u0065', u'\u002B', u'\u300D', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u300C', u'\u0065', u'\u002D', u'\u300D', u'\u304B', u'\u3089', u'\u59CB', u'\u3081', u'\u3066', u'\u6307', u'\u6570', u'\u90E8', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(87, u'\u0045', u'\u0078', u'\u0070', u'\u006F', u'\u006E', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0027', u'\u0065', u'\u002B', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0065', u'\u002D', u'\u0027', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u006F', u'\u006E', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0074', u'\u002E');
break;
}
break;
case 65581LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(10, u'\u6D6E', u'\u52D5', u'\u5C0F', u'\u6570', u'\u70B9', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u300D', u'\u304C', u'\u89E3', u'\u91C8', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u5024', u'\u304C', u'\u5927', u'\u304D', u'\u3059', u'\u304E', u'\u308B', u'\u53EF', u'\u80FD', u'\u6027', u'\u304C', u'\u3042', u'\u308A', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(28, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0070', u'\u006F', u'\u0069', u'\u006E', u'\u0074', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(55, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u0065', u'\u0064', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006D', u'\u0061', u'\u0079', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u0061', u'\u0072', u'\u0067', u'\u0065', u'\u002E'));
break;
}
break;
case 65582LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30D3', u'\u30C3', u'\u30C8', u'\u578B', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(41, u'\u300D', u'\u306E', u'\u63A5', u'\u5C3E', u'\u8F9E', u'\u306F', u'\u300C', u'\u0062', u'\u0038', u'\u300D', u'\u300C', u'\u0062', u'\u0031', u'\u0036', u'\u300D', u'\u300C', u'\u0062', u'\u0033', u'\u0032', u'\u300D', u'\u300C', u'\u0062', u'\u0036', u'\u0034', u'\u300D', u'\u306E', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0075', u'\u0066', u'\u0066', u'\u0069', u'\u0078', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0062', u'\u0069', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(45, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0065', u'\u0069', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u0062', u'\u0038', u'\u0027', u'\u002C', u'\u0020', u'\u0027', u'\u0062', u'\u0031', u'\u0036', u'\u0027', u'\u002C', u'\u0020', u'\u0027', u'\u0062', u'\u0033', u'\u0032', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0062', u'\u0036', u'\u0034', u'\u0027', u'\u002E'));
break;
}
break;
case 65583LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u6574', u'\u6570', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u300D', u'\u304C', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30D5', u'\u30ED', u'\u30FC', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0067', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0068', u'\u0061', u'\u0073', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0066', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 131073LL:
switch(m){
case 0LL:
return new Array_<char16_t>(55, u'\u300C', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u300D', u'\u95A2', u'\u6570', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u0020', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u3059', u'\u308B', u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u306B', u'\u300C', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u300D', u'\u3092', u'\u5B9A', u'\u7FA9', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(88, u'\u0027', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0027', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u002E', u'\u0020', u'\u0044', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0064', u'\u002E');
break;
}
break;
case 131074LL:
switch(m){
case 0LL:
return new Array_<char16_t>(37, u'\u300C', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u300D', u'\u95A2', u'\u6570', u'\u306E', u'\u5B9A', u'\u7FA9', u'\u306F', u'\u300C', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u300D', u'\u3068', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(60, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0027', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u0027', u'\u002E');
break;
}
break;
case 131075LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(10, u'\u30E1', u'\u30F3', u'\u30D0', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u5909', u'\u6570', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(36, u'\u300D', u'\u306B', u'\u3001', u'\u300C', u'\u006D', u'\u0065', u'\u300D', u'\u3092', u'\u4ECB', u'\u3055', u'\u305A', u'\u76F4', u'\u63A5', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u305F', u'\u304B', u'\u3001', u'\u95A2', u'\u6570', u'\u3092', u'\u8D85', u'\u3048', u'\u3066', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(24, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(70, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0064', u'\u0069', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u0027', u'\u006D', u'\u0065', u'\u0027', u'\u002C', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0079', u'\u006F', u'\u006E', u'\u0064', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E'));
break;
}
break;
case 131076LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(58, u'\u0040', u'\u300D', u'\u306B', u'\u3064', u'\u3044', u'\u3066', u'\u3001', u'\u81EA', u'\u8EAB', u'\u306E', u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u306E', u'\u30B0', u'\u30ED', u'\u30FC', u'\u30D0', u'\u30EB', u'\u8981', u'\u7D20', u'\u3092', u'\u53C2', u'\u7167', u'\u3059', u'\u308B', u'\u3068', u'\u304D', u'\u306F', u'\u3001', u'\u300C', u'\u0040', u'\u300D', u'\u306E', u'\u524D', u'\u306E', u'\u30BD', u'\u30FC', u'\u30B9', u'\u540D', u'\u3092', u'\u7701', u'\u7565', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(5, u'\u0046', u'\u006F', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(109, u'\u0040', u'\u0027', u'\u002C', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0067', u'\u006C', u'\u006F', u'\u0062', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0069', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0077', u'\u006E', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u002C', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0062', u'\u0065', u'\u0066', u'\u006F', u'\u0072', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0040', u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u006D', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 131077LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(21, u'\u4ED6', u'\u306E', u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u306E', u'\u516C', u'\u958B', u'\u3055', u'\u308C', u'\u3066', u'\u3044', u'\u306A', u'\u3044', u'\u8981', u'\u7D20', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(32, u'\u300D', u'\u3092', u'\u53C2', u'\u7167', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002', u'\u8981', u'\u7D20', u'\u306E', u'\u5148', u'\u982D', u'\u306B', u'\u300C', u'\u002B', u'\u300D', u'\u304C', u'\u4ED8', u'\u3044', u'\u3066', u'\u3044', u'\u308B', u'\u5FC5', u'\u8981', u'\u304C', u'\u3042', u'\u308A', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(22, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0063', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(74, u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u002B', u'\u0027', u'\u002E'));
break;
}
break;
case 131078LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(31, u'\u300D', u'\u306E', u'\u5B9A', u'\u7FA9', u'\u304C', u'\u898B', u'\u3064', u'\u304B', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u540D', u'\u524D', u'\u3092', u'\u9593', u'\u9055', u'\u3048', u'\u3066', u'\u3044', u'\u308B', u'\u53EF', u'\u80FD', u'\u6027', u'\u304C', u'\u3042', u'\u308A', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(30, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(63, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0075', u'\u006E', u'\u0064', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u006D', u'\u0061', u'\u0079', u'\u0020', u'\u0068', u'\u0061', u'\u0076', u'\u0065', u'\u0020', u'\u0062', u'\u0065', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u002E'));
break;
}
break;
case 131079LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u300C', u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u300D', u'\u306E', u'\u5B9A', u'\u7FA9', u'\u304C', u'\u5FAA', u'\u74B0', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(25, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u0069', u'\u0072', u'\u0063', u'\u0075', u'\u006C', u'\u0061', u'\u0074', u'\u0069', u'\u006E', u'\u0067', u'\u002E'));
break;
}
break;
case 131080LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u300C', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u300D', u'\u306E', u'\u7D99', u'\u627F', u'\u304C', u'\u5FAA', u'\u74B0', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(26, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0068', u'\u0065', u'\u0072', u'\u0069', u'\u0074', u'\u0061', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u0069', u'\u0072', u'\u0063', u'\u0075', u'\u006C', u'\u0061', u'\u0074', u'\u0069', u'\u006E', u'\u0067', u'\u002E'));
break;
}
break;
case 131081LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(18, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3059', u'\u308B', u'\u89AA', u'\u30AF', u'\u30E9', u'\u30B9', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u898B', u'\u3064', u'\u304B', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(50, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0065', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0075', u'\u006E', u'\u0064', u'\u002E'));
break;
}
break;
case 131082LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(5, u'\u30E1', u'\u30F3', u'\u30D0', u'\u540D', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(43, u'\u300D', u'\u304C', u'\u89AA', u'\u30AF', u'\u30E9', u'\u30B9', u'\u306E', u'\u3082', u'\u306E', u'\u3068', u'\u91CD', u'\u8907', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3059', u'\u308B', u'\u5834', u'\u5408', u'\u306F', u'\u300C', u'\u002A', u'\u300D', u'\u3092', u'\u4ED8', u'\u3051', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(71, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0064', u'\u0075', u'\u0070', u'\u006C', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u002E', u'\u0020', u'\u0041', u'\u0064', u'\u0064', u'\u0020', u'\u0027', u'\u002A', u'\u0027', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u006E', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u002E'));
break;
}
break;
case 131083LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u95A2', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3092', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u004F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 131084LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(13, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u305F', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u300D', u'\u3068', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u4FEE', u'\u98FE', u'\u5B50', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(66, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0020', u'\u006D', u'\u006F', u'\u0064', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 131085LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(13, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u305F', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3068', u'\u578B', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u5F15', u'\u6570', u'\u540D', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(72, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0020', u'\u0064', u'\u006F', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 131086LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(20, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u304C', u'\u8A31', u'\u53EF', u'\u3055', u'\u308C', u'\u3066', u'\u3044', u'\u306A', u'\u3044', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3092', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(54, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 131087LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u5217', u'\u6319', u'\u578B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(36, u'\u300D', u'\u306E', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u306E', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(27, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(69, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006D', u'\u0061', u'\u0064', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E')));
break;
}
break;
case 131088LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u5217', u'\u6319', u'\u578B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u300D', u'\u306E', u'\u5024', u'\u304C', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u306E', u'\u6709', u'\u52B9', u'\u7BC4', u'\u56F2', u'\u3092', u'\u8D85', u'\u3048', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(27, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(40, u'\u0027', u'\u0020', u'\u0065', u'\u0078', u'\u0063', u'\u0065', u'\u0065', u'\u0064', u'\u0073', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0072', u'\u0061', u'\u006E', u'\u0067', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E')));
break;
}
break;
case 131089LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u5217', u'\u6319', u'\u578B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u300D', u'\u306E', u'\u5024', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u300D', u'\u304C', u'\u5225', u'\u306E', u'\u8981', u'\u7D20', u'\u306E', u'\u5024', u'\u3068', u'\u91CD', u'\u8907', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(11, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(19, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(50, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0064', u'\u0075', u'\u0070', u'\u006C', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0061', u'\u006E', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E'))));
break;
}
break;
case 131090LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(15, u'\u5217', u'\u6319', u'\u578B', u'\u5185', u'\u306B', u'\u5B58', u'\u5728', u'\u3057', u'\u306A', u'\u3044', u'\u8981', u'\u7D20', u'\u540D', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(19, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(58, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 131091LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u30B0', u'\u30ED', u'\u30FC', u'\u30D0', u'\u30EB', u'\u5909', u'\u6570', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(29, u'\u300D', u'\u306E', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(30, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0067', u'\u006C', u'\u006F', u'\u0062', u'\u0061', u'\u006C', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(37, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E'));
break;
}
break;
case 131092LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u300C', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u300D', u'\u6587', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(29, u'\u300D', u'\u306E', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(37, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E'));
break;
}
break;
case 131093LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(3, u'\u5909', u'\u6570', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u300D', u'\u306E', u'\u578B', u'\u3068', u'\u5024', u'\u306E', u'\u578B', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(26, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(32, u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E'));
break;
}
break;
case 131094LL:
switch(m){
case 0LL:
return new Array_<char16_t>(31, u'\u300C', u'\u0069', u'\u0066', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(65, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131095LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u300C', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u300D', u'\u7BC0', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(68, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131096LL:
switch(m){
case 0LL:
return new Array_<char16_t>(34, u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u6BD4', u'\u8F03', u'\u53EF', u'\u80FD', u'\u306A', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(75, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0061', u'\u0072', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131097LL:
switch(m){
case 0LL:
return new Array_<char16_t>(36, u'\u300C', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u306E', u'\u578B', u'\u304C', u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306E', u'\u578B', u'\u3068', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(106, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002E');
break;
}
break;
case 131098LL:
switch(m){
case 0LL:
return new Array_<char16_t>(34, u'\u300C', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(68, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131099LL:
switch(m){
case 0LL:
return new Array_<char16_t>(31, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u521D', u'\u671F', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(54, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131100LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u7D42', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006E', u'\u0064', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131101LL:
switch(m){
case 0LL:
return new Array_<char16_t>(31, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u5897', u'\u6E1B', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(68, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u002F', u'\u0020', u'\u0064', u'\u0065', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131102LL:
switch(m){
case 0LL:
return new Array_<char16_t>(39, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u5897', u'\u6E1B', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(84, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u002F', u'\u0020', u'\u0064', u'\u0065', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E');
break;
}
break;
case 131103LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u5897', u'\u6E1B', u'\u5024', u'\u306F', u'\u300C', u'\u0030', u'\u300D', u'\u4EE5', u'\u5916', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(72, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u002F', u'\u0020', u'\u0064', u'\u0065', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0030', u'\u0027', u'\u002E');
break;
}
break;
case 131104LL:
switch(m){
case 0LL:
return new Array_<char16_t>(45, u'\u300C', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u7BC0', u'\u306E', u'\u6761', u'\u4EF6', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u306E', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(104, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E');
break;
}
break;
case 131105LL:
switch(m){
case 0LL:
return new Array_<char16_t>(32, u'\u300C', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u300D', u'\u6587', u'\u306E', u'\u4F8B', u'\u5916', u'\u30B3', u'\u30FC', u'\u30C9', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(59, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0078', u'\u0063', u'\u0065', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u006F', u'\u0064', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131106LL:
switch(m){
case 0LL:
return new Array_<char16_t>(31, u'\u623B', u'\u308A', u'\u5024', u'\u3092', u'\u8FD4', u'\u3059', u'\u95A2', u'\u6570', u'\u3067', u'\u306F', u'\u300C', u'\u0072', u'\u0065', u'\u0074', u'\u300D', u'\u6587', u'\u306F', u'\u5024', u'\u3092', u'\u8FD4', u'\u3055', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(72, u'\u0046', u'\u006F', u'\u0072', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0073', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u002C', u'\u0020', u'\u0027', u'\u0072', u'\u0065', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u002E');
break;
}
break;
case 131107LL:
switch(m){
case 0LL:
return new Array_<char16_t>(27, u'\u300C', u'\u0072', u'\u0065', u'\u0074', u'\u300D', u'\u6587', u'\u306E', u'\u5024', u'\u306E', u'\u578B', u'\u304C', u'\u95A2', u'\u6570', u'\u306E', u'\u623B', u'\u308A', u'\u5024', u'\u306E', u'\u578B', u'\u3068', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(79, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0072', u'\u0065', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E');
break;
}
break;
case 131108LL:
switch(m){
case 0LL:
return new Array_<char16_t>(50, u'\u300C', u'\u0064', u'\u006F', u'\u300D', u'\u6587', u'\u3067', u'\u6700', u'\u5F8C', u'\u306B', u'\u884C', u'\u3046', u'\u6F14', u'\u7B97', u'\u306F', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u3084', u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306A', u'\u3069', u'\u306E', u'\u526F', u'\u4F5C', u'\u7528', u'\u306E', u'\u3042', u'\u308B', u'\u6F14', u'\u7B97', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(104, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006C', u'\u0061', u'\u0073', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0027', u'\u0064', u'\u006F', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0073', u'\u0069', u'\u0064', u'\u0065', u'\u0020', u'\u0065', u'\u0066', u'\u0066', u'\u0065', u'\u0063', u'\u0074', u'\u0073', u'\u0020', u'\u0073', u'\u0075', u'\u0063', u'\u0068', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0073', u'\u002E');
break;
}
break;
case 131109LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(23, u'\u300D', u'\u6587', u'\u306B', u'\u306F', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u540D', u'\u3092', u'\u6307', u'\u5B9A', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(1, u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(39, u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0067', u'\u0069', u'\u0076', u'\u0065', u'\u006E', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u002E'));
break;
}
break;
case 131110LL:
switch(m){
case 0LL:
return new Array_<char16_t>(32, u'\u300C', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074', u'\u300D', u'\u6587', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(73, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131111LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u578B', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3059', u'\u3079', u'\u304D', u'\u3068', u'\u3053', u'\u308D', u'\u306B', u'\u578B', u'\u4EE5', u'\u5916', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(54, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E');
break;
}
break;
case 131112LL:
switch(m){
case 0LL:
return new Array_<char16_t>(24, u'\u5024', u'\u304C', u'\u8A2D', u'\u5B9A', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u5834', u'\u6240', u'\u306B', u'\u5024', u'\u304C', u'\u6E21', u'\u3055', u'\u308C', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(51, u'\u004E', u'\u006F', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0070', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u006D', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0074', u'\u002E');
break;
}
break;
case 131113LL:
switch(m){
case 0LL:
return new Array_<char16_t>(15, u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u578B', u'\u304C', u'\u6B63', u'\u3057', u'\u304F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(28, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u002E');
break;
}
break;
case 131114LL:
switch(m){
case 0LL:
return new Array_<char16_t>(25, u'\u4EE3', u'\u5165', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u5DE6', u'\u8FBA', u'\u5024', u'\u304C', u'\u4EE3', u'\u5165', u'\u53EF', u'\u80FD', u'\u306A', u'\u5909', u'\u6570', u'\u3067', u'\u306F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(72, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006C', u'\u0065', u'\u0066', u'\u0074', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0073', u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0073', u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u002E');
break;
}
break;
case 131115LL:
switch(m){
case 0LL:
return new Array_<char16_t>(17, u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u306F', u'\u5024', u'\u6BD4', u'\u8F03', u'\u304C', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(35, u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0079', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u002E');
break;
}
break;
case 131116LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(11, u'\u300C', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u540D', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u300D', u'\u304B', u'\u3089', u'\u578B', u'\u304C', u'\u63A8', u'\u6E2C', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(54, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0066', u'\u0065', u'\u0072', u'\u0072', u'\u0065', u'\u0064', u'\u0020', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0027', u'\u002E'));
break;
}
break;
case 131117LL:
switch(m){
case 0LL:
return new Array_<char16_t>(22, u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u306F', u'\u300C', u'\u007E', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u3067', u'\u9023', u'\u7D50', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u006E', u'\u0061', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u007E', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u002E');
break;
}
break;
case 131118LL:
switch(m){
case 0LL:
return new Array_<char16_t>(9, u'\u0030', u'\u3067', u'\u9664', u'\u7B97', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(13, u'\u0044', u'\u0069', u'\u0076', u'\u0069', u'\u0064', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0079', u'\u0020', u'\u0030', u'\u002E');
break;
}
break;
case 131119LL:
switch(m){
case 0LL:
return new Array_<char16_t>(34, u'\u300C', u'\u003A', u'\u0024', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u5DE6', u'\u8FBA', u'\u5024', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u53F3', u'\u8FBA', u'\u5024', u'\u304C', u'\u4EE3', u'\u5165', u'\u53EF', u'\u80FD', u'\u306A', u'\u5909', u'\u6570', u'\u3067', u'\u306F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(75, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006C', u'\u0065', u'\u0066', u'\u0074', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0072', u'\u0069', u'\u0067', u'\u0068', u'\u0074', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u003A', u'\u0024', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0073', u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u002E');
break;
}
break;
case 131120LL:
switch(m){
case 0LL:
return new Array_<char16_t>(32, u'\u300C', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(66, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u002E');
break;
}
break;
case 131121LL:
switch(m){
case 0LL:
return new Array_<char16_t>(33, u'\u300C', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u62EC', u'\u5F27', u'\u5185', u'\u306E', u'\u0032', u'\u3064', u'\u306E', u'\u5024', u'\u306F', u'\u540C', u'\u3058', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(80, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0077', u'\u006F', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0068', u'\u0065', u'\u0073', u'\u0069', u'\u0073', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131122LL:
switch(m){
case 0LL:
return new Array_<char16_t>(38, u'\u300C', u'\u0023', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306F', u'\u30AF', u'\u30E9', u'\u30B9', u'\u3084', u'\u300C', u'\u006C', u'\u0069', u'\u0073', u'\u0074', u'\u300D', u'\u300C', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u300D', u'\u306A', u'\u3069', u'\u306E', u'\u53C2', u'\u7167', u'\u578B', u'\u306B', u'\u3057', u'\u304B', u'\u4F7F', u'\u3048', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(89, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0023', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u0020', u'\u006F', u'\u006E', u'\u006C', u'\u0079', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0073', u'\u0020', u'\u0073', u'\u0075', u'\u0063', u'\u0068', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0073', u'\u002C', u'\u0020', u'\u0027', u'\u006C', u'\u0069', u'\u0073', u'\u0074', u'\u0027', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0027', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131123LL:
switch(m){
case 0LL:
return new Array_<char16_t>(37, u'\u300C', u'\u0023', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306B', u'\u8A18', u'\u8FF0', u'\u3059', u'\u308B', u'\u914D', u'\u5217', u'\u306E', u'\u8981', u'\u7D20', u'\u6570', u'\u306E', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(71, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0023', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131124LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u95A2', u'\u6570', u'\u3067', u'\u306A', u'\u3044', u'\u3082', u'\u306E', u'\u3092', u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(51, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0065', u'\u0064', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0069', u'\u0066', u'\u0020', u'\u0069', u'\u0074', u'\u0020', u'\u0077', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E');
break;
}
break;
case 131125LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(16, u'\u500B', u'\u306E', u'\u5F15', u'\u6570', u'\u3092', u'\u53D7', u'\u3051', u'\u53D6', u'\u308B', u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306B'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(20, u'\u500B', u'\u306E', u'\u5F15', u'\u6570', u'\u304C', u'\u6307', u'\u5B9A', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u95A2', u'\u6570', u'\u306E', u'\u578B', u'\u306F', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u300D', u'\u3067', u'\u3059', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(59, u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u0077', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0072', u'\u0065', u'\u0063', u'\u0065', u'\u0069', u'\u0076', u'\u0065', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(34, u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0027'))));
break;
}
break;
case 131126LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306E'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(28, u'\u756A', u'\u76EE', u'\u306E', u'\u53C2', u'\u7167', u'\u6E21', u'\u3057', u'\u306E', u'\u5F15', u'\u6570', u'\u306B', u'\u3001', u'\u53C2', u'\u7167', u'\u3092', u'\u53D6', u'\u308C', u'\u306A', u'\u3044', u'\u5024', u'\u304C', u'\u6E21', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(52, u'\u0041', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0070', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(74, u'\u0074', u'\u0068', u'\u002F', u'\u0073', u'\u0074', u'\u002F', u'\u006E', u'\u0064', u'\u002F', u'\u0072', u'\u0064', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002C', u'\u0020', u'\u0077', u'\u0068', u'\u0069', u'\u0063', u'\u0068', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0061', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002C', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u002E'));
break;
}
break;
case 131127LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(19, u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306E', u'\u5F15', u'\u6570', u'\u306E', u'\u578B', u'\u304C', u'\u7570', u'\u306A', u'\u308A', u'\u307E', u'\u3059', u'\u3002', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u756A', u'\u76EE', u'\u306E', u'\u5F15', u'\u6570', u'\u3067', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(12, u'\u300D', u'\u3092', u'\u6307', u'\u5B9A', u'\u3059', u'\u3079', u'\u304D', u'\u3068', u'\u3053', u'\u308D', u'\u306B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u6E21', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(58, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0064', u'\u0069', u'\u0066', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(25, u'\u0027', u'\u0020', u'\u0068', u'\u0061', u'\u0073', u'\u0020', u'\u0062', u'\u0065', u'\u0065', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(27, u'\u0027', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(21, u'\u0074', u'\u0068', u'\u002F', u'\u0073', u'\u0074', u'\u002F', u'\u006E', u'\u0064', u'\u002F', u'\u0072', u'\u0064', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E'))));
break;
}
break;
case 131128LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u914D', u'\u5217', u'\u3067', u'\u306A', u'\u3044', u'\u3082', u'\u306E', u'\u306B', u'\u914D', u'\u5217', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(37, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u002E');
break;
}
break;
case 131129LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u914D', u'\u5217', u'\u306E', u'\u6DFB', u'\u5B57', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(28, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0064', u'\u0069', u'\u0063', u'\u0065', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131130LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u53C2', u'\u7167', u'\u5148', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u002E'));
break;
}
break;
case 131131LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(12, u'\u516C', u'\u958B', u'\u3055', u'\u308C', u'\u3066', u'\u3044', u'\u306A', u'\u3044', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u3092', u'\u53C2', u'\u7167', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0041', u'\u006E', u'\u0020', u'\u0075', u'\u006E', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0073', u'\u0068', u'\u0065', u'\u0064', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 131132LL:
switch(m){
case 0LL:
return new Array_<char16_t>(25, u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u306E', u'\u578B', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(61, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u002E');
break;
}
break;
case 131133LL:
switch(m){
case 0LL:
return new Array_<char16_t>(29, u'\u5024', u'\u578B', u'\u306E', u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306B', u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(60, u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u002E');
break;
}
break;
case 131134LL:
switch(m){
case 0LL:
return new Array_<char16_t>(71, u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306E', u'\u3059', u'\u3079', u'\u3066', u'\u306E', u'\u8981', u'\u7D20', u'\u304C', u'\u300C', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u540D', u'\u306E', u'\u305F', u'\u3081', u'\u3001', u'\u578B', u'\u304C', u'\u6C7A', u'\u5B9A', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u306E', u'\u8981', u'\u7D20', u'\u540D', u'\u3092', u'\u30AD', u'\u30E3', u'\u30B9', u'\u30C8', u'\u3057', u'\u3066', u'\u578B', u'\u3092', u'\u793A', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(164, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0074', u'\u0065', u'\u0072', u'\u006D', u'\u0069', u'\u006E', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0063', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u0020', u'\u0061', u'\u0072', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0027', u'\u002E', u'\u0020', u'\u0043', u'\u0061', u'\u0073', u'\u0074', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0069', u'\u006E', u'\u0064', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131135LL:
switch(m){
case 0LL:
return new Array_<char16_t>(70, u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306E', u'\u3059', u'\u3079', u'\u3066', u'\u306E', u'\u8981', u'\u7D20', u'\u304C', u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u306E', u'\u305F', u'\u3081', u'\u3001', u'\u578B', u'\u304C', u'\u6C7A', u'\u5B9A', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u306E', u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u3092', u'\u30AD', u'\u30E3', u'\u30B9', u'\u30C8', u'\u3057', u'\u3066', u'\u578B', u'\u3092', u'\u793A', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(136, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0074', u'\u0065', u'\u0072', u'\u006D', u'\u0069', u'\u006E', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0063', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u0020', u'\u0061', u'\u0072', u'\u0065', u'\u0020', u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u002E', u'\u0020', u'\u0043', u'\u0061', u'\u0073', u'\u0074', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0069', u'\u006E', u'\u0064', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131136LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(11, u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3067', u'\u304D', u'\u306A', u'\u3044', u'\u8981', u'\u7D20', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u300D', u'\u306B', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(31, u'\u0041', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 196609LL:
switch(m){
case 0LL:
return new Array_<char16_t>(3, u'\u6210', u'\u529F', u'\u3002');
break;
default:
return new Array_<char16_t>(8, u'\u0053', u'\u0075', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u002E');
break;
}
break;
case 196610LL:
switch(m){
case 0LL:
return new Array_<char16_t>(3, u'\u5931', u'\u6557', u'\u3002');
break;
default:
return new Array_<char16_t>(8, u'\u0046', u'\u0061', u'\u0069', u'\u006C', u'\u0075', u'\u0072', u'\u0065', u'\u002E');
break;
}
break;
case 196611LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u958B', u'\u59CB', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0043', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0065', u'\u0064', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u002E'));
break;
}
break;
case 196612LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(10, u'\u5B57', u'\u53E5', u'\u69CB', u'\u6587', u'\u89E3', u'\u6790', u'\u5B8C', u'\u4E86', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0050', u'\u0061', u'\u0072', u'\u0073', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u002E'));
break;
}
break;
case 196613LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u610F', u'\u5473', u'\u89E3', u'\u6790', u'\u5B8C', u'\u4E86', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u3002'));
break;
default:
return ((new Array_<char16_t>(31, u'\u0053', u'\u0065', u'\u006D', u'\u0061', u'\u006E', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0061', u'\u006E', u'\u0061', u'\u006C', u'\u0079', u'\u0073', u'\u0069', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u002E'));
break;
}
break;
case 196614LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u751F', u'\u6210', u'\u51E6', u'\u7406', u'\u5B8C', u'\u4E86', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0047', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0070', u'\u0072', u'\u006F', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u002E'));
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// cmp
static int64_t atm(kl* atn /*me*/, kl* ato /*t*/){
return (atp)(((static_cast<int64_t>((atn)->km)) - (static_cast<int64_t>((ato)->km))));
}
// toStr
static Array_<char16_t>* atq(kl* atr /*me*/){
return v<bool>(((atr)->km), (new Array_<int64_t>(1, (0LL))));
}
// _dtor
static void ats(kl* att){
}
// _copy
static kl* atu(kl* atv){
kl* atw = nullptr;
(atw) = (new kl());
((atw)->km) = ((atv)->km);
return as_<kl>(classTable_, (atw), 20);
}
// _toBin
static Array_<uint8_t>* atx(kl* aty){
Array_<uint8_t>* atz = nullptr;
(atz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(atz) = ((atz)->Cat(toBin_((aty)->km)));
return atz;
}
// _fromBin
static kl* aub(kl* auc, Array_<uint8_t>* aud, int64_t* aue){
kl* auf = nullptr;
(auf) = (new kl());
((auf)->km) = (fromBin_<bool>((aud), (*aue)));
return auf;
}
// _forEach
template<typename T_, typename K_, typename V_> static bool ko(T_ aug /*me_*/, Array_<int64_t>* auh /*type*/, const void* aui /*callback*/, fz* auj /*data*/){
return dictForEach_(aug->B, static_cast<bool(*)(K_, V_, Class_*)>(aui), auj);
}
// parseSrc
static bool kp(Array_<char16_t>* auk /*key*/, fx* aul /*value*/, fz* aum /*data*/){
Array_<char16_t>* auu = nullptr; // truePath
avk* avi = nullptr; // ast
if(!eqAddr_((aul), (nullptr))){
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (auk), (aul));
return true;
}
if(!((auq)((auk)))){
(ad)((4LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (auk))));
return true;
}
((as_<kl>(classTable_, (aum), 20))->km) = (false);
if(((auk)->At(0LL)) == (u'\u005C')){
(auu) = (((ay)->Cat((auv)((auw<Array_<char16_t>*>((auk), (new Array_<int64_t>(1, (0LL))), (1LL), (-1LL))))))->Cat(new Array_<char16_t>(3, u'\u002E', u'\u006B', u'\u006E')));
}
else{
(auu) = (((av)->Cat((auv)((auk))))->Cat(new Array_<char16_t>(3, u'\u002E', u'\u006B', u'\u006E')));
}
(be) = ((auy)((new auz()), (auu)));
if(eqAddr_((be), (nullptr))){
(ad)((5LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (auu))));
return true;
}
(bf) = (auk);
(avc) = (1LL);
(avd) = (0LL);
(ave) = (u'\u0000');
(avf) = (u'\u0000');
(avg) = (false);
(bg) = (new Stack_<fx*>());
(avh) = (0LL);
(bh) = (nullptr);
(avi) = ((avj)());
(avm)((be));
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (auk), (avi));
return true;
}
// searchMain
static fw* ks(){
fx* avn = nullptr; // ast
bool avp = false;
fx* avs = nullptr; // mainFunc
bool avt = false;
fw* avw = nullptr; // mainFunc2
(avn) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u005C'))->Cat(az)), (&avp)));
if(eqAddr_((avn), (nullptr))){
(ad)((131073LL), (nullptr), (nullptr));
return nullptr;
}
(avs) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((avn)->nh), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006D', u'\u0061', u'\u0069', u'\u006E')), (&avt)));
if((eqAddr_((avs), (nullptr))) || (((avs)->lw) != (256LL))){
(ad)((131073LL), (nullptr), (nullptr));
return nullptr;
}
(avw) = (as_<fw>(classTable_, (avs), 8));
if(((((((avw)->sg)->Len()) != (0LL)) || (!eqAddr_(((avw)->sh), (nullptr)))) || (((avw)->sm) != (0LL))) || ((((avw)->sf)->Len()) != (0LL))){
(ad)((131074LL), ((avw)->ne), (nullptr));
}
return avw;
}
// resolveIdentifier
static bool kv(Array_<char16_t>* avz /*key*/, fx* awa /*value*/, fz* awb /*data*/){
List_<avl*>* awc = nullptr; // scopeRefedItems
avl* awh = nullptr; // item
fx* awj = nullptr; // ast
bool awl = false; // otherFile
int64_t awm = 0; // ptrAt
Array_<char16_t>* awo = nullptr; // ptrName
fx* awp = nullptr; // foundAst
Array_<char16_t>* awu = nullptr; // ptrSrc
fx* awy = nullptr; // ast2
bool awz = false;
bool axc = false;
fx* axe = nullptr; // scope
bool axg = false; // overFunc
fx* axr = nullptr; // ast2
bool axs = false;
bool axv = false; // err
int64_t aya = 0; // kind
if(!(is_(classTable_, (awa), 32))){
throw 0xE9170000U;
}
(awc) = ((as_<avk>(classTable_, (awa), 32))->awd);
awe<List_<avl*>*>((awc), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<avl*>*>((awc), (new Array_<int64_t>(1, (0LL)))))){
(awh) = (awi<List_<avl*>*, avl*>((awc), (new Array_<int64_t>(1, (0LL)))));
(awj) = ((awh)->awk);
if(!(eqAddr_(((awj)->nj), (nullptr)))){
throw 0xE9170000U;
}
if(!(!eqAddr_(((awj)->ni), (nullptr)))){
throw 0xE9170000U;
}
(awl) = (false);
(awm) = (awn<Array_<char16_t>*, char16_t>(((awj)->ni), (new Array_<int64_t>(1, (0LL))), (u'\u0040'), (-1LL)));
(awo) = (((awm) == (-1LL)) ? ((awj)->ni) : (auw<Array_<char16_t>*>(((awj)->ni), (new Array_<int64_t>(1, (0LL))), ((awm) + (1LL)), (-1LL))));
(awp) = (nullptr);
if((awm) != (-1LL)){
if((awm) == (0LL)){
(awu) = (avz);
}
else{
(awu) = (auw<Array_<char16_t>*>(((awj)->ni), (new Array_<int64_t>(1, (0LL))), (0LL), (awm)));
if(cmp_((awu), (avz)) == 0){
(ad)((131076LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, (awu))));
}
(awl) = (true);
}
(awy) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), (awu), (&awz)));
if(!eqAddr_((awy), (nullptr))){
(awp) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((awy)->nh), (new Array_<int64_t>(1, (0LL))), (awo), (&axc)));
}
}
else{
(axe) = ((awh)->axf);
(axg) = (false);
while(true){
if(eqAddr_(((axe)->ng), (nullptr))){
break;
}
if((!eqAddr_(((axe)->nf), (nullptr))) && (cmp_(((axe)->nf), (awo)) == 0)){
if((((axe)->lw) == (256LL)) && (!eqAddr_(((axe)->ni), (nullptr)))){
(ad)((131075LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, (awo))));
}
else{
(awp) = (axe);
break;
}
}
(axr) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((axe)->nh), (new Array_<int64_t>(1, (0LL))), (awo), (&axs)));
if(!eqAddr_((axr), (nullptr))){
(axv) = (false);
if(axg){
if(((axr)->lw) == (7LL)){
(aya) = ((as_<gb>(classTable_, (axr), 10))->qk);
if((((aya) == (5LL)) || ((aya) == (3LL))) || ((aya) == (2LL))){
(axv) = (true);
}
}
if((!(axv)) && ((aye<int64_t>(((axr)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
(axv) = (true);
}
}
if(((!(axv)) && (((axr)->lw) == (256LL))) && (!eqAddr_(((axr)->ni), (nullptr)))){
(axv) = (true);
}
if(axv){
(ad)((131075LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, (awo))));
}
else{
(awp) = (axr);
break;
}
}
if(((axe)->lw) == (256LL)){
(axg) = (true);
}
(axe) = ((axe)->ng);
}
}
if(!eqAddr_((awp), (nullptr))){
if((awl) && (!((awp)->no))){
(ad)((131077LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, ((awj)->ni))));
}
((awj)->nj) = (awp);
}
else{
(ad)((131078LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, ((awj)->ni))));
((awj)->nj) = (nullptr);
}
ays<List_<avl*>*>((awc), (new Array_<int64_t>(1, (0LL))));
}
return true;
}
// rebuild
static fw* kw(fw* ayt /*mainFunc*/){
fw* ayv = nullptr; // entry
fx* ayy = nullptr; // root
bool ayz = false;
(ayv) = ((ayw)((ayt)));
(ayx)((ayv));
(ayy) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u005C'))->Cat(az)), (&ayz)));
if(!(is_(classTable_, (ayy), 32))){
throw 0xE9170000U;
}
uh<List_<fx*>*, fx*>(((as_<avk>(classTable_, (ayy), 32))->aza), (new Array_<int64_t>(1, (0LL))), (ayv));
ko<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), (azb), (nullptr));
return ayv;
}
// addr
static uint64_t mk(fz* azc /*class_*/){
return reinterpret_cast<uint64_t>(azc);
}
// _addList
template<typename T_, typename C_> static void uh(T_ azd /*me_*/, Array_<int64_t>* aze /*type*/, C_ azf /*item*/){
azd->B.push_back(azf);
}
// _addQueue
template<typename T_, typename C_> static void uk(T_ azg /*me_*/, Array_<int64_t>* azh /*type*/, C_ azi /*item*/){
azg->B.push(azi);
}
// _dtor
static void azj(um* azk){
((azk)->azl) = (nullptr);
((azk)->azm) = (nullptr);
}
// _copy
static um* azn(um* azo){
um* azp = nullptr;
(azp) = (new um());
((azp)->azq) = ((azo)->azq);
((azp)->azr) = ((azo)->azr);
((azp)->azl) = (copy_((azo)->azl));
((azp)->azm) = (copy_((azo)->azm));
return as_<um>(classTable_, (azp), 24);
}
// _toBin
static Array_<uint8_t>* azs(um* azt){
Array_<uint8_t>* azu = nullptr;
(azu) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(azu) = ((azu)->Cat(toBin_((azt)->azq)));
(azu) = ((azu)->Cat(toBin_((azt)->azr)));
(azu) = ((azu)->Cat(toBin_((azt)->azl)));
(azu) = ((azu)->Cat(toBin_((azt)->azm)));
return azu;
}
// _fromBin
static um* azz(um* baa, Array_<uint8_t>* bab, int64_t* bac){
um* bad = nullptr;
(bad) = (new um());
((bad)->azq) = (fromBin_<bool>((bab), (*bac)));
((bad)->azr) = (fromBin_<bool>((bab), (*bac)));
((bad)->azl) = (fromBin_<fx*>((bab), (*bac)));
((bad)->azm) = (fromBin_<um*>((bab), (*bac)));
return bad;
}
// _dtor
static void bae(ul* baf){
((baf)->bag) = (nullptr);
((baf)->ne) = (nullptr);
((baf)->nf) = (nullptr);
((baf)->ng) = (nullptr);
((baf)->nh) = (nullptr);
((baf)->ni) = (nullptr);
((baf)->nj) = (nullptr);
((baf)->nk) = (nullptr);
}
// _copy
static ul* bah(ul* bai){
ul* baj = nullptr;
(baj) = (new ul());
((baj)->bag) = (copy_((bai)->bag));
((baj)->ne) = (copy_((bai)->ne));
((baj)->nf) = (copy_((bai)->nf));
((baj)->ng) = (copy_((bai)->ng));
((baj)->nh) = (copy_((bai)->nh));
((baj)->ni) = (copy_((bai)->ni));
((baj)->nj) = (copy_((bai)->nj));
((baj)->nk) = (copy_((bai)->nk));
((baj)->no) = ((bai)->no);
((baj)->lw) = ((bai)->lw);
return as_<ul>(classTable_, (baj), 22);
}
// _toBin
static Array_<uint8_t>* bak(ul* bal){
Array_<uint8_t>* bam = nullptr;
(bam) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bam) = ((bam)->Cat(toBin_((bal)->bag)));
(bam) = ((bam)->Cat(toBin_((bal)->ne)));
(bam) = ((bam)->Cat(toBin_((bal)->nf)));
(bam) = ((bam)->Cat(toBin_((bal)->ng)));
(bam) = ((bam)->Cat(toBin_((bal)->nh)));
(bam) = ((bam)->Cat(toBin_((bal)->ni)));
(bam) = ((bam)->Cat(toBin_((bal)->nj)));
(bam) = ((bam)->Cat(toBin_((bal)->nk)));
(bam) = ((bam)->Cat(toBin_((bal)->no)));
(bam) = ((bam)->Cat(toBin_((bal)->lw)));
return bam;
}
// _fromBin
static ul* bax(ul* bay, Array_<uint8_t>* baz, int64_t* bba){
ul* bbb = nullptr;
(bbb) = (new ul());
((bbb)->bag) = (fromBin_<List_<um*>*>((baz), (*bba)));
((bbb)->ne) = (fromBin_<ga*>((baz), (*bba)));
((bbb)->nf) = (fromBin_<Array_<char16_t>*>((baz), (*bba)));
((bbb)->ng) = (fromBin_<fx*>((baz), (*bba)));
((bbb)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((baz), (*bba)));
((bbb)->ni) = (fromBin_<Array_<char16_t>*>((baz), (*bba)));
((bbb)->nj) = (fromBin_<fx*>((baz), (*bba)));
((bbb)->nk) = (fromBin_<fy*>((baz), (*bba)));
((bbb)->no) = (fromBin_<bool>((baz), (*bba)));
((bbb)->lw) = (fromBin_<int64_t>((baz), (*bba)));
return bbb;
}
// _dtor
static void bbc(un* bbd){
((bbd)->bbe) = (nullptr);
((bbd)->bbf) = (nullptr);
}
// _copy
static un* bbg(un* bbh){
un* bbi = nullptr;
(bbi) = (new un());
((bbi)->bbe) = (copy_((bbh)->bbe));
((bbi)->bbf) = (copy_((bbh)->bbf));
return as_<un>(classTable_, (bbi), 26);
}
// _toBin
static Array_<uint8_t>* bbj(un* bbk){
Array_<uint8_t>* bbl = nullptr;
(bbl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bbl) = ((bbl)->Cat(toBin_((bbk)->bbe)));
(bbl) = ((bbl)->Cat(toBin_((bbk)->bbf)));
return bbl;
}
// _fromBin
static un* bbo(un* bbp, Array_<uint8_t>* bbq, int64_t* bbr){
un* bbs = nullptr;
(bbs) = (new un());
((bbs)->bbe) = (fromBin_<Array_<char16_t>*>((bbq), (*bbr)));
((bbs)->bbf) = (fromBin_<gc*>((bbq), (*bbr)));
return bbs;
}
// _getQueue
template<typename T_, typename R_> static R_ us(T_ bbt /*me_*/, Array_<int64_t>* bbu /*type*/){
R_ r_ = bbt->B.front();
bbt->B.pop();
return r_;
}
// buildFunc
static void ut(fw* bbv /*ast*/){
bby* bbw = nullptr; // info
Array_<char16_t>* bcc = nullptr; // template
Array_<char16_t>* bcq = nullptr; // retType
Array_<char16_t>* bcu = nullptr; // arg
int64_t bcw = 0; // idx
List_<gb*>* bcx = nullptr; // items
gb* bcz = nullptr; // item
bby* bdd = nullptr; // info2
bool bej = false; // hasMembers
gb* bem = nullptr; // arg2
List_<um*>* bep = nullptr; // members
int64_t bev = 0; // localVarPos
gb* bfa = nullptr; // localVar
bby* bfb = nullptr; // info2
un* bfj = nullptr; // tmpVar
(bbw) = ((bbx)((bbv)));
if((bbw)->bca){
return;
}
((bbw)->bca) = (true);
(bcc) = (new Array_<char16_t>(0));
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL)){
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)){
(bcc) = (new Array_<char16_t>(48, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u004B', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0056', u'\u005F', u'\u003E', u'\u0020'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (8LL))) == (8LL)){
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(bcc) = (new Array_<char16_t>(48, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0043', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0052', u'\u005F', u'\u003E', u'\u0020'));
}
else{
(bcc) = (new Array_<char16_t>(35, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0043', u'\u005F', u'\u003E', u'\u0020'));
}
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(bcc) = (new Array_<char16_t>(35, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0052', u'\u005F', u'\u003E', u'\u0020'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (256LL))) == (256LL)){
(bcc) = (new Array_<char16_t>(48, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u004B', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0056', u'\u005F', u'\u003E', u'\u0020'));
}
else{
(bcc) = (new Array_<char16_t>(22, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u003E', u'\u0020'));
}
}
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(bcq) = (new Array_<char16_t>(2, u'\u0052', u'\u005F'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (4LL))) == (4LL)){
(bcq) = (new Array_<char16_t>(2, u'\u0054', u'\u005F'));
}
else{
(bcq) = ((bct)(((bbv)->sh)));
}
(bcu) = (new Array_<char16_t>(0));
(bcw) = (0LL);
(bcx) = ((bbv)->sg);
awe<List_<gb*>*>((bcx), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bcx), (new Array_<int64_t>(1, (0LL)))))){
(bcz) = (awi<List_<gb*>*, gb*>((bcx), (new Array_<int64_t>(1, (0LL)))));
if((bcw) != (0LL)){
(bcu) = ((bcu)->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
}
(bdd) = ((bbx)((bcz)));
if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL)) && ((bcw) == (0LL))){
if(!((bdg)(((bcz)->qf)))){
throw 0xE9170000U;
}
(bcu) = ((bcu)->Cat(new Array_<char16_t>(2, u'\u0054', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)) && ((bcw) == (2LL))){
if(!((bdg)(((bcz)->qf)))){
throw 0xE9170000U;
}
(bcu) = ((bcu)->Cat(new Array_<char16_t>(2, u'\u004B', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)) && ((bcw) == (3LL))){
if(!((bdg)(((bcz)->qf)))){
throw 0xE9170000U;
}
(bcu) = ((bcu)->Cat(new Array_<char16_t>(2, u'\u0056', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (8LL))) == (8LL)) && ((bcw) == (2LL))){
if(!((bdg)(((bcz)->qf)))){
throw 0xE9170000U;
}
(bcu) = ((bcu)->Cat(new Array_<char16_t>(2, u'\u0043', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (2LL))) == (2LL)) && ((bcw) == (2LL))){
if(!((bdg)(((bcz)->qf)))){
throw 0xE9170000U;
}
(bcu) = ((bcu)->Cat(new Array_<char16_t>(2, u'\u0054', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (256LL))) == (256LL)) && ((bcw) == (2LL))){
if(!((bdg)(((bcz)->qf)))){
throw 0xE9170000U;
}
(bcu) = ((bcu)->Cat(new Array_<char16_t>(11, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0076', u'\u006F', u'\u0069', u'\u0064', u'\u002A')));
}
else{
(bcu) = ((bcu)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((bcz)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
if((bcz)->ql){
(bcu) = ((bcu)->Cat(new Array_<char16_t>(1, u'\u002A')));
}
(bcu) = ((bcu)->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bdd)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if(!eqAddr_(((bcz)->nf), (nullptr))){
(bcu) = ((bcu)->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u002F', u'\u002A'))->Cat(v<Array_<char16_t>*>(((bcz)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002A', u'\u002F'))));
}
ays<List_<gb*>*>((bcx), (new Array_<int64_t>(1, (0LL))));
(bcw) = ((bcw) + (1LL));
}
if(!eqAddr_(((bbv)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bbv)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bcc), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>((bcq), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bbw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0028'))->Cat(v<Array_<char16_t>*>((bcu), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bcc), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>((bcq), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bbw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0028'))->Cat(v<Array_<char16_t>*>((bcu), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')))))));
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (4096LL))) == (4096LL)){
if((((bbv)->sf)->Len()) == (1LL)){
awe<List_<Array_<char16_t>*>*>(((bbv)->sf), (new Array_<int64_t>(1, (0LL))));
(bej) = (false);
if((((bbv)->sg)->Len()) > (0LL)){
awe<List_<gb*>*>(((bbv)->sg), (new Array_<int64_t>(1, (0LL))));
(bem) = (awi<List_<gb*>*, gb*>(((bbv)->sg), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((((bem)->qf)->nj), (nullptr))) && (((((bem)->qf)->nj)->lw) == (5LL))){
(bep) = ((as_<ul>(classTable_, (((bem)->qf)->nj), 22))->bag);
(beq)((ao), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((bbv)->sf), (new Array_<int64_t>(1, (0LL))))), ((bbv)->sg), (bep));
(bej) = (true);
}
}
if(!(bej)){
(beq)((ao), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((bbv)->sf), (new Array_<int64_t>(1, (0LL))))), ((bbv)->sg), (nullptr));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
else{
beu<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
(bev) = (bew<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL)))));
(bex)(((bbv)->si), (nullptr), (nullptr));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
awe<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
bey<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))), (bev));
ays<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
awe<List_<gb*>*>((as), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((as), (new Array_<int64_t>(1, (0LL)))))){
(bfa) = (awi<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL)))));
(bfb) = ((bbx)((bfa)));
if(eqAddr_(((bfa)->nf), (nullptr))){
bfe<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((bfa)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfb)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bff)(((bfa)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else{
bfe<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((bfa)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfb)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bff)(((bfa)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u003B', u'\u0020', u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfa)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A')))))));
}
bfh<List_<gb*>*>((as), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<un*>*>((aq), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<un*>*>((aq), (new Array_<int64_t>(1, (0LL)))))){
(bfj) = (awi<List_<un*>*, un*>((aq), (new Array_<int64_t>(1, (0LL)))));
bfe<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((bfj)->bbf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfj)->bbe), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bff)(((bfj)->bbf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
bfh<List_<un*>*>((aq), (new Array_<int64_t>(1, (0LL))));
}
}
}
// buildClass
static void uw(ul* bfk /*ast*/){
Array_<char16_t>* bfl = nullptr; // parentId
bby* bfr = nullptr; // info
int64_t bfw = 0; // parentOffset
bby* bfy = nullptr; // parentInfo
List_<um*>* bgc = nullptr; // items
um* bge = nullptr; // item
bgi* bgh = nullptr; // var_
bby* bgj = nullptr; // info2
fw* bgm = nullptr; // ctor
bby* bgq = nullptr; // ctorInfo
fw* bgs = nullptr; // cmp
bby* bgv = nullptr; // cmpInfo
fw* bgw = nullptr; // copy
bby* bgy = nullptr; // copyInfo
List_<um*>* bha = nullptr; // items
um* bhc = nullptr; // item
bgi* bhf = nullptr; // var_
bby* bhg = nullptr; // info2
(bfl) = (nullptr);
if(!eqAddr_(((bfk)->nj), (nullptr))){
(bfl) = ((bfo)((as_<ul>(classTable_, ((bfk)->nj), 22))));
}
if(eqAddr_((bfl), (nullptr))){
(bfl) = (new Array_<char16_t>(6, u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F'));
}
(bfr) = ((bbx)((bfk)));
if(!(((bfr)->bft) != (-1LL))){
throw 0xE9170000U;
}
if(eqAddr_(((bfk)->nj), (nullptr))){
(bfw) = (0LL);
}
else{
(bfy) = ((bbx)(((bfk)->nj)));
if(!(((bfy)->bft) != (-1LL))){
throw 0xE9170000U;
}
(bfw) = ((bfy)->bft);
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((at), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u005B'))->Cat(v<int64_t>((((bfr)->bft) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u005D', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<int64_t>(((bfw) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
if(!eqAddr_(((bfk)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfk)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(10, u'\u0020', u'\u003A', u'\u0020', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>((bfl), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u007B', u'\u000A', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0063', u'\u003A', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003A', u'\u003A'))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0028', u'\u0029', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>((bfl), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))))));
(bgc) = ((bfk)->bag);
awe<List_<um*>*>((bgc), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((bgc), (new Array_<int64_t>(1, (0LL)))))){
(bge) = (awi<List_<um*>*, um*>((bgc), (new Array_<int64_t>(1, (0LL)))));
if((((bge)->azl)->lw) == (2LL)){
(bgh) = (as_<bgi>(classTable_, ((bge)->azl), 38));
(bgj) = ((bbx)(((bgh)->bgk)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bgj)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))));
}
ays<List_<um*>*>((bgc), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0059', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<int64_t>((((bfr)->bft) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
(bgm) = ((bgn)((bfk), (new Array_<char16_t>(4, u'\u0063', u'\u0074', u'\u006F', u'\u0072'))));
if(!eqAddr_((bgm), (nullptr))){
(bgq) = ((bbx)((bgm)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bgq)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bgs) = ((bgn)((bfk), (new Array_<char16_t>(3, u'\u0063', u'\u006D', u'\u0070'))));
if(!eqAddr_((bgs), (nullptr))){
(bgv) = ((bbx)((bgs)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0076', u'\u0069', u'\u0072', u'\u0074', u'\u0075', u'\u0061', u'\u006C', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0065', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(19, u'\u003A', u'\u003A', u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u002A', u'\u0020', u'\u0075', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002A', u'\u003E', u'\u0028', u'\u0074', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bgv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002C', u'\u0020', u'\u0075', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
(bgw) = ((bgn)((bfk), (new Array_<char16_t>(5, u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079'))));
if(!(!eqAddr_((bgw), (nullptr)))){
throw 0xE9170000U;
}
(bgy) = ((bbx)((bgw)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(43, u'\u0076', u'\u0069', u'\u0072', u'\u0074', u'\u0075', u'\u0061', u'\u006C', u'\u0020', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0065', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u003A', u'\u003A', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bgy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bha) = ((bfk)->bag);
awe<List_<um*>*>((bha), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((bha), (new Array_<int64_t>(1, (0LL)))))){
(bhc) = (awi<List_<um*>*, um*>((bha), (new Array_<int64_t>(1, (0LL)))));
if((((bhc)->azl)->lw) == (2LL)){
(bhf) = (as_<bgi>(classTable_, ((bhc)->azl), 38));
(bhg) = ((bbx)(((bhf)->bgk)));
if(eqAddr_((((bhf)->bgk)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)((((bhf)->bgk)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bhg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)((((bhf)->bgk)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bhg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u003B', u'\u0020', u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>((((bhf)->bgk)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))))));
}
}
ays<List_<um*>*>((bha), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u007D', u'\u003B', u'\u000A')));
}
// write
static void ux(List_<Array_<char16_t>*>* bhk /*resFiles*/){
bho* bhm = nullptr; // writer
gb* bhv = nullptr; // globalVar
bby* bhw = nullptr; // info
Array_<char16_t>* bib = nullptr; // item
(bhl)(((ba)->Cat(new Array_<char16_t>(8, u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068'))), ((av)->Cat(new Array_<char16_t>(8, u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068'))));
(bhm) = ((bhn)((new bho()), ((au)->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0063', u'\u0070', u'\u0070'))), (false)));
(bhp)((bhm), (new Array_<char16_t>(20, u'\u0023', u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0075', u'\u0064', u'\u0065', u'\u0020', u'\u0022', u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068', u'\u0022', u'\u000A')));
(bhp)((bhm), (new Array_<char16_t>(12, u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0070', u'\u0061', u'\u0063', u'\u0065', u'\u0020', u'\u007B', u'\u000A')));
awe<List_<Array_<char16_t>*>*>((am), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((am), (new Array_<int64_t>(1, (0LL)))))){
(bhp)((bhm), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((am), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<Array_<char16_t>*>*>((an), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((an), (new Array_<int64_t>(1, (0LL)))))){
(bhp)((bhm), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((an), (new Array_<int64_t>(1, (0LL))));
}
if((uo) != (0LL)){
(bhp)((bhm), (((new Array_<char16_t>(27, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u005B'))->Cat(v<int64_t>(((uo) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u005D', u'\u003B', u'\u000A'))));
}
(bhp)((bhm), (new Array_<char16_t>(22, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
(bhp)((bhm), (new Array_<char16_t>(21, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u002A', u'\u002A', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
awe<List_<gb*>*>((ar), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((ar), (new Array_<int64_t>(1, (0LL)))))){
(bhv) = (awi<List_<gb*>*, gb*>((ar), (new Array_<int64_t>(1, (0LL)))));
(bhw) = ((bbx)((bhv)));
(bhp)((bhm), (((new Array_<char16_t>(7, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((bhv)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bhw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
ays<List_<gb*>*>((ar), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<Array_<char16_t>*>*>((ap), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((ap), (new Array_<int64_t>(1, (0LL)))))){
(bhp)((bhm), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((ap), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL)))))){
(bhp)((bhm), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
}
(bhp)((bhm), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhp)((bhm), (new Array_<char16_t>(29, u'\u0069', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0020', u'\u0063', u'\u005F', u'\u002C', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u002A', u'\u002A', u'\u0020', u'\u0076', u'\u005F', u'\u0029', u'\u007B', u'\u000A')));
(bhp)((bhm), (new Array_<char16_t>(16, u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
(bhp)((bhm), (new Array_<char16_t>(16, u'\u0061', u'\u0072', u'\u0067', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
awe<List_<Array_<char16_t>*>*>((at), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((at), (new Array_<int64_t>(1, (0LL)))))){
(bib) = (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((at), (new Array_<int64_t>(1, (0LL)))));
(bhp)((bhm), (bib));
ays<List_<Array_<char16_t>*>*>((at), (new Array_<int64_t>(1, (0LL))));
}
(bhp)((bhm), (new Array_<char16_t>(9, u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u005F', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
(bhp)((bhm), (new Array_<char16_t>(5, u'\u0061', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
(bhp)((bhm), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
(bhp)((bhm), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bic)((bhm));
}
// _dtor
static void bid(va* bie){
((bie)->bif) = (nullptr);
((bie)->big) = (nullptr);
}
// _copy
static va* bih(va* bii){
va* bij = nullptr;
(bij) = (new va());
((bij)->bif) = (copy_((bii)->bif));
((bij)->big) = (copy_((bii)->big));
return as_<va>(classTable_, (bij), 28);
}
// _toBin
static Array_<uint8_t>* bik(va* bil){
Array_<uint8_t>* bim = nullptr;
(bim) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bim) = ((bim)->Cat(toBin_((bil)->bif)));
(bim) = ((bim)->Cat(toBin_((bil)->big)));
return bim;
}
// _fromBin
static va* bip(va* biq, Array_<uint8_t>* bir, int64_t* bis){
va* bit = nullptr;
(bit) = (new va());
((bit)->bif) = (fromBin_<Array_<char16_t>*>((bir), (*bis)));
((bit)->big) = (fromBin_<gc*>((bir), (*bis)));
return bit;
}
// buildFunc
static void ve(fw* biu /*ast*/){
bix* biv = nullptr; // info
Array_<char16_t>* bjb = nullptr; // arg
bool bjd = false; // first
List_<gb*>* bje = nullptr; // items
gb* bjg = nullptr; // item
bix* bjh = nullptr; // info2
bool bjx = false; // hasMembers
gb* bka = nullptr; // arg2
List_<um*>* bkd = nullptr; // members
int64_t bki = 0; // localVarPos
gb* bkl = nullptr; // localVar
bix* bkm = nullptr; // info2
va* bks = nullptr; // tmpVar
(biv) = ((biw)((biu)));
if((biv)->biz){
return;
}
((biv)->biz) = (true);
(bjb) = (new Array_<char16_t>(0));
(bjd) = (true);
(bje) = ((biu)->sg);
awe<List_<gb*>*>((bje), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bje), (new Array_<int64_t>(1, (0LL)))))){
(bjg) = (awi<List_<gb*>*, gb*>((bje), (new Array_<int64_t>(1, (0LL)))));
(bjh) = ((biw)((bjg)));
if(bjd){
(bjd) = (false);
}
else{
(bjb) = ((bjb)->Cat(new Array_<char16_t>(1, u'\u002C')));
}
(bjb) = ((bjb)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bjh)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if(!eqAddr_(((bjg)->nf), (nullptr))){
(bjb) = ((bjb)->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u002F', u'\u002A'))->Cat(v<Array_<char16_t>*>(((bjg)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002A', u'\u002F'))));
}
ays<List_<gb*>*>((bje), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((biu)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((biu)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((biv)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0028'))->Cat(v<Array_<char16_t>*>((bjb), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')))));
if((aye<int64_t>(((biu)->sm), (new Array_<int64_t>(1, (0LL))), (4096LL))) == (4096LL)){
if((((biu)->sf)->Len()) == (1LL)){
awe<List_<Array_<char16_t>*>*>(((biu)->sf), (new Array_<int64_t>(1, (0LL))));
(bjx) = (false);
if((((biu)->sg)->Len()) > (0LL)){
awe<List_<gb*>*>(((biu)->sg), (new Array_<int64_t>(1, (0LL))));
(bka) = (awi<List_<gb*>*, gb*>(((biu)->sg), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((((bka)->qf)->nj), (nullptr))) && (((((bka)->qf)->nj)->lw) == (5LL))){
(bkd) = ((as_<ul>(classTable_, (((bka)->qf)->nj), 22))->bag);
(bke)((bl), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((biu)->sf), (new Array_<int64_t>(1, (0LL))))), ((biu)->sg), (bkd));
(bjx) = (true);
}
}
if(!(bjx)){
(bke)((bl), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((biu)->sf), (new Array_<int64_t>(1, (0LL))))), ((biu)->sg), (nullptr));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
else{
beu<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
(bki) = (bew<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL)))));
(bkj)(((biu)->si));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
awe<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
bey<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))), (bki));
ays<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
awe<List_<gb*>*>((bo), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bo), (new Array_<int64_t>(1, (0LL)))))){
(bkl) = (awi<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL)))));
(bkm) = ((biw)((bkl)));
if(eqAddr_(((bkl)->nf), (nullptr))){
bfe<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkm)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((bkp)(((bkl)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else{
bfe<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkm)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((bkp)(((bkl)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u003B', u'\u0020', u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkl)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))))));
}
bfh<List_<gb*>*>((bo), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<va*>*>((bm), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<va*>*>((bm), (new Array_<int64_t>(1, (0LL)))))){
(bks) = (awi<List_<va*>*, va*>((bm), (new Array_<int64_t>(1, (0LL)))));
bfe<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bks)->bif), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((bkp)(((bks)->big))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
bfh<List_<va*>*>((bm), (new Array_<int64_t>(1, (0LL))));
}
}
}
// buildClass
static void vh(ul* bkt /*ast*/){
Array_<char16_t>* bku = nullptr; // parentId
bix* bla = nullptr; // info
fw* ble = nullptr; // ctor
bix* bli = nullptr; // ctorInfo
List_<um*>* blk = nullptr; // items
um* blm = nullptr; // item
(bku) = (nullptr);
if(!eqAddr_(((bkt)->nj), (nullptr))){
(bku) = ((bkx)((as_<ul>(classTable_, ((bkt)->nj), 22))));
}
if(eqAddr_((bku), (nullptr))){
(bku) = (new Array_<char16_t>(6, u'\u004F', u'\u0062', u'\u006A', u'\u0065', u'\u0063', u'\u0074'));
}
(bla) = ((biw)((bkt)));
if(!eqAddr_(((bkt)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkt)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
(ble) = ((blf)((bkt), (new Array_<char16_t>(4, u'\u0063', u'\u0074', u'\u006F', u'\u0072'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bla)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0028', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bku), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
if(!eqAddr_((ble), (nullptr))){
(bli) = ((biw)((ble)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bli)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bla)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(27, u'\u002E', u'\u0070', u'\u0072', u'\u006F', u'\u0074', u'\u006F', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u003D', u'\u0020', u'\u004F', u'\u0062', u'\u006A', u'\u0065', u'\u0063', u'\u0074', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>((bku), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0070', u'\u0072', u'\u006F', u'\u0074', u'\u006F', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0029', u'\u003B', u'\u000A')))));
(blk) = ((bkt)->bag);
awe<List_<um*>*>((blk), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((blk), (new Array_<int64_t>(1, (0LL)))))){
(blm) = (awi<List_<um*>*, um*>((blk), (new Array_<int64_t>(1, (0LL)))));
if((((blm)->azl)->lw) == (256LL)){
uk<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL))), (as_<fw>(classTable_, ((blm)->azl), 8)));
}
ays<List_<um*>*>((blk), (new Array_<int64_t>(1, (0LL))));
}
}
// write
static void vi(List_<Array_<char16_t>*>* blp /*resFiles*/){
bho* blq = nullptr; // writer
bool blr = false; // static
bool bls = false;
gb* blx = nullptr; // globalVar
bix* bly = nullptr; // info
bool bmb = false; // first
Array_<char16_t>* bmd = nullptr; // resFile
int64_t bmk = 0;
auz* bmq = nullptr; // reader
Array_<char16_t>* bmt = nullptr; // line
int64_t bmy = 0;
bool bne = false; // first
Array_<char16_t>* bng = nullptr; // resFile
int64_t bnn = 0;
Array_<char16_t>* bns = nullptr; // fileName
int64_t bml = 0;
int64_t bmz = 0;
int64_t bno = 0;
(blq) = ((bhn)((new bho()), ((au)->Cat(new Array_<char16_t>(3, u'\u002E', u'\u006A', u'\u0073'))), (false)));
(blr) = (avo<Dict_<Array_<char16_t>*, bool>*, Array_<char16_t>*, bool>((ax), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063')), (&bls)));
if(blr){
(bhp)((blq), (((new Array_<char16_t>(22, u'\u0022', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u0063', u'\u0074', u'\u0022', u'\u003B', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fd)((au))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u0028', u'\u004F', u'\u005F', u'\u0029', u'\u007B', u'\u000A'))));
}
else{
(bhp)((blq), (new Array_<char16_t>(310, u'\u0022', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u0063', u'\u0074', u'\u0022', u'\u003B', u'\u0021', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0066', u'\u0029', u'\u007B', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0064', u'\u003D', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u003B', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0068', u'\u0028', u'\u0029', u'\u007B', u'\u0064', u'\u002E', u'\u0072', u'\u0065', u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u0044', u'\u004F', u'\u004D', u'\u0043', u'\u006F', u'\u006E', u'\u0074', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u006F', u'\u0061', u'\u0064', u'\u0065', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u003B', u'\u0066', u'\u0028', u'\u0029', u'\u007D', u'\u0022', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u0022', u'\u003D', u'\u003D', u'\u003D', u'\u0064', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0053', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u007C', u'\u007C', u'\u0022', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0022', u'\u0021', u'\u003D', u'\u003D', u'\u0064', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0053', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u0026', u'\u0026', u'\u0021', u'\u0064', u'\u002E', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0045', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0064', u'\u006F', u'\u0053', u'\u0063', u'\u0072', u'\u006F', u'\u006C', u'\u006C', u'\u003F', u'\u0073', u'\u0065', u'\u0074', u'\u0054', u'\u0069', u'\u006D', u'\u0065', u'\u006F', u'\u0075', u'\u0074', u'\u0028', u'\u0066', u'\u0029', u'\u003A', u'\u0028', u'\u0064', u'\u002E', u'\u0061', u'\u0064', u'\u0064', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u0044', u'\u004F', u'\u004D', u'\u0043', u'\u006F', u'\u006E', u'\u0074', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u006F', u'\u0061', u'\u0064', u'\u0065', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u002C', u'\u0061', u'\u0064', u'\u0064', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u0029', u'\u007D', u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0029', u'\u007B', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(8, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u004F', u'\u005F', u'\u003B', u'\u000A')));
}
awe<List_<gb*>*>((bn), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bn), (new Array_<int64_t>(1, (0LL)))))){
(blx) = (awi<List_<gb*>*, gb*>((bn), (new Array_<int64_t>(1, (0LL)))));
(bly) = ((biw)((blx)));
(bhp)((blq), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bly)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((bkp)(((blx)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
ays<List_<gb*>*>((bn), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL)))))){
(bhp)((blq), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
}
(bhp)((blq), (new Array_<char16_t>(18, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0043', u'\u005F', u'\u0028', u'\u0074', u'\u002C', u'\u0076', u'\u0029', u'\u007B', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(14, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u0074', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u007B', u'\u000A')));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((3LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((8LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u003B', u'\u000A')));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(10, u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A'))));
(bhp)((blq), (new Array_<char16_t>(30, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u007B', u'\u0053', u'\u003A', u'\u0076', u'\u002E', u'\u0053', u'\u007D', u'\u003B', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(27, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u0076', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003B', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(53, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u0076', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0061', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0043', u'\u005F', u'\u0028', u'\u0074', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0031', u'\u0029', u'\u002C', u'\u0076', u'\u005B', u'\u0069', u'\u005D', u'\u0029', u'\u003B', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u003B', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((130LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((131LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((132LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((133LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((134LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhp)((blq), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(18, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0046', u'\u005F', u'\u0028', u'\u0070', u'\u002C', u'\u0066', u'\u0029', u'\u007B', u'\u000A')));
(bmb) = (true);
awe<List_<Array_<char16_t>*>*>((blp), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((blp), (new Array_<int64_t>(1, (0LL)))))){
(bmd) = (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((blp), (new Array_<int64_t>(1, (0LL)))));
if(bmb){
(bmb) = (false);
(bhp)((blq), (new Array_<char16_t>(8, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u003D', u'\u003D', u'\u003D', u'\u0022')));
}
else{
(bhp)((blq), (new Array_<char16_t>(13, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u003D', u'\u003D', u'\u003D', u'\u0022')));
}
for(bmk = ((ay)->Len()), bml = (((bmd)->Len()) - (1LL)); bmk <= bml; bmk += (1LL)){
(bhp)((blq), ((bmm)(((bmd)->At(bmk)))));
}
(bhp)((blq), (new Array_<char16_t>(3, u'\u0022', u'\u0029', u'\u000A')));
if(((bmd)->At(((bmd)->Len()) - (1LL))) == (u'\u002F')){
(bhp)((blq), (new Array_<char16_t>(20, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else{
(bhp)((blq), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u003F', u'\u0022')));
(bmq) = ((auy)((new auz()), (bmd)));
while(!((bms)((bmq)))){
(bmt) = ((bmu)((bmq)));
for(bmy = (0LL), bmz = (((bmt)->Len()) - (1LL)); bmy <= bmz; bmy += (1LL)){
(bhp)((blq), ((bmm)(((bmt)->At(bmy)))));
}
(bhp)((blq), (new Array_<char16_t>(2, u'\u005C', u'\u006E')));
}
(avm)((bmq));
(bhp)((blq), (new Array_<char16_t>(8, u'\u0022', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
ays<List_<Array_<char16_t>*>*>((blp), (new Array_<int64_t>(1, (0LL))));
}
if(((blp)->Len()) > (0LL)){
(bhp)((blq), (new Array_<char16_t>(26, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else{
(bhp)((blq), (new Array_<char16_t>(21, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
(bhp)((blq), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(22, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0046', u'\u0046', u'\u005F', u'\u0028', u'\u0029', u'\u007B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u005B')));
(bne) = (true);
awe<List_<Array_<char16_t>*>*>((blp), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((blp), (new Array_<int64_t>(1, (0LL)))))){
(bng) = (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((blp), (new Array_<int64_t>(1, (0LL)))));
if(bne){
(bne) = (false);
(bhp)((blq), (new Array_<char16_t>(1, u'\u0022')));
}
else{
(bhp)((blq), (new Array_<char16_t>(2, u'\u002C', u'\u0022')));
}
for(bnn = ((ay)->Len()), bno = (((bng)->Len()) - (1LL)); bnn <= bno; bnn += (1LL)){
(bhp)((blq), ((bmm)(((bng)->At(bnn)))));
}
(bhp)((blq), (new Array_<char16_t>(1, u'\u0022')));
ays<List_<Array_<char16_t>*>*>((blp), (new Array_<int64_t>(1, (0LL))));
}
(bhp)((blq), (new Array_<char16_t>(4, u'\u005D', u'\u003B', u'\u007D', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(5, u'\u0061', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
if(blr){
(bhp)((blq), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else{
(bhp)((blq), (new Array_<char16_t>(3, u'\u007D', u'\u0029', u'\u000A')));
}
(bic)((blq));
(bns) = ((fd)((au)));
(blq) = ((bhn)((new bho()), ((au)->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0068', u'\u0074', u'\u006D', u'\u006C'))), (false)));
(bhp)((blq), (new Array_<char16_t>(16, u'\u003C', u'\u0021', u'\u0044', u'\u004F', u'\u0043', u'\u0054', u'\u0059', u'\u0050', u'\u0045', u'\u0020', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(7, u'\u003C', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(8, u'\u0009', u'\u003C', u'\u0068', u'\u0065', u'\u0061', u'\u0064', u'\u003E', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(27, u'\u0009', u'\u0009', u'\u003C', u'\u006D', u'\u0065', u'\u0074', u'\u0061', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0074', u'\u003D', u'\u0022', u'\u0075', u'\u0074', u'\u0066', u'\u002D', u'\u0038', u'\u0022', u'\u0020', u'\u002F', u'\u003E', u'\u000A')));
(bhp)((blq), (((new Array_<char16_t>(15, u'\u0009', u'\u0009', u'\u003C', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0020', u'\u0073', u'\u0072', u'\u0063', u'\u003D', u'\u0022'))->Cat(v<Array_<char16_t>*>((bns), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(38, u'\u002E', u'\u006A', u'\u0073', u'\u0022', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u003D', u'\u0022', u'\u0074', u'\u0065', u'\u0078', u'\u0074', u'\u002F', u'\u006A', u'\u0061', u'\u0076', u'\u0061', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0022', u'\u003E', u'\u003C', u'\u002F', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u003E', u'\u000A'))));
(bhp)((blq), (((new Array_<char16_t>(9, u'\u0009', u'\u0009', u'\u003C', u'\u0074', u'\u0069', u'\u0074', u'\u006C', u'\u0065', u'\u003E'))->Cat(v<Array_<char16_t>*>((bns), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003C', u'\u002F', u'\u0074', u'\u0069', u'\u0074', u'\u006C', u'\u0065', u'\u003E', u'\u000A'))));
(bhp)((blq), (new Array_<char16_t>(9, u'\u0009', u'\u003C', u'\u002F', u'\u0068', u'\u0065', u'\u0061', u'\u0064', u'\u003E', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(8, u'\u0009', u'\u003C', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u003E', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(9, u'\u0009', u'\u003C', u'\u002F', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u003E', u'\u000A')));
(bhp)((blq), (new Array_<char16_t>(8, u'\u003C', u'\u002F', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bic)((blq));
}
// _signInt
static int64_t atp(int64_t bnt /*me_*/){
return ((bnt) > (0LL)) ? (1LL) : (((bnt) < (0LL)) ? (-1LL) : (0LL));
}
// isCorrectSrcName
static bool auq(Array_<char16_t>* bnu /*name*/){
int64_t bnv = 0; // idx
(bnv) = (0LL);
if(((bnv) < ((bnu)->Len())) && (((bnu)->At(bnv)) == (u'\u005C'))){
(bnv) = ((bnv) + (1LL));
}
while(true){
if(((bnv) >= ((bnu)->Len())) || (!((((u'\u0061') <= ((bnu)->At(bnv))) && (((bnu)->At(bnv)) <= (u'\u007A'))) || (((bnu)->At(bnv)) == (u'\u005F'))))){
return false;
}
while(true){
(bnv) = ((bnv) + (1LL));
if((bnv) >= ((bnu)->Len())){
return true;
}
if(((((u'\u0061') <= ((bnu)->At(bnv))) && (((bnu)->At(bnv)) <= (u'\u007A'))) || (((bnu)->At(bnv)) == (u'\u005F'))) || (((u'\u0030') <= ((bnu)->At(bnv))) && (((bnu)->At(bnv)) <= (u'\u0039')))){
continue;
}
if(((bnu)->At(bnv)) == (u'\u005C')){
(bnv) = ((bnv) + (1LL));
break;
}
return false;
}
}
}
// replacePath
static Array_<char16_t>* auv(Array_<char16_t>* bon /*path*/){
Array_<char16_t>* boo = nullptr; // r
int64_t bos = 0;
int64_t bot = 0;
(boo) = (newArray_<char16_t, Array_<char16_t>*>(1, ((bon)->Len())));
for(bos = (0LL), bot = (((bon)->Len()) - (1LL)); bos <= bot; bos += (1LL)){
((boo)->At(bos)) = ((((bon)->At(bos)) == (u'\u005C')) ? (u'\u002F') : ((bon)->At(bos)));
}
return boo;
}
// _sub
template<typename T_> static T_ auw(T_ bou /*me_*/, Array_<int64_t>* bov /*type*/, int64_t bow /*start*/, int64_t box /*len*/){
return sub_(bou, bow, box);
}
// makeReader
static auz* auy(auz* boy /*me2*/, Array_<char16_t>* boz /*path*/){
boy->bpa = reinterpret_cast<int64_t>(new reader_());
std::u16string s_ = boz->B;
const std::string& t_ = utf16ToUtf8_(s_);
reader_* r_ = reinterpret_cast<reader_*>(boy->bpa);
r_->F = new std::ifstream(t_.c_str(), std::ios::in | std::ios::binary);
if(!*r_->F) return nullptr;
return boy;
}
// _dtor
static void bpb(auz* bpc /*me*/){
}
// fin
static void avm(auz* bpd /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bpd->bpa);
r_->F->close();
}
// setPos
static void bpe(auz* bpf /*me*/, int64_t bpg /*origin*/, int64_t bph /*pos*/){
reader_* r_ = reinterpret_cast<reader_*>(bpf->bpa);
std::ios_base::seekdir o_ = std::ios_base::beg;
switch(bpg){
case 0: o_ = std::ios_base::beg; break;
case 1: o_ = std::ios_base::cur; break;
case 2: o_ = std::ios_base::end; break;
}
r_->F->seekg(bph, o_);
}
// getPos
static int64_t bpi(auz* bpj /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bpj->bpa);
return static_cast<int64_t>(r_->F->tellg());
}
// delimiter
static void bpk(auz* bpl /*me*/, Array_<char16_t>* bpm /*delimiters*/){
}
// read
static Array_<uint8_t>* bpn(auz* bpo /*me*/, int64_t bpp /*size*/){
}
// readLetter
static char16_t bpq(auz* bpr /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bpr->bpa);
return readUtf8_(r_->F);
}
// readInt
static int64_t bps(auz* bpt /*me*/){
}
// readFloat
static double bpu(auz* bpv /*me*/){
}
// readChar
static char16_t bpw(auz* bpx /*me*/){
}
// readStr
static Array_<char16_t>* bpy(auz* bpz /*me*/){
}
// readLine
static Array_<char16_t>* bmu(auz* bqa /*me*/){
Array_<char16_t>* bqb = nullptr; // buf
char16_t bqf = 0; // c
(bqb) = (new Array_<char16_t>(0));
while(!((bms)((bqa)))){
(bqf) = ((bpq)((bqa)));
if((bqf) == (u'\u000D')){
continue;
}
if((bqf) == (u'\u000A')){
break;
}
(bqb) = ((bqb)->Cat(v<char16_t>((bqf), (new Array_<int64_t>(1, (0LL))))));
}
return bqb;
}
// fileSize
static int64_t bql(auz* bqm /*me*/){
}
// term
static bool bms(auz* bqn /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bqn->bpa);
char c_;
if(r_->F->get(c_)) {
r_->F->seekg(-1, std::ios_base::cur);
return false;
}
return true;
}
// _copy
static auz* bqo(auz* bqp){
auz* bqq = nullptr;
(bqq) = (new auz());
((bqq)->bpa) = ((bqp)->bpa);
((bqq)->bqr) = ((bqp)->bqr);
((bqq)->bqs) = ((bqp)->bqs);
((bqq)->bqt) = ((bqp)->bqt);
return as_<auz>(classTable_, (bqq), 30);
}
// _toBin
static Array_<uint8_t>* bqu(auz* bqv){
Array_<uint8_t>* bqw = nullptr;
(bqw) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bqw) = ((bqw)->Cat(toBin_((bqv)->bpa)));
(bqw) = ((bqw)->Cat(toBin_((bqv)->bqr)));
(bqw) = ((bqw)->Cat(toBin_((bqv)->bqs)));
(bqw) = ((bqw)->Cat(toBin_((bqv)->bqt)));
return bqw;
}
// _fromBin
static auz* brb(auz* brc, Array_<uint8_t>* brd, int64_t* bre){
auz* brf = nullptr;
(brf) = (new auz());
((brf)->bpa) = (fromBin_<int64_t>((brd), (*bre)));
((brf)->bqr) = (fromBin_<int64_t>((brd), (*bre)));
((brf)->bqs) = (fromBin_<int64_t>((brd), (*bre)));
((brf)->bqt) = (fromBin_<int64_t>((brd), (*bre)));
return brf;
}
// parseRoot
static avk* avj(){
avk* brg = nullptr; // ast
char16_t bro = 0; // c
bool brt = false; // itemPublic
int64_t bry = 0; // row
int64_t brz = 0; // col
Array_<char16_t>* bsa = nullptr; // id
Array_<char16_t>* bsd = nullptr;
fx* bsf = nullptr; // item
(brg) = (new avk());
(brh)((brg), (1LL), ((bri)((bf), (1LL), (1LL))), (nullptr), (false));
((brg)->awd) = (new List_<avl*>());
((brg)->aza) = (new List_<fx*>());
(bh) = ((brg)->awd);
((brg)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
brj<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (brg));
(ave) = (u'\u000A');
(ave) = ((brk)());
while(true){
(bro) = ((brk)());
if((bro) == (u'\u0000')){
break;
}
if((bro) == (u'\u000A')){
continue;
}
(brt) = (false);
if((bro) == (u'\u002B')){
(brt) = (true);
}
else{
(ave) = (bro);
}
(bry) = (avc);
(brz) = (avd);
(bsa) = ((bsb)((true), (false)));
bsd = bsa;
if(cmp_(bsd, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
(bsf) = ((bsg)((nullptr), (false)));
}
else if(cmp_(bsd, (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0){
(bsf) = ((bsi)((1LL), (nullptr)));
}
else if(cmp_(bsd, (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074'))) == 0){
(bsf) = ((bsk)());
}
else if(cmp_(bsd, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073'))) == 0){
(bsf) = ((bsn)());
}
else if(cmp_(bsd, (new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0075', u'\u0064', u'\u0065'))) == 0){
}
else if(cmp_(bsd, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0){
(bsf) = ((bsr)());
}
else if(cmp_(bsd, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0){
(bsf) = ((bst)());
}
else{(ad)((65547LL), ((bri)((bf), (bry), (brz))), (new Array_<Array_<char16_t>*>(1, (bsa))));
(bsw)(((bsx)()));
continue;
}
if(((bsf)->lw) == (2LL)){
(((as_<bgi>(classTable_, (bsf), 38))->bgk)->no) = (brt);
}
else if(((bsf)->lw) == (3LL)){
(((as_<bsl>(classTable_, (bsf), 44))->btb)->no) = (brt);
}
else{
((bsf)->no) = (brt);
}
uh<List_<fx*>*, fx*>(((brg)->aza), (new Array_<int64_t>(1, (0LL))), (bsf));
}
btd<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return brg;
}
// _dtor
static void bte(avl* btf){
((btf)->awk) = (nullptr);
((btf)->axf) = (nullptr);
}
// _copy
static avl* btg(avl* bth){
avl* bti = nullptr;
(bti) = (new avl());
((bti)->awk) = (copy_((bth)->awk));
((bti)->axf) = (copy_((bth)->axf));
return as_<avl>(classTable_, (bti), 34);
}
// _toBin
static Array_<uint8_t>* btj(avl* btk){
Array_<uint8_t>* btl = nullptr;
(btl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(btl) = ((btl)->Cat(toBin_((btk)->awk)));
(btl) = ((btl)->Cat(toBin_((btk)->axf)));
return btl;
}
// _fromBin
static avl* bto(avl* btp, Array_<uint8_t>* btq, int64_t* btr){
avl* bts = nullptr;
(bts) = (new avl());
((bts)->awk) = (fromBin_<fx*>((btq), (*btr)));
((bts)->axf) = (fromBin_<fx*>((btq), (*btr)));
return bts;
}
// _dtor
static void btt(avk* btu){
((btu)->aza) = (nullptr);
((btu)->awd) = (nullptr);
((btu)->ne) = (nullptr);
((btu)->nf) = (nullptr);
((btu)->ng) = (nullptr);
((btu)->nh) = (nullptr);
((btu)->ni) = (nullptr);
((btu)->nj) = (nullptr);
((btu)->nk) = (nullptr);
}
// _copy
static avk* btv(avk* btw){
avk* btx = nullptr;
(btx) = (new avk());
((btx)->aza) = (copy_((btw)->aza));
((btx)->awd) = (copy_((btw)->awd));
((btx)->ne) = (copy_((btw)->ne));
((btx)->nf) = (copy_((btw)->nf));
((btx)->ng) = (copy_((btw)->ng));
((btx)->nh) = (copy_((btw)->nh));
((btx)->ni) = (copy_((btw)->ni));
((btx)->nj) = (copy_((btw)->nj));
((btx)->nk) = (copy_((btw)->nk));
((btx)->no) = ((btw)->no);
((btx)->lw) = ((btw)->lw);
return as_<avk>(classTable_, (btx), 32);
}
// _toBin
static Array_<uint8_t>* bty(avk* btz){
Array_<uint8_t>* bua = nullptr;
(bua) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bua) = ((bua)->Cat(toBin_((btz)->aza)));
(bua) = ((bua)->Cat(toBin_((btz)->awd)));
(bua) = ((bua)->Cat(toBin_((btz)->ne)));
(bua) = ((bua)->Cat(toBin_((btz)->nf)));
(bua) = ((bua)->Cat(toBin_((btz)->ng)));
(bua) = ((bua)->Cat(toBin_((btz)->nh)));
(bua) = ((bua)->Cat(toBin_((btz)->ni)));
(bua) = ((bua)->Cat(toBin_((btz)->nj)));
(bua) = ((bua)->Cat(toBin_((btz)->nk)));
(bua) = ((bua)->Cat(toBin_((btz)->no)));
(bua) = ((bua)->Cat(toBin_((btz)->lw)));
return bua;
}
// _fromBin
static avk* bum(avk* bun, Array_<uint8_t>* buo, int64_t* bup){
avk* buq = nullptr;
(buq) = (new avk());
((buq)->aza) = (fromBin_<List_<fx*>*>((buo), (*bup)));
((buq)->awd) = (fromBin_<List_<avl*>*>((buo), (*bup)));
((buq)->ne) = (fromBin_<ga*>((buo), (*bup)));
((buq)->nf) = (fromBin_<Array_<char16_t>*>((buo), (*bup)));
((buq)->ng) = (fromBin_<fx*>((buo), (*bup)));
((buq)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((buo), (*bup)));
((buq)->ni) = (fromBin_<Array_<char16_t>*>((buo), (*bup)));
((buq)->nj) = (fromBin_<fx*>((buo), (*bup)));
((buq)->nk) = (fromBin_<fy*>((buo), (*bup)));
((buq)->no) = (fromBin_<bool>((buo), (*bup)));
((buq)->lw) = (fromBin_<int64_t>((buo), (*bup)));
return buq;
}
// _getDict
template<typename T_, typename C_, typename R_> static R_ avo(T_ bur /*me_*/, Array_<int64_t>* bus /*type*/, C_ but /*key*/, bool* buu /*existed*/){
return dictSearch_(bur->B, but, buu);
}
// _head
template<typename T_> static void awe(T_ buv /*me_*/, Array_<int64_t>* buw /*type*/){
buv->I = buv->B.begin();
}
// _term
template<typename T_> static bool awg(T_ bux /*me_*/, Array_<int64_t>* buy /*type*/){
return bux->I == bux->B.end();
}
// _getList
template<typename T_, typename R_> static R_ awi(T_ buz /*me_*/, Array_<int64_t>* bva /*type*/){
return *buz->I;
}
// _findArray
template<typename T_, typename C_> static int64_t awn(T_ bvb /*me_*/, Array_<int64_t>* bvc /*type*/, C_ bvd /*item*/, int64_t bve /*start*/){
if(bve == -1) bve = 0;
if(bve < 0) return -1;
for(int64_t i_ = bve; i_ < bvb->L; i_++){
if(bvb->B[i_] == bvd) return i_;
}
return -1;
}
// _and
template<typename T_> static T_ aye(T_ bvf /*me_*/, Array_<int64_t>* bvg /*type*/, T_ bvh /*n*/){
return bvf & bvh;
}
// _next
template<typename T_> static void ays(T_ bvi /*me_*/, Array_<int64_t>* bvj /*type*/){
++bvi->I;
}
// makeEntryPoint
static fw* ayw(fw* bvk /*mainFunc*/){
ga* bvl = nullptr; // pos
fw* bvm = nullptr; // entry
bvq* bvp = nullptr; // try_
gb* bvw = nullptr; // var_
bvz* bvy = nullptr; // type
bvs* bwd = nullptr; // block_
bvs* bwi = nullptr; // block_
List_<fx*>* bwl = nullptr; // funcs
bwq* bwp = nullptr; // do_
bwt* bws = nullptr; // call
gd* bwy = nullptr; // ref
bvt* bxc = nullptr; // catch_
bvs* bxf = nullptr; // block_
bvu* bxi = nullptr; // exprs
bxl* bxk = nullptr; // expr
bvz* bxp = nullptr; // type
bxl* bxs = nullptr; // expr
bvz* bxu = nullptr; // type
bwq* bxx = nullptr; // do_
bwt* bxz = nullptr; // call
gd* byb = nullptr; // ref_
bwu* byd = nullptr; // excpt
gd* byh = nullptr; // ref_
List_<fx*>* byk = nullptr; // funcs
bwq* byn = nullptr; // do_
bwt* byp = nullptr; // call
gd* byr = nullptr; // ref
(bvl) = ((bri)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (1LL), (1LL)));
(bvm) = (new fw());
(bvn)((bvm), (256LL), (bvl));
((bvm)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bvm)->sm) = (0LL);
((bvm)->sf) = (new List_<Array_<char16_t>*>());
((bvm)->sg) = (new List_<gb*>());
((bvm)->sh) = (nullptr);
((bvm)->si) = (new List_<ge*>());
(bvp) = (new bvq());
(bvn)((bvp), (66051LL), (bvl));
(bvw) = (new gb());
(bvn)((bvw), (7LL), (bvl));
((bvw)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bvw)->qk) = (3LL);
((bvw)->ql) = (false);
(bvy) = (new bvz());
(bvn)((bvy), (1026LL), (bvl));
((bvy)->bwa) = (0LL);
((bvw)->qf) = (bvy);
((bvw)->qg) = (nullptr);
((bvp)->bwb) = (bvw);
(bwd) = (new bvs());
(bvn)((bwd), (66052LL), (bvl));
((bwd)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bwd)->bwb) = (nullptr);
((bwd)->bwe) = (new List_<ge*>());
((bvp)->bwf) = (bwd);
((bvp)->bwg) = (new List_<bvt*>());
(bwi) = (new bvs());
(bvn)((bwi), (66052LL), (bvl));
((bwi)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bwi)->bwb) = (nullptr);
((bwi)->bwe) = (new List_<ge*>());
((bvp)->bwj) = (bwi);
(bwl) = (new List_<fx*>());
uh<List_<fx*>*, fx*>((bwl), (new Array_<int64_t>(1, (0LL))), ((bwm)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(5, u'\u005F', u'\u0069', u'\u006E', u'\u0069', u'\u0074')), (false))));
uh<List_<fx*>*, fx*>((bwl), (new Array_<int64_t>(1, (0LL))), ((bwm)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(9, u'\u005F', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))));
uh<List_<fx*>*, fx*>((bwl), (new Array_<int64_t>(1, (0LL))), (bvk));
awe<List_<fx*>*>((bwl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<fx*>*>((bwl), (new Array_<int64_t>(1, (0LL)))))){
(bwp) = (new bwq());
(bvn)((bwp), (528LL), (bvl));
(bws) = (new bwt());
(bwv)((bws), (2057LL), (bvl));
((bws)->bww) = (new List_<bwu*>());
(bwy) = (new gd());
(bwv)((bwy), (2062LL), (bvl));
((bwy)->nj) = (awi<List_<fx*>*, fx*>((bwl), (new Array_<int64_t>(1, (0LL)))));
((bws)->bwz) = (bwy);
((bwp)->bxa) = (bws);
uh<List_<ge*>*, ge*>((((bvp)->bwf)->bwe), (new Array_<int64_t>(1, (0LL))), (bwp));
ays<List_<fx*>*>((bwl), (new Array_<int64_t>(1, (0LL))));
}
(bxc) = (new bvt());
(bvn)((bxc), (524LL), (bvl));
((bxc)->bxd) = (new List_<bvu*>());
(bxf) = (new bvs());
(bvn)((bxf), (66052LL), (bvl));
((bxf)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bxf)->bwb) = (nullptr);
((bxf)->bwe) = (new List_<ge*>());
((bxc)->bxg) = (bxf);
(bxi) = (new bvu());
(bxk) = (new bxl());
(bwv)((bxk), (67585LL), (bvl));
((bxk)->pj) = (1LL);
((bxk)->bxn) = (0x0000000000000000ULL);
(bxp) = (new bvz());
(bvn)((bxp), (1026LL), (bvl));
((bxp)->bwa) = (0LL);
((bxk)->pf) = (bxp);
((bxi)->bxq) = (bxk);
(bxs) = (new bxl());
(bwv)((bxs), (67585LL), (bvl));
((bxs)->pj) = (1LL);
((bxs)->bxn) = (0x00000000FFFFFFFFULL);
(bxu) = (new bvz());
(bvn)((bxu), (1026LL), (bvl));
((bxu)->bwa) = (0LL);
((bxs)->pf) = (bxu);
((bxi)->bxv) = (bxs);
uh<List_<bvu*>*, bvu*>(((bxc)->bxd), (new Array_<int64_t>(1, (0LL))), (bxi));
(bxx) = (new bwq());
(bvn)((bxx), (528LL), (bvl));
(bxz) = (new bwt());
(bwv)((bxz), (2057LL), (bvl));
((bxz)->bww) = (new List_<bwu*>());
(byb) = (new gd());
(bwv)((byb), (2062LL), (bvl));
((byb)->nj) = ((bwm)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(4, u'\u005F', u'\u0065', u'\u0072', u'\u0072')), (false)));
((bxz)->bwz) = (byb);
(byd) = (new bwu());
((byd)->bye) = (false);
((byd)->byf) = (false);
(byh) = (new gd());
(bwv)((byh), (2062LL), (bvl));
((byh)->nj) = ((bvp)->bwb);
((byd)->byi) = (byh);
uh<List_<bwu*>*, bwu*>(((bxz)->bww), (new Array_<int64_t>(1, (0LL))), (byd));
((bxx)->bxa) = (bxz);
uh<List_<ge*>*, ge*>((((bxc)->bxg)->bwe), (new Array_<int64_t>(1, (0LL))), (bxx));
uh<List_<bvt*>*, bvt*>(((bvp)->bwg), (new Array_<int64_t>(1, (0LL))), (bxc));
(byk) = (new List_<fx*>());
uh<List_<fx*>*, fx*>((byk), (new Array_<int64_t>(1, (0LL))), ((bwm)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0069', u'\u006E', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))));
uh<List_<fx*>*, fx*>((byk), (new Array_<int64_t>(1, (0LL))), ((bwm)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(4, u'\u005F', u'\u0066', u'\u0069', u'\u006E')), (false))));
awe<List_<fx*>*>((byk), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<fx*>*>((byk), (new Array_<int64_t>(1, (0LL)))))){
(byn) = (new bwq());
(bvn)((byn), (528LL), (bvl));
(byp) = (new bwt());
(bwv)((byp), (2057LL), (bvl));
((byp)->bww) = (new List_<bwu*>());
(byr) = (new gd());
(bwv)((byr), (2062LL), (bvl));
((byr)->nj) = (awi<List_<fx*>*, fx*>((byk), (new Array_<int64_t>(1, (0LL)))));
((byp)->bwz) = (byr);
((byn)->bxa) = (byp);
uh<List_<ge*>*, ge*>((((bvp)->bwj)->bwe), (new Array_<int64_t>(1, (0LL))), (byn));
ays<List_<fx*>*>((byk), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<ge*>*, ge*>(((bvm)->si), (new Array_<int64_t>(1, (0LL))), (bvp));
return bvm;
}
// rebuildFunc
static void ayx(fw* bys /*ast*/){
List_<gb*>* byv = nullptr; // items
if(!eqAddr_(((bys)->nk), (nullptr))){
return;
}
((bys)->nk) = (bys);
(byv) = ((bys)->sg);
awe<List_<gb*>*>((byv), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((byv), (new Array_<int64_t>(1, (0LL)))))){
(byx)((awi<List_<gb*>*, gb*>((byv), (new Array_<int64_t>(1, (0LL))))));
ays<List_<gb*>*>((byv), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((bys)->sh), (nullptr))){
((bys)->sh) = ((bza)(((bys)->sh), (nullptr)));
}
((bys)->si) = ((bzb)(((bys)->si), ((bys)->sh), (bys)));
}
// rebuildRoot
static bool azb(Array_<char16_t>* bzc /*key*/, fx* bzd /*value*/, fz* bze /*data*/){
avk* bzf = nullptr; // ast
fw* bzi = nullptr; // initVarsFunc
fw* bzj = nullptr; // finVarsFunc
List_<fx*>* bzk = nullptr; // items
fx* bzm = nullptr; // item
bgi* bzq = nullptr; // var_
bwq* bzu = nullptr; // do_
bzx* bzw = nullptr; // assign
gd* caa = nullptr; // ref
bwq* cah = nullptr; // do_
bzx* caj = nullptr; // assign
gd* cal = nullptr; // ref
(bzf) = (as_<avk>(classTable_, (bzd), 32));
if(!eqAddr_(((bzf)->nk), (nullptr))){
return true;
}
((bzf)->nk) = (bzf);
(bzi) = (as_<fw>(classTable_, ((bwm)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(9, u'\u005F', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))), 8));
(bzj) = (as_<fw>(classTable_, ((bwm)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0069', u'\u006E', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))), 8));
(bzk) = ((bzf)->aza);
awe<List_<fx*>*>((bzk), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<fx*>*>((bzk), (new Array_<int64_t>(1, (0LL)))))){
(bzm) = (awi<List_<fx*>*, fx*>((bzk), (new Array_<int64_t>(1, (0LL)))));
if(((bzm)->lw) == (256LL)){
(ayx)((as_<fw>(classTable_, (bzm), 8)));
}
else if(((bzm)->lw) == (2LL)){
(bzq) = (as_<bgi>(classTable_, (bzm), 38));
if(!((((bzq)->bgk)->qk) == (1LL))){
throw 0xE9170000U;
}
if(!eqAddr_((((bzq)->bgk)->qg), (nullptr))){
(((bzq)->bgk)->qg) = ((bzt)((((bzq)->bgk)->qg), (false)));
(bzu) = (new bwq());
(bvn)((bzu), (528LL), ((bzf)->ne));
(bzw) = (new bzx());
(bwv)((bzw), (2050LL), ((bzf)->ne));
((bzw)->bzy) = (0LL);
(caa) = (new gd());
(bwv)((caa), (2062LL), ((bzf)->ne));
((caa)->pf) = (((bzq)->bgk)->qf);
((caa)->nj) = ((bzq)->bgk);
((bzw)->cab) = (caa);
((bzw)->cac) = (((bzq)->bgk)->qg);
((bzu)->bxa) = (bzw);
uh<List_<ge*>*, ge*>(((bzi)->si), (new Array_<int64_t>(1, (0LL))), ((cad)((bzu), (nullptr), (nullptr))));
}
if((!eqAddr_((((bzq)->bgk)->qf), (nullptr))) && ((caf)((((bzq)->bgk)->qf)))){
(cah) = (new bwq());
(bvn)((cah), (528LL), ((bzf)->ne));
(caj) = (new bzx());
(bwv)((caj), (2050LL), ((bzf)->ne));
((caj)->bzy) = (0LL);
(cal) = (new gd());
(bwv)((cal), (2062LL), ((bzf)->ne));
((cal)->pf) = (((bzq)->bgk)->qf);
((cal)->nj) = ((bzq)->bgk);
((caj)->cab) = (cal);
((caj)->cac) = ((cam)(((bzf)->ne)));
((cah)->bxa) = (caj);
uh<List_<ge*>*, ge*>(((bzj)->si), (new Array_<int64_t>(1, (0LL))), ((cad)((cah), (nullptr), (nullptr))));
}
}
else{
if(!((((((bzm)->lw) == (3LL)) || (((bzm)->lw) == (4LL))) || (((bzm)->lw) == (5LL))) || (((bzm)->lw) == (6LL)))){
throw 0xE9170000U;
}
}
ays<List_<fx*>*>((bzk), (new Array_<int64_t>(1, (0LL))));
}
return true;
}
// getInfo
static bby* bbx(fx* cao /*ast*/){
bby* car = nullptr; // info
if((eqAddr_(((cao)->nk), (nullptr))) || ((((cao)->nk)->lw) != (268435456LL))){
(car) = (new bby());
((car)->lw) = (268435456LL);
((car)->bdy) = ((cas)());
if((((aye<int64_t>(((cao)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL)) && (!eqAddr_(((cao)->nf), (nullptr)))) && (cmp_(((cao)->nf), (new Array_<char16_t>(1, u'\u0024'))) != 0)){
((car)->cav) = ((cas)());
if((aye<int64_t>(((cao)->lw), (new Array_<int64_t>(1, (0LL))), (16843264LL))) == (16843264LL)){
((car)->cay) = ((cas)());
}
else{
((car)->cay) = (nullptr);
}
}
else{
((car)->cav) = (nullptr);
((car)->cay) = (nullptr);
}
((car)->bft) = (-1LL);
((car)->bca) = (false);
((car)->cbb) = (false);
((car)->cbc) = (false);
((cao)->nk) = (car);
}
return as_<bby>(classTable_, ((cao)->nk), 36);
}
// _dtor
static void cbd(bby* cbe){
((cbe)->bdy) = (nullptr);
((cbe)->cav) = (nullptr);
((cbe)->cay) = (nullptr);
}
// _copy
static bby* cbf(bby* cbg){
bby* cbh = nullptr;
(cbh) = (new bby());
((cbh)->bdy) = (copy_((cbg)->bdy));
((cbh)->cav) = (copy_((cbg)->cav));
((cbh)->cay) = (copy_((cbg)->cay));
((cbh)->bft) = ((cbg)->bft);
((cbh)->bca) = ((cbg)->bca);
((cbh)->cbb) = ((cbg)->cbb);
((cbh)->cbc) = ((cbg)->cbc);
((cbh)->lw) = ((cbg)->lw);
return as_<bby>(classTable_, (cbh), 36);
}
// _toBin
static Array_<uint8_t>* cbi(bby* cbj){
Array_<uint8_t>* cbk = nullptr;
(cbk) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(cbk) = ((cbk)->Cat(toBin_((cbj)->bdy)));
(cbk) = ((cbk)->Cat(toBin_((cbj)->cav)));
(cbk) = ((cbk)->Cat(toBin_((cbj)->cay)));
(cbk) = ((cbk)->Cat(toBin_((cbj)->bft)));
(cbk) = ((cbk)->Cat(toBin_((cbj)->bca)));
(cbk) = ((cbk)->Cat(toBin_((cbj)->cbb)));
(cbk) = ((cbk)->Cat(toBin_((cbj)->cbc)));
(cbk) = ((cbk)->Cat(toBin_((cbj)->lw)));
return cbk;
}
// _fromBin
static bby* cbt(bby* cbu, Array_<uint8_t>* cbv, int64_t* cbw){
bby* cbx = nullptr;
(cbx) = (new bby());
((cbx)->bdy) = (fromBin_<Array_<char16_t>*>((cbv), (*cbw)));
((cbx)->cav) = (fromBin_<Array_<char16_t>*>((cbv), (*cbw)));
((cbx)->cay) = (fromBin_<Array_<char16_t>*>((cbv), (*cbw)));
((cbx)->bft) = (fromBin_<int64_t>((cbv), (*cbw)));
((cbx)->bca) = (fromBin_<bool>((cbv), (*cbw)));
((cbx)->cbb) = (fromBin_<bool>((cbv), (*cbw)));
((cbx)->cbc) = (fromBin_<bool>((cbv), (*cbw)));
((cbx)->lw) = (fromBin_<int64_t>((cbv), (*cbw)));
return cbx;
}
// getType
static Array_<char16_t>* bct(gc* cby /*type*/){
int64_t ccc = 0;
ccm* ccl = nullptr; // func_
Array_<char16_t>* cco = nullptr; // id
Array_<char16_t>* ccr = nullptr; // arg
bool ccs = false; // first
List_<ccn*>* cct = nullptr; // items
ccn* ccw = nullptr; // item
cdj* cdi = nullptr; // gen
int64_t cdl = 0;
cdu* cdt = nullptr; // dict_
bvz* cdy = nullptr; // prim
int64_t cea = 0;
fx* ceh = nullptr; // ref
bby* cek = nullptr; // info
if(eqAddr_((cby), (nullptr))){
return new Array_<char16_t>(4, u'\u0076', u'\u006F', u'\u0069', u'\u0064');
}
switch((cby)->lw){
case 66561LL:
return ((new Array_<char16_t>(7, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cce>(classTable_, (cby), 76))->ccg))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
case 1025LL:
return ((new Array_<char16_t>(4, u'\u0075', u'\u0069', u'\u006E', u'\u0074'))->Cat(v<int64_t>((((as_<cci>(classTable_, (cby), 78))->ccj) * (8LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u005F', u'\u0074'));
break;
case 66562LL:
(ccl) = (as_<ccm>(classTable_, (cby), 80));
(cco) = ((cas)());
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0064', u'\u0065', u'\u0066', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((ccl)->ccp))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0028', u'\u002A'))->Cat(v<Array_<char16_t>*>((cco), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u0028')))));
(ccr) = (new Array_<char16_t>(0));
(ccs) = (true);
(cct) = ((ccl)->ccu);
awe<List_<ccn*>*>((cct), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<ccn*>*>((cct), (new Array_<int64_t>(1, (0LL)))))){
(ccw) = (awi<List_<ccn*>*, ccn*>((cct), (new Array_<int64_t>(1, (0LL)))));
if(ccs){
(ccs) = (false);
}
else{
(ccr) = ((ccr)->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
}
(ccr) = ((ccr)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((ccw)->cdc))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if((ccw)->cde){
(ccr) = ((ccr)->Cat(new Array_<char16_t>(1, u'\u002A')));
}
ays<List_<ccn*>*>((cct), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((ccr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
return cco;
break;
case 66563LL:
(cdi) = (as_<cdj>(classTable_, (cby), 84));
switch((cdi)->cdm){
case 0LL:
return ((new Array_<char16_t>(6, u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((cdi)->cdo))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
case 1LL:
return ((new Array_<char16_t>(7, u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((cdi)->cdo))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
case 2LL:
return ((new Array_<char16_t>(7, u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((cdi)->cdo))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66564LL:
(cdt) = (as_<cdu>(classTable_, (cby), 86));
return ((new Array_<char16_t>(6, u'\u0044', u'\u0069', u'\u0063', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((cdt)->cdv))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((cdt)->cdw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A')));
break;
case 1026LL:
(cdy) = (as_<bvz>(classTable_, (cby), 60));
switch((cdy)->bwa){
case 0LL:
return new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074');
break;
case 1LL:
return new Array_<char16_t>(6, u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065');
break;
case 2LL:
return new Array_<char16_t>(8, u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074');
break;
case 3LL:
return new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66565LL:
(ceh) = ((cby)->nj);
if(((ceh)->lw) == (5LL)){
(bfo)((as_<ul>(classTable_, (ceh), 22)));
(cek) = ((bbx)((ceh)));
return ((cek)->bdy)->Cat(new Array_<char16_t>(1, u'\u002A'));
}
else{
if(!(((ceh)->lw) == (6LL))){
throw 0xE9170000U;
}
return new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074');
}
break;
case 1027LL:
if(!(false)){
throw 0xE9170000U;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// isInt
static bool bdg(gc* ceo /*type*/){
return (((ceo)->lw) == (1026LL)) && (((as_<bvz>(classTable_, (ceo), 60))->bwa) == (0LL));
}
// write
static void beq(List_<Array_<char16_t>*>* cep /*codes*/, Array_<char16_t>* ceq /*attr*/, List_<gb*>* cer /*args*/, List_<um*>* ces /*members*/){
Array_<char16_t>* ceu = nullptr;
bby* cew = nullptr; // class_
bby* cey = nullptr; // me_
bby* cez = nullptr; // key
bby* cfa = nullptr; // item
bby* cfc = nullptr; // me_
bby* cfd = nullptr; // item
bby* cff = nullptr; // me_
bby* cfg = nullptr; // item
bby* cfi = nullptr; // me_
bby* cfj = nullptr; // item
bby* cfl = nullptr; // me_
bby* cfm = nullptr; // n
bby* cfp = nullptr; // me_
bby* cfr = nullptr; // me_
bby* cfs = nullptr; // value
bby* cfu = nullptr; // me_
bby* cfv = nullptr; // item
bby* cfw = nullptr; // start
bby* cfy = nullptr; // me_
bby* cfz = nullptr; // item
bby* cgb = nullptr; // me_
bby* cgc = nullptr; // callback
bby* cgd = nullptr; // data
bby* cgf = nullptr; // me_
bby* cgg = nullptr; // key
bby* cgh = nullptr; // existed
bby* cgj = nullptr; // me_
bby* cgl = nullptr; // me_
bby* cgn = nullptr; // me_
bby* cgp = nullptr; // me_
bby* cgr = nullptr; // me_
bby* cgt = nullptr; // me_
bby* cgu = nullptr; // item
bby* cgw = nullptr; // me_
bby* cgx = nullptr; // offset
bby* cgz = nullptr; // me_
bby* chb = nullptr; // me_
bby* chc = nullptr; // n
bby* che = nullptr; // me_
bby* chg = nullptr; // me_
bby* chi = nullptr; // min
bby* chj = nullptr; // max
bby* chl = nullptr; // min
bby* chm = nullptr; // max
bby* cho = nullptr; // me_
bby* chp = nullptr; // start
bby* chq = nullptr; // len
bby* cht = nullptr; // me_
bby* chv = nullptr; // me_
bby* chx = nullptr; // me_
bby* chy = nullptr; // success
bby* cia = nullptr; // me_
bby* cib = nullptr; // success
bby* cid = nullptr; // me_
bby* cie = nullptr; // success
bby* cig = nullptr; // me_
bby* cii = nullptr; // str
bby* cik = nullptr; // dst
bby* cil = nullptr; // src
bby* cin = nullptr; // path
bby* cip = nullptr; // path
bby* ciq = nullptr; // recursion
bby* cir = nullptr; // callback
bby* cis = nullptr; // data
bby* ciu = nullptr; // me_
bby* civ = nullptr; // path
bby* ciw = nullptr; // handle
bby* ciz = nullptr; // me_
bby* cja = nullptr; // path
bby* cjb = nullptr; // append
bby* cjc = nullptr; // handle
bby* cje = nullptr; // me_
bby* cjf = nullptr; // handle
bby* cjh = nullptr; // me_
bby* cji = nullptr; // handle
bby* cjk = nullptr; // me_
bby* cjl = nullptr; // handle
bby* cjn = nullptr; // me_
bby* cjo = nullptr; // origin
bby* cjp = nullptr; // pos
bby* cjq = nullptr; // handle
bby* cjs = nullptr; // me_
bby* cjt = nullptr; // handle
bby* cjv = nullptr; // me_
bby* cjw = nullptr; // handle
bby* cjy = nullptr; // me_
bby* cjz = nullptr; // handle
bby* ckb = nullptr; // me_
bby* ckc = nullptr; // origin
bby* ckd = nullptr; // pos
bby* cke = nullptr; // handle
bby* ckg = nullptr; // me_
bby* ckh = nullptr; // n
bby* cki = nullptr; // handle
bby* ckk = nullptr; // me_
bby* ckl = nullptr; // n
bby* ckm = nullptr; // handle
ceu = ceq;
if(cmp_(ceu, (new Array_<char16_t>(4, u'\u0061', u'\u0064', u'\u0064', u'\u0072'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cew) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(34, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cew)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cey) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cez) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfa) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cey)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0041', u'\u0064', u'\u0064', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cez)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfa)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(ceu, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfc) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfd) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cfc)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u005F', u'\u0062', u'\u0061', u'\u0063', u'\u006B', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfd)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ceu, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cff) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfg) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cff)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ceu, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfi) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfj) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cfi)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfj)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ceu, (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfl) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfm) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfl)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u0026', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfm)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(ceu, (new Array_<char16_t>(7, u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(65, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u002A', u'\u003E', u'\u002A', u'\u0020', u'\u0061', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u002A', u'\u003E', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u003D', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(59, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u002A', u'\u005B', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u0029', u'\u005D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0076', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(44, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0038', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(36, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(48, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(44, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002D', u'\u003E', u'\u0042', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u005B', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u005D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(75, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006D', u'\u0065', u'\u006D', u'\u0063', u'\u0070', u'\u0079', u'\u0028', u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0063', u'\u005F', u'\u0073', u'\u0074', u'\u0072', u'\u0028', u'\u0029', u'\u002C', u'\u0020', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u006F', u'\u0066', u'\u0028', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u0029', u'\u0020', u'\u002A', u'\u0020', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(3, u'\u0064', u'\u0065', u'\u006C'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfp) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u0061', u'\u0075', u'\u0074', u'\u006F', u'\u0026', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfp)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u002B', u'\u002B', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cfp)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u0072', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0069', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006C', u'\u006C'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfr) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfs) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u004C', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(10, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfs)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(ceu, (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfu) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfv) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfw) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u002D', u'\u0031', u'\u0029', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0020', u'\u003C', u'\u0020', u'\u0030', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfu)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u002D', u'\u003E', u'\u004C', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfu)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0042', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfy) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cfz) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(21, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0061', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u002C', u'\u0020', u'\u0062', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(19, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0028', u'\u0061', u'\u005F', u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0062', u'\u005F', u'\u0029', u'\u0020', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0028', u'\u0061', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0062', u'\u005F', u'\u0029', u'\u0020', u'\u002F', u'\u0020', u'\u0032', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u006D', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfz)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0063', u'\u005F', u'\u005D', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(24, u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u0020', u'\u003C', u'\u0020', u'\u0030', u'\u0029', u'\u0020', u'\u0062', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(29, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u0020', u'\u003E', u'\u0020', u'\u0030', u'\u0029', u'\u0020', u'\u0061', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(7, u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgb) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgc) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgd) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u0046', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgb)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(43, u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0028', u'\u002A', u'\u0029', u'\u0028', u'\u004B', u'\u005F', u'\u002C', u'\u0020', u'\u0056', u'\u005F', u'\u002C', u'\u0020', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0029', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgc)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgd)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(ceu, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgf) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgg) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgh) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(19, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u0053', u'\u0065', u'\u0061', u'\u0072', u'\u0063', u'\u0068', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgf)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgh)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(ceu, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgj) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002A'))->Cat(v<Array_<char16_t>*>(((cgj)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgl) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0052', u'\u005F', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgl)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006E', u'\u0074', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cgl)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgn) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0052', u'\u005F', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgn)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0074', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cgn)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(4, u'\u0068', u'\u0065', u'\u0061', u'\u0064'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgp) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cgp)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgp)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ceu, (new Array_<char16_t>(3, u'\u0069', u'\u0064', u'\u0078'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgr) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0061', u'\u0075', u'\u0074', u'\u006F', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(19, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u003B', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u0021', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u0020', u'\u002B', u'\u002B', u'\u0074', u'\u005F', u'\u0029', u'\u007B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002D', u'\u003E', u'\u0049', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0073'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgt) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgu) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cgt)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0069', u'\u006E', u'\u0073', u'\u0065', u'\u0072', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgt)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgu)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(ceu, (new Array_<char16_t>(10, u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgw) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgx) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgx)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0030', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgx)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u0029', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002B', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cgw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgx)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002D', u'\u002D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u0029', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002D', u'\u002D'))->Cat(v<Array_<char16_t>*>(((cgw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0078', u'\u0074'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cgz) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002B', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cgz)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(2, u'\u006F', u'\u0072'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(chb) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(chc) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chb)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u007C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chc)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(ceu, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(che) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((che)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006E', u'\u0074', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(chg) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0074', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(3, u'\u0072', u'\u006E', u'\u0064'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(chi) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(chj) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u006E', u'\u0064', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chi)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chj)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ceu, (new Array_<char16_t>(8, u'\u0072', u'\u006E', u'\u0064', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(chl) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(chm) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u006E', u'\u0064', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chl)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chm)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ceu, (new Array_<char16_t>(3, u'\u0073', u'\u0075', u'\u0062'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cho) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(chp) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(chq) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0075', u'\u0062', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cho)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chp)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chq)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(ceu, (new Array_<char16_t>(7, u'\u0073', u'\u0079', u'\u0073', u'\u0054', u'\u0069', u'\u006D', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(145, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0068', u'\u0072', u'\u006F', u'\u006E', u'\u006F', u'\u003A', u'\u003A', u'\u0064', u'\u0075', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0068', u'\u0072', u'\u006F', u'\u006E', u'\u006F', u'\u003A', u'\u003A', u'\u006D', u'\u0069', u'\u006C', u'\u006C', u'\u0069', u'\u0073', u'\u0065', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0073', u'\u003E', u'\u0028', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0068', u'\u0072', u'\u006F', u'\u006E', u'\u006F', u'\u003A', u'\u003A', u'\u0073', u'\u0079', u'\u0073', u'\u0074', u'\u0065', u'\u006D', u'\u005F', u'\u0063', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u003A', u'\u003A', u'\u006E', u'\u006F', u'\u0077', u'\u0028', u'\u0029', u'\u002E', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u005F', u'\u0073', u'\u0069', u'\u006E', u'\u0063', u'\u0065', u'\u005F', u'\u0065', u'\u0070', u'\u006F', u'\u0063', u'\u0068', u'\u0028', u'\u0029', u'\u0029', u'\u002E', u'\u0063', u'\u006F', u'\u0075', u'\u006E', u'\u0074', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u0069', u'\u006C'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cht) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cht)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cht)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002D', u'\u002D'))->Cat(v<Array_<char16_t>*>(((cht)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(4, u'\u0074', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(chv) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ceu, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u0074', u'\u0036', u'\u0034'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(chx) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(chy) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chx)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(111, u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0032', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0030', u'\u0027', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0078', u'\u0027', u'\u0020', u'\u003F', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0075', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u002C', u'\u0020', u'\u0031', u'\u0036', u'\u0029', u'\u0020', u'\u003A', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0075', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((chy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((chy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((chy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cia) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cib) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cia)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(32, u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0064', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cib)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cib)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cib)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0049', u'\u006E', u'\u0074'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cid) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cie) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cid)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(109, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0032', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0030', u'\u0027', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0078', u'\u0027', u'\u0020', u'\u003F', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u002C', u'\u0020', u'\u0031', u'\u0036', u'\u0029', u'\u0020', u'\u003A', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0075', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cie)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cie)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cie)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cig) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cig)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(9, u'\u0063', u'\u0075', u'\u0069', u'\u005F', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cii) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cii)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u003C', u'\u003C', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003C', u'\u003C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0066', u'\u006C', u'\u0075', u'\u0073', u'\u0068', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u0046', u'\u0069', u'\u006C', u'\u0065'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cik) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cil) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cik)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cil)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0042', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ceu, (new Array_<char16_t>(10, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cin) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(12, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cip) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(ciq) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cir) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cis) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(ciu) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(civ) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
(ciw) = ((cix)((ces), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ciu)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((ciw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(45, u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((civ)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ciu)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((ciw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(72, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u0066', u'\u0073', u'\u0074', u'\u0072', u'\u0065', u'\u0061', u'\u006D', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0063', u'\u005F', u'\u0073', u'\u0074', u'\u0072', u'\u0028', u'\u0029', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0069', u'\u006E', u'\u0020', u'\u007C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0062', u'\u0069', u'\u006E', u'\u0061', u'\u0072', u'\u0079', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u002A', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ciu)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(ciz) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cja) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cjb) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
(cjc) = ((cix)((ces), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ciz)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjc)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(45, u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cja)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ciz)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjc)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(74, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006F', u'\u0066', u'\u0073', u'\u0074', u'\u0072', u'\u0065', u'\u0061', u'\u006D', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0063', u'\u005F', u'\u0073', u'\u0074', u'\u0072', u'\u0028', u'\u0029', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u007C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0062', u'\u0069', u'\u006E', u'\u0061', u'\u0072', u'\u0079', u'\u0020', u'\u007C', u'\u0020', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjb)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(38, u'\u0020', u'\u003F', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0061', u'\u0070', u'\u0070', u'\u0020', u'\u003A', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u006E', u'\u0063', u'\u0029', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u002A', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ciz)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cje) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
(cjf) = ((cix)((ces), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cje)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjf)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cjh) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
(cji) = ((cix)((ces), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjh)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cji)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(45, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0074', u'\u0065', u'\u006C', u'\u006C', u'\u0067', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(21, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u004C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cjk) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
(cjl) = ((cix)((ces), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjk)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjl)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(25, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cjn) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cjo) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cjp) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
(cjq) = ((cix)((ces), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjn)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjq)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(48, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0064', u'\u0069', u'\u0072', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjo)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0030', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0031', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0063', u'\u0075', u'\u0072', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0032', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0065', u'\u006E', u'\u0064', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(13, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0067', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjp)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002C', u'\u0020', u'\u006F', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0054', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cjs) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
(cjt) = ((cix)((ces), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjs)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjt)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0020', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0067', u'\u0065', u'\u0074', u'\u0028', u'\u0063', u'\u005F', u'\u0029', u'\u0029', u'\u0020', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(38, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0067', u'\u0028', u'\u002D', u'\u0031', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0063', u'\u0075', u'\u0072', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cjv) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
(cjw) = ((cix)((ces), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(cjy) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
(cjz) = ((cix)((ces), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjz)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(45, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0074', u'\u0065', u'\u006C', u'\u006C', u'\u0070', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(ceu, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(ckb) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(ckc) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(ckd) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
(cke) = ((cix)((ces), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckb)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cke)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(48, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0064', u'\u0069', u'\u0072', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckc)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0030', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0031', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0063', u'\u0075', u'\u0072', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0032', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0065', u'\u006E', u'\u0064', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(13, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0070', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckd)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002C', u'\u0020', u'\u006F', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(16, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(ckg) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(ckh) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
(cki) = ((cix)((ces), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cki)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(37, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0028', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckh)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0042', u'\u0029', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ckh)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u004C', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ceu, (new Array_<char16_t>(20, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0043', u'\u0068', u'\u0061', u'\u0072'))) == 0){
awe<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(ckk) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((cer), (new Array_<int64_t>(1, (0LL))));
(ckl) = ((bbx)((awi<List_<gb*>*, gb*>((cer), (new Array_<int64_t>(1, (0LL)))))));
(ckm) = ((cix)((ces), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckk)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((ckm)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cep), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ckl)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ceu, (new Array_<char16_t>(19, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u0065', u'\u0064', u'\u0069', u'\u0074', u'\u0042', u'\u0061', u'\u0073', u'\u0065', u'\u0047', u'\u0065', u'\u0074', u'\u0054', u'\u0065', u'\u0078', u'\u0074'))) == 0){
}
else if(cmp_(ceu, (new Array_<char16_t>(17, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0045', u'\u0064', u'\u0069', u'\u0074', u'\u004D', u'\u0075', u'\u006C', u'\u0074', u'\u0069'))) == 0){
}
else{if(!(false)){
throw 0xE9170000U;
}
}
}
// _tail
template<typename T_> static void beu(T_ ckq /*me_*/, Array_<int64_t>* ckr /*type*/){
ckq->I = ckq->B.end();
--ckq->I;
}
// _idx
template<typename T_> static int64_t bew(T_ cks /*me_*/, Array_<int64_t>* ckt /*type*/){
int64_t i_ = 0;
for(auto& t_ = cks->B.begin(); t_ != cks->B.end(); ++t_){
if(t_ == cks->I) return i_;
i_++;
}
return -1;
}
// buildStats
static void bex(List_<ge*>* cku /*stats*/, ge* ckv /*breakStat*/, ge* ckw /*skipStat*/){
ge* cky = nullptr; // stat
int64_t cla = 0;
awe<List_<ge*>*>((cku), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<ge*>*>((cku), (new Array_<int64_t>(1, (0LL)))))){
(cky) = (awi<List_<ge*>*, ge*>((cku), (new Array_<int64_t>(1, (0LL)))));
switch((cky)->lw){
case 66049LL:
(clc)((as_<cld>(classTable_, (cky), 88)), (ckv), (ckw));
break;
case 66050LL:
(clg)((as_<clh>(classTable_, (cky), 92)), (ckv), (ckw));
break;
case 16843265LL:
(clk)((as_<cll>(classTable_, (cky), 98)), (ckv), (ckw));
break;
case 16843266LL:
(clo)((as_<clp>(classTable_, (cky), 100)), (ckv), (ckw));
break;
case 66051LL:
(clr)((as_<bvq>(classTable_, (cky), 52)), (ckv), (ckw));
break;
case 526LL:
(clt)((as_<clu>(classTable_, (cky), 102)));
break;
case 66052LL:
(clw)((as_<bvs>(classTable_, (cky), 54)), (ckv), (ckw));
break;
case 527LL:
(cly)((as_<clz>(classTable_, (cky), 104)));
break;
case 528LL:
(cmb)((as_<bwq>(classTable_, (cky), 62)));
break;
case 529LL:
(cmd)((as_<ge>(classTable_, (cky), 16)), (ckv));
break;
case 530LL:
(cmf)((as_<ge>(classTable_, (cky), 16)), (ckw));
break;
case 531LL:
(cmh)((as_<cmi>(classTable_, (cky), 106)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
ays<List_<ge*>*>((cku), (new Array_<int64_t>(1, (0LL))));
}
}
// _moveOffset
template<typename T_> static void bey(T_ cmk /*me_*/, Array_<int64_t>* cml /*type*/, int64_t cmm /*offset*/){
if(cmm >= 0){
for(int64_t i_ = 0; i_ < cmm; i_++){
if(cmk->I == cmk->B.end()) break;
++cmk->I;
}
}else{
for(int64_t i_ = 0; i_ > cmm; i_--){
if(cmk->I == cmk->B.end()) break;
--cmk->I;
}
}
}
// _ins
template<typename T_, typename C_> static void bfe(T_ cmn /*me_*/, Array_<int64_t>* cmo /*type*/, C_ cmp /*item*/){
cmn->B.insert(cmn->I, cmp);
}
// getDefaultValue
static Array_<char16_t>* bff(gc* cmq /*type*/){
int64_t cmv = 0;
int64_t cnb = 0;
if((cms)((cmq))){
return new Array_<char16_t>(7, u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072');
}
switch((cmq)->lw){
case 66565LL:
if(!((cmx)((cmq)))){
throw 0xE9170000U;
}
return new Array_<char16_t>(1, u'\u0030');
break;
case 1025LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1026LL:
switch((as_<bvz>(classTable_, (cmq), 60))->bwa){
case 0LL:
case 2LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1LL:
return new Array_<char16_t>(3, u'\u0030', u'\u002E', u'\u0030');
break;
case 3LL:
return new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// _del
template<typename T_> static void bfh(T_ cnh /*me_*/, Array_<int64_t>* cni /*type*/){
auto& i_ = cnh->I++;
cnh->B.erase(i_);
}
// refClass
static Array_<char16_t>* bfo(ul* cnj /*ast*/){
bby* cnk = nullptr; // info
List_<um*>* cnt = nullptr; // items
um* cnv = nullptr; // item
fw* cny = nullptr; // func_
List_<gb*>* cob = nullptr; // items2
gb* cod = nullptr; // arg
bgi* cof = nullptr; // var_
(cnk) = ((bbx)((cnj)));
if((cnk)->bca){
return (cnk)->bdy;
}
((cnk)->bca) = (true);
if(!eqAddr_(((cnj)->nj), (nullptr))){
(bfo)((as_<ul>(classTable_, ((cnj)->nj), 22)));
}
if(((cnk)->bft) == (-1LL)){
((cnk)->bft) = (uo);
(uo) = ((uo) + (1LL));
}
(cnt) = ((cnj)->bag);
awe<List_<um*>*>((cnt), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((cnt), (new Array_<int64_t>(1, (0LL)))))){
(cnv) = (awi<List_<um*>*, um*>((cnt), (new Array_<int64_t>(1, (0LL)))));
if((((cnv)->azl)->lw) == (256LL)){
(cny) = (as_<fw>(classTable_, ((cnv)->azl), 8));
if(!eqAddr_(((cny)->sh), (nullptr))){
(bct)(((cny)->sh));
}
(cob) = ((cny)->sg);
awe<List_<gb*>*>((cob), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((cob), (new Array_<int64_t>(1, (0LL)))))){
(cod) = (awi<List_<gb*>*, gb*>((cob), (new Array_<int64_t>(1, (0LL)))));
(bct)(((cod)->qf));
ays<List_<gb*>*>((cob), (new Array_<int64_t>(1, (0LL))));
}
uk<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL))), (cny));
}
else if((((cnv)->azl)->lw) == (2LL)){
(cof) = (as_<bgi>(classTable_, ((cnv)->azl), 38));
(bct)((((cof)->bgk)->qf));
}
ays<List_<um*>*>((cnt), (new Array_<int64_t>(1, (0LL))));
}
uk<Queue_<ul*>*, ul*>((ak), (new Array_<int64_t>(1, (0LL))), (cnj));
return (cnk)->bdy;
}
// _dtor
static void cog(bgi* coh){
((coh)->bgk) = (nullptr);
((coh)->ne) = (nullptr);
((coh)->nf) = (nullptr);
((coh)->ng) = (nullptr);
((coh)->nh) = (nullptr);
((coh)->ni) = (nullptr);
((coh)->nj) = (nullptr);
((coh)->nk) = (nullptr);
}
// _copy
static bgi* coi(bgi* coj){
bgi* cok = nullptr;
(cok) = (new bgi());
((cok)->bgk) = (copy_((coj)->bgk));
((cok)->ne) = (copy_((coj)->ne));
((cok)->nf) = (copy_((coj)->nf));
((cok)->ng) = (copy_((coj)->ng));
((cok)->nh) = (copy_((coj)->nh));
((cok)->ni) = (copy_((coj)->ni));
((cok)->nj) = (copy_((coj)->nj));
((cok)->nk) = (copy_((coj)->nk));
((cok)->no) = ((coj)->no);
((cok)->lw) = ((coj)->lw);
return as_<bgi>(classTable_, (cok), 38);
}
// _toBin
static Array_<uint8_t>* col(bgi* com){
Array_<uint8_t>* con = nullptr;
(con) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(con) = ((con)->Cat(toBin_((com)->bgk)));
(con) = ((con)->Cat(toBin_((com)->ne)));
(con) = ((con)->Cat(toBin_((com)->nf)));
(con) = ((con)->Cat(toBin_((com)->ng)));
(con) = ((con)->Cat(toBin_((com)->nh)));
(con) = ((con)->Cat(toBin_((com)->ni)));
(con) = ((con)->Cat(toBin_((com)->nj)));
(con) = ((con)->Cat(toBin_((com)->nk)));
(con) = ((con)->Cat(toBin_((com)->no)));
(con) = ((con)->Cat(toBin_((com)->lw)));
return con;
}
// _fromBin
static bgi* coy(bgi* coz, Array_<uint8_t>* cpa, int64_t* cpb){
bgi* cpc = nullptr;
(cpc) = (new bgi());
((cpc)->bgk) = (fromBin_<gb*>((cpa), (*cpb)));
((cpc)->ne) = (fromBin_<ga*>((cpa), (*cpb)));
((cpc)->nf) = (fromBin_<Array_<char16_t>*>((cpa), (*cpb)));
((cpc)->ng) = (fromBin_<fx*>((cpa), (*cpb)));
((cpc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((cpa), (*cpb)));
((cpc)->ni) = (fromBin_<Array_<char16_t>*>((cpa), (*cpb)));
((cpc)->nj) = (fromBin_<fx*>((cpa), (*cpb)));
((cpc)->nk) = (fromBin_<fy*>((cpa), (*cpb)));
((cpc)->no) = (fromBin_<bool>((cpa), (*cpb)));
((cpc)->lw) = (fromBin_<int64_t>((cpa), (*cpb)));
return cpc;
}
// findFunc
static fw* bgn(ul* cpd /*ast*/, Array_<char16_t>* cpe /*name*/){
List_<um*>* cpf = nullptr; // items
um* cph = nullptr; // item
(cpf) = ((cpd)->bag);
awe<List_<um*>*>((cpf), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((cpf), (new Array_<int64_t>(1, (0LL)))))){
(cph) = (awi<List_<um*>*, um*>((cpf), (new Array_<int64_t>(1, (0LL)))));
if(((((cph)->azl)->lw) == (256LL)) && (cmp_((((cph)->azl)->nf), (cpe)) == 0)){
return as_<fw>(classTable_, ((cph)->azl), 8);
}
ays<List_<um*>*>((cpf), (new Array_<int64_t>(1, (0LL))));
}
return nullptr;
}
// copyFile
static bool bhl(Array_<char16_t>* cpk /*dst*/, Array_<char16_t>* cpl /*src*/){
return copyFile_(cpk->B, cpl->B);
}
// makeWriter
static bho* bhn(bho* cpm /*me2*/, Array_<char16_t>* cpn /*path*/, bool cpo /*append*/){
cpm->cpp = reinterpret_cast<int64_t>(new writer_());
std::u16string s_ = cpn->B;
const std::string& t_ = utf16ToUtf8_(s_);
writer_* r_ = reinterpret_cast<writer_*>(cpm->cpp);
r_->F = new std::ofstream(t_.c_str(), std::ios::out | std::ios::binary | (cpo ? std::ios::app : std::ios::trunc));
if(!*r_->F) return nullptr;
return cpm;
}
// _dtor
static void cpq(bho* cpr /*me*/){
}
// fin
static void bic(bho* cps /*me*/){
writer_* r_ = reinterpret_cast<writer_*>(cps->cpp);
r_->F->close();
}
// setPos
static void cpt(bho* cpu /*me*/, int64_t cpv /*origin*/, int64_t cpw /*pos*/){
writer_* r_ = reinterpret_cast<writer_*>(cpu->cpp);
std::ios_base::seekdir o_ = std::ios_base::beg;
switch(cpv){
case 0: o_ = std::ios_base::beg; break;
case 1: o_ = std::ios_base::cur; break;
case 2: o_ = std::ios_base::end; break;
}
r_->F->seekp(cpw, o_);
}
// getPos
static int64_t cpx(bho* cpy /*me*/){
writer_* r_ = reinterpret_cast<writer_*>(cpy->cpp);
return static_cast<int64_t>(r_->F->tellp());
}
// write
static void cpz(bho* cqa /*me*/, Array_<uint8_t>* cqb /*bin*/){
writer_* r_ = reinterpret_cast<writer_*>(cqa->cpp);
r_->F->write(reinterpret_cast<char*>(cqb->B), cqb->L);
}
// writeInt
static void cqc(bho* cqd /*me*/, int64_t cqe /*n*/){
Array_<char16_t>* cqf = nullptr; // s
int64_t cqj = 0;
int64_t cqk = 0;
(cqf) = (v<int64_t>((cqe), (new Array_<int64_t>(1, (0LL)))));
for(cqj = (0LL), cqk = (((cqf)->Len()) - (1LL)); cqj <= cqk; cqj += (1LL)){
(cql)((cqd), ((cqf)->At(cqj)));
}
}
// writeFloat
static void cqm(bho* cqn /*me*/, double cqo /*n*/){
Array_<char16_t>* cqp = nullptr; // s
int64_t cqt = 0;
int64_t cqu = 0;
(cqp) = (v<double>((cqo), (new Array_<int64_t>(1, (0LL)))));
for(cqt = (0LL), cqu = (((cqp)->Len()) - (1LL)); cqt <= cqu; cqt += (1LL)){
(cql)((cqn), ((cqp)->At(cqt)));
}
}
// writeChar
static void cql(bho* cqv /*me*/, char16_t cqw /*n*/){
writer_* r_ = reinterpret_cast<writer_*>(cqv->cpp);
writeUtf8_(r_->F, cqw);
}
// writeStr
static void bhp(bho* cqx /*me*/, Array_<char16_t>* cqy /*n*/){
int64_t crc = 0;
int64_t crd = 0;
for(crc = (0LL), crd = (((cqy)->Len()) - (1LL)); crc <= crd; crc += (1LL)){
(cql)((cqx), ((cqy)->At(crc)));
}
}
// _copy
static bho* cre(bho* crf){
bho* crg = nullptr;
(crg) = (new bho());
((crg)->cpp) = ((crf)->cpp);
return as_<bho>(classTable_, (crg), 40);
}
// _toBin
static Array_<uint8_t>* crh(bho* cri){
Array_<uint8_t>* crj = nullptr;
(crj) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(crj) = ((crj)->Cat(toBin_((cri)->cpp)));
return crj;
}
// _fromBin
static bho* crl(bho* crm, Array_<uint8_t>* crn, int64_t* cro){
bho* crp = nullptr;
(crp) = (new bho());
((crp)->cpp) = (fromBin_<int64_t>((crn), (*cro)));
return crp;
}
// getInfo
static bix* biw(fx* crq /*ast*/){
bix* crt = nullptr; // info
if((eqAddr_(((crq)->nk), (nullptr))) || ((((crq)->nk)->lw) != (268435456LL))){
(crt) = (new bix());
((crt)->lw) = (268435456LL);
((crt)->bjn) = ((cru)());
if((((aye<int64_t>(((crq)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL)) && (!eqAddr_(((crq)->nf), (nullptr)))) && (cmp_(((crq)->nf), (new Array_<char16_t>(1, u'\u0024'))) != 0)){
((crt)->crx) = ((cru)());
}
else{
((crt)->crx) = (nullptr);
}
((crt)->biz) = (false);
((crq)->nk) = (crt);
}
return as_<bix>(classTable_, ((crq)->nk), 42);
}
// _dtor
static void crz(bix* csa){
((csa)->bjn) = (nullptr);
((csa)->crx) = (nullptr);
}
// _copy
static bix* csb(bix* csc){
bix* csd = nullptr;
(csd) = (new bix());
((csd)->bjn) = (copy_((csc)->bjn));
((csd)->crx) = (copy_((csc)->crx));
((csd)->biz) = ((csc)->biz);
((csd)->lw) = ((csc)->lw);
return as_<bix>(classTable_, (csd), 42);
}
// _toBin
static Array_<uint8_t>* cse(bix* csf){
Array_<uint8_t>* csg = nullptr;
(csg) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(csg) = ((csg)->Cat(toBin_((csf)->bjn)));
(csg) = ((csg)->Cat(toBin_((csf)->crx)));
(csg) = ((csg)->Cat(toBin_((csf)->biz)));
(csg) = ((csg)->Cat(toBin_((csf)->lw)));
return csg;
}
// _fromBin
static bix* csl(bix* csm, Array_<uint8_t>* csn, int64_t* cso){
bix* csp = nullptr;
(csp) = (new bix());
((csp)->bjn) = (fromBin_<Array_<char16_t>*>((csn), (*cso)));
((csp)->crx) = (fromBin_<Array_<char16_t>*>((csn), (*cso)));
((csp)->biz) = (fromBin_<bool>((csn), (*cso)));
((csp)->lw) = (fromBin_<int64_t>((csn), (*cso)));
return csp;
}
// write
static void bke(List_<Array_<char16_t>*>* csq /*codes*/, Array_<char16_t>* csr /*attr*/, List_<gb*>* css /*args*/, List_<um*>* cst /*members*/){
Array_<char16_t>* csv = nullptr;
bix* csy = nullptr; // me_
bix* csz = nullptr; // meType
bix* cta = nullptr; // key
bix* ctb = nullptr; // item
bix* ctd = nullptr; // me_
bix* cte = nullptr; // item
bix* ctg = nullptr; // me_
bix* cth = nullptr; // item
bix* ctj = nullptr; // me_
bix* ctk = nullptr; // item
bix* ctm = nullptr; // me_
bix* ctn = nullptr; // n
bix* ctq = nullptr; // me_
bix* cts = nullptr; // me_
bix* ctt = nullptr; // meType
bix* ctu = nullptr; // value
bix* ctw = nullptr; // me_
bix* ctx = nullptr; // meType
bix* cty = nullptr; // item
bix* ctz = nullptr; // start
bix* cub = nullptr; // me_
bix* cuc = nullptr; // meType
bix* cud = nullptr; // item
bix* cuf = nullptr; // me_
bix* cug = nullptr; // meType
bix* cuh = nullptr; // callback
bix* cui = nullptr; // data
bix* cuk = nullptr; // me_
bix* cul = nullptr; // meType
bix* cum = nullptr; // key
bix* cun = nullptr; // existed
bix* cup = nullptr; // me_
bix* cur = nullptr; // me_
bix* cut = nullptr; // me_
bix* cuv = nullptr; // me_
bix* cux = nullptr; // me_
bix* cuz = nullptr; // me_
bix* cva = nullptr; // item
bix* cvc = nullptr; // me_
bix* cvd = nullptr; // offset
bix* cvf = nullptr; // me_
bix* cvh = nullptr; // me_
bix* cvi = nullptr; // n
bix* cvk = nullptr; // me_
bix* cvm = nullptr; // me_
bix* cvo = nullptr; // min
bix* cvp = nullptr; // max
bix* cvr = nullptr; // min
bix* cvs = nullptr; // max
bix* cvu = nullptr; // me_
bix* cvv = nullptr; // meType
bix* cvw = nullptr; // start
bix* cvx = nullptr; // len
bix* cwa = nullptr; // me_
bix* cwc = nullptr; // me_
bix* cwe = nullptr; // me_
bix* cwf = nullptr; // success
bix* cwh = nullptr; // me_
bix* cwi = nullptr; // success
bix* cwk = nullptr; // me_
bix* cwl = nullptr; // success
bix* cwn = nullptr; // me_
bix* cwo = nullptr; // type
bix* cwq = nullptr; // str
bix* cwt = nullptr; // path
bix* cwv = nullptr; // path
bix* cww = nullptr; // recursion
bix* cwx = nullptr; // callback
bix* cwy = nullptr; // data
bix* cxa = nullptr; // me_
bix* cxb = nullptr; // path
bix* cxc = nullptr; // handle
bix* cxf = nullptr; // me_
bix* cxg = nullptr; // path
bix* cxh = nullptr; // append
bix* cxi = nullptr; // handle
bix* cxk = nullptr; // me_
bix* cxl = nullptr; // handle
bix* cxn = nullptr; // me_
bix* cxo = nullptr; // handle
bix* cxq = nullptr; // me_
bix* cxr = nullptr; // handle
bix* cxt = nullptr; // me_
bix* cxu = nullptr; // origin
bix* cxv = nullptr; // pos
bix* cxw = nullptr; // handle
bix* cxy = nullptr; // me_
bix* cxz = nullptr; // handle
bix* cyb = nullptr; // me_
bix* cyc = nullptr; // handle
bix* cye = nullptr; // me_
bix* cyf = nullptr; // handle
bix* cyh = nullptr; // me_
bix* cyi = nullptr; // origin
bix* cyj = nullptr; // pos
bix* cyk = nullptr; // handle
bix* cym = nullptr; // me_
bix* cyn = nullptr; // n
bix* cyo = nullptr; // handle
bix* cyq = nullptr; // me_
bix* cyr = nullptr; // n
bix* cys = nullptr; // handle
bix* cyu = nullptr; // me_
bix* cyv = nullptr; // handle
bix* cyx = nullptr; // me_
bix* cyy = nullptr; // parent
bix* cyz = nullptr; // x
bix* cza = nullptr; // y
bix* czb = nullptr; // width
bix* czc = nullptr; // height
bix* czd = nullptr; // anchorX
bix* cze = nullptr; // anchorY
bix* czf = nullptr; // handle
csv = csr;
if(cmp_(csv, (new Array_<char16_t>(4, u'\u0061', u'\u0064', u'\u0064', u'\u0072'))) == 0){
}
else if(cmp_(csv, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(csy) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(csz) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cta) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctb) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((csz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csy)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cta)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ctb)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csy)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cta)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ctb)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(csv, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctd) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cte) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(24, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006E', u'\u005F', u'\u003D', u'\u007B', u'\u0050', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u004E', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0049', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cte)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctd)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002E', u'\u0048', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u007B'))->Cat(v<Array_<char16_t>*>(((ctd)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0048', u'\u003D', u'\u006E', u'\u005F', u'\u003B'))->Cat(v<Array_<char16_t>*>(((ctd)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(16, u'\u002E', u'\u0054', u'\u003D', u'\u006E', u'\u005F', u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u006E', u'\u005F', u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctd)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0054', u'\u003B'))->Cat(v<Array_<char16_t>*>(((ctd)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u002E', u'\u0054', u'\u002E', u'\u004E', u'\u003D', u'\u006E', u'\u005F', u'\u003B'))->Cat(v<Array_<char16_t>*>(((ctd)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0054', u'\u003D', u'\u006E', u'\u005F', u'\u007D', u'\u000A')))))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ctd)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u004C', u'\u002B', u'\u002B', u'\u003B', u'\u000A'))));
}
else if(cmp_(csv, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctg) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cth) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ctg)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cth)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctj) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctk) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ctj)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctm) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctn) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ctm)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0026'))->Cat(v<Array_<char16_t>*>(((ctn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(7, u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(72, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065', u'\u0029', u'\u003F', u'\u004F', u'\u005F', u'\u002E', u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065', u'\u003A', u'\u006C', u'\u006F', u'\u0063', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E', u'\u0073', u'\u0065', u'\u0061', u'\u0072', u'\u0063', u'\u0068', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0031', u'\u0029', u'\u002E', u'\u0073', u'\u0070', u'\u006C', u'\u0069', u'\u0074', u'\u0028', u'\u0022', u'\u0026', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(39, u'\u0069', u'\u0066', u'\u0028', u'\u0072', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003D', u'\u003D', u'\u003D', u'\u0031', u'\u0026', u'\u0026', u'\u0072', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0022', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u005B', u'\u005D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(32, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003C', u'\u0072', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(19, u'\u0072', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u003D', u'\u007B', u'\u0053', u'\u003A', u'\u0072', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(3, u'\u0064', u'\u0065', u'\u006C'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctq) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0050', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((ctq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(26, u'\u002E', u'\u0048', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((ctq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(26, u'\u002E', u'\u0054', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u002E', u'\u0050', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ctq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0050', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ctq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u004C', u'\u002D', u'\u002D', u'\u003B', u'\u000A'))));
}
else if(cmp_(csv, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006C', u'\u006C'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cts) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctt) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctu) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctt)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((ctt)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cts)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u002E', u'\u0053', u'\u003D', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctu)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u0029', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cts)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cts)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0066', u'\u0069', u'\u006C', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctu)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctw) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctx) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cty) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(ctz) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctx)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((ctx)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ctw)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(31, u'\u002E', u'\u0053', u'\u002E', u'\u0069', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cty)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002C'))->Cat(v<Array_<char16_t>*>(((ctz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F', u'\u0030', u'\u003A'))->Cat(v<Array_<char16_t>*>(((ctz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ctw)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0069', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cty)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((ctz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F', u'\u0030', u'\u003A'))->Cat(v<Array_<char16_t>*>(((ctz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
}
else if(cmp_(csv, (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0042', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cub) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cuc) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cud) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u005F', u'\u003D', u'\u0030', u'\u002C', u'\u0062', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cub)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u002C', u'\u0063', u'\u005F', u'\u002C', u'\u006D', u'\u005F', u'\u002C', u'\u0066', u'\u005F', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(41, u'\u0066', u'\u005F', u'\u003D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0061', u'\u002C', u'\u0062', u'\u0029', u'\u007B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u003E', u'\u0062', u'\u003F', u'\u0031', u'\u003A', u'\u0061', u'\u003C', u'\u0062', u'\u003F', u'\u002D', u'\u0031', u'\u003A', u'\u0030', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(49, u'\u0066', u'\u005F', u'\u003D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0061', u'\u002C', u'\u0062', u'\u0029', u'\u007B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u002E', u'\u0053', u'\u003E', u'\u0062', u'\u002E', u'\u0053', u'\u003F', u'\u0031', u'\u003A', u'\u0061', u'\u002E', u'\u0053', u'\u003C', u'\u0062', u'\u002E', u'\u0053', u'\u003F', u'\u002D', u'\u0031', u'\u003A', u'\u0030', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0028', u'\u0061', u'\u005F', u'\u003C', u'\u003D', u'\u0062', u'\u005F', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(18, u'\u0063', u'\u005F', u'\u003D', u'\u007E', u'\u007E', u'\u0028', u'\u0028', u'\u0061', u'\u005F', u'\u002B', u'\u0062', u'\u005F', u'\u0029', u'\u002F', u'\u0032', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u006D', u'\u005F', u'\u003D', u'\u0066', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cud)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cub)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u005B', u'\u0063', u'\u005F', u'\u005D', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(17, u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u003C', u'\u0030', u'\u0029', u'\u0062', u'\u005F', u'\u003D', u'\u0063', u'\u005F', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(22, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u003E', u'\u0030', u'\u0029', u'\u0061', u'\u005F', u'\u003D', u'\u0063', u'\u005F', u'\u002B', u'\u0031', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(7, u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cuf) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cug) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cuh) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cui) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0044', u'\u005F', u'\u003D', u'\u007B', u'\u0046', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cuh)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002C', u'\u0044', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cui)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002C', u'\u0043', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u007D', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cug)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cug)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cuf)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(73, u'\u002E', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068', u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0056', u'\u005F', u'\u002C', u'\u004B', u'\u005F', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u0029', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u003D', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0046', u'\u0028', u'\u007B', u'\u0053', u'\u003A', u'\u004B', u'\u005F', u'\u007D', u'\u002C', u'\u0056', u'\u005F', u'\u002C', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0044', u'\u0029', u'\u007D', u'\u002C', u'\u0044', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cuf)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(69, u'\u002E', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068', u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0056', u'\u005F', u'\u002C', u'\u004B', u'\u005F', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u0029', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u003D', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0046', u'\u0028', u'\u004B', u'\u005F', u'\u002C', u'\u0056', u'\u005F', u'\u002C', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0044', u'\u0029', u'\u007D', u'\u002C', u'\u0044', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0044', u'\u005F', u'\u002E', u'\u0043', u'\u003B', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cuk) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cul) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cum) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cun) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cul)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cul)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0072', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cuk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0067', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cum)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0072', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cuk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0067', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cum)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cun)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(21, u'\u002E', u'\u0024', u'\u003D', u'\u0072', u'\u005F', u'\u0021', u'\u003D', u'\u003D', u'\u0075', u'\u006E', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0065', u'\u0064', u'\u0029', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cul)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((3LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cup) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cup)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(csv, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cur) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cur)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002E', u'\u0073', u'\u0068', u'\u0069', u'\u0066', u'\u0074', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(csv, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cut) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cut)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u002E', u'\u0070', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(csv, (new Array_<char16_t>(4, u'\u0068', u'\u0065', u'\u0061', u'\u0064'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cuv) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cuv)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cuv)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0048', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(3, u'\u0069', u'\u0064', u'\u0078'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cux) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cux)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0048', u'\u002C', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cux)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(21, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(18, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u0021', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cux)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0050', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0070', u'\u005F', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0073'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cuz) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cva) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cuz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0050', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006E', u'\u005F', u'\u003D', u'\u007B', u'\u0050', u'\u003A', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u002C', u'\u004E', u'\u003A', u'\u0070', u'\u005F', u'\u002C', u'\u0049', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cva)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u007D', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((cuz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u002E', u'\u0048', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(10, u'\u002E', u'\u0054', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((cuz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0054', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cuz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u004C', u'\u002B', u'\u002B', u'\u003B', u'\u000A'))));
}
else if(cmp_(csv, (new Array_<char16_t>(10, u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvc) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvd) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvd)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u003E', u'\u003D', u'\u0030', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((cvd)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u003B', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cvd)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u003B', u'\u0069', u'\u005F', u'\u002D', u'\u002D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u0050', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0078', u'\u0074'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvf) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvf)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvf)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(2, u'\u006F', u'\u0072'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvh) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvi) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvh)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u007C'))->Cat(v<Array_<char16_t>*>(((cvi)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvk) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u005B', u'\u0030', u'\u005D', u'\u003B', u'\u000A'))));
}
else if(cmp_(csv, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvm) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvm)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u005B'))->Cat(v<Array_<char16_t>*>(((cvm)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u005D', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(3, u'\u0072', u'\u006E', u'\u0064'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvo) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvp) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u007E', u'\u007E', u'\u0028', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0072', u'\u0061', u'\u006E', u'\u0064', u'\u006F', u'\u006D', u'\u0028', u'\u0029', u'\u002A', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvp)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002D'))->Cat(v<Array_<char16_t>*>(((cvo)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002B', u'\u0031', u'\u0029', u'\u0029', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cvo)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(csv, (new Array_<char16_t>(8, u'\u0072', u'\u006E', u'\u0064', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvr) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvs) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0072', u'\u0061', u'\u006E', u'\u0064', u'\u006F', u'\u006D', u'\u0028', u'\u0029', u'\u002A', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvs)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002D'))->Cat(v<Array_<char16_t>*>(((cvr)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cvr)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(csv, (new Array_<char16_t>(3, u'\u0073', u'\u0075', u'\u0062'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvu) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvv) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvw) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cvx) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvv)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cvv)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u007B', u'\u0053', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cvx)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F'))->Cat(v<Array_<char16_t>*>(((cvu)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvw)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cvu)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvw)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cvw)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002B'))->Cat(v<Array_<char16_t>*>(((cvx)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0029', u'\u007D', u'\u003B', u'\u000A'))))))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvx)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F'))->Cat(v<Array_<char16_t>*>(((cvu)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvw)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cvu)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvw)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cvw)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002B'))->Cat(v<Array_<char16_t>*>(((cvx)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))))))));
}
else if(cmp_(csv, (new Array_<char16_t>(7, u'\u0073', u'\u0079', u'\u0073', u'\u0054', u'\u0069', u'\u006D', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(29, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0044', u'\u0061', u'\u0074', u'\u0065', u'\u0028', u'\u0029', u'\u002E', u'\u0067', u'\u0065', u'\u0074', u'\u0054', u'\u0069', u'\u006D', u'\u0065', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u0069', u'\u006C'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwa) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwa)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwa)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0054', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(4, u'\u0074', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwc) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cwc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A'))));
}
else if(cmp_(csv, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u0074', u'\u0036', u'\u0034'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwe) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwf) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwe)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0032', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cwe)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u002E', u'\u0053', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0030', u'\u0022', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cwe)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0078', u'\u0022', u'\u0029', u'\u007B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwe)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(22, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0032', u'\u0029', u'\u002C', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwe)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwf)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(24, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028', u'\u0073', u'\u005F', u'\u002C', u'\u0031', u'\u0036', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwe)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwf)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwe)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u002E', u'\u0053', u'\u002C', u'\u0031', u'\u0030', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwh) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwi) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwh)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwi)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0049', u'\u006E', u'\u0074'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwk) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwl) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0032', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cwk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u002E', u'\u0053', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0030', u'\u0022', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cwk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0078', u'\u0022', u'\u0029', u'\u007B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(22, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0032', u'\u0029', u'\u002C', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwl)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(24, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028', u'\u0073', u'\u005F', u'\u002C', u'\u0031', u'\u0036', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwl)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u002E', u'\u0053', u'\u002C', u'\u0031', u'\u0030', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwn) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwo) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006E', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwo)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0030', u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(29, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((3LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u003F', u'\u0022', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u0022', u'\u003A', u'\u0022', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u0022', u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u006E', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003E', u'\u003D', u'\u0030', u'\u003F', u'\u007E', u'\u007E'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u0026', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u003A', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u002D', u'\u0028', u'\u007E'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0026', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(63, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0022', u'\u002B', u'\u006E', u'\u005F', u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0032', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u006E', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003E', u'\u003D', u'\u0030', u'\u003F', u'\u007E', u'\u007E'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(17, u'\u0026', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u003A', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u002D', u'\u0028', u'\u007E'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0026', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(65, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0022', u'\u002B', u'\u006E', u'\u005F', u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0034', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u006E', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u003E', u'\u003E', u'\u003E', u'\u0030', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0022', u'\u002B', u'\u006E', u'\u005F', u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0038', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u006E', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u003E', u'\u003E', u'\u003E', u'\u0030', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(87, u'\u003E', u'\u003D', u'\u0030', u'\u003F', u'\u0022', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0022', u'\u003A', u'\u0022', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0022', u'\u0029', u'\u002B', u'\u006E', u'\u005F', u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0031', u'\u0036', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwo)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cwn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(9, u'\u0063', u'\u0075', u'\u0069', u'\u005F', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwq) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(26, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074', u'\u0029', u'\u007B', u'\u004F', u'\u005F', u'\u002E', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u007D', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u006F', u'\u006C', u'\u0065', u'\u002E', u'\u006C', u'\u006F', u'\u0067', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(csv, (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u0046', u'\u0069', u'\u006C', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(10, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwt) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0066', u'\u005F', u'\u003D', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u002C', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwt)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(46, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0029', u'\u0066', u'\u005F', u'\u003D', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u0029', u'\u0021', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u003D', u'\u003D', u'\u003D', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0034', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0072', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0065', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0073', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0033', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(17, u'\u0066', u'\u005F', u'\u003D', u'\u0046', u'\u005F', u'\u0028', u'\u0070', u'\u005F', u'\u002C', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(12, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwv) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cww) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwx) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cwy) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0066', u'\u005F', u'\u002C', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwv)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0034', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0072', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0065', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0073', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0033', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0066', u'\u005F', u'\u003D', u'\u0046', u'\u0046', u'\u005F', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(33, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003C', u'\u0066', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(36, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0030', u'\u002C', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u0070', u'\u005F', u'\u0026', u'\u0026', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cww)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(47, u'\u007C', u'\u007C', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u002E', u'\u0069', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u0029', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0069', u'\u0066', u'\u0028', u'\u0021'))->Cat(v<Array_<char16_t>*>(((cwx)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(42, u'\u0028', u'\u007B', u'\u0053', u'\u003A', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u007D', u'\u002C', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u005B', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0027', u'\u002F', u'\u0027', u'\u002C'))->Cat(v<Array_<char16_t>*>(((cwy)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0029', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(csv, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cxa) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cxb) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cxc) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0066', u'\u005F', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxb)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(39, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0029', u'\u0066', u'\u005F', u'\u003D', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0034', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0072', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0065', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0073', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0033', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0066', u'\u005F', u'\u003D', u'\u0046', u'\u005F', u'\u0028', u'\u0070', u'\u005F', u'\u002C', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(26, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxa)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u003D', u'\u007B', u'\u0046', u'\u003A', u'\u0066', u'\u005F', u'\u002C', u'\u0049', u'\u003A', u'\u0030', u'\u007D', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxa)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(csv, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cxf) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cxg) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cxh) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cxi) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxf)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxi)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u003D', u'\u007B', u'\u0046', u'\u003A', u'\u0022', u'\u0022', u'\u002C', u'\u0049', u'\u003A', u'\u0030', u'\u002C', u'\u0050', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cxg)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u007D', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxf)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(csv, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cxk) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cxl) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxl)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0046', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cxn) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cxo) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxo)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0049', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(21, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u004C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cxq) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cxr) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxr)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002E', u'\u0046', u'\u002E', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0041', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxr)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0049', u'\u002B', u'\u002B', u'\u0029', u'\u003B', u'\u000A')))))));
}
else if(cmp_(csv, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cxt) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cxu) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cxv) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cxw) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxt)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxw)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0049', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxv)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(csv, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0054', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cxy) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cxz) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxy)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u002E', u'\u0049', u'\u003E', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxy)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxz)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002E', u'\u0046', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u000A')))))));
}
else if(cmp_(csv, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cyb) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cyc) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0076', u'\u0061', u'\u0072', u'\u0020', u'\u0064', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cyb)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cyc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u0046', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u006C', u'\u0061', u'\u0063', u'\u0065', u'\u0028', u'\u0022', u'\u005C', u'\u006E', u'\u0022', u'\u002C', u'\u0020', u'\u0022', u'\u005C', u'\u0075', u'\u0030', u'\u0030', u'\u0030', u'\u0044', u'\u005C', u'\u006E', u'\u0022', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(34, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0029', u'\u007B', u'\u004F', u'\u005F', u'\u002E', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyb)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cyc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002E', u'\u0050', u'\u002C', u'\u0064', u'\u005F', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u007D', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(23, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0062', u'\u005F', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0042', u'\u006C', u'\u006F', u'\u0062', u'\u0028', u'\u005B', u'\u0064', u'\u005F', u'\u005D', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(36, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006C', u'\u005F', u'\u003D', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u0045', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0028', u'\u0022', u'\u0061', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u006C', u'\u005F', u'\u002E', u'\u0064', u'\u006F', u'\u0077', u'\u006E', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cyb)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cyc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0050', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(46, u'\u006C', u'\u005F', u'\u002E', u'\u0068', u'\u0072', u'\u0065', u'\u0066', u'\u003D', u'\u0028', u'\u0055', u'\u0052', u'\u004C', u'\u007C', u'\u007C', u'\u0077', u'\u0065', u'\u0062', u'\u006B', u'\u0069', u'\u0074', u'\u0055', u'\u0052', u'\u004C', u'\u0029', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u004F', u'\u0062', u'\u006A', u'\u0065', u'\u0063', u'\u0074', u'\u0055', u'\u0052', u'\u004C', u'\u0028', u'\u0062', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(41, u'\u006C', u'\u005F', u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0041', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0028', u'\u0022', u'\u0073', u'\u0074', u'\u0079', u'\u006C', u'\u0065', u'\u0022', u'\u002C', u'\u0022', u'\u0064', u'\u0069', u'\u0073', u'\u0070', u'\u006C', u'\u0061', u'\u0079', u'\u003A', u'\u006E', u'\u006F', u'\u006E', u'\u0065', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u002E', u'\u0061', u'\u0070', u'\u0070', u'\u0065', u'\u006E', u'\u0064', u'\u0043', u'\u0068', u'\u0069', u'\u006C', u'\u0064', u'\u0028', u'\u006C', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(12, u'\u006C', u'\u005F', u'\u002E', u'\u0063', u'\u006C', u'\u0069', u'\u0063', u'\u006B', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u002E', u'\u0072', u'\u0065', u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u0043', u'\u0068', u'\u0069', u'\u006C', u'\u0064', u'\u0028', u'\u006C', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cyb)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cyc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0046', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cye) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cyf) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cye)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cyf)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0049', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cyh) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cyi) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cyj) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cyk) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cyh)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cyk)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0049', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cyj)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(csv, (new Array_<char16_t>(16, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cym) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cyn) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cyo) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
}
else if(cmp_(csv, (new Array_<char16_t>(20, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0043', u'\u0068', u'\u0061', u'\u0072'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cyq) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cyr) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cys) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cys)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0049', u'\u003C'))->Cat(v<Array_<char16_t>*>(((cyq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cys)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002E', u'\u0046', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cyq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cys)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0046', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cyq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cys)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002E', u'\u0046', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0030', u'\u002C'))->Cat(v<Array_<char16_t>*>(((cyq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cys)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(24, u'\u002E', u'\u0049', u'\u0029', u'\u002B', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyr)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cyq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cys)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0046', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cys)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0049', u'\u002B', u'\u0031', u'\u0029', u'\u003B', u'\u000A'))))))))))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cyq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cys)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(24, u'\u002E', u'\u0046', u'\u002B', u'\u003D', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyr)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cyq)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cys)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0049', u'\u002B', u'\u002B', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(19, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u0065', u'\u0064', u'\u0069', u'\u0074', u'\u0042', u'\u0061', u'\u0073', u'\u0065', u'\u0047', u'\u0065', u'\u0074', u'\u0054', u'\u0065', u'\u0078', u'\u0074'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cyu) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(cyv) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cyu)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cyv)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002E', u'\u0048', u'\u002E', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u003B', u'\u000A')))));
}
else if(cmp_(csv, (new Array_<char16_t>(17, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0045', u'\u0064', u'\u0069', u'\u0074', u'\u004D', u'\u0075', u'\u006C', u'\u0074', u'\u0069'))) == 0){
awe<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cyx) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cyy) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cyz) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cza) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(czb) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(czc) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(czd) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((css), (new Array_<int64_t>(1, (0LL))));
(cze) = ((biw)((awi<List_<gb*>*, gb*>((css), (new Array_<int64_t>(1, (0LL)))))));
(czf) = ((cxd)((cst), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(43, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0068', u'\u005F', u'\u003D', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u0045', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0028', u'\u0022', u'\u0074', u'\u0065', u'\u0078', u'\u0074', u'\u0061', u'\u0072', u'\u0065', u'\u0061', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(24, u'\u0068', u'\u005F', u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0041', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0028', u'\u0022', u'\u0063', u'\u006F', u'\u006C', u'\u0073', u'\u0022', u'\u002C', u'\u0022'))->Cat(v<Array_<char16_t>*>(((czb)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0022', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(24, u'\u0068', u'\u005F', u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0041', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0028', u'\u0022', u'\u0072', u'\u006F', u'\u0077', u'\u0073', u'\u0022', u'\u002C', u'\u0022'))->Cat(v<Array_<char16_t>*>(((czc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0022', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u002E', u'\u0061', u'\u0070', u'\u0070', u'\u0065', u'\u006E', u'\u0064', u'\u0043', u'\u0068', u'\u0069', u'\u006C', u'\u0064', u'\u0028', u'\u0063', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cyx)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((czf)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003D', u'\u007B', u'\u0043', u'\u003A', u'\u0063', u'\u005F', u'\u007D', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((csq), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cyx)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
}
// buildStats
static void bkj(List_<ge*>* czh /*stats*/){
ge* czj = nullptr; // stat
int64_t czl = 0;
awe<List_<ge*>*>((czh), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<ge*>*>((czh), (new Array_<int64_t>(1, (0LL)))))){
(czj) = (awi<List_<ge*>*, ge*>((czh), (new Array_<int64_t>(1, (0LL)))));
switch((czj)->lw){
case 66049LL:
(czn)((as_<cld>(classTable_, (czj), 88)));
break;
case 66050LL:
(czp)((as_<clh>(classTable_, (czj), 92)));
break;
case 16843265LL:
(czr)((as_<cll>(classTable_, (czj), 98)));
break;
case 16843266LL:
(czt)((as_<clp>(classTable_, (czj), 100)));
break;
case 66051LL:
(czv)((as_<bvq>(classTable_, (czj), 52)));
break;
case 526LL:
(czx)((as_<clu>(classTable_, (czj), 102)));
break;
case 66052LL:
(czz)((as_<bvs>(classTable_, (czj), 54)));
break;
case 527LL:
(dab)((as_<clz>(classTable_, (czj), 104)));
break;
case 528LL:
(dad)((as_<bwq>(classTable_, (czj), 62)));
break;
case 529LL:
(daf)((as_<ge>(classTable_, (czj), 16)));
break;
case 530LL:
(dah)((as_<ge>(classTable_, (czj), 16)));
break;
case 531LL:
(daj)((as_<cmi>(classTable_, (czj), 106)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
ays<List_<ge*>*>((czh), (new Array_<int64_t>(1, (0LL))));
}
}
// getDefaultValue
static Array_<char16_t>* bkp(gc* dal /*type*/){
int64_t dap = 0;
int64_t dau = 0;
if((cms)((dal))){
return new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C');
}
switch((dal)->lw){
case 66565LL:
if(!((cmx)((dal)))){
throw 0xE9170000U;
}
return new Array_<char16_t>(1, u'\u0030');
break;
case 1025LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1026LL:
switch((as_<bvz>(classTable_, (dal), 60))->bwa){
case 0LL:
case 2LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 3LL:
return new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// refClass
static Array_<char16_t>* bkx(ul* dba /*ast*/){
bix* dbb = nullptr; // info
(dbb) = ((biw)((dba)));
if((dbb)->biz){
return (dbb)->bjn;
}
((dbb)->biz) = (true);
if(!eqAddr_(((dba)->nj), (nullptr))){
(bkx)((as_<ul>(classTable_, ((dba)->nj), 22)));
}
uk<Queue_<ul*>*, ul*>((bj), (new Array_<int64_t>(1, (0LL))), (dba));
return (dbb)->bjn;
}
// findFunc
static fw* blf(ul* dbg /*ast*/, Array_<char16_t>* dbh /*name*/){
List_<um*>* dbi = nullptr; // items
um* dbk = nullptr; // item
(dbi) = ((dbg)->bag);
awe<List_<um*>*>((dbi), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((dbi), (new Array_<int64_t>(1, (0LL)))))){
(dbk) = (awi<List_<um*>*, um*>((dbi), (new Array_<int64_t>(1, (0LL)))));
if(((((dbk)->azl)->lw) == (256LL)) && (cmp_((((dbk)->azl)->nf), (dbh)) == 0)){
return as_<fw>(classTable_, ((dbk)->azl), 8);
}
ays<List_<um*>*>((dbi), (new Array_<int64_t>(1, (0LL))));
}
return nullptr;
}
// escapeChar
static Array_<char16_t>* bmm(char16_t dbn /*c*/){
char16_t dbp = 0;
dbp = dbn;
if(dbp == (u'\u0022')){
return new Array_<char16_t>(2, u'\u005C', u'\u0022');
}
else if(dbp == (u'\u0027')){
return new Array_<char16_t>(2, u'\u005C', u'\u0027');
}
else if(dbp == (u'\u005C')){
return new Array_<char16_t>(2, u'\u005C', u'\u005C');
}
else if((u'\u0020') <= dbp && dbp <= (u'\u007E')){
return v<char16_t>((dbn), (new Array_<int64_t>(1, (0LL))));
}
else{return ((new Array_<char16_t>(2, u'\u005C', u'\u0075'))->Cat(v<Array_<char16_t>*>((auw<Array_<char16_t>*>((v<uint16_t>((static_cast<uint16_t>(dbn)), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))), (2LL), (-1LL))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0));
}
}
// initAst
static void brh(fx* dbv /*ast*/, int64_t dbw /*typeId*/, ga* dbx /*pos*/, Array_<char16_t>* dby /*name*/, bool dbz /*setParent*/){
if(!(!is_(classTable_, (dbv), 14))){
throw 0xE9170000U;
}
(dca)((dbv), (dbw), (dbx), (dby), (dbz));
}
// make
static ga* bri(Array_<char16_t>* dcb /*srcName*/, int64_t dcc /*row*/, int64_t dcd /*col*/){
ga* dce = nullptr; // pos
(dce) = (new ga());
((dce)->hk) = (dcb);
((dce)->hl) = (dcc);
((dce)->hm) = (dcd);
return dce;
}
// _addStack
template<typename T_, typename C_> static void brj(T_ dcf /*me_*/, Array_<int64_t>* dcg /*type*/, C_ dch /*item*/){
dcf->B.push(dch);
}
// readChar
static char16_t brk(){
char16_t dcl = 0; // c
char16_t dcp = 0;
while(true){
(dcl) = ((bsx)());
if((dcl) == (u'\u000A')){
(dcl) = ((brk)());
switch(dcl){
case u'\u000A':
return u'\u000A';
break;
case u'\u003B':
do{
(dcl) = ((dct)());
if((dcl) == (u'\u0000')){
return u'\u0000';
}
}while((dcl) != (u'\u000A'));
(ave) = (dcl);
continue;
break;
case u'\u007C':
return (brk)();
break;
}
(avf) = (dcl);
return u'\u000A';
}
if((dcl) != (u'\u0020')){
return dcl;
}
}
}
// readIdentifier
static Array_<char16_t>* bsb(bool dcz /*skipSpaces*/, bool dda /*refName*/){
char16_t ddb = 0; // c
Array_<char16_t>* ddg = nullptr; // buf
int64_t ddh = 0; // pos
bool ddi = false; // at
char16_t ddl = 0;
Array_<char16_t>* ddr = nullptr; // srcName
int64_t ddv = 0;
char16_t ddx = 0; // c2
int64_t ddw = 0;
(ddb) = ((dcz) ? ((brk)()) : ((bsx)()));
if(!((((((u'\u0061') <= (ddb)) && ((ddb) <= (u'\u007A'))) || (((u'\u0041') <= (ddb)) && ((ddb) <= (u'\u005A')))) || ((ddb) == (u'\u005F'))) || ((dda) && (((ddb) == (u'\u0040')) || ((ddb) == (u'\u005C')))))){
(ave) = (ddb);
(ad)((65542LL), ((dde)()), (new Array_<Array_<char16_t>*>(1, ((ddf)((ddb))))));
return new Array_<char16_t>(0);
}
(ddg) = (newArray_<char16_t, Array_<char16_t>*>(1, (128LL)));
(ddh) = (0LL);
(ddi) = (false);
do{
switch(ddb){
case u'\u0040':
if(ddi){
(ave) = (ddb);
(ad)((65543LL), ((dde)()), (nullptr));
return new Array_<char16_t>(0);
}
if((ddh) != (0LL)){
(ddr) = (auw<Array_<char16_t>*>((ddg), (new Array_<int64_t>(1, (0LL))), (0LL), (ddh)));
for(ddv = (0LL), ddw = (((ddr)->Len()) - (1LL)); ddv <= ddw; ddv += (1LL)){
(ddx) = ((ddr)->At(ddv));
if(((u'\u0041') <= (ddx)) && ((ddx) <= (u'\u005A'))){
(ave) = (ddb);
(ad)((65544LL), ((dde)()), (new Array_<Array_<char16_t>*>(1, (ddr))));
return new Array_<char16_t>(0);
}
}
(dea)((ddr));
}
(ddi) = (true);
break;
case u'\u005C':
if(ddi){
(ave) = (ddb);
(ad)((65545LL), ((dde)()), (nullptr));
return new Array_<char16_t>(0);
}
break;
}
if((ddh) == (128LL)){
(ave) = (ddb);
(ad)((65546LL), ((dde)()), (new Array_<Array_<char16_t>*>(1, (ddg))));
return new Array_<char16_t>(0);
}
((ddg)->At(ddh)) = (ddb);
(ddh) = ((ddh) + (1LL));
(ddb) = ((bsx)());
}while(((((((u'\u0061') <= (ddb)) && ((ddb) <= (u'\u007A'))) || (((u'\u0041') <= (ddb)) && ((ddb) <= (u'\u005A')))) || ((ddb) == (u'\u005F'))) || (((u'\u0030') <= (ddb)) && ((ddb) <= (u'\u0039')))) || ((dda) && (((ddb) == (u'\u0040')) || ((ddb) == (u'\u005C')))));
(ave) = (ddb);
return auw<Array_<char16_t>*>((ddg), (new Array_<int64_t>(1, (0LL))), (0LL), (ddh));
}
// parseFunc
static fw* bsg(Array_<char16_t>* deh /*parentClass*/, bool dei /*overritten*/){
fw* dej = nullptr; // ast
char16_t del = 0; // c
int64_t der = 0; // row
int64_t des = 0; // col
Array_<char16_t>* det = nullptr; // s
char16_t dey = 0;
gb* dgq = nullptr; // arg
dgu* dgt = nullptr; // type
char16_t dgw = 0; // c
char16_t dhk = 0; // c
ge* dht = nullptr; // stat
(dej) = (new fw());
((dej)->sm) = (0LL);
((dej)->sf) = (new List_<Array_<char16_t>*>());
(del) = ((brk)());
if((del) == (u'\u005B')){
while(true){
(der) = (avc);
(des) = (avd);
(det) = ((deu)());
if(((((det)->Len()) == (5LL)) && (((det)->At(0LL)) == (u'\u005F'))) && (((det)->At(1LL)) == (u'\u005F'))){
switch((det)->At(2LL)){
case u'\u0061':
if((((det)->At(3LL)) == (u'\u006E')) && (((det)->At(4LL)) == (u'\u0079'))){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (1LL)));
}
break;
case u'\u0066':
if((((det)->At(3LL)) == (u'\u0072')) && (((det)->At(4LL)) == (u'\u0063'))){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (128LL)));
}
break;
case u'\u006B':
if((((det)->At(3LL)) == (u'\u0076')) && (((det)->At(4LL)) == (u'\u0066'))){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (256LL)));
}
break;
case u'\u006D':
if((((det)->At(3LL)) == (u'\u006B')) && (((det)->At(4LL)) == (u'\u0069'))){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (2048LL)));
}
break;
case u'\u0072':
if((((det)->At(3LL)) == (u'\u0061')) && (((det)->At(4LL)) == (u'\u0077'))){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (4096LL)));
}
else if((((det)->At(3LL)) == (u'\u006D')) && (((det)->At(4LL)) == (u'\u0065'))){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (4LL)));
}
else if((((det)->At(3LL)) == (u'\u0063')) && (((det)->At(4LL)) == (u'\u0068'))){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (16LL)));
}
else if(((det)->At(3LL)) == (u'\u0061')){
if(((det)->At(4LL)) == (u'\u0063')){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (64LL)));
}
else if(((det)->At(4LL)) == (u'\u006B')){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (512LL)));
}
else if(((det)->At(4LL)) == (u'\u0076')){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (1024LL)));
}
}
break;
case u'\u0074':
if((((det)->At(3LL)) == (u'\u006D')) && (((det)->At(4LL)) == (u'\u0065'))){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (2LL)));
}
else if((((det)->At(3LL)) == (u'\u0063')) && (((det)->At(4LL)) == (u'\u0068'))){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (8LL)));
}
else if((((det)->At(3LL)) == (u'\u006B')) && (((det)->At(4LL)) == (u'\u0076'))){
((dej)->sm) = (dfc<int64_t>(((dej)->sm), (new Array_<int64_t>(1, (0LL))), (32LL)));
}
break;
}
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((dej)->sf), (new Array_<int64_t>(1, (0LL))), (det));
}
(del) = ((brk)());
if((del) == (u'\u0000')){
break;
}
if((del) == (u'\u005D')){
break;
}
if((del) != (u'\u002C')){
(dgi)((u'\u002C'), (del));
break;
}
}
}
else{
(ave) = (del);
}
(brh)((dej), (256LL), ((dde)()), ((bsb)((true), (false))), (true));
((dej)->sg) = (new List_<gb*>());
((dej)->sh) = (nullptr);
((dej)->si) = (new List_<ge*>());
((dej)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
brj<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (dej));
if(!eqAddr_((deh), (nullptr))){
(dgm)((dej), (deh));
}
(dgn)((u'\u0028'), (true));
if(!eqAddr_((deh), (nullptr))){
(dgq) = (new gb());
(brh)((dgq), (7LL), ((dej)->ne), (nullptr), (false));
((dgq)->nf) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
((dgq)->qk) = (2LL);
((dgq)->ql) = (false);
((dgq)->qg) = (nullptr);
(dgr)((dgq), (false));
(dgt) = (new dgu());
(brh)((dgt), (66565LL), ((dej)->ne), (nullptr), (false));
(dgm)((dgt), (deh));
((dgq)->qf) = (dgt);
uh<List_<gb*>*, gb*>(((dej)->sg), (new Array_<int64_t>(1, (0LL))), (dgq));
}
(dgw) = ((brk)());
if((dgw) != (u'\u0029')){
(ave) = (dgw);
while(true){
uh<List_<gb*>*, gb*>(((dej)->sg), (new Array_<int64_t>(1, (0LL))), ((dhc)((2LL), (nullptr))));
(dgw) = ((brk)());
if((dgw) == (u'\u0000')){
break;
}
if((dgw) == (u'\u0029')){
break;
}
if((dgw) != (u'\u002C')){
(dgi)((u'\u002C'), (dgw));
break;
}
}
}
(dhk) = ((brk)());
if((dhk) == (u'\u003A')){
((dej)->sh) = ((dhn)());
(dhk) = ((brk)());
}
if((dhk) != (u'\u000A')){
(dgi)((u'\u000A'), (dhk));
}
while(true){
(dht) = ((dhu)((dej)));
if(eqAddr_((dht), (nullptr))){
if(avg){
break;
}
else{
continue;
}
}
if(((dht)->lw) == (513LL)){
break;
}
uh<List_<ge*>*, ge*>(((dej)->si), (new Array_<int64_t>(1, (0LL))), (dht));
}
btd<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return dej;
}
// parseVar
static bgi* bsi(int64_t dic /*kind*/, Array_<char16_t>* did /*parentClass*/){
bgi* die = nullptr; // ast
(die) = (new bgi());
(brh)((die), (2LL), ((dde)()), (nullptr), (false));
((die)->bgk) = ((dhc)((dic), (did)));
(dgn)((u'\u000A'), (true));
return die;
}
// parseConst
static bsl* bsk(){
bsl* dif = nullptr; // ast
(dif) = (new bsl());
(brh)((dif), (3LL), ((dde)()), (nullptr), (false));
((dif)->btb) = ((dhc)((4LL), (nullptr)));
(dgn)((u'\u000A'), (true));
return dif;
}
// _dtor
static void dig(bsl* dih){
((dih)->btb) = (nullptr);
((dih)->ne) = (nullptr);
((dih)->nf) = (nullptr);
((dih)->ng) = (nullptr);
((dih)->nh) = (nullptr);
((dih)->ni) = (nullptr);
((dih)->nj) = (nullptr);
((dih)->nk) = (nullptr);
}
// _copy
static bsl* dii(bsl* dij){
bsl* dik = nullptr;
(dik) = (new bsl());
((dik)->btb) = (copy_((dij)->btb));
((dik)->ne) = (copy_((dij)->ne));
((dik)->nf) = (copy_((dij)->nf));
((dik)->ng) = (copy_((dij)->ng));
((dik)->nh) = (copy_((dij)->nh));
((dik)->ni) = (copy_((dij)->ni));
((dik)->nj) = (copy_((dij)->nj));
((dik)->nk) = (copy_((dij)->nk));
((dik)->no) = ((dij)->no);
((dik)->lw) = ((dij)->lw);
return as_<bsl>(classTable_, (dik), 44);
}
// _toBin
static Array_<uint8_t>* dil(bsl* dim){
Array_<uint8_t>* din = nullptr;
(din) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(din) = ((din)->Cat(toBin_((dim)->btb)));
(din) = ((din)->Cat(toBin_((dim)->ne)));
(din) = ((din)->Cat(toBin_((dim)->nf)));
(din) = ((din)->Cat(toBin_((dim)->ng)));
(din) = ((din)->Cat(toBin_((dim)->nh)));
(din) = ((din)->Cat(toBin_((dim)->ni)));
(din) = ((din)->Cat(toBin_((dim)->nj)));
(din) = ((din)->Cat(toBin_((dim)->nk)));
(din) = ((din)->Cat(toBin_((dim)->no)));
(din) = ((din)->Cat(toBin_((dim)->lw)));
return din;
}
// _fromBin
static bsl* diy(bsl* diz, Array_<uint8_t>* dja, int64_t* djb){
bsl* djc = nullptr;
(djc) = (new bsl());
((djc)->btb) = (fromBin_<gb*>((dja), (*djb)));
((djc)->ne) = (fromBin_<ga*>((dja), (*djb)));
((djc)->nf) = (fromBin_<Array_<char16_t>*>((dja), (*djb)));
((djc)->ng) = (fromBin_<fx*>((dja), (*djb)));
((djc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dja), (*djb)));
((djc)->ni) = (fromBin_<Array_<char16_t>*>((dja), (*djb)));
((djc)->nj) = (fromBin_<fx*>((dja), (*djb)));
((djc)->nk) = (fromBin_<fy*>((dja), (*djb)));
((djc)->no) = (fromBin_<bool>((dja), (*djb)));
((djc)->lw) = (fromBin_<int64_t>((dja), (*djb)));
return djc;
}
// parseAlias
static bso* bsn(){
bso* djd = nullptr; // ast
(djd) = (new bso());
(brh)((djd), (4LL), ((dde)()), ((bsb)((true), (false))), (true));
(dgn)((u'\u003A'), (true));
((djd)->dje) = ((dhn)());
(dgn)((u'\u000A'), (true));
return djd;
}
// _dtor
static void djf(bso* djg){
((djg)->dje) = (nullptr);
((djg)->ne) = (nullptr);
((djg)->nf) = (nullptr);
((djg)->ng) = (nullptr);
((djg)->nh) = (nullptr);
((djg)->ni) = (nullptr);
((djg)->nj) = (nullptr);
((djg)->nk) = (nullptr);
}
// _copy
static bso* djh(bso* dji){
bso* djj = nullptr;
(djj) = (new bso());
((djj)->dje) = (copy_((dji)->dje));
((djj)->ne) = (copy_((dji)->ne));
((djj)->nf) = (copy_((dji)->nf));
((djj)->ng) = (copy_((dji)->ng));
((djj)->nh) = (copy_((dji)->nh));
((djj)->ni) = (copy_((dji)->ni));
((djj)->nj) = (copy_((dji)->nj));
((djj)->nk) = (copy_((dji)->nk));
((djj)->no) = ((dji)->no);
((djj)->lw) = ((dji)->lw);
return as_<bso>(classTable_, (djj), 46);
}
// _toBin
static Array_<uint8_t>* djk(bso* djl){
Array_<uint8_t>* djm = nullptr;
(djm) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(djm) = ((djm)->Cat(toBin_((djl)->dje)));
(djm) = ((djm)->Cat(toBin_((djl)->ne)));
(djm) = ((djm)->Cat(toBin_((djl)->nf)));
(djm) = ((djm)->Cat(toBin_((djl)->ng)));
(djm) = ((djm)->Cat(toBin_((djl)->nh)));
(djm) = ((djm)->Cat(toBin_((djl)->ni)));
(djm) = ((djm)->Cat(toBin_((djl)->nj)));
(djm) = ((djm)->Cat(toBin_((djl)->nk)));
(djm) = ((djm)->Cat(toBin_((djl)->no)));
(djm) = ((djm)->Cat(toBin_((djl)->lw)));
return djm;
}
// _fromBin
static bso* djx(bso* djy, Array_<uint8_t>* djz, int64_t* dka){
bso* dkb = nullptr;
(dkb) = (new bso());
((dkb)->dje) = (fromBin_<gc*>((djz), (*dka)));
((dkb)->ne) = (fromBin_<ga*>((djz), (*dka)));
((dkb)->nf) = (fromBin_<Array_<char16_t>*>((djz), (*dka)));
((dkb)->ng) = (fromBin_<fx*>((djz), (*dka)));
((dkb)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((djz), (*dka)));
((dkb)->ni) = (fromBin_<Array_<char16_t>*>((djz), (*dka)));
((dkb)->nj) = (fromBin_<fx*>((djz), (*dka)));
((dkb)->nk) = (fromBin_<fy*>((djz), (*dka)));
((dkb)->no) = (fromBin_<bool>((djz), (*dka)));
((dkb)->lw) = (fromBin_<int64_t>((djz), (*dka)));
return dkb;
}
// parseClass
static ul* bsr(){
ul* dkc = nullptr; // ast
char16_t dke = 0; // c
bool dki = false; // kuinSrc
char16_t dko = 0; // c
int64_t dkt = 0; // row
int64_t dku = 0; // col
um* dkv = nullptr; // item
Array_<char16_t>* dlc = nullptr; // id
Array_<char16_t>* dld = nullptr; // className
Array_<char16_t>* dlp = nullptr;
Array_<char16_t>* dlr = nullptr; // id2
fx* dlu = nullptr; // astEndClass
(dkc) = (new ul());
(brh)((dkc), (5LL), ((dde)()), ((bsb)((true), (false))), (true));
((dkc)->bag) = (new List_<um*>());
(dgn)((u'\u0028'), (true));
(dke) = ((brk)());
if((dke) != (u'\u0029')){
(ave) = (dke);
(dgm)((dkc), ((bsb)((true), (true))));
(dgn)((u'\u0029'), (true));
}
else{
(dki) = (cmp_((bf), (new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E'))) == 0);
if(!((dki) && (cmp_(((dkc)->nf), (new Array_<char16_t>(5, u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0))){
(dgm)((dkc), ((dki) ? (new Array_<char16_t>(6, u'\u0040', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073')) : (new Array_<char16_t>(10, u'\u006B', u'\u0075', u'\u0069', u'\u006E', u'\u0040', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))));
}
}
(dgn)((u'\u000A'), (true));
((dkc)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
brj<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (dkc));
while(true){
(dko) = ((brk)());
if((dko) == (u'\u0000')){
(ad)((65551LL), ((dde)()), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073')))));
break;
}
if((dko) == (u'\u000A')){
continue;
}
(dkt) = (avc);
(dku) = (avd);
(dkv) = (new um());
((dkv)->azq) = (false);
((dkv)->azr) = (false);
((dkv)->azm) = (nullptr);
if((dko) == (u'\u002B')){
((dkv)->azq) = (true);
}
else{
(ave) = (dko);
}
(dko) = ((brk)());
if((dko) == (u'\u002A')){
((dkv)->azr) = (true);
}
else{
(ave) = (dko);
}
(dlc) = ((bsb)((true), (false)));
(dld) = (((((dkc)->ng)->lw) == (1LL)) ? ((new Array_<char16_t>(1, u'\u0040'))->Cat((dkc)->nf)) : ((dkc)->nf));
if(cmp_((dlc), (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
((dkv)->azl) = ((bsg)((dld), ((dkv)->azr)));
}
else if(cmp_((dlc), (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0){
if((dkv)->azr){
(ad)((65552LL), ((bri)((bf), (dkt), (dku))), (new Array_<Array_<char16_t>*>(1, (dlc))));
}
((dkv)->azl) = ((bsi)((5LL), (dld)));
}
else{
if((dkv)->azq){
(ad)((65553LL), ((bri)((bf), (dkt), (dku))), (new Array_<Array_<char16_t>*>(1, (dlc))));
}
if((dkv)->azr){
(ad)((65552LL), ((bri)((bf), (dkt), (dku))), (new Array_<Array_<char16_t>*>(1, (dlc))));
}
dlp = dlc;
if(cmp_(dlp, (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064'))) == 0){
(dlr) = ((bsb)((true), (false)));
if(cmp_((dlr), (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) != 0){
(ad)((65554LL), ((bri)((bf), (dkt), (dku))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073')), (dlr))));
}
(dlu) = (new fx());
(brh)((dlu), (0LL), ((bri)((bf), (dkt), (dku))), (nullptr), (false));
(dgn)((u'\u000A'), (true));
break;
}
else if(cmp_(dlp, (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074'))) == 0){
((dkv)->azl) = ((bsk)());
}
else if(cmp_(dlp, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073'))) == 0){
((dkv)->azl) = ((bsn)());
}
else if(cmp_(dlp, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0){
((dkv)->azl) = ((bsr)());
}
else{(ad)((65555LL), ((bri)((bf), (dkt), (dku))), (new Array_<Array_<char16_t>*>(1, (dlc))));
(bsw)(((bsx)()));
continue;
}
}
uh<List_<um*>*, um*>(((dkc)->bag), (new Array_<int64_t>(1, (0LL))), (dkv));
}
btd<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return dkc;
}
// parseEnum
static bsu* bst(){
bsu* dlz = nullptr; // ast
char16_t dme = 0; // c
Array_<char16_t>* dmj = nullptr; // id
Array_<char16_t>* dmm = nullptr; // id2
gd* dmr = nullptr; // item
bxl* dmw = nullptr; // expr
(dlz) = (new bsu());
(brh)((dlz), (6LL), ((dde)()), ((bsb)((true), (false))), (true));
((dlz)->dma) = (new List_<gd*>());
(dgn)((u'\u000A'), (true));
((dlz)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
brj<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (dlz));
while(true){
(dme) = ((brk)());
if((dme) == (u'\u0000')){
(ad)((65551LL), ((dde)()), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D')))));
break;
}
if((dme) == (u'\u000A')){
continue;
}
(ave) = (dme);
(dmj) = ((bsb)((true), (false)));
if(cmp_((dmj), (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064'))) == 0){
(dmm) = ((bsb)((true), (false)));
if(cmp_((dmm), (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) != 0){
(ad)((65554LL), ((dde)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D')), (dmm))));
}
(dgn)((u'\u000A'), (true));
break;
}
(dme) = ((brk)());
if((dme) == (u'\u003A')){
(dgn)((u'\u003A'), (false));
(dmr) = ((dms)());
if(eqAddr_((dmr), (nullptr))){
(bsw)(((bsx)()));
continue;
}
(dme) = ((brk)());
}
else{
(dmw) = (new bxl());
(dmx)((dmw), (67585LL), ((dlz)->ne));
((dmw)->pf) = (nullptr);
((dmw)->bxn) = (0x0000000000000000ULL);
(dmr) = (dmw);
}
((dmr)->nf) = (dmj);
if((dme) != (u'\u000A')){
(dgi)((u'\u000A'), (dme));
}
uh<List_<gd*>*, gd*>(((dlz)->dma), (new Array_<int64_t>(1, (0LL))), (dmr));
(dgr)((dmr), (true));
}
btd<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return dlz;
}
// _dtor
static void dna(bsu* dnb){
((dnb)->dma) = (nullptr);
((dnb)->ne) = (nullptr);
((dnb)->nf) = (nullptr);
((dnb)->ng) = (nullptr);
((dnb)->nh) = (nullptr);
((dnb)->ni) = (nullptr);
((dnb)->nj) = (nullptr);
((dnb)->nk) = (nullptr);
}
// _copy
static bsu* dnc(bsu* dnd){
bsu* dne = nullptr;
(dne) = (new bsu());
((dne)->dma) = (copy_((dnd)->dma));
((dne)->ne) = (copy_((dnd)->ne));
((dne)->nf) = (copy_((dnd)->nf));
((dne)->ng) = (copy_((dnd)->ng));
((dne)->nh) = (copy_((dnd)->nh));
((dne)->ni) = (copy_((dnd)->ni));
((dne)->nj) = (copy_((dnd)->nj));
((dne)->nk) = (copy_((dnd)->nk));
((dne)->no) = ((dnd)->no);
((dne)->lw) = ((dnd)->lw);
return as_<bsu>(classTable_, (dne), 48);
}
// _toBin
static Array_<uint8_t>* dnf(bsu* dng){
Array_<uint8_t>* dnh = nullptr;
(dnh) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dnh) = ((dnh)->Cat(toBin_((dng)->dma)));
(dnh) = ((dnh)->Cat(toBin_((dng)->ne)));
(dnh) = ((dnh)->Cat(toBin_((dng)->nf)));
(dnh) = ((dnh)->Cat(toBin_((dng)->ng)));
(dnh) = ((dnh)->Cat(toBin_((dng)->nh)));
(dnh) = ((dnh)->Cat(toBin_((dng)->ni)));
(dnh) = ((dnh)->Cat(toBin_((dng)->nj)));
(dnh) = ((dnh)->Cat(toBin_((dng)->nk)));
(dnh) = ((dnh)->Cat(toBin_((dng)->no)));
(dnh) = ((dnh)->Cat(toBin_((dng)->lw)));
return dnh;
}
// _fromBin
static bsu* dns(bsu* dnt, Array_<uint8_t>* dnu, int64_t* dnv){
bsu* dnw = nullptr;
(dnw) = (new bsu());
((dnw)->dma) = (fromBin_<List_<gd*>*>((dnu), (*dnv)));
((dnw)->ne) = (fromBin_<ga*>((dnu), (*dnv)));
((dnw)->nf) = (fromBin_<Array_<char16_t>*>((dnu), (*dnv)));
((dnw)->ng) = (fromBin_<fx*>((dnu), (*dnv)));
((dnw)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dnu), (*dnv)));
((dnw)->ni) = (fromBin_<Array_<char16_t>*>((dnu), (*dnv)));
((dnw)->nj) = (fromBin_<fx*>((dnu), (*dnv)));
((dnw)->nk) = (fromBin_<fy*>((dnu), (*dnv)));
((dnw)->no) = (fromBin_<bool>((dnu), (*dnv)));
((dnw)->lw) = (fromBin_<int64_t>((dnu), (*dnv)));
return dnw;
}
// readUntilRet
static void bsw(char16_t dnx /*c*/){
while(((dnx) != (u'\u000A')) && ((dnx) != (u'\u0000'))){
(dnx) = ((bsx)());
}
(ave) = (dnx);
}
// read
static char16_t bsx(){
char16_t dnz = 0; // c
char16_t dob = 0;
(dnz) = ((dct)());
switch(dnz){
case u'\u007B':
(dod)();
return u'\u0020';
break;
case u'\u0009':
return u'\u0020';
break;
}
return dnz;
}
// _getStack
template<typename T_, typename R_> static R_ btd(T_ dof /*me_*/, Array_<int64_t>* dog /*type*/){
R_ r_ = dof->B.top();
dof->B.pop();
return r_;
}
// initAst
static void bvn(fx* doh /*ast*/, int64_t doi /*typeId*/, ga* doj /*pos*/){
if(!(!is_(classTable_, (doh), 14))){
throw 0xE9170000U;
}
(dok)((doh), (doi), (doj));
}
// _dtor
static void dol(bvr* dom){
((dom)->bwb) = (nullptr);
((dom)->ne) = (nullptr);
((dom)->nf) = (nullptr);
((dom)->ng) = (nullptr);
((dom)->nh) = (nullptr);
((dom)->ni) = (nullptr);
((dom)->nj) = (nullptr);
((dom)->nk) = (nullptr);
}
// _copy
static bvr* don(bvr* doo){
bvr* dop = nullptr;
(dop) = (new bvr());
((dop)->bwb) = (copy_((doo)->bwb));
((dop)->ne) = (copy_((doo)->ne));
((dop)->nf) = (copy_((doo)->nf));
((dop)->ng) = (copy_((doo)->ng));
((dop)->nh) = (copy_((doo)->nh));
((dop)->ni) = (copy_((doo)->ni));
((dop)->nj) = (copy_((doo)->nj));
((dop)->nk) = (copy_((doo)->nk));
((dop)->no) = ((doo)->no);
((dop)->lw) = ((doo)->lw);
return as_<bvr>(classTable_, (dop), 50);
}
// _toBin
static Array_<uint8_t>* doq(bvr* dor){
Array_<uint8_t>* dos = nullptr;
(dos) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dos) = ((dos)->Cat(toBin_((dor)->bwb)));
(dos) = ((dos)->Cat(toBin_((dor)->ne)));
(dos) = ((dos)->Cat(toBin_((dor)->nf)));
(dos) = ((dos)->Cat(toBin_((dor)->ng)));
(dos) = ((dos)->Cat(toBin_((dor)->nh)));
(dos) = ((dos)->Cat(toBin_((dor)->ni)));
(dos) = ((dos)->Cat(toBin_((dor)->nj)));
(dos) = ((dos)->Cat(toBin_((dor)->nk)));
(dos) = ((dos)->Cat(toBin_((dor)->no)));
(dos) = ((dos)->Cat(toBin_((dor)->lw)));
return dos;
}
// _fromBin
static bvr* dpd(bvr* dpe, Array_<uint8_t>* dpf, int64_t* dpg){
bvr* dph = nullptr;
(dph) = (new bvr());
((dph)->bwb) = (fromBin_<gb*>((dpf), (*dpg)));
((dph)->ne) = (fromBin_<ga*>((dpf), (*dpg)));
((dph)->nf) = (fromBin_<Array_<char16_t>*>((dpf), (*dpg)));
((dph)->ng) = (fromBin_<fx*>((dpf), (*dpg)));
((dph)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dpf), (*dpg)));
((dph)->ni) = (fromBin_<Array_<char16_t>*>((dpf), (*dpg)));
((dph)->nj) = (fromBin_<fx*>((dpf), (*dpg)));
((dph)->nk) = (fromBin_<fy*>((dpf), (*dpg)));
((dph)->no) = (fromBin_<bool>((dpf), (*dpg)));
((dph)->lw) = (fromBin_<int64_t>((dpf), (*dpg)));
return dph;
}
// _dtor
static void dpi(bvs* dpj){
((dpj)->bwe) = (nullptr);
((dpj)->bwb) = (nullptr);
((dpj)->ne) = (nullptr);
((dpj)->nf) = (nullptr);
((dpj)->ng) = (nullptr);
((dpj)->nh) = (nullptr);
((dpj)->ni) = (nullptr);
((dpj)->nj) = (nullptr);
((dpj)->nk) = (nullptr);
}
// _copy
static bvs* dpk(bvs* dpl){
bvs* dpm = nullptr;
(dpm) = (new bvs());
((dpm)->bwe) = (copy_((dpl)->bwe));
((dpm)->bwb) = (copy_((dpl)->bwb));
((dpm)->ne) = (copy_((dpl)->ne));
((dpm)->nf) = (copy_((dpl)->nf));
((dpm)->ng) = (copy_((dpl)->ng));
((dpm)->nh) = (copy_((dpl)->nh));
((dpm)->ni) = (copy_((dpl)->ni));
((dpm)->nj) = (copy_((dpl)->nj));
((dpm)->nk) = (copy_((dpl)->nk));
((dpm)->no) = ((dpl)->no);
((dpm)->lw) = ((dpl)->lw);
return as_<bvs>(classTable_, (dpm), 54);
}
// _toBin
static Array_<uint8_t>* dpn(bvs* dpo){
Array_<uint8_t>* dpp = nullptr;
(dpp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dpp) = ((dpp)->Cat(toBin_((dpo)->bwe)));
(dpp) = ((dpp)->Cat(toBin_((dpo)->bwb)));
(dpp) = ((dpp)->Cat(toBin_((dpo)->ne)));
(dpp) = ((dpp)->Cat(toBin_((dpo)->nf)));
(dpp) = ((dpp)->Cat(toBin_((dpo)->ng)));
(dpp) = ((dpp)->Cat(toBin_((dpo)->nh)));
(dpp) = ((dpp)->Cat(toBin_((dpo)->ni)));
(dpp) = ((dpp)->Cat(toBin_((dpo)->nj)));
(dpp) = ((dpp)->Cat(toBin_((dpo)->nk)));
(dpp) = ((dpp)->Cat(toBin_((dpo)->no)));
(dpp) = ((dpp)->Cat(toBin_((dpo)->lw)));
return dpp;
}
// _fromBin
static bvs* dqb(bvs* dqc, Array_<uint8_t>* dqd, int64_t* dqe){
bvs* dqf = nullptr;
(dqf) = (new bvs());
((dqf)->bwe) = (fromBin_<List_<ge*>*>((dqd), (*dqe)));
((dqf)->bwb) = (fromBin_<gb*>((dqd), (*dqe)));
((dqf)->ne) = (fromBin_<ga*>((dqd), (*dqe)));
((dqf)->nf) = (fromBin_<Array_<char16_t>*>((dqd), (*dqe)));
((dqf)->ng) = (fromBin_<fx*>((dqd), (*dqe)));
((dqf)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dqd), (*dqe)));
((dqf)->ni) = (fromBin_<Array_<char16_t>*>((dqd), (*dqe)));
((dqf)->nj) = (fromBin_<fx*>((dqd), (*dqe)));
((dqf)->nk) = (fromBin_<fy*>((dqd), (*dqe)));
((dqf)->no) = (fromBin_<bool>((dqd), (*dqe)));
((dqf)->lw) = (fromBin_<int64_t>((dqd), (*dqe)));
return dqf;
}
// _dtor
static void dqg(bvu* dqh){
((dqh)->bxq) = (nullptr);
((dqh)->bxv) = (nullptr);
}
// _copy
static bvu* dqi(bvu* dqj){
bvu* dqk = nullptr;
(dqk) = (new bvu());
((dqk)->bxq) = (copy_((dqj)->bxq));
((dqk)->bxv) = (copy_((dqj)->bxv));
return as_<bvu>(classTable_, (dqk), 58);
}
// _toBin
static Array_<uint8_t>* dql(bvu* dqm){
Array_<uint8_t>* dqn = nullptr;
(dqn) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dqn) = ((dqn)->Cat(toBin_((dqm)->bxq)));
(dqn) = ((dqn)->Cat(toBin_((dqm)->bxv)));
return dqn;
}
// _fromBin
static bvu* dqq(bvu* dqr, Array_<uint8_t>* dqs, int64_t* dqt){
bvu* dqu = nullptr;
(dqu) = (new bvu());
((dqu)->bxq) = (fromBin_<gd*>((dqs), (*dqt)));
((dqu)->bxv) = (fromBin_<gd*>((dqs), (*dqt)));
return dqu;
}
// _dtor
static void dqv(bvt* dqw){
((dqw)->bxd) = (nullptr);
((dqw)->bxg) = (nullptr);
((dqw)->ne) = (nullptr);
((dqw)->nf) = (nullptr);
((dqw)->ng) = (nullptr);
((dqw)->nh) = (nullptr);
((dqw)->ni) = (nullptr);
((dqw)->nj) = (nullptr);
((dqw)->nk) = (nullptr);
}
// _copy
static bvt* dqx(bvt* dqy){
bvt* dqz = nullptr;
(dqz) = (new bvt());
((dqz)->bxd) = (copy_((dqy)->bxd));
((dqz)->bxg) = (copy_((dqy)->bxg));
((dqz)->ne) = (copy_((dqy)->ne));
((dqz)->nf) = (copy_((dqy)->nf));
((dqz)->ng) = (copy_((dqy)->ng));
((dqz)->nh) = (copy_((dqy)->nh));
((dqz)->ni) = (copy_((dqy)->ni));
((dqz)->nj) = (copy_((dqy)->nj));
((dqz)->nk) = (copy_((dqy)->nk));
((dqz)->no) = ((dqy)->no);
((dqz)->lw) = ((dqy)->lw);
return as_<bvt>(classTable_, (dqz), 56);
}
// _toBin
static Array_<uint8_t>* dra(bvt* drb){
Array_<uint8_t>* drc = nullptr;
(drc) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(drc) = ((drc)->Cat(toBin_((drb)->bxd)));
(drc) = ((drc)->Cat(toBin_((drb)->bxg)));
(drc) = ((drc)->Cat(toBin_((drb)->ne)));
(drc) = ((drc)->Cat(toBin_((drb)->nf)));
(drc) = ((drc)->Cat(toBin_((drb)->ng)));
(drc) = ((drc)->Cat(toBin_((drb)->nh)));
(drc) = ((drc)->Cat(toBin_((drb)->ni)));
(drc) = ((drc)->Cat(toBin_((drb)->nj)));
(drc) = ((drc)->Cat(toBin_((drb)->nk)));
(drc) = ((drc)->Cat(toBin_((drb)->no)));
(drc) = ((drc)->Cat(toBin_((drb)->lw)));
return drc;
}
// _fromBin
static bvt* dro(bvt* drp, Array_<uint8_t>* drq, int64_t* drr){
bvt* drs = nullptr;
(drs) = (new bvt());
((drs)->bxd) = (fromBin_<List_<bvu*>*>((drq), (*drr)));
((drs)->bxg) = (fromBin_<bvs*>((drq), (*drr)));
((drs)->ne) = (fromBin_<ga*>((drq), (*drr)));
((drs)->nf) = (fromBin_<Array_<char16_t>*>((drq), (*drr)));
((drs)->ng) = (fromBin_<fx*>((drq), (*drr)));
((drs)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((drq), (*drr)));
((drs)->ni) = (fromBin_<Array_<char16_t>*>((drq), (*drr)));
((drs)->nj) = (fromBin_<fx*>((drq), (*drr)));
((drs)->nk) = (fromBin_<fy*>((drq), (*drr)));
((drs)->no) = (fromBin_<bool>((drq), (*drr)));
((drs)->lw) = (fromBin_<int64_t>((drq), (*drr)));
return drs;
}
// _dtor
static void drt(bvq* dru){
((dru)->bwf) = (nullptr);
((dru)->bwg) = (nullptr);
((dru)->bwj) = (nullptr);
((dru)->bwb) = (nullptr);
((dru)->ne) = (nullptr);
((dru)->nf) = (nullptr);
((dru)->ng) = (nullptr);
((dru)->nh) = (nullptr);
((dru)->ni) = (nullptr);
((dru)->nj) = (nullptr);
((dru)->nk) = (nullptr);
}
// _copy
static bvq* drv(bvq* drw){
bvq* drx = nullptr;
(drx) = (new bvq());
((drx)->bwf) = (copy_((drw)->bwf));
((drx)->bwg) = (copy_((drw)->bwg));
((drx)->bwj) = (copy_((drw)->bwj));
((drx)->bwb) = (copy_((drw)->bwb));
((drx)->ne) = (copy_((drw)->ne));
((drx)->nf) = (copy_((drw)->nf));
((drx)->ng) = (copy_((drw)->ng));
((drx)->nh) = (copy_((drw)->nh));
((drx)->ni) = (copy_((drw)->ni));
((drx)->nj) = (copy_((drw)->nj));
((drx)->nk) = (copy_((drw)->nk));
((drx)->no) = ((drw)->no);
((drx)->lw) = ((drw)->lw);
return as_<bvq>(classTable_, (drx), 52);
}
// _toBin
static Array_<uint8_t>* dry(bvq* drz){
Array_<uint8_t>* dsa = nullptr;
(dsa) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dsa) = ((dsa)->Cat(toBin_((drz)->bwf)));
(dsa) = ((dsa)->Cat(toBin_((drz)->bwg)));
(dsa) = ((dsa)->Cat(toBin_((drz)->bwj)));
(dsa) = ((dsa)->Cat(toBin_((drz)->bwb)));
(dsa) = ((dsa)->Cat(toBin_((drz)->ne)));
(dsa) = ((dsa)->Cat(toBin_((drz)->nf)));
(dsa) = ((dsa)->Cat(toBin_((drz)->ng)));
(dsa) = ((dsa)->Cat(toBin_((drz)->nh)));
(dsa) = ((dsa)->Cat(toBin_((drz)->ni)));
(dsa) = ((dsa)->Cat(toBin_((drz)->nj)));
(dsa) = ((dsa)->Cat(toBin_((drz)->nk)));
(dsa) = ((dsa)->Cat(toBin_((drz)->no)));
(dsa) = ((dsa)->Cat(toBin_((drz)->lw)));
return dsa;
}
// _fromBin
static bvq* dso(bvq* dsp, Array_<uint8_t>* dsq, int64_t* dsr){
bvq* dss = nullptr;
(dss) = (new bvq());
((dss)->bwf) = (fromBin_<bvs*>((dsq), (*dsr)));
((dss)->bwg) = (fromBin_<List_<bvt*>*>((dsq), (*dsr)));
((dss)->bwj) = (fromBin_<bvs*>((dsq), (*dsr)));
((dss)->bwb) = (fromBin_<gb*>((dsq), (*dsr)));
((dss)->ne) = (fromBin_<ga*>((dsq), (*dsr)));
((dss)->nf) = (fromBin_<Array_<char16_t>*>((dsq), (*dsr)));
((dss)->ng) = (fromBin_<fx*>((dsq), (*dsr)));
((dss)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dsq), (*dsr)));
((dss)->ni) = (fromBin_<Array_<char16_t>*>((dsq), (*dsr)));
((dss)->nj) = (fromBin_<fx*>((dsq), (*dsr)));
((dss)->nk) = (fromBin_<fy*>((dsq), (*dsr)));
((dss)->no) = (fromBin_<bool>((dsq), (*dsr)));
((dss)->lw) = (fromBin_<int64_t>((dsq), (*dsr)));
return dss;
}
// _dtor
static void dst(bvz* dsu){
((dsu)->ne) = (nullptr);
((dsu)->nf) = (nullptr);
((dsu)->ng) = (nullptr);
((dsu)->nh) = (nullptr);
((dsu)->ni) = (nullptr);
((dsu)->nj) = (nullptr);
((dsu)->nk) = (nullptr);
}
// _copy
static bvz* dsv(bvz* dsw){
bvz* dsx = nullptr;
(dsx) = (new bvz());
((dsx)->bwa) = ((dsw)->bwa);
((dsx)->ne) = (copy_((dsw)->ne));
((dsx)->nf) = (copy_((dsw)->nf));
((dsx)->ng) = (copy_((dsw)->ng));
((dsx)->nh) = (copy_((dsw)->nh));
((dsx)->ni) = (copy_((dsw)->ni));
((dsx)->nj) = (copy_((dsw)->nj));
((dsx)->nk) = (copy_((dsw)->nk));
((dsx)->no) = ((dsw)->no);
((dsx)->lw) = ((dsw)->lw);
return as_<bvz>(classTable_, (dsx), 60);
}
// _toBin
static Array_<uint8_t>* dsy(bvz* dsz){
Array_<uint8_t>* dta = nullptr;
(dta) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dta) = ((dta)->Cat(toBin_((dsz)->bwa)));
(dta) = ((dta)->Cat(toBin_((dsz)->ne)));
(dta) = ((dta)->Cat(toBin_((dsz)->nf)));
(dta) = ((dta)->Cat(toBin_((dsz)->ng)));
(dta) = ((dta)->Cat(toBin_((dsz)->nh)));
(dta) = ((dta)->Cat(toBin_((dsz)->ni)));
(dta) = ((dta)->Cat(toBin_((dsz)->nj)));
(dta) = ((dta)->Cat(toBin_((dsz)->nk)));
(dta) = ((dta)->Cat(toBin_((dsz)->no)));
(dta) = ((dta)->Cat(toBin_((dsz)->lw)));
return dta;
}
// _fromBin
static bvz* dtl(bvz* dtm, Array_<uint8_t>* dtn, int64_t* dto){
bvz* dtp = nullptr;
(dtp) = (new bvz());
((dtp)->bwa) = (fromBin_<int64_t>((dtn), (*dto)));
((dtp)->ne) = (fromBin_<ga*>((dtn), (*dto)));
((dtp)->nf) = (fromBin_<Array_<char16_t>*>((dtn), (*dto)));
((dtp)->ng) = (fromBin_<fx*>((dtn), (*dto)));
((dtp)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dtn), (*dto)));
((dtp)->ni) = (fromBin_<Array_<char16_t>*>((dtn), (*dto)));
((dtp)->nj) = (fromBin_<fx*>((dtn), (*dto)));
((dtp)->nk) = (fromBin_<fy*>((dtn), (*dto)));
((dtp)->no) = (fromBin_<bool>((dtn), (*dto)));
((dtp)->lw) = (fromBin_<int64_t>((dtn), (*dto)));
return dtp;
}
// searchStdItem
static fx* bwm(Array_<char16_t>* dtq /*src*/, Array_<char16_t>* dtr /*identifier*/, bool dts /*makeExprRef*/){
fx* dtt = nullptr; // ast
bool dtu = false;
fx* dtx = nullptr; // ast2
bool dty = false;
gd* dud = nullptr; // expr
(dtt) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), (dtq), (&dtu)));
if(eqAddr_((dtt), (nullptr))){
(ad)((6LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (dtq))));
return nullptr;
}
(dtx) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((dtt)->nh), (new Array_<int64_t>(1, (0LL))), (dtr), (&dty)));
if(eqAddr_((dtt), (nullptr))){
(ad)((7LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (dtq))));
return nullptr;
}
if(dts){
(dud) = (new gd());
(bwv)((dud), (2062LL), ((bri)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (1LL), (1LL))));
((dud)->nj) = (dtx);
return (due)((dud));
}
return dtx;
}
// _dtor
static void duf(bwq* dug){
((dug)->bxa) = (nullptr);
((dug)->ne) = (nullptr);
((dug)->nf) = (nullptr);
((dug)->ng) = (nullptr);
((dug)->nh) = (nullptr);
((dug)->ni) = (nullptr);
((dug)->nj) = (nullptr);
((dug)->nk) = (nullptr);
}
// _copy
static bwq* duh(bwq* dui){
bwq* duj = nullptr;
(duj) = (new bwq());
((duj)->bxa) = (copy_((dui)->bxa));
((duj)->ne) = (copy_((dui)->ne));
((duj)->nf) = (copy_((dui)->nf));
((duj)->ng) = (copy_((dui)->ng));
((duj)->nh) = (copy_((dui)->nh));
((duj)->ni) = (copy_((dui)->ni));
((duj)->nj) = (copy_((dui)->nj));
((duj)->nk) = (copy_((dui)->nk));
((duj)->no) = ((dui)->no);
((duj)->lw) = ((dui)->lw);
return as_<bwq>(classTable_, (duj), 62);
}
// _toBin
static Array_<uint8_t>* duk(bwq* dul){
Array_<uint8_t>* dum = nullptr;
(dum) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dum) = ((dum)->Cat(toBin_((dul)->bxa)));
(dum) = ((dum)->Cat(toBin_((dul)->ne)));
(dum) = ((dum)->Cat(toBin_((dul)->nf)));
(dum) = ((dum)->Cat(toBin_((dul)->ng)));
(dum) = ((dum)->Cat(toBin_((dul)->nh)));
(dum) = ((dum)->Cat(toBin_((dul)->ni)));
(dum) = ((dum)->Cat(toBin_((dul)->nj)));
(dum) = ((dum)->Cat(toBin_((dul)->nk)));
(dum) = ((dum)->Cat(toBin_((dul)->no)));
(dum) = ((dum)->Cat(toBin_((dul)->lw)));
return dum;
}
// _fromBin
static bwq* dux(bwq* duy, Array_<uint8_t>* duz, int64_t* dva){
bwq* dvb = nullptr;
(dvb) = (new bwq());
((dvb)->bxa) = (fromBin_<gd*>((duz), (*dva)));
((dvb)->ne) = (fromBin_<ga*>((duz), (*dva)));
((dvb)->nf) = (fromBin_<Array_<char16_t>*>((duz), (*dva)));
((dvb)->ng) = (fromBin_<fx*>((duz), (*dva)));
((dvb)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((duz), (*dva)));
((dvb)->ni) = (fromBin_<Array_<char16_t>*>((duz), (*dva)));
((dvb)->nj) = (fromBin_<fx*>((duz), (*dva)));
((dvb)->nk) = (fromBin_<fy*>((duz), (*dva)));
((dvb)->no) = (fromBin_<bool>((duz), (*dva)));
((dvb)->lw) = (fromBin_<int64_t>((duz), (*dva)));
return dvb;
}
// _dtor
static void dvc(bwu* dvd){
((dvd)->byi) = (nullptr);
}
// _copy
static bwu* dve(bwu* dvf){
bwu* dvg = nullptr;
(dvg) = (new bwu());
((dvg)->byi) = (copy_((dvf)->byi));
((dvg)->bye) = ((dvf)->bye);
((dvg)->byf) = ((dvf)->byf);
return as_<bwu>(classTable_, (dvg), 66);
}
// _toBin
static Array_<uint8_t>* dvh(bwu* dvi){
Array_<uint8_t>* dvj = nullptr;
(dvj) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dvj) = ((dvj)->Cat(toBin_((dvi)->byi)));
(dvj) = ((dvj)->Cat(toBin_((dvi)->bye)));
(dvj) = ((dvj)->Cat(toBin_((dvi)->byf)));
return dvj;
}
// _fromBin
static bwu* dvn(bwu* dvo, Array_<uint8_t>* dvp, int64_t* dvq){
bwu* dvr = nullptr;
(dvr) = (new bwu());
((dvr)->byi) = (fromBin_<gd*>((dvp), (*dvq)));
((dvr)->bye) = (fromBin_<bool>((dvp), (*dvq)));
((dvr)->byf) = (fromBin_<bool>((dvp), (*dvq)));
return dvr;
}
// _dtor
static void dvs(bwt* dvt){
((dvt)->bwz) = (nullptr);
((dvt)->bww) = (nullptr);
((dvt)->pf) = (nullptr);
((dvt)->ne) = (nullptr);
((dvt)->nf) = (nullptr);
((dvt)->ng) = (nullptr);
((dvt)->nh) = (nullptr);
((dvt)->ni) = (nullptr);
((dvt)->nj) = (nullptr);
((dvt)->nk) = (nullptr);
}
// _copy
static bwt* dvu(bwt* dvv){
bwt* dvw = nullptr;
(dvw) = (new bwt());
((dvw)->bwz) = (copy_((dvv)->bwz));
((dvw)->bww) = (copy_((dvv)->bww));
((dvw)->pf) = (copy_((dvv)->pf));
((dvw)->pj) = ((dvv)->pj);
((dvw)->ne) = (copy_((dvv)->ne));
((dvw)->nf) = (copy_((dvv)->nf));
((dvw)->ng) = (copy_((dvv)->ng));
((dvw)->nh) = (copy_((dvv)->nh));
((dvw)->ni) = (copy_((dvv)->ni));
((dvw)->nj) = (copy_((dvv)->nj));
((dvw)->nk) = (copy_((dvv)->nk));
((dvw)->no) = ((dvv)->no);
((dvw)->lw) = ((dvv)->lw);
return as_<bwt>(classTable_, (dvw), 64);
}
// _toBin
static Array_<uint8_t>* dvx(bwt* dvy){
Array_<uint8_t>* dvz = nullptr;
(dvz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->bwz)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->bww)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->pf)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->pj)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->ne)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->nf)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->ng)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->nh)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->ni)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->nj)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->nk)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->no)));
(dvz) = ((dvz)->Cat(toBin_((dvy)->lw)));
return dvz;
}
// _fromBin
static bwt* dwn(bwt* dwo, Array_<uint8_t>* dwp, int64_t* dwq){
bwt* dwr = nullptr;
(dwr) = (new bwt());
((dwr)->bwz) = (fromBin_<gd*>((dwp), (*dwq)));
((dwr)->bww) = (fromBin_<List_<bwu*>*>((dwp), (*dwq)));
((dwr)->pf) = (fromBin_<gc*>((dwp), (*dwq)));
((dwr)->pj) = (fromBin_<int64_t>((dwp), (*dwq)));
((dwr)->ne) = (fromBin_<ga*>((dwp), (*dwq)));
((dwr)->nf) = (fromBin_<Array_<char16_t>*>((dwp), (*dwq)));
((dwr)->ng) = (fromBin_<fx*>((dwp), (*dwq)));
((dwr)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dwp), (*dwq)));
((dwr)->ni) = (fromBin_<Array_<char16_t>*>((dwp), (*dwq)));
((dwr)->nj) = (fromBin_<fx*>((dwp), (*dwq)));
((dwr)->nk) = (fromBin_<fy*>((dwp), (*dwq)));
((dwr)->no) = (fromBin_<bool>((dwp), (*dwq)));
((dwr)->lw) = (fromBin_<int64_t>((dwp), (*dwq)));
return dwr;
}
// initAstExpr
static void bwv(gd* dws /*ast*/, int64_t dwt /*typeId*/, ga* dwu /*pos*/){
if(!(is_(classTable_, (dws), 14))){
throw 0xE9170000U;
}
(dok)((dws), (dwt), (dwu));
((dws)->pf) = (nullptr);
((dws)->pj) = (0LL);
}
// _dtor
static void dwv(bxm* dww){
((dww)->pf) = (nullptr);
((dww)->ne) = (nullptr);
((dww)->nf) = (nullptr);
((dww)->ng) = (nullptr);
((dww)->nh) = (nullptr);
((dww)->ni) = (nullptr);
((dww)->nj) = (nullptr);
((dww)->nk) = (nullptr);
}
// _copy
static bxm* dwx(bxm* dwy){
bxm* dwz = nullptr;
(dwz) = (new bxm());
((dwz)->pf) = (copy_((dwy)->pf));
((dwz)->pj) = ((dwy)->pj);
((dwz)->ne) = (copy_((dwy)->ne));
((dwz)->nf) = (copy_((dwy)->nf));
((dwz)->ng) = (copy_((dwy)->ng));
((dwz)->nh) = (copy_((dwy)->nh));
((dwz)->ni) = (copy_((dwy)->ni));
((dwz)->nj) = (copy_((dwy)->nj));
((dwz)->nk) = (copy_((dwy)->nk));
((dwz)->no) = ((dwy)->no);
((dwz)->lw) = ((dwy)->lw);
return as_<bxm>(classTable_, (dwz), 68);
}
// _toBin
static Array_<uint8_t>* dxa(bxm* dxb){
Array_<uint8_t>* dxc = nullptr;
(dxc) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dxc) = ((dxc)->Cat(toBin_((dxb)->pf)));
(dxc) = ((dxc)->Cat(toBin_((dxb)->pj)));
(dxc) = ((dxc)->Cat(toBin_((dxb)->ne)));
(dxc) = ((dxc)->Cat(toBin_((dxb)->nf)));
(dxc) = ((dxc)->Cat(toBin_((dxb)->ng)));
(dxc) = ((dxc)->Cat(toBin_((dxb)->nh)));
(dxc) = ((dxc)->Cat(toBin_((dxb)->ni)));
(dxc) = ((dxc)->Cat(toBin_((dxb)->nj)));
(dxc) = ((dxc)->Cat(toBin_((dxb)->nk)));
(dxc) = ((dxc)->Cat(toBin_((dxb)->no)));
(dxc) = ((dxc)->Cat(toBin_((dxb)->lw)));
return dxc;
}
// _fromBin
static bxm* dxo(bxm* dxp, Array_<uint8_t>* dxq, int64_t* dxr){
bxm* dxs = nullptr;
(dxs) = (new bxm());
((dxs)->pf) = (fromBin_<gc*>((dxq), (*dxr)));
((dxs)->pj) = (fromBin_<int64_t>((dxq), (*dxr)));
((dxs)->ne) = (fromBin_<ga*>((dxq), (*dxr)));
((dxs)->nf) = (fromBin_<Array_<char16_t>*>((dxq), (*dxr)));
((dxs)->ng) = (fromBin_<fx*>((dxq), (*dxr)));
((dxs)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dxq), (*dxr)));
((dxs)->ni) = (fromBin_<Array_<char16_t>*>((dxq), (*dxr)));
((dxs)->nj) = (fromBin_<fx*>((dxq), (*dxr)));
((dxs)->nk) = (fromBin_<fy*>((dxq), (*dxr)));
((dxs)->no) = (fromBin_<bool>((dxq), (*dxr)));
((dxs)->lw) = (fromBin_<int64_t>((dxq), (*dxr)));
return dxs;
}
// _dtor
static void dxt(bxl* dxu){
((dxu)->pf) = (nullptr);
((dxu)->ne) = (nullptr);
((dxu)->nf) = (nullptr);
((dxu)->ng) = (nullptr);
((dxu)->nh) = (nullptr);
((dxu)->ni) = (nullptr);
((dxu)->nj) = (nullptr);
((dxu)->nk) = (nullptr);
}
// _copy
static bxl* dxv(bxl* dxw){
bxl* dxx = nullptr;
(dxx) = (new bxl());
((dxx)->bxn) = ((dxw)->bxn);
((dxx)->pf) = (copy_((dxw)->pf));
((dxx)->pj) = ((dxw)->pj);
((dxx)->ne) = (copy_((dxw)->ne));
((dxx)->nf) = (copy_((dxw)->nf));
((dxx)->ng) = (copy_((dxw)->ng));
((dxx)->nh) = (copy_((dxw)->nh));
((dxx)->ni) = (copy_((dxw)->ni));
((dxx)->nj) = (copy_((dxw)->nj));
((dxx)->nk) = (copy_((dxw)->nk));
((dxx)->no) = ((dxw)->no);
((dxx)->lw) = ((dxw)->lw);
return as_<bxl>(classTable_, (dxx), 70);
}
// _toBin
static Array_<uint8_t>* dxy(bxl* dxz){
Array_<uint8_t>* dya = nullptr;
(dya) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dya) = ((dya)->Cat(toBin_((dxz)->bxn)));
(dya) = ((dya)->Cat(toBin_((dxz)->pf)));
(dya) = ((dya)->Cat(toBin_((dxz)->pj)));
(dya) = ((dya)->Cat(toBin_((dxz)->ne)));
(dya) = ((dya)->Cat(toBin_((dxz)->nf)));
(dya) = ((dya)->Cat(toBin_((dxz)->ng)));
(dya) = ((dya)->Cat(toBin_((dxz)->nh)));
(dya) = ((dya)->Cat(toBin_((dxz)->ni)));
(dya) = ((dya)->Cat(toBin_((dxz)->nj)));
(dya) = ((dya)->Cat(toBin_((dxz)->nk)));
(dya) = ((dya)->Cat(toBin_((dxz)->no)));
(dya) = ((dya)->Cat(toBin_((dxz)->lw)));
return dya;
}
// _fromBin
static bxl* dyn(bxl* dyo, Array_<uint8_t>* dyp, int64_t* dyq){
bxl* dyr = nullptr;
(dyr) = (new bxl());
((dyr)->bxn) = (fromBin_<uint64_t>((dyp), (*dyq)));
((dyr)->pf) = (fromBin_<gc*>((dyp), (*dyq)));
((dyr)->pj) = (fromBin_<int64_t>((dyp), (*dyq)));
((dyr)->ne) = (fromBin_<ga*>((dyp), (*dyq)));
((dyr)->nf) = (fromBin_<Array_<char16_t>*>((dyp), (*dyq)));
((dyr)->ng) = (fromBin_<fx*>((dyp), (*dyq)));
((dyr)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dyp), (*dyq)));
((dyr)->ni) = (fromBin_<Array_<char16_t>*>((dyp), (*dyq)));
((dyr)->nj) = (fromBin_<fx*>((dyp), (*dyq)));
((dyr)->nk) = (fromBin_<fy*>((dyp), (*dyq)));
((dyr)->no) = (fromBin_<bool>((dyp), (*dyq)));
((dyr)->lw) = (fromBin_<int64_t>((dyp), (*dyq)));
return dyr;
}
// rebuildArg
static void byx(gb* dys /*ast*/){
if(!eqAddr_(((dys)->nk), (nullptr))){
return;
}
((dys)->nk) = (dys);
((dys)->qf) = ((bza)(((dys)->qf), (nullptr)));
if(!eqAddr_(((dys)->qg), (nullptr))){
((dys)->qg) = ((bzt)(((dys)->qg), (false)));
if(eqAddr_(((dys)->qg), (nullptr))){
return;
}
if((((dys)->qk) == (1LL)) && ((aye<int64_t>((((dys)->qg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL))){
(ad)((131091LL), ((dys)->ne), (new Array_<Array_<char16_t>*>(1, ((dys)->nf))));
}
if((((dys)->qk) == (4LL)) && ((aye<int64_t>((((dys)->qg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL))){
(ad)((131092LL), ((dys)->ne), (new Array_<Array_<char16_t>*>(1, ((dys)->nf))));
}
if(!((dze)((((dys)->qg)->pf), ((dys)->qf), (false)))){
(ad)((131093LL), ((dys)->ne), (new Array_<Array_<char16_t>*>(1, ((dys)->nf))));
}
else if(((((dys)->qg)->pf)->lw) == (1028LL)){
((dys)->qg) = ((dzh)(((dys)->qg), ((dys)->qf)));
}
}
}
// rebuildType
static gc* bza(gc* dzi /*ast*/, bso* dzj /*parentAlias*/){
int64_t dzm = 0; // type
int64_t dzo = 0;
fx* dzq = nullptr; // refItem
int64_t dzu = 0;
ccm* eae = nullptr; // ast2
List_<ccn*>* eaf = nullptr; // items
ccn* eah = nullptr; // arg
cdu* eam = nullptr; // ast2
if(!eqAddr_(((dzi)->nk), (nullptr))){
return as_<gc>(classTable_, ((dzi)->nk), 12);
}
((dzi)->nk) = (dzi);
(dzm) = ((dzi)->lw);
switch(dzm){
case 66565LL:
(dzq) = ((dzi)->nj);
if(eqAddr_((dzq), (nullptr))){
return nullptr;
}
switch((dzq)->lw){
case 5LL:
(dzw)((as_<ul>(classTable_, (dzq), 22)));
break;
case 6LL:
(dzy)((as_<bsu>(classTable_, (dzq), 48)));
break;
case 4LL:
(eaa)((as_<bso>(classTable_, (dzq), 46)), (dzj));
((dzi)->nk) = ((as_<bso>(classTable_, (dzq), 46))->dje);
(dzi) = ((as_<bso>(classTable_, (dzq), 46))->dje);
break;
default:
(ad)((131111LL), ((dzi)->ne), (nullptr));
return nullptr;
break;
}
break;
case 66561LL:
((as_<cce>(classTable_, (dzi), 76))->ccg) = ((bza)(((as_<cce>(classTable_, (dzi), 76))->ccg), (dzj)));
break;
case 66562LL:
(eae) = (as_<ccm>(classTable_, (dzi), 80));
(eaf) = ((eae)->ccu);
awe<List_<ccn*>*>((eaf), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<ccn*>*>((eaf), (new Array_<int64_t>(1, (0LL)))))){
(eah) = (awi<List_<ccn*>*, ccn*>((eaf), (new Array_<int64_t>(1, (0LL)))));
((eah)->cdc) = ((bza)(((eah)->cdc), (dzj)));
ays<List_<ccn*>*>((eaf), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((eae)->ccp), (nullptr))){
((eae)->ccp) = ((bza)(((eae)->ccp), (dzj)));
}
break;
case 66563LL:
((as_<cdj>(classTable_, (dzi), 84))->cdo) = ((bza)(((as_<cdj>(classTable_, (dzi), 84))->cdo), (dzj)));
break;
case 66564LL:
(eam) = (as_<cdu>(classTable_, (dzi), 86));
((eam)->cdv) = ((bza)(((eam)->cdv), (dzj)));
((eam)->cdw) = ((bza)(((eam)->cdw), (dzj)));
break;
default:
if(!(((((dzm) == (0LL)) || ((dzm) == (1025LL))) || ((dzm) == (1026LL))) || ((dzm) == (1027LL)))){
throw 0xE9170000U;
}
break;
}
return dzi;
}
// refreshStats
static List_<ge*>* bzb(List_<ge*>* eao /*stats*/, gc* eap /*retType*/, fw* eaq /*parentFunc*/){
List_<ge*>* ear = nullptr; // stats2
ge* eat = nullptr; // stat
(ear) = (new List_<ge*>());
awe<List_<ge*>*>((eao), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<ge*>*>((eao), (new Array_<int64_t>(1, (0LL)))))){
(eat) = ((cad)((awi<List_<ge*>*, ge*>((eao), (new Array_<int64_t>(1, (0LL))))), (eap), (eaq)));
if(!eqAddr_((eat), (nullptr))){
uh<List_<ge*>*, ge*>((ear), (new Array_<int64_t>(1, (0LL))), (eat));
}
ays<List_<ge*>*>((eao), (new Array_<int64_t>(1, (0LL))));
}
return ear;
}
// rebuildExpr
static gd* bzt(gd* eaw /*ast*/, bool eax /*nullable*/){
int64_t ebb = 0;
if(eqAddr_((eaw), (nullptr))){
return nullptr;
}
switch((eaw)->lw){
case 0LL:
return nullptr;
break;
case 2049LL:
(eaw) = ((ebe)((as_<ebf>(classTable_, (eaw), 110))));
break;
case 2050LL:
(eaw) = ((ebh)((as_<bzx>(classTable_, (eaw), 72))));
break;
case 2051LL:
(eaw) = ((ebj)((as_<ebk>(classTable_, (eaw), 112))));
break;
case 2052LL:
(eaw) = ((ebm)((as_<ebn>(classTable_, (eaw), 114))));
break;
case 2053LL:
(eaw) = ((ebp)((as_<ebq>(classTable_, (eaw), 116))));
break;
case 2054LL:
(eaw) = ((ebs)((as_<ebt>(classTable_, (eaw), 118))));
break;
case 2055LL:
(eaw) = ((ebv)((as_<ebw>(classTable_, (eaw), 120))));
break;
case 2056LL:
(eaw) = ((eby)((as_<ebz>(classTable_, (eaw), 122))));
break;
case 2057LL:
(eaw) = ((ecb)((as_<bwt>(classTable_, (eaw), 64))));
break;
case 2058LL:
(eaw) = ((ecd)((as_<ece>(classTable_, (eaw), 124))));
break;
case 2059LL:
(eaw) = ((ecg)((as_<ech>(classTable_, (eaw), 126))));
break;
case 67584LL:
(eaw) = ((ecj)((as_<bxm>(classTable_, (eaw), 68))));
break;
case 67585LL:
(eaw) = ((ecl)((as_<bxl>(classTable_, (eaw), 70))));
break;
case 67586LL:
(eaw) = ((ecn)((as_<eco>(classTable_, (eaw), 128))));
break;
case 67587LL:
(eaw) = ((ecq)((as_<ecr>(classTable_, (eaw), 130))));
break;
case 67588LL:
(eaw) = ((ect)((as_<ecu>(classTable_, (eaw), 132))));
break;
case 2060LL:
(eaw) = ((ecw)((as_<ecx>(classTable_, (eaw), 134))));
break;
case 2062LL:
(eaw) = ((due)((eaw)));
break;
}
if(eqAddr_((eaw), (nullptr))){
return nullptr;
}
if((!(eax)) && (eqAddr_(((eaw)->pf), (nullptr)))){
(ad)((131112LL), ((eaw)->ne), (nullptr));
return nullptr;
}
return eaw;
}
// _dtor
static void edd(bzx* ede){
((ede)->cab) = (nullptr);
((ede)->cac) = (nullptr);
((ede)->pf) = (nullptr);
((ede)->ne) = (nullptr);
((ede)->nf) = (nullptr);
((ede)->ng) = (nullptr);
((ede)->nh) = (nullptr);
((ede)->ni) = (nullptr);
((ede)->nj) = (nullptr);
((ede)->nk) = (nullptr);
}
// _copy
static bzx* edf(bzx* edg){
bzx* edh = nullptr;
(edh) = (new bzx());
((edh)->bzy) = ((edg)->bzy);
((edh)->cab) = (copy_((edg)->cab));
((edh)->cac) = (copy_((edg)->cac));
((edh)->pf) = (copy_((edg)->pf));
((edh)->pj) = ((edg)->pj);
((edh)->ne) = (copy_((edg)->ne));
((edh)->nf) = (copy_((edg)->nf));
((edh)->ng) = (copy_((edg)->ng));
((edh)->nh) = (copy_((edg)->nh));
((edh)->ni) = (copy_((edg)->ni));
((edh)->nj) = (copy_((edg)->nj));
((edh)->nk) = (copy_((edg)->nk));
((edh)->no) = ((edg)->no);
((edh)->lw) = ((edg)->lw);
return as_<bzx>(classTable_, (edh), 72);
}
// _toBin
static Array_<uint8_t>* edi(bzx* edj){
Array_<uint8_t>* edk = nullptr;
(edk) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(edk) = ((edk)->Cat(toBin_((edj)->bzy)));
(edk) = ((edk)->Cat(toBin_((edj)->cab)));
(edk) = ((edk)->Cat(toBin_((edj)->cac)));
(edk) = ((edk)->Cat(toBin_((edj)->pf)));
(edk) = ((edk)->Cat(toBin_((edj)->pj)));
(edk) = ((edk)->Cat(toBin_((edj)->ne)));
(edk) = ((edk)->Cat(toBin_((edj)->nf)));
(edk) = ((edk)->Cat(toBin_((edj)->ng)));
(edk) = ((edk)->Cat(toBin_((edj)->nh)));
(edk) = ((edk)->Cat(toBin_((edj)->ni)));
(edk) = ((edk)->Cat(toBin_((edj)->nj)));
(edk) = ((edk)->Cat(toBin_((edj)->nk)));
(edk) = ((edk)->Cat(toBin_((edj)->no)));
(edk) = ((edk)->Cat(toBin_((edj)->lw)));
return edk;
}
// _fromBin
static bzx* edz(bzx* eea, Array_<uint8_t>* eeb, int64_t* eec){
bzx* eed = nullptr;
(eed) = (new bzx());
((eed)->bzy) = (fromBin_<int64_t>((eeb), (*eec)));
((eed)->cab) = (fromBin_<gd*>((eeb), (*eec)));
((eed)->cac) = (fromBin_<gd*>((eeb), (*eec)));
((eed)->pf) = (fromBin_<gc*>((eeb), (*eec)));
((eed)->pj) = (fromBin_<int64_t>((eeb), (*eec)));
((eed)->ne) = (fromBin_<ga*>((eeb), (*eec)));
((eed)->nf) = (fromBin_<Array_<char16_t>*>((eeb), (*eec)));
((eed)->ng) = (fromBin_<fx*>((eeb), (*eec)));
((eed)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eeb), (*eec)));
((eed)->ni) = (fromBin_<Array_<char16_t>*>((eeb), (*eec)));
((eed)->nj) = (fromBin_<fx*>((eeb), (*eec)));
((eed)->nk) = (fromBin_<fy*>((eeb), (*eec)));
((eed)->no) = (fromBin_<bool>((eeb), (*eec)));
((eed)->lw) = (fromBin_<int64_t>((eeb), (*eec)));
return eed;
}
// rebuildStat
static ge* cad(ge* eee /*ast*/, gc* eef /*retType*/, fw* eeg /*parentFunc*/){
int64_t eek = 0;
eeo* een = nullptr; // ast2
gb* eer = nullptr; // arg
List_<ccn*>* eeu = nullptr; // args
ul* eev = nullptr; // refClass
List_<um*>* eew = nullptr; // items
um* efa = nullptr; // item
gd* efd = nullptr; // astRef
bwq* efh = nullptr; // astDo
bzx* efj = nullptr; // astAssign
gd* efl = nullptr; // astRef
if(eqAddr_((eee), (nullptr))){
return nullptr;
}
switch((eee)->lw){
case 514LL:
case 516LL:
case 517LL:
case 518LL:
case 519LL:
return nullptr;
break;
case 515LL:
(een) = (as_<eeo>(classTable_, (eee), 136));
(eep)(((een)->eeq));
(eer) = (((een)->eeq)->bgk);
if((!eqAddr_(((eer)->nf), (nullptr))) && (cmp_(((eer)->nf), (new Array_<char16_t>(5, u'\u0073', u'\u0075', u'\u0070', u'\u0065', u'\u0072'))) == 0)){
if(!((!eqAddr_((eeg), (nullptr))) && (!eqAddr_(((eeg)->nf), (nullptr))))){
throw 0xE9170000U;
}
if(!((((eer)->qf)->lw) == (66562LL))){
throw 0xE9170000U;
}
(eeu) = ((as_<ccm>(classTable_, ((eer)->qf), 80))->ccu);
awe<List_<ccn*>*>((eeu), (new Array_<int64_t>(1, (0LL))));
(eev) = (as_<ul>(classTable_, (((awi<List_<ccn*>*, ccn*>((eeu), (new Array_<int64_t>(1, (0LL)))))->cdc)->nj), 22));
if(!(((eev)->lw) == (5LL))){
throw 0xE9170000U;
}
(eew) = ((eev)->bag);
awe<List_<um*>*>((eew), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((eew), (new Array_<int64_t>(1, (0LL)))))){
(efa) = (awi<List_<um*>*, um*>((eew), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((((efa)->azl)->nf), (nullptr))) && (cmp_((((efa)->azl)->nf), ((eeg)->nf)) == 0)){
if(!((efa)->azr)){
throw 0xE9170000U;
}
(efd) = (new gd());
(bwv)((efd), (2062LL), ((eee)->ne));
((efd)->nj) = (((efa)->azm)->azl);
((eer)->qg) = (efd);
break;
}
ays<List_<um*>*>((eew), (new Array_<int64_t>(1, (0LL))));
}
if(!(!(awg<List_<um*>*>((eew), (new Array_<int64_t>(1, (0LL))))))){
throw 0xE9170000U;
}
}
if(eqAddr_(((eer)->qg), (nullptr))){
return nullptr;
}
(efh) = (new bwq());
(bvn)((efh), (528LL), ((eee)->ne));
(efj) = (new bzx());
(bwv)((efj), (2050LL), ((eee)->ne));
((efj)->bzy) = (0LL);
(efl) = (new gd());
(bwv)((efl), (2062LL), ((eee)->ne));
((efl)->nj) = (eer);
((efj)->cab) = (efl);
((efj)->cac) = ((eer)->qg);
((efh)->bxa) = (efj);
((eer)->qg) = (nullptr);
(eee) = ((cad)((efh), (eef), (eeg)));
break;
case 66049LL:
(eee) = ((efn)((as_<cld>(classTable_, (eee), 88)), (eef), (eeg)));
break;
case 66050LL:
(eee) = ((efp)((as_<clh>(classTable_, (eee), 92)), (eef), (eeg)));
break;
case 16843265LL:
(eee) = ((efr)((as_<cll>(classTable_, (eee), 98)), (eef), (eeg)));
break;
case 16843266LL:
(eee) = ((eft)((as_<clp>(classTable_, (eee), 100)), (eef), (eeg)));
break;
case 66051LL:
(eee) = ((efv)((as_<bvq>(classTable_, (eee), 52)), (eef), (eeg)));
break;
case 526LL:
(eee) = ((efx)((as_<clu>(classTable_, (eee), 102))));
break;
case 66052LL:
(eee) = ((efz)((as_<bvs>(classTable_, (eee), 54)), (eef), (eeg)));
break;
case 527LL:
(eee) = ((egb)((as_<clz>(classTable_, (eee), 104)), (eef)));
break;
case 528LL:
(eee) = ((egd)((as_<bwq>(classTable_, (eee), 62))));
break;
case 529LL:
(eee) = ((egf)((as_<ge>(classTable_, (eee), 16)), (eef), (eeg)));
break;
case 530LL:
(eee) = ((egh)((as_<ge>(classTable_, (eee), 16)), (eef), (eeg)));
break;
case 531LL:
(eee) = ((egj)((as_<cmi>(classTable_, (eee), 106))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(eqAddr_((eee), (nullptr))){
return nullptr;
}
if(!(!eqAddr_(((eee)->nk), (nullptr)))){
throw 0xE9170000U;
}
return eee;
}
// isRef
static bool caf(gc* egn /*type*/){
int64_t ego = 0; // typeId
(ego) = ((egn)->lw);
return ((((ego) == (66561LL)) || ((ego) == (66563LL))) || ((ego) == (66564LL))) || ((egp)((egn)));
}
// makeExprNull
static bxm* cam(ga* egq /*pos*/){
bxm* egr = nullptr; // value
egu* egt = nullptr; // type
(egr) = (new bxm());
(bwv)((egr), (67584LL), (egq));
(egt) = (new egu());
(bvn)((egt), (1027LL), (egq));
((egr)->pf) = (egt);
return egr;
}
// getId
static Array_<char16_t>* cas(){
Array_<char16_t>* egv = nullptr; // curId
Array_<char16_t>* egw = nullptr; // newId
int64_t eha = 0; // idx
int64_t eho = 0;
Array_<char16_t>* ehr = nullptr;
Array_<char16_t>* ehv = nullptr;
Array_<char16_t>* ehz = nullptr;
(egv) = (al);
(egw) = (copy_(al));
while(true){
(eha) = (((egw)->Len()) - (1LL));
while(true){
if(((egw)->At(eha)) == (u'\u007A')){
if((eha) == (0LL)){
(egw) = (newArray_<char16_t, Array_<char16_t>*>(1, (((egw)->Len()) + (1LL))));
ehi<Array_<char16_t>*, char16_t>((egw), (new Array_<int64_t>(1, (0LL))), (u'\u0061'));
}
else{
((egw)->At(eha)) = (u'\u0061');
(eha) = ((eha) - (1LL));
continue;
}
}
else{
((egw)->At(eha)) = ((ehm)(((egw)->At(eha)), (1LL)));
}
break;
}
switch((egw)->Len()){
case 2LL:
ehr = egw;
if(cmp_(ehr, (new Array_<char16_t>(2, u'\u0064', u'\u006F'))) == 0 || cmp_(ehr, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0 || cmp_(ehr, (new Array_<char16_t>(2, u'\u006F', u'\u0072'))) == 0){
continue;
}
break;
case 3LL:
ehv = egw;
if(cmp_(ehv, (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064'))) == 0 || cmp_(ehv, (new Array_<char16_t>(3, u'\u0061', u'\u0073', u'\u006D'))) == 0 || cmp_(ehv, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0 || cmp_(ehv, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074'))) == 0 || cmp_(ehv, (new Array_<char16_t>(3, u'\u006E', u'\u0065', u'\u0077'))) == 0 || cmp_(ehv, (new Array_<char16_t>(3, u'\u006E', u'\u006F', u'\u0074'))) == 0 || cmp_(ehv, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0 || cmp_(ehv, (new Array_<char16_t>(3, u'\u0078', u'\u006F', u'\u0072'))) == 0){
continue;
}
break;
case 4LL:
ehz = egw;
if(cmp_(ehz, (new Array_<char16_t>(4, u'\u0061', u'\u0075', u'\u0074', u'\u006F'))) == 0 || cmp_(ehz, (new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C'))) == 0 || cmp_(ehz, (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065'))) == 0 || cmp_(ehz, (new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072'))) == 0 || cmp_(ehz, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065'))) == 0 || cmp_(ehz, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0 || cmp_(ehz, (new Array_<char16_t>(4, u'\u0067', u'\u006F', u'\u0074', u'\u006F'))) == 0 || cmp_(ehz, (new Array_<char16_t>(4, u'\u006C', u'\u006F', u'\u006E', u'\u0067'))) == 0 || cmp_(ehz, (new Array_<char16_t>(4, u'\u006D', u'\u0061', u'\u0069', u'\u006E'))) == 0 || cmp_(ehz, (new Array_<char16_t>(4, u'\u0074', u'\u0068', u'\u0069', u'\u0073'))) == 0 || cmp_(ehz, (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))) == 0 || cmp_(ehz, (new Array_<char16_t>(4, u'\u0076', u'\u006F', u'\u0069', u'\u0064'))) == 0){
continue;
}
break;
}
break;
}
(al) = (egw);
return egv;
}
// _dtor
static void eib(ccf* eic){
((eic)->ne) = (nullptr);
((eic)->nf) = (nullptr);
((eic)->ng) = (nullptr);
((eic)->nh) = (nullptr);
((eic)->ni) = (nullptr);
((eic)->nj) = (nullptr);
((eic)->nk) = (nullptr);
}
// _copy
static ccf* eid(ccf* eie){
ccf* eif = nullptr;
(eif) = (new ccf());
((eif)->ne) = (copy_((eie)->ne));
((eif)->nf) = (copy_((eie)->nf));
((eif)->ng) = (copy_((eie)->ng));
((eif)->nh) = (copy_((eie)->nh));
((eif)->ni) = (copy_((eie)->ni));
((eif)->nj) = (copy_((eie)->nj));
((eif)->nk) = (copy_((eie)->nk));
((eif)->no) = ((eie)->no);
((eif)->lw) = ((eie)->lw);
return as_<ccf>(classTable_, (eif), 74);
}
// _toBin
static Array_<uint8_t>* eig(ccf* eih){
Array_<uint8_t>* eii = nullptr;
(eii) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eii) = ((eii)->Cat(toBin_((eih)->ne)));
(eii) = ((eii)->Cat(toBin_((eih)->nf)));
(eii) = ((eii)->Cat(toBin_((eih)->ng)));
(eii) = ((eii)->Cat(toBin_((eih)->nh)));
(eii) = ((eii)->Cat(toBin_((eih)->ni)));
(eii) = ((eii)->Cat(toBin_((eih)->nj)));
(eii) = ((eii)->Cat(toBin_((eih)->nk)));
(eii) = ((eii)->Cat(toBin_((eih)->no)));
(eii) = ((eii)->Cat(toBin_((eih)->lw)));
return eii;
}
// _fromBin
static ccf* eis(ccf* eit, Array_<uint8_t>* eiu, int64_t* eiv){
ccf* eiw = nullptr;
(eiw) = (new ccf());
((eiw)->ne) = (fromBin_<ga*>((eiu), (*eiv)));
((eiw)->nf) = (fromBin_<Array_<char16_t>*>((eiu), (*eiv)));
((eiw)->ng) = (fromBin_<fx*>((eiu), (*eiv)));
((eiw)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eiu), (*eiv)));
((eiw)->ni) = (fromBin_<Array_<char16_t>*>((eiu), (*eiv)));
((eiw)->nj) = (fromBin_<fx*>((eiu), (*eiv)));
((eiw)->nk) = (fromBin_<fy*>((eiu), (*eiv)));
((eiw)->no) = (fromBin_<bool>((eiu), (*eiv)));
((eiw)->lw) = (fromBin_<int64_t>((eiu), (*eiv)));
return eiw;
}
// _dtor
static void eix(cce* eiy){
((eiy)->ccg) = (nullptr);
((eiy)->ne) = (nullptr);
((eiy)->nf) = (nullptr);
((eiy)->ng) = (nullptr);
((eiy)->nh) = (nullptr);
((eiy)->ni) = (nullptr);
((eiy)->nj) = (nullptr);
((eiy)->nk) = (nullptr);
}
// _copy
static cce* eiz(cce* eja){
cce* ejb = nullptr;
(ejb) = (new cce());
((ejb)->ccg) = (copy_((eja)->ccg));
((ejb)->ne) = (copy_((eja)->ne));
((ejb)->nf) = (copy_((eja)->nf));
((ejb)->ng) = (copy_((eja)->ng));
((ejb)->nh) = (copy_((eja)->nh));
((ejb)->ni) = (copy_((eja)->ni));
((ejb)->nj) = (copy_((eja)->nj));
((ejb)->nk) = (copy_((eja)->nk));
((ejb)->no) = ((eja)->no);
((ejb)->lw) = ((eja)->lw);
return as_<cce>(classTable_, (ejb), 76);
}
// _toBin
static Array_<uint8_t>* ejc(cce* ejd){
Array_<uint8_t>* eje = nullptr;
(eje) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eje) = ((eje)->Cat(toBin_((ejd)->ccg)));
(eje) = ((eje)->Cat(toBin_((ejd)->ne)));
(eje) = ((eje)->Cat(toBin_((ejd)->nf)));
(eje) = ((eje)->Cat(toBin_((ejd)->ng)));
(eje) = ((eje)->Cat(toBin_((ejd)->nh)));
(eje) = ((eje)->Cat(toBin_((ejd)->ni)));
(eje) = ((eje)->Cat(toBin_((ejd)->nj)));
(eje) = ((eje)->Cat(toBin_((ejd)->nk)));
(eje) = ((eje)->Cat(toBin_((ejd)->no)));
(eje) = ((eje)->Cat(toBin_((ejd)->lw)));
return eje;
}
// _fromBin
static cce* ejp(cce* ejq, Array_<uint8_t>* ejr, int64_t* ejs){
cce* ejt = nullptr;
(ejt) = (new cce());
((ejt)->ccg) = (fromBin_<gc*>((ejr), (*ejs)));
((ejt)->ne) = (fromBin_<ga*>((ejr), (*ejs)));
((ejt)->nf) = (fromBin_<Array_<char16_t>*>((ejr), (*ejs)));
((ejt)->ng) = (fromBin_<fx*>((ejr), (*ejs)));
((ejt)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ejr), (*ejs)));
((ejt)->ni) = (fromBin_<Array_<char16_t>*>((ejr), (*ejs)));
((ejt)->nj) = (fromBin_<fx*>((ejr), (*ejs)));
((ejt)->nk) = (fromBin_<fy*>((ejr), (*ejs)));
((ejt)->no) = (fromBin_<bool>((ejr), (*ejs)));
((ejt)->lw) = (fromBin_<int64_t>((ejr), (*ejs)));
return ejt;
}
// _dtor
static void eju(cci* ejv){
((ejv)->ne) = (nullptr);
((ejv)->nf) = (nullptr);
((ejv)->ng) = (nullptr);
((ejv)->nh) = (nullptr);
((ejv)->ni) = (nullptr);
((ejv)->nj) = (nullptr);
((ejv)->nk) = (nullptr);
}
// _copy
static cci* ejw(cci* ejx){
cci* ejy = nullptr;
(ejy) = (new cci());
((ejy)->ccj) = ((ejx)->ccj);
((ejy)->ne) = (copy_((ejx)->ne));
((ejy)->nf) = (copy_((ejx)->nf));
((ejy)->ng) = (copy_((ejx)->ng));
((ejy)->nh) = (copy_((ejx)->nh));
((ejy)->ni) = (copy_((ejx)->ni));
((ejy)->nj) = (copy_((ejx)->nj));
((ejy)->nk) = (copy_((ejx)->nk));
((ejy)->no) = ((ejx)->no);
((ejy)->lw) = ((ejx)->lw);
return as_<cci>(classTable_, (ejy), 78);
}
// _toBin
static Array_<uint8_t>* ejz(cci* eka){
Array_<uint8_t>* ekb = nullptr;
(ekb) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ekb) = ((ekb)->Cat(toBin_((eka)->ccj)));
(ekb) = ((ekb)->Cat(toBin_((eka)->ne)));
(ekb) = ((ekb)->Cat(toBin_((eka)->nf)));
(ekb) = ((ekb)->Cat(toBin_((eka)->ng)));
(ekb) = ((ekb)->Cat(toBin_((eka)->nh)));
(ekb) = ((ekb)->Cat(toBin_((eka)->ni)));
(ekb) = ((ekb)->Cat(toBin_((eka)->nj)));
(ekb) = ((ekb)->Cat(toBin_((eka)->nk)));
(ekb) = ((ekb)->Cat(toBin_((eka)->no)));
(ekb) = ((ekb)->Cat(toBin_((eka)->lw)));
return ekb;
}
// _fromBin
static cci* ekm(cci* ekn, Array_<uint8_t>* eko, int64_t* ekp){
cci* ekq = nullptr;
(ekq) = (new cci());
((ekq)->ccj) = (fromBin_<int64_t>((eko), (*ekp)));
((ekq)->ne) = (fromBin_<ga*>((eko), (*ekp)));
((ekq)->nf) = (fromBin_<Array_<char16_t>*>((eko), (*ekp)));
((ekq)->ng) = (fromBin_<fx*>((eko), (*ekp)));
((ekq)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eko), (*ekp)));
((ekq)->ni) = (fromBin_<Array_<char16_t>*>((eko), (*ekp)));
((ekq)->nj) = (fromBin_<fx*>((eko), (*ekp)));
((ekq)->nk) = (fromBin_<fy*>((eko), (*ekp)));
((ekq)->no) = (fromBin_<bool>((eko), (*ekp)));
((ekq)->lw) = (fromBin_<int64_t>((eko), (*ekp)));
return ekq;
}
// _dtor
static void ekr(ccn* eks){
((eks)->cdc) = (nullptr);
}
// _copy
static ccn* ekt(ccn* eku){
ccn* ekv = nullptr;
(ekv) = (new ccn());
((ekv)->cdc) = (copy_((eku)->cdc));
((ekv)->cde) = ((eku)->cde);
return as_<ccn>(classTable_, (ekv), 82);
}
// _toBin
static Array_<uint8_t>* ekw(ccn* ekx){
Array_<uint8_t>* eky = nullptr;
(eky) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eky) = ((eky)->Cat(toBin_((ekx)->cdc)));
(eky) = ((eky)->Cat(toBin_((ekx)->cde)));
return eky;
}
// _fromBin
static ccn* elb(ccn* elc, Array_<uint8_t>* eld, int64_t* ele){
ccn* elf = nullptr;
(elf) = (new ccn());
((elf)->cdc) = (fromBin_<gc*>((eld), (*ele)));
((elf)->cde) = (fromBin_<bool>((eld), (*ele)));
return elf;
}
// _dtor
static void elg(ccm* elh){
((elh)->eli) = (nullptr);
((elh)->ccu) = (nullptr);
((elh)->ccp) = (nullptr);
((elh)->ne) = (nullptr);
((elh)->nf) = (nullptr);
((elh)->ng) = (nullptr);
((elh)->nh) = (nullptr);
((elh)->ni) = (nullptr);
((elh)->nj) = (nullptr);
((elh)->nk) = (nullptr);
}
// _copy
static ccm* elj(ccm* elk){
ccm* ell = nullptr;
(ell) = (new ccm());
((ell)->elm) = ((elk)->elm);
((ell)->eli) = (copy_((elk)->eli));
((ell)->ccu) = (copy_((elk)->ccu));
((ell)->ccp) = (copy_((elk)->ccp));
((ell)->ne) = (copy_((elk)->ne));
((ell)->nf) = (copy_((elk)->nf));
((ell)->ng) = (copy_((elk)->ng));
((ell)->nh) = (copy_((elk)->nh));
((ell)->ni) = (copy_((elk)->ni));
((ell)->nj) = (copy_((elk)->nj));
((ell)->nk) = (copy_((elk)->nk));
((ell)->no) = ((elk)->no);
((ell)->lw) = ((elk)->lw);
return as_<ccm>(classTable_, (ell), 80);
}
// _toBin
static Array_<uint8_t>* eln(ccm* elo){
Array_<uint8_t>* elp = nullptr;
(elp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(elp) = ((elp)->Cat(toBin_((elo)->elm)));
(elp) = ((elp)->Cat(toBin_((elo)->eli)));
(elp) = ((elp)->Cat(toBin_((elo)->ccu)));
(elp) = ((elp)->Cat(toBin_((elo)->ccp)));
(elp) = ((elp)->Cat(toBin_((elo)->ne)));
(elp) = ((elp)->Cat(toBin_((elo)->nf)));
(elp) = ((elp)->Cat(toBin_((elo)->ng)));
(elp) = ((elp)->Cat(toBin_((elo)->nh)));
(elp) = ((elp)->Cat(toBin_((elo)->ni)));
(elp) = ((elp)->Cat(toBin_((elo)->nj)));
(elp) = ((elp)->Cat(toBin_((elo)->nk)));
(elp) = ((elp)->Cat(toBin_((elo)->no)));
(elp) = ((elp)->Cat(toBin_((elo)->lw)));
return elp;
}
// _fromBin
static ccm* emd(ccm* eme, Array_<uint8_t>* emf, int64_t* emg){
ccm* emh = nullptr;
(emh) = (new ccm());
((emh)->elm) = (fromBin_<int64_t>((emf), (*emg)));
((emh)->eli) = (fromBin_<List_<Array_<char16_t>*>*>((emf), (*emg)));
((emh)->ccu) = (fromBin_<List_<ccn*>*>((emf), (*emg)));
((emh)->ccp) = (fromBin_<gc*>((emf), (*emg)));
((emh)->ne) = (fromBin_<ga*>((emf), (*emg)));
((emh)->nf) = (fromBin_<Array_<char16_t>*>((emf), (*emg)));
((emh)->ng) = (fromBin_<fx*>((emf), (*emg)));
((emh)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((emf), (*emg)));
((emh)->ni) = (fromBin_<Array_<char16_t>*>((emf), (*emg)));
((emh)->nj) = (fromBin_<fx*>((emf), (*emg)));
((emh)->nk) = (fromBin_<fy*>((emf), (*emg)));
((emh)->no) = (fromBin_<bool>((emf), (*emg)));
((emh)->lw) = (fromBin_<int64_t>((emf), (*emg)));
return emh;
}
// _dtor
static void emi(cdj* emj){
((emj)->cdo) = (nullptr);
((emj)->ne) = (nullptr);
((emj)->nf) = (nullptr);
((emj)->ng) = (nullptr);
((emj)->nh) = (nullptr);
((emj)->ni) = (nullptr);
((emj)->nj) = (nullptr);
((emj)->nk) = (nullptr);
}
// _copy
static cdj* emk(cdj* eml){
cdj* emm = nullptr;
(emm) = (new cdj());
((emm)->cdm) = ((eml)->cdm);
((emm)->cdo) = (copy_((eml)->cdo));
((emm)->ne) = (copy_((eml)->ne));
((emm)->nf) = (copy_((eml)->nf));
((emm)->ng) = (copy_((eml)->ng));
((emm)->nh) = (copy_((eml)->nh));
((emm)->ni) = (copy_((eml)->ni));
((emm)->nj) = (copy_((eml)->nj));
((emm)->nk) = (copy_((eml)->nk));
((emm)->no) = ((eml)->no);
((emm)->lw) = ((eml)->lw);
return as_<cdj>(classTable_, (emm), 84);
}
// _toBin
static Array_<uint8_t>* emn(cdj* emo){
Array_<uint8_t>* emp = nullptr;
(emp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(emp) = ((emp)->Cat(toBin_((emo)->cdm)));
(emp) = ((emp)->Cat(toBin_((emo)->cdo)));
(emp) = ((emp)->Cat(toBin_((emo)->ne)));
(emp) = ((emp)->Cat(toBin_((emo)->nf)));
(emp) = ((emp)->Cat(toBin_((emo)->ng)));
(emp) = ((emp)->Cat(toBin_((emo)->nh)));
(emp) = ((emp)->Cat(toBin_((emo)->ni)));
(emp) = ((emp)->Cat(toBin_((emo)->nj)));
(emp) = ((emp)->Cat(toBin_((emo)->nk)));
(emp) = ((emp)->Cat(toBin_((emo)->no)));
(emp) = ((emp)->Cat(toBin_((emo)->lw)));
return emp;
}
// _fromBin
static cdj* enb(cdj* enc, Array_<uint8_t>* end, int64_t* ene){
cdj* enf = nullptr;
(enf) = (new cdj());
((enf)->cdm) = (fromBin_<int64_t>((end), (*ene)));
((enf)->cdo) = (fromBin_<gc*>((end), (*ene)));
((enf)->ne) = (fromBin_<ga*>((end), (*ene)));
((enf)->nf) = (fromBin_<Array_<char16_t>*>((end), (*ene)));
((enf)->ng) = (fromBin_<fx*>((end), (*ene)));
((enf)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((end), (*ene)));
((enf)->ni) = (fromBin_<Array_<char16_t>*>((end), (*ene)));
((enf)->nj) = (fromBin_<fx*>((end), (*ene)));
((enf)->nk) = (fromBin_<fy*>((end), (*ene)));
((enf)->no) = (fromBin_<bool>((end), (*ene)));
((enf)->lw) = (fromBin_<int64_t>((end), (*ene)));
return enf;
}
// _dtor
static void eng(cdu* enh){
((enh)->cdv) = (nullptr);
((enh)->cdw) = (nullptr);
((enh)->ne) = (nullptr);
((enh)->nf) = (nullptr);
((enh)->ng) = (nullptr);
((enh)->nh) = (nullptr);
((enh)->ni) = (nullptr);
((enh)->nj) = (nullptr);
((enh)->nk) = (nullptr);
}
// _copy
static cdu* eni(cdu* enj){
cdu* enk = nullptr;
(enk) = (new cdu());
((enk)->cdv) = (copy_((enj)->cdv));
((enk)->cdw) = (copy_((enj)->cdw));
((enk)->ne) = (copy_((enj)->ne));
((enk)->nf) = (copy_((enj)->nf));
((enk)->ng) = (copy_((enj)->ng));
((enk)->nh) = (copy_((enj)->nh));
((enk)->ni) = (copy_((enj)->ni));
((enk)->nj) = (copy_((enj)->nj));
((enk)->nk) = (copy_((enj)->nk));
((enk)->no) = ((enj)->no);
((enk)->lw) = ((enj)->lw);
return as_<cdu>(classTable_, (enk), 86);
}
// _toBin
static Array_<uint8_t>* enl(cdu* enm){
Array_<uint8_t>* enn = nullptr;
(enn) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(enn) = ((enn)->Cat(toBin_((enm)->cdv)));
(enn) = ((enn)->Cat(toBin_((enm)->cdw)));
(enn) = ((enn)->Cat(toBin_((enm)->ne)));
(enn) = ((enn)->Cat(toBin_((enm)->nf)));
(enn) = ((enn)->Cat(toBin_((enm)->ng)));
(enn) = ((enn)->Cat(toBin_((enm)->nh)));
(enn) = ((enn)->Cat(toBin_((enm)->ni)));
(enn) = ((enn)->Cat(toBin_((enm)->nj)));
(enn) = ((enn)->Cat(toBin_((enm)->nk)));
(enn) = ((enn)->Cat(toBin_((enm)->no)));
(enn) = ((enn)->Cat(toBin_((enm)->lw)));
return enn;
}
// _fromBin
static cdu* enz(cdu* eoa, Array_<uint8_t>* eob, int64_t* eoc){
cdu* eod = nullptr;
(eod) = (new cdu());
((eod)->cdv) = (fromBin_<gc*>((eob), (*eoc)));
((eod)->cdw) = (fromBin_<gc*>((eob), (*eoc)));
((eod)->ne) = (fromBin_<ga*>((eob), (*eoc)));
((eod)->nf) = (fromBin_<Array_<char16_t>*>((eob), (*eoc)));
((eod)->ng) = (fromBin_<fx*>((eob), (*eoc)));
((eod)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eob), (*eoc)));
((eod)->ni) = (fromBin_<Array_<char16_t>*>((eob), (*eoc)));
((eod)->nj) = (fromBin_<fx*>((eob), (*eoc)));
((eod)->nk) = (fromBin_<fy*>((eob), (*eoc)));
((eod)->no) = (fromBin_<bool>((eob), (*eoc)));
((eod)->lw) = (fromBin_<int64_t>((eob), (*eoc)));
return eod;
}
// search
static bby* cix(List_<um*>* eoe /*members*/, Array_<char16_t>* eof /*name*/){
fx* eoh = nullptr; // def
awe<List_<um*>*>((eoe), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((eoe), (new Array_<int64_t>(1, (0LL)))))){
(eoh) = ((awi<List_<um*>*, um*>((eoe), (new Array_<int64_t>(1, (0LL)))))->azl);
if(((((eoh)->lw) == (2LL)) && (!eqAddr_((((as_<bgi>(classTable_, (eoh), 38))->bgk)->nf), (nullptr)))) && (cmp_((((as_<bgi>(classTable_, (eoh), 38))->bgk)->nf), (eof)) == 0)){
return (bbx)(((as_<bgi>(classTable_, (eoh), 38))->bgk));
}
ays<List_<um*>*>((eoe), (new Array_<int64_t>(1, (0LL))));
}
if(!(false)){
throw 0xE9170000U;
}
return nullptr;
}
// buildIf
static void clc(cld* eok /*ast*/, ge* eol /*breakStat*/, ge* eom /*skipStat*/){
bby* eon = nullptr; // infoMe
List_<cle*>* eow = nullptr; // items
cle* eoz = nullptr; // item
(eon) = ((bbx)((eok)));
if(eqAddr_(((eok)->eop), (nullptr))){
(clw)(((eok)->eor), (eol), (eom));
if((!eqAddr_(((eon)->cav), (nullptr))) && ((eon)->cbb)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((eon)->cav), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
return;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
(eou)(((eok)->eop));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(clw)(((eok)->eor), (eol), (eom));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(eow) = ((eok)->eox);
awe<List_<cle*>*>((eow), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cle*>*>((eow), (new Array_<int64_t>(1, (0LL)))))){
(eoz) = (awi<List_<cle*>*, cle*>((eow), (new Array_<int64_t>(1, (0LL)))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
(eou)(((eoz)->epa));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(clw)(((eoz)->epb), (eol), (eom));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<cle*>*>((eow), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((eok)->epd), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
(clw)(((eok)->epd), (eol), (eom));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
if((!eqAddr_(((eon)->cav), (nullptr))) && ((eon)->cbb)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((eon)->cav), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void eph(cle* epi){
((epi)->epa) = (nullptr);
((epi)->epb) = (nullptr);
((epi)->ne) = (nullptr);
((epi)->nf) = (nullptr);
((epi)->ng) = (nullptr);
((epi)->nh) = (nullptr);
((epi)->ni) = (nullptr);
((epi)->nj) = (nullptr);
((epi)->nk) = (nullptr);
}
// _copy
static cle* epj(cle* epk){
cle* epl = nullptr;
(epl) = (new cle());
((epl)->epa) = (copy_((epk)->epa));
((epl)->epb) = (copy_((epk)->epb));
((epl)->ne) = (copy_((epk)->ne));
((epl)->nf) = (copy_((epk)->nf));
((epl)->ng) = (copy_((epk)->ng));
((epl)->nh) = (copy_((epk)->nh));
((epl)->ni) = (copy_((epk)->ni));
((epl)->nj) = (copy_((epk)->nj));
((epl)->nk) = (copy_((epk)->nk));
((epl)->no) = ((epk)->no);
((epl)->lw) = ((epk)->lw);
return as_<cle>(classTable_, (epl), 90);
}
// _toBin
static Array_<uint8_t>* epm(cle* epn){
Array_<uint8_t>* epo = nullptr;
(epo) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(epo) = ((epo)->Cat(toBin_((epn)->epa)));
(epo) = ((epo)->Cat(toBin_((epn)->epb)));
(epo) = ((epo)->Cat(toBin_((epn)->ne)));
(epo) = ((epo)->Cat(toBin_((epn)->nf)));
(epo) = ((epo)->Cat(toBin_((epn)->ng)));
(epo) = ((epo)->Cat(toBin_((epn)->nh)));
(epo) = ((epo)->Cat(toBin_((epn)->ni)));
(epo) = ((epo)->Cat(toBin_((epn)->nj)));
(epo) = ((epo)->Cat(toBin_((epn)->nk)));
(epo) = ((epo)->Cat(toBin_((epn)->no)));
(epo) = ((epo)->Cat(toBin_((epn)->lw)));
return epo;
}
// _fromBin
static cle* eqa(cle* eqb, Array_<uint8_t>* eqc, int64_t* eqd){
cle* eqe = nullptr;
(eqe) = (new cle());
((eqe)->epa) = (fromBin_<gd*>((eqc), (*eqd)));
((eqe)->epb) = (fromBin_<bvs*>((eqc), (*eqd)));
((eqe)->ne) = (fromBin_<ga*>((eqc), (*eqd)));
((eqe)->nf) = (fromBin_<Array_<char16_t>*>((eqc), (*eqd)));
((eqe)->ng) = (fromBin_<fx*>((eqc), (*eqd)));
((eqe)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eqc), (*eqd)));
((eqe)->ni) = (fromBin_<Array_<char16_t>*>((eqc), (*eqd)));
((eqe)->nj) = (fromBin_<fx*>((eqc), (*eqd)));
((eqe)->nk) = (fromBin_<fy*>((eqc), (*eqd)));
((eqe)->no) = (fromBin_<bool>((eqc), (*eqd)));
((eqe)->lw) = (fromBin_<int64_t>((eqc), (*eqd)));
return eqe;
}
// _dtor
static void eqf(cld* eqg){
((eqg)->eop) = (nullptr);
((eqg)->eor) = (nullptr);
((eqg)->eox) = (nullptr);
((eqg)->epd) = (nullptr);
((eqg)->bwb) = (nullptr);
((eqg)->ne) = (nullptr);
((eqg)->nf) = (nullptr);
((eqg)->ng) = (nullptr);
((eqg)->nh) = (nullptr);
((eqg)->ni) = (nullptr);
((eqg)->nj) = (nullptr);
((eqg)->nk) = (nullptr);
}
// _copy
static cld* eqh(cld* eqi){
cld* eqj = nullptr;
(eqj) = (new cld());
((eqj)->eop) = (copy_((eqi)->eop));
((eqj)->eor) = (copy_((eqi)->eor));
((eqj)->eox) = (copy_((eqi)->eox));
((eqj)->epd) = (copy_((eqi)->epd));
((eqj)->bwb) = (copy_((eqi)->bwb));
((eqj)->ne) = (copy_((eqi)->ne));
((eqj)->nf) = (copy_((eqi)->nf));
((eqj)->ng) = (copy_((eqi)->ng));
((eqj)->nh) = (copy_((eqi)->nh));
((eqj)->ni) = (copy_((eqi)->ni));
((eqj)->nj) = (copy_((eqi)->nj));
((eqj)->nk) = (copy_((eqi)->nk));
((eqj)->no) = ((eqi)->no);
((eqj)->lw) = ((eqi)->lw);
return as_<cld>(classTable_, (eqj), 88);
}
// _toBin
static Array_<uint8_t>* eqk(cld* eql){
Array_<uint8_t>* eqm = nullptr;
(eqm) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eqm) = ((eqm)->Cat(toBin_((eql)->eop)));
(eqm) = ((eqm)->Cat(toBin_((eql)->eor)));
(eqm) = ((eqm)->Cat(toBin_((eql)->eox)));
(eqm) = ((eqm)->Cat(toBin_((eql)->epd)));
(eqm) = ((eqm)->Cat(toBin_((eql)->bwb)));
(eqm) = ((eqm)->Cat(toBin_((eql)->ne)));
(eqm) = ((eqm)->Cat(toBin_((eql)->nf)));
(eqm) = ((eqm)->Cat(toBin_((eql)->ng)));
(eqm) = ((eqm)->Cat(toBin_((eql)->nh)));
(eqm) = ((eqm)->Cat(toBin_((eql)->ni)));
(eqm) = ((eqm)->Cat(toBin_((eql)->nj)));
(eqm) = ((eqm)->Cat(toBin_((eql)->nk)));
(eqm) = ((eqm)->Cat(toBin_((eql)->no)));
(eqm) = ((eqm)->Cat(toBin_((eql)->lw)));
return eqm;
}
// _fromBin
static cld* erb(cld* erc, Array_<uint8_t>* erd, int64_t* ere){
cld* erf = nullptr;
(erf) = (new cld());
((erf)->eop) = (fromBin_<gd*>((erd), (*ere)));
((erf)->eor) = (fromBin_<bvs*>((erd), (*ere)));
((erf)->eox) = (fromBin_<List_<cle*>*>((erd), (*ere)));
((erf)->epd) = (fromBin_<bvs*>((erd), (*ere)));
((erf)->bwb) = (fromBin_<gb*>((erd), (*ere)));
((erf)->ne) = (fromBin_<ga*>((erd), (*ere)));
((erf)->nf) = (fromBin_<Array_<char16_t>*>((erd), (*ere)));
((erf)->ng) = (fromBin_<fx*>((erd), (*ere)));
((erf)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((erd), (*ere)));
((erf)->ni) = (fromBin_<Array_<char16_t>*>((erd), (*ere)));
((erf)->nj) = (fromBin_<fx*>((erd), (*ere)));
((erf)->nk) = (fromBin_<fy*>((erd), (*ere)));
((erf)->no) = (fromBin_<bool>((erd), (*ere)));
((erf)->lw) = (fromBin_<int64_t>((erd), (*ere)));
return erf;
}
// buildSwitch
static void clg(clh* erg /*ast*/, ge* erh /*breakStat*/, ge* eri /*skipStat*/){
bby* erj = nullptr; // infoMe
bby* erk = nullptr; // info
bool ern = false; // useSwitch
List_<cli*>* ert = nullptr; // items
cli* erw = nullptr; // item
List_<bvu*>* erx = nullptr; // items2
bvu* esa = nullptr; // exprs
List_<cli*>* esg = nullptr; // items
cli* esi = nullptr; // item
List_<bvu*>* esj = nullptr; // items2
bvu* esl = nullptr; // exprs
bool ess = false; // first
List_<cli*>* est = nullptr; // items
cli* esv = nullptr; // item
bool esz = false; // first2
List_<bvu*>* eta = nullptr; // items2
bvu* etc = nullptr; // exprs
(erj) = ((bbx)((erg)));
(erk) = ((bbx)(((erg)->bwb)));
if(!((erk)->bca)){
((erk)->bca) = (true);
uh<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), ((erg)->bwb));
}
(ern) = (false);
if(((((bdg)((((erg)->erq)->pf))) || ((err)((((erg)->erq)->pf)))) || ((cmx)((((erg)->erq)->pf)))) || (((((erg)->erq)->pf)->lw) == (1025LL))){
(ern) = (true);
(ert) = ((erg)->eru);
awe<List_<cli*>*>((ert), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cli*>*>((ert), (new Array_<int64_t>(1, (0LL)))))){
(erw) = (awi<List_<cli*>*, cli*>((ert), (new Array_<int64_t>(1, (0LL)))));
(erx) = ((erw)->ery);
awe<List_<bvu*>*>((erx), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvu*>*>((erx), (new Array_<int64_t>(1, (0LL)))))){
(esa) = (awi<List_<bvu*>*, bvu*>((erx), (new Array_<int64_t>(1, (0LL)))));
if(((aye<int64_t>((((esa)->bxq)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL)) || (!eqAddr_(((esa)->bxv), (nullptr)))){
(ern) = (false);
goto erp;
}
ays<List_<bvu*>*>((erx), (new Array_<int64_t>(1, (0LL))));
}
ays<List_<cli*>*>((ert), (new Array_<int64_t>(1, (0LL))));
}
}
erp:;
if(ern){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028')));
(eou)(((erg)->erq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(esg) = ((erg)->eru);
awe<List_<cli*>*>((esg), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cli*>*>((esg), (new Array_<int64_t>(1, (0LL)))))){
(esi) = (awi<List_<cli*>*, cli*>((esg), (new Array_<int64_t>(1, (0LL)))));
(esj) = ((esi)->ery);
awe<List_<bvu*>*>((esj), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvu*>*>((esj), (new Array_<int64_t>(1, (0LL)))))){
(esl) = (awi<List_<bvu*>*, bvu*>((esj), (new Array_<int64_t>(1, (0LL)))));
if(!(eqAddr_(((esl)->bxv), (nullptr)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020')));
(eou)(((esl)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003A', u'\u000A')));
ays<List_<bvu*>*>((esj), (new Array_<int64_t>(1, (0LL))));
}
(clw)(((esi)->esm), (erg), (eri));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
ays<List_<cli*>*>((esg), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((erg)->eso), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
(clw)(((erg)->eso), (erg), (eri));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((erk)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))));
(eou)(((erg)->erq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
(ess) = (true);
(est) = ((erg)->eru);
awe<List_<cli*>*>((est), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cli*>*>((est), (new Array_<int64_t>(1, (0LL)))))){
(esv) = (awi<List_<cli*>*, cli*>((est), (new Array_<int64_t>(1, (0LL)))));
if(ess){
(ess) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(esz) = (true);
(eta) = ((esv)->ery);
awe<List_<bvu*>*>((eta), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvu*>*>((eta), (new Array_<int64_t>(1, (0LL)))))){
(etc) = (awi<List_<bvu*>*, bvu*>((eta), (new Array_<int64_t>(1, (0LL)))));
if(esz){
(esz) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0020', u'\u007C', u'\u007C', u'\u0020')));
}
if(eqAddr_(((etc)->bxv), (nullptr))){
if((caf)((((erg)->erq)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((erk)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028'))));
(eou)(((etc)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((erk)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0028'))));
(eou)(((etc)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((etc)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((erk)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0020', u'\u0026', u'\u0026', u'\u0020'))->Cat(v<Array_<char16_t>*>(((erk)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0028')))));
(eou)(((etc)->bxv));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ays<List_<bvu*>*>((eta), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(clw)(((esv)->esm), (erh), (eri));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<cli*>*>((est), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((erg)->eso), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B')));
(clw)(((erg)->eso), (erh), (eri));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
if((!eqAddr_(((erj)->cav), (nullptr))) && ((erj)->cbb)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((erj)->cav), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void etq(cli* etr){
((etr)->ery) = (nullptr);
((etr)->esm) = (nullptr);
((etr)->ne) = (nullptr);
((etr)->nf) = (nullptr);
((etr)->ng) = (nullptr);
((etr)->nh) = (nullptr);
((etr)->ni) = (nullptr);
((etr)->nj) = (nullptr);
((etr)->nk) = (nullptr);
}
// _copy
static cli* ets(cli* ett){
cli* etu = nullptr;
(etu) = (new cli());
((etu)->ery) = (copy_((ett)->ery));
((etu)->esm) = (copy_((ett)->esm));
((etu)->ne) = (copy_((ett)->ne));
((etu)->nf) = (copy_((ett)->nf));
((etu)->ng) = (copy_((ett)->ng));
((etu)->nh) = (copy_((ett)->nh));
((etu)->ni) = (copy_((ett)->ni));
((etu)->nj) = (copy_((ett)->nj));
((etu)->nk) = (copy_((ett)->nk));
((etu)->no) = ((ett)->no);
((etu)->lw) = ((ett)->lw);
return as_<cli>(classTable_, (etu), 94);
}
// _toBin
static Array_<uint8_t>* etv(cli* etw){
Array_<uint8_t>* etx = nullptr;
(etx) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(etx) = ((etx)->Cat(toBin_((etw)->ery)));
(etx) = ((etx)->Cat(toBin_((etw)->esm)));
(etx) = ((etx)->Cat(toBin_((etw)->ne)));
(etx) = ((etx)->Cat(toBin_((etw)->nf)));
(etx) = ((etx)->Cat(toBin_((etw)->ng)));
(etx) = ((etx)->Cat(toBin_((etw)->nh)));
(etx) = ((etx)->Cat(toBin_((etw)->ni)));
(etx) = ((etx)->Cat(toBin_((etw)->nj)));
(etx) = ((etx)->Cat(toBin_((etw)->nk)));
(etx) = ((etx)->Cat(toBin_((etw)->no)));
(etx) = ((etx)->Cat(toBin_((etw)->lw)));
return etx;
}
// _fromBin
static cli* euj(cli* euk, Array_<uint8_t>* eul, int64_t* eum){
cli* eun = nullptr;
(eun) = (new cli());
((eun)->ery) = (fromBin_<List_<bvu*>*>((eul), (*eum)));
((eun)->esm) = (fromBin_<bvs*>((eul), (*eum)));
((eun)->ne) = (fromBin_<ga*>((eul), (*eum)));
((eun)->nf) = (fromBin_<Array_<char16_t>*>((eul), (*eum)));
((eun)->ng) = (fromBin_<fx*>((eul), (*eum)));
((eun)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eul), (*eum)));
((eun)->ni) = (fromBin_<Array_<char16_t>*>((eul), (*eum)));
((eun)->nj) = (fromBin_<fx*>((eul), (*eum)));
((eun)->nk) = (fromBin_<fy*>((eul), (*eum)));
((eun)->no) = (fromBin_<bool>((eul), (*eum)));
((eun)->lw) = (fromBin_<int64_t>((eul), (*eum)));
return eun;
}
// _dtor
static void euo(clh* eup){
((eup)->erq) = (nullptr);
((eup)->eru) = (nullptr);
((eup)->eso) = (nullptr);
((eup)->bwb) = (nullptr);
((eup)->ne) = (nullptr);
((eup)->nf) = (nullptr);
((eup)->ng) = (nullptr);
((eup)->nh) = (nullptr);
((eup)->ni) = (nullptr);
((eup)->nj) = (nullptr);
((eup)->nk) = (nullptr);
}
// _copy
static clh* euq(clh* eur){
clh* eus = nullptr;
(eus) = (new clh());
((eus)->erq) = (copy_((eur)->erq));
((eus)->eru) = (copy_((eur)->eru));
((eus)->eso) = (copy_((eur)->eso));
((eus)->bwb) = (copy_((eur)->bwb));
((eus)->ne) = (copy_((eur)->ne));
((eus)->nf) = (copy_((eur)->nf));
((eus)->ng) = (copy_((eur)->ng));
((eus)->nh) = (copy_((eur)->nh));
((eus)->ni) = (copy_((eur)->ni));
((eus)->nj) = (copy_((eur)->nj));
((eus)->nk) = (copy_((eur)->nk));
((eus)->no) = ((eur)->no);
((eus)->lw) = ((eur)->lw);
return as_<clh>(classTable_, (eus), 92);
}
// _toBin
static Array_<uint8_t>* eut(clh* euu){
Array_<uint8_t>* euv = nullptr;
(euv) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(euv) = ((euv)->Cat(toBin_((euu)->erq)));
(euv) = ((euv)->Cat(toBin_((euu)->eru)));
(euv) = ((euv)->Cat(toBin_((euu)->eso)));
(euv) = ((euv)->Cat(toBin_((euu)->bwb)));
(euv) = ((euv)->Cat(toBin_((euu)->ne)));
(euv) = ((euv)->Cat(toBin_((euu)->nf)));
(euv) = ((euv)->Cat(toBin_((euu)->ng)));
(euv) = ((euv)->Cat(toBin_((euu)->nh)));
(euv) = ((euv)->Cat(toBin_((euu)->ni)));
(euv) = ((euv)->Cat(toBin_((euu)->nj)));
(euv) = ((euv)->Cat(toBin_((euu)->nk)));
(euv) = ((euv)->Cat(toBin_((euu)->no)));
(euv) = ((euv)->Cat(toBin_((euu)->lw)));
return euv;
}
// _fromBin
static clh* evj(clh* evk, Array_<uint8_t>* evl, int64_t* evm){
clh* evn = nullptr;
(evn) = (new clh());
((evn)->erq) = (fromBin_<gd*>((evl), (*evm)));
((evn)->eru) = (fromBin_<List_<cli*>*>((evl), (*evm)));
((evn)->eso) = (fromBin_<bvs*>((evl), (*evm)));
((evn)->bwb) = (fromBin_<gb*>((evl), (*evm)));
((evn)->ne) = (fromBin_<ga*>((evl), (*evm)));
((evn)->nf) = (fromBin_<Array_<char16_t>*>((evl), (*evm)));
((evn)->ng) = (fromBin_<fx*>((evl), (*evm)));
((evn)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((evl), (*evm)));
((evn)->ni) = (fromBin_<Array_<char16_t>*>((evl), (*evm)));
((evn)->nj) = (fromBin_<fx*>((evl), (*evm)));
((evn)->nk) = (fromBin_<fy*>((evl), (*evm)));
((evn)->no) = (fromBin_<bool>((evl), (*evm)));
((evn)->lw) = (fromBin_<int64_t>((evl), (*evm)));
return evn;
}
// buildWhile
static void clk(cll* evo /*ast*/, ge* evp /*breakStat*/, ge* evq /*skipStat*/){
bby* evr = nullptr; // infoMe
(evr) = ((bbx)((evo)));
if(eqAddr_(((evo)->evt), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u003B', u'\u003B', u'\u0029', u'\u007B', u'\u000A')));
(bex)(((evo)->evv), (evo), (evo));
if((!eqAddr_(((evr)->cay), (nullptr))) && ((evr)->cbc)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((evr)->cay), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if((!eqAddr_(((evr)->cav), (nullptr))) && ((evr)->cbb)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((evr)->cav), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
return;
}
if((evo)->ewb){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0064', u'\u006F', u'\u007B', u'\u000A')));
(bex)(((evo)->evv), (evo), (evo));
if((!eqAddr_(((evr)->cay), (nullptr))) && ((evr)->cbc)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((evr)->cay), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(eou)(((evo)->evt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')));
if((!eqAddr_(((evr)->cav), (nullptr))) && ((evr)->cbb)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((evr)->cav), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
return;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(eou)(((evo)->evt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(bex)(((evo)->evv), (evo), (evo));
if((!eqAddr_(((evr)->cay), (nullptr))) && ((evr)->cbc)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((evr)->cay), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if((!eqAddr_(((evr)->cav), (nullptr))) && ((evr)->cbb)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((evr)->cav), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void ewl(clm* ewm){
((ewm)->bwb) = (nullptr);
((ewm)->ne) = (nullptr);
((ewm)->nf) = (nullptr);
((ewm)->ng) = (nullptr);
((ewm)->nh) = (nullptr);
((ewm)->ni) = (nullptr);
((ewm)->nj) = (nullptr);
((ewm)->nk) = (nullptr);
}
// _copy
static clm* ewn(clm* ewo){
clm* ewp = nullptr;
(ewp) = (new clm());
((ewp)->bwb) = (copy_((ewo)->bwb));
((ewp)->ne) = (copy_((ewo)->ne));
((ewp)->nf) = (copy_((ewo)->nf));
((ewp)->ng) = (copy_((ewo)->ng));
((ewp)->nh) = (copy_((ewo)->nh));
((ewp)->ni) = (copy_((ewo)->ni));
((ewp)->nj) = (copy_((ewo)->nj));
((ewp)->nk) = (copy_((ewo)->nk));
((ewp)->no) = ((ewo)->no);
((ewp)->lw) = ((ewo)->lw);
return as_<clm>(classTable_, (ewp), 96);
}
// _toBin
static Array_<uint8_t>* ewq(clm* ewr){
Array_<uint8_t>* ews = nullptr;
(ews) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ews) = ((ews)->Cat(toBin_((ewr)->bwb)));
(ews) = ((ews)->Cat(toBin_((ewr)->ne)));
(ews) = ((ews)->Cat(toBin_((ewr)->nf)));
(ews) = ((ews)->Cat(toBin_((ewr)->ng)));
(ews) = ((ews)->Cat(toBin_((ewr)->nh)));
(ews) = ((ews)->Cat(toBin_((ewr)->ni)));
(ews) = ((ews)->Cat(toBin_((ewr)->nj)));
(ews) = ((ews)->Cat(toBin_((ewr)->nk)));
(ews) = ((ews)->Cat(toBin_((ewr)->no)));
(ews) = ((ews)->Cat(toBin_((ewr)->lw)));
return ews;
}
// _fromBin
static clm* exd(clm* exe, Array_<uint8_t>* exf, int64_t* exg){
clm* exh = nullptr;
(exh) = (new clm());
((exh)->bwb) = (fromBin_<gb*>((exf), (*exg)));
((exh)->ne) = (fromBin_<ga*>((exf), (*exg)));
((exh)->nf) = (fromBin_<Array_<char16_t>*>((exf), (*exg)));
((exh)->ng) = (fromBin_<fx*>((exf), (*exg)));
((exh)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((exf), (*exg)));
((exh)->ni) = (fromBin_<Array_<char16_t>*>((exf), (*exg)));
((exh)->nj) = (fromBin_<fx*>((exf), (*exg)));
((exh)->nk) = (fromBin_<fy*>((exf), (*exg)));
((exh)->no) = (fromBin_<bool>((exf), (*exg)));
((exh)->lw) = (fromBin_<int64_t>((exf), (*exg)));
return exh;
}
// _dtor
static void exi(cll* exj){
((exj)->evt) = (nullptr);
((exj)->evv) = (nullptr);
((exj)->bwb) = (nullptr);
((exj)->ne) = (nullptr);
((exj)->nf) = (nullptr);
((exj)->ng) = (nullptr);
((exj)->nh) = (nullptr);
((exj)->ni) = (nullptr);
((exj)->nj) = (nullptr);
((exj)->nk) = (nullptr);
}
// _copy
static cll* exk(cll* exl){
cll* exm = nullptr;
(exm) = (new cll());
((exm)->evt) = (copy_((exl)->evt));
((exm)->ewb) = ((exl)->ewb);
((exm)->evv) = (copy_((exl)->evv));
((exm)->bwb) = (copy_((exl)->bwb));
((exm)->ne) = (copy_((exl)->ne));
((exm)->nf) = (copy_((exl)->nf));
((exm)->ng) = (copy_((exl)->ng));
((exm)->nh) = (copy_((exl)->nh));
((exm)->ni) = (copy_((exl)->ni));
((exm)->nj) = (copy_((exl)->nj));
((exm)->nk) = (copy_((exl)->nk));
((exm)->no) = ((exl)->no);
((exm)->lw) = ((exl)->lw);
return as_<cll>(classTable_, (exm), 98);
}
// _toBin
static Array_<uint8_t>* exn(cll* exo){
Array_<uint8_t>* exp = nullptr;
(exp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(exp) = ((exp)->Cat(toBin_((exo)->evt)));
(exp) = ((exp)->Cat(toBin_((exo)->ewb)));
(exp) = ((exp)->Cat(toBin_((exo)->evv)));
(exp) = ((exp)->Cat(toBin_((exo)->bwb)));
(exp) = ((exp)->Cat(toBin_((exo)->ne)));
(exp) = ((exp)->Cat(toBin_((exo)->nf)));
(exp) = ((exp)->Cat(toBin_((exo)->ng)));
(exp) = ((exp)->Cat(toBin_((exo)->nh)));
(exp) = ((exp)->Cat(toBin_((exo)->ni)));
(exp) = ((exp)->Cat(toBin_((exo)->nj)));
(exp) = ((exp)->Cat(toBin_((exo)->nk)));
(exp) = ((exp)->Cat(toBin_((exo)->no)));
(exp) = ((exp)->Cat(toBin_((exo)->lw)));
return exp;
}
// _fromBin
static cll* eyd(cll* eye, Array_<uint8_t>* eyf, int64_t* eyg){
cll* eyh = nullptr;
(eyh) = (new cll());
((eyh)->evt) = (fromBin_<gd*>((eyf), (*eyg)));
((eyh)->ewb) = (fromBin_<bool>((eyf), (*eyg)));
((eyh)->evv) = (fromBin_<List_<ge*>*>((eyf), (*eyg)));
((eyh)->bwb) = (fromBin_<gb*>((eyf), (*eyg)));
((eyh)->ne) = (fromBin_<ga*>((eyf), (*eyg)));
((eyh)->nf) = (fromBin_<Array_<char16_t>*>((eyf), (*eyg)));
((eyh)->ng) = (fromBin_<fx*>((eyf), (*eyg)));
((eyh)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eyf), (*eyg)));
((eyh)->ni) = (fromBin_<Array_<char16_t>*>((eyf), (*eyg)));
((eyh)->nj) = (fromBin_<fx*>((eyf), (*eyg)));
((eyh)->nk) = (fromBin_<fy*>((eyf), (*eyg)));
((eyh)->no) = (fromBin_<bool>((eyf), (*eyg)));
((eyh)->lw) = (fromBin_<int64_t>((eyf), (*eyg)));
return eyh;
}
// buildFor
static void clo(clp* eyi /*ast*/, ge* eyj /*breakStat*/, ge* eyk /*skipStat*/){
bby* eyl = nullptr; // infoMe
bby* eym = nullptr; // info
Array_<char16_t>* eyp = nullptr; // endId
int64_t eyu = 0; // step
(eyl) = ((bbx)((eyi)));
(eym) = ((bbx)(((eyi)->bwb)));
if(!((eym)->bca)){
((eym)->bca) = (true);
uh<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), ((eyi)->bwb));
}
(eyp) = ((eyq)((((eyi)->eyr)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0066', u'\u006F', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((eym)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0020', u'\u003D', u'\u0020', u'\u0028'))));
(eou)(((eyi)->eys));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>((eyp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0020', u'\u003D', u'\u0020', u'\u0028'))));
(eou)(((eyi)->eyr));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u0020'))->Cat(v<Array_<char16_t>*>(((eym)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0020'))));
if(!(((((eyi)->eyt)->lw) == (67585LL)) && ((bdg)((((eyi)->eyr)->pf))))){
throw 0xE9170000U;
}
(eyu) = (static_cast<int64_t>((as_<bxl>(classTable_, ((eyi)->eyt), 70))->bxn));
if((eyu) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003C', u'\u003D')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003E', u'\u003D')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>((eyp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003B', u'\u0020'))->Cat(v<Array_<char16_t>*>(((eym)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0020')))));
if((eyu) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u002B', u'\u003D', u'\u0020', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u002D', u'\u003D', u'\u0020', u'\u0028')));
}
(eou)(((eyi)->eyt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
(bex)(((eyi)->ezb), (eyi), (eyi));
if((!eqAddr_(((eyl)->cay), (nullptr))) && ((eyl)->cbc)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((eyl)->cay), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if((!eqAddr_(((eyl)->cav), (nullptr))) && ((eyl)->cbb)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((eyl)->cav), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void ezg(clp* ezh){
((ezh)->eys) = (nullptr);
((ezh)->eyr) = (nullptr);
((ezh)->eyt) = (nullptr);
((ezh)->ezb) = (nullptr);
((ezh)->bwb) = (nullptr);
((ezh)->ne) = (nullptr);
((ezh)->nf) = (nullptr);
((ezh)->ng) = (nullptr);
((ezh)->nh) = (nullptr);
((ezh)->ni) = (nullptr);
((ezh)->nj) = (nullptr);
((ezh)->nk) = (nullptr);
}
// _copy
static clp* ezi(clp* ezj){
clp* ezk = nullptr;
(ezk) = (new clp());
((ezk)->eys) = (copy_((ezj)->eys));
((ezk)->eyr) = (copy_((ezj)->eyr));
((ezk)->eyt) = (copy_((ezj)->eyt));
((ezk)->ezb) = (copy_((ezj)->ezb));
((ezk)->bwb) = (copy_((ezj)->bwb));
((ezk)->ne) = (copy_((ezj)->ne));
((ezk)->nf) = (copy_((ezj)->nf));
((ezk)->ng) = (copy_((ezj)->ng));
((ezk)->nh) = (copy_((ezj)->nh));
((ezk)->ni) = (copy_((ezj)->ni));
((ezk)->nj) = (copy_((ezj)->nj));
((ezk)->nk) = (copy_((ezj)->nk));
((ezk)->no) = ((ezj)->no);
((ezk)->lw) = ((ezj)->lw);
return as_<clp>(classTable_, (ezk), 100);
}
// _toBin
static Array_<uint8_t>* ezl(clp* ezm){
Array_<uint8_t>* ezn = nullptr;
(ezn) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->eys)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->eyr)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->eyt)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->ezb)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->bwb)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->ne)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->nf)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->ng)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->nh)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->ni)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->nj)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->nk)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->no)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->lw)));
return ezn;
}
// _fromBin
static clp* fac(clp* fad, Array_<uint8_t>* fae, int64_t* faf){
clp* fag = nullptr;
(fag) = (new clp());
((fag)->eys) = (fromBin_<gd*>((fae), (*faf)));
((fag)->eyr) = (fromBin_<gd*>((fae), (*faf)));
((fag)->eyt) = (fromBin_<gd*>((fae), (*faf)));
((fag)->ezb) = (fromBin_<List_<ge*>*>((fae), (*faf)));
((fag)->bwb) = (fromBin_<gb*>((fae), (*faf)));
((fag)->ne) = (fromBin_<ga*>((fae), (*faf)));
((fag)->nf) = (fromBin_<Array_<char16_t>*>((fae), (*faf)));
((fag)->ng) = (fromBin_<fx*>((fae), (*faf)));
((fag)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fae), (*faf)));
((fag)->ni) = (fromBin_<Array_<char16_t>*>((fae), (*faf)));
((fag)->nj) = (fromBin_<fx*>((fae), (*faf)));
((fag)->nk) = (fromBin_<fy*>((fae), (*faf)));
((fag)->no) = (fromBin_<bool>((fae), (*faf)));
((fag)->lw) = (fromBin_<int64_t>((fae), (*faf)));
return fag;
}
// buildTry
static void clr(bvq* fah /*ast*/, ge* fai /*breakStat*/, ge* faj /*skipStat*/){
bby* fak = nullptr; // infoMe
bby* fal = nullptr; // info
bool fat = false; // first
List_<bvt*>* fau = nullptr; // items
bvt* faw = nullptr; // item
bool fba = false; // first2
List_<bvu*>* fbb = nullptr; // items2
bvu* fbd = nullptr; // exprs
(fak) = ((bbx)((fah)));
(fal) = ((bbx)(((fah)->bwb)));
if(!((fal)->bca)){
((fal)->bca) = (true);
uh<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), ((fah)->bwb));
}
if(!eqAddr_(((fah)->bwj), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
(clw)(((fah)->bwf), (fai), (faj));
if(!eqAddr_(((fah)->bwj), (nullptr))){
(clw)(((fah)->bwj), (fai), (faj));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fal)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
(fat) = (true);
(fau) = ((fah)->bwg);
awe<List_<bvt*>*>((fau), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvt*>*>((fau), (new Array_<int64_t>(1, (0LL)))))){
(faw) = (awi<List_<bvt*>*, bvt*>((fau), (new Array_<int64_t>(1, (0LL)))));
if(fat){
(fat) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(fba) = (true);
(fbb) = ((faw)->bxd);
awe<List_<bvu*>*>((fbb), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvu*>*>((fbb), (new Array_<int64_t>(1, (0LL)))))){
(fbd) = (awi<List_<bvu*>*, bvu*>((fbb), (new Array_<int64_t>(1, (0LL)))));
if(fba){
(fba) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0020', u'\u007C', u'\u007C', u'\u0020')));
}
if(eqAddr_(((fbd)->bxv), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fal)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0028'))));
(eou)(((fbd)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((fbd)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fal)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0020', u'\u0026', u'\u0026', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fal)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0028')))));
(eou)(((fbd)->bxv));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ays<List_<bvu*>*>((fbb), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(clw)(((faw)->bxg), (fai), (faj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<bvt*>*>((fau), (new Array_<int64_t>(1, (0LL))));
}
if(fat){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007B', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u003B', u'\u000A', u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if(!eqAddr_(((fah)->bwj), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u007D', u'\u000A', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
(clw)(((fah)->bwj), (fai), (faj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u003B', u'\u000A', u'\u007D', u'\u000A')));
}
if((!eqAddr_(((fak)->cav), (nullptr))) && ((fak)->cbb)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fak)->cav), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// buildThrow
static void clt(clu* fbr /*ast*/){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020')));
(eou)(((fbr)->fbs));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// _dtor
static void fbt(clu* fbu){
((fbu)->fbs) = (nullptr);
((fbu)->ne) = (nullptr);
((fbu)->nf) = (nullptr);
((fbu)->ng) = (nullptr);
((fbu)->nh) = (nullptr);
((fbu)->ni) = (nullptr);
((fbu)->nj) = (nullptr);
((fbu)->nk) = (nullptr);
}
// _copy
static clu* fbv(clu* fbw){
clu* fbx = nullptr;
(fbx) = (new clu());
((fbx)->fbs) = (copy_((fbw)->fbs));
((fbx)->ne) = (copy_((fbw)->ne));
((fbx)->nf) = (copy_((fbw)->nf));
((fbx)->ng) = (copy_((fbw)->ng));
((fbx)->nh) = (copy_((fbw)->nh));
((fbx)->ni) = (copy_((fbw)->ni));
((fbx)->nj) = (copy_((fbw)->nj));
((fbx)->nk) = (copy_((fbw)->nk));
((fbx)->no) = ((fbw)->no);
((fbx)->lw) = ((fbw)->lw);
return as_<clu>(classTable_, (fbx), 102);
}
// _toBin
static Array_<uint8_t>* fby(clu* fbz){
Array_<uint8_t>* fca = nullptr;
(fca) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fca) = ((fca)->Cat(toBin_((fbz)->fbs)));
(fca) = ((fca)->Cat(toBin_((fbz)->ne)));
(fca) = ((fca)->Cat(toBin_((fbz)->nf)));
(fca) = ((fca)->Cat(toBin_((fbz)->ng)));
(fca) = ((fca)->Cat(toBin_((fbz)->nh)));
(fca) = ((fca)->Cat(toBin_((fbz)->ni)));
(fca) = ((fca)->Cat(toBin_((fbz)->nj)));
(fca) = ((fca)->Cat(toBin_((fbz)->nk)));
(fca) = ((fca)->Cat(toBin_((fbz)->no)));
(fca) = ((fca)->Cat(toBin_((fbz)->lw)));
return fca;
}
// _fromBin
static clu* fcl(clu* fcm, Array_<uint8_t>* fcn, int64_t* fco){
clu* fcp = nullptr;
(fcp) = (new clu());
((fcp)->fbs) = (fromBin_<gd*>((fcn), (*fco)));
((fcp)->ne) = (fromBin_<ga*>((fcn), (*fco)));
((fcp)->nf) = (fromBin_<Array_<char16_t>*>((fcn), (*fco)));
((fcp)->ng) = (fromBin_<fx*>((fcn), (*fco)));
((fcp)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fcn), (*fco)));
((fcp)->ni) = (fromBin_<Array_<char16_t>*>((fcn), (*fco)));
((fcp)->nj) = (fromBin_<fx*>((fcn), (*fco)));
((fcp)->nk) = (fromBin_<fy*>((fcn), (*fco)));
((fcp)->no) = (fromBin_<bool>((fcn), (*fco)));
((fcp)->lw) = (fromBin_<int64_t>((fcn), (*fco)));
return fcp;
}
// buildBlock
static void clw(bvs* fcq /*ast*/, ge* fcr /*breakStat*/, ge* fcs /*skipStat*/){
bby* fct = nullptr; // infoMe
(fct) = ((bbx)((fcq)));
(bex)(((fcq)->bwe), (fcr), (fcs));
if((!eqAddr_(((fct)->cav), (nullptr))) && ((fct)->cbb)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fct)->cav), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// buildRet
static void cly(clz* fcw /*ast*/){
if(eqAddr_(((fcw)->fcy), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020')));
(eou)(((fcw)->fcy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
}
// _dtor
static void fdb(clz* fdc){
((fdc)->fcy) = (nullptr);
((fdc)->ne) = (nullptr);
((fdc)->nf) = (nullptr);
((fdc)->ng) = (nullptr);
((fdc)->nh) = (nullptr);
((fdc)->ni) = (nullptr);
((fdc)->nj) = (nullptr);
((fdc)->nk) = (nullptr);
}
// _copy
static clz* fdd(clz* fde){
clz* fdf = nullptr;
(fdf) = (new clz());
((fdf)->fcy) = (copy_((fde)->fcy));
((fdf)->ne) = (copy_((fde)->ne));
((fdf)->nf) = (copy_((fde)->nf));
((fdf)->ng) = (copy_((fde)->ng));
((fdf)->nh) = (copy_((fde)->nh));
((fdf)->ni) = (copy_((fde)->ni));
((fdf)->nj) = (copy_((fde)->nj));
((fdf)->nk) = (copy_((fde)->nk));
((fdf)->no) = ((fde)->no);
((fdf)->lw) = ((fde)->lw);
return as_<clz>(classTable_, (fdf), 104);
}
// _toBin
static Array_<uint8_t>* fdg(clz* fdh){
Array_<uint8_t>* fdi = nullptr;
(fdi) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fdi) = ((fdi)->Cat(toBin_((fdh)->fcy)));
(fdi) = ((fdi)->Cat(toBin_((fdh)->ne)));
(fdi) = ((fdi)->Cat(toBin_((fdh)->nf)));
(fdi) = ((fdi)->Cat(toBin_((fdh)->ng)));
(fdi) = ((fdi)->Cat(toBin_((fdh)->nh)));
(fdi) = ((fdi)->Cat(toBin_((fdh)->ni)));
(fdi) = ((fdi)->Cat(toBin_((fdh)->nj)));
(fdi) = ((fdi)->Cat(toBin_((fdh)->nk)));
(fdi) = ((fdi)->Cat(toBin_((fdh)->no)));
(fdi) = ((fdi)->Cat(toBin_((fdh)->lw)));
return fdi;
}
// _fromBin
static clz* fdt(clz* fdu, Array_<uint8_t>* fdv, int64_t* fdw){
clz* fdx = nullptr;
(fdx) = (new clz());
((fdx)->fcy) = (fromBin_<gd*>((fdv), (*fdw)));
((fdx)->ne) = (fromBin_<ga*>((fdv), (*fdw)));
((fdx)->nf) = (fromBin_<Array_<char16_t>*>((fdv), (*fdw)));
((fdx)->ng) = (fromBin_<fx*>((fdv), (*fdw)));
((fdx)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fdv), (*fdw)));
((fdx)->ni) = (fromBin_<Array_<char16_t>*>((fdv), (*fdw)));
((fdx)->nj) = (fromBin_<fx*>((fdv), (*fdw)));
((fdx)->nk) = (fromBin_<fy*>((fdv), (*fdw)));
((fdx)->no) = (fromBin_<bool>((fdv), (*fdw)));
((fdx)->lw) = (fromBin_<int64_t>((fdv), (*fdw)));
return fdx;
}
// buildDo
static void cmb(bwq* fdy /*ast*/){
(eou)(((fdy)->bxa));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// buildBreak
static void cmd(ge* fdz /*ast*/, ge* fea /*breakStat*/){
bby* fee = nullptr; // info
if(!((aye<int64_t>((((fdz)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
throw 0xE9170000U;
}
if(eqAddr_(((fdz)->nj), (fea))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
}
else{
(fee) = ((bbx)(((fdz)->nj)));
((fee)->cbb) = (true);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0067', u'\u006F', u'\u0074', u'\u006F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fee)->cav), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
}
// buildSkip
static void cmf(ge* fef /*ast*/, ge* feg /*skipStat*/){
bby* fek = nullptr; // info
if(!((aye<int64_t>((((fef)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (16843264LL))) == (16843264LL))){
throw 0xE9170000U;
}
if(eqAddr_(((fef)->nj), (feg))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0069', u'\u006E', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else{
(fek) = ((bbx)(((fef)->nj)));
((fek)->cbc) = (true);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0067', u'\u006F', u'\u0074', u'\u006F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fek)->cay), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
}
// buildAssert
static void cmh(cmi* fel /*ast*/){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u0028')));
(eou)(((fel)->fem));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u0029', u'\u0029', u'\u007B', u'\u000A', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020'))->Cat(v<uint32_t>((0xE9170000U), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0055', u'\u003B', u'\u000A', u'\u007D', u'\u000A'))));
}
// _dtor
static void fen(cmi* feo){
((feo)->fem) = (nullptr);
((feo)->ne) = (nullptr);
((feo)->nf) = (nullptr);
((feo)->ng) = (nullptr);
((feo)->nh) = (nullptr);
((feo)->ni) = (nullptr);
((feo)->nj) = (nullptr);
((feo)->nk) = (nullptr);
}
// _copy
static cmi* fep(cmi* feq){
cmi* fer = nullptr;
(fer) = (new cmi());
((fer)->fem) = (copy_((feq)->fem));
((fer)->ne) = (copy_((feq)->ne));
((fer)->nf) = (copy_((feq)->nf));
((fer)->ng) = (copy_((feq)->ng));
((fer)->nh) = (copy_((feq)->nh));
((fer)->ni) = (copy_((feq)->ni));
((fer)->nj) = (copy_((feq)->nj));
((fer)->nk) = (copy_((feq)->nk));
((fer)->no) = ((feq)->no);
((fer)->lw) = ((feq)->lw);
return as_<cmi>(classTable_, (fer), 106);
}
// _toBin
static Array_<uint8_t>* fes(cmi* fet){
Array_<uint8_t>* feu = nullptr;
(feu) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(feu) = ((feu)->Cat(toBin_((fet)->fem)));
(feu) = ((feu)->Cat(toBin_((fet)->ne)));
(feu) = ((feu)->Cat(toBin_((fet)->nf)));
(feu) = ((feu)->Cat(toBin_((fet)->ng)));
(feu) = ((feu)->Cat(toBin_((fet)->nh)));
(feu) = ((feu)->Cat(toBin_((fet)->ni)));
(feu) = ((feu)->Cat(toBin_((fet)->nj)));
(feu) = ((feu)->Cat(toBin_((fet)->nk)));
(feu) = ((feu)->Cat(toBin_((fet)->no)));
(feu) = ((feu)->Cat(toBin_((fet)->lw)));
return feu;
}
// _fromBin
static cmi* fff(cmi* ffg, Array_<uint8_t>* ffh, int64_t* ffi){
cmi* ffj = nullptr;
(ffj) = (new cmi());
((ffj)->fem) = (fromBin_<gd*>((ffh), (*ffi)));
((ffj)->ne) = (fromBin_<ga*>((ffh), (*ffi)));
((ffj)->nf) = (fromBin_<Array_<char16_t>*>((ffh), (*ffi)));
((ffj)->ng) = (fromBin_<fx*>((ffh), (*ffi)));
((ffj)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ffh), (*ffi)));
((ffj)->ni) = (fromBin_<Array_<char16_t>*>((ffh), (*ffi)));
((ffj)->nj) = (fromBin_<fx*>((ffh), (*ffi)));
((ffj)->nk) = (fromBin_<fy*>((ffh), (*ffi)));
((ffj)->no) = (fromBin_<bool>((ffh), (*ffi)));
((ffj)->lw) = (fromBin_<int64_t>((ffh), (*ffi)));
return ffj;
}
// isNullable
static bool cms(gc* ffk /*type*/){
return ((aye<int64_t>(((ffk)->lw), (new Array_<int64_t>(1, (0LL))), (66560LL))) == (66560LL)) && (!((cmx)((ffk))));
}
// isEnum
static bool cmx(gc* ffl /*type*/){
return (((ffl)->lw) == (66565LL)) && ((((ffl)->nj)->lw) == (6LL));
}
// getId
static Array_<char16_t>* cru(){
Array_<char16_t>* ffm = nullptr; // curId
Array_<char16_t>* ffn = nullptr; // newId
int64_t ffr = 0; // idx
char16_t ffw = 0;
int64_t fgg = 0;
Array_<char16_t>* fgj = nullptr;
Array_<char16_t>* fgn = nullptr;
Array_<char16_t>* fgr = nullptr;
(ffm) = (bk);
(ffn) = (copy_(bk));
while(true){
(ffr) = (((ffn)->Len()) - (1LL));
while(true){
switch((ffn)->At(ffr)){
case u'\u007A':
((ffn)->At(ffr)) = (((ffr) == (0LL)) ? (u'\u0041') : (u'\u0030'));
break;
case u'\u0039':
((ffn)->At(ffr)) = (u'\u0041');
break;
case u'\u005A':
if((ffr) == (0LL)){
(ffn) = (newArray_<char16_t, Array_<char16_t>*>(1, (((ffn)->Len()) + (1LL))));
ehi<Array_<char16_t>*, char16_t>((ffn), (new Array_<int64_t>(1, (0LL))), (u'\u0061'));
}
else{
((ffn)->At(ffr)) = (u'\u0061');
(ffr) = ((ffr) - (1LL));
continue;
}
break;
default:
((ffn)->At(ffr)) = ((ehm)(((ffn)->At(ffr)), (1LL)));
break;
}
break;
}
switch((ffn)->Len()){
case 2LL:
fgj = ffn;
if(cmp_(fgj, (new Array_<char16_t>(2, u'\u0064', u'\u006F'))) == 0 || cmp_(fgj, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0 || cmp_(fgj, (new Array_<char16_t>(2, u'\u0069', u'\u006E'))) == 0){
continue;
}
break;
case 3LL:
fgn = ffn;
if(cmp_(fgn, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0 || cmp_(fgn, (new Array_<char16_t>(3, u'\u006C', u'\u0065', u'\u0074'))) == 0 || cmp_(fgn, (new Array_<char16_t>(3, u'\u006E', u'\u0065', u'\u0077'))) == 0 || cmp_(fgn, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0 || cmp_(fgn, (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0 || cmp_(fgn, (new Array_<char16_t>(3, u'\u004D', u'\u0061', u'\u0070'))) == 0 || cmp_(fgn, (new Array_<char16_t>(3, u'\u004E', u'\u0061', u'\u004E'))) == 0 || cmp_(fgn, (new Array_<char16_t>(3, u'\u0053', u'\u0065', u'\u0074'))) == 0){
continue;
}
break;
case 4LL:
fgr = ffn;
if(cmp_(fgr, (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u0065', u'\u0076', u'\u0061', u'\u006C'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u006E', u'\u0061', u'\u006D', u'\u0065'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u0074', u'\u0068', u'\u0069', u'\u0073'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u0076', u'\u006F', u'\u0069', u'\u0064'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u0077', u'\u0069', u'\u0074', u'\u0068'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u0044', u'\u0061', u'\u0074', u'\u0065'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u0049', u'\u006E', u'\u0074', u'\u006C'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u004A', u'\u0053', u'\u004F', u'\u004E'))) == 0 || cmp_(fgr, (new Array_<char16_t>(4, u'\u004D', u'\u0061', u'\u0074', u'\u0068'))) == 0){
continue;
}
break;
}
break;
}
(bk) = (ffn);
return ffm;
}
// search
static bix* cxd(List_<um*>* fgt /*members*/, Array_<char16_t>* fgu /*name*/){
fx* fgw = nullptr; // def
awe<List_<um*>*>((fgt), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((fgt), (new Array_<int64_t>(1, (0LL)))))){
(fgw) = ((awi<List_<um*>*, um*>((fgt), (new Array_<int64_t>(1, (0LL)))))->azl);
if(((((fgw)->lw) == (2LL)) && (!eqAddr_((((as_<bgi>(classTable_, (fgw), 38))->bgk)->nf), (nullptr)))) && (cmp_((((as_<bgi>(classTable_, (fgw), 38))->bgk)->nf), (fgu)) == 0)){
return (biw)(((as_<bgi>(classTable_, (fgw), 38))->bgk));
}
ays<List_<um*>*>((fgt), (new Array_<int64_t>(1, (0LL))));
}
if(!(false)){
throw 0xE9170000U;
}
return nullptr;
}
// buildIf
static void czn(cld* fgz /*ast*/){
bix* fha = nullptr; // infoMe
List_<cle*>* fhl = nullptr; // items
cle* fhn = nullptr; // item
(fha) = ((biw)((fgz)));
if(eqAddr_(((fgz)->eop), (nullptr))){
if(!eqAddr_(((fha)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fha)->crx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u007B', u'\u000A'))));
}
(czz)(((fgz)->eor));
if(!eqAddr_(((fha)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
return;
}
if(!eqAddr_(((fha)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fha)->crx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
(fhj)(((fgz)->eop));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(czz)(((fgz)->eor));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(fhl) = ((fgz)->eox);
awe<List_<cle*>*>((fhl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cle*>*>((fhl), (new Array_<int64_t>(1, (0LL)))))){
(fhn) = (awi<List_<cle*>*, cle*>((fhl), (new Array_<int64_t>(1, (0LL)))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
(fhj)(((fhn)->epa));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(czz)(((fhn)->epb));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<cle*>*>((fhl), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((fgz)->epd), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
(czz)(((fgz)->epd));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
// buildSwitch
static void czp(clh* fhq /*ast*/){
bix* fhr = nullptr; // infoMe
bix* fhs = nullptr; // info
bool fhv = false; // useSwitch
List_<cli*>* fhz = nullptr; // items
cli* fib = nullptr; // item
List_<bvu*>* fic = nullptr; // items2
bvu* fie = nullptr; // exprs
List_<cli*>* fim = nullptr; // items
cli* fio = nullptr; // item
List_<bvu*>* fip = nullptr; // items2
bvu* fir = nullptr; // exprs
bool fiy = false; // first
List_<cli*>* fiz = nullptr; // items
cli* fjb = nullptr; // item
bool fjf = false; // first2
List_<bvu*>* fjg = nullptr; // items2
bvu* fji = nullptr; // exprs
(fhr) = ((biw)((fhq)));
(fhs) = ((biw)(((fhq)->bwb)));
if(!((fhs)->biz)){
((fhs)->biz) = (true);
uh<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), ((fhq)->bwb));
}
(fhv) = (false);
if(((((bdg)((((fhq)->erq)->pf))) || ((err)((((fhq)->erq)->pf)))) || ((cmx)((((fhq)->erq)->pf)))) || (((((fhq)->erq)->pf)->lw) == (1025LL))){
(fhv) = (true);
(fhz) = ((fhq)->eru);
awe<List_<cli*>*>((fhz), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cli*>*>((fhz), (new Array_<int64_t>(1, (0LL)))))){
(fib) = (awi<List_<cli*>*, cli*>((fhz), (new Array_<int64_t>(1, (0LL)))));
(fic) = ((fib)->ery);
awe<List_<bvu*>*>((fic), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvu*>*>((fic), (new Array_<int64_t>(1, (0LL)))))){
(fie) = (awi<List_<bvu*>*, bvu*>((fic), (new Array_<int64_t>(1, (0LL)))));
if(((aye<int64_t>((((fie)->bxq)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL)) || (!eqAddr_(((fie)->bxv), (nullptr)))){
(fhv) = (false);
goto fhx;
}
ays<List_<bvu*>*>((fic), (new Array_<int64_t>(1, (0LL))));
}
ays<List_<cli*>*>((fhz), (new Array_<int64_t>(1, (0LL))));
}
}
fhx:;
if(fhv){
if(!eqAddr_(((fhr)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fhr)->crx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028')));
(fhj)(((fhq)->erq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(fim) = ((fhq)->eru);
awe<List_<cli*>*>((fim), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cli*>*>((fim), (new Array_<int64_t>(1, (0LL)))))){
(fio) = (awi<List_<cli*>*, cli*>((fim), (new Array_<int64_t>(1, (0LL)))));
(fip) = ((fio)->ery);
awe<List_<bvu*>*>((fip), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvu*>*>((fip), (new Array_<int64_t>(1, (0LL)))))){
(fir) = (awi<List_<bvu*>*, bvu*>((fip), (new Array_<int64_t>(1, (0LL)))));
if(!(eqAddr_(((fir)->bxv), (nullptr)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020')));
(fhj)(((fir)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003A', u'\u000A')));
ays<List_<bvu*>*>((fip), (new Array_<int64_t>(1, (0LL))));
}
(czz)(((fio)->esm));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
ays<List_<cli*>*>((fim), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((fhq)->eso), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
(czz)(((fhq)->eso));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else{
if(!eqAddr_(((fhr)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fhr)->crx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u007B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fhs)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003D'))));
(fhj)(((fhq)->erq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
(fiy) = (true);
(fiz) = ((fhq)->eru);
awe<List_<cli*>*>((fiz), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cli*>*>((fiz), (new Array_<int64_t>(1, (0LL)))))){
(fjb) = (awi<List_<cli*>*, cli*>((fiz), (new Array_<int64_t>(1, (0LL)))));
if(fiy){
(fiy) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(fjf) = (true);
(fjg) = ((fjb)->ery);
awe<List_<bvu*>*>((fjg), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvu*>*>((fjg), (new Array_<int64_t>(1, (0LL)))))){
(fji) = (awi<List_<bvu*>*, bvu*>((fjg), (new Array_<int64_t>(1, (0LL)))));
if(fjf){
(fjf) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007C', u'\u007C')));
}
if(eqAddr_(((fji)->bxv), (nullptr))){
if((fjp)((((fhq)->erq)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fhs)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0053', u'\u003D', u'\u003D', u'\u003D', u'\u0028'))));
(fhj)(((fji)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((caf)((((fhq)->erq)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fhs)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0028'))));
(fhj)(((fji)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003D', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fhs)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u003D', u'\u003D', u'\u003D', u'\u0028'))));
(fhj)(((fji)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((fji)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003C', u'\u003D'))->Cat(v<Array_<char16_t>*>(((fhs)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((fhs)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003C', u'\u003D', u'\u0028')))));
(fhj)(((fji)->bxv));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ays<List_<bvu*>*>((fjg), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(czz)(((fjb)->esm));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<cli*>*>((fiz), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((fhq)->eso), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B')));
(czz)(((fhq)->eso));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
if(!eqAddr_(((fhr)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
}
// buildWhile
static void czr(cll* fjy /*ast*/){
bix* fjz = nullptr; // infoMe
(fjz) = ((biw)((fjy)));
if(eqAddr_(((fjy)->evt), (nullptr))){
if(!eqAddr_(((fjz)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fjz)->crx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u003B', u'\u003B', u'\u0029', u'\u007B', u'\u000A')));
(bkj)(((fjy)->evv));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
return;
}
if((fjy)->ewb){
if(!eqAddr_(((fjz)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fjz)->crx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0064', u'\u006F', u'\u007B', u'\u000A')));
(bkj)(((fjy)->evv));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(fhj)(((fjy)->evt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')));
return;
}
if(!eqAddr_(((fjz)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fjz)->crx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(fhj)(((fjy)->evt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(bkj)(((fjy)->evv));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
// buildFor
static void czt(clp* fkk /*ast*/){
bix* fkl = nullptr; // infoMe
bix* fkm = nullptr; // info
Array_<char16_t>* fkp = nullptr; // endId
int64_t fkt = 0; // step
(fkl) = ((biw)((fkk)));
(fkm) = ((biw)(((fkk)->bwb)));
if(!((fkm)->biz)){
((fkm)->biz) = (true);
uh<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), ((fkk)->bwb));
}
(fkp) = ((fkq)((((fkk)->eyr)->pf)));
if(!eqAddr_(((fkl)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fkl)->crx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0066', u'\u006F', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fkm)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(fhj)(((fkk)->eys));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u002C'))->Cat(v<Array_<char16_t>*>((fkp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(fhj)(((fkk)->eyr));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u003B'))->Cat(v<Array_<char16_t>*>(((fkm)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if(!(((((fkk)->eyt)->lw) == (67585LL)) && ((bdg)((((fkk)->eyr)->pf))))){
throw 0xE9170000U;
}
(fkt) = (static_cast<int64_t>((as_<bxl>(classTable_, ((fkk)->eyt), 70))->bxn));
if((fkt) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003C', u'\u003D')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003E', u'\u003D')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((fkp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003B'))->Cat(v<Array_<char16_t>*>(((fkm)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0)))));
if((fkt) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002B', u'\u003D', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002D', u'\u003D', u'\u0028')));
}
(fhj)(((fkk)->eyt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
(bkj)(((fkk)->ezb));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
// buildTry
static void czv(bvq* fla /*ast*/){
bix* flb = nullptr; // infoMe
bix* flc = nullptr; // info
bool fli = false; // first
List_<bvt*>* flj = nullptr; // items
bvt* fll = nullptr; // item
bool flp = false; // first2
List_<bvu*>* flq = nullptr; // items2
bvu* fls = nullptr; // exprs
(flb) = ((biw)((fla)));
(flc) = ((biw)(((fla)->bwb)));
if(!((flc)->biz)){
((flc)->biz) = (true);
uh<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), ((fla)->bwb));
}
if(!eqAddr_(((flb)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((flb)->crx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
(czz)(((fla)->bwf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((flc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
(fli) = (true);
(flj) = ((fla)->bwg);
awe<List_<bvt*>*>((flj), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvt*>*>((flj), (new Array_<int64_t>(1, (0LL)))))){
(fll) = (awi<List_<bvt*>*, bvt*>((flj), (new Array_<int64_t>(1, (0LL)))));
if(fli){
(fli) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(flp) = (true);
(flq) = ((fll)->bxd);
awe<List_<bvu*>*>((flq), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvu*>*>((flq), (new Array_<int64_t>(1, (0LL)))))){
(fls) = (awi<List_<bvu*>*, bvu*>((flq), (new Array_<int64_t>(1, (0LL)))));
if(flp){
(flp) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007C', u'\u007C')));
}
if(eqAddr_(((fls)->bxv), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((flc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u003D', u'\u003D', u'\u003D', u'\u0028'))));
(fhj)(((fls)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((fls)->bxq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003C', u'\u003D'))->Cat(v<Array_<char16_t>*>(((flc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((flc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003C', u'\u003D', u'\u0028')))));
(fhj)(((fls)->bxv));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ays<List_<bvu*>*>((flq), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(czz)(((fll)->bxg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<bvt*>*>((flj), (new Array_<int64_t>(1, (0LL))));
}
if(fli){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007B', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020'))->Cat(v<Array_<char16_t>*>(((flc)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u003B', u'\u000A', u'\u007D', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if(!eqAddr_(((fla)->bwj), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u007B', u'\u000A')));
(czz)(((fla)->bwj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
// buildThrow
static void czx(clu* fme /*ast*/){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020')));
(fhj)(((fme)->fbs));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// buildBlock
static void czz(bvs* fmf /*ast*/){
bix* fmg = nullptr; // infoMe
(fmg) = ((biw)((fmf)));
if(!eqAddr_(((fmg)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fmg)->crx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u007B', u'\u000A'))));
}
(bkj)(((fmf)->bwe));
if(!eqAddr_(((fmg)->crx), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
// buildRet
static void dab(clz* fml /*ast*/){
if(eqAddr_(((fml)->fcy), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020')));
(fhj)(((fml)->fcy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
}
// buildDo
static void dad(bwq* fmp /*ast*/){
(fhj)(((fmp)->bxa));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// buildBreak
static void daf(ge* fmq /*ast*/){
bix* fmr = nullptr; // info
if(!((aye<int64_t>((((fmq)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
throw 0xE9170000U;
}
(fmr) = ((biw)(((fmq)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fmr)->crx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
// buildSkip
static void dah(ge* fms /*ast*/){
bix* fmt = nullptr; // info
if(!((aye<int64_t>((((fms)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (16843264LL))) == (16843264LL))){
throw 0xE9170000U;
}
(fmt) = ((biw)(((fms)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0069', u'\u006E', u'\u0075', u'\u0065', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fmt)->crx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
// buildAssert
static void daj(cmi* fmu /*ast*/){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u0028')));
(fhj)(((fmu)->fem));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0029', u'\u0029', u'\u007B', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020'))->Cat(v<uint32_t>((0xE9170000U), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003B', u'\u007D', u'\u000A'))));
}
// initAstImpl
static void dca(fx* fmv /*ast*/, int64_t fmw /*typeId*/, ga* fmx /*pos*/, Array_<char16_t>* fmy /*name*/, bool fmz /*setParent*/){
((fmv)->lw) = (fmw);
((fmv)->ne) = (fmx);
((fmv)->nf) = (fmy);
((fmv)->ng) = (nullptr);
((fmv)->nh) = (nullptr);
((fmv)->ni) = (nullptr);
((fmv)->nj) = (nullptr);
((fmv)->nk) = (nullptr);
((fmv)->no) = (false);
if(!eqAddr_(((fmv)->nf), (nullptr))){
(dgr)((fmv), (true));
}
if(fmz){
((fmv)->ng) = (fne<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))));
}
}
// readBuf
static char16_t dct(){
char16_t fnk = 0; // c
if((ave) == (u'\u0000')){
if((avf) == (u'\u0000')){
do{
(fnk) = (((bms)((be))) ? (u'\u0000') : ((bpq)((be))));
}while((fnk) == (u'\u000D'));
if((fnk) == (u'\u000A')){
(avc) = ((avc) + (1LL));
(avd) = (0LL);
}
else if((fnk) == (u'\u0000')){
if(!(avg)){
(avg) = (true);
(fnk) = (u'\u000A');
(avc) = ((avc) + (1LL));
(avd) = (0LL);
}
}
else{
(avd) = ((avd) + (1LL));
}
}
else{
(fnk) = (avf);
(avf) = (u'\u0000');
}
}
else{
(fnk) = (ave);
(ave) = (u'\u0000');
}
return fnk;
}
// makePos
static ga* dde(){
return (bri)((bf), (avc), (avd));
}
// charToStr
static Array_<char16_t>* ddf(char16_t fnw /*c*/){
char16_t fny = 0;
switch(fnw){
case u'\u0000':
return new Array_<char16_t>(1, u'\u0020');
break;
case u'\u000D':
if(!(false)){
throw 0xE9170000U;
}
break;
case u'\u000A':
return new Array_<char16_t>(8, u'\u0028', u'\u0052', u'\u0045', u'\u0054', u'\u0055', u'\u0052', u'\u004E', u'\u0029');
break;
case u'\u0009':
case u'\u0020':
return new Array_<char16_t>(7, u'\u0028', u'\u0053', u'\u0050', u'\u0041', u'\u0043', u'\u0045', u'\u0029');
break;
}
return v<char16_t>((fnw), (new Array_<int64_t>(1, (0LL))));
}
// addSrc
static void dea(Array_<char16_t>* fod /*name*/){
bool fof = false;
if(eqAddr_((avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (fod), (&fof))), (nullptr))){
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (fod), (nullptr));
}
}
// readFuncAttr
static Array_<char16_t>* deu(){
char16_t foh = 0; // c
Array_<char16_t>* fok = nullptr; // buf
int64_t fol = 0; // pos
(foh) = ((brk)());
if(!(((((((u'\u0061') <= (foh)) && ((foh) <= (u'\u007A'))) || (((u'\u0041') <= (foh)) && ((foh) <= (u'\u005A')))) || (((u'\u0030') <= (foh)) && ((foh) <= (u'\u0039')))) || ((foh) == (u'\u005F'))) || ((foh) == (u'\u002E')))){
(ad)((65548LL), ((dde)()), (new Array_<Array_<char16_t>*>(1, ((ddf)((foh))))));
return new Array_<char16_t>(0);
}
(fok) = (newArray_<char16_t, Array_<char16_t>*>(1, (128LL)));
(fol) = (0LL);
do{
if((fol) == (128LL)){
(ad)((65549LL), ((dde)()), (new Array_<Array_<char16_t>*>(1, (fok))));
return new Array_<char16_t>(0);
}
((fok)->At(fol)) = (foh);
(fol) = ((fol) + (1LL));
(foh) = ((bsx)());
}while(((((((u'\u0061') <= (foh)) && ((foh) <= (u'\u007A'))) || (((u'\u0041') <= (foh)) && ((foh) <= (u'\u005A')))) || (((u'\u0030') <= (foh)) && ((foh) <= (u'\u0039')))) || ((foh) == (u'\u005F'))) || ((foh) == (u'\u002E')));
(ave) = (foh);
return auw<Array_<char16_t>*>((fok), (new Array_<int64_t>(1, (0LL))), (0LL), (fol));
}
// _or
template<typename T_> static T_ dfc(T_ foq /*me_*/, Array_<int64_t>* fos /*type*/, T_ fot /*n*/){
return foq | fot;
}
// nextCharErr
static void dgi(char16_t fou /*c*/, char16_t fov /*c2*/){
(ad)((65550LL), ((dde)()), (new Array_<Array_<char16_t>*>(2, ((ddf)((fou))), ((ddf)((fov))))));
(bsw)((fov));
}
// addScopeRefeds
static void dgm(fx* fow /*ast*/, Array_<char16_t>* fox /*name*/){
avl* foy = nullptr; // scopeRefedItem
((fow)->ni) = (fox);
(foy) = (new avl());
((foy)->awk) = (fow);
((foy)->axf) = (fne<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))));
uh<List_<avl*>*, avl*>((bh), (new Array_<int64_t>(1, (0LL))), (foy));
}
// assertNextChar
static void dgn(char16_t foz /*c*/, bool fpa /*skipSpaces*/){
char16_t fpb = 0; // c2
(fpb) = ((fpa) ? ((brk)()) : ((bsx)()));
if((foz) != (fpb)){
(dgi)((foz), (fpb));
(ave) = (fpb);
}
}
// addScopeName
static void dgr(fx* fpe /*ast*/, bool fpf /*refuseReserved*/){
fx* fpj = nullptr; // scope
bool fpl = false;
fx* fpn = nullptr; // parent
bool fpo = false; // overFunc
fx* fpw = nullptr; // child
bool fpx = false;
bool fqa = false; // flag
int64_t fqf = 0; // kind
if(!(!eqAddr_(((fpe)->nf), (nullptr)))){
throw 0xE9170000U;
}
if((fpf) && ((fph)(((fpe)->nf)))){
(ad)((65537LL), ((dde)()), (new Array_<Array_<char16_t>*>(1, ((fpe)->nf))));
return;
}
(fpj) = (fne<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))));
if(!eqAddr_((avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fpj)->nh), (new Array_<int64_t>(1, (0LL))), ((fpe)->nf), (&fpl))), (nullptr))){
(ad)((65537LL), ((dde)()), (new Array_<Array_<char16_t>*>(1, ((fpe)->nf))));
}
(fpn) = (fpj);
(fpo) = (false);
while(true){
if(eqAddr_(((fpn)->ng), (nullptr))){
break;
}
if(((!eqAddr_(((fpn)->nf), (nullptr))) && (cmp_(((fpn)->nf), ((fpe)->nf)) == 0)) && (!((((fpn)->lw) == (256LL)) && (!eqAddr_(((fpn)->ni), (nullptr)))))){
(ad)((65538LL), ((dde)()), (new Array_<Array_<char16_t>*>(1, ((fpe)->nf))));
return;
}
(fpw) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fpn)->nh), (new Array_<int64_t>(1, (0LL))), ((fpe)->nf), (&fpx)));
if(!eqAddr_((fpw), (nullptr))){
(fqa) = (false);
if(fpo){
if(((fpw)->lw) == (7LL)){
(fqf) = ((as_<gb>(classTable_, (fpw), 10))->qk);
if((((fqf) == (5LL)) || ((fqf) == (3LL))) || ((fqf) == (2LL))){
(fqa) = (true);
}
}
if((!(fqa)) && ((aye<int64_t>(((fpw)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
(fqa) = (true);
}
}
if(((!(fqa)) && (((fpw)->lw) == (256LL))) && (!eqAddr_(((fpw)->ni), (nullptr)))){
(fqa) = (true);
}
if(!(fqa)){
(ad)((65538LL), ((dde)()), (new Array_<Array_<char16_t>*>(1, ((fpe)->nf))));
return;
}
}
if(((fpn)->lw) == (256LL)){
(fpo) = (true);
}
(fpn) = ((fpn)->ng);
}
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fpj)->nh), (new Array_<int64_t>(1, (0LL))), ((fpe)->nf), (fpe));
}
// _dtor
static void fqq(dgu* fqr){
((fqr)->ne) = (nullptr);
((fqr)->nf) = (nullptr);
((fqr)->ng) = (nullptr);
((fqr)->nh) = (nullptr);
((fqr)->ni) = (nullptr);
((fqr)->nj) = (nullptr);
((fqr)->nk) = (nullptr);
}
// _copy
static dgu* fqs(dgu* fqt){
dgu* fqu = nullptr;
(fqu) = (new dgu());
((fqu)->ne) = (copy_((fqt)->ne));
((fqu)->nf) = (copy_((fqt)->nf));
((fqu)->ng) = (copy_((fqt)->ng));
((fqu)->nh) = (copy_((fqt)->nh));
((fqu)->ni) = (copy_((fqt)->ni));
((fqu)->nj) = (copy_((fqt)->nj));
((fqu)->nk) = (copy_((fqt)->nk));
((fqu)->no) = ((fqt)->no);
((fqu)->lw) = ((fqt)->lw);
return as_<dgu>(classTable_, (fqu), 108);
}
// _toBin
static Array_<uint8_t>* fqv(dgu* fqw){
Array_<uint8_t>* fqx = nullptr;
(fqx) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fqx) = ((fqx)->Cat(toBin_((fqw)->ne)));
(fqx) = ((fqx)->Cat(toBin_((fqw)->nf)));
(fqx) = ((fqx)->Cat(toBin_((fqw)->ng)));
(fqx) = ((fqx)->Cat(toBin_((fqw)->nh)));
(fqx) = ((fqx)->Cat(toBin_((fqw)->ni)));
(fqx) = ((fqx)->Cat(toBin_((fqw)->nj)));
(fqx) = ((fqx)->Cat(toBin_((fqw)->nk)));
(fqx) = ((fqx)->Cat(toBin_((fqw)->no)));
(fqx) = ((fqx)->Cat(toBin_((fqw)->lw)));
return fqx;
}
// _fromBin
static dgu* frh(dgu* fri, Array_<uint8_t>* frj, int64_t* frk){
dgu* frl = nullptr;
(frl) = (new dgu());
((frl)->ne) = (fromBin_<ga*>((frj), (*frk)));
((frl)->nf) = (fromBin_<Array_<char16_t>*>((frj), (*frk)));
((frl)->ng) = (fromBin_<fx*>((frj), (*frk)));
((frl)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((frj), (*frk)));
((frl)->ni) = (fromBin_<Array_<char16_t>*>((frj), (*frk)));
((frl)->nj) = (fromBin_<fx*>((frj), (*frk)));
((frl)->nk) = (fromBin_<fy*>((frj), (*frk)));
((frl)->no) = (fromBin_<bool>((frj), (*frk)));
((frl)->lw) = (fromBin_<int64_t>((frj), (*frk)));
return frl;
}
// parseArg
static gb* dhc(int64_t frm /*kind*/, Array_<char16_t>* frn /*parentClass*/){
gb* fro = nullptr; // ast
char16_t frs = 0; // c
char16_t fsa = 0; // c
int64_t fse = 0;
(fro) = (new gb());
(brh)((fro), (7LL), ((dde)()), ((bsb)((true), (false))), (false));
((fro)->qk) = (frm);
((fro)->ql) = (false);
if(!eqAddr_((frn), (nullptr))){
(dgm)((fro), (frn));
}
(dgn)((u'\u003A'), (true));
(frs) = ((brk)());
if((frs) == (u'\u0026')){
if((frm) != (2LL)){
(ad)((65556LL), ((dde)()), (nullptr));
}
else{
((fro)->ql) = (true);
}
}
else{
(ave) = (frs);
}
((fro)->qf) = ((dhn)());
(fsa) = ((brk)());
if((fsa) == (u'\u003A')){
(dgn)((u'\u003A'), (false));
if(!((frm) != (0LL))){
throw 0xE9170000U;
}
switch(frm){
case 2LL:
(ad)((65557LL), ((dde)()), (nullptr));
((fro)->qg) = (nullptr);
break;
case 5LL:
(ad)((65558LL), ((dde)()), (nullptr));
((fro)->qg) = (nullptr);
break;
default:
((fro)->qg) = ((dms)());
break;
}
}
else{
if((frm) == (4LL)){
(ad)((65559LL), ((dde)()), (nullptr));
}
((fro)->qg) = (nullptr);
(ave) = (fsa);
}
return fro;
}
// parseType
static gc* dhn(){
ga* fsl = nullptr; // pos
gc* fsm = nullptr; // ast
char16_t fsn = 0; // c
cce* fsq = nullptr; // ast2
Array_<char16_t>* fss = nullptr; // id
Array_<char16_t>* fsv = nullptr; // size
cci* fsy = nullptr; // ast2
bool fsz = false;
Array_<char16_t>* ftd = nullptr;
ccm* ftf = nullptr; // ast2
ccn* ftl = nullptr; // arg
cdj* fua = nullptr; // ast2
cdj* fuc = nullptr; // ast2
cdj* fue = nullptr; // ast2
cdu* fug = nullptr; // ast2
bvz* fui = nullptr; // ast2
bvz* fuk = nullptr; // ast2
bvz* fum = nullptr; // ast2
bvz* fuo = nullptr; // ast2
dgu* fuq = nullptr; // ast2
(fsl) = ((dde)());
(fsm) = (nullptr);
(fsn) = ((brk)());
if((fsn) == (u'\u005B')){
(dgn)((u'\u005D'), (true));
(fsq) = (new cce());
(brh)((fsq), (66561LL), (fsl), (nullptr), (false));
((fsq)->ccg) = ((dhn)());
(fsm) = (fsq);
}
else{
(ave) = (fsn);
(fss) = ((bsb)((true), (true)));
if((((((fss)->Len()) >= (4LL)) && (((fss)->At(0LL)) == (u'\u0062'))) && (((fss)->At(1LL)) == (u'\u0069'))) && (((fss)->At(2LL)) == (u'\u0074'))){
(fsv) = (auw<Array_<char16_t>*>((fss), (new Array_<int64_t>(1, (0LL))), (3LL), (((fss)->Len()) - (3LL))));
if((((cmp_((fsv), (new Array_<char16_t>(1, u'\u0038'))) == 0) || (cmp_((fsv), (new Array_<char16_t>(2, u'\u0031', u'\u0036'))) == 0)) || (cmp_((fsv), (new Array_<char16_t>(2, u'\u0033', u'\u0032'))) == 0)) || (cmp_((fsv), (new Array_<char16_t>(2, u'\u0036', u'\u0034'))) == 0)){
(fsy) = (new cci());
(brh)((fsy), (1025LL), (fsl), (nullptr), (false));
((fsy)->ccj) = (((eq)((fsv), (&fsz))) / (8LL));
(fsm) = (fsy);
}
}
if(eqAddr_((fsm), (nullptr))){
ftd = fss;
if(cmp_(ftd, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
(dgn)((u'\u003C'), (true));
(dgn)((u'\u0028'), (true));
(ftf) = (new ccm());
(brh)((ftf), (66562LL), (fsl), (nullptr), (false));
((ftf)->elm) = (0LL);
((ftf)->eli) = (new List_<Array_<char16_t>*>());
((ftf)->ccu) = (new List_<ccn*>());
((ftf)->ccp) = (nullptr);
(fsn) = ((brk)());
if((fsn) != (u'\u0029')){
(ave) = (fsn);
while(true){
(ftl) = (new ccn());
(fsn) = ((brk)());
if((fsn) == (u'\u0000')){
break;
}
if((fsn) == (u'\u0026')){
((ftl)->cde) = (true);
}
else{
((ftl)->cde) = (false);
(ave) = (fsn);
}
((ftl)->cdc) = ((dhn)());
uh<List_<ccn*>*, ccn*>(((ftf)->ccu), (new Array_<int64_t>(1, (0LL))), (ftl));
(fsn) = ((brk)());
if((fsn) == (u'\u0029')){
break;
}
if((fsn) != (u'\u002C')){
(dgi)((u'\u002C'), (fsn));
break;
}
}
}
(fsn) = ((brk)());
if((fsn) == (u'\u003A')){
((ftf)->ccp) = ((dhn)());
(fsn) = ((brk)());
}
if((fsn) != (u'\u003E')){
(dgi)((u'\u003E'), (fsn));
}
(fsm) = (ftf);
}
else if(cmp_(ftd, (new Array_<char16_t>(4, u'\u006C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
(dgn)((u'\u003C'), (true));
(fua) = (new cdj());
(brh)((fua), (66563LL), (fsl), (nullptr), (false));
((fua)->cdm) = (0LL);
((fua)->cdo) = ((dhn)());
(dgn)((u'\u003E'), (true));
(fsm) = (fua);
}
else if(cmp_(ftd, (new Array_<char16_t>(5, u'\u0073', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
(dgn)((u'\u003C'), (true));
(fuc) = (new cdj());
(brh)((fuc), (66563LL), (fsl), (nullptr), (false));
((fuc)->cdm) = (1LL);
((fuc)->cdo) = ((dhn)());
(dgn)((u'\u003E'), (true));
(fsm) = (fuc);
}
else if(cmp_(ftd, (new Array_<char16_t>(5, u'\u0071', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
(dgn)((u'\u003C'), (true));
(fue) = (new cdj());
(brh)((fue), (66563LL), (fsl), (nullptr), (false));
((fue)->cdm) = (2LL);
((fue)->cdo) = ((dhn)());
(dgn)((u'\u003E'), (true));
(fsm) = (fue);
}
else if(cmp_(ftd, (new Array_<char16_t>(4, u'\u0064', u'\u0069', u'\u0063', u'\u0074'))) == 0){
(dgn)((u'\u003C'), (true));
(fug) = (new cdu());
(brh)((fug), (66564LL), (fsl), (nullptr), (false));
((fug)->cdv) = ((dhn)());
(dgn)((u'\u002C'), (true));
((fug)->cdw) = ((dhn)());
(dgn)((u'\u003E'), (true));
(fsm) = (fug);
}
else if(cmp_(ftd, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074'))) == 0){
(fui) = (new bvz());
(brh)((fui), (1026LL), (fsl), (nullptr), (false));
((fui)->bwa) = (0LL);
(fsm) = (fui);
}
else if(cmp_(ftd, (new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
(fuk) = (new bvz());
(brh)((fuk), (1026LL), (fsl), (nullptr), (false));
((fuk)->bwa) = (1LL);
(fsm) = (fuk);
}
else if(cmp_(ftd, (new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072'))) == 0){
(fum) = (new bvz());
(brh)((fum), (1026LL), (fsl), (nullptr), (false));
((fum)->bwa) = (2LL);
(fsm) = (fum);
}
else if(cmp_(ftd, (new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C'))) == 0){
(fuo) = (new bvz());
(brh)((fuo), (1026LL), (fsl), (nullptr), (false));
((fuo)->bwa) = (3LL);
(fsm) = (fuo);
}
else{(fuq) = (new dgu());
(brh)((fuq), (66565LL), (fsl), (nullptr), (false));
(dgm)((fuq), (fss));
(fsm) = (fuq);
}
}
}
return fsm;
}
// parseStat
static ge* dhu(fx* fur /*block_*/){
char16_t fuu = 0; // c
int64_t fux = 0; // row
int64_t fuy = 0; // col
Array_<char16_t>* fuz = nullptr; // id
Array_<char16_t>* fvb = nullptr;
ge* fvd = nullptr; // ast
do{
(fuu) = ((brk)());
if((fuu) == (u'\u0000')){
(ad)((65560LL), ((dde)()), (nullptr));
return nullptr;
}
}while((fuu) == (u'\u000A'));
(ave) = (fuu);
(fux) = (avc);
(fuy) = (avd);
(fuz) = ((bsb)((true), (false)));
fvb = fuz;
if(cmp_(fvb, (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064'))) == 0){
(fvd) = ((fve)((fux), (fuy), (fur)));
}
else if(cmp_(fvb, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
(fvd) = ((fvg)());
}
else if(cmp_(fvb, (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0){
(fvd) = ((fvi)());
}
else if(cmp_(fvb, (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074'))) == 0){
(fvd) = ((fvk)());
}
else if(cmp_(fvb, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073'))) == 0){
(fvd) = ((fvm)());
}
else if(cmp_(fvb, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0){
(fvd) = ((fvo)());
}
else if(cmp_(fvb, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0){
(fvd) = ((fvq)());
}
else if(cmp_(fvb, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0){
(fvd) = ((fvs)());
}
else if(cmp_(fvb, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0069', u'\u0066'))) == 0){
(fvd) = ((fvu)((fux), (fuy), (fur)));
}
else if(cmp_(fvb, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065'))) == 0){
(fvd) = ((fvw)((fux), (fuy), (fur)));
}
else if(cmp_(fvb, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068'))) == 0){
(fvd) = ((fvy)((fux), (fuy)));
}
else if(cmp_(fvb, (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065'))) == 0){
(fvd) = ((fwa)((fux), (fuy), (fur)));
}
else if(cmp_(fvb, (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074'))) == 0){
(fvd) = ((fwc)((fux), (fuy), (fur)));
}
else if(cmp_(fvb, (new Array_<char16_t>(5, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065'))) == 0){
(fvd) = ((fwe)());
}
else if(cmp_(fvb, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0){
(fvd) = ((fwg)((fux), (fuy)));
}
else if(cmp_(fvb, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0){
(fvd) = ((fwi)((fux), (fuy)));
}
else if(cmp_(fvb, (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068'))) == 0){
(fvd) = ((fwk)((fux), (fuy), (fur)));
}
else if(cmp_(fvb, (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079'))) == 0){
(fvd) = ((fwm)((fux), (fuy), (fur)));
}
else if(cmp_(fvb, (new Array_<char16_t>(5, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077'))) == 0){
(fvd) = ((fwo)());
}
else if(cmp_(fvb, (new Array_<char16_t>(5, u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B'))) == 0){
(fvd) = ((fwq)());
}
else if(cmp_(fvb, (new Array_<char16_t>(3, u'\u0072', u'\u0065', u'\u0074'))) == 0){
(fvd) = ((fws)());
}
else if(cmp_(fvb, (new Array_<char16_t>(2, u'\u0064', u'\u006F'))) == 0){
(fvd) = ((fwu)());
}
else if(cmp_(fvb, (new Array_<char16_t>(5, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B'))) == 0){
(fvd) = ((fww)());
}
else if(cmp_(fvb, (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070'))) == 0){
(fvd) = ((fwy)());
}
else if(cmp_(fvb, (new Array_<char16_t>(6, u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074'))) == 0){
(fvd) = ((fxa)());
}
else{(ad)((65547LL), ((bri)((bf), (fux), (fuy))), (new Array_<Array_<char16_t>*>(1, (fuz))));
(bsw)(((bsx)()));
return nullptr;
}
if(eqAddr_((fvd), (nullptr))){
return nullptr;
}
((fvd)->ne) = ((bri)((bf), (fux), (fuy)));
return fvd;
}
// parseExpr
static gd* dms(){
gd* fxe = nullptr; // ast
int64_t fxg = 0; // row
int64_t fxh = 0; // col
char16_t fxi = 0; // c
bzx* fxl = nullptr; // ast2
char16_t fxm = 0; // c2
char16_t fxo = 0;
(fxe) = ((fxf)());
(fxg) = (avc);
(fxh) = (avd);
(fxi) = ((brk)());
if((fxi) == (u'\u003A')){
(fxl) = (new bzx());
(dmx)((fxl), (2050LL), ((bri)((bf), (fxg), (fxh))));
(fxm) = ((bsx)());
switch(fxm){
case u'\u003A':
((fxl)->bzy) = (0LL);
break;
case u'\u002B':
((fxl)->bzy) = (1LL);
break;
case u'\u002D':
((fxl)->bzy) = (2LL);
break;
case u'\u002A':
((fxl)->bzy) = (3LL);
break;
case u'\u002F':
((fxl)->bzy) = (4LL);
break;
case u'\u0025':
((fxl)->bzy) = (5LL);
break;
case u'\u005E':
((fxl)->bzy) = (6LL);
break;
case u'\u007E':
((fxl)->bzy) = (7LL);
break;
case u'\u0024':
((fxl)->bzy) = (25LL);
break;
default:
(ad)((65569LL), ((fxl)->ne), (new Array_<Array_<char16_t>*>(1, ((ddf)((fxm))))));
(bsw)((fxm));
return nullptr;
break;
}
((fxl)->cab) = (fxe);
((fxl)->cac) = ((dms)());
(fxe) = (fxl);
}
else{
(ave) = (fxi);
}
return fxe;
}
// initAstExpr
static void dmx(gd* fya /*ast*/, int64_t fyb /*typeId*/, ga* fyc /*pos*/){
if(!(is_(classTable_, (fya), 14))){
throw 0xE9170000U;
}
(dca)((fya), (fyb), (fyc), (nullptr), (false));
((fya)->pf) = (nullptr);
((fya)->pj) = (0LL);
}
// readComment
static void dod(){
int64_t fyd = 0; // row
int64_t fye = 0; // col
char16_t fyg = 0; // c
bool fyl = false; // esc
bool fzb = false; // esc
(fyd) = (avc);
(fye) = (avd);
do{
(fyg) = ((bsx)());
if((fyg) == (u'\u0000')){
(ad)((65539LL), ((bri)((bf), (fyd), (fye))), (nullptr));
return;
}
if((fyg) == (u'\u0022')){
(fyl) = (false);
while(true){
(fyg) = ((fyp)());
if((fyg) == (u'\u0000')){
(ad)((65539LL), ((bri)((bf), (fyd), (fye))), (nullptr));
return;
}
if(fyl){
if((fyg) == (u'\u007B')){
(dod)();
}
(fyl) = (false);
continue;
}
if((fyg) == (u'\u0022')){
break;
}
if((fyg) == (u'\u005C')){
(fyl) = (true);
}
}
}
else if((fyg) == (u'\u0027')){
(fzb) = (false);
while(true){
(fyg) = ((fyp)());
if((fyg) == (u'\u0000')){
(ad)((65539LL), ((bri)((bf), (fyd), (fye))), (nullptr));
return;
}
if(fzb){
(fzb) = (false);
continue;
}
if((fyg) == (u'\u0027')){
break;
}
if((fyg) == (u'\u005C')){
(fzb) = (true);
}
}
}
else if((fyg) == (u'\u003B')){
while(true){
(fyg) = ((dct)());
if((fyg) == (u'\u0000')){
(ad)((65539LL), ((bri)((bf), (fyd), (fye))), (nullptr));
return;
}
if((fyg) == (u'\u000A')){
break;
}
}
}
}while((fyg) != (u'\u007D'));
}
// initAstImpl
static void dok(fx* fzv /*ast*/, int64_t fzw /*typeId*/, ga* fzx /*pos*/){
((fzv)->lw) = (fzw);
((fzv)->ne) = (fzx);
((fzv)->nf) = (nullptr);
((fzv)->ng) = (nullptr);
((fzv)->nh) = (nullptr);
((fzv)->ni) = (nullptr);
((fzv)->nj) = (nullptr);
((fzv)->nk) = (nullptr);
((fzv)->no) = (false);
}
// rebuildExprRef
static gd* due(gd* fzy /*ast*/){
fx* gab = nullptr; // refItem
int64_t gaf = 0;
fw* gah = nullptr; // func_
ccm* gaj = nullptr; // type
List_<gb*>* gal = nullptr; // items
gb* gan = nullptr; // arg
ccn* gao = nullptr; // arg2
gb* gaq = nullptr; // arg
int64_t gas = 0;
if(!eqAddr_(((fzy)->nk), (nullptr))){
return as_<gd>(classTable_, ((fzy)->nk), 14);
}
((fzy)->nk) = (fzy);
if(!(((fzy)->lw) == (2062LL))){
throw 0xE9170000U;
}
(gab) = ((fzy)->nj);
if(eqAddr_((gab), (nullptr))){
return nullptr;
}
switch((gab)->lw){
case 256LL:
(gah) = (as_<fw>(classTable_, ((fzy)->nj), 8));
(ayx)((gah));
(gaj) = (new ccm());
(bvn)((gaj), (66562LL), ((fzy)->ne));
((gaj)->elm) = ((gah)->sm);
((gaj)->eli) = ((gah)->sf);
((gaj)->ccu) = (new List_<ccn*>());
(gal) = ((gah)->sg);
awe<List_<gb*>*>((gal), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((gal), (new Array_<int64_t>(1, (0LL)))))){
(gan) = (awi<List_<gb*>*, gb*>((gal), (new Array_<int64_t>(1, (0LL)))));
(gao) = (new ccn());
((gao)->cde) = ((gan)->ql);
((gao)->cdc) = ((gan)->qf);
uh<List_<ccn*>*, ccn*>(((gaj)->ccu), (new Array_<int64_t>(1, (0LL))), (gao));
ays<List_<gb*>*>((gal), (new Array_<int64_t>(1, (0LL))));
}
((gaj)->ccp) = ((gah)->sh);
((fzy)->pf) = (gaj);
((fzy)->pj) = (1LL);
break;
case 7LL:
(gaq) = (as_<gb>(classTable_, ((fzy)->nj), 10));
(byx)((gaq));
switch((gaq)->qk){
case 1LL:
((fzy)->pf) = ((gaq)->qf);
((fzy)->pj) = (3LL);
break;
case 2LL:
((fzy)->pf) = ((gaq)->qf);
((fzy)->pj) = (((gaq)->ql) ? (4LL) : (2LL));
break;
case 3LL:
((fzy)->pf) = ((gaq)->qf);
((fzy)->pj) = (2LL);
break;
case 4LL:
if(eqAddr_(((gaq)->qg), (nullptr))){
return nullptr;
}
if(!((aye<int64_t>((((gaq)->qg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
throw 0xE9170000U;
}
((fzy)->nk) = ((gaq)->qg);
return as_<gd>(classTable_, ((fzy)->nk), 14);
break;
case 5LL:
(ad)((131075LL), ((fzy)->ne), (new Array_<Array_<char16_t>*>(1, ((fzy)->ni))));
return nullptr;
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66050LL:
case 16843266LL:
case 66051LL:
if(!(!eqAddr_(((gab)->nk), (nullptr)))){
throw 0xE9170000U;
}
((fzy)->nj) = ((as_<bvr>(classTable_, (gab), 50))->bwb);
((fzy)->pf) = (((as_<bvr>(classTable_, (gab), 50))->bwb)->qf);
((fzy)->pj) = (2LL);
break;
default:
if((((aye<int64_t>(((gab)->lw), (new Array_<int64_t>(1, (0LL))), (2048LL))) == (2048LL)) && (!eqAddr_(((gab)->nk), (nullptr)))) && ((cmx)(((as_<gd>(classTable_, ((gab)->nk), 14))->pf)))){
((fzy)->nk) = ((gab)->nk);
return as_<gd>(classTable_, ((fzy)->nk), 14);
}
(ad)((131136LL), ((fzy)->ne), (new Array_<Array_<char16_t>*>(1, ((fzy)->ni))));
return nullptr;
break;
}
return fzy;
}
// cmpType
static bool dze(gc* gbf /*type1*/, gc* gbg /*type2*/, bool gbh /*strict*/){
int64_t gbk = 0; // typeId1
int64_t gbl = 0; // typeId2
bool gbn = false; // nullable1
bool gbo = false; // nullable2
ccm* gbx = nullptr; // func1
ccm* gby = nullptr; // func2
List_<ccn*>* gbz = nullptr; // args1
List_<ccn*>* gca = nullptr; // args2
ccn* gcc = nullptr; // arg1
ccn* gcd = nullptr; // arg2
cdu* gcs = nullptr; // dict1
cdu* gct = nullptr; // dict2
ul* gdd = nullptr; // class1
ul* gde = nullptr; // class2
ul* gdf = nullptr; // ptr
if((eqAddr_((gbf), (nullptr))) || (eqAddr_((gbg), (nullptr)))){
return false;
}
(gbk) = ((gbf)->lw);
(gbl) = ((gbg)->lw);
(gbn) = ((((gbk) == (66565LL)) && ((((gbf)->nj)->lw) == (6LL))) ? (false) : ((aye<int64_t>((gbk), (new Array_<int64_t>(1, (0LL))), (66560LL))) == (66560LL)));
(gbo) = ((((gbl) == (66565LL)) && ((((gbg)->nj)->lw) == (6LL))) ? (false) : ((aye<int64_t>((gbl), (new Array_<int64_t>(1, (0LL))), (66560LL))) == (66560LL)));
if((((gbn) && ((gbl) == (1027LL))) || (((gbk) == (1027LL)) && (gbo))) || (((gbk) == (1027LL)) && ((gbl) == (1027LL)))){
return true;
}
if(((gbk) == (66561LL)) && ((gbl) == (66561LL))){
return (dze)(((as_<cce>(classTable_, (gbf), 76))->ccg), ((as_<cce>(classTable_, (gbg), 76))->ccg), (true));
}
if(((gbk) == (1025LL)) && ((gbl) == (1025LL))){
return ((as_<cci>(classTable_, (gbf), 78))->ccj) == ((as_<cci>(classTable_, (gbg), 78))->ccj);
}
if(((gbk) == (66562LL)) && ((gbl) == (66562LL))){
(gbx) = (as_<ccm>(classTable_, (gbf), 80));
(gby) = (as_<ccm>(classTable_, (gbg), 80));
(gbz) = ((gbx)->ccu);
(gca) = ((gby)->ccu);
awe<List_<ccn*>*>((gbz), (new Array_<int64_t>(1, (0LL))));
awe<List_<ccn*>*>((gca), (new Array_<int64_t>(1, (0LL))));
while((!(awg<List_<ccn*>*>((gbz), (new Array_<int64_t>(1, (0LL)))))) && (!(awg<List_<ccn*>*>((gca), (new Array_<int64_t>(1, (0LL))))))){
(gcc) = (awi<List_<ccn*>*, ccn*>((gbz), (new Array_<int64_t>(1, (0LL)))));
(gcd) = (awi<List_<ccn*>*, ccn*>((gca), (new Array_<int64_t>(1, (0LL)))));
if((((gcc)->cde) != ((gcd)->cde)) || (!((dze)(((gcc)->cdc), ((gcd)->cdc), (true))))){
return false;
}
ays<List_<ccn*>*>((gbz), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>((gca), (new Array_<int64_t>(1, (0LL))));
}
if(!((awg<List_<ccn*>*>((gbz), (new Array_<int64_t>(1, (0LL))))) && (awg<List_<ccn*>*>((gca), (new Array_<int64_t>(1, (0LL))))))){
return false;
}
if((eqAddr_(((gbx)->ccp), (nullptr))) && (eqAddr_(((gby)->ccp), (nullptr)))){
return true;
}
if((eqAddr_(((gbx)->ccp), (nullptr))) || (eqAddr_(((gby)->ccp), (nullptr)))){
return false;
}
return (dze)(((gbx)->ccp), ((gby)->ccp), (true));
}
if(((gbk) == (66563LL)) && ((gbl) == (66563LL))){
if(((as_<cdj>(classTable_, (gbf), 84))->cdm) != ((as_<cdj>(classTable_, (gbg), 84))->cdm)){
return false;
}
return (dze)(((as_<cdj>(classTable_, (gbf), 84))->cdo), ((as_<cdj>(classTable_, (gbg), 84))->cdo), (true));
}
if(((gbk) == (66564LL)) && ((gbl) == (66564LL))){
(gcs) = (as_<cdu>(classTable_, (gbf), 86));
(gct) = (as_<cdu>(classTable_, (gbg), 86));
return ((dze)(((gcs)->cdv), ((gct)->cdv), (true))) && ((dze)(((gcs)->cdw), ((gct)->cdw), (true)));
}
if(((gbk) == (1026LL)) && ((gbl) == (1026LL))){
return ((as_<bvz>(classTable_, (gbf), 60))->bwa) == ((as_<bvz>(classTable_, (gbg), 60))->bwa);
}
if(((gbk) == (66565LL)) && ((gbl) == (66565LL))){
if(!(((((gbf)->nj)->lw) != (4LL)) && ((((gbg)->nj)->lw) != (4LL)))){
throw 0xE9170000U;
}
if(((((gbf)->nj)->lw) == (5LL)) && ((((gbg)->nj)->lw) == (5LL))){
if(gbh){
return eqAddr_((as_<ul>(classTable_, ((gbf)->nj), 22)), (as_<ul>(classTable_, ((gbg)->nj), 22)));
}
else{
(gdd) = (as_<ul>(classTable_, ((gbf)->nj), 22));
(gde) = (as_<ul>(classTable_, ((gbg)->nj), 22));
(gdf) = (gdd);
while(!eqAddr_((gdf), (nullptr))){
if(eqAddr_((gdf), (gde))){
return true;
}
(gdf) = (as_<ul>(classTable_, ((gdf)->nj), 22));
}
return false;
}
}
return eqAddr_(((gbf)->nj), ((gbg)->nj));
}
if((((((gbk) == (66565LL)) && ((((gbf)->nj)->lw) == (6LL))) || ((gbk) == (1028LL))) && ((((gbl) == (66565LL)) && ((((gbg)->nj)->lw) == (6LL))) || ((gbl) == (1028LL)))) && (!(((gbk) == (1028LL)) && ((gbl) == (1028LL))))){
return true;
}
return false;
}
// rebuildEnumElement
static bxl* dzh(gd* gdl /*enumElement*/, gc* gdm /*type*/){
bxl* gdn = nullptr; // enumElement2
if(!(((gdl)->lw) == (67587LL))){
throw 0xE9170000U;
}
if(!((cmx)((gdm)))){
throw 0xE9170000U;
}
(gdn) = (new bxl());
(bwv)((gdn), (67585LL), ((gdl)->ne));
((gdn)->bxn) = ((gdo)((as_<ecr>(classTable_, (gdl), 130)), (as_<bsu>(classTable_, ((gdm)->nj), 48))));
((gdn)->pf) = (gdm);
(gdn) = (as_<bxl>(classTable_, ((ecl)((gdn))), 70));
return gdn;
}
// rebuildClass
static void dzw(ul* gdp /*ast*/){
fw* gds = nullptr; // dtor
fw* gdt = nullptr; // copy
fw* gdu = nullptr; // toBin
fw* gdv = nullptr; // fromBin
if(!eqAddr_(((gdp)->nk), (nullptr))){
return;
}
((gdp)->nk) = (gdp);
(gds) = (nullptr);
(gdt) = (nullptr);
(gdu) = (nullptr);
(gdv) = (nullptr);
(gdw)((gdp), (&gds), (&gdt), (&gdu), (&gdv));
(gdx)((gdp), (gds), (gdt), (gdu), (gdv));
(ayx)((gds));
(ayx)((gdt));
(ayx)((gdu));
(ayx)((gdv));
}
// rebuildEnum
static void dzy(bsu* gdy /*ast*/){
dgu* geb = nullptr; // type
int64_t gec = 0; // defaultNum
Dict_<int64_t, bool>* ged = nullptr; // enumValues
List_<gd*>* gee = nullptr; // items
gd* gei = nullptr; // item
Array_<char16_t>* gej = nullptr; // itemName
bxl* geo = nullptr; // item2
int64_t gew = 0; // value
bool gey = false;
if(!eqAddr_(((gdy)->nk), (nullptr))){
return;
}
((gdy)->nk) = (gdy);
(geb) = (new dgu());
(bvn)((geb), (66565LL), ((gdy)->ne));
((geb)->nk) = (geb);
((geb)->nj) = (gdy);
(gec) = (-1LL);
(ged) = (new Dict_<int64_t, bool>());
(gee) = ((gdy)->dma);
awe<List_<gd*>*>((gee), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((gee), (new Array_<int64_t>(1, (0LL)))))){
(gei) = (awi<List_<gd*>*, gd*>((gee), (new Array_<int64_t>(1, (0LL)))));
(gej) = ((gei)->nf);
(gei) = ((bzt)((gei), (eqAddr_(((gei)->pf), (nullptr)))));
if(eqAddr_((gei), (nullptr))){
continue;
}
((gei)->nf) = (gej);
bfe<List_<gd*>*, gd*>((gee), (new Array_<int64_t>(1, (0LL))), (gei));
bfh<List_<gd*>*>((gee), (new Array_<int64_t>(1, (0LL))));
if((((gei)->lw) != (67585LL)) || ((!eqAddr_(((gei)->pf), (nullptr))) && (!((bdg)(((gei)->pf)))))){
(ad)((131087LL), ((gdy)->ne), (new Array_<Array_<char16_t>*>(2, ((gdy)->nf), ((gei)->nf))));
return;
}
(geo) = (as_<bxl>(classTable_, (gei), 70));
if(eqAddr_(((gei)->pf), (nullptr))){
if((gec) == (9223372036854775807LL)){
(ad)((131088LL), ((gdy)->ne), (new Array_<Array_<char16_t>*>(2, ((gdy)->nf), ((gei)->nf))));
return;
}
(gec) = ((gec) + (1LL));
((geo)->bxn) = (static_cast<uint64_t>(gec));
}
else{
(gec) = (static_cast<int64_t>((geo)->bxn));
}
(gew) = (static_cast<int64_t>((geo)->bxn));
if(avo<Dict_<int64_t, bool>*, int64_t, bool>((ged), (new Array_<int64_t>(1, (0LL))), (gew), (&gey))){
(ad)((131089LL), ((gdy)->ne), (new Array_<Array_<char16_t>*>(3, ((gdy)->nf), ((gei)->nf), (v<int64_t>((gew), (new Array_<int64_t>(1, (0LL))))))));
return;
}
dv<Dict_<int64_t, bool>*, int64_t, bool>((ged), (new Array_<int64_t>(1, (0LL))), (gew), (true));
((gei)->pf) = (geb);
}
}
// rebuildAlias
static void eaa(bso* gfa /*ast*/, bso* gfb /*parent*/){
if(cmp_((gfa), (gfb)) == 0){
(ad)((131079LL), ((gfb)->ne), (new Array_<Array_<char16_t>*>(1, ((gfb)->nf))));
((gfa)->dje) = (nullptr);
return;
}
if(!eqAddr_(((gfa)->nk), (nullptr))){
return;
}
((gfa)->nk) = (gfa);
((gfa)->dje) = ((bza)(((gfa)->dje), (gfa)));
}
// rebuildExpr1
static gd* ebe(ebf* gfg /*ast*/){
gc* gfm = nullptr; // childType
int64_t gfo = 0;
bxl* ggd = nullptr; // expr
ecu* gge = nullptr; // expr
bxl* ggm = nullptr; // expr
bvz* ggt = nullptr; // type
if(!eqAddr_(((gfg)->nk), (nullptr))){
return as_<gd>(classTable_, ((gfg)->nk), 14);
}
((gfg)->nk) = (gfg);
((gfg)->gfj) = ((bzt)(((gfg)->gfj), (false)));
if(eqAddr_(((gfg)->gfj), (nullptr))){
return nullptr;
}
if(!(eqAddr_(((gfg)->pf), (nullptr)))){
throw 0xE9170000U;
}
(gfm) = (((gfg)->gfj)->pf);
switch((gfg)->gfp){
case 0LL:
if((((bdg)((gfm))) || ((gfs)((gfm)))) || (((gfm)->lw) == (1025LL))){
if((aye<int64_t>((((gfg)->gfj)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)){
((gfg)->nk) = ((gfg)->gfj);
return as_<gd>(classTable_, ((gfg)->nk), 14);
}
((gfg)->pf) = (gfm);
}
break;
case 1LL:
if(((bdg)((gfm))) || ((gfs)((gfm)))){
if((aye<int64_t>((((gfg)->gfj)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)){
if((bdg)((gfm))){
(ggd) = (new bxl());
(bwv)((ggd), (67585LL), ((gfg)->ne));
((ggd)->pf) = (gfm);
((ggd)->bxn) = (static_cast<uint64_t>(-(static_cast<int64_t>((as_<bxl>(classTable_, ((gfg)->gfj), 70))->bxn))));
(ggd) = (as_<bxl>(classTable_, ((ecl)((ggd))), 70));
((gfg)->nk) = (ggd);
return as_<gd>(classTable_, ((gfg)->nk), 14);
}
if(!((gfs)((gfm)))){
throw 0xE9170000U;
}
(gge) = (new ecu());
(bwv)((gge), (67588LL), ((gfg)->ne));
((gge)->pf) = (gfm);
((gge)->ggf) = (-((as_<ecu>(classTable_, ((gfg)->gfj), 132))->ggf));
(gge) = (as_<ecu>(classTable_, ((ect)((gge))), 132));
((gfg)->nk) = (gge);
return as_<gd>(classTable_, ((gfg)->nk), 14);
}
((gfg)->pf) = (gfm);
}
break;
case 2LL:
if((ggi)((gfm))){
if((((gfg)->gfj)->lw) == (67585LL)){
(ggm) = (new bxl());
(bwv)((ggm), (67585LL), ((gfg)->ne));
((ggm)->pf) = (gfm);
((ggm)->bxn) = ((((as_<bxl>(classTable_, ((gfg)->gfj), 70))->bxn) != (0x0000000000000000ULL)) ? (0x0000000000000000ULL) : (0x0000000000000001ULL));
(ggm) = (as_<bxl>(classTable_, ((ecl)((ggm))), 70));
((gfg)->nk) = (ggm);
return as_<gd>(classTable_, ((gfg)->nk), 14);
}
((gfg)->pf) = (gfm);
}
break;
case 3LL:
if(((((egp)((gfm))) || (((gfm)->lw) == (66561LL))) || (((gfm)->lw) == (66563LL))) || (((gfm)->lw) == (66564LL))){
((gfg)->pf) = (gfm);
}
break;
case 4LL:
if(((((gfm)->lw) == (66561LL)) || (((gfm)->lw) == (66563LL))) || (((gfm)->lw) == (66564LL))){
(ggt) = (new bvz());
(bvn)((ggt), (1026LL), ((gfg)->ne));
((ggt)->bwa) = (0LL);
((gfg)->pf) = (ggt);
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(eqAddr_(((gfg)->pf), (nullptr))){
(ad)((131113LL), ((gfg)->ne), (nullptr));
return nullptr;
}
((gfg)->pj) = (1LL);
return gfg;
}
// _dtor
static void ggx(ebf* ggy){
((ggy)->gfj) = (nullptr);
((ggy)->pf) = (nullptr);
((ggy)->ne) = (nullptr);
((ggy)->nf) = (nullptr);
((ggy)->ng) = (nullptr);
((ggy)->nh) = (nullptr);
((ggy)->ni) = (nullptr);
((ggy)->nj) = (nullptr);
((ggy)->nk) = (nullptr);
}
// _copy
static ebf* ggz(ebf* gha){
ebf* ghb = nullptr;
(ghb) = (new ebf());
((ghb)->gfp) = ((gha)->gfp);
((ghb)->gfj) = (copy_((gha)->gfj));
((ghb)->pf) = (copy_((gha)->pf));
((ghb)->pj) = ((gha)->pj);
((ghb)->ne) = (copy_((gha)->ne));
((ghb)->nf) = (copy_((gha)->nf));
((ghb)->ng) = (copy_((gha)->ng));
((ghb)->nh) = (copy_((gha)->nh));
((ghb)->ni) = (copy_((gha)->ni));
((ghb)->nj) = (copy_((gha)->nj));
((ghb)->nk) = (copy_((gha)->nk));
((ghb)->no) = ((gha)->no);
((ghb)->lw) = ((gha)->lw);
return as_<ebf>(classTable_, (ghb), 110);
}
// _toBin
static Array_<uint8_t>* ghc(ebf* ghd){
Array_<uint8_t>* ghe = nullptr;
(ghe) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->gfp)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->gfj)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->pf)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->pj)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->ne)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->nf)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->ng)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->nh)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->ni)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->nj)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->nk)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->no)));
(ghe) = ((ghe)->Cat(toBin_((ghd)->lw)));
return ghe;
}
// _fromBin
static ebf* ghs(ebf* ght, Array_<uint8_t>* ghu, int64_t* ghv){
ebf* ghw = nullptr;
(ghw) = (new ebf());
((ghw)->gfp) = (fromBin_<int64_t>((ghu), (*ghv)));
((ghw)->gfj) = (fromBin_<gd*>((ghu), (*ghv)));
((ghw)->pf) = (fromBin_<gc*>((ghu), (*ghv)));
((ghw)->pj) = (fromBin_<int64_t>((ghu), (*ghv)));
((ghw)->ne) = (fromBin_<ga*>((ghu), (*ghv)));
((ghw)->nf) = (fromBin_<Array_<char16_t>*>((ghu), (*ghv)));
((ghw)->ng) = (fromBin_<fx*>((ghu), (*ghv)));
((ghw)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ghu), (*ghv)));
((ghw)->ni) = (fromBin_<Array_<char16_t>*>((ghu), (*ghv)));
((ghw)->nj) = (fromBin_<fx*>((ghu), (*ghv)));
((ghw)->nk) = (fromBin_<fy*>((ghu), (*ghv)));
((ghw)->no) = (fromBin_<bool>((ghu), (*ghv)));
((ghw)->lw) = (fromBin_<int64_t>((ghu), (*ghv)));
return ghw;
}
// rebuildExpr2
static gd* ebh(bzx* ghx /*ast*/){
bool gih = false; // correct
int64_t gij = 0;
ul* gip = nullptr; // ptr
bool gja = false; // value
bvz* gjk = nullptr; // type
bool gjt = false; // value
gc* gju = nullptr; // children0Type
uint64_t gjx = 0; // n1
uint64_t gjy = 0; // n2
int64_t gka = 0;
int64_t gkh = 0; // n1
int64_t gki = 0; // n2
int64_t gkk = 0;
double gkr = 0.0; // n1
double gks = 0.0; // n2
int64_t gku = 0;
int64_t glb = 0; // cmp
int64_t glf = 0;
bxl* gll = nullptr; // expr
bvz* glr = nullptr; // type
bool glz = false; // value
gc* gma = nullptr; // children0Type
uint64_t gmd = 0; // n1
uint64_t gme = 0; // n2
int64_t gmg = 0;
int64_t gml = 0; // cmp
int64_t gmn = 0;
bxl* gmr = nullptr; // expr
bvz* gmv = nullptr; // type
Array_<char16_t>* gnf = nullptr; // s1
Array_<char16_t>* gng = nullptr; // s2
eco* gnh = nullptr; // expr
uint64_t gnp = 0; // n1
uint64_t gnq = 0; // n2
int64_t gns = 0;
bxl* goi = nullptr; // expr
int64_t gol = 0; // n1
int64_t gom = 0; // n2
int64_t goo = 0;
bxl* gpe = nullptr; // expr
double gpg = 0.0; // n1
double gph = 0.0; // n2
int64_t gpj = 0;
ecu* gpz = nullptr; // expr
if(!eqAddr_(((ghx)->nk), (nullptr))){
return as_<gd>(classTable_, ((ghx)->nk), 14);
}
((ghx)->nk) = (ghx);
((ghx)->cab) = ((bzt)(((ghx)->cab), (false)));
if(eqAddr_(((ghx)->cab), (nullptr))){
return nullptr;
}
((ghx)->cac) = ((bzt)(((ghx)->cac), (false)));
if(eqAddr_(((ghx)->cac), (nullptr))){
return nullptr;
}
if(!((dze)((((ghx)->cac)->pf), (((ghx)->cab)->pf), (false)))){
(ad)((131113LL), ((ghx)->ne), (nullptr));
return nullptr;
}
(gih) = (false);
switch((ghx)->bzy){
case 0LL:
if((((ghx)->cab)->pj) == (1LL)){
(ad)((131114LL), ((ghx)->ne), (nullptr));
return nullptr;
}
if(((egp)((((ghx)->cab)->pf))) && ((egp)((((ghx)->cac)->pf)))){
(gip) = (as_<ul>(classTable_, ((((ghx)->cac)->pf)->nj), 22));
while(!eqAddr_(((((ghx)->cab)->pf)->nj), (gip))){
(gip) = (as_<ul>(classTable_, ((gip)->nj), 22));
if(eqAddr_((gip), (nullptr))){
(ad)((131113LL), ((ghx)->ne), (nullptr));
return nullptr;
}
}
}
if(((((ghx)->cac)->pf)->lw) == (1028LL)){
((ghx)->cac) = ((dzh)(((ghx)->cac), (((ghx)->cab)->pf)));
}
((ghx)->pf) = (nullptr);
(gih) = (true);
break;
case 8LL:
case 9LL:
if((ggi)((((ghx)->cab)->pf))){
if((((ghx)->cab)->lw) == (67585LL)){
(gja) = (((as_<bxl>(classTable_, ((ghx)->cab), 70))->bxn) != (0x0000000000000000ULL));
if(((ghx)->bzy) == (8LL)){
((ghx)->nk) = ((gja) ? ((ghx)->cab) : ((ghx)->cac));
}
else{
if(!(((ghx)->bzy) == (9LL))){
throw 0xE9170000U;
}
((ghx)->nk) = ((!(gja)) ? ((ghx)->cab) : ((ghx)->cac));
}
return as_<gd>(classTable_, ((ghx)->nk), 14);
}
((ghx)->pf) = (((ghx)->cab)->pf);
(gih) = (true);
}
break;
case 10LL:
case 11LL:
case 12LL:
case 13LL:
if((((((ghx)->cab)->pf)->lw) == (1027LL)) || (((((ghx)->cac)->pf)->lw) == (1027LL))){
(ad)((131115LL), ((ghx)->ne), (nullptr));
return nullptr;
}
if((gji)((((ghx)->cab)->pf), (true))){
(gjk) = (new bvz());
(bvn)((gjk), (1026LL), ((ghx)->ne));
((gjk)->bwa) = (3LL);
if(((((ghx)->cab)->pf)->lw) == (1028LL)){
if(((((ghx)->cac)->pf)->lw) == (1028LL)){
if(!((((ghx)->cab)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((ghx)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<ecr>(classTable_, ((ghx)->cab), 130))->gjp))));
return nullptr;
}
((ghx)->cab) = ((dzh)(((ghx)->cab), (((ghx)->cac)->pf)));
}
else if(((((ghx)->cac)->pf)->lw) == (1028LL)){
((ghx)->cac) = ((dzh)(((ghx)->cac), (((ghx)->cab)->pf)));
}
if(((aye<int64_t>((((ghx)->cab)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((aye<int64_t>((((ghx)->cac)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
(gjt) = (false);
(gju) = (((ghx)->cab)->pf);
if((((gju)->lw) == (1025LL)) || ((err)((gju)))){
(gjx) = ((as_<bxl>(classTable_, ((ghx)->cab), 70))->bxn);
(gjy) = ((as_<bxl>(classTable_, ((ghx)->cac), 70))->bxn);
switch((ghx)->bzy){
case 10LL:
(gjt) = ((gjx) < (gjy));
break;
case 11LL:
(gjt) = ((gjx) > (gjy));
break;
case 12LL:
(gjt) = ((gjx) <= (gjy));
break;
case 13LL:
(gjt) = ((gjx) >= (gjy));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if(((bdg)((gju))) || ((cmx)((gju)))){
(gkh) = (static_cast<int64_t>((as_<bxl>(classTable_, ((ghx)->cab), 70))->bxn));
(gki) = (static_cast<int64_t>((as_<bxl>(classTable_, ((ghx)->cac), 70))->bxn));
switch((ghx)->bzy){
case 10LL:
(gjt) = ((gkh) < (gki));
break;
case 11LL:
(gjt) = ((gkh) > (gki));
break;
case 12LL:
(gjt) = ((gkh) <= (gki));
break;
case 13LL:
(gjt) = ((gkh) >= (gki));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if((gfs)((gju))){
(gkr) = ((as_<ecu>(classTable_, ((ghx)->cab), 132))->ggf);
(gks) = ((as_<ecu>(classTable_, ((ghx)->cac), 132))->ggf);
switch((ghx)->bzy){
case 10LL:
(gjt) = ((gkr) < (gks));
break;
case 11LL:
(gjt) = ((gkr) > (gks));
break;
case 12LL:
(gjt) = ((gkr) <= (gks));
break;
case 13LL:
(gjt) = ((gkr) >= (gks));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((fjp)((gju)))){
throw 0xE9170000U;
}
(glb) = ((glc)(((as_<eco>(classTable_, ((ghx)->cab), 128))->gld), ((as_<eco>(classTable_, ((ghx)->cac), 128))->gld)));
switch((ghx)->bzy){
case 10LL:
(gjt) = ((glb) < (0LL));
break;
case 11LL:
(gjt) = ((glb) > (0LL));
break;
case 12LL:
(gjt) = ((glb) <= (0LL));
break;
case 13LL:
(gjt) = ((glb) >= (0LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
(gll) = (new bxl());
(bwv)((gll), (67585LL), ((ghx)->ne));
((gll)->pf) = (gjk);
((gll)->bxn) = ((gjt) ? (0x0000000000000001ULL) : (0x0000000000000000ULL));
(gll) = (as_<bxl>(classTable_, ((ecl)((gll))), 70));
((ghx)->nk) = (gll);
return as_<gd>(classTable_, ((ghx)->nk), 14);
}
((ghx)->pf) = (gjk);
(gih) = (true);
}
break;
case 14LL:
case 15LL:
if((((((ghx)->cab)->pf)->lw) == (1027LL)) || (((((ghx)->cac)->pf)->lw) == (1027LL))){
(ad)((131115LL), ((ghx)->ne), (nullptr));
return nullptr;
}
if((gji)((((ghx)->cab)->pf), (false))){
(glr) = (new bvz());
(bvn)((glr), (1026LL), ((ghx)->ne));
((glr)->bwa) = (3LL);
if(((((ghx)->cab)->pf)->lw) == (1028LL)){
if(((((ghx)->cac)->pf)->lw) == (1028LL)){
if(!((((ghx)->cab)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((ghx)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<ecr>(classTable_, ((ghx)->cab), 130))->gjp))));
return nullptr;
}
((ghx)->cab) = ((dzh)(((ghx)->cab), (((ghx)->cac)->pf)));
}
else if(((((ghx)->cac)->pf)->lw) == (1028LL)){
((ghx)->cac) = ((dzh)(((ghx)->cac), (((ghx)->cab)->pf)));
}
if(((aye<int64_t>((((ghx)->cab)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((aye<int64_t>((((ghx)->cac)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
(glz) = (false);
(gma) = (((ghx)->cab)->pf);
if((((((((gma)->lw) == (1025LL)) || ((bdg)((gma)))) || ((gfs)((gma)))) || ((err)((gma)))) || ((ggi)((gma)))) || ((cmx)((gma)))){
(gmd) = ((as_<bxl>(classTable_, ((ghx)->cab), 70))->bxn);
(gme) = ((as_<bxl>(classTable_, ((ghx)->cac), 70))->bxn);
switch((ghx)->bzy){
case 14LL:
(glz) = ((gmd) == (gme));
break;
case 15LL:
(glz) = ((gmd) != (gme));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((fjp)((gma)))){
throw 0xE9170000U;
}
(gml) = ((glc)(((as_<eco>(classTable_, ((ghx)->cab), 128))->gld), ((as_<eco>(classTable_, ((ghx)->cac), 128))->gld)));
switch((ghx)->bzy){
case 14LL:
(glz) = ((gml) == (0LL));
break;
case 15LL:
(glz) = ((gml) != (0LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
(gmr) = (new bxl());
(bwv)((gmr), (67585LL), ((ghx)->ne));
((gmr)->pf) = (glr);
((gmr)->bxn) = ((glz) ? (0x0000000000000001ULL) : (0x0000000000000000ULL));
(gmr) = (as_<bxl>(classTable_, ((ecl)((gmr))), 70));
((ghx)->nk) = (gmr);
return as_<gd>(classTable_, ((ghx)->nk), 14);
}
((ghx)->pf) = (glr);
(gih) = (true);
}
break;
case 16LL:
case 17LL:
if(((cms)((((ghx)->cab)->pf))) || (((((ghx)->cab)->pf)->lw) == (1027LL))){
(gmv) = (new bvz());
(bvn)((gmv), (1026LL), ((ghx)->ne));
((gmv)->bwa) = (3LL);
((ghx)->pf) = (gmv);
(gih) = (true);
}
break;
case 18LL:
if((((((ghx)->cab)->pf)->lw) == (1027LL)) || (((((ghx)->cac)->pf)->lw) == (1027LL))){
(ad)((131117LL), ((ghx)->ne), (nullptr));
return nullptr;
}
if(((((ghx)->cab)->pf)->lw) == (66561LL)){
if(((aye<int64_t>((((ghx)->cab)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((aye<int64_t>((((ghx)->cac)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
if((fjp)((((ghx)->cab)->pf))){
(gnf) = ((as_<eco>(classTable_, ((ghx)->cab), 128))->gld);
(gng) = ((as_<eco>(classTable_, ((ghx)->cac), 128))->gld);
(gnh) = (new eco());
(bwv)((gnh), (67586LL), ((ghx)->ne));
((gnh)->pf) = (((ghx)->cab)->pf);
((gnh)->gld) = ((gnf)->Cat(gng));
(gnh) = (as_<eco>(classTable_, ((ecn)((gnh))), 128));
((ghx)->nk) = (gnh);
return as_<gd>(classTable_, ((ghx)->nk), 14);
}
}
((ghx)->pf) = (((ghx)->cab)->pf);
(gih) = (true);
}
break;
case 19LL:
case 20LL:
case 21LL:
case 22LL:
case 23LL:
if(((((((ghx)->cab)->pf)->lw) == (1025LL)) || ((bdg)((((ghx)->cab)->pf)))) || ((gfs)((((ghx)->cab)->pf)))){
if(((aye<int64_t>((((ghx)->cab)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((aye<int64_t>((((ghx)->cac)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
if(((((ghx)->cab)->pf)->lw) == (1025LL)){
(gnp) = ((as_<bxl>(classTable_, ((ghx)->cab), 70))->bxn);
(gnq) = ((as_<bxl>(classTable_, ((ghx)->cac), 70))->bxn);
switch((ghx)->bzy){
case 19LL:
(gnp) = ((gnp) + (gnq));
break;
case 20LL:
(gnp) = ((gnp) - (gnq));
break;
case 21LL:
(gnp) = ((gnp) * (gnq));
break;
case 22LL:
if((gnq) == (0x0000000000000000ULL)){
(ad)((131118LL), ((ghx)->ne), (nullptr));
return nullptr;
}
(gnp) = ((gnp) / (gnq));
break;
case 23LL:
if((gnq) == (0x0000000000000000ULL)){
(ad)((131118LL), ((ghx)->ne), (nullptr));
return nullptr;
}
(gnp) = ((gnp) % (gnq));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(goi) = (new bxl());
(bwv)((goi), (67585LL), ((ghx)->ne));
((goi)->pf) = (((ghx)->cab)->pf);
((goi)->bxn) = ((goj)(((as_<cci>(classTable_, (((ghx)->cab)->pf), 78))->ccj), (gnp)));
(goi) = (as_<bxl>(classTable_, ((ecl)((goi))), 70));
((ghx)->nk) = (goi);
return as_<gd>(classTable_, ((ghx)->nk), 14);
}
else if((bdg)((((ghx)->cab)->pf))){
(gol) = (static_cast<int64_t>((as_<bxl>(classTable_, ((ghx)->cab), 70))->bxn));
(gom) = (static_cast<int64_t>((as_<bxl>(classTable_, ((ghx)->cac), 70))->bxn));
switch((ghx)->bzy){
case 19LL:
(gol) = ((gol) + (gom));
break;
case 20LL:
(gol) = ((gol) - (gom));
break;
case 21LL:
(gol) = ((gol) * (gom));
break;
case 22LL:
if((gom) == (0LL)){
(ad)((131118LL), ((ghx)->ne), (nullptr));
return nullptr;
}
(gol) = ((gol) / (gom));
break;
case 23LL:
if((gom) == (0LL)){
(ad)((131118LL), ((ghx)->ne), (nullptr));
return nullptr;
}
(gol) = ((gol) % (gom));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(gpe) = (new bxl());
(bwv)((gpe), (67585LL), ((ghx)->ne));
((gpe)->pf) = (((ghx)->cab)->pf);
((gpe)->bxn) = (static_cast<uint64_t>(gol));
(gpe) = (as_<bxl>(classTable_, ((ecl)((gpe))), 70));
((ghx)->nk) = (gpe);
return as_<gd>(classTable_, ((ghx)->nk), 14);
}
else{
if(!((gfs)((((ghx)->cab)->pf)))){
throw 0xE9170000U;
}
(gpg) = ((as_<ecu>(classTable_, ((ghx)->cab), 132))->ggf);
(gph) = ((as_<ecu>(classTable_, ((ghx)->cac), 132))->ggf);
switch((ghx)->bzy){
case 19LL:
(gpg) = ((gpg) + (gph));
break;
case 20LL:
(gpg) = ((gpg) - (gph));
break;
case 21LL:
(gpg) = ((gpg) * (gph));
break;
case 22LL:
if(((gpg) == (0.0)) && ((gph) == (0.0))){
(ad)((131118LL), ((ghx)->ne), (nullptr));
return nullptr;
}
(gpg) = ((gpg) / (gph));
break;
case 23LL:
if(((gpg) == (0.0)) && ((gph) == (0.0))){
(ad)((131118LL), ((ghx)->ne), (nullptr));
return nullptr;
}
(gpg) = (fmod((gpg), (gph)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(gpz) = (new ecu());
(bwv)((gpz), (67588LL), ((ghx)->ne));
((gpz)->pf) = (((ghx)->cab)->pf);
((gpz)->ggf) = (gpg);
(gpz) = (as_<ecu>(classTable_, ((ect)((gpz))), 132));
((ghx)->nk) = (gpz);
return as_<gd>(classTable_, ((ghx)->nk), 14);
}
}
((ghx)->pf) = (((ghx)->cab)->pf);
(gih) = (true);
}
break;
case 24LL:
if(((bdg)((((ghx)->cab)->pf))) || ((gfs)((((ghx)->cab)->pf)))){
((ghx)->pf) = (((ghx)->cab)->pf);
(gih) = (true);
}
break;
case 25LL:
if(((((ghx)->cab)->pj) == (1LL)) || ((((ghx)->cac)->pj) == (1LL))){
(ad)((131119LL), ((ghx)->ne), (nullptr));
return nullptr;
}
if((!((egp)((((ghx)->cab)->pf)))) && (!eqAddr_(((((ghx)->cab)->pf)->nj), ((((ghx)->cac)->pf)->nj)))){
((ghx)->pf) = (((ghx)->cab)->pf);
(gih) = (true);
}
break;
}
if(!(gih)){
(ad)((131113LL), ((ghx)->ne), (nullptr));
return nullptr;
}
((ghx)->pj) = (1LL);
return ghx;
}
// rebuildExpr3
static gd* ebj(ebk* gqk /*ast*/){
if(!eqAddr_(((gqk)->nk), (nullptr))){
return as_<gd>(classTable_, ((gqk)->nk), 14);
}
((gqk)->nk) = (gqk);
((gqk)->gqn) = ((bzt)(((gqk)->gqn), (false)));
if(eqAddr_(((gqk)->gqn), (nullptr))){
return nullptr;
}
((gqk)->gqq) = ((bzt)(((gqk)->gqq), (false)));
if(eqAddr_(((gqk)->gqq), (nullptr))){
return nullptr;
}
((gqk)->gqt) = ((bzt)(((gqk)->gqt), (false)));
if(eqAddr_(((gqk)->gqt), (nullptr))){
return nullptr;
}
if(!((ggi)((((gqk)->gqn)->pf)))){
(ad)((131120LL), ((gqk)->ne), (nullptr));
return nullptr;
}
if((!((dze)((((gqk)->gqq)->pf), (((gqk)->gqt)->pf), (false)))) && (!((dze)((((gqk)->gqt)->pf), (((gqk)->gqq)->pf), (false))))){
(ad)((131121LL), ((gqk)->ne), (nullptr));
return nullptr;
}
if((((gqk)->gqn)->lw) == (67585LL)){
((gqk)->nk) = ((((as_<bxl>(classTable_, ((gqk)->gqn), 70))->bxn) != (0x0000000000000000ULL)) ? ((gqk)->gqq) : ((gqk)->gqt));
return as_<gd>(classTable_, ((gqk)->nk), 14);
}
if(((((gqk)->gqq)->pf)->lw) == (1028LL)){
if(((((gqk)->gqt)->pf)->lw) == (1028LL)){
if(!((((gqk)->gqq)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((gqk)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<ecr>(classTable_, ((gqk)->gqq), 130))->gjp))));
return nullptr;
}
((gqk)->gqq) = ((dzh)(((gqk)->gqq), (((gqk)->gqt)->pf)));
}
else if(((((gqk)->gqt)->pf)->lw) == (1028LL)){
((gqk)->gqt) = ((dzh)(((gqk)->gqt), (((gqk)->gqq)->pf)));
}
if((dze)((((gqk)->gqq)->pf), (((gqk)->gqt)->pf), (false))){
((gqk)->pf) = ((((((gqk)->gqt)->pf)->lw) == (1027LL)) ? (((gqk)->gqq)->pf) : (((gqk)->gqt)->pf));
}
else{
((gqk)->pf) = ((((((gqk)->gqq)->pf)->lw) == (1027LL)) ? (((gqk)->gqt)->pf) : (((gqk)->gqq)->pf));
}
((gqk)->pj) = (1LL);
return gqk;
}
// _dtor
static void grk(ebk* grl){
((grl)->gqn) = (nullptr);
((grl)->gqq) = (nullptr);
((grl)->gqt) = (nullptr);
((grl)->pf) = (nullptr);
((grl)->ne) = (nullptr);
((grl)->nf) = (nullptr);
((grl)->ng) = (nullptr);
((grl)->nh) = (nullptr);
((grl)->ni) = (nullptr);
((grl)->nj) = (nullptr);
((grl)->nk) = (nullptr);
}
// _copy
static ebk* grm(ebk* grn){
ebk* gro = nullptr;
(gro) = (new ebk());
((gro)->gqn) = (copy_((grn)->gqn));
((gro)->gqq) = (copy_((grn)->gqq));
((gro)->gqt) = (copy_((grn)->gqt));
((gro)->pf) = (copy_((grn)->pf));
((gro)->pj) = ((grn)->pj);
((gro)->ne) = (copy_((grn)->ne));
((gro)->nf) = (copy_((grn)->nf));
((gro)->ng) = (copy_((grn)->ng));
((gro)->nh) = (copy_((grn)->nh));
((gro)->ni) = (copy_((grn)->ni));
((gro)->nj) = (copy_((grn)->nj));
((gro)->nk) = (copy_((grn)->nk));
((gro)->no) = ((grn)->no);
((gro)->lw) = ((grn)->lw);
return as_<ebk>(classTable_, (gro), 112);
}
// _toBin
static Array_<uint8_t>* grp(ebk* grq){
Array_<uint8_t>* grr = nullptr;
(grr) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(grr) = ((grr)->Cat(toBin_((grq)->gqn)));
(grr) = ((grr)->Cat(toBin_((grq)->gqq)));
(grr) = ((grr)->Cat(toBin_((grq)->gqt)));
(grr) = ((grr)->Cat(toBin_((grq)->pf)));
(grr) = ((grr)->Cat(toBin_((grq)->pj)));
(grr) = ((grr)->Cat(toBin_((grq)->ne)));
(grr) = ((grr)->Cat(toBin_((grq)->nf)));
(grr) = ((grr)->Cat(toBin_((grq)->ng)));
(grr) = ((grr)->Cat(toBin_((grq)->nh)));
(grr) = ((grr)->Cat(toBin_((grq)->ni)));
(grr) = ((grr)->Cat(toBin_((grq)->nj)));
(grr) = ((grr)->Cat(toBin_((grq)->nk)));
(grr) = ((grr)->Cat(toBin_((grq)->no)));
(grr) = ((grr)->Cat(toBin_((grq)->lw)));
return grr;
}
// _fromBin
static ebk* gsg(ebk* gsh, Array_<uint8_t>* gsi, int64_t* gsj){
ebk* gsk = nullptr;
(gsk) = (new ebk());
((gsk)->gqn) = (fromBin_<gd*>((gsi), (*gsj)));
((gsk)->gqq) = (fromBin_<gd*>((gsi), (*gsj)));
((gsk)->gqt) = (fromBin_<gd*>((gsi), (*gsj)));
((gsk)->pf) = (fromBin_<gc*>((gsi), (*gsj)));
((gsk)->pj) = (fromBin_<int64_t>((gsi), (*gsj)));
((gsk)->ne) = (fromBin_<ga*>((gsi), (*gsj)));
((gsk)->nf) = (fromBin_<Array_<char16_t>*>((gsi), (*gsj)));
((gsk)->ng) = (fromBin_<fx*>((gsi), (*gsj)));
((gsk)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gsi), (*gsj)));
((gsk)->ni) = (fromBin_<Array_<char16_t>*>((gsi), (*gsj)));
((gsk)->nj) = (fromBin_<fx*>((gsi), (*gsj)));
((gsk)->nk) = (fromBin_<fy*>((gsi), (*gsj)));
((gsk)->no) = (fromBin_<bool>((gsi), (*gsj)));
((gsk)->lw) = (fromBin_<int64_t>((gsi), (*gsj)));
return gsk;
}
// rebuildExprNew
static gd* ebm(ebn* gsl /*ast*/){
if(!eqAddr_(((gsl)->nk), (nullptr))){
return as_<gd>(classTable_, ((gsl)->nk), 14);
}
((gsl)->nk) = (gsl);
((gsl)->gso) = ((bza)(((gsl)->gso), (nullptr)));
if(eqAddr_(((gsl)->gso), (nullptr))){
return nullptr;
}
if(((egp)(((gsl)->gso))) && (eqAddr_((((gsl)->gso)->nj), (nullptr)))){
return nullptr;
}
if(!((((egp)(((gsl)->gso))) || ((((gsl)->gso)->lw) == (66563LL))) || ((((gsl)->gso)->lw) == (66564LL)))){
(ad)((131122LL), ((gsl)->ne), (nullptr));
return nullptr;
}
((gsl)->pf) = ((gsl)->gso);
((gsl)->pj) = (1LL);
return gsl;
}
// _dtor
static void gsv(ebn* gsw){
((gsw)->gso) = (nullptr);
((gsw)->pf) = (nullptr);
((gsw)->ne) = (nullptr);
((gsw)->nf) = (nullptr);
((gsw)->ng) = (nullptr);
((gsw)->nh) = (nullptr);
((gsw)->ni) = (nullptr);
((gsw)->nj) = (nullptr);
((gsw)->nk) = (nullptr);
}
// _copy
static ebn* gsx(ebn* gsy){
ebn* gsz = nullptr;
(gsz) = (new ebn());
((gsz)->gso) = (copy_((gsy)->gso));
((gsz)->pf) = (copy_((gsy)->pf));
((gsz)->pj) = ((gsy)->pj);
((gsz)->ne) = (copy_((gsy)->ne));
((gsz)->nf) = (copy_((gsy)->nf));
((gsz)->ng) = (copy_((gsy)->ng));
((gsz)->nh) = (copy_((gsy)->nh));
((gsz)->ni) = (copy_((gsy)->ni));
((gsz)->nj) = (copy_((gsy)->nj));
((gsz)->nk) = (copy_((gsy)->nk));
((gsz)->no) = ((gsy)->no);
((gsz)->lw) = ((gsy)->lw);
return as_<ebn>(classTable_, (gsz), 114);
}
// _toBin
static Array_<uint8_t>* gta(ebn* gtb){
Array_<uint8_t>* gtc = nullptr;
(gtc) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gtc) = ((gtc)->Cat(toBin_((gtb)->gso)));
(gtc) = ((gtc)->Cat(toBin_((gtb)->pf)));
(gtc) = ((gtc)->Cat(toBin_((gtb)->pj)));
(gtc) = ((gtc)->Cat(toBin_((gtb)->ne)));
(gtc) = ((gtc)->Cat(toBin_((gtb)->nf)));
(gtc) = ((gtc)->Cat(toBin_((gtb)->ng)));
(gtc) = ((gtc)->Cat(toBin_((gtb)->nh)));
(gtc) = ((gtc)->Cat(toBin_((gtb)->ni)));
(gtc) = ((gtc)->Cat(toBin_((gtb)->nj)));
(gtc) = ((gtc)->Cat(toBin_((gtb)->nk)));
(gtc) = ((gtc)->Cat(toBin_((gtb)->no)));
(gtc) = ((gtc)->Cat(toBin_((gtb)->lw)));
return gtc;
}
// _fromBin
static ebn* gtp(ebn* gtq, Array_<uint8_t>* gtr, int64_t* gts){
ebn* gtt = nullptr;
(gtt) = (new ebn());
((gtt)->gso) = (fromBin_<gc*>((gtr), (*gts)));
((gtt)->pf) = (fromBin_<gc*>((gtr), (*gts)));
((gtt)->pj) = (fromBin_<int64_t>((gtr), (*gts)));
((gtt)->ne) = (fromBin_<ga*>((gtr), (*gts)));
((gtt)->nf) = (fromBin_<Array_<char16_t>*>((gtr), (*gts)));
((gtt)->ng) = (fromBin_<fx*>((gtr), (*gts)));
((gtt)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gtr), (*gts)));
((gtt)->ni) = (fromBin_<Array_<char16_t>*>((gtr), (*gts)));
((gtt)->nj) = (fromBin_<fx*>((gtr), (*gts)));
((gtt)->nk) = (fromBin_<fy*>((gtr), (*gts)));
((gtt)->no) = (fromBin_<bool>((gtr), (*gts)));
((gtt)->lw) = (fromBin_<int64_t>((gtr), (*gts)));
return gtt;
}
// rebuildExprNewArray
static gd* ebp(ebq* gtu /*ast*/){
List_<gd*>* gty = nullptr; // items
gd* gud = nullptr; // data
gc* gum = nullptr; // type
int64_t guq = 0;
cce* gus = nullptr; // type2
int64_t gur = 0;
if(!eqAddr_(((gtu)->nk), (nullptr))){
return as_<gd>(classTable_, ((gtu)->nk), 14);
}
((gtu)->nk) = (gtu);
(gty) = ((gtu)->gtz);
awe<List_<gd*>*>((gty), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((gty), (new Array_<int64_t>(1, (0LL)))))){
(gud) = (awi<List_<gd*>*, gd*>((gty), (new Array_<int64_t>(1, (0LL)))));
(gud) = ((bzt)((gud), (false)));
if(eqAddr_((gud), (nullptr))){
return nullptr;
}
if(!((bdg)(((gud)->pf)))){
(ad)((131123LL), ((gud)->ne), (nullptr));
return nullptr;
}
bfe<List_<gd*>*, gd*>((gty), (new Array_<int64_t>(1, (0LL))), (gud));
bfh<List_<gd*>*>((gty), (new Array_<int64_t>(1, (0LL))));
}
((gtu)->gui) = ((bza)(((gtu)->gui), (nullptr)));
if(eqAddr_(((gtu)->gui), (nullptr))){
return nullptr;
}
(gum) = ((gtu)->gui);
for(guq = (0LL), gur = ((((gtu)->gtz)->Len()) - (1LL)); guq <= gur; guq += (1LL)){
(gus) = (new cce());
(bvn)((gus), (66561LL), ((gtu)->ne));
((gus)->ccg) = (gum);
(gum) = (gus);
}
((gtu)->pf) = (gum);
((gtu)->pj) = (1LL);
return gtu;
}
// _dtor
static void gut(ebq* guu){
((guu)->gtz) = (nullptr);
((guu)->gui) = (nullptr);
((guu)->pf) = (nullptr);
((guu)->ne) = (nullptr);
((guu)->nf) = (nullptr);
((guu)->ng) = (nullptr);
((guu)->nh) = (nullptr);
((guu)->ni) = (nullptr);
((guu)->nj) = (nullptr);
((guu)->nk) = (nullptr);
}
// _copy
static ebq* guv(ebq* guw){
ebq* gux = nullptr;
(gux) = (new ebq());
((gux)->gtz) = (copy_((guw)->gtz));
((gux)->gui) = (copy_((guw)->gui));
((gux)->pf) = (copy_((guw)->pf));
((gux)->pj) = ((guw)->pj);
((gux)->ne) = (copy_((guw)->ne));
((gux)->nf) = (copy_((guw)->nf));
((gux)->ng) = (copy_((guw)->ng));
((gux)->nh) = (copy_((guw)->nh));
((gux)->ni) = (copy_((guw)->ni));
((gux)->nj) = (copy_((guw)->nj));
((gux)->nk) = (copy_((guw)->nk));
((gux)->no) = ((guw)->no);
((gux)->lw) = ((guw)->lw);
return as_<ebq>(classTable_, (gux), 116);
}
// _toBin
static Array_<uint8_t>* guy(ebq* guz){
Array_<uint8_t>* gva = nullptr;
(gva) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gva) = ((gva)->Cat(toBin_((guz)->gtz)));
(gva) = ((gva)->Cat(toBin_((guz)->gui)));
(gva) = ((gva)->Cat(toBin_((guz)->pf)));
(gva) = ((gva)->Cat(toBin_((guz)->pj)));
(gva) = ((gva)->Cat(toBin_((guz)->ne)));
(gva) = ((gva)->Cat(toBin_((guz)->nf)));
(gva) = ((gva)->Cat(toBin_((guz)->ng)));
(gva) = ((gva)->Cat(toBin_((guz)->nh)));
(gva) = ((gva)->Cat(toBin_((guz)->ni)));
(gva) = ((gva)->Cat(toBin_((guz)->nj)));
(gva) = ((gva)->Cat(toBin_((guz)->nk)));
(gva) = ((gva)->Cat(toBin_((guz)->no)));
(gva) = ((gva)->Cat(toBin_((guz)->lw)));
return gva;
}
// _fromBin
static ebq* gvo(ebq* gvp, Array_<uint8_t>* gvq, int64_t* gvr){
ebq* gvs = nullptr;
(gvs) = (new ebq());
((gvs)->gtz) = (fromBin_<List_<gd*>*>((gvq), (*gvr)));
((gvs)->gui) = (fromBin_<gc*>((gvq), (*gvr)));
((gvs)->pf) = (fromBin_<gc*>((gvq), (*gvr)));
((gvs)->pj) = (fromBin_<int64_t>((gvq), (*gvr)));
((gvs)->ne) = (fromBin_<ga*>((gvq), (*gvr)));
((gvs)->nf) = (fromBin_<Array_<char16_t>*>((gvq), (*gvr)));
((gvs)->ng) = (fromBin_<fx*>((gvq), (*gvr)));
((gvs)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gvq), (*gvr)));
((gvs)->ni) = (fromBin_<Array_<char16_t>*>((gvq), (*gvr)));
((gvs)->nj) = (fromBin_<fx*>((gvq), (*gvr)));
((gvs)->nk) = (fromBin_<fy*>((gvq), (*gvr)));
((gvs)->no) = (fromBin_<bool>((gvq), (*gvr)));
((gvs)->lw) = (fromBin_<int64_t>((gvq), (*gvr)));
return gvs;
}
// rebuildExprAs
static gd* ebs(ebt* gvt /*ast*/){
int64_t gwd = 0;
gc* gwg = nullptr; // t1
gc* gwh = nullptr; // t2
uint64_t gxu = 0; // n
bxl* gxx = nullptr; // expr
bxl* gxz = nullptr; // expr
ecu* gyb = nullptr; // expr
bxl* gyg = nullptr; // expr
bxl* gyi = nullptr; // expr
bxl* gyk = nullptr; // expr
double gym = 0.0; // n
bxl* gyp = nullptr; // expr
bxl* gyr = nullptr; // expr
bvz* gyv = nullptr; // type
if(!eqAddr_(((gvt)->nk), (nullptr))){
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
((gvt)->nk) = (gvt);
((gvt)->gvw) = ((bzt)(((gvt)->gvw), (false)));
if(eqAddr_(((gvt)->gvw), (nullptr))){
return nullptr;
}
((gvt)->gvz) = ((bza)(((gvt)->gvz), (nullptr)));
if(eqAddr_(((gvt)->gvz), (nullptr))){
return nullptr;
}
if(!(eqAddr_(((gvt)->pf), (nullptr)))){
throw 0xE9170000U;
}
switch((gvt)->gwe){
case 0LL:
(gwg) = (((gvt)->gvw)->pf);
(gwh) = ((gvt)->gvz);
if((((gwg)->lw) == (1025LL)) || ((bdg)((gwg)))){
if((((((((gwh)->lw) == (1025LL)) || ((bdg)((gwh)))) || ((gfs)((gwh)))) || ((err)((gwh)))) || ((ggi)((gwh)))) || ((cmx)((gwh)))){
if((dze)((gwg), (gwh), (false))){
((gvt)->nk) = ((gvt)->gvw);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
((gvt)->pf) = (gwh);
}
}
else if((gfs)((gwg))){
if(((((gwh)->lw) == (1025LL)) || ((bdg)((gwh)))) || ((gfs)((gwh)))){
if((dze)((gwg), (gwh), (false))){
((gvt)->nk) = ((gvt)->gvw);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
((gvt)->pf) = (gwh);
}
}
else if((err)((gwg))){
if(((((gwh)->lw) == (1025LL)) || ((bdg)((gwh)))) || ((err)((gwh)))){
if((dze)((gwg), (gwh), (false))){
((gvt)->nk) = ((gvt)->gvw);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
((gvt)->pf) = (gwh);
}
}
else if((ggi)((gwg))){
if(((((gwh)->lw) == (1025LL)) || ((bdg)((gwh)))) || ((ggi)((gwh)))){
if((dze)((gwg), (gwh), (false))){
((gvt)->nk) = ((gvt)->gvw);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
((gvt)->pf) = (gwh);
}
}
else if((egp)((gwg))){
if((egp)((gwh))){
((gvt)->pf) = (gwh);
}
}
else if((cmx)((gwg))){
if(((((gwh)->lw) == (1025LL)) || ((bdg)((gwh)))) || ((cmx)((gwh)))){
if((dze)((gwg), (gwh), (false))){
((gvt)->nk) = ((gvt)->gvw);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
((gvt)->pf) = (gwh);
}
}
else if(((gwg)->lw) == (1028LL)){
if((cmx)((gwh))){
((gvt)->pf) = (gwh);
}
}
if(!eqAddr_(((gvt)->pf), (nullptr))){
if((aye<int64_t>((((gvt)->gvw)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)){
if(((((((gwg)->lw) == (1025LL)) || ((err)((gwg)))) || ((ggi)((gwg)))) || ((bdg)((gwg)))) || ((cmx)((gwg)))){
(gxu) = ((as_<bxl>(classTable_, ((gvt)->gvw), 70))->bxn);
if(((gwh)->lw) == (1025LL)){
(gxx) = (new bxl());
(bwv)((gxx), (67585LL), ((gvt)->ne));
((gxx)->pf) = ((gvt)->pf);
((gxx)->bxn) = ((goj)(((as_<cci>(classTable_, (gwh), 78))->ccj), (gxu)));
(gxx) = (as_<bxl>(classTable_, ((ecl)((gxx))), 70));
((gvt)->nk) = (gxx);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
else if(((bdg)((gwh))) || ((cmx)((gwh)))){
(gxz) = (new bxl());
(bwv)((gxz), (67585LL), ((gvt)->ne));
((gxz)->pf) = ((gvt)->pf);
((gxz)->bxn) = (gxu);
(gxz) = (as_<bxl>(classTable_, ((ecl)((gxz))), 70));
((gvt)->nk) = (gxz);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
else if((gfs)((gwh))){
(gyb) = (new ecu());
(bwv)((gyb), (67588LL), ((gvt)->ne));
((gyb)->pf) = ((gvt)->pf);
if(((bdg)((gwg))) || ((cmx)((gwg)))){
((gyb)->ggf) = (static_cast<double>(static_cast<int64_t>(gxu)));
}
else{
((gyb)->ggf) = (static_cast<double>(gxu));
}
(gyb) = (as_<ecu>(classTable_, ((ect)((gyb))), 132));
((gvt)->nk) = (gyb);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
else if((err)((gwh))){
(gyg) = (new bxl());
(bwv)((gyg), (67585LL), ((gvt)->ne));
((gyg)->pf) = ((gvt)->pf);
((gyg)->bxn) = ((goj)((2LL), (gxu)));
(gyg) = (as_<bxl>(classTable_, ((ecl)((gyg))), 70));
((gvt)->nk) = (gyg);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
else{
if(!((ggi)((gwh)))){
throw 0xE9170000U;
}
(gyi) = (new bxl());
(bwv)((gyi), (67585LL), ((gvt)->ne));
((gyi)->pf) = ((gvt)->pf);
((gyi)->bxn) = (((gxu) != (0x0000000000000000ULL)) ? (0x0000000000000001ULL) : (0x0000000000000000ULL));
(gyi) = (as_<bxl>(classTable_, ((ecl)((gyi))), 70));
((gvt)->nk) = (gyi);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
}
else if(((gwg)->lw) == (1028LL)){
if(!((((gwh)->nj)->lw) == (6LL))){
throw 0xE9170000U;
}
(gyk) = (new bxl());
(bwv)((gyk), (67585LL), ((gvt)->ne));
((gyk)->pf) = ((gvt)->pf);
((gyk)->bxn) = ((gdo)((as_<ecr>(classTable_, ((gvt)->gvw), 130)), (as_<bsu>(classTable_, ((gwh)->nj), 48))));
(gyk) = (as_<bxl>(classTable_, ((ecl)((gyk))), 70));
((gvt)->nk) = (gyk);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
else{
if(!((gfs)((gwg)))){
throw 0xE9170000U;
}
(gym) = ((as_<ecu>(classTable_, ((gvt)->gvw), 132))->ggf);
if(((gwh)->lw) == (1025LL)){
(gyp) = (new bxl());
(bwv)((gyp), (67585LL), ((gvt)->ne));
((gyp)->pf) = ((gvt)->pf);
((gyp)->bxn) = ((goj)(((as_<cci>(classTable_, (gwh), 78))->ccj), (static_cast<uint64_t>(gym))));
(gyp) = (as_<bxl>(classTable_, ((ecl)((gyp))), 70));
((gvt)->nk) = (gyp);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
else{
if(!((bdg)((gwh)))){
throw 0xE9170000U;
}
(gyr) = (new bxl());
(bwv)((gyr), (67585LL), ((gvt)->ne));
((gyr)->pf) = ((gvt)->pf);
((gyr)->bxn) = (static_cast<uint64_t>(gym));
(gyr) = (as_<bxl>(classTable_, ((ecl)((gyr))), 70));
((gvt)->nk) = (gyr);
return as_<gd>(classTable_, ((gvt)->nk), 14);
}
}
}
}
break;
case 1LL:
case 2LL:
if(((egp)((((gvt)->gvw)->pf))) && ((egp)(((gvt)->gvz)))){
(gyv) = (new bvz());
(bvn)((gyv), (1026LL), ((gvt)->ne));
((gyv)->bwa) = (3LL);
((gvt)->pf) = (gyv);
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(eqAddr_(((gvt)->pf), (nullptr))){
(ad)((131113LL), ((gvt)->ne), (nullptr));
return nullptr;
}
((gvt)->pj) = (1LL);
return gvt;
}
// _dtor
static void gyz(ebt* gza){
((gza)->gvw) = (nullptr);
((gza)->gvz) = (nullptr);
((gza)->pf) = (nullptr);
((gza)->ne) = (nullptr);
((gza)->nf) = (nullptr);
((gza)->ng) = (nullptr);
((gza)->nh) = (nullptr);
((gza)->ni) = (nullptr);
((gza)->nj) = (nullptr);
((gza)->nk) = (nullptr);
}
// _copy
static ebt* gzb(ebt* gzc){
ebt* gzd = nullptr;
(gzd) = (new ebt());
((gzd)->gwe) = ((gzc)->gwe);
((gzd)->gvw) = (copy_((gzc)->gvw));
((gzd)->gvz) = (copy_((gzc)->gvz));
((gzd)->pf) = (copy_((gzc)->pf));
((gzd)->pj) = ((gzc)->pj);
((gzd)->ne) = (copy_((gzc)->ne));
((gzd)->nf) = (copy_((gzc)->nf));
((gzd)->ng) = (copy_((gzc)->ng));
((gzd)->nh) = (copy_((gzc)->nh));
((gzd)->ni) = (copy_((gzc)->ni));
((gzd)->nj) = (copy_((gzc)->nj));
((gzd)->nk) = (copy_((gzc)->nk));
((gzd)->no) = ((gzc)->no);
((gzd)->lw) = ((gzc)->lw);
return as_<ebt>(classTable_, (gzd), 118);
}
// _toBin
static Array_<uint8_t>* gze(ebt* gzf){
Array_<uint8_t>* gzg = nullptr;
(gzg) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->gwe)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->gvw)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->gvz)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->pf)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->pj)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->ne)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->nf)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->ng)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->nh)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->ni)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->nj)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->nk)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->no)));
(gzg) = ((gzg)->Cat(toBin_((gzf)->lw)));
return gzg;
}
// _fromBin
static ebt* gzv(ebt* gzw, Array_<uint8_t>* gzx, int64_t* gzy){
ebt* gzz = nullptr;
(gzz) = (new ebt());
((gzz)->gwe) = (fromBin_<int64_t>((gzx), (*gzy)));
((gzz)->gvw) = (fromBin_<gd*>((gzx), (*gzy)));
((gzz)->gvz) = (fromBin_<gc*>((gzx), (*gzy)));
((gzz)->pf) = (fromBin_<gc*>((gzx), (*gzy)));
((gzz)->pj) = (fromBin_<int64_t>((gzx), (*gzy)));
((gzz)->ne) = (fromBin_<ga*>((gzx), (*gzy)));
((gzz)->nf) = (fromBin_<Array_<char16_t>*>((gzx), (*gzy)));
((gzz)->ng) = (fromBin_<fx*>((gzx), (*gzy)));
((gzz)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gzx), (*gzy)));
((gzz)->ni) = (fromBin_<Array_<char16_t>*>((gzx), (*gzy)));
((gzz)->nj) = (fromBin_<fx*>((gzx), (*gzy)));
((gzz)->nk) = (fromBin_<fy*>((gzx), (*gzy)));
((gzz)->no) = (fromBin_<bool>((gzx), (*gzy)));
((gzz)->lw) = (fromBin_<int64_t>((gzx), (*gzy)));
return gzz;
}
// rebuildExprToBin
static gd* ebv(ebw* haa /*ast*/){
if(!eqAddr_(((haa)->nk), (nullptr))){
return as_<gd>(classTable_, ((haa)->nk), 14);
}
((haa)->nk) = (haa);
((haa)->had) = ((bzt)(((haa)->had), (false)));
if(eqAddr_(((haa)->had), (nullptr))){
return nullptr;
}
if((((((haa)->had)->pf)->lw) == (1027LL)) || (((((haa)->had)->pf)->lw) == (1028LL))){
(ad)((131113LL), ((haa)->ne), (nullptr));
return nullptr;
}
if((((((haa)->haj)->lw) != (66561LL)) || ((((as_<cce>(classTable_, ((haa)->haj), 76))->ccg)->lw) != (1025LL))) || (((as_<cci>(classTable_, ((as_<cce>(classTable_, ((haa)->haj), 76))->ccg), 78))->ccj) != (1LL))){
(ad)((131113LL), ((haa)->ne), (nullptr));
return nullptr;
}
((haa)->pf) = ((haa)->haj);
((haa)->pj) = (1LL);
return haa;
}
// _dtor
static void hal(ebw* ham){
((ham)->had) = (nullptr);
((ham)->haj) = (nullptr);
((ham)->pf) = (nullptr);
((ham)->ne) = (nullptr);
((ham)->nf) = (nullptr);
((ham)->ng) = (nullptr);
((ham)->nh) = (nullptr);
((ham)->ni) = (nullptr);
((ham)->nj) = (nullptr);
((ham)->nk) = (nullptr);
}
// _copy
static ebw* han(ebw* hao){
ebw* hap = nullptr;
(hap) = (new ebw());
((hap)->had) = (copy_((hao)->had));
((hap)->haj) = (copy_((hao)->haj));
((hap)->pf) = (copy_((hao)->pf));
((hap)->pj) = ((hao)->pj);
((hap)->ne) = (copy_((hao)->ne));
((hap)->nf) = (copy_((hao)->nf));
((hap)->ng) = (copy_((hao)->ng));
((hap)->nh) = (copy_((hao)->nh));
((hap)->ni) = (copy_((hao)->ni));
((hap)->nj) = (copy_((hao)->nj));
((hap)->nk) = (copy_((hao)->nk));
((hap)->no) = ((hao)->no);
((hap)->lw) = ((hao)->lw);
return as_<ebw>(classTable_, (hap), 120);
}
// _toBin
static Array_<uint8_t>* haq(ebw* har){
Array_<uint8_t>* has = nullptr;
(has) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(has) = ((has)->Cat(toBin_((har)->had)));
(has) = ((has)->Cat(toBin_((har)->haj)));
(has) = ((has)->Cat(toBin_((har)->pf)));
(has) = ((has)->Cat(toBin_((har)->pj)));
(has) = ((has)->Cat(toBin_((har)->ne)));
(has) = ((has)->Cat(toBin_((har)->nf)));
(has) = ((has)->Cat(toBin_((har)->ng)));
(has) = ((has)->Cat(toBin_((har)->nh)));
(has) = ((has)->Cat(toBin_((har)->ni)));
(has) = ((has)->Cat(toBin_((har)->nj)));
(has) = ((has)->Cat(toBin_((har)->nk)));
(has) = ((has)->Cat(toBin_((har)->no)));
(has) = ((has)->Cat(toBin_((har)->lw)));
return has;
}
// _fromBin
static ebw* hbg(ebw* hbh, Array_<uint8_t>* hbi, int64_t* hbj){
ebw* hbk = nullptr;
(hbk) = (new ebw());
((hbk)->had) = (fromBin_<gd*>((hbi), (*hbj)));
((hbk)->haj) = (fromBin_<gc*>((hbi), (*hbj)));
((hbk)->pf) = (fromBin_<gc*>((hbi), (*hbj)));
((hbk)->pj) = (fromBin_<int64_t>((hbi), (*hbj)));
((hbk)->ne) = (fromBin_<ga*>((hbi), (*hbj)));
((hbk)->nf) = (fromBin_<Array_<char16_t>*>((hbi), (*hbj)));
((hbk)->ng) = (fromBin_<fx*>((hbi), (*hbj)));
((hbk)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hbi), (*hbj)));
((hbk)->ni) = (fromBin_<Array_<char16_t>*>((hbi), (*hbj)));
((hbk)->nj) = (fromBin_<fx*>((hbi), (*hbj)));
((hbk)->nk) = (fromBin_<fy*>((hbi), (*hbj)));
((hbk)->no) = (fromBin_<bool>((hbi), (*hbj)));
((hbk)->lw) = (fromBin_<int64_t>((hbi), (*hbj)));
return hbk;
}
// rebuildExprFromBin
static gd* eby(ebz* hbl /*ast*/){
if(!eqAddr_(((hbl)->nk), (nullptr))){
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
((hbl)->nk) = (hbl);
((hbl)->hbo) = ((bzt)(((hbl)->hbo), (false)));
if(eqAddr_(((hbl)->hbo), (nullptr))){
return nullptr;
}
if(((((((hbl)->hbo)->pf)->lw) != (66561LL)) || ((((as_<cce>(classTable_, (((hbl)->hbo)->pf), 76))->ccg)->lw) != (1025LL))) || (((as_<cci>(classTable_, ((as_<cce>(classTable_, (((hbl)->hbo)->pf), 76))->ccg), 78))->ccj) != (1LL))){
(ad)((131113LL), ((hbl)->ne), (nullptr));
return nullptr;
}
((hbl)->pf) = ((hbl)->hbt);
((hbl)->pj) = (1LL);
((hbl)->hbu) = ((bzt)(((hbl)->hbu), (false)));
return hbl;
}
// _dtor
static void hbv(ebz* hbw){
((hbw)->hbo) = (nullptr);
((hbw)->hbt) = (nullptr);
((hbw)->hbu) = (nullptr);
((hbw)->pf) = (nullptr);
((hbw)->ne) = (nullptr);
((hbw)->nf) = (nullptr);
((hbw)->ng) = (nullptr);
((hbw)->nh) = (nullptr);
((hbw)->ni) = (nullptr);
((hbw)->nj) = (nullptr);
((hbw)->nk) = (nullptr);
}
// _copy
static ebz* hbx(ebz* hby){
ebz* hbz = nullptr;
(hbz) = (new ebz());
((hbz)->hbo) = (copy_((hby)->hbo));
((hbz)->hbt) = (copy_((hby)->hbt));
((hbz)->hbu) = (copy_((hby)->hbu));
((hbz)->pf) = (copy_((hby)->pf));
((hbz)->pj) = ((hby)->pj);
((hbz)->ne) = (copy_((hby)->ne));
((hbz)->nf) = (copy_((hby)->nf));
((hbz)->ng) = (copy_((hby)->ng));
((hbz)->nh) = (copy_((hby)->nh));
((hbz)->ni) = (copy_((hby)->ni));
((hbz)->nj) = (copy_((hby)->nj));
((hbz)->nk) = (copy_((hby)->nk));
((hbz)->no) = ((hby)->no);
((hbz)->lw) = ((hby)->lw);
return as_<ebz>(classTable_, (hbz), 122);
}
// _toBin
static Array_<uint8_t>* hca(ebz* hcb){
Array_<uint8_t>* hcc = nullptr;
(hcc) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->hbo)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->hbt)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->hbu)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->pf)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->pj)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->ne)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->nf)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->ng)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->nh)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->ni)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->nj)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->nk)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->no)));
(hcc) = ((hcc)->Cat(toBin_((hcb)->lw)));
return hcc;
}
// _fromBin
static ebz* hcr(ebz* hcs, Array_<uint8_t>* hct, int64_t* hcu){
ebz* hcv = nullptr;
(hcv) = (new ebz());
((hcv)->hbo) = (fromBin_<gd*>((hct), (*hcu)));
((hcv)->hbt) = (fromBin_<gc*>((hct), (*hcu)));
((hcv)->hbu) = (fromBin_<gd*>((hct), (*hcu)));
((hcv)->pf) = (fromBin_<gc*>((hct), (*hcu)));
((hcv)->pj) = (fromBin_<int64_t>((hct), (*hcu)));
((hcv)->ne) = (fromBin_<ga*>((hct), (*hcu)));
((hcv)->nf) = (fromBin_<Array_<char16_t>*>((hct), (*hcu)));
((hcv)->ng) = (fromBin_<fx*>((hct), (*hcu)));
((hcv)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hct), (*hcu)));
((hcv)->ni) = (fromBin_<Array_<char16_t>*>((hct), (*hcu)));
((hcv)->nj) = (fromBin_<fx*>((hct), (*hcu)));
((hcv)->nk) = (fromBin_<fy*>((hct), (*hcu)));
((hcv)->no) = (fromBin_<bool>((hct), (*hcu)));
((hcv)->lw) = (fromBin_<int64_t>((hct), (*hcu)));
return hcv;
}
// rebuildExprCall
static gd* ecb(bwt* hcw /*ast*/){
ccm* hdc = nullptr; // type
bwu* hdf = nullptr; // valueType
ebn* hdh = nullptr; // expr
bwu* hdn = nullptr; // me_
bwu* hdu = nullptr; // meType
ecx* hdw = nullptr; // expr
bxl* hdz = nullptr; // value
bvz* heb = nullptr; // prim
int64_t hem = 0; // n
List_<bwu*>* hen = nullptr; // itemsExpr
List_<ccn*>* heo = nullptr; // itemsType
bwu* heq = nullptr; // argExpr
ccn* her = nullptr; // argType
if(!eqAddr_(((hcw)->nk), (nullptr))){
return as_<gd>(classTable_, ((hcw)->nk), 14);
}
((hcw)->nk) = (hcw);
((hcw)->bwz) = ((bzt)(((hcw)->bwz), (false)));
if(eqAddr_(((hcw)->bwz), (nullptr))){
return nullptr;
}
(hdc) = (as_<ccm>(classTable_, (((hcw)->bwz)->pf), 80));
if((aye<int64_t>(((hdc)->elm), (new Array_<int64_t>(1, (0LL))), (2048LL))) != (0LL)){
(hdf) = (new bwu());
if(!(!eqAddr_(((hdc)->ccp), (nullptr)))){
throw 0xE9170000U;
}
(hdh) = (new ebn());
(bwv)((hdh), (2052LL), ((hcw)->ne));
((hdh)->gso) = ((hdc)->ccp);
((hdf)->byi) = ((bzt)((hdh), (false)));
((hdf)->bye) = (false);
((hdf)->byf) = (false);
if((((hcw)->bww)->Len()) == (0LL)){
uh<List_<bwu*>*, bwu*>(((hcw)->bww), (new Array_<int64_t>(1, (0LL))), (hdf));
}
else{
awe<List_<bwu*>*>(((hcw)->bww), (new Array_<int64_t>(1, (0LL))));
bfe<List_<bwu*>*, bwu*>(((hcw)->bww), (new Array_<int64_t>(1, (0LL))), (hdf));
}
}
if(((((hcw)->bwz)->lw) == (2059LL)) && (((((hcw)->bwz)->pf)->lw) == (66562LL))){
(hdn) = (new bwu());
((hdn)->byi) = ((as_<ech>(classTable_, ((hcw)->bwz), 126))->hdo);
((hdn)->bye) = (false);
((hdn)->byf) = (false);
if((((hcw)->bww)->Len()) == (0LL)){
uh<List_<bwu*>*, bwu*>(((hcw)->bww), (new Array_<int64_t>(1, (0LL))), (hdn));
}
else{
awe<List_<bwu*>*>(((hcw)->bww), (new Array_<int64_t>(1, (0LL))));
bfe<List_<bwu*>*, bwu*>(((hcw)->bww), (new Array_<int64_t>(1, (0LL))), (hdn));
}
if((aye<int64_t>(((hdc)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL)){
(hdu) = (new bwu());
(hdw) = (new ecx());
(bwv)((hdw), (2060LL), ((hcw)->ne));
((hdw)->hdx) = (new List_<gd*>());
(hdz) = (new bxl());
(bwv)((hdz), (67585LL), ((hcw)->ne));
((hdz)->bxn) = (0x0000000000000000ULL);
(heb) = (new bvz());
(bvn)((heb), (1026LL), ((hcw)->ne));
((heb)->bwa) = (0LL);
((hdz)->pf) = (heb);
uh<List_<gd*>*, gd*>(((hdw)->hdx), (new Array_<int64_t>(1, (0LL))), (hdz));
((hdu)->byi) = ((bzt)((hdw), (false)));
((hdu)->bye) = (false);
((hdu)->byf) = (false);
if((((hcw)->bww)->Len()) == (1LL)){
uh<List_<bwu*>*, bwu*>(((hcw)->bww), (new Array_<int64_t>(1, (0LL))), (hdu));
}
else{
if(!((((hcw)->bww)->Len()) >= (2LL))){
throw 0xE9170000U;
}
awe<List_<bwu*>*>(((hcw)->bww), (new Array_<int64_t>(1, (0LL))));
ays<List_<bwu*>*>(((hcw)->bww), (new Array_<int64_t>(1, (0LL))));
bfe<List_<bwu*>*, bwu*>(((hcw)->bww), (new Array_<int64_t>(1, (0LL))), (hdu));
}
}
}
else{
if(((hdc)->lw) != (66562LL)){
(ad)((131124LL), ((hcw)->ne), (nullptr));
return nullptr;
}
(hdc) = (as_<ccm>(classTable_, (((hcw)->bwz)->pf), 80));
}
((hcw)->pf) = ((hdc)->ccp);
if((((hcw)->bww)->Len()) != (((hdc)->ccu)->Len())){
(ad)((131125LL), ((hcw)->ne), (new Array_<Array_<char16_t>*>(3, (v<int64_t>((((hdc)->ccu)->Len()), (new Array_<int64_t>(1, (0LL))))), (v<int64_t>((((hcw)->bww)->Len()), (new Array_<int64_t>(1, (0LL))))), ((hek)((hdc))))));
return nullptr;
}
(hem) = (0LL);
(hen) = ((hcw)->bww);
(heo) = ((hdc)->ccu);
awe<List_<bwu*>*>((hen), (new Array_<int64_t>(1, (0LL))));
awe<List_<ccn*>*>((heo), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bwu*>*>((hen), (new Array_<int64_t>(1, (0LL)))))){
(heq) = (awi<List_<bwu*>*, bwu*>((hen), (new Array_<int64_t>(1, (0LL)))));
(her) = (awi<List_<ccn*>*, ccn*>((heo), (new Array_<int64_t>(1, (0LL)))));
if((heq)->byf){
((as_<gb>(classTable_, (((heq)->byi)->nj), 10))->qf) = ((her)->cdc);
}
((heq)->byi) = ((bzt)(((heq)->byi), (false)));
if(!eqAddr_(((heq)->byi), (nullptr))){
if((((heq)->bye) && (!((heq)->byf))) && ((((heq)->byi)->pj) == (1LL))){
(ad)((131126LL), ((hcw)->ne), (new Array_<Array_<char16_t>*>(1, (v<int64_t>(((hem) + (1LL)), (new Array_<int64_t>(1, (0LL))))))));
return nullptr;
}
if((((heq)->bye) != ((her)->cde)) || (!((dze)((((heq)->byi)->pf), ((her)->cdc), (false))))){
(ad)((131127LL), ((hcw)->ne), (new Array_<Array_<char16_t>*>(3, (v<int64_t>(((hem) + (1LL)), (new Array_<int64_t>(1, (0LL))))), ((((her)->cde) ? (new Array_<char16_t>(1, u'\u0026')) : (new Array_<char16_t>(0)))->Cat((hek)(((her)->cdc)))), ((((heq)->bye) ? (new Array_<char16_t>(1, u'\u0026')) : (new Array_<char16_t>(0)))->Cat((hek)((((heq)->byi)->pf)))))));
return nullptr;
}
if(((((heq)->byi)->pf)->lw) == (1028LL)){
((heq)->byi) = ((dzh)(((heq)->byi), ((her)->cdc)));
}
}
ays<List_<bwu*>*>((hen), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>((heo), (new Array_<int64_t>(1, (0LL))));
(hem) = ((hem) + (1LL));
}
((hcw)->pj) = (1LL);
return hcw;
}
// rebuildExprArray
static gd* ecd(ece* hfd /*ast*/){
if(!eqAddr_(((hfd)->nk), (nullptr))){
return as_<gd>(classTable_, ((hfd)->nk), 14);
}
((hfd)->nk) = (hfd);
((hfd)->hfg) = ((bzt)(((hfd)->hfg), (false)));
if(eqAddr_(((hfd)->hfg), (nullptr))){
return nullptr;
}
if(((((hfd)->hfg)->pf)->lw) != (66561LL)){
(ad)((131128LL), ((hfd)->ne), (nullptr));
return nullptr;
}
((hfd)->hfl) = ((bzt)(((hfd)->hfl), (false)));
if(eqAddr_(((hfd)->hfl), (nullptr))){
return nullptr;
}
if(!((bdg)((((hfd)->hfl)->pf)))){
(ad)((131129LL), (((hfd)->hfl)->ne), (nullptr));
return nullptr;
}
((hfd)->pf) = ((as_<cce>(classTable_, (((hfd)->hfg)->pf), 76))->ccg);
((hfd)->pj) = (3LL);
return hfd;
}
// _dtor
static void hfq(ece* hfr){
((hfr)->hfg) = (nullptr);
((hfr)->hfl) = (nullptr);
((hfr)->pf) = (nullptr);
((hfr)->ne) = (nullptr);
((hfr)->nf) = (nullptr);
((hfr)->ng) = (nullptr);
((hfr)->nh) = (nullptr);
((hfr)->ni) = (nullptr);
((hfr)->nj) = (nullptr);
((hfr)->nk) = (nullptr);
}
// _copy
static ece* hfs(ece* hft){
ece* hfu = nullptr;
(hfu) = (new ece());
((hfu)->hfg) = (copy_((hft)->hfg));
((hfu)->hfl) = (copy_((hft)->hfl));
((hfu)->pf) = (copy_((hft)->pf));
((hfu)->pj) = ((hft)->pj);
((hfu)->ne) = (copy_((hft)->ne));
((hfu)->nf) = (copy_((hft)->nf));
((hfu)->ng) = (copy_((hft)->ng));
((hfu)->nh) = (copy_((hft)->nh));
((hfu)->ni) = (copy_((hft)->ni));
((hfu)->nj) = (copy_((hft)->nj));
((hfu)->nk) = (copy_((hft)->nk));
((hfu)->no) = ((hft)->no);
((hfu)->lw) = ((hft)->lw);
return as_<ece>(classTable_, (hfu), 124);
}
// _toBin
static Array_<uint8_t>* hfv(ece* hfw){
Array_<uint8_t>* hfx = nullptr;
(hfx) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->hfg)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->hfl)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->pf)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->pj)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->ne)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->nf)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->ng)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->nh)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->ni)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->nj)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->nk)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->no)));
(hfx) = ((hfx)->Cat(toBin_((hfw)->lw)));
return hfx;
}
// _fromBin
static ece* hgl(ece* hgm, Array_<uint8_t>* hgn, int64_t* hgo){
ece* hgp = nullptr;
(hgp) = (new ece());
((hgp)->hfg) = (fromBin_<gd*>((hgn), (*hgo)));
((hgp)->hfl) = (fromBin_<gd*>((hgn), (*hgo)));
((hgp)->pf) = (fromBin_<gc*>((hgn), (*hgo)));
((hgp)->pj) = (fromBin_<int64_t>((hgn), (*hgo)));
((hgp)->ne) = (fromBin_<ga*>((hgn), (*hgo)));
((hgp)->nf) = (fromBin_<Array_<char16_t>*>((hgn), (*hgo)));
((hgp)->ng) = (fromBin_<fx*>((hgn), (*hgo)));
((hgp)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hgn), (*hgo)));
((hgp)->ni) = (fromBin_<Array_<char16_t>*>((hgn), (*hgo)));
((hgp)->nj) = (fromBin_<fx*>((hgn), (*hgo)));
((hgp)->nk) = (fromBin_<fy*>((hgn), (*hgo)));
((hgp)->no) = (fromBin_<bool>((hgn), (*hgo)));
((hgp)->lw) = (fromBin_<int64_t>((hgn), (*hgo)));
return hgp;
}
// rebuildExprDot
static gd* ecg(ech* hgq /*ast*/){
bool hgx = false; // found
ul* hgy = nullptr; // ptr
List_<um*>* hha = nullptr; // items
um* hhc = nullptr; // item
ccm* hhh = nullptr; // type
List_<gb*>* hhj = nullptr; // items2
gb* hhl = nullptr; // arg
ccn* hhm = nullptr; // arg2
gc* hht = nullptr; // varType
Array_<char16_t>* hhw = nullptr; // member
gd* hia = nullptr; // expr
ccm* hie = nullptr; // func_
gc* hij = nullptr; // argType
ccm* hje = nullptr; // type
ccn* hjg = nullptr; // item
ccn* hji = nullptr; // item
ccn* hjk = nullptr; // item
cce* hkb = nullptr; // type
cce* hkg = nullptr; // type
cce* hkl = nullptr; // type
if(!eqAddr_(((hgq)->nk), (nullptr))){
return as_<gd>(classTable_, ((hgq)->nk), 14);
}
((hgq)->nk) = (hgq);
((hgq)->hdo) = ((bzt)(((hgq)->hdo), (false)));
if(eqAddr_(((hgq)->hdo), (nullptr))){
return nullptr;
}
if((egp)((((hgq)->hdo)->pf))){
(hgx) = (false);
(hgy) = (as_<ul>(classTable_, ((((hgq)->hdo)->pf)->nj), 22));
while(!eqAddr_((hgy), (nullptr))){
(hha) = ((hgy)->bag);
awe<List_<um*>*>((hha), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((hha), (new Array_<int64_t>(1, (0LL)))))){
(hhc) = (awi<List_<um*>*, um*>((hha), (new Array_<int64_t>(1, (0LL)))));
if(((((hhc)->azl)->lw) == (2LL)) && (cmp_(((hgq)->hhe), (((as_<bgi>(classTable_, ((hhc)->azl), 38))->bgk)->nf)) == 0)){
((hgq)->pf) = (((as_<bgi>(classTable_, ((hhc)->azl), 38))->bgk)->qf);
((hgq)->pj) = (3LL);
(hgx) = (true);
}
else if(((((hhc)->azl)->lw) == (256LL)) && (cmp_(((hgq)->hhe), (((hhc)->azl)->nf)) == 0)){
(hhh) = (new ccm());
(bvn)((hhh), (66562LL), ((hgq)->ne));
((hhh)->elm) = ((as_<fw>(classTable_, ((hhc)->azl), 8))->sm);
((hhh)->eli) = ((as_<fw>(classTable_, ((hhc)->azl), 8))->sf);
((hhh)->ccu) = (new List_<ccn*>());
(hhj) = ((as_<fw>(classTable_, ((hhc)->azl), 8))->sg);
awe<List_<gb*>*>((hhj), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((hhj), (new Array_<int64_t>(1, (0LL)))))){
(hhl) = (awi<List_<gb*>*, gb*>((hhj), (new Array_<int64_t>(1, (0LL)))));
(hhm) = (new ccn());
((hhm)->cdc) = ((hhl)->qf);
((hhm)->cde) = ((hhl)->ql);
uh<List_<ccn*>*, ccn*>(((hhh)->ccu), (new Array_<int64_t>(1, (0LL))), (hhm));
ays<List_<gb*>*>((hhj), (new Array_<int64_t>(1, (0LL))));
}
((hhh)->ccp) = ((as_<fw>(classTable_, ((hhc)->azl), 8))->sh);
((hgq)->pf) = (hhh);
((hgq)->pj) = (1LL);
(hgx) = (true);
}
if(hgx){
if((!((hhc)->azq)) && ((eqAddr_((((hgq)->hdo)->ni), (nullptr))) || (cmp_((((hgq)->hdo)->ni), (new Array_<char16_t>(2, u'\u006D', u'\u0065'))) != 0))){
(ad)((131131LL), ((hgq)->ne), (new Array_<Array_<char16_t>*>(1, ((hgq)->hhe))));
return nullptr;
}
((hgq)->hhr) = (hhc);
return hgq;
}
ays<List_<um*>*>((hha), (new Array_<int64_t>(1, (0LL))));
}
(hgy) = (as_<ul>(classTable_, ((hgy)->nj), 22));
}
}
else{
(hht) = (((hgq)->hdo)->pf);
if(((hht)->lw) == (1028LL)){
if(!((((hgq)->hdo)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((hgq)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<ecr>(classTable_, ((hgq)->hdo), 130))->gjp))));
return nullptr;
}
(hhw) = ((hgq)->hhe);
if((hhy)((&hhw), (hht))){
(hia) = (as_<gd>(classTable_, ((bwm)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), ((new Array_<char16_t>(1, u'\u005F'))->Cat(hhw)), (true))), 14));
if(eqAddr_((hia), (nullptr))){
if(!(false)){
throw 0xE9170000U;
}
return nullptr;
}
(hie) = (as_<ccm>(classTable_, ((hia)->pf), 80));
if((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL)){
if(!((((hie)->ccu)->Len()) >= (2LL))){
throw 0xE9170000U;
}
awe<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
if(!((bdg)(((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc)))){
throw 0xE9170000U;
}
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
(hij) = ((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc);
if(!((((hij)->lw) == (66561LL)) && ((bdg)(((as_<cce>(classTable_, (hij), 76))->ccg))))){
throw 0xE9170000U;
}
awe<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc) = (hht);
}
if((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (2LL))) != (0LL)){
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (8LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (256LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hie)->ccu)->Len()) >= (3LL))){
throw 0xE9170000U;
}
awe<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
if(!((bdg)(((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc)))){
throw 0xE9170000U;
}
awe<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc) = (hht);
}
if((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (8LL))) != (0LL)){
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (2LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (256LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hie)->ccu)->Len()) >= (3LL))){
throw 0xE9170000U;
}
awe<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
if(!((bdg)(((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc)))){
throw 0xE9170000U;
}
awe<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
if(((hht)->lw) == (66561LL)){
((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc) = ((as_<cce>(classTable_, (hht), 76))->ccg);
}
else if(((hht)->lw) == (66563LL)){
((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc) = ((as_<cdj>(classTable_, (hht), 84))->cdo);
}
else{
if(!(((hht)->lw) == (66564LL))){
throw 0xE9170000U;
}
((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc) = ((as_<cdu>(classTable_, (hht), 86))->cdv);
}
}
if((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (32LL))) != (0LL)){
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (2LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (8LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (256LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hie)->ccu)->Len()) >= (4LL))){
throw 0xE9170000U;
}
awe<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
if(!((bdg)(((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc)))){
throw 0xE9170000U;
}
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
if(!((bdg)(((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc)))){
throw 0xE9170000U;
}
if(!(((hht)->lw) == (66564LL))){
throw 0xE9170000U;
}
awe<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc) = ((as_<cdu>(classTable_, (hht), 86))->cdv);
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc) = ((as_<cdu>(classTable_, (hht), 86))->cdw);
}
if((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (256LL))) != (0LL)){
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (2LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (8LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hie)->ccu)->Len()) >= (3LL))){
throw 0xE9170000U;
}
awe<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
if(!((bdg)(((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc)))){
throw 0xE9170000U;
}
if(!(((hht)->lw) == (66564LL))){
throw 0xE9170000U;
}
(hje) = (new ccm());
(bvn)((hje), (66562LL), ((hgq)->ne));
((hje)->elm) = (0LL);
((hje)->eli) = (new List_<Array_<char16_t>*>());
((hje)->ccu) = (new List_<ccn*>());
(hjg) = (new ccn());
((hjg)->cdc) = ((as_<cdu>(classTable_, (hht), 86))->cdv);
((hjg)->cde) = (false);
uh<List_<ccn*>*, ccn*>(((hje)->ccu), (new Array_<int64_t>(1, (0LL))), (hjg));
(hji) = (new ccn());
((hji)->cdc) = ((as_<cdu>(classTable_, (hht), 86))->cdw);
((hji)->cde) = (false);
uh<List_<ccn*>*, ccn*>(((hje)->ccu), (new Array_<int64_t>(1, (0LL))), (hji));
(hjk) = (new ccn());
awe<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
((hjk)->cdc) = ((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc);
((hjk)->cde) = (false);
uh<List_<ccn*>*, ccn*>(((hje)->ccu), (new Array_<int64_t>(1, (0LL))), (hjk));
((hje)->ccp) = ((hie)->ccp);
awe<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
ays<List_<ccn*>*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL))));
((awi<List_<ccn*>*, ccn*>(((hie)->ccu), (new Array_<int64_t>(1, (0LL)))))->cdc) = (hje);
}
if((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (4LL))) != (0LL)){
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdg)(((hie)->ccp)))){
throw 0xE9170000U;
}
((hie)->ccp) = (hht);
}
if((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (16LL))) != (0LL)){
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdg)(((hie)->ccp)))){
throw 0xE9170000U;
}
if(((hht)->lw) == (66561LL)){
((hie)->ccp) = ((as_<cce>(classTable_, (hht), 76))->ccg);
}
else if(((hht)->lw) == (66563LL)){
((hie)->ccp) = ((as_<cdj>(classTable_, (hht), 84))->cdo);
}
else{
if(!(((hht)->lw) == (66564LL))){
throw 0xE9170000U;
}
((hie)->ccp) = ((as_<cdu>(classTable_, (hht), 86))->cdw);
}
}
if((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (64LL))) != (0LL)){
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdg)(((hie)->ccp)))){
throw 0xE9170000U;
}
if(!(((hht)->lw) == (66563LL))){
throw 0xE9170000U;
}
if(!(((as_<cdj>(classTable_, (hht), 84))->cdm) == (0LL))){
throw 0xE9170000U;
}
(hkb) = (new cce());
(bvn)((hkb), (66561LL), ((hgq)->ne));
((hkb)->ccg) = ((as_<cdj>(classTable_, (hht), 84))->cdo);
((hie)->ccp) = (hkb);
}
if((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (512LL))) != (0LL)){
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdg)(((hie)->ccp)))){
throw 0xE9170000U;
}
if(!(((hht)->lw) == (66564LL))){
throw 0xE9170000U;
}
(hkg) = (new cce());
(bvn)((hkg), (66561LL), ((hgq)->ne));
((hkg)->ccg) = ((as_<cdu>(classTable_, (hht), 86))->cdv);
((hie)->ccp) = (hkg);
}
if((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1024LL))) != (0LL)){
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hie)->elm), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdg)(((hie)->ccp)))){
throw 0xE9170000U;
}
if(!(((hht)->lw) == (66564LL))){
throw 0xE9170000U;
}
(hkl) = (new cce());
(bvn)((hkl), (66561LL), ((hgq)->ne));
((hkl)->ccg) = ((as_<cdu>(classTable_, (hht), 86))->cdw);
((hie)->ccp) = (hkl);
}
((hgq)->nj) = (hia);
((hgq)->pf) = ((hia)->pf);
((hgq)->pj) = (1LL);
return hgq;
}
}
(ad)((131130LL), ((hgq)->ne), (new Array_<Array_<char16_t>*>(1, ((hgq)->hhe))));
return nullptr;
}
// _dtor
static void hkm(ech* hkn){
((hkn)->hdo) = (nullptr);
((hkn)->hhe) = (nullptr);
((hkn)->hhr) = (nullptr);
((hkn)->pf) = (nullptr);
((hkn)->ne) = (nullptr);
((hkn)->nf) = (nullptr);
((hkn)->ng) = (nullptr);
((hkn)->nh) = (nullptr);
((hkn)->ni) = (nullptr);
((hkn)->nj) = (nullptr);
((hkn)->nk) = (nullptr);
}
// _copy
static ech* hko(ech* hkp){
ech* hkq = nullptr;
(hkq) = (new ech());
((hkq)->hdo) = (copy_((hkp)->hdo));
((hkq)->hhe) = (copy_((hkp)->hhe));
((hkq)->hhr) = (copy_((hkp)->hhr));
((hkq)->pf) = (copy_((hkp)->pf));
((hkq)->pj) = ((hkp)->pj);
((hkq)->ne) = (copy_((hkp)->ne));
((hkq)->nf) = (copy_((hkp)->nf));
((hkq)->ng) = (copy_((hkp)->ng));
((hkq)->nh) = (copy_((hkp)->nh));
((hkq)->ni) = (copy_((hkp)->ni));
((hkq)->nj) = (copy_((hkp)->nj));
((hkq)->nk) = (copy_((hkp)->nk));
((hkq)->no) = ((hkp)->no);
((hkq)->lw) = ((hkp)->lw);
return as_<ech>(classTable_, (hkq), 126);
}
// _toBin
static Array_<uint8_t>* hkr(ech* hks){
Array_<uint8_t>* hkt = nullptr;
(hkt) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hkt) = ((hkt)->Cat(toBin_((hks)->hdo)));
(hkt) = ((hkt)->Cat(toBin_((hks)->hhe)));
(hkt) = ((hkt)->Cat(toBin_((hks)->hhr)));
(hkt) = ((hkt)->Cat(toBin_((hks)->pf)));
(hkt) = ((hkt)->Cat(toBin_((hks)->pj)));
(hkt) = ((hkt)->Cat(toBin_((hks)->ne)));
(hkt) = ((hkt)->Cat(toBin_((hks)->nf)));
(hkt) = ((hkt)->Cat(toBin_((hks)->ng)));
(hkt) = ((hkt)->Cat(toBin_((hks)->nh)));
(hkt) = ((hkt)->Cat(toBin_((hks)->ni)));
(hkt) = ((hkt)->Cat(toBin_((hks)->nj)));
(hkt) = ((hkt)->Cat(toBin_((hks)->nk)));
(hkt) = ((hkt)->Cat(toBin_((hks)->no)));
(hkt) = ((hkt)->Cat(toBin_((hks)->lw)));
return hkt;
}
// _fromBin
static ech* hli(ech* hlj, Array_<uint8_t>* hlk, int64_t* hll){
ech* hlm = nullptr;
(hlm) = (new ech());
((hlm)->hdo) = (fromBin_<gd*>((hlk), (*hll)));
((hlm)->hhe) = (fromBin_<Array_<char16_t>*>((hlk), (*hll)));
((hlm)->hhr) = (fromBin_<um*>((hlk), (*hll)));
((hlm)->pf) = (fromBin_<gc*>((hlk), (*hll)));
((hlm)->pj) = (fromBin_<int64_t>((hlk), (*hll)));
((hlm)->ne) = (fromBin_<ga*>((hlk), (*hll)));
((hlm)->nf) = (fromBin_<Array_<char16_t>*>((hlk), (*hll)));
((hlm)->ng) = (fromBin_<fx*>((hlk), (*hll)));
((hlm)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hlk), (*hll)));
((hlm)->ni) = (fromBin_<Array_<char16_t>*>((hlk), (*hll)));
((hlm)->nj) = (fromBin_<fx*>((hlk), (*hll)));
((hlm)->nk) = (fromBin_<fy*>((hlk), (*hll)));
((hlm)->no) = (fromBin_<bool>((hlk), (*hll)));
((hlm)->lw) = (fromBin_<int64_t>((hlk), (*hll)));
return hlm;
}
// rebuildExprValue
static gd* ecj(bxm* hln /*ast*/){
if(!eqAddr_(((hln)->nk), (nullptr))){
return as_<gd>(classTable_, ((hln)->nk), 14);
}
((hln)->nk) = (hln);
if(!(((hln)->lw) == (67584LL))){
throw 0xE9170000U;
}
((hln)->pj) = (1LL);
return hln;
}
// rebuildExprValuePrim
static gd* ecl(bxl* hlq /*ast*/){
if(!eqAddr_(((hlq)->nk), (nullptr))){
return as_<gd>(classTable_, ((hlq)->nk), 14);
}
((hlq)->nk) = (hlq);
((hlq)->pj) = (1LL);
return hlq;
}
// rebuildExprValueStr
static gd* ecn(eco* hlt /*ast*/){
if(!eqAddr_(((hlt)->nk), (nullptr))){
return as_<gd>(classTable_, ((hlt)->nk), 14);
}
((hlt)->nk) = (hlt);
((hlt)->pj) = (1LL);
return hlt;
}
// _dtor
static void hlw(eco* hlx){
((hlx)->gld) = (nullptr);
((hlx)->pf) = (nullptr);
((hlx)->ne) = (nullptr);
((hlx)->nf) = (nullptr);
((hlx)->ng) = (nullptr);
((hlx)->nh) = (nullptr);
((hlx)->ni) = (nullptr);
((hlx)->nj) = (nullptr);
((hlx)->nk) = (nullptr);
}
// _copy
static eco* hly(eco* hlz){
eco* hma = nullptr;
(hma) = (new eco());
((hma)->gld) = (copy_((hlz)->gld));
((hma)->pf) = (copy_((hlz)->pf));
((hma)->pj) = ((hlz)->pj);
((hma)->ne) = (copy_((hlz)->ne));
((hma)->nf) = (copy_((hlz)->nf));
((hma)->ng) = (copy_((hlz)->ng));
((hma)->nh) = (copy_((hlz)->nh));
((hma)->ni) = (copy_((hlz)->ni));
((hma)->nj) = (copy_((hlz)->nj));
((hma)->nk) = (copy_((hlz)->nk));
((hma)->no) = ((hlz)->no);
((hma)->lw) = ((hlz)->lw);
return as_<eco>(classTable_, (hma), 128);
}
// _toBin
static Array_<uint8_t>* hmb(eco* hmc){
Array_<uint8_t>* hmd = nullptr;
(hmd) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hmd) = ((hmd)->Cat(toBin_((hmc)->gld)));
(hmd) = ((hmd)->Cat(toBin_((hmc)->pf)));
(hmd) = ((hmd)->Cat(toBin_((hmc)->pj)));
(hmd) = ((hmd)->Cat(toBin_((hmc)->ne)));
(hmd) = ((hmd)->Cat(toBin_((hmc)->nf)));
(hmd) = ((hmd)->Cat(toBin_((hmc)->ng)));
(hmd) = ((hmd)->Cat(toBin_((hmc)->nh)));
(hmd) = ((hmd)->Cat(toBin_((hmc)->ni)));
(hmd) = ((hmd)->Cat(toBin_((hmc)->nj)));
(hmd) = ((hmd)->Cat(toBin_((hmc)->nk)));
(hmd) = ((hmd)->Cat(toBin_((hmc)->no)));
(hmd) = ((hmd)->Cat(toBin_((hmc)->lw)));
return hmd;
}
// _fromBin
static eco* hmq(eco* hmr, Array_<uint8_t>* hms, int64_t* hmt){
eco* hmu = nullptr;
(hmu) = (new eco());
((hmu)->gld) = (fromBin_<Array_<char16_t>*>((hms), (*hmt)));
((hmu)->pf) = (fromBin_<gc*>((hms), (*hmt)));
((hmu)->pj) = (fromBin_<int64_t>((hms), (*hmt)));
((hmu)->ne) = (fromBin_<ga*>((hms), (*hmt)));
((hmu)->nf) = (fromBin_<Array_<char16_t>*>((hms), (*hmt)));
((hmu)->ng) = (fromBin_<fx*>((hms), (*hmt)));
((hmu)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hms), (*hmt)));
((hmu)->ni) = (fromBin_<Array_<char16_t>*>((hms), (*hmt)));
((hmu)->nj) = (fromBin_<fx*>((hms), (*hmt)));
((hmu)->nk) = (fromBin_<fy*>((hms), (*hmt)));
((hmu)->no) = (fromBin_<bool>((hms), (*hmt)));
((hmu)->lw) = (fromBin_<int64_t>((hms), (*hmt)));
return hmu;
}
// rebuildExprValueEnumElement
static gd* ecq(ecr* hmv /*ast*/){
if(!eqAddr_(((hmv)->nk), (nullptr))){
return as_<gd>(classTable_, ((hmv)->nk), 14);
}
((hmv)->nk) = (hmv);
((hmv)->pj) = (1LL);
return hmv;
}
// _dtor
static void hmy(ecr* hmz){
((hmz)->gjp) = (nullptr);
((hmz)->pf) = (nullptr);
((hmz)->ne) = (nullptr);
((hmz)->nf) = (nullptr);
((hmz)->ng) = (nullptr);
((hmz)->nh) = (nullptr);
((hmz)->ni) = (nullptr);
((hmz)->nj) = (nullptr);
((hmz)->nk) = (nullptr);
}
// _copy
static ecr* hna(ecr* hnb){
ecr* hnc = nullptr;
(hnc) = (new ecr());
((hnc)->gjp) = (copy_((hnb)->gjp));
((hnc)->pf) = (copy_((hnb)->pf));
((hnc)->pj) = ((hnb)->pj);
((hnc)->ne) = (copy_((hnb)->ne));
((hnc)->nf) = (copy_((hnb)->nf));
((hnc)->ng) = (copy_((hnb)->ng));
((hnc)->nh) = (copy_((hnb)->nh));
((hnc)->ni) = (copy_((hnb)->ni));
((hnc)->nj) = (copy_((hnb)->nj));
((hnc)->nk) = (copy_((hnb)->nk));
((hnc)->no) = ((hnb)->no);
((hnc)->lw) = ((hnb)->lw);
return as_<ecr>(classTable_, (hnc), 130);
}
// _toBin
static Array_<uint8_t>* hnd(ecr* hne){
Array_<uint8_t>* hnf = nullptr;
(hnf) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hnf) = ((hnf)->Cat(toBin_((hne)->gjp)));
(hnf) = ((hnf)->Cat(toBin_((hne)->pf)));
(hnf) = ((hnf)->Cat(toBin_((hne)->pj)));
(hnf) = ((hnf)->Cat(toBin_((hne)->ne)));
(hnf) = ((hnf)->Cat(toBin_((hne)->nf)));
(hnf) = ((hnf)->Cat(toBin_((hne)->ng)));
(hnf) = ((hnf)->Cat(toBin_((hne)->nh)));
(hnf) = ((hnf)->Cat(toBin_((hne)->ni)));
(hnf) = ((hnf)->Cat(toBin_((hne)->nj)));
(hnf) = ((hnf)->Cat(toBin_((hne)->nk)));
(hnf) = ((hnf)->Cat(toBin_((hne)->no)));
(hnf) = ((hnf)->Cat(toBin_((hne)->lw)));
return hnf;
}
// _fromBin
static ecr* hns(ecr* hnt, Array_<uint8_t>* hnu, int64_t* hnv){
ecr* hnw = nullptr;
(hnw) = (new ecr());
((hnw)->gjp) = (fromBin_<Array_<char16_t>*>((hnu), (*hnv)));
((hnw)->pf) = (fromBin_<gc*>((hnu), (*hnv)));
((hnw)->pj) = (fromBin_<int64_t>((hnu), (*hnv)));
((hnw)->ne) = (fromBin_<ga*>((hnu), (*hnv)));
((hnw)->nf) = (fromBin_<Array_<char16_t>*>((hnu), (*hnv)));
((hnw)->ng) = (fromBin_<fx*>((hnu), (*hnv)));
((hnw)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hnu), (*hnv)));
((hnw)->ni) = (fromBin_<Array_<char16_t>*>((hnu), (*hnv)));
((hnw)->nj) = (fromBin_<fx*>((hnu), (*hnv)));
((hnw)->nk) = (fromBin_<fy*>((hnu), (*hnv)));
((hnw)->no) = (fromBin_<bool>((hnu), (*hnv)));
((hnw)->lw) = (fromBin_<int64_t>((hnu), (*hnv)));
return hnw;
}
// rebuildExprValueFloat
static gd* ect(ecu* hnx /*ast*/){
if(!eqAddr_(((hnx)->nk), (nullptr))){
return as_<gd>(classTable_, ((hnx)->nk), 14);
}
((hnx)->nk) = (hnx);
((hnx)->pj) = (1LL);
return hnx;
}
// _dtor
static void hoa(ecu* hob){
((hob)->pf) = (nullptr);
((hob)->ne) = (nullptr);
((hob)->nf) = (nullptr);
((hob)->ng) = (nullptr);
((hob)->nh) = (nullptr);
((hob)->ni) = (nullptr);
((hob)->nj) = (nullptr);
((hob)->nk) = (nullptr);
}
// _copy
static ecu* hoc(ecu* hod){
ecu* hoe = nullptr;
(hoe) = (new ecu());
((hoe)->ggf) = ((hod)->ggf);
((hoe)->pf) = (copy_((hod)->pf));
((hoe)->pj) = ((hod)->pj);
((hoe)->ne) = (copy_((hod)->ne));
((hoe)->nf) = (copy_((hod)->nf));
((hoe)->ng) = (copy_((hod)->ng));
((hoe)->nh) = (copy_((hod)->nh));
((hoe)->ni) = (copy_((hod)->ni));
((hoe)->nj) = (copy_((hod)->nj));
((hoe)->nk) = (copy_((hod)->nk));
((hoe)->no) = ((hod)->no);
((hoe)->lw) = ((hod)->lw);
return as_<ecu>(classTable_, (hoe), 132);
}
// _toBin
static Array_<uint8_t>* hof(ecu* hog){
Array_<uint8_t>* hoh = nullptr;
(hoh) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hoh) = ((hoh)->Cat(toBin_((hog)->ggf)));
(hoh) = ((hoh)->Cat(toBin_((hog)->pf)));
(hoh) = ((hoh)->Cat(toBin_((hog)->pj)));
(hoh) = ((hoh)->Cat(toBin_((hog)->ne)));
(hoh) = ((hoh)->Cat(toBin_((hog)->nf)));
(hoh) = ((hoh)->Cat(toBin_((hog)->ng)));
(hoh) = ((hoh)->Cat(toBin_((hog)->nh)));
(hoh) = ((hoh)->Cat(toBin_((hog)->ni)));
(hoh) = ((hoh)->Cat(toBin_((hog)->nj)));
(hoh) = ((hoh)->Cat(toBin_((hog)->nk)));
(hoh) = ((hoh)->Cat(toBin_((hog)->no)));
(hoh) = ((hoh)->Cat(toBin_((hog)->lw)));
return hoh;
}
// _fromBin
static ecu* hou(ecu* hov, Array_<uint8_t>* how, int64_t* hox){
ecu* hoy = nullptr;
(hoy) = (new ecu());
((hoy)->ggf) = (fromBin_<double>((how), (*hox)));
((hoy)->pf) = (fromBin_<gc*>((how), (*hox)));
((hoy)->pj) = (fromBin_<int64_t>((how), (*hox)));
((hoy)->ne) = (fromBin_<ga*>((how), (*hox)));
((hoy)->nf) = (fromBin_<Array_<char16_t>*>((how), (*hox)));
((hoy)->ng) = (fromBin_<fx*>((how), (*hox)));
((hoy)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((how), (*hox)));
((hoy)->ni) = (fromBin_<Array_<char16_t>*>((how), (*hox)));
((hoy)->nj) = (fromBin_<fx*>((how), (*hox)));
((hoy)->nk) = (fromBin_<fy*>((how), (*hox)));
((hoy)->no) = (fromBin_<bool>((how), (*hox)));
((hoy)->lw) = (fromBin_<int64_t>((how), (*hox)));
return hoy;
}
// rebuildExprValueArray
static gd* ecw(ecx* hoz /*ast*/){
bool hpd = false; // nullSet
bool hpe = false; // enumSet
List_<gd*>* hpf = nullptr; // items
gd* hph = nullptr; // data
gc* hpl = nullptr; // dataType
cce* hqa = nullptr; // type
List_<gd*>* hqj = nullptr; // items
gd* hql = nullptr; // item
bool hqr = false; // isConst
List_<gd*>* hqt = nullptr; // items
eco* hrb = nullptr; // ast2
Array_<char16_t>* hrc = nullptr; // s
int64_t hrd = 0; // idx
List_<gd*>* hre = nullptr; // items
if(!eqAddr_(((hoz)->nk), (nullptr))){
return as_<gd>(classTable_, ((hoz)->nk), 14);
}
((hoz)->nk) = (hoz);
if(!(eqAddr_(((hoz)->pf), (nullptr)))){
throw 0xE9170000U;
}
(hpd) = (false);
(hpe) = (false);
(hpf) = ((hoz)->hdx);
awe<List_<gd*>*>((hpf), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((hpf), (new Array_<int64_t>(1, (0LL)))))){
(hph) = (awi<List_<gd*>*, gd*>((hpf), (new Array_<int64_t>(1, (0LL)))));
(hph) = ((bzt)((hph), (false)));
if(eqAddr_((hph), (nullptr))){
return nullptr;
}
(hpl) = ((hph)->pf);
if(eqAddr_(((hoz)->pf), (nullptr))){
if(((hpl)->lw) == (1027LL)){
if(hpe){
(ad)((131132LL), ((hoz)->ne), (nullptr));
return nullptr;
}
(hpd) = (true);
}
else if(((hpl)->lw) == (1028LL)){
if(hpd){
(ad)((131133LL), ((hoz)->ne), (nullptr));
return nullptr;
}
(hpe) = (true);
}
else{
if((hpd) && (!((cms)((hpl))))){
(ad)((131133LL), ((hoz)->ne), (nullptr));
return nullptr;
}
if((hpe) && (!((cmx)((hpl))))){
(ad)((131132LL), ((hoz)->ne), (nullptr));
return nullptr;
}
(hqa) = (new cce());
(bvn)((hqa), (66561LL), ((hpl)->ne));
((hqa)->ccg) = (hpl);
((hoz)->pf) = (hqa);
}
}
else if(!((dze)(((as_<cce>(classTable_, ((hoz)->pf), 76))->ccg), (hpl), (false)))){
(ad)((131132LL), ((hoz)->ne), (nullptr));
return nullptr;
}
bfe<List_<gd*>*, gd*>((hpf), (new Array_<int64_t>(1, (0LL))), (hph));
bfh<List_<gd*>*>((hpf), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_(((hoz)->pf), (nullptr))){
if(hpe){
(ad)((131134LL), ((hoz)->ne), (nullptr));
return nullptr;
}
else{
(ad)((131135LL), ((hoz)->ne), (nullptr));
return nullptr;
}
}
if((cmx)(((as_<cce>(classTable_, ((hoz)->pf), 76))->ccg))){
(hqj) = ((hoz)->hdx);
awe<List_<gd*>*>((hqj), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((hqj), (new Array_<int64_t>(1, (0LL)))))){
(hql) = (awi<List_<gd*>*, gd*>((hqj), (new Array_<int64_t>(1, (0LL)))));
if((((hql)->pf)->lw) == (1028LL)){
(hql) = ((dzh)((hql), ((as_<cce>(classTable_, ((hoz)->pf), 76))->ccg)));
bfe<List_<gd*>*, gd*>((hqj), (new Array_<int64_t>(1, (0LL))), (hql));
bfh<List_<gd*>*>((hqj), (new Array_<int64_t>(1, (0LL))));
}
else{
ays<List_<gd*>*>((hqj), (new Array_<int64_t>(1, (0LL))));
}
}
}
if((fjp)(((hoz)->pf))){
(hqr) = (true);
(hqt) = ((hoz)->hdx);
awe<List_<gd*>*>((hqt), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((hqt), (new Array_<int64_t>(1, (0LL)))))){
if(((awi<List_<gd*>*, gd*>((hqt), (new Array_<int64_t>(1, (0LL)))))->lw) != (67584LL)){
(hqr) = (false);
break;
}
ays<List_<gd*>*>((hqt), (new Array_<int64_t>(1, (0LL))));
}
if(hqr){
(hrb) = (new eco());
(bwv)((hrb), (67586LL), ((hoz)->ne));
((hrb)->pf) = ((hoz)->pf);
(hrc) = (newArray_<char16_t, Array_<char16_t>*>(1, (((hoz)->hdx)->Len())));
(hrd) = (0LL);
(hre) = ((hoz)->hdx);
awe<List_<gd*>*>((hre), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((hre), (new Array_<int64_t>(1, (0LL)))))){
((hrc)->At(hrd)) = (static_cast<char16_t>((as_<bxl>(classTable_, (awi<List_<gd*>*, gd*>((hre), (new Array_<int64_t>(1, (0LL))))), 70))->bxn));
ays<List_<gd*>*>((hre), (new Array_<int64_t>(1, (0LL))));
(hrd) = ((hrd) + (1LL));
}
((hrb)->gld) = (hrc);
(hrb) = (as_<eco>(classTable_, ((ecn)((hrb))), 128));
((hoz)->nk) = (hoz);
return as_<gd>(classTable_, ((hoz)->nk), 14);
}
}
((hoz)->pj) = (1LL);
return hoz;
}
// _dtor
static void hrh(ecx* hri){
((hri)->hdx) = (nullptr);
((hri)->pf) = (nullptr);
((hri)->ne) = (nullptr);
((hri)->nf) = (nullptr);
((hri)->ng) = (nullptr);
((hri)->nh) = (nullptr);
((hri)->ni) = (nullptr);
((hri)->nj) = (nullptr);
((hri)->nk) = (nullptr);
}
// _copy
static ecx* hrj(ecx* hrk){
ecx* hrl = nullptr;
(hrl) = (new ecx());
((hrl)->hdx) = (copy_((hrk)->hdx));
((hrl)->pf) = (copy_((hrk)->pf));
((hrl)->pj) = ((hrk)->pj);
((hrl)->ne) = (copy_((hrk)->ne));
((hrl)->nf) = (copy_((hrk)->nf));
((hrl)->ng) = (copy_((hrk)->ng));
((hrl)->nh) = (copy_((hrk)->nh));
((hrl)->ni) = (copy_((hrk)->ni));
((hrl)->nj) = (copy_((hrk)->nj));
((hrl)->nk) = (copy_((hrk)->nk));
((hrl)->no) = ((hrk)->no);
((hrl)->lw) = ((hrk)->lw);
return as_<ecx>(classTable_, (hrl), 134);
}
// _toBin
static Array_<uint8_t>* hrm(ecx* hrn){
Array_<uint8_t>* hro = nullptr;
(hro) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hro) = ((hro)->Cat(toBin_((hrn)->hdx)));
(hro) = ((hro)->Cat(toBin_((hrn)->pf)));
(hro) = ((hro)->Cat(toBin_((hrn)->pj)));
(hro) = ((hro)->Cat(toBin_((hrn)->ne)));
(hro) = ((hro)->Cat(toBin_((hrn)->nf)));
(hro) = ((hro)->Cat(toBin_((hrn)->ng)));
(hro) = ((hro)->Cat(toBin_((hrn)->nh)));
(hro) = ((hro)->Cat(toBin_((hrn)->ni)));
(hro) = ((hro)->Cat(toBin_((hrn)->nj)));
(hro) = ((hro)->Cat(toBin_((hrn)->nk)));
(hro) = ((hro)->Cat(toBin_((hrn)->no)));
(hro) = ((hro)->Cat(toBin_((hrn)->lw)));
return hro;
}
// _fromBin
static ecx* hsb(ecx* hsc, Array_<uint8_t>* hsd, int64_t* hse){
ecx* hsf = nullptr;
(hsf) = (new ecx());
((hsf)->hdx) = (fromBin_<List_<gd*>*>((hsd), (*hse)));
((hsf)->pf) = (fromBin_<gc*>((hsd), (*hse)));
((hsf)->pj) = (fromBin_<int64_t>((hsd), (*hse)));
((hsf)->ne) = (fromBin_<ga*>((hsd), (*hse)));
((hsf)->nf) = (fromBin_<Array_<char16_t>*>((hsd), (*hse)));
((hsf)->ng) = (fromBin_<fx*>((hsd), (*hse)));
((hsf)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hsd), (*hse)));
((hsf)->ni) = (fromBin_<Array_<char16_t>*>((hsd), (*hse)));
((hsf)->nj) = (fromBin_<fx*>((hsd), (*hse)));
((hsf)->nk) = (fromBin_<fy*>((hsd), (*hse)));
((hsf)->no) = (fromBin_<bool>((hsd), (*hse)));
((hsf)->lw) = (fromBin_<int64_t>((hsd), (*hse)));
return hsf;
}
// _dtor
static void hsg(eeo* hsh){
((hsh)->eeq) = (nullptr);
((hsh)->ne) = (nullptr);
((hsh)->nf) = (nullptr);
((hsh)->ng) = (nullptr);
((hsh)->nh) = (nullptr);
((hsh)->ni) = (nullptr);
((hsh)->nj) = (nullptr);
((hsh)->nk) = (nullptr);
}
// _copy
static eeo* hsi(eeo* hsj){
eeo* hsk = nullptr;
(hsk) = (new eeo());
((hsk)->eeq) = (copy_((hsj)->eeq));
((hsk)->ne) = (copy_((hsj)->ne));
((hsk)->nf) = (copy_((hsj)->nf));
((hsk)->ng) = (copy_((hsj)->ng));
((hsk)->nh) = (copy_((hsj)->nh));
((hsk)->ni) = (copy_((hsj)->ni));
((hsk)->nj) = (copy_((hsj)->nj));
((hsk)->nk) = (copy_((hsj)->nk));
((hsk)->no) = ((hsj)->no);
((hsk)->lw) = ((hsj)->lw);
return as_<eeo>(classTable_, (hsk), 136);
}
// _toBin
static Array_<uint8_t>* hsl(eeo* hsm){
Array_<uint8_t>* hsn = nullptr;
(hsn) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hsn) = ((hsn)->Cat(toBin_((hsm)->eeq)));
(hsn) = ((hsn)->Cat(toBin_((hsm)->ne)));
(hsn) = ((hsn)->Cat(toBin_((hsm)->nf)));
(hsn) = ((hsn)->Cat(toBin_((hsm)->ng)));
(hsn) = ((hsn)->Cat(toBin_((hsm)->nh)));
(hsn) = ((hsn)->Cat(toBin_((hsm)->ni)));
(hsn) = ((hsn)->Cat(toBin_((hsm)->nj)));
(hsn) = ((hsn)->Cat(toBin_((hsm)->nk)));
(hsn) = ((hsn)->Cat(toBin_((hsm)->no)));
(hsn) = ((hsn)->Cat(toBin_((hsm)->lw)));
return hsn;
}
// _fromBin
static eeo* hsy(eeo* hsz, Array_<uint8_t>* hta, int64_t* htb){
eeo* htc = nullptr;
(htc) = (new eeo());
((htc)->eeq) = (fromBin_<bgi*>((hta), (*htb)));
((htc)->ne) = (fromBin_<ga*>((hta), (*htb)));
((htc)->nf) = (fromBin_<Array_<char16_t>*>((hta), (*htb)));
((htc)->ng) = (fromBin_<fx*>((hta), (*htb)));
((htc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hta), (*htb)));
((htc)->ni) = (fromBin_<Array_<char16_t>*>((hta), (*htb)));
((htc)->nj) = (fromBin_<fx*>((hta), (*htb)));
((htc)->nk) = (fromBin_<fy*>((hta), (*htb)));
((htc)->no) = (fromBin_<bool>((hta), (*htb)));
((htc)->lw) = (fromBin_<int64_t>((hta), (*htb)));
return htc;
}
// rebuildVar
static void eep(bgi* htd /*ast*/){
if(!eqAddr_(((htd)->nk), (nullptr))){
return;
}
((htd)->nk) = (htd);
(byx)(((htd)->bgk));
}
// rebuildIf
static ge* efn(cld* htg /*ast*/, gc* hth /*retType*/, fw* hti /*parentFunc*/){
List_<cle*>* hto = nullptr; // items
cle* htq = nullptr; // elIf
bvs* htx = nullptr; // stats
List_<cle*>* hue = nullptr; // items
cle* hui = nullptr; // elIf
bvs* hur = nullptr; // block_
if(!eqAddr_(((htg)->nk), (nullptr))){
return as_<ge>(classTable_, ((htg)->nk), 16);
}
((htg)->nk) = (htg);
((htg)->eop) = ((bzt)(((htg)->eop), (false)));
if((!eqAddr_(((htg)->eop), (nullptr))) && (!((ggi)((((htg)->eop)->pf))))){
(ad)((131094LL), (((htg)->eop)->ne), (nullptr));
}
((htg)->eor) = (as_<bvs>(classTable_, ((efz)(((htg)->eor), (hth), (hti))), 54));
(hto) = ((htg)->eox);
awe<List_<cle*>*>((hto), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cle*>*>((hto), (new Array_<int64_t>(1, (0LL)))))){
(htq) = (awi<List_<cle*>*, cle*>((hto), (new Array_<int64_t>(1, (0LL)))));
((htq)->epa) = ((bzt)(((htq)->epa), (false)));
if((!eqAddr_(((htq)->epa), (nullptr))) && (!((ggi)((((htq)->epa)->pf))))){
(ad)((131095LL), (((htq)->epa)->ne), (nullptr));
}
((htq)->epb) = (as_<bvs>(classTable_, ((efz)(((htq)->epb), (hth), (hti))), 54));
ays<List_<cle*>*>((hto), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((htg)->epd), (nullptr))){
((htg)->epd) = (as_<bvs>(classTable_, ((efz)(((htg)->epd), (hth), (hti))), 54));
}
if(!eqAddr_(((htg)->eop), (nullptr))){
(htx) = (nullptr);
if((((htg)->eop)->lw) != (67585LL)){
return htg;
}
if(((as_<bxl>(classTable_, ((htg)->eop), 70))->bxn) != (0x0000000000000000ULL)){
(htx) = ((htg)->eor);
}
if(!eqAddr_((htx), (nullptr))){
(hue) = ((htg)->eox);
awe<List_<cle*>*>((hue), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cle*>*>((hue), (new Array_<int64_t>(1, (0LL)))))){
(hui) = (awi<List_<cle*>*, cle*>((hue), (new Array_<int64_t>(1, (0LL)))));
if((((hui)->epa)->lw) != (67585LL)){
return htg;
}
if(((as_<bxl>(classTable_, ((hui)->epa), 70))->bxn) != (0x0000000000000000ULL)){
(htx) = ((hui)->epb);
break;
}
ays<List_<cle*>*>((hue), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_((htx), (nullptr))){
if(eqAddr_(((htg)->epd), (nullptr))){
(hur) = (new bvs());
(bvn)((hur), (66052LL), ((htg)->ne));
((hur)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((hur)->bwe) = (new List_<ge*>());
(htx) = (hur);
}
else{
(htx) = ((htg)->epd);
}
}
}
((htg)->eop) = (nullptr);
((htg)->eor) = (htx);
}
return htg;
}
// rebuildSwitch
static ge* efp(clh* hut /*ast*/, gc* huu /*retType*/, fw* huv /*parentFunc*/){
List_<cli*>* hvd = nullptr; // items
cli* hvf = nullptr; // case_
List_<bvu*>* hvg = nullptr; // items2
bvu* hvi = nullptr; // exprs
if(!eqAddr_(((hut)->nk), (nullptr))){
return as_<ge>(classTable_, ((hut)->nk), 16);
}
((hut)->nk) = (hut);
((hut)->erq) = ((bzt)(((hut)->erq), (false)));
if(!eqAddr_(((hut)->erq), (nullptr))){
if(!((gji)((((hut)->erq)->pf), (true)))){
(ad)((131096LL), (((hut)->erq)->ne), (nullptr));
}
(((hut)->bwb)->qf) = (((hut)->erq)->pf);
}
(hvd) = ((hut)->eru);
awe<List_<cli*>*>((hvd), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cli*>*>((hvd), (new Array_<int64_t>(1, (0LL)))))){
(hvf) = (awi<List_<cli*>*, cli*>((hvd), (new Array_<int64_t>(1, (0LL)))));
(hvg) = ((hvf)->ery);
awe<List_<bvu*>*>((hvg), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvu*>*>((hvg), (new Array_<int64_t>(1, (0LL)))))){
(hvi) = (awi<List_<bvu*>*, bvu*>((hvg), (new Array_<int64_t>(1, (0LL)))));
((hvi)->bxq) = ((bzt)(((hvi)->bxq), (false)));
if((!eqAddr_(((hut)->erq), (nullptr))) && (!eqAddr_(((hvi)->bxq), (nullptr)))){
if(!((dze)((((hut)->erq)->pf), (((hvi)->bxq)->pf), (false)))){
(ad)((131097LL), (((hvi)->bxq)->ne), (nullptr));
}
else if(((((hvi)->bxq)->pf)->lw) == (1028LL)){
((hvi)->bxq) = ((dzh)(((hvi)->bxq), (((hut)->erq)->pf)));
}
}
if(!eqAddr_(((hvi)->bxv), (nullptr))){
((hvi)->bxv) = ((bzt)(((hvi)->bxv), (false)));
if((!eqAddr_(((hut)->erq), (nullptr))) && (!eqAddr_(((hvi)->bxv), (nullptr)))){
if(!((dze)((((hut)->erq)->pf), (((hvi)->bxv)->pf), (false)))){
(ad)((131097LL), (((hvi)->bxv)->ne), (nullptr));
}
else if(((((hvi)->bxv)->pf)->lw) == (1028LL)){
((hvi)->bxv) = ((dzh)(((hvi)->bxv), (((hut)->erq)->pf)));
}
}
}
ays<List_<bvu*>*>((hvg), (new Array_<int64_t>(1, (0LL))));
}
((hvf)->esm) = (as_<bvs>(classTable_, ((efz)(((hvf)->esm), (huu), (huv))), 54));
ays<List_<cli*>*>((hvd), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((hut)->eso), (nullptr))){
((hut)->eso) = (as_<bvs>(classTable_, ((efz)(((hut)->eso), (huu), (huv))), 54));
}
return hut;
}
// rebuildWhile
static ge* efr(cll* hvx /*ast*/, gc* hvy /*retType*/, fw* hvz /*parentFunc*/){
if(!eqAddr_(((hvx)->nk), (nullptr))){
return as_<ge>(classTable_, ((hvx)->nk), 16);
}
((hvx)->nk) = (hvx);
if(!eqAddr_(((hvx)->evt), (nullptr))){
((hvx)->evt) = ((bzt)(((hvx)->evt), (false)));
if((!eqAddr_(((hvx)->evt), (nullptr))) && (!((ggi)((((hvx)->evt)->pf))))){
(ad)((131098LL), (((hvx)->evt)->ne), (nullptr));
}
}
((hvx)->evv) = ((bzb)(((hvx)->evv), (hvy), (hvz)));
return hvx;
}
// rebuildFor
static ge* eft(clp* hwg /*ast*/, gc* hwh /*retType*/, fw* hwi /*parentFunc*/){
if(!eqAddr_(((hwg)->nk), (nullptr))){
return as_<ge>(classTable_, ((hwg)->nk), 16);
}
((hwg)->nk) = (hwg);
((hwg)->eys) = ((bzt)(((hwg)->eys), (false)));
if(!eqAddr_(((hwg)->eys), (nullptr))){
if(!((bdg)((((hwg)->eys)->pf)))){
(ad)((131099LL), (((hwg)->eys)->ne), (nullptr));
}
(((hwg)->bwb)->qf) = (((hwg)->eys)->pf);
}
((hwg)->eyr) = ((bzt)(((hwg)->eyr), (false)));
if((!eqAddr_(((hwg)->eyr), (nullptr))) && (!((bdg)((((hwg)->eyr)->pf))))){
(ad)((131100LL), (((hwg)->eyr)->ne), (nullptr));
}
((hwg)->eyt) = ((bzt)(((hwg)->eyt), (false)));
if(!eqAddr_(((hwg)->eyt), (nullptr))){
if(!((bdg)((((hwg)->eyt)->pf)))){
(ad)((131101LL), (((hwg)->eyt)->ne), (nullptr));
}
if((((hwg)->eyt)->lw) != (67585LL)){
(ad)((131102LL), (((hwg)->eyt)->ne), (nullptr));
}
if(((as_<bxl>(classTable_, ((hwg)->eyt), 70))->bxn) == (0x0000000000000000ULL)){
(ad)((131103LL), (((hwg)->eyt)->ne), (nullptr));
}
}
((hwg)->ezb) = ((bzb)(((hwg)->ezb), (hwh), (hwi)));
return hwg;
}
// rebuildTry
static ge* efv(bvq* hwz /*ast*/, gc* hxa /*retType*/, fw* hxb /*parentFunc*/){
List_<bvt*>* hxg = nullptr; // items
bvt* hxi = nullptr; // catch_
List_<bvu*>* hxj = nullptr; // items2
bvu* hxl = nullptr; // exprs
if(!eqAddr_(((hwz)->nk), (nullptr))){
return as_<ge>(classTable_, ((hwz)->nk), 16);
}
((hwz)->nk) = (hwz);
(byx)(((hwz)->bwb));
((hwz)->bwf) = (as_<bvs>(classTable_, ((efz)(((hwz)->bwf), (hxa), (hxb))), 54));
if((((hwz)->bwg)->Len()) != (0LL)){
(hxg) = ((hwz)->bwg);
awe<List_<bvt*>*>((hxg), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvt*>*>((hxg), (new Array_<int64_t>(1, (0LL)))))){
(hxi) = (awi<List_<bvt*>*, bvt*>((hxg), (new Array_<int64_t>(1, (0LL)))));
(hxj) = ((hxi)->bxd);
awe<List_<bvu*>*>((hxj), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvu*>*>((hxj), (new Array_<int64_t>(1, (0LL)))))){
(hxl) = (awi<List_<bvu*>*, bvu*>((hxj), (new Array_<int64_t>(1, (0LL)))));
((hxl)->bxq) = ((bzt)(((hxl)->bxq), (false)));
if((!eqAddr_(((hxl)->bxq), (nullptr))) && ((!((bdg)((((hxl)->bxq)->pf)))) || ((((hxl)->bxq)->lw) != (67585LL)))){
(ad)((131104LL), (((hxl)->bxq)->ne), (nullptr));
}
if(!eqAddr_(((hxl)->bxv), (nullptr))){
((hxl)->bxv) = ((bzt)(((hxl)->bxv), (false)));
if((!eqAddr_(((hxl)->bxv), (nullptr))) && ((!((bdg)((((hxl)->bxv)->pf)))) || ((((hxl)->bxv)->lw) != (67585LL)))){
(ad)((131104LL), (((hxl)->bxv)->ne), (nullptr));
}
}
ays<List_<bvu*>*>((hxj), (new Array_<int64_t>(1, (0LL))));
}
((hxi)->bxg) = (as_<bvs>(classTable_, ((efz)(((hxi)->bxg), (hxa), (hxb))), 54));
ays<List_<bvt*>*>((hxg), (new Array_<int64_t>(1, (0LL))));
}
}
if(!eqAddr_(((hwz)->bwj), (nullptr))){
((hwz)->bwj) = (as_<bvs>(classTable_, ((efz)(((hwz)->bwj), (hxa), (hxb))), 54));
}
return hwz;
}
// rebuildThrow
static ge* efx(clu* hxu /*ast*/){
if(!eqAddr_(((hxu)->nk), (nullptr))){
return as_<ge>(classTable_, ((hxu)->nk), 16);
}
((hxu)->nk) = (hxu);
((hxu)->fbs) = ((bzt)(((hxu)->fbs), (false)));
if((!eqAddr_(((hxu)->fbs), (nullptr))) && (!((bdg)((((hxu)->fbs)->pf))))){
(ad)((131105LL), (((hxu)->fbs)->ne), (nullptr));
}
return hxu;
}
// rebuildBlock
static ge* efz(bvs* hxz /*ast*/, gc* hya /*retType*/, fw* hyb /*parentFunc*/){
if(!eqAddr_(((hxz)->nk), (nullptr))){
return as_<ge>(classTable_, ((hxz)->nk), 16);
}
((hxz)->nk) = (hxz);
((hxz)->bwe) = ((bzb)(((hxz)->bwe), (hya), (hyb)));
return hxz;
}
// rebuildRet
static ge* egb(clz* hye /*ast*/, gc* hyf /*retType*/){
if(!eqAddr_(((hye)->nk), (nullptr))){
return as_<ge>(classTable_, ((hye)->nk), 16);
}
((hye)->nk) = (hye);
if(eqAddr_(((hye)->fcy), (nullptr))){
if(!eqAddr_((hyf), (nullptr))){
(ad)((131106LL), ((hye)->ne), (nullptr));
}
}
else{
((hye)->fcy) = ((bzt)(((hye)->fcy), (false)));
if(!eqAddr_(((hye)->fcy), (nullptr))){
if((eqAddr_((hyf), (nullptr))) || (!((dze)((((hye)->fcy)->pf), (hyf), (false))))){
(ad)((131107LL), ((hye)->ne), (nullptr));
}
else if(((((hye)->fcy)->pf)->lw) == (1028LL)){
((hye)->fcy) = ((dzh)(((hye)->fcy), (hyf)));
}
}
}
return hye;
}
// rebuildDo
static ge* egd(bwq* hys /*ast*/){
bzx* hyx = nullptr; // expr
int64_t hyy = 0; // kind
int64_t hza = 0;
bvs* hzk = nullptr; // block_
gd* hzm = nullptr; // lhs
ech* hzr = nullptr; // lhs2
ece* hzu = nullptr; // lhs2
bzx* hzv = nullptr; // exprAssign
bzx* hzx = nullptr; // exprOne
if(!eqAddr_(((hys)->nk), (nullptr))){
return as_<ge>(classTable_, ((hys)->nk), 16);
}
((hys)->nk) = (hys);
if((!eqAddr_(((hys)->bxa), (nullptr))) && ((((hys)->bxa)->lw) == (2050LL))){
(hyx) = (as_<bzx>(classTable_, ((hys)->bxa), 72));
(hyy) = (0LL);
switch((hyx)->bzy){
case 1LL:
(hyy) = (19LL);
break;
case 2LL:
(hyy) = (20LL);
break;
case 3LL:
(hyy) = (21LL);
break;
case 4LL:
(hyy) = (22LL);
break;
case 5LL:
(hyy) = (23LL);
break;
case 6LL:
(hyy) = (24LL);
break;
case 7LL:
(hyy) = (18LL);
break;
}
if((hyy) != (0LL)){
(hzk) = (new bvs());
(bvn)((hzk), (66052LL), ((hys)->ne));
((hzk)->nk) = (hzk);
((hzk)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((hzk)->bwb) = (nullptr);
((hzk)->bwe) = (new List_<ge*>());
(hzm) = ((bzt)(((hyx)->cab), (false)));
if(eqAddr_((hzm), (nullptr))){
return nullptr;
}
if(((hzm)->lw) == (2059LL)){
(hzr) = (as_<ech>(classTable_, (hzm), 126));
((hzr)->hdo) = ((hzs)(((hzk)->bwe), ((hzr)->hdo), ((hys)->ne)));
}
else if(((hzm)->lw) == (2058LL)){
(hzu) = (as_<ece>(classTable_, (hzm), 124));
((hzu)->hfg) = ((hzs)(((hzk)->bwe), ((hzu)->hfg), ((hys)->ne)));
((hzu)->hfl) = ((hzs)(((hzk)->bwe), ((hzu)->hfl), ((hys)->ne)));
}
(hzv) = (new bzx());
(bwv)((hzv), (2050LL), ((hys)->ne));
((hzv)->bzy) = (0LL);
((hzv)->cab) = (hzm);
(hzx) = (new bzx());
(bwv)((hzx), (2050LL), ((hys)->ne));
((hzx)->bzy) = (hyy);
((hzx)->cab) = (hzm);
((hzx)->cac) = ((hyx)->cac);
((hzv)->cac) = (hzx);
((hys)->bxa) = ((bzt)((hzv), (true)));
uh<List_<ge*>*, ge*>(((hzk)->bwe), (new Array_<int64_t>(1, (0LL))), (hys));
return hzk;
}
}
((hys)->bxa) = ((bzt)(((hys)->bxa), (true)));
if(eqAddr_(((hys)->bxa), (nullptr))){
return nullptr;
}
if(!((((((hys)->bxa)->lw) == (2050LL)) && ((((as_<bzx>(classTable_, ((hys)->bxa), 72))->bzy) == (0LL)) || (((as_<bzx>(classTable_, ((hys)->bxa), 72))->bzy) == (25LL)))) || ((((hys)->bxa)->lw) == (2057LL)))){
(ad)((131108LL), (((hys)->bxa)->ne), (nullptr));
}
return hys;
}
// rebuildBreak
static ge* egf(ge* iac /*ast*/, gc* iad /*retType*/, fw* iae /*parentFunc*/){
if(!eqAddr_(((iac)->nk), (nullptr))){
return as_<ge>(classTable_, ((iac)->nk), 16);
}
((iac)->nk) = (iac);
if((eqAddr_(((iac)->nj), (nullptr))) || ((aye<int64_t>((((iac)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) != (66048LL))){
(ad)((131109LL), ((iac)->ne), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(5, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B')))));
return nullptr;
}
((iac)->nj) = ((cad)((as_<ge>(classTable_, ((iac)->nj), 16)), (iad), (iae)));
return iac;
}
// rebuildSkip
static ge* egh(ge* iaj /*ast*/, gc* iak /*retType*/, fw* ial /*parentFunc*/){
if(!eqAddr_(((iaj)->nk), (nullptr))){
return as_<ge>(classTable_, ((iaj)->nk), 16);
}
((iaj)->nk) = (iaj);
if((eqAddr_(((iaj)->nj), (nullptr))) || ((aye<int64_t>((((iaj)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) != (66048LL))){
(ad)((131109LL), ((iaj)->ne), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070')))));
return nullptr;
}
((iaj)->nj) = ((cad)((as_<ge>(classTable_, ((iaj)->nj), 16)), (iak), (ial)));
return iaj;
}
// rebuildAssert
static ge* egj(cmi* iaq /*ast*/){
if(!eqAddr_(((iaq)->nk), (nullptr))){
return as_<ge>(classTable_, ((iaq)->nk), 16);
}
if(ct){
return nullptr;
}
((iaq)->nk) = (iaq);
((iaq)->fem) = ((bzt)(((iaq)->fem), (false)));
if((!eqAddr_(((iaq)->fem), (nullptr))) && (!((ggi)((((iaq)->fem)->pf))))){
(ad)((131110LL), (((iaq)->fem)->ne), (nullptr));
}
return iaq;
}
// isClass
static bool egp(gc* iax /*type*/){
return (((iax)->lw) == (66565LL)) && ((((iax)->nj)->lw) == (5LL));
}
// _dtor
static void iay(egu* iaz){
((iaz)->ne) = (nullptr);
((iaz)->nf) = (nullptr);
((iaz)->ng) = (nullptr);
((iaz)->nh) = (nullptr);
((iaz)->ni) = (nullptr);
((iaz)->nj) = (nullptr);
((iaz)->nk) = (nullptr);
}
// _copy
static egu* iba(egu* ibb){
egu* ibc = nullptr;
(ibc) = (new egu());
((ibc)->ne) = (copy_((ibb)->ne));
((ibc)->nf) = (copy_((ibb)->nf));
((ibc)->ng) = (copy_((ibb)->ng));
((ibc)->nh) = (copy_((ibb)->nh));
((ibc)->ni) = (copy_((ibb)->ni));
((ibc)->nj) = (copy_((ibb)->nj));
((ibc)->nk) = (copy_((ibb)->nk));
((ibc)->no) = ((ibb)->no);
((ibc)->lw) = ((ibb)->lw);
return as_<egu>(classTable_, (ibc), 138);
}
// _toBin
static Array_<uint8_t>* ibd(egu* ibe){
Array_<uint8_t>* ibf = nullptr;
(ibf) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ibf) = ((ibf)->Cat(toBin_((ibe)->ne)));
(ibf) = ((ibf)->Cat(toBin_((ibe)->nf)));
(ibf) = ((ibf)->Cat(toBin_((ibe)->ng)));
(ibf) = ((ibf)->Cat(toBin_((ibe)->nh)));
(ibf) = ((ibf)->Cat(toBin_((ibe)->ni)));
(ibf) = ((ibf)->Cat(toBin_((ibe)->nj)));
(ibf) = ((ibf)->Cat(toBin_((ibe)->nk)));
(ibf) = ((ibf)->Cat(toBin_((ibe)->no)));
(ibf) = ((ibf)->Cat(toBin_((ibe)->lw)));
return ibf;
}
// _fromBin
static egu* ibp(egu* ibq, Array_<uint8_t>* ibr, int64_t* ibs){
egu* ibt = nullptr;
(ibt) = (new egu());
((ibt)->ne) = (fromBin_<ga*>((ibr), (*ibs)));
((ibt)->nf) = (fromBin_<Array_<char16_t>*>((ibr), (*ibs)));
((ibt)->ng) = (fromBin_<fx*>((ibr), (*ibs)));
((ibt)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ibr), (*ibs)));
((ibt)->ni) = (fromBin_<Array_<char16_t>*>((ibr), (*ibs)));
((ibt)->nj) = (fromBin_<fx*>((ibr), (*ibs)));
((ibt)->nk) = (fromBin_<fy*>((ibr), (*ibs)));
((ibt)->no) = (fromBin_<bool>((ibr), (*ibs)));
((ibt)->lw) = (fromBin_<int64_t>((ibr), (*ibs)));
return ibt;
}
// _fill
template<typename T_, typename C_> static void ehi(T_ ibu /*me_*/, Array_<int64_t>* ibv /*type*/, C_ ibw /*value*/){
for(int64_t i_ = 0; i_ < ibu->L; i_++) ibu->B[i_] = ibw;
}
// _offset
static char16_t ehm(char16_t ibx /*me_*/, int64_t iby /*n*/){
return static_cast<char16_t>((static_cast<uint64_t>(ibx)) + (static_cast<uint64_t>(iby)));
}
// buildExpr
static void eou(gd* ibz /*ast*/){
int64_t icb = 0;
switch((ibz)->lw){
case 2049LL:
(icd)((as_<ebf>(classTable_, (ibz), 110)));
break;
case 2050LL:
(icf)((as_<bzx>(classTable_, (ibz), 72)));
break;
case 2051LL:
(ich)((as_<ebk>(classTable_, (ibz), 112)));
break;
case 2052LL:
(icj)((as_<ebn>(classTable_, (ibz), 114)));
break;
case 2053LL:
(icl)((as_<ebq>(classTable_, (ibz), 116)));
break;
case 2054LL:
(icn)((as_<ebt>(classTable_, (ibz), 118)));
break;
case 2055LL:
(icp)((as_<ebw>(classTable_, (ibz), 120)));
break;
case 2056LL:
(icr)((as_<ebz>(classTable_, (ibz), 122)));
break;
case 2057LL:
(ict)((as_<bwt>(classTable_, (ibz), 64)));
break;
case 2058LL:
(icv)((as_<ece>(classTable_, (ibz), 124)));
break;
case 2059LL:
(icx)((as_<ech>(classTable_, (ibz), 126)));
break;
case 67584LL:
(icz)((as_<bxm>(classTable_, (ibz), 68)));
break;
case 67585LL:
(idb)((as_<bxl>(classTable_, (ibz), 70)));
break;
case 67586LL:
(idd)((as_<eco>(classTable_, (ibz), 128)));
break;
case 67588LL:
(idf)((as_<ecu>(classTable_, (ibz), 132)));
break;
case 2060LL:
(idh)((as_<ecx>(classTable_, (ibz), 134)));
break;
case 2062LL:
(idj)((as_<gd>(classTable_, (ibz), 14)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// isChar
static bool err(gc* idl /*type*/){
return (((idl)->lw) == (1026LL)) && (((as_<bvz>(classTable_, (idl), 60))->bwa) == (2LL));
}
// addTmpVar
static Array_<char16_t>* eyq(gc* idm /*type*/){
un* idn = nullptr; // tmpVar
(idn) = (new un());
((idn)->bbe) = ((cas)());
((idn)->bbf) = (idm);
uh<List_<un*>*, un*>((aq), (new Array_<int64_t>(1, (0LL))), (idn));
return (idn)->bbe;
}
// buildExpr
static void fhj(gd* ido /*ast*/){
int64_t idq = 0;
switch((ido)->lw){
case 2049LL:
(ids)((as_<ebf>(classTable_, (ido), 110)));
break;
case 2050LL:
(idu)((as_<bzx>(classTable_, (ido), 72)));
break;
case 2051LL:
(idw)((as_<ebk>(classTable_, (ido), 112)));
break;
case 2052LL:
(idy)((as_<ebn>(classTable_, (ido), 114)));
break;
case 2053LL:
(iea)((as_<ebq>(classTable_, (ido), 116)));
break;
case 2054LL:
(iec)((as_<ebt>(classTable_, (ido), 118)));
break;
case 2055LL:
(iee)((as_<ebw>(classTable_, (ido), 120)));
break;
case 2056LL:
(ieg)((as_<ebz>(classTable_, (ido), 122)));
break;
case 2057LL:
(iei)((as_<bwt>(classTable_, (ido), 64)));
break;
case 2058LL:
(iek)((as_<ece>(classTable_, (ido), 124)));
break;
case 2059LL:
(iem)((as_<ech>(classTable_, (ido), 126)));
break;
case 67584LL:
(ieo)((as_<bxm>(classTable_, (ido), 68)));
break;
case 67585LL:
(ieq)((as_<bxl>(classTable_, (ido), 70)));
break;
case 67586LL:
(ies)((as_<eco>(classTable_, (ido), 128)));
break;
case 67588LL:
(ieu)((as_<ecu>(classTable_, (ido), 132)));
break;
case 2060LL:
(iew)((as_<ecx>(classTable_, (ido), 134)));
break;
case 2062LL:
(iey)((as_<gd>(classTable_, (ido), 14)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// isStr
static bool fjp(gc* ifa /*type*/){
gc* ifd = nullptr; // itemType
if(((ifa)->lw) == (66561LL)){
(ifd) = ((as_<cce>(classTable_, (ifa), 76))->ccg);
if((((ifd)->lw) == (1026LL)) && (((as_<bvz>(classTable_, (ifd), 60))->bwa) == (2LL))){
return true;
}
}
return false;
}
// addTmpVar
static Array_<char16_t>* fkq(gc* ifg /*type*/){
va* ifh = nullptr; // tmpVar
(ifh) = (new va());
((ifh)->bif) = ((cru)());
((ifh)->big) = (ifg);
uh<List_<va*>*, va*>((bm), (new Array_<int64_t>(1, (0LL))), (ifh));
return (ifh)->bif;
}
// _peekStack
template<typename T_, typename R_> static R_ fne(T_ ifi /*me_*/, Array_<int64_t>* ifj /*type*/){
return ifi->B.top();
}
// isReserved
static bool fph(Array_<char16_t>* ifk /*name*/){
int64_t ifs = 0;
int64_t ift = 0;
if(eqAddr_((bb), (nullptr))){
(bb) = (new Array_<Array_<char16_t>*>(47, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073')), (new Array_<char16_t>(6, u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074')), (new Array_<char16_t>(5, u'\u0062', u'\u0069', u'\u0074', u'\u0031', u'\u0036')), (new Array_<char16_t>(5, u'\u0062', u'\u0069', u'\u0074', u'\u0033', u'\u0032')), (new Array_<char16_t>(5, u'\u0062', u'\u0069', u'\u0074', u'\u0036', u'\u0034')), (new Array_<char16_t>(4, u'\u0062', u'\u0069', u'\u0074', u'\u0038')), (new Array_<char16_t>(5, u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B')), (new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C')), (new Array_<char16_t>(5, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B')), (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065')), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072')), (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073')), (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074')), (new Array_<char16_t>(3, u'\u0064', u'\u0062', u'\u0067')), (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074')), (new Array_<char16_t>(4, u'\u0064', u'\u0069', u'\u0063', u'\u0074')), (new Array_<char16_t>(2, u'\u0064', u'\u006F')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0069', u'\u0066')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065')), (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064')), (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D')), (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0076')), (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079')), (new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074')), (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072')), (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063')), (new Array_<char16_t>(2, u'\u0069', u'\u0066')), (new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0075', u'\u0064', u'\u0065')), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066')), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074')), (new Array_<char16_t>(4, u'\u006C', u'\u0069', u'\u0073', u'\u0074')), (new Array_<char16_t>(2, u'\u006D', u'\u0065')), (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C')), (new Array_<char16_t>(5, u'\u0071', u'\u0075', u'\u0065', u'\u0075', u'\u0065')), (new Array_<char16_t>(3, u'\u0072', u'\u0065', u'\u0074')), (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070')), (new Array_<char16_t>(5, u'\u0073', u'\u0074', u'\u0061', u'\u0063', u'\u006B')), (new Array_<char16_t>(5, u'\u0073', u'\u0075', u'\u0070', u'\u0065', u'\u0072')), (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(5, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077')), (new Array_<char16_t>(2, u'\u0074', u'\u006F')), (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065')), (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079')), (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072')), (new Array_<char16_t>(5, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065'))));
for(ifs = (0LL), ift = (((bb)->Len()) - (2LL)); ifs <= ift; ifs += (1LL)){
if(!(cmp_(((bb)->At(ifs)), ((bb)->At((ifs) + (1LL)))) < 0)){
throw 0xE9170000U;
}
}
}
return (ifu<Array_<Array_<char16_t>*>*, Array_<char16_t>*>((bb), (new Array_<int64_t>(1, (0LL))), (ifk))) != (-1LL);
}
// parseStatEnd
static ge* fve(int64_t ifv /*row*/, int64_t ifw /*col*/, fx* ifx /*block_*/){
ge* ify = nullptr; // ast
Array_<char16_t>* ifz = nullptr; // id
bool iga = false; // err
Array_<char16_t>* igc = nullptr;
(ify) = (new ge());
(brh)((ify), (513LL), ((bri)((bf), (ifv), (ifw))), (nullptr), (false));
(ifz) = ((bsb)((true), (false)));
(iga) = (false);
(dgn)((u'\u000A'), (true));
igc = ifz;
if(cmp_(igc, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
if(((ifx)->lw) != (256LL)){
(iga) = (true);
}
}
else if(cmp_(igc, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0){
if(((ifx)->lw) != (66049LL)){
(iga) = (true);
}
}
else if(cmp_(igc, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068'))) == 0){
if(((ifx)->lw) != (66050LL)){
(iga) = (true);
}
}
else if(cmp_(igc, (new Array_<char16_t>(5, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065'))) == 0){
if(((ifx)->lw) != (16843265LL)){
(iga) = (true);
}
}
else if(cmp_(igc, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0){
if(((ifx)->lw) != (16843266LL)){
(iga) = (true);
}
}
else if(cmp_(igc, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0){
if(((ifx)->lw) != (66051LL)){
(iga) = (true);
}
}
else if(cmp_(igc, (new Array_<char16_t>(5, u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B'))) == 0){
if(((ifx)->lw) != (66052LL)){
(iga) = (true);
}
}
else{(ad)((65561LL), ((bri)((bf), (ifv), (ifw))), (new Array_<Array_<char16_t>*>(1, (ifz))));
}
if(iga){
(ad)((65562LL), ((bri)((bf), (ifv), (ifw))), (new Array_<Array_<char16_t>*>(1, (ifz))));
}
return ify;
}
// parseStatFunc
static ge* fvg(){
ihc* ihb = nullptr; // ast
(ihb) = (new ihc());
(brh)((ihb), (514LL), (nullptr), (nullptr), (false));
((ihb)->ihd) = ((bsg)((nullptr), (false)));
return ihb;
}
// parseStatVar
static ge* fvi(){
eeo* ihe = nullptr; // ast
(ihe) = (new eeo());
(brh)((ihe), (515LL), (nullptr), (nullptr), (false));
((ihe)->eeq) = ((bsi)((3LL), (nullptr)));
return ihe;
}
// parseStatConst
static ge* fvk(){
ihg* ihf = nullptr; // ast
(ihf) = (new ihg());
(brh)((ihf), (516LL), (nullptr), (nullptr), (false));
((ihf)->ihh) = ((bsk)());
return ihf;
}
// parseStatAlias
static ge* fvm(){
ihj* ihi = nullptr; // ast
(ihi) = (new ihj());
(brh)((ihi), (517LL), (nullptr), (nullptr), (false));
((ihi)->ihk) = ((bsn)());
return ihi;
}
// parseStatClass
static ge* fvo(){
ihm* ihl = nullptr; // ast
(ihl) = (new ihm());
(brh)((ihl), (518LL), (nullptr), (nullptr), (false));
((ihl)->ihn) = ((bsr)());
return ihl;
}
// parseStatEnum
static ge* fvq(){
ihp* iho = nullptr; // ast
(iho) = (new ihp());
(brh)((iho), (519LL), (nullptr), (nullptr), (false));
((iho)->ihq) = ((bst)());
return iho;
}
// parseStatIf
static ge* fvs(){
cld* ihr = nullptr; // ast
ge* ihw = nullptr; // stat
int64_t ihx = 0; // typeId
cle* ihz = nullptr; // elIf
(ihr) = (new cld());
(brh)((ihr), (66049LL), ((dde)()), (nullptr), (false));
((ihr)->bwb) = (nullptr);
((ihr)->eox) = (new List_<cle*>());
((ihr)->epd) = (nullptr);
(ihs)((ihr));
(iht)((ihr));
((ihr)->eop) = ((dms)());
(dgn)((u'\u0029'), (true));
(dgn)((u'\u000A'), (true));
((ihr)->eor) = ((ihv)((&ihw), (&ihx), (66049LL), (ihr)));
while((ihx) == (520LL)){
(ihz) = (as_<cle>(classTable_, (ihw), 90));
((ihz)->epb) = ((ihv)((&ihw), (&ihx), (520LL), (ihr)));
uh<List_<cle*>*, cle*>(((ihr)->eox), (new Array_<int64_t>(1, (0LL))), (ihz));
}
while((ihx) == (521LL)){
((ihr)->epd) = ((ihv)((&ihw), (&ihx), (521LL), (ihr)));
}
if(!((ihx) == (513LL))){
throw 0xE9170000U;
}
btd<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ihr;
}
// parseStatElIf
static ge* fvu(int64_t iib /*row*/, int64_t iic /*col*/, fx* iid /*block_*/){
cle* iie = nullptr; // ast
(iie) = (new cle());
(brh)((iie), (520LL), (nullptr), (nullptr), (false));
((iie)->epb) = (nullptr);
if(((iid)->lw) != (66049LL)){
(ad)((65566LL), ((bri)((bf), (iib), (iic))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0069', u'\u0066')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0069', u'\u0066')))));
(bsw)(((bsx)()));
return nullptr;
}
(dgn)((u'\u0028'), (true));
((iie)->epa) = ((dms)());
(dgn)((u'\u0029'), (true));
(dgn)((u'\u000A'), (true));
return iie;
}
// parseStatElse
static ge* fvw(int64_t iih /*row*/, int64_t iii /*col*/, fx* iij /*block_*/){
ge* iik = nullptr; // ast
(iik) = (new ge());
(brh)((iik), (521LL), (nullptr), (nullptr), (false));
if(((iij)->lw) != (66049LL)){
(ad)((65566LL), ((bri)((bf), (iih), (iii))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0069', u'\u0066')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065')))));
(bsw)(((bsx)()));
return nullptr;
}
(dgn)((u'\u000A'), (true));
return iik;
}
// parseStatSwitch
static ge* fvy(int64_t iin /*row*/, int64_t iio /*col*/){
clh* iip = nullptr; // ast
ge* iiv = nullptr; // stat
int64_t ijb = 0; // typeId
cli* ijf = nullptr; // case_
(iip) = (new clh());
(brh)((iip), (66050LL), ((dde)()), (nullptr), (false));
((iip)->bwb) = ((iiq)(((iip)->ne)));
((iip)->eru) = (new List_<cli*>());
((iip)->eso) = (nullptr);
(ihs)((iip));
(iht)((iip));
((iip)->erq) = ((dms)());
(dgn)((u'\u0029'), (true));
(dgn)((u'\u000A'), (true));
while(true){
(iiv) = ((dhu)((iip)));
if(eqAddr_((iiv), (nullptr))){
if(avg){
return nullptr;
}
else{
continue;
}
}
break;
}
(ijb) = ((iiv)->lw);
if(!((((ijb) == (522LL)) || ((ijb) == (523LL))) || ((ijb) == (513LL)))){
(ad)((65567LL), ((dde)()), (nullptr));
}
while((ijb) == (522LL)){
(ijf) = (as_<cli>(classTable_, (iiv), 94));
((ijf)->esm) = ((ihv)((&iiv), (&ijb), (522LL), (iip)));
uh<List_<cli*>*, cli*>(((iip)->eru), (new Array_<int64_t>(1, (0LL))), (ijf));
}
while((ijb) == (523LL)){
((iip)->eso) = ((ihv)((&iiv), (&ijb), (523LL), (iip)));
}
if(!((ijb) == (513LL))){
throw 0xE9170000U;
}
btd<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return iip;
}
// parseStatCase
static ge* fwa(int64_t ijh /*row*/, int64_t iji /*col*/, fx* ijj /*block_*/){
cli* ijk = nullptr; // ast
bvu* ijq = nullptr; // exprs
char16_t ijr = 0; // c
Array_<char16_t>* ijy = nullptr; // id
(ijk) = (new cli());
(brh)((ijk), (522LL), (nullptr), (nullptr), (false));
((ijk)->ery) = (new List_<bvu*>());
((ijk)->esm) = (nullptr);
if(((ijj)->lw) != (66050LL)){
(ad)((65566LL), ((bri)((bf), (ijh), (iji))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065')))));
(bsw)(((bsx)()));
return nullptr;
}
while(true){
(ijq) = (new bvu());
((ijq)->bxq) = ((dms)());
((ijq)->bxv) = (nullptr);
(ijr) = ((brk)());
if((ijr) == (u'\u0000')){
break;
}
if((ijr) == (u'\u000A')){
uh<List_<bvu*>*, bvu*>(((ijk)->ery), (new Array_<int64_t>(1, (0LL))), (ijq));
break;
}
if((ijr) == (u'\u002C')){
uh<List_<bvu*>*, bvu*>(((ijk)->ery), (new Array_<int64_t>(1, (0LL))), (ijq));
continue;
}
(ave) = (ijr);
(ijy) = ((bsb)((true), (false)));
if(cmp_((ijy), (new Array_<char16_t>(2, u'\u0074', u'\u006F'))) != 0){
(ad)((65568LL), ((dde)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0074', u'\u006F')), (ijy))));
(bsw)(((bsx)()));
return nullptr;
}
((ijq)->bxv) = ((dms)());
(ijr) = ((brk)());
if((ijr) == (u'\u0000')){
break;
}
uh<List_<bvu*>*, bvu*>(((ijk)->ery), (new Array_<int64_t>(1, (0LL))), (ijq));
if((ijr) == (u'\u000A')){
break;
}
if((ijr) != (u'\u002C')){
(dgi)((u'\u002C'), (ijr));
}
}
return ijk;
}
// parseStatDefault
static ge* fwc(int64_t ikh /*row*/, int64_t iki /*col*/, fx* ikj /*block_*/){
ge* ikk = nullptr; // ast
(ikk) = (new ge());
(brh)((ikk), (523LL), (nullptr), (nullptr), (false));
if(((ikj)->lw) != (66050LL)){
(ad)((65566LL), ((bri)((bf), (ikh), (iki))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074')))));
(bsw)(((bsx)()));
return nullptr;
}
(dgn)((u'\u000A'), (true));
return ikk;
}
// parseStatWhile
static ge* fwe(){
cll* ikn = nullptr; // ast
char16_t ikp = 0; // c
Array_<char16_t>* iks = nullptr; // id
ge* ikz = nullptr; // stat
(ikn) = (new cll());
(brh)((ikn), (16843265LL), ((dde)()), (nullptr), (false));
((ikn)->bwb) = (nullptr);
((ikn)->ewb) = (false);
((ikn)->evv) = (new List_<ge*>());
(ihs)((ikn));
(iht)((ikn));
((ikn)->evt) = ((dms)());
(ikp) = ((brk)());
if((ikp) == (u'\u002C')){
(iks) = ((bsb)((true), (false)));
if(cmp_((iks), (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070'))) != 0){
(ad)((65568LL), ((dde)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070')), (iks))));
}
((ikn)->ewb) = (true);
}
else{
(ave) = (ikp);
}
(dgn)((u'\u0029'), (true));
(dgn)((u'\u000A'), (true));
while(true){
(ikz) = ((dhu)((ikn)));
if(eqAddr_((ikz), (nullptr))){
if(avg){
return nullptr;
}
else{
continue;
}
}
if(((ikz)->lw) == (513LL)){
break;
}
uh<List_<ge*>*, ge*>(((ikn)->evv), (new Array_<int64_t>(1, (0LL))), (ikz));
}
btd<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ikn;
}
// parseStatFor
static ge* fwg(int64_t ilh /*row*/, int64_t ili /*col*/){
clp* ilj = nullptr; // ast
char16_t ill = 0; // c
ge* ilt = nullptr; // stat
(ilj) = (new clp());
(brh)((ilj), (16843266LL), ((dde)()), (nullptr), (false));
((ilj)->bwb) = ((iiq)(((ilj)->ne)));
((ilj)->ezb) = (new List_<ge*>());
(ihs)((ilj));
(iht)((ilj));
((ilj)->eys) = ((dms)());
(dgn)((u'\u002C'), (true));
((ilj)->eyr) = ((dms)());
(ill) = ((brk)());
if((ill) == (u'\u002C')){
((ilj)->eyt) = ((dms)());
(dgn)((u'\u0029'), (true));
(dgn)((u'\u000A'), (true));
}
else{
((ilj)->eyt) = ((ilp)(((dde)()), (0LL), (0x0000000000000001ULL)));
(ave) = (ill);
(dgn)((u'\u0029'), (true));
(dgn)((u'\u000A'), (true));
}
while(true){
(ilt) = ((dhu)((ilj)));
if(eqAddr_((ilt), (nullptr))){
if(avg){
return nullptr;
}
else{
continue;
}
}
if(((ilt)->lw) == (513LL)){
break;
}
uh<List_<ge*>*, ge*>(((ilj)->ezb), (new Array_<int64_t>(1, (0LL))), (ilt));
}
btd<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ilj;
}
// parseStatTry
static ge* fwi(int64_t imb /*row*/, int64_t imc /*col*/){
bvq* imd = nullptr; // ast
char16_t imf = 0; // c
bvz* imk = nullptr; // type
ge* imm = nullptr; // stat
int64_t imn = 0; // typeId
bvt* imp = nullptr; // catch_
(imd) = (new bvq());
(brh)((imd), (66051LL), ((dde)()), (nullptr), (false));
((imd)->bwb) = ((iiq)(((imd)->ne)));
((imd)->bwg) = (new List_<bvt*>());
((imd)->bwj) = (nullptr);
(ihs)((imd));
(imf) = ((brk)());
if((imf) != (u'\u000A')){
(ave) = (imf);
((imd)->nf) = ((bsb)((true), (false)));
(dgr)((imd), (true));
(dgn)((u'\u000A'), (true));
}
else{
((imd)->nf) = (new Array_<char16_t>(1, u'\u0024'));
}
(imk) = (new bvz());
(brh)((imk), (1026LL), ((bri)((bf), (imb), (imc))), (nullptr), (false));
((imk)->bwa) = (0LL);
(((imd)->bwb)->qf) = (imk);
((imd)->bwf) = ((ihv)((&imm), (&imn), (66051LL), (imd)));
while((imn) == (524LL)){
(imp) = (as_<bvt>(classTable_, (imm), 56));
((imp)->bxg) = ((ihv)((&imm), (&imn), (524LL), (imd)));
uh<List_<bvt*>*, bvt*>(((imd)->bwg), (new Array_<int64_t>(1, (0LL))), (imp));
}
if((imn) == (525LL)){
((imd)->bwj) = ((ihv)((&imm), (&imn), (525LL), (imd)));
}
if(!((imn) == (513LL))){
throw 0xE9170000U;
}
btd<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return imd;
}
// parseStatCatch
static ge* fwk(int64_t ims /*row*/, int64_t imt /*col*/, fx* imu /*block_*/){
bvt* imv = nullptr; // ast
char16_t imz = 0; // c
bvu* inc = nullptr; // exprs
ga* ind = nullptr; // pos
bvu* ini = nullptr; // exprs
Array_<char16_t>* inp = nullptr; // id
(imv) = (new bvt());
(brh)((imv), (524LL), (nullptr), (nullptr), (false));
((imv)->bxd) = (new List_<bvu*>());
((imv)->bxg) = (nullptr);
if(((imu)->lw) != (66051LL)){
(ad)((65566LL), ((bri)((bf), (ims), (imt))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079')), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068')))));
(bsw)(((bsx)()));
return nullptr;
}
(imz) = ((brk)());
if((imz) == (u'\u000A')){
(inc) = (new bvu());
(ind) = ((dde)());
((inc)->bxq) = ((ilp)((ind), (0LL), (0x0000000000000000ULL)));
((inc)->bxv) = ((ilp)((ind), (0LL), (0x00000000FFFFFFFFULL)));
uh<List_<bvu*>*, bvu*>(((imv)->bxd), (new Array_<int64_t>(1, (0LL))), (inc));
}
else{
(ave) = (imz);
while(true){
(ini) = (new bvu());
((ini)->bxq) = ((dms)());
((ini)->bxv) = (nullptr);
(imz) = ((brk)());
if((imz) == (u'\u0000')){
break;
}
if((imz) == (u'\u000A')){
uh<List_<bvu*>*, bvu*>(((imv)->bxd), (new Array_<int64_t>(1, (0LL))), (ini));
break;
}
if((imz) == (u'\u002C')){
uh<List_<bvu*>*, bvu*>(((imv)->bxd), (new Array_<int64_t>(1, (0LL))), (ini));
continue;
}
(ave) = (imz);
(inp) = ((bsb)((true), (false)));
if(cmp_((inp), (new Array_<char16_t>(2, u'\u0074', u'\u006F'))) != 0){
(ad)((65568LL), ((dde)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0074', u'\u006F')), (inp))));
}
((ini)->bxv) = ((dms)());
(imz) = ((brk)());
if((imz) == (u'\u0000')){
break;
}
uh<List_<bvu*>*, bvu*>(((imv)->bxd), (new Array_<int64_t>(1, (0LL))), (ini));
if((imz) == (u'\u000A')){
break;
}
if((imz) != (u'\u002C')){
(dgi)((u'\u002C'), (imz));
}
}
}
return imv;
}
// parseStatFinally
static ge* fwm(int64_t inz /*row*/, int64_t ioa /*col*/, fx* iob /*block_*/){
ge* ioc = nullptr; // ast
(ioc) = (new ge());
(brh)((ioc), (525LL), (nullptr), (nullptr), (false));
if(((iob)->lw) != (66051LL)){
(ad)((65566LL), ((bri)((bf), (inz), (ioa))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079')), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079')))));
(bsw)(((bsx)()));
return nullptr;
}
(dgn)((u'\u000A'), (true));
return ioc;
}
// parseStatThrow
static ge* fwo(){
clu* iof = nullptr; // ast
(iof) = (new clu());
(brh)((iof), (526LL), ((dde)()), (nullptr), (false));
((iof)->fbs) = ((dms)());
(dgn)((u'\u000A'), (true));
return iof;
}
// parseStatBlock
static ge* fwq(){
bvs* iog = nullptr; // ast
char16_t ioi = 0; // c
ge* iop = nullptr; // stat
(iog) = (new bvs());
(brh)((iog), (66052LL), ((dde)()), (nullptr), (false));
((iog)->bwb) = (nullptr);
((iog)->bwe) = (new List_<ge*>());
(ihs)((iog));
(ioi) = ((brk)());
if((ioi) != (u'\u000A')){
(ave) = (ioi);
((iog)->nf) = ((bsb)((true), (false)));
(dgr)((iog), (true));
(dgn)((u'\u000A'), (true));
}
else{
((iog)->nf) = (new Array_<char16_t>(1, u'\u0024'));
}
while(true){
(iop) = ((dhu)((iog)));
if(eqAddr_((iop), (nullptr))){
if(avg){
return nullptr;
}
else{
continue;
}
}
if(((iop)->lw) == (513LL)){
break;
}
uh<List_<ge*>*, ge*>(((iog)->bwe), (new Array_<int64_t>(1, (0LL))), (iop));
}
btd<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return iog;
}
// parseStatRet
static ge* fws(){
clz* iox = nullptr; // ast
char16_t ioz = 0; // c
(iox) = (new clz());
(brh)((iox), (527LL), ((dde)()), (nullptr), (false));
(ioz) = ((brk)());
if((ioz) != (u'\u000A')){
(ave) = (ioz);
((iox)->fcy) = ((dms)());
(dgn)((u'\u000A'), (true));
}
else{
((iox)->fcy) = (nullptr);
}
return iox;
}
// parseStatDo
static ge* fwu(){
bwq* ipd = nullptr; // ast
(ipd) = (new bwq());
(brh)((ipd), (528LL), ((dde)()), (nullptr), (false));
((ipd)->bxa) = ((dms)());
(dgn)((u'\u000A'), (true));
return ipd;
}
// parseStatBreak
static ge* fww(){
ge* ipe = nullptr; // ast
(ipe) = (new ge());
(brh)((ipe), (529LL), ((dde)()), (nullptr), (false));
(dgm)((ipe), ((bsb)((true), (false))));
(dgn)((u'\u000A'), (true));
return ipe;
}
// parseStatSkip
static ge* fwy(){
ge* ipf = nullptr; // ast
(ipf) = (new ge());
(brh)((ipf), (530LL), ((dde)()), (nullptr), (false));
(dgm)((ipf), ((bsb)((true), (false))));
(dgn)((u'\u000A'), (true));
return ipf;
}
// parseStatAssert
static ge* fxa(){
cmi* ipg = nullptr; // ast
(ipg) = (new cmi());
(brh)((ipg), (531LL), ((dde)()), (nullptr), (false));
((ipg)->fem) = ((dms)());
(dgn)((u'\u000A'), (true));
return ipg;
}
// parseExprThree
static gd* fxf(){
gd* iph = nullptr; // ast
int64_t ipm = 0; // row
int64_t ipn = 0; // col
char16_t ipo = 0; // c
ebk* ipr = nullptr; // ast2
(iph) = ((ipi)());
while(true){
(ipm) = (avc);
(ipn) = (avd);
(ipo) = ((brk)());
if((ipo) == (u'\u003F')){
(dgn)((u'\u0028'), (false));
(ipr) = (new ebk());
(dmx)((ipr), (2051LL), ((bri)((bf), (ipm), (ipn))));
((ipr)->gqn) = (iph);
((ipr)->gqq) = ((dms)());
(dgn)((u'\u002C'), (true));
((ipr)->gqt) = ((dms)());
(iph) = (ipr);
(dgn)((u'\u0029'), (true));
}
else{
(ave) = (ipo);
break;
}
}
return iph;
}
// readInStr
static char16_t fyp(){
char16_t ipw = 0; // c
char16_t ipy = 0;
while(true){
(ipw) = ((dct)());
switch(ipw){
case u'\u0009':
(ad)((65540LL), ((dde)()), (nullptr));
continue;
break;
case u'\u000A':
(ad)((65541LL), ((dde)()), (nullptr));
break;
}
return ipw;
}
}
// searchEnumElementValue
static uint64_t gdo(ecr* iqb /*ast*/, bsu* iqc /*enum_*/){
Array_<char16_t>* iqd = nullptr; // name
List_<gd*>* iqe = nullptr; // items
gd* iqg = nullptr; // item
if(!((((iqb)->pf)->lw) == (1028LL))){
throw 0xE9170000U;
}
(dzy)((iqc));
(iqd) = ((iqb)->gjp);
(iqe) = ((iqc)->dma);
awe<List_<gd*>*>((iqe), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((iqe), (new Array_<int64_t>(1, (0LL)))))){
(iqg) = (awi<List_<gd*>*, gd*>((iqe), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((iqd), ((iqg)->nf)) == 0){
if(((iqg)->lw) != (67585LL)){
return 0x0000000000000000ULL;
}
return (as_<bxl>(classTable_, (iqg), 70))->bxn;
}
ays<List_<gd*>*>((iqe), (new Array_<int64_t>(1, (0LL))));
}
(ad)((131090LL), ((iqb)->ne), (new Array_<Array_<char16_t>*>(1, (iqd))));
return 0x0000000000000000ULL;
}
// process1
static void gdw(ul* iql /*ast*/, fw** iqm /*dtor*/, fw** iqn /*copy*/, fw** iqo /*toBin*/, fw** iqp /*fromBin*/){
fx* iqs = nullptr; // parent
ul* iqx = nullptr; // parent
Dict_<ul*, bool>* iqy = nullptr; // chk
bool irb = false;
List_<um*>* ire = nullptr; // astItems
um* irg = nullptr; // item
fx* iri = nullptr; // def
Array_<char16_t>* irl = nullptr; // memberName
um* iro = nullptr; // parentItem
ul* irq = nullptr; // parent
List_<um*>* irs = nullptr; // items
um* iru = nullptr; // item2
fx* irv = nullptr; // def
Array_<char16_t>* iry = nullptr; // parentName
fw* iso = nullptr; // func1
fw* isp = nullptr; // func2
List_<gb*>* iss = nullptr; // items1
List_<gb*>* ist = nullptr; // items2
int64_t isx = 0;
gb* isz = nullptr; // arg1
gb* ita = nullptr; // arg2
Array_<char16_t>* ite = nullptr;
fw* itg = nullptr; // func_
char16_t itk = 0;
fx* itr = nullptr; // def
int64_t itu = 0; // idx
dgu* iub = nullptr; // type
cce* iue = nullptr; // type
cci* iug = nullptr; // type2
gb* iuk = nullptr; // arg
cce* ium = nullptr; // type
cci* iuo = nullptr; // type2
gb* iuq = nullptr; // arg
bvz* ius = nullptr; // type
int64_t isy = 0;
if(!eqAddr_(((iql)->nj), (nullptr))){
(iqs) = ((iql)->nj);
if(((iqs)->lw) == (4LL)){
(eaa)((as_<bso>(classTable_, (iqs), 46)), (nullptr));
((iql)->nj) = (((as_<bso>(classTable_, (iqs), 46))->dje)->nj);
if(!((((iql)->nj)->lw) == (5LL))){
throw 0xE9170000U;
}
}
else{
if(!(((iqs)->lw) == (5LL))){
throw 0xE9170000U;
}
(dzw)((as_<ul>(classTable_, (iqs), 22)));
}
}
(iqx) = (iql);
(iqy) = (new Dict_<ul*, bool>());
while(!eqAddr_((iqx), (nullptr))){
if(avo<Dict_<ul*, bool>*, ul*, bool>((iqy), (new Array_<int64_t>(1, (0LL))), (iqx), (&irb))){
(ad)((131080LL), ((iql)->ne), (new Array_<Array_<char16_t>*>(1, ((iql)->nf))));
return;
}
dv<Dict_<ul*, bool>*, ul*, bool>((iqy), (new Array_<int64_t>(1, (0LL))), (iqx), (true));
(iqx) = (as_<ul>(classTable_, ((iqx)->nj), 22));
}
(ire) = ((iql)->bag);
awe<List_<um*>*>((ire), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((ire), (new Array_<int64_t>(1, (0LL)))))){
(irg) = (awi<List_<um*>*, um*>((ire), (new Array_<int64_t>(1, (0LL)))));
(iri) = ((irg)->azl);
if(((iri)->lw) == (2LL)){
(irl) = (((as_<bgi>(classTable_, (iri), 38))->bgk)->nf);
}
else if(((iri)->lw) == (3LL)){
(irl) = (((as_<bsl>(classTable_, (iri), 44))->btb)->nf);
}
else{
(irl) = ((iri)->nf);
}
(iro) = (nullptr);
(irq) = (as_<ul>(classTable_, ((iql)->nj), 22));
while((eqAddr_((iro), (nullptr))) && (!eqAddr_((irq), (nullptr)))){
(irs) = ((irq)->bag);
awe<List_<um*>*>((irs), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((irs), (new Array_<int64_t>(1, (0LL)))))){
(iru) = (awi<List_<um*>*, um*>((irs), (new Array_<int64_t>(1, (0LL)))));
(irv) = ((iru)->azl);
if(((irv)->lw) == (2LL)){
(iry) = (((as_<bgi>(classTable_, (irv), 38))->bgk)->nf);
}
else if(((irv)->lw) == (3LL)){
(iry) = (((as_<bsl>(classTable_, (irv), 44))->btb)->nf);
}
else{
(iry) = ((irv)->nf);
}
if(cmp_((irl), (iry)) == 0){
(iro) = (iru);
}
ays<List_<um*>*>((irs), (new Array_<int64_t>(1, (0LL))));
}
(irq) = (as_<ul>(classTable_, ((irq)->nj), 22));
}
if(eqAddr_((iro), (nullptr))){
if((irg)->azr){
(ad)((131081LL), (((irg)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (irl))));
return;
}
}
else{
if(!((irg)->azr)){
(ad)((131082LL), (((irg)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (irl))));
return;
}
if(!(((((irg)->azl)->lw) == (256LL)) && ((((iro)->azl)->lw) == (256LL)))){
(ad)((131083LL), (((irg)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (irl))));
return;
}
if(((irg)->azq) != ((iro)->azq)){
(ad)((131084LL), (((irg)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (irl))));
return;
}
(iso) = (as_<fw>(classTable_, ((irg)->azl), 8));
(isp) = (as_<fw>(classTable_, ((iro)->azl), 8));
if(((((eqAddr_(((iso)->sh), (nullptr))) && (!eqAddr_(((isp)->sh), (nullptr)))) || ((!eqAddr_(((iso)->sh), (nullptr))) && (eqAddr_(((isp)->sh), (nullptr))))) || (((!eqAddr_(((iso)->sh), (nullptr))) && (!eqAddr_(((isp)->sh), (nullptr)))) && (!((dze)(((iso)->sh), ((isp)->sh), (false)))))) || ((((iso)->sg)->Len()) != (((isp)->sg)->Len()))){
(ad)((131085LL), (((irg)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (irl))));
return;
}
(iss) = ((iso)->sg);
(ist) = ((isp)->sg);
awe<List_<gb*>*>((iss), (new Array_<int64_t>(1, (0LL))));
awe<List_<gb*>*>((ist), (new Array_<int64_t>(1, (0LL))));
for(isx = (0LL), isy = (((iss)->Len()) - (1LL)); isx <= isy; isx += (1LL)){
(isz) = (awi<List_<gb*>*, gb*>((iss), (new Array_<int64_t>(1, (0LL)))));
(ita) = (awi<List_<gb*>*, gb*>((ist), (new Array_<int64_t>(1, (0LL)))));
if(((((((((isz)->qf)->lw) == (66565LL)) && (eqAddr_((((isz)->qf)->nj), (nullptr)))) || (((((ita)->qf)->lw) == (66565LL)) && (eqAddr_((((ita)->qf)->nj), (nullptr))))) || (!((dze)(((isz)->qf), ((ita)->qf), (false))))) || (((!eqAddr_(((isz)->nf), (nullptr))) && (!eqAddr_(((ita)->nf), (nullptr)))) && (cmp_(((isz)->nf), ((ita)->nf)) != 0))) || (((isz)->ql) != ((ita)->ql))){
(ad)((131085LL), (((irg)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (irl))));
return;
}
ays<List_<gb*>*>((iss), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ist), (new Array_<int64_t>(1, (0LL))));
}
((irg)->azm) = (iro);
}
ite = irl;
if(cmp_(ite, (new Array_<char16_t>(5, u'\u005F', u'\u0064', u'\u0074', u'\u006F', u'\u0072'))) == 0 || cmp_(ite, (new Array_<char16_t>(5, u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079'))) == 0 || cmp_(ite, (new Array_<char16_t>(6, u'\u005F', u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E'))) == 0 || cmp_(ite, (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E'))) == 0){
if(!((((irg)->azl)->lw) == (256LL))){
throw 0xE9170000U;
}
(itg) = (as_<fw>(classTable_, ((irg)->azl), 8));
if(((irg)->azr) && ((aye<int64_t>(((as_<fw>(classTable_, ((irg)->azl), 8))->sm), (new Array_<int64_t>(1, (0LL))), (128LL))) == (0LL))){
(ad)((131086LL), ((itg)->ne), (new Array_<Array_<char16_t>*>(1, (irl))));
return;
}
switch((irl)->At(1LL)){
case u'\u0064':
(*iqm) = (itg);
break;
case u'\u0063':
(*iqn) = (itg);
break;
case u'\u0074':
(*iqo) = (itg);
break;
case u'\u0066':
(*iqp) = (itg);
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{(itr) = ((irg)->azl);
if(((itr)->lw) == (256LL)){
(itu) = (bew<List_<um*>*>((ire), (new Array_<int64_t>(1, (0LL)))));
if(!((itu) != (-1LL))){
throw 0xE9170000U;
}
(ayx)((as_<fw>(classTable_, (itr), 8)));
awe<List_<um*>*>((ire), (new Array_<int64_t>(1, (0LL))));
bey<List_<um*>*>((ire), (new Array_<int64_t>(1, (0LL))), (itu));
}
else if(((itr)->lw) == (2LL)){
(eep)((as_<bgi>(classTable_, (itr), 38)));
}
}
ays<List_<um*>*>((ire), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_((*iqm), (nullptr))){
(*iqm) = ((ity)((iql), (new Array_<char16_t>(5, u'\u005F', u'\u0064', u'\u0074', u'\u006F', u'\u0072'))));
}
if(eqAddr_((*iqn), (nullptr))){
(*iqn) = ((ity)((iql), (new Array_<char16_t>(5, u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079'))));
(iub) = (new dgu());
(bvn)((iub), (66565LL), ((iql)->ne));
((iub)->nj) = (iql);
((*iqn)->sh) = (iub);
}
if(eqAddr_((*iqo), (nullptr))){
(*iqo) = ((ity)((iql), (new Array_<char16_t>(6, u'\u005F', u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E'))));
(iue) = (new cce());
(bvn)((iue), (66561LL), ((iql)->ne));
(iug) = (new cci());
(bvn)((iug), (1025LL), ((iql)->ne));
((iug)->ccj) = (1LL);
((iue)->ccg) = (iug);
((*iqo)->sh) = (iue);
}
if(eqAddr_((*iqp), (nullptr))){
(*iqp) = ((ity)((iql), (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E'))));
(iuk) = (new gb());
(bvn)((iuk), (7LL), ((iql)->ne));
((iuk)->qk) = (2LL);
((iuk)->ql) = (false);
((iuk)->qg) = (nullptr);
(ium) = (new cce());
(bvn)((ium), (66561LL), ((iql)->ne));
(iuo) = (new cci());
(bvn)((iuo), (1025LL), ((iql)->ne));
((iuo)->ccj) = (1LL);
((ium)->ccg) = (iuo);
((iuk)->qf) = (ium);
uh<List_<gb*>*, gb*>(((*iqp)->sg), (new Array_<int64_t>(1, (0LL))), (iuk));
(iuq) = (new gb());
(bvn)((iuq), (7LL), ((iql)->ne));
((iuq)->qk) = (2LL);
((iuq)->ql) = (true);
((iuq)->qg) = (nullptr);
(ius) = (new bvz());
(bvn)((ius), (1026LL), ((iql)->ne));
((ius)->bwa) = (0LL);
((iuq)->qf) = (ius);
uh<List_<gb*>*, gb*>(((*iqp)->sg), (new Array_<int64_t>(1, (0LL))), (iuq));
awe<List_<gb*>*>(((*iqp)->sg), (new Array_<int64_t>(1, (0LL))));
((*iqp)->sh) = ((awi<List_<gb*>*, gb*>(((*iqp)->sg), (new Array_<int64_t>(1, (0LL)))))->qf);
}
}
// process2
static void gdx(ul* iut /*ast*/, fw* iuu /*dtor*/, fw* iuv /*copy*/, fw* iuw /*toBin*/, fw* iux /*fromBin*/){
ul* iuz = nullptr; // ptr
List_<um*>* ivb = nullptr; // items
um* ivd = nullptr; // item
bwq* ivg = nullptr; // do_
bzx* ivi = nullptr; // assign
eeo* ivm = nullptr; // var_
bgi* ivo = nullptr; // var2
gb* ivq = nullptr; // arg
dgu* ivs = nullptr; // type
ebn* ivu = nullptr; // new_
gd* ivw = nullptr; // result
dgu* ivy = nullptr; // type
ul* iwa = nullptr; // ptr
List_<um*>* iwc = nullptr; // items
um* iwe = nullptr; // item
gb* iwh = nullptr; // member
bwq* iwj = nullptr; // do_
bzx* iwl = nullptr; // assign
ech* iwn = nullptr; // dot
ebf* iwq = nullptr; // copy2
clz* iwt = nullptr; // ret_
ebt* iwv = nullptr; // as
eeo* iwy = nullptr; // var_
bgi* ixa = nullptr; // var2
gb* ixc = nullptr; // arg
ebq* ixe = nullptr; // new_
bxl* ixg = nullptr; // value
bvz* ixi = nullptr; // prim
cci* ixk = nullptr; // type
cce* ixm = nullptr; // type
cci* ixo = nullptr; // type2
gd* ixq = nullptr; // result
dgu* ixs = nullptr; // type
ul* ixu = nullptr; // ptr
List_<um*>* ixw = nullptr; // items
um* ixy = nullptr; // item
gb* iyb = nullptr; // member
bwq* iyd = nullptr; // do_
bzx* iyf = nullptr; // assign
ebw* iyh = nullptr; // expr
cce* iyj = nullptr; // array_
cci* iyl = nullptr; // bit
clz* iyn = nullptr; // ret_
eeo* iyq = nullptr; // var_
bgi* iys = nullptr; // var2
gb* iyu = nullptr; // arg
ebn* iyw = nullptr; // new_
gd* iyy = nullptr; // result
dgu* iza = nullptr; // type
ul* izc = nullptr; // ptr
List_<um*>* ize = nullptr; // items
um* izg = nullptr; // item
gb* izj = nullptr; // member
bwq* izl = nullptr; // do_
bzx* izn = nullptr; // assign
ech* izp = nullptr; // dot
ebz* izr = nullptr; // expr
gd* izt = nullptr; // ref
gd* izv = nullptr; // ref
clz* izx = nullptr; // ret_
(iuz) = (iut);
while(!eqAddr_((iuz), (nullptr))){
(ivb) = ((iuz)->bag);
awe<List_<um*>*>((ivb), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((ivb), (new Array_<int64_t>(1, (0LL)))))){
(ivd) = (awi<List_<um*>*, um*>((ivb), (new Array_<int64_t>(1, (0LL)))));
if(((((ivd)->azl)->lw) == (2LL)) && ((caf)((((as_<bgi>(classTable_, ((ivd)->azl), 38))->bgk)->qf)))){
(ivg) = (new bwq());
(bvn)((ivg), (528LL), ((iut)->ne));
(ivi) = (new bzx());
(bwv)((ivi), (2050LL), ((iut)->ne));
((ivi)->bzy) = (0LL);
awe<List_<gb*>*>(((iuu)->sg), (new Array_<int64_t>(1, (0LL))));
((ivi)->cab) = ((ivj)((iut), (awi<List_<gb*>*, gb*>(((iuu)->sg), (new Array_<int64_t>(1, (0LL))))), (((as_<bgi>(classTable_, ((ivd)->azl), 38))->bgk)->nf)));
((ivi)->cac) = ((cam)(((iut)->ne)));
((ivg)->bxa) = (ivi);
uh<List_<ge*>*, ge*>(((iuu)->si), (new Array_<int64_t>(1, (0LL))), ((cad)((ivg), ((iuu)->sh), (iuu))));
}
ays<List_<um*>*>((ivb), (new Array_<int64_t>(1, (0LL))));
}
(iuz) = (as_<ul>(classTable_, ((iuz)->nj), 22));
}
(ivm) = (new eeo());
(bvn)((ivm), (515LL), ((iut)->ne));
(ivo) = (new bgi());
(bvn)((ivo), (2LL), ((iut)->ne));
(ivq) = (new gb());
(bvn)((ivq), (7LL), ((iut)->ne));
((ivq)->qk) = (3LL);
((ivq)->ql) = (false);
(ivs) = (new dgu());
(bvn)((ivs), (66565LL), ((iut)->ne));
((ivs)->nj) = (iut);
((ivq)->qf) = (ivs);
(ivu) = (new ebn());
(bwv)((ivu), (2052LL), ((iut)->ne));
((ivu)->gso) = ((ivq)->qf);
((ivq)->qg) = (ivu);
((ivo)->bgk) = (ivq);
((ivm)->eeq) = (ivo);
uh<List_<ge*>*, ge*>(((iuv)->si), (new Array_<int64_t>(1, (0LL))), ((cad)((ivm), ((iuv)->sh), (iuv))));
(ivw) = (new gd());
(bwv)((ivw), (2062LL), ((iut)->ne));
((ivw)->ni) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
((ivw)->nj) = (((ivm)->eeq)->bgk);
(ivy) = (new dgu());
(bvn)((ivy), (66565LL), ((iut)->ne));
((ivy)->nj) = (iut);
((ivw)->pf) = (ivy);
(iwa) = (iut);
while(!eqAddr_((iwa), (nullptr))){
(iwc) = ((iwa)->bag);
awe<List_<um*>*>((iwc), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((iwc), (new Array_<int64_t>(1, (0LL)))))){
(iwe) = (awi<List_<um*>*, um*>((iwc), (new Array_<int64_t>(1, (0LL)))));
if((((iwe)->azl)->lw) == (2LL)){
(iwh) = ((as_<bgi>(classTable_, ((iwe)->azl), 38))->bgk);
(iwj) = (new bwq());
(bvn)((iwj), (528LL), ((iut)->ne));
(iwl) = (new bzx());
(bwv)((iwl), (2050LL), ((iut)->ne));
((iwl)->bzy) = (0LL);
(iwn) = (new ech());
(bwv)((iwn), (2059LL), ((iut)->ne));
((iwn)->hdo) = (ivw);
((iwn)->hhe) = ((iwh)->nf);
((iwn)->hhr) = (nullptr);
((iwl)->cab) = (iwn);
if((caf)(((iwh)->qf))){
(iwq) = (new ebf());
(bwv)((iwq), (2049LL), ((iut)->ne));
((iwq)->gfp) = (3LL);
awe<List_<gb*>*>(((iuv)->sg), (new Array_<int64_t>(1, (0LL))));
((iwq)->gfj) = ((ivj)((iut), (awi<List_<gb*>*, gb*>(((iuv)->sg), (new Array_<int64_t>(1, (0LL))))), ((iwh)->nf)));
((iwl)->cac) = (iwq);
}
else{
awe<List_<gb*>*>(((iuv)->sg), (new Array_<int64_t>(1, (0LL))));
((iwl)->cac) = ((ivj)((iut), (awi<List_<gb*>*, gb*>(((iuv)->sg), (new Array_<int64_t>(1, (0LL))))), ((iwh)->nf)));
}
((iwj)->bxa) = (iwl);
uh<List_<ge*>*, ge*>(((iuv)->si), (new Array_<int64_t>(1, (0LL))), ((cad)((iwj), ((iuv)->sh), (iuv))));
}
ays<List_<um*>*>((iwc), (new Array_<int64_t>(1, (0LL))));
}
(iwa) = (as_<ul>(classTable_, ((iwa)->nj), 22));
}
(iwt) = (new clz());
(bvn)((iwt), (527LL), ((iut)->ne));
(iwv) = (new ebt());
(bwv)((iwv), (2054LL), ((iut)->ne));
((iwv)->gwe) = (0LL);
((iwv)->gvw) = (ivw);
((iwv)->gvz) = ((iuv)->sh);
((iwt)->fcy) = (iwv);
uh<List_<ge*>*, ge*>(((iuv)->si), (new Array_<int64_t>(1, (0LL))), ((cad)((iwt), ((iuv)->sh), (iuv))));
(iwy) = (new eeo());
(bvn)((iwy), (515LL), ((iut)->ne));
(ixa) = (new bgi());
(bvn)((ixa), (2LL), ((iut)->ne));
(ixc) = (new gb());
(bvn)((ixc), (7LL), ((iut)->ne));
((ixc)->qk) = (3LL);
((ixc)->ql) = (false);
(ixe) = (new ebq());
(bwv)((ixe), (2053LL), ((iut)->ne));
((ixe)->gtz) = (new List_<gd*>());
(ixg) = (new bxl());
(bwv)((ixg), (67585LL), ((iut)->ne));
((ixg)->bxn) = (0x0000000000000008ULL);
(ixi) = (new bvz());
(bvn)((ixi), (1026LL), ((iut)->ne));
((ixi)->bwa) = (0LL);
((ixg)->pf) = (ixi);
uh<List_<gd*>*, gd*>(((ixe)->gtz), (new Array_<int64_t>(1, (0LL))), (ixg));
(ixk) = (new cci());
(bvn)((ixk), (1025LL), ((iut)->ne));
((ixk)->ccj) = (1LL);
((ixe)->gui) = (ixk);
((ixc)->qg) = (ixe);
(ixm) = (new cce());
(bvn)((ixm), (66561LL), ((iut)->ne));
(ixo) = (new cci());
(bvn)((ixo), (1025LL), ((iut)->ne));
((ixo)->ccj) = (1LL);
((ixm)->ccg) = (ixo);
((ixc)->qf) = (ixm);
((ixa)->bgk) = (ixc);
((iwy)->eeq) = (ixa);
uh<List_<ge*>*, ge*>(((iuw)->si), (new Array_<int64_t>(1, (0LL))), ((cad)((iwy), ((iuw)->sh), (iuw))));
(ixq) = (new gd());
(bwv)((ixq), (2062LL), ((iut)->ne));
((ixq)->nj) = (((iwy)->eeq)->bgk);
(ixs) = (new dgu());
(bvn)((ixs), (66565LL), ((iut)->ne));
((ixs)->nj) = (iut);
((ixq)->pf) = (ixs);
(ixu) = (iut);
while(!eqAddr_((ixu), (nullptr))){
(ixw) = ((ixu)->bag);
awe<List_<um*>*>((ixw), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((ixw), (new Array_<int64_t>(1, (0LL)))))){
(ixy) = (awi<List_<um*>*, um*>((ixw), (new Array_<int64_t>(1, (0LL)))));
if((((ixy)->azl)->lw) == (2LL)){
(iyb) = ((as_<bgi>(classTable_, ((ixy)->azl), 38))->bgk);
(iyd) = (new bwq());
(bvn)((iyd), (528LL), ((iut)->ne));
(iyf) = (new bzx());
(bwv)((iyf), (2050LL), ((iut)->ne));
((iyf)->bzy) = (7LL);
((iyf)->cab) = (ixq);
(iyh) = (new ebw());
(bwv)((iyh), (2055LL), ((iut)->ne));
awe<List_<gb*>*>(((iuw)->sg), (new Array_<int64_t>(1, (0LL))));
((iyh)->had) = ((ivj)((iut), (awi<List_<gb*>*, gb*>(((iuw)->sg), (new Array_<int64_t>(1, (0LL))))), ((iyb)->nf)));
(iyj) = (new cce());
(bvn)((iyj), (66561LL), ((iut)->ne));
(iyl) = (new cci());
(bvn)((iyl), (1025LL), ((iut)->ne));
((iyl)->ccj) = (1LL);
((iyj)->ccg) = (iyl);
((iyh)->haj) = (iyj);
((iyf)->cac) = (iyh);
((iyd)->bxa) = (iyf);
uh<List_<ge*>*, ge*>(((iuw)->si), (new Array_<int64_t>(1, (0LL))), ((cad)((iyd), ((iuw)->sh), (iuw))));
}
ays<List_<um*>*>((ixw), (new Array_<int64_t>(1, (0LL))));
}
(ixu) = (as_<ul>(classTable_, ((ixu)->nj), 22));
}
(iyn) = (new clz());
(bvn)((iyn), (527LL), ((iut)->ne));
((iyn)->fcy) = (ixq);
uh<List_<ge*>*, ge*>(((iuw)->si), (new Array_<int64_t>(1, (0LL))), ((cad)((iyn), ((iuw)->sh), (iuw))));
(iyq) = (new eeo());
(bvn)((iyq), (515LL), ((iut)->ne));
(iys) = (new bgi());
(bvn)((iys), (2LL), ((iut)->ne));
(iyu) = (new gb());
(bvn)((iyu), (7LL), ((iut)->ne));
((iyu)->qk) = (3LL);
((iyu)->ql) = (false);
awe<List_<gb*>*>(((iux)->sg), (new Array_<int64_t>(1, (0LL))));
((iyu)->qf) = ((awi<List_<gb*>*, gb*>(((iux)->sg), (new Array_<int64_t>(1, (0LL)))))->qf);
(iyw) = (new ebn());
(bwv)((iyw), (2052LL), ((iut)->ne));
((iyw)->gso) = ((iyu)->qf);
((iyu)->qg) = (iyw);
((iys)->bgk) = (iyu);
((iyq)->eeq) = (iys);
uh<List_<ge*>*, ge*>(((iux)->si), (new Array_<int64_t>(1, (0LL))), ((cad)((iyq), ((iux)->sh), (iux))));
(iyy) = (new gd());
(bwv)((iyy), (2062LL), ((iut)->ne));
((iyy)->nj) = (((iyq)->eeq)->bgk);
((iyy)->ni) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
(iza) = (new dgu());
(bvn)((iza), (66565LL), ((iut)->ne));
((iza)->nj) = (iut);
((iyy)->pf) = (iza);
(izc) = (iut);
while(!eqAddr_((izc), (nullptr))){
(ize) = ((izc)->bag);
awe<List_<um*>*>((ize), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((ize), (new Array_<int64_t>(1, (0LL)))))){
(izg) = (awi<List_<um*>*, um*>((ize), (new Array_<int64_t>(1, (0LL)))));
if((((izg)->azl)->lw) == (2LL)){
(izj) = ((as_<bgi>(classTable_, ((izg)->azl), 38))->bgk);
(izl) = (new bwq());
(bvn)((izl), (528LL), ((iut)->ne));
(izn) = (new bzx());
(bwv)((izn), (2050LL), ((iut)->ne));
((izn)->bzy) = (0LL);
(izp) = (new ech());
(bwv)((izp), (2059LL), ((iut)->ne));
((izp)->hhr) = (nullptr);
((izp)->hdo) = (iyy);
((izp)->hhe) = ((izj)->nf);
((izn)->cab) = (izp);
(izr) = (new ebz());
(bwv)((izr), (2056LL), ((iut)->ne));
(izt) = (new gd());
(bwv)((izt), (2062LL), ((iut)->ne));
awe<List_<gb*>*>(((iux)->sg), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>(((iux)->sg), (new Array_<int64_t>(1, (0LL))));
((izt)->nj) = (awi<List_<gb*>*, gb*>(((iux)->sg), (new Array_<int64_t>(1, (0LL)))));
if(!(!eqAddr_(((izt)->nj), (nullptr)))){
throw 0xE9170000U;
}
((izr)->hbo) = (izt);
((izr)->hbt) = ((izj)->qf);
(izv) = (new gd());
(bwv)((izv), (2062LL), ((iut)->ne));
awe<List_<gb*>*>(((iux)->sg), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>(((iux)->sg), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>(((iux)->sg), (new Array_<int64_t>(1, (0LL))));
((izv)->nj) = (awi<List_<gb*>*, gb*>(((iux)->sg), (new Array_<int64_t>(1, (0LL)))));
if(!(!eqAddr_(((izv)->nj), (nullptr)))){
throw 0xE9170000U;
}
((izr)->hbu) = (izv);
((izn)->cac) = (izr);
((izl)->bxa) = (izn);
uh<List_<ge*>*, ge*>(((iux)->si), (new Array_<int64_t>(1, (0LL))), ((cad)((izl), ((iux)->sh), (iux))));
}
ays<List_<um*>*>((ize), (new Array_<int64_t>(1, (0LL))));
}
(izc) = (as_<ul>(classTable_, ((izc)->nj), 22));
}
(izx) = (new clz());
(bvn)((izx), (527LL), ((iut)->ne));
((izx)->fcy) = (iyy);
uh<List_<ge*>*, ge*>(((iux)->si), (new Array_<int64_t>(1, (0LL))), ((cad)((izx), ((iux)->sh), (iux))));
}
// isFloat
static bool gfs(gc* izy /*type*/){
return (((izy)->lw) == (1026LL)) && (((as_<bvz>(classTable_, (izy), 60))->bwa) == (1LL));
}
// isBool
static bool ggi(gc* izz /*type*/){
return (((izz)->lw) == (1026LL)) && (((as_<bvz>(classTable_, (izz), 60))->bwa) == (3LL));
}
// isComparable
static bool gji(gc* jaa /*type*/, bool jab /*lessOrGreater*/){
if((((((((((jaa)->lw) == (1025LL)) || ((bdg)((jaa)))) || ((gfs)((jaa)))) || ((err)((jaa)))) || ((cmx)((jaa)))) || ((egp)((jaa)))) || ((fjp)((jaa)))) || (((jaa)->lw) == (1028LL))){
return true;
}
if((!(jab)) && ((ggi)((jaa)))){
return true;
}
return false;
}
// cmp
static int64_t glc(Array_<char16_t>* jag /*s1*/, Array_<char16_t>* jah /*s2*/){
int64_t jai = 0; // p
(jai) = (0LL);
while(((jai) < ((jag)->Len())) && ((jai) < ((jah)->Len()))){
if(((jag)->At(jai)) != ((jah)->At(jai))){
return (((jag)->At(jai)) > ((jah)->At(jai))) ? (1LL) : ((((jag)->At(jai)) < ((jah)->At(jai))) ? (-1LL) : (0LL));
}
(jai) = ((jai) + (1LL));
}
return (((jag)->Len()) > ((jah)->Len())) ? (1LL) : ((((jag)->Len()) < ((jah)->Len())) ? (-1LL) : (0LL));
}
// bitCast
static uint64_t goj(int64_t jan /*size*/, uint64_t jao /*n*/){
int64_t jaq = 0;
switch(jan){
case 1LL:
return static_cast<uint64_t>(static_cast<uint8_t>(jao));
break;
case 2LL:
return static_cast<uint64_t>(static_cast<uint16_t>(jao));
break;
case 4LL:
return static_cast<uint64_t>(static_cast<uint32_t>(jao));
break;
case 8LL:
return jao;
if(!(false)){
throw 0xE9170000U;
}
break;
}
return 0x0000000000000000ULL;
}
// getTypeName
static Array_<char16_t>* hek(gc* jav /*type*/){
int64_t jaz = 0;
ccm* jbd = nullptr; // type2
Array_<char16_t>* jbe = nullptr; // s
bool jbf = false; // first
List_<ccn*>* jbg = nullptr; // items
ccn* jbi = nullptr; // arg
cdj* jbx = nullptr; // type2
int64_t jbz = 0;
Array_<char16_t>* jcb = nullptr; // s
cdu* jcg = nullptr; // type2
bvz* jci = nullptr; // type2
int64_t jck = 0;
if(eqAddr_((jav), (nullptr))){
return new Array_<char16_t>(0);
}
switch((jav)->lw){
case 66561LL:
return (new Array_<char16_t>(2, u'\u005B', u'\u005D'))->Cat((hek)(((as_<cce>(classTable_, (jav), 76))->ccg)));
break;
case 1025LL:
return (new Array_<char16_t>(3, u'\u0062', u'\u0069', u'\u0074'))->Cat(v<int64_t>((((as_<cci>(classTable_, (jav), 78))->ccj) * (8LL)), (new Array_<int64_t>(1, (0LL)))));
break;
case 66562LL:
(jbd) = (as_<ccm>(classTable_, (jav), 80));
(jbe) = (new Array_<char16_t>(6, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u003C', u'\u0028'));
(jbf) = (true);
(jbg) = ((jbd)->ccu);
awe<List_<ccn*>*>((jbg), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<ccn*>*>((jbg), (new Array_<int64_t>(1, (0LL)))))){
(jbi) = (awi<List_<ccn*>*, ccn*>((jbg), (new Array_<int64_t>(1, (0LL)))));
if(jbf){
(jbf) = (false);
}
else{
(jbe) = ((jbe)->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
}
if((jbi)->cde){
(jbe) = ((jbe)->Cat(new Array_<char16_t>(1, u'\u0026')));
}
(jbe) = ((jbe)->Cat((hek)(((jbi)->cdc))));
ays<List_<ccn*>*>((jbg), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_(((jbd)->ccp), (nullptr))){
(jbe) = ((jbe)->Cat(new Array_<char16_t>(2, u'\u0029', u'\u003E')));
}
else{
(jbe) = ((jbe)->Cat(((new Array_<char16_t>(3, u'\u0029', u'\u003A', u'\u0020'))->Cat((hek)(((jbd)->ccp))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
return jbe;
break;
case 66563LL:
(jbx) = (as_<cdj>(classTable_, (jav), 84));
switch((jbx)->cdm){
case 0LL:
(jcb) = (new Array_<char16_t>(5, u'\u006C', u'\u0069', u'\u0073', u'\u0074', u'\u003C'));
break;
case 1LL:
(jcb) = (new Array_<char16_t>(6, u'\u0073', u'\u0074', u'\u0061', u'\u0063', u'\u006B', u'\u003C'));
break;
case 2LL:
(jcb) = (new Array_<char16_t>(6, u'\u0071', u'\u0075', u'\u0065', u'\u0075', u'\u0065', u'\u003C'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return ((jcb)->Cat((hek)(((jbx)->cdo))))->Cat(new Array_<char16_t>(1, u'\u003E'));
break;
case 66564LL:
(jcg) = (as_<cdu>(classTable_, (jav), 86));
return ((((new Array_<char16_t>(5, u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u003C'))->Cat((hek)(((jcg)->cdv))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')))->Cat((hek)(((jcg)->cdw))))->Cat(new Array_<char16_t>(1, u'\u003E'));
break;
case 1026LL:
(jci) = (as_<bvz>(classTable_, (jav), 60));
switch((jci)->bwa){
case 0LL:
return new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074');
break;
case 1LL:
return new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074');
break;
case 2LL:
return new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072');
break;
case 3LL:
return new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66565LL:
return ((cmp_(((jav)->ni), (new Array_<char16_t>(1, u'\u0040'))) == 0) ? (((jav)->ne)->hk) : (new Array_<char16_t>(0)))->Cat((jav)->ni);
break;
case 1028LL:
return new Array_<char16_t>(9, u'\u0028', u'\u0055', u'\u004E', u'\u004B', u'\u004E', u'\u004F', u'\u0057', u'\u004E', u'\u0029');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
return new Array_<char16_t>(0);
break;
}
}
// chkBuiltinFuncType
static bool hhy(Array_<char16_t>** jct /*member*/, gc* jcu /*type*/){
int64_t jcx = 0; // kind
bool jcy = false; // found
int64_t jdc = 0;
int64_t jdz = 0;
int64_t jek = 0;
Array_<char16_t>* jfe = nullptr;
Array_<char16_t>* jfp = nullptr;
Array_<char16_t>* jgh = nullptr;
Array_<char16_t>* jgq = nullptr;
if(eqAddr_((ai), (nullptr))){
(ai) = (new Dict_<Array_<char16_t>*, int64_t>());
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0061', u'\u0062', u'\u0073')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0061', u'\u0064', u'\u0064')), (6LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064')), (1LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0064', u'\u0065', u'\u006C')), (14LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u006C', u'\u004E', u'\u0065', u'\u0078', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006E', u'\u0064', u'\u0069', u'\u0061', u'\u006E')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006C', u'\u006C')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006E', u'\u0064')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0042', u'\u0069', u'\u006E')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0053', u'\u0074', u'\u0072')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0053', u'\u0074', u'\u0072', u'\u0045', u'\u0078')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0053', u'\u0074', u'\u0072', u'\u004C', u'\u0061', u'\u0073', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0067', u'\u0065', u'\u0074')), (7LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0067', u'\u0065', u'\u0074', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0068', u'\u0065', u'\u0061', u'\u0064')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0064', u'\u0078')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0073')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006A', u'\u006F', u'\u0069', u'\u006E')), (11LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0072')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u006D', u'\u0061', u'\u0078')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u006D', u'\u0069', u'\u006E')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0078', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u006E', u'\u006F', u'\u0074')), (1LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u006F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (2LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u006F', u'\u0072')), (1LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0070', u'\u0065', u'\u0065', u'\u006B')), (9LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0070', u'\u0072', u'\u0065', u'\u0076')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0070', u'\u006C', u'\u0061', u'\u0063', u'\u0065')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0076', u'\u0065', u'\u0072', u'\u0073', u'\u0065')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0061', u'\u0072')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0068', u'\u006C')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0068', u'\u0072')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0073', u'\u0068', u'\u0075', u'\u0066', u'\u0066', u'\u006C', u'\u0065')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u0067', u'\u006E')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0073', u'\u006F', u'\u0072', u'\u0074')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0073', u'\u0070', u'\u006C', u'\u0069', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0075', u'\u0062')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u0069', u'\u006C')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0074', u'\u0065', u'\u0072', u'\u006D')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0074', u'\u0065', u'\u0072', u'\u006D', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u004B', u'\u0065', u'\u0079')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(12, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0056', u'\u0061', u'\u006C', u'\u0075', u'\u0065')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u0074', u'\u0036', u'\u0034')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0049', u'\u006E', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072')), (0LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0069', u'\u006D')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0074', u'\u0072', u'\u0069', u'\u006D', u'\u004C', u'\u0065', u'\u0066', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0074', u'\u0072', u'\u0069', u'\u006D', u'\u0052', u'\u0069', u'\u0067', u'\u0068', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0075', u'\u0070', u'\u0070', u'\u0065', u'\u0072')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0078', u'\u006F', u'\u0072')), (1LL));
}
(jcx) = (avo<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (*jct), (&jcy)));
if(!(jcy)){
return false;
}
switch(jcx){
case 0LL:
if(((((((bdg)((jcu))) || ((gfs)((jcu)))) || ((err)((jcu)))) || ((ggi)((jcu)))) || (((jcu)->lw) == (1025LL))) || ((fjp)((jcu)))){
return true;
}
break;
case 1LL:
if((((jcu)->lw) == (1025LL)) || ((cmx)((jcu)))){
return true;
}
break;
case 2LL:
if((err)((jcu))){
return true;
}
break;
case 3LL:
if(((jcu)->lw) == (1025LL)){
return true;
}
break;
case 4LL:
if(((jcu)->lw) == (66561LL)){
return true;
}
break;
case 5LL:
if((fjp)((jcu))){
return true;
}
break;
case 6LL:
if(((jcu)->lw) == (66563LL)){
switch((as_<cdj>(classTable_, (jcu), 84))->cdm){
case 0LL:
(*jct) = (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
break;
case 1LL:
(*jct) = (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'));
break;
case 2LL:
(*jct) = (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return true;
}
if(((jcu)->lw) == (66564LL)){
(*jct) = (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u0044', u'\u0069', u'\u0063', u'\u0074'));
return true;
}
break;
case 7LL:
if(((jcu)->lw) == (66563LL)){
switch((as_<cdj>(classTable_, (jcu), 84))->cdm){
case 0LL:
(*jct) = (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
break;
case 1LL:
(*jct) = (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'));
break;
case 2LL:
(*jct) = (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return true;
}
if(((jcu)->lw) == (66564LL)){
(*jct) = (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u0044', u'\u0069', u'\u0063', u'\u0074'));
return true;
}
break;
case 8LL:
if((((jcu)->lw) == (66563LL)) && (((as_<cdj>(classTable_, (jcu), 84))->cdm) == (0LL))){
return true;
}
break;
case 9LL:
if(((jcu)->lw) == (66563LL)){
if(((as_<cdj>(classTable_, (jcu), 84))->cdm) == (1LL)){
(*jct) = (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'));
return true;
}
else if(((as_<cdj>(classTable_, (jcu), 84))->cdm) == (2LL)){
(*jct) = (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'));
return true;
}
}
break;
case 10LL:
if((bdg)((jcu))){
jfe = *jct;
if(cmp_(jfe, (new Array_<char16_t>(3, u'\u0061', u'\u0062', u'\u0073'))) == 0){
(*jct) = (new Array_<char16_t>(6, u'\u0061', u'\u0062', u'\u0073', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jfe, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070'))) == 0){
(*jct) = (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jfe, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E'))) == 0){
(*jct) = (new Array_<char16_t>(11, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jfe, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078'))) == 0){
(*jct) = (new Array_<char16_t>(11, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jfe, (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u0067', u'\u006E'))) == 0){
(*jct) = (new Array_<char16_t>(7, u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jfe, (new Array_<char16_t>(8, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074'))) == 0){
(*jct) = (new Array_<char16_t>(11, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074', u'\u0049', u'\u006E', u'\u0074'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
if((gfs)((jcu))){
jfp = *jct;
if(cmp_(jfp, (new Array_<char16_t>(3, u'\u0061', u'\u0062', u'\u0073'))) == 0){
(*jct) = (new Array_<char16_t>(8, u'\u0061', u'\u0062', u'\u0073', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jfp, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070'))) == 0){
(*jct) = (new Array_<char16_t>(10, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jfp, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E'))) == 0){
(*jct) = (new Array_<char16_t>(13, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jfp, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078'))) == 0){
(*jct) = (new Array_<char16_t>(13, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jfp, (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u0067', u'\u006E'))) == 0){
(*jct) = (new Array_<char16_t>(9, u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jfp, (new Array_<char16_t>(8, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074'))) == 0){
(*jct) = (new Array_<char16_t>(13, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
break;
case 11LL:
if((((jcu)->lw) == (66561LL)) && ((fjp)(((as_<cce>(classTable_, (jcu), 76))->ccg)))){
return true;
}
break;
case 12LL:
if(((jcu)->lw) == (66564LL)){
return true;
}
break;
case 13LL:
if(((jcu)->lw) == (66561LL)){
jgh = *jct;
if(cmp_(jgh, (new Array_<char16_t>(4, u'\u0073', u'\u006F', u'\u0072', u'\u0074'))) == 0){
(*jct) = (new Array_<char16_t>(9, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else if(cmp_(jgh, (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063'))) == 0){
(*jct) = (new Array_<char16_t>(13, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else if(cmp_(jgh, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006E', u'\u0064'))) == 0){
(*jct) = (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else if(cmp_(jgh, (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074'))) == 0){
(*jct) = (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
if((((jcu)->lw) == (66563LL)) && (((as_<cdj>(classTable_, (jcu), 84))->cdm) == (0LL))){
jgq = *jct;
if(cmp_(jgq, (new Array_<char16_t>(4, u'\u0073', u'\u006F', u'\u0072', u'\u0074'))) == 0){
(*jct) = (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else if(cmp_(jgq, (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063'))) == 0){
(*jct) = (new Array_<char16_t>(12, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else if(cmp_(jgq, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006E', u'\u0064'))) == 0){
(*jct) = (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else if(cmp_(jgq, (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074'))) == 0){
(*jct) = (new Array_<char16_t>(12, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
break;
case 14LL:
if((((jcu)->lw) == (66563LL)) && (((as_<cdj>(classTable_, (jcu), 84))->cdm) == (0LL))){
return true;
}
if(((jcu)->lw) == (66564LL)){
(*jct) = (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u006C', u'\u0044', u'\u0069', u'\u0063', u'\u0074'));
return true;
}
break;
}
return false;
}
// cacheSubExpr
static gd* hzs(List_<ge*>* jhb /*stats*/, gd* jhc /*ast*/, ga* jhd /*pos*/){
gd* jhi = nullptr; // ref
gb* jhk = nullptr; // arg
bwq* jhm = nullptr; // do_
bzx* jho = nullptr; // exprAssign
if(eqAddr_((jhc), (nullptr))){
return nullptr;
}
if((((jhc)->lw) == (2062LL)) || ((aye<int64_t>(((jhc)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
return jhc;
}
(jhi) = (new gd());
(bwv)((jhi), (2062LL), (jhd));
((jhi)->ni) = (new Array_<char16_t>(1, u'\u0024'));
((jhi)->pj) = (2LL);
((jhi)->nk) = (jhi);
(jhk) = (new gb());
(bvn)((jhk), (7LL), (jhd));
((jhk)->qk) = (3LL);
((jhk)->ql) = (false);
((jhk)->qf) = ((jhc)->pf);
((jhk)->qg) = (nullptr);
((jhk)->nk) = (jhk);
((jhi)->nj) = (jhk);
((jhi)->pf) = ((jhk)->qf);
(jhm) = (new bwq());
(bvn)((jhm), (528LL), (jhd));
(jho) = (new bzx());
(bwv)((jho), (2050LL), (jhd));
((jho)->bzy) = (0LL);
((jho)->cab) = (jhi);
((jho)->cac) = (jhc);
((jhm)->bxa) = (jho);
uh<List_<ge*>*, ge*>((jhb), (new Array_<int64_t>(1, (0LL))), ((egd)((jhm))));
return jhi;
}
// buildExpr1
static void icd(ebf* jhp /*ast*/){
int64_t jhr = 0;
if(!(((jhp)->pj) != (0LL))){
throw 0xE9170000U;
}
switch((jhp)->gfp){
case 0LL:
(eou)(((jhp)->gfj));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002D', u'\u0028')));
(eou)(((jhp)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0021', u'\u0028')));
(eou)(((jhp)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 3LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u005F', u'\u0028')));
(eou)(((jhp)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 4LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhp)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002D', u'\u003E', u'\u004C', u'\u0065', u'\u006E', u'\u0028', u'\u0029')));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr2
static void icf(bzx* jhy /*ast*/){
gc* jhz = nullptr; // type
int64_t jib = 0;
Array_<char16_t>* jjt = nullptr; // tmpVar
if(!(((jhy)->pj) != (0LL))){
throw 0xE9170000U;
}
(jhz) = (((jhy)->cab)->pf);
switch((jhy)->bzy){
case 0LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003D', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 8LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u007C', u'\u007C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 9LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 10LL:
if((caf)((jhz))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0029', u'\u0020', u'\u003C', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 11LL:
if((caf)((jhz))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 12LL:
if((caf)((jhz))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 13LL:
if((caf)((jhz))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 14LL:
if((caf)((jhz))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 15LL:
if((caf)((jhz))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u0021', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u0021', u'\u003D', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 16LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0065', u'\u0071', u'\u0041', u'\u0064', u'\u0064', u'\u0072', u'\u005F', u'\u0028', u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 17LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0021', u'\u0065', u'\u0071', u'\u0041', u'\u0064', u'\u0064', u'\u0072', u'\u005F', u'\u0028', u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 18LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u002D', u'\u003E', u'\u0043', u'\u0061', u'\u0074', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 19LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002B', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 20LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002D', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 21LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002A', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 22LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002F', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 23LL:
if(((bdg)((jhz))) || ((aye<int64_t>(((jhz)->lw), (new Array_<int64_t>(1, (0LL))), (1025LL))) == (1025LL))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u0025', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
if(!((gfs)((jhz)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0066', u'\u006D', u'\u006F', u'\u0064', u'\u0028', u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
break;
case 24LL:
if(((bdg)((jhz))) || ((aye<int64_t>(((jhz)->lw), (new Array_<int64_t>(1, (0LL))), (1025LL))) == (1025LL))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0070', u'\u006F', u'\u0077', u'\u0049', u'\u005F', u'\u0028', u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
else{
if(!((gfs)((jhz)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0070', u'\u006F', u'\u0077', u'\u0028', u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
break;
case 25LL:
(jjt) = ((eyq)((jhz)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((jjt), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0020', u'\u003D', u'\u0020', u'\u0028'))));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003D', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jhy)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003D', u'\u0020', u'\u0028'))->Cat(v<Array_<char16_t>*>((jjt), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr3
static void ich(ebk* jjv /*ast*/){
if(!(((jjv)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jjv)->gqn));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003F', u'\u0020', u'\u0028')));
(eou)(((jjv)->gqq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003A', u'\u0020', u'\u0028')));
(eou)(((jjv)->gqt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprNew
static void icj(ebn* jjw /*ast*/){
ul* jjz = nullptr; // class_
Array_<char16_t>* jka = nullptr; // id
cdj* jke = nullptr; // gen
int64_t jkg = 0;
cdu* jkm = nullptr; // dict_
if(!(((jjw)->pj) != (0LL))){
throw 0xE9170000U;
}
if((egp)(((jjw)->gso))){
(jjz) = (as_<ul>(classTable_, (((jjw)->gso)->nj), 22));
(jka) = ((bfo)((jjz)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0077', u'\u0020'))->Cat(v<Array_<char16_t>*>((jka), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))));
}
else{
if((((jjw)->gso)->lw) == (66563LL)){
(jke) = (as_<cdj>(classTable_, ((jjw)->gso), 84));
switch((jke)->cdm){
case 0LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jke)->cdo))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029'))));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jke)->cdo))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029'))));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jke)->cdo))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((((jjw)->gso)->lw) == (66564LL))){
throw 0xE9170000U;
}
(jkm) = (as_<cdu>(classTable_, ((jjw)->gso), 86));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0044', u'\u0069', u'\u0063', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jkm)->cdv))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((jkm)->cdw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029')))));
}
}
}
// buildExprNewArray
static void icl(ebq* jkn /*ast*/){
List_<gd*>* jkp = nullptr; // items
if(!(((jkn)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jkn)->gui))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((jkn)->pf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003E', u'\u0028'))->Cat(v<int64_t>((((jkn)->gtz)->Len()), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
(jkp) = ((jkn)->gtz);
awe<List_<gd*>*>((jkp), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((jkp), (new Array_<int64_t>(1, (0LL)))))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028')));
(eou)((awi<List_<gd*>*, gd*>((jkp), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((jkp), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprAs
static void icn(ebt* jkr /*ast*/){
int64_t jkt = 0;
gc* jkv = nullptr; // t1
gc* jkw = nullptr; // t2
Array_<char16_t>* jkz = nullptr; // id
bby* jla = nullptr; // info
bby* jld = nullptr; // info
bby* jlf = nullptr; // info
if(!(((jkr)->pj) != (0LL))){
throw 0xE9170000U;
}
switch((jkr)->gwe){
case 0LL:
(jkv) = (((jkr)->gvw)->pf);
(jkw) = ((jkr)->gvz);
if((egp)((jkv))){
if(!((egp)((jkw)))){
throw 0xE9170000U;
}
(jkz) = ((bfo)((as_<ul>(classTable_, ((jkw)->nj), 22))));
(jla) = ((bbx)(((jkw)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0061', u'\u0073', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>((jkz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u003E', u'\u0028', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u002C', u'\u0020', u'\u0028'))));
(eou)(((jkr)->gvw));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<int64_t>((((jla)->bft) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jkr)->gvz))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u0028'))));
(eou)(((jkr)->gvw));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 1LL:
(bfo)((as_<ul>(classTable_, (((jkr)->gvz)->nj), 22)));
(jld) = ((bbx)((((jkr)->gvz)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(18, u'\u0069', u'\u0073', u'\u005F', u'\u0028', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jkr)->gvw));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<int64_t>((((jld)->bft) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
case 2LL:
(bfo)((as_<ul>(classTable_, (((jkr)->gvz)->nj), 22)));
(jlf) = ((bbx)((((jkr)->gvz)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(19, u'\u0021', u'\u0069', u'\u0073', u'\u005F', u'\u0028', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jkr)->gvw));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<int64_t>((((jlf)->bft) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExprToBin
static void icp(ebw* jlh /*ast*/){
if(!(((jlh)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u0028')));
(eou)(((jlh)->had));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprFromBin
static void icr(ebz* jli /*ast*/){
if(!(((jli)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jli)->hbt))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0028'))));
(eou)(((jli)->hbo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(eou)(((jli)->hbu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
// buildExprCall
static void ict(bwt* jlj /*ast*/){
ccm* jlk = nullptr; // funcType
Array_<char16_t>* jll = nullptr; // template
List_<bwu*>* jlo = nullptr; // items
gc* jlp = nullptr; // meType
bool jmq = false; // first
List_<bwu*>* jmr = nullptr; // items
bwu* jmt = nullptr; // item
gc* jna = nullptr; // type
if(!(((jlj)->pj) != (0LL))){
throw 0xE9170000U;
}
(jlk) = (as_<ccm>(classTable_, (((jlj)->bwz)->pf), 80));
(jll) = (nullptr);
if((!eqAddr_((jlk), (nullptr))) && ((aye<int64_t>(((jlk)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL))){
(jlo) = ((jlj)->bww);
awe<List_<bwu*>*>((jlo), (new Array_<int64_t>(1, (0LL))));
(jlp) = (((awi<List_<bwu*>*, bwu*>((jlo), (new Array_<int64_t>(1, (0LL)))))->byi)->pf);
if((aye<int64_t>(((jlk)->elm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)){
(jll) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)((jlp))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cdu>(classTable_, (jlp), 86))->cdv))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cdu>(classTable_, (jlp), 86))->cdw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E')))));
}
else if((aye<int64_t>(((jlk)->elm), (new Array_<int64_t>(1, (0LL))), (8LL))) == (8LL)){
if((aye<int64_t>(((jlk)->elm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(jll) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)((jlp))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
if(((jlp)->lw) == (66563LL)){
(jll) = ((jll)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cdj>(classTable_, (jlp), 84))->cdo))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020'))));
}
else{
if(!(((jlp)->lw) == (66564LL))){
throw 0xE9170000U;
}
(jll) = ((jll)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cdu>(classTable_, (jlp), 86))->cdv))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020'))));
}
(jll) = ((jll)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((jlk)->ccp))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else{
(jll) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)((jlp))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
if(((jlp)->lw) == (66561LL)){
(jll) = ((jll)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cce>(classTable_, (jlp), 76))->ccg))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else if(((jlp)->lw) == (66563LL)){
(jll) = ((jll)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cdj>(classTable_, (jlp), 84))->cdo))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else{
if(!(((jlp)->lw) == (66564LL))){
throw 0xE9170000U;
}
(jll) = ((jll)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cdu>(classTable_, (jlp), 86))->cdv))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
}
}
else if((aye<int64_t>(((jlk)->elm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(jll) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)((jlp))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((jlk)->ccp))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else if((aye<int64_t>(((jlk)->elm), (new Array_<int64_t>(1, (0LL))), (256LL))) == (256LL)){
(jll) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)((jlp))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cdu>(classTable_, (jlp), 86))->cdv))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cdu>(classTable_, (jlp), 86))->cdw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E')))));
}
else{
(jll) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)((jlp))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E')));
}
}
if(eqAddr_((jll), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jlj)->bwz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
(eou)(((jlj)->bwz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (jll));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(jmq) = (true);
(jmr) = ((jlj)->bww);
awe<List_<bwu*>*>((jmr), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bwu*>*>((jmr), (new Array_<int64_t>(1, (0LL)))))){
(jmt) = (awi<List_<bwu*>*, bwu*>((jmr), (new Array_<int64_t>(1, (0LL)))));
if(jmq){
(jmq) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028')));
}
if((jmt)->bye){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0026')));
}
(eou)(((jmt)->byi));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<bwu*>*>((jmr), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
(jna) = ((jlj)->pf);
if(!eqAddr_((jna), (nullptr))){
if((egp)((jna))){
(bfo)((as_<ul>(classTable_, ((jna)->nj), 22)));
}
}
}
// buildExprArray
static void icv(ece* jnf /*ast*/){
if(!(((jnf)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jnf)->hfg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002D', u'\u003E', u'\u0041', u'\u0074', u'\u0028')));
(eou)(((jnf)->hfl));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprDot
static void icx(ech* jng /*ast*/){
um* jnj = nullptr; // classItem
bby* jnm = nullptr; // info
if(!(((jng)->pj) != (0LL))){
throw 0xE9170000U;
}
if((egp)((((jng)->hdo)->pf))){
(jnj) = ((jng)->hhr);
if(!(!eqAddr_((jnj), (nullptr)))){
throw 0xE9170000U;
}
(bfo)((as_<ul>(classTable_, ((((jng)->hdo)->pf)->nj), 22)));
if((((jnj)->azl)->lw) == (2LL)){
(jnm) = ((bbx)(((as_<bgi>(classTable_, ((jnj)->azl), 38))->bgk)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(eou)(((jng)->hdo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((jnm)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
else{
if(!((((jnj)->azl)->lw) == (256LL))){
throw 0xE9170000U;
}
(jnm) = ((bbx)(((jnj)->azl)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((jnm)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
}
else{
if(!((((jng)->nj)->lw) == (2062LL))){
throw 0xE9170000U;
}
(idj)((as_<gd>(classTable_, ((jng)->nj), 14)));
}
}
// buildExprValue
static void icz(bxm* jnp /*ast*/){
if(!((((jnp)->pf)->lw) == (1027LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072')));
}
// buildExprValuePrim
static void idb(bxl* jnq /*ast*/){
gc* jnr = nullptr; // type
int64_t jny = 0;
(jnr) = ((jnq)->pf);
if(((bdg)((jnr))) || ((cmx)((jnr)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((v<int64_t>((static_cast<int64_t>((jnq)->bxn)), (new Array_<int64_t>(1, (0LL)))))->Cat(new Array_<char16_t>(2, u'\u004C', u'\u004C'))));
}
else if((err)((jnr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0075', u'\u0027', u'\u005C', u'\u0075'))->Cat(v<Array_<char16_t>*>((auw<Array_<char16_t>*>((v<uint16_t>((static_cast<uint16_t>((jnq)->bxn)), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))), (2LL), (-1LL))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0027'))));
}
else if((ggi)((jnr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((((jnq)->bxn) == (0x0000000000000000ULL)) ? (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')) : (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))));
}
else if(((jnr)->lw) == (1025LL)){
switch((as_<cci>(classTable_, (jnr), 78))->ccj){
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(21, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0038', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<uint8_t>((static_cast<uint8_t>((jnq)->bxn)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0055', u'\u0029'))));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<uint16_t>((static_cast<uint16_t>((jnq)->bxn)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0055', u'\u0029'))));
break;
case 4LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<uint32_t>((static_cast<uint32_t>((jnq)->bxn)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0055'))));
break;
case 8LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<uint64_t>(((jnq)->bxn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0055', u'\u004C', u'\u004C'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!(false)){
throw 0xE9170000U;
}
}
}
// buildExprValueStr
static void idd(eco* jof /*ast*/){
Array_<char16_t>* jog = nullptr; // value
Array_<char16_t>* joh = nullptr; // s
int64_t jol = 0;
int64_t jom = 0;
(jog) = ((jof)->gld);
(joh) = (((new Array_<char16_t>(21, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<int64_t>(((jog)->Len()), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0)));
for(jol = (0LL), jom = (((jog)->Len()) - (1LL)); jol <= jom; jol += (1LL)){
(joh) = ((joh)->Cat(((new Array_<char16_t>(6, u'\u002C', u'\u0020', u'\u0075', u'\u0027', u'\u005C', u'\u0075'))->Cat(v<Array_<char16_t>*>((auw<Array_<char16_t>*>((v<uint16_t>((static_cast<uint16_t>((jog)->At(jol))), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))), (2LL), (-1LL))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0027'))));
}
(joh) = ((joh)->Cat(new Array_<char16_t>(1, u'\u0029')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (joh));
}
// buildExprValueFloat
static void idf(ecu* jop /*ast*/){
Array_<char16_t>* joq = nullptr; // value
(joq) = (v<double>(((jop)->ggf), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((joq), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(39, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0069', u'\u0063', u'\u005F', u'\u006C', u'\u0069', u'\u006D', u'\u0069', u'\u0074', u'\u0073', u'\u003C', u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065', u'\u003E', u'\u003A', u'\u003A', u'\u0069', u'\u006E', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0079', u'\u0028', u'\u0029')));
}
else if((awn<Array_<char16_t>*, char16_t>((joq), (new Array_<int64_t>(1, (0LL))), (u'\u002E'), (-1LL))) == (-1LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((joq)->Cat(new Array_<char16_t>(2, u'\u002E', u'\u0030'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (joq));
}
}
// buildExprValueArray
static void idh(ecx* jov /*ast*/){
List_<gd*>* jow = nullptr; // items
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cce>(classTable_, ((jov)->pf), 76))->ccg))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003E', u'\u0028'))->Cat(v<int64_t>((((jov)->hdx)->Len()), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0)))));
(jow) = ((jov)->hdx);
awe<List_<gd*>*>((jow), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((jow), (new Array_<int64_t>(1, (0LL)))))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028')));
(eou)((awi<List_<gd*>*, gd*>((jow), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((jow), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprRef
static void idj(gd* joy /*ast*/){
fx* joz = nullptr; // ast2
bby* jpa = nullptr; // info
gb* jpe = nullptr; // arg
int64_t jpg = 0;
(joz) = ((joy)->nj);
(jpa) = ((bbx)((joz)));
if(((joz)->lw) == (256LL)){
uk<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL))), (as_<fw>(classTable_, (joz), 8)));
}
else{
if(!(((joz)->lw) == (7LL))){
throw 0xE9170000U;
}
(jpe) = (as_<gb>(classTable_, (joz), 10));
switch((jpe)->qk){
case 1LL:
if(!((jpa)->bca)){
((jpa)->bca) = (true);
uh<List_<gb*>*, gb*>((ar), (new Array_<int64_t>(1, (0LL))), (jpe));
}
break;
case 2LL:
break;
case 3LL:
if(!((jpa)->bca)){
((jpa)->bca) = (true);
uh<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), (jpe));
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if((jpe)->ql){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u002A')));
}
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((jpa)->bdy));
}
// buildExpr1
static void ids(ebf* jpr /*ast*/){
int64_t jpt = 0;
Array_<char16_t>* jpy = nullptr; // typeId
gc* jqb = nullptr; // type
int64_t jqf = 0;
if(!(((jpr)->pj) != (0LL))){
throw 0xE9170000U;
}
switch((jpr)->gfp){
case 0LL:
(fhj)(((jpr)->gfj));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002D', u'\u0028')));
(fhj)(((jpr)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0021', u'\u0028')));
(fhj)(((jpr)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 3LL:
(jpy) = ((jpz)((((jpr)->gfj)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0043', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>((jpy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0028'))));
(fhj)(((jpr)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 4LL:
(jqb) = (((jpr)->gfj)->pf);
if(((jqb)->lw) == (66563LL)){
switch((as_<cdj>(classTable_, (jqb), 84))->cdm){
case 0LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jpr)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u004C')));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jpr)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jpr)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if(((jqb)->lw) == (66564LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jpr)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065')));
}
else{
if(!(((jqb)->lw) == (66561LL))){
throw 0xE9170000U;
}
if((err)(((as_<cce>(classTable_, (jqb), 76))->ccg))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jpr)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jpr)->gfj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
}
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr2
static void idu(bzx* jqq /*ast*/){
gc* jqr = nullptr; // type
int64_t jqt = 0;
ece* jqx = nullptr; // ast2
Array_<char16_t>* jqy = nullptr; // tmpIdx
Array_<char16_t>* jqz = nullptr; // tmpChar
Array_<char16_t>* jsz = nullptr; // tmpVar
if(!(((jqq)->pj) != (0LL))){
throw 0xE9170000U;
}
(jqr) = (((jqq)->cab)->pf);
switch((jqq)->bzy){
case 0LL:
if(((((jqq)->cab)->lw) == (2058LL)) && ((err)(((as_<ece>(classTable_, ((jqq)->cab), 124))->pf)))){
(jqx) = (as_<ece>(classTable_, ((jqq)->cab), 124));
(jqy) = ((fkq)((((jqx)->hfl)->pf)));
(jqz) = ((fkq)(((jqx)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqx)->hfg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u003D', u'\u0028'))->Cat(v<Array_<char16_t>*>((jqy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(fhj)(((jqx)->hfl));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhj)(((jqx)->hfg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0030', u'\u002C'))->Cat(v<Array_<char16_t>*>((jqy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u0029', u'\u002B', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002B', u'\u0028')));
(fhj)(((jqx)->hfg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>((jqy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002B', u'\u0031', u'\u0029', u'\u0029'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 8LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u007C', u'\u007C', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 9LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0026', u'\u0026', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 10LL:
if((fjp)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u003C', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((caf)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u003C', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003C', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 11LL:
if((fjp)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u003E', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((caf)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u003E', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003E', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 12LL:
if((fjp)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002E', u'\u0053', u'\u003C', u'\u003D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((caf)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003C', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u003C', u'\u003D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 13LL:
if((fjp)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002E', u'\u0053', u'\u003E', u'\u003D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((caf)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003E', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u003E', u'\u003D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 14LL:
if((fjp)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u002E', u'\u0053', u'\u003D', u'\u003D', u'\u003D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((caf)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003D', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 15LL:
if((fjp)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u002E', u'\u0053', u'\u0021', u'\u003D', u'\u003D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((caf)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u0021', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0021', u'\u003D', u'\u003D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 16LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 17LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0021', u'\u003D', u'\u003D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 18LL:
if((fjp)((jqr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u007B', u'\u0053', u'\u003A', u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u002B', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002E', u'\u0053', u'\u007D')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0029', u'\u002E', u'\u0063', u'\u006F', u'\u006E', u'\u0063', u'\u0061', u'\u0074', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 19LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002B', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 20LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 21LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002A', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 22LL:
if(!((gfs)((jqr)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u007E', u'\u007E', u'\u0028')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002F', u'\u0028')));
(fhj)(((jqq)->cac));
if(!((gfs)((jqr)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 23LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u0025', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 24LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002A', u'\u002A', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 25LL:
(jsz) = ((fkq)((jqr)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((jsz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhj)(((jqq)->cab));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003D', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhj)(((jqq)->cac));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003D', u'\u0028'))->Cat(v<Array_<char16_t>*>((jsz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr3
static void idw(ebk* jtb /*ast*/){
if(!(((jtb)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jtb)->gqn));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003F', u'\u0028')));
(fhj)(((jtb)->gqq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003A', u'\u0028')));
(fhj)(((jtb)->gqt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprNew
static void idy(ebn* jtc /*ast*/){
ul* jtf = nullptr; // class_
Array_<char16_t>* jtg = nullptr; // id
cdj* jtk = nullptr; // gen
int64_t jtm = 0;
if(!(((jtc)->pj) != (0LL))){
throw 0xE9170000U;
}
if((egp)(((jtc)->gso))){
(jtf) = (as_<ul>(classTable_, (((jtc)->gso)->nj), 22));
(jtg) = ((bkx)((jtf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0077', u'\u0020'))->Cat(v<Array_<char16_t>*>((jtg), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))));
}
else{
if((((jtc)->gso)->lw) == (66563LL)){
(jtk) = (as_<cdj>(classTable_, ((jtc)->gso), 84));
switch((jtk)->cdm){
case 0LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(26, u'\u007B', u'\u004C', u'\u003A', u'\u0030', u'\u002C', u'\u0048', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0054', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0050', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u007D')));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005B', u'\u005D')));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005B', u'\u005D')));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((((jtc)->gso)->lw) == (66564LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u004D', u'\u0061', u'\u0070', u'\u0028', u'\u0029')));
}
}
}
// buildExprNewArray
static void iea(ebq* jts /*ast*/){
List_<gd*>* jtu = nullptr; // items
bool jua = false; // first
bool juj = false; // first
if(!(((jts)->pj) != (0LL))){
throw 0xE9170000U;
}
(jtu) = ((jts)->gtz);
awe<List_<gd*>*>((jtu), (new Array_<int64_t>(1, (0LL))));
if((err)(((jts)->gui))){
if(((jtu)->Len()) == (1LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u005C', u'\u0030', u'\u0022', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074', u'\u0028')));
(fhj)((awi<List_<gd*>*, gd*>((jtu), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u007D')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(53, u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0041', u'\u005F', u'\u0028', u'\u006E', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u006E', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003D', u'\u003D', u'\u003D', u'\u0031', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u005C', u'\u0030', u'\u0022', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((bkp)(((jts)->gui))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(86, u'\u0029', u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u002C', u'\u006D', u'\u003D', u'\u006E', u'\u002E', u'\u0073', u'\u0068', u'\u0069', u'\u0066', u'\u0074', u'\u0028', u'\u0029', u'\u002C', u'\u0069', u'\u003B', u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0061', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0041', u'\u005F', u'\u0028', u'\u006D', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u007D', u'\u007D', u'\u0029', u'\u0028', u'\u005B'))));
(jua) = (true);
while(!(awg<List_<gd*>*>((jtu), (new Array_<int64_t>(1, (0LL)))))){
if(jua){
(jua) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(fhj)((awi<List_<gd*>*, gd*>((jtu), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((jtu), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005D', u'\u0029')));
}
}
else{
if(((jtu)->Len()) == (1LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028')));
(fhj)((awi<List_<gd*>*, gd*>((jtu), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0029', u'\u002E', u'\u0066', u'\u0069', u'\u006C', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((bkp)(((jts)->gui))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(60, u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0041', u'\u005F', u'\u0028', u'\u006E', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u006E', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003D', u'\u003D', u'\u003D', u'\u0031', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u002E', u'\u0066', u'\u0069', u'\u006C', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((bkp)(((jts)->gui))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(85, u'\u0029', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u002C', u'\u006D', u'\u003D', u'\u006E', u'\u002E', u'\u0073', u'\u0068', u'\u0069', u'\u0066', u'\u0074', u'\u0028', u'\u0029', u'\u002C', u'\u0069', u'\u003B', u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0061', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0041', u'\u005F', u'\u0028', u'\u006D', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u007D', u'\u007D', u'\u0029', u'\u0028', u'\u005B'))));
(juj) = (true);
while(!(awg<List_<gd*>*>((jtu), (new Array_<int64_t>(1, (0LL)))))){
if(juj){
(juj) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(fhj)((awi<List_<gd*>*, gd*>((jtu), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((jtu), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005D', u'\u0029')));
}
}
}
// buildExprAs
static void iec(ebt* juo /*ast*/){
int64_t juq = 0;
gc* jus = nullptr; // t1
gc* jut = nullptr; // t2
bix* jvl = nullptr; // info
bix* jvn = nullptr; // info
if(!(((juo)->pj) != (0LL))){
throw 0xE9170000U;
}
switch((juo)->gwe){
case 0LL:
(jus) = (((juo)->gvw)->pf);
(jut) = ((juo)->gvz);
if((egp)((jus))){
if(!((egp)((jut)))){
throw 0xE9170000U;
}
(bkx)((as_<ul>(classTable_, ((jut)->nj), 22)));
(fhj)(((juo)->gvw));
}
else{
if((((((jus)->lw) == (1025LL)) || ((bdg)((jus)))) || ((err)((jus)))) || ((cmx)((jus)))){
if(((((((jut)->lw) == (1025LL)) || ((bdg)((jut)))) || ((err)((jut)))) || ((cmx)((jut)))) || ((gfs)((jut)))){
(fhj)(((juo)->gvw));
}
else{
if(!((ggi)((jut)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((juo)->gvw));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0021', u'\u003D', u'\u0030')));
}
}
else if((gfs)((jus))){
if((((jut)->lw) == (1025LL)) || ((bdg)((jut)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u007E', u'\u007E', u'\u0028')));
(fhj)(((juo)->gvw));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
if(!((gfs)((jut)))){
throw 0xE9170000U;
}
(fhj)(((juo)->gvw));
}
}
else{
if(!((ggi)((jus)))){
throw 0xE9170000U;
}
if((((jut)->lw) == (1025LL)) || ((bdg)((jut)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((juo)->gvw));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u003F', u'\u0031', u'\u003A', u'\u0030')));
}
else{
if(!((ggi)((jut)))){
throw 0xE9170000U;
}
(fhj)(((juo)->gvw));
}
}
}
break;
case 1LL:
(bkx)((as_<ul>(classTable_, (((juo)->gvz)->nj), 22)));
(jvl) = ((biw)((((juo)->gvz)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((juo)->gvw));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0029', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0063', u'\u0065', u'\u006F', u'\u0066', u'\u0020'))->Cat(v<Array_<char16_t>*>(((jvl)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
break;
case 2LL:
(bkx)((as_<ul>(classTable_, (((juo)->gvz)->nj), 22)));
(jvn) = ((biw)((((juo)->gvz)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0021', u'\u0028', u'\u0028')));
(fhj)(((juo)->gvw));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0029', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0063', u'\u0065', u'\u006F', u'\u0066', u'\u0020'))->Cat(v<Array_<char16_t>*>(((jvn)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExprToBin
static void iee(ebw* jvp /*ast*/){
if(!(((jvp)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u0028')));
(fhj)(((jvp)->had));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprFromBin
static void ieg(ebz* jvq /*ast*/){
if(!(((jvq)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u0028', u'\u0028')));
(fhj)(((jvq)->hbo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhj)(((jvq)->hbu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
// buildExprCall
static void iei(bwt* jvr /*ast*/){
ccm* jvs = nullptr; // funcType
Array_<char16_t>* jvt = nullptr; // meTypeId
List_<bwu*>* jvw = nullptr; // items
int64_t jvx = 0; // refNum
List_<bwu*>* jvz = nullptr; // items
Array_<char16_t>* jwe = nullptr; // resultVar
Array_<Array_<char16_t>*>* jwf = nullptr; // refVar
int64_t jwl = 0; // idx
int64_t jwm = 0; // refCnt
bool jwn = false; // first
List_<bwu*>* jwo = nullptr; // items
bwu* jwq = nullptr; // item
int64_t jxd = 0; // idx
int64_t jxe = 0; // refCnt
List_<bwu*>* jxf = nullptr; // items
bwu* jxh = nullptr; // item
gc* jxq = nullptr; // type
if(!(((jvr)->pj) != (0LL))){
throw 0xE9170000U;
}
(jvs) = (as_<ccm>(classTable_, (((jvr)->bwz)->pf), 80));
(jvt) = (nullptr);
if((!eqAddr_((jvs), (nullptr))) && ((aye<int64_t>(((jvs)->elm), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL))){
(jvw) = ((jvr)->bww);
awe<List_<bwu*>*>((jvw), (new Array_<int64_t>(1, (0LL))));
(jvt) = ((jpz)((((awi<List_<bwu*>*, bwu*>((jvw), (new Array_<int64_t>(1, (0LL)))))->byi)->pf)));
}
(jvx) = (0LL);
(jvz) = ((jvr)->bww);
awe<List_<bwu*>*>((jvz), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bwu*>*>((jvz), (new Array_<int64_t>(1, (0LL)))))){
if((awi<List_<bwu*>*, bwu*>((jvz), (new Array_<int64_t>(1, (0LL)))))->bye){
(jvx) = ((jvx) + (1LL));
}
ays<List_<bwu*>*>((jvz), (new Array_<int64_t>(1, (0LL))));
}
(jwe) = (nullptr);
(jwf) = (nullptr);
if((jvx) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
if(!eqAddr_(((jvr)->pf), (nullptr))){
(jwe) = ((fkq)(((jvr)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((jwe), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003D'))));
}
(jwf) = (newArray_<Array_<char16_t>*, Array_<Array_<char16_t>*>*>(1, (jvx)));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jvr)->bwz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0028')));
(jwl) = (0LL);
(jwm) = (0LL);
(jwn) = (true);
(jwo) = ((jvr)->bww);
awe<List_<bwu*>*>((jwo), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bwu*>*>((jwo), (new Array_<int64_t>(1, (0LL)))))){
(jwq) = (awi<List_<bwu*>*, bwu*>((jwo), (new Array_<int64_t>(1, (0LL)))));
if(jwn){
(jwn) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
if((!eqAddr_((jvt), (nullptr))) && ((jwl) == (1LL))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (jvt));
}
else if((jwq)->bye){
((jwf)->At(jwm)) = ((fkq)((((jwq)->byi)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((jwf)->At(jwm)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u003D', u'\u007B', u'\u0024', u'\u003A', u'\u0028'))));
(fhj)(((jwq)->byi));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u007D', u'\u002C'))->Cat(v<Array_<char16_t>*>(((jwf)->At(jwm)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
(jwm) = ((jwm) + (1LL));
}
else{
(fhj)(((jwq)->byi));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
(jwl) = ((jwl) + (1LL));
ays<List_<bwu*>*>((jwo), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
if((jvx) > (0LL)){
(jxd) = (0LL);
(jxe) = (0LL);
(jxf) = ((jvr)->bww);
awe<List_<bwu*>*>((jxf), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bwu*>*>((jxf), (new Array_<int64_t>(1, (0LL)))))){
(jxh) = (awi<List_<bwu*>*, bwu*>((jxf), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((jvt), (nullptr))) && ((jxd) == (1LL))){
}
else if((jxh)->bye){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
(fhj)(((jxh)->byi));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u003D'))->Cat(v<Array_<char16_t>*>(((jwf)->At(jxe)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002E', u'\u0024'))));
(jxe) = ((jxe) + (1LL));
}
(jxd) = ((jxd) + (1LL));
ays<List_<bwu*>*>((jxf), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((jvr)->pf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>((jwe), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
(jxq) = ((jvr)->pf);
if(!eqAddr_((jxq), (nullptr))){
if((egp)((jxq))){
(bkx)((as_<ul>(classTable_, ((jxq)->nj), 22)));
}
}
}
// buildExprArray
static void iek(ece* jxv /*ast*/){
if(!(((jxv)->pj) != (0LL))){
throw 0xE9170000U;
}
if((err)(((jxv)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jxv)->hfg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0041', u'\u0074', u'\u0028')));
(fhj)(((jxv)->hfl));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jxv)->hfg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u005B')));
(fhj)(((jxv)->hfl));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u005D')));
}
}
// buildExprDot
static void iem(ech* jxz /*ast*/){
um* jyc = nullptr; // classItem
bix* jyf = nullptr; // info
if(!(((jxz)->pj) != (0LL))){
throw 0xE9170000U;
}
if((egp)((((jxz)->hdo)->pf))){
(jyc) = ((jxz)->hhr);
if(!(!eqAddr_((jyc), (nullptr)))){
throw 0xE9170000U;
}
(bkx)((as_<ul>(classTable_, ((((jxz)->hdo)->pf)->nj), 22)));
if((((jyc)->azl)->lw) == (2LL)){
(jyf) = ((biw)(((as_<bgi>(classTable_, ((jyc)->azl), 38))->bgk)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhj)(((jxz)->hdo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u002E'))->Cat(v<Array_<char16_t>*>(((jyf)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
else{
if(!((((jyc)->azl)->lw) == (256LL))){
throw 0xE9170000U;
}
(jyf) = ((biw)(((jyc)->azl)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((jyf)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
}
else{
if(!((((jxz)->nj)->lw) == (2062LL))){
throw 0xE9170000U;
}
(iey)((as_<gd>(classTable_, ((jxz)->nj), 14)));
}
}
// buildExprValue
static void ieo(bxm* jyi /*ast*/){
if(!((((jyi)->pf)->lw) == (1027LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C')));
}
// buildExprValuePrim
static void ieq(bxl* jyj /*ast*/){
gc* jyk = nullptr; // type
int64_t jyr = 0;
(jyk) = ((jyj)->pf);
if(((bdg)((jyk))) || ((cmx)((jyk)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<int64_t>((static_cast<int64_t>((jyj)->bxn)), (new Array_<int64_t>(1, (0LL))))));
}
else if((err)((jyk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint16_t>((static_cast<uint16_t>((jyj)->bxn)), (new Array_<int64_t>(1, (0LL))))));
}
else if((ggi)((jyk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), ((((jyj)->bxn) == (0x0000000000000000ULL)) ? (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')) : (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))));
}
else if(((jyk)->lw) == (1025LL)){
switch((as_<cci>(classTable_, (jyk), 78))->ccj){
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint8_t>((static_cast<uint8_t>((jyj)->bxn)), (new Array_<int64_t>(1, (0LL))))));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint16_t>((static_cast<uint16_t>((jyj)->bxn)), (new Array_<int64_t>(1, (0LL))))));
break;
case 4LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint32_t>((static_cast<uint32_t>((jyj)->bxn)), (new Array_<int64_t>(1, (0LL))))));
break;
case 8LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint64_t>(((jyj)->bxn), (new Array_<int64_t>(1, (0LL))))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!(false)){
throw 0xE9170000U;
}
}
}
// buildExprValueStr
static void ies(eco* jyy /*ast*/){
Array_<char16_t>* jyz = nullptr; // value
Array_<char16_t>* jza = nullptr; // s
int64_t jze = 0;
int64_t jzf = 0;
(jyz) = ((jyy)->gld);
(jza) = (new Array_<char16_t>(4, u'\u007B', u'\u0053', u'\u003A', u'\u0022'));
for(jze = (0LL), jzf = (((jyz)->Len()) - (1LL)); jze <= jzf; jze += (1LL)){
(jza) = ((jza)->Cat((bmm)(((jyz)->At(jze)))));
}
(jza) = ((jza)->Cat(new Array_<char16_t>(2, u'\u0022', u'\u007D')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (jza));
}
// buildExprValueFloat
static void ieu(ecu* jzi /*ast*/){
Array_<char16_t>* jzj = nullptr; // value
(jzj) = (v<double>(((jzi)->ggf), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((jzj), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0049', u'\u006E', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0079')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (jzj));
}
}
// buildExprValueArray
static void iew(ecx* jzn /*ast*/){
bool jzo = false; // first
List_<gd*>* jzp = nullptr; // items
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u005B')));
(jzo) = (true);
(jzp) = ((jzn)->hdx);
awe<List_<gd*>*>((jzp), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((jzp), (new Array_<int64_t>(1, (0LL)))))){
if(jzo){
(jzo) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(fhj)((awi<List_<gd*>*, gd*>((jzp), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((jzp), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u005D')));
}
// buildExprRef
static void iey(gd* jzu /*ast*/){
fx* jzv = nullptr; // ast2
bix* jzw = nullptr; // info
gb* kaa = nullptr; // arg
int64_t kac = 0;
(jzv) = ((jzu)->nj);
(jzw) = ((biw)((jzv)));
if(((jzv)->lw) == (256LL)){
uk<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL))), (as_<fw>(classTable_, (jzv), 8)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), ((jzw)->bjn));
}
else{
if(!(((jzv)->lw) == (7LL))){
throw 0xE9170000U;
}
(kaa) = (as_<gb>(classTable_, (jzv), 10));
switch((kaa)->qk){
case 1LL:
if(!((jzw)->biz)){
((jzw)->biz) = (true);
uh<List_<gb*>*, gb*>((bn), (new Array_<int64_t>(1, (0LL))), (kaa));
}
break;
case 2LL:
break;
case 3LL:
if(!((jzw)->biz)){
((jzw)->biz) = (true);
uh<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), (kaa));
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if((kaa)->ql){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((jzw)->bjn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002E', u'\u0024'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), ((jzw)->bjn));
}
}
}
// _findBin
template<typename T_, typename C_> static int64_t ifu(T_ kao /*me_*/, Array_<int64_t>* kap /*type*/, C_ kaq /*item*/){
int64_t a_ = 0, b_ = kao->L - 1;
while (a_ <= b_) {
int64_t c_ = (a_ + b_) / 2;
int64_t m_ = cmp_(kaq, kao->B[c_]);
if(m_ < 0) b_ = c_ - 1;
else if(m_ > 0) a_ = c_ + 1;
else return c_;
}
return -1;
}
// _dtor
static void kar(ihc* kas){
((kas)->ihd) = (nullptr);
((kas)->ne) = (nullptr);
((kas)->nf) = (nullptr);
((kas)->ng) = (nullptr);
((kas)->nh) = (nullptr);
((kas)->ni) = (nullptr);
((kas)->nj) = (nullptr);
((kas)->nk) = (nullptr);
}
// _copy
static ihc* kat(ihc* kau){
ihc* kav = nullptr;
(kav) = (new ihc());
((kav)->ihd) = (copy_((kau)->ihd));
((kav)->ne) = (copy_((kau)->ne));
((kav)->nf) = (copy_((kau)->nf));
((kav)->ng) = (copy_((kau)->ng));
((kav)->nh) = (copy_((kau)->nh));
((kav)->ni) = (copy_((kau)->ni));
((kav)->nj) = (copy_((kau)->nj));
((kav)->nk) = (copy_((kau)->nk));
((kav)->no) = ((kau)->no);
((kav)->lw) = ((kau)->lw);
return as_<ihc>(classTable_, (kav), 140);
}
// _toBin
static Array_<uint8_t>* kaw(ihc* kax){
Array_<uint8_t>* kay = nullptr;
(kay) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kay) = ((kay)->Cat(toBin_((kax)->ihd)));
(kay) = ((kay)->Cat(toBin_((kax)->ne)));
(kay) = ((kay)->Cat(toBin_((kax)->nf)));
(kay) = ((kay)->Cat(toBin_((kax)->ng)));
(kay) = ((kay)->Cat(toBin_((kax)->nh)));
(kay) = ((kay)->Cat(toBin_((kax)->ni)));
(kay) = ((kay)->Cat(toBin_((kax)->nj)));
(kay) = ((kay)->Cat(toBin_((kax)->nk)));
(kay) = ((kay)->Cat(toBin_((kax)->no)));
(kay) = ((kay)->Cat(toBin_((kax)->lw)));
return kay;
}
// _fromBin
static ihc* kbj(ihc* kbk, Array_<uint8_t>* kbl, int64_t* kbm){
ihc* kbn = nullptr;
(kbn) = (new ihc());
((kbn)->ihd) = (fromBin_<fw*>((kbl), (*kbm)));
((kbn)->ne) = (fromBin_<ga*>((kbl), (*kbm)));
((kbn)->nf) = (fromBin_<Array_<char16_t>*>((kbl), (*kbm)));
((kbn)->ng) = (fromBin_<fx*>((kbl), (*kbm)));
((kbn)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kbl), (*kbm)));
((kbn)->ni) = (fromBin_<Array_<char16_t>*>((kbl), (*kbm)));
((kbn)->nj) = (fromBin_<fx*>((kbl), (*kbm)));
((kbn)->nk) = (fromBin_<fy*>((kbl), (*kbm)));
((kbn)->no) = (fromBin_<bool>((kbl), (*kbm)));
((kbn)->lw) = (fromBin_<int64_t>((kbl), (*kbm)));
return kbn;
}
// _dtor
static void kbo(ihg* kbp){
((kbp)->ihh) = (nullptr);
((kbp)->ne) = (nullptr);
((kbp)->nf) = (nullptr);
((kbp)->ng) = (nullptr);
((kbp)->nh) = (nullptr);
((kbp)->ni) = (nullptr);
((kbp)->nj) = (nullptr);
((kbp)->nk) = (nullptr);
}
// _copy
static ihg* kbq(ihg* kbr){
ihg* kbs = nullptr;
(kbs) = (new ihg());
((kbs)->ihh) = (copy_((kbr)->ihh));
((kbs)->ne) = (copy_((kbr)->ne));
((kbs)->nf) = (copy_((kbr)->nf));
((kbs)->ng) = (copy_((kbr)->ng));
((kbs)->nh) = (copy_((kbr)->nh));
((kbs)->ni) = (copy_((kbr)->ni));
((kbs)->nj) = (copy_((kbr)->nj));
((kbs)->nk) = (copy_((kbr)->nk));
((kbs)->no) = ((kbr)->no);
((kbs)->lw) = ((kbr)->lw);
return as_<ihg>(classTable_, (kbs), 142);
}
// _toBin
static Array_<uint8_t>* kbt(ihg* kbu){
Array_<uint8_t>* kbv = nullptr;
(kbv) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->ihh)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->ne)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->nf)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->ng)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->nh)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->ni)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->nj)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->nk)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->no)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->lw)));
return kbv;
}
// _fromBin
static ihg* kcg(ihg* kch, Array_<uint8_t>* kci, int64_t* kcj){
ihg* kck = nullptr;
(kck) = (new ihg());
((kck)->ihh) = (fromBin_<bsl*>((kci), (*kcj)));
((kck)->ne) = (fromBin_<ga*>((kci), (*kcj)));
((kck)->nf) = (fromBin_<Array_<char16_t>*>((kci), (*kcj)));
((kck)->ng) = (fromBin_<fx*>((kci), (*kcj)));
((kck)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kci), (*kcj)));
((kck)->ni) = (fromBin_<Array_<char16_t>*>((kci), (*kcj)));
((kck)->nj) = (fromBin_<fx*>((kci), (*kcj)));
((kck)->nk) = (fromBin_<fy*>((kci), (*kcj)));
((kck)->no) = (fromBin_<bool>((kci), (*kcj)));
((kck)->lw) = (fromBin_<int64_t>((kci), (*kcj)));
return kck;
}
// _dtor
static void kcl(ihj* kcm){
((kcm)->ihk) = (nullptr);
((kcm)->ne) = (nullptr);
((kcm)->nf) = (nullptr);
((kcm)->ng) = (nullptr);
((kcm)->nh) = (nullptr);
((kcm)->ni) = (nullptr);
((kcm)->nj) = (nullptr);
((kcm)->nk) = (nullptr);
}
// _copy
static ihj* kcn(ihj* kco){
ihj* kcp = nullptr;
(kcp) = (new ihj());
((kcp)->ihk) = (copy_((kco)->ihk));
((kcp)->ne) = (copy_((kco)->ne));
((kcp)->nf) = (copy_((kco)->nf));
((kcp)->ng) = (copy_((kco)->ng));
((kcp)->nh) = (copy_((kco)->nh));
((kcp)->ni) = (copy_((kco)->ni));
((kcp)->nj) = (copy_((kco)->nj));
((kcp)->nk) = (copy_((kco)->nk));
((kcp)->no) = ((kco)->no);
((kcp)->lw) = ((kco)->lw);
return as_<ihj>(classTable_, (kcp), 144);
}
// _toBin
static Array_<uint8_t>* kcq(ihj* kcr){
Array_<uint8_t>* kcs = nullptr;
(kcs) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->ihk)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->ne)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->nf)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->ng)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->nh)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->ni)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->nj)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->nk)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->no)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->lw)));
return kcs;
}
// _fromBin
static ihj* kdd(ihj* kde, Array_<uint8_t>* kdf, int64_t* kdg){
ihj* kdh = nullptr;
(kdh) = (new ihj());
((kdh)->ihk) = (fromBin_<bso*>((kdf), (*kdg)));
((kdh)->ne) = (fromBin_<ga*>((kdf), (*kdg)));
((kdh)->nf) = (fromBin_<Array_<char16_t>*>((kdf), (*kdg)));
((kdh)->ng) = (fromBin_<fx*>((kdf), (*kdg)));
((kdh)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kdf), (*kdg)));
((kdh)->ni) = (fromBin_<Array_<char16_t>*>((kdf), (*kdg)));
((kdh)->nj) = (fromBin_<fx*>((kdf), (*kdg)));
((kdh)->nk) = (fromBin_<fy*>((kdf), (*kdg)));
((kdh)->no) = (fromBin_<bool>((kdf), (*kdg)));
((kdh)->lw) = (fromBin_<int64_t>((kdf), (*kdg)));
return kdh;
}
// _dtor
static void kdi(ihm* kdj){
((kdj)->ihn) = (nullptr);
((kdj)->ne) = (nullptr);
((kdj)->nf) = (nullptr);
((kdj)->ng) = (nullptr);
((kdj)->nh) = (nullptr);
((kdj)->ni) = (nullptr);
((kdj)->nj) = (nullptr);
((kdj)->nk) = (nullptr);
}
// _copy
static ihm* kdk(ihm* kdl){
ihm* kdm = nullptr;
(kdm) = (new ihm());
((kdm)->ihn) = (copy_((kdl)->ihn));
((kdm)->ne) = (copy_((kdl)->ne));
((kdm)->nf) = (copy_((kdl)->nf));
((kdm)->ng) = (copy_((kdl)->ng));
((kdm)->nh) = (copy_((kdl)->nh));
((kdm)->ni) = (copy_((kdl)->ni));
((kdm)->nj) = (copy_((kdl)->nj));
((kdm)->nk) = (copy_((kdl)->nk));
((kdm)->no) = ((kdl)->no);
((kdm)->lw) = ((kdl)->lw);
return as_<ihm>(classTable_, (kdm), 146);
}
// _toBin
static Array_<uint8_t>* kdn(ihm* kdo){
Array_<uint8_t>* kdp = nullptr;
(kdp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->ihn)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->ne)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->nf)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->ng)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->nh)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->ni)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->nj)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->nk)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->no)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->lw)));
return kdp;
}
// _fromBin
static ihm* kea(ihm* keb, Array_<uint8_t>* kec, int64_t* ked){
ihm* kee = nullptr;
(kee) = (new ihm());
((kee)->ihn) = (fromBin_<ul*>((kec), (*ked)));
((kee)->ne) = (fromBin_<ga*>((kec), (*ked)));
((kee)->nf) = (fromBin_<Array_<char16_t>*>((kec), (*ked)));
((kee)->ng) = (fromBin_<fx*>((kec), (*ked)));
((kee)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kec), (*ked)));
((kee)->ni) = (fromBin_<Array_<char16_t>*>((kec), (*ked)));
((kee)->nj) = (fromBin_<fx*>((kec), (*ked)));
((kee)->nk) = (fromBin_<fy*>((kec), (*ked)));
((kee)->no) = (fromBin_<bool>((kec), (*ked)));
((kee)->lw) = (fromBin_<int64_t>((kec), (*ked)));
return kee;
}
// _dtor
static void kef(ihp* keg){
((keg)->ihq) = (nullptr);
((keg)->ne) = (nullptr);
((keg)->nf) = (nullptr);
((keg)->ng) = (nullptr);
((keg)->nh) = (nullptr);
((keg)->ni) = (nullptr);
((keg)->nj) = (nullptr);
((keg)->nk) = (nullptr);
}
// _copy
static ihp* keh(ihp* kei){
ihp* kej = nullptr;
(kej) = (new ihp());
((kej)->ihq) = (copy_((kei)->ihq));
((kej)->ne) = (copy_((kei)->ne));
((kej)->nf) = (copy_((kei)->nf));
((kej)->ng) = (copy_((kei)->ng));
((kej)->nh) = (copy_((kei)->nh));
((kej)->ni) = (copy_((kei)->ni));
((kej)->nj) = (copy_((kei)->nj));
((kej)->nk) = (copy_((kei)->nk));
((kej)->no) = ((kei)->no);
((kej)->lw) = ((kei)->lw);
return as_<ihp>(classTable_, (kej), 148);
}
// _toBin
static Array_<uint8_t>* kek(ihp* kel){
Array_<uint8_t>* kem = nullptr;
(kem) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kem) = ((kem)->Cat(toBin_((kel)->ihq)));
(kem) = ((kem)->Cat(toBin_((kel)->ne)));
(kem) = ((kem)->Cat(toBin_((kel)->nf)));
(kem) = ((kem)->Cat(toBin_((kel)->ng)));
(kem) = ((kem)->Cat(toBin_((kel)->nh)));
(kem) = ((kem)->Cat(toBin_((kel)->ni)));
(kem) = ((kem)->Cat(toBin_((kel)->nj)));
(kem) = ((kem)->Cat(toBin_((kel)->nk)));
(kem) = ((kem)->Cat(toBin_((kel)->no)));
(kem) = ((kem)->Cat(toBin_((kel)->lw)));
return kem;
}
// _fromBin
static ihp* kex(ihp* key, Array_<uint8_t>* kez, int64_t* kfa){
ihp* kfb = nullptr;
(kfb) = (new ihp());
((kfb)->ihq) = (fromBin_<bsu*>((kez), (*kfa)));
((kfb)->ne) = (fromBin_<ga*>((kez), (*kfa)));
((kfb)->nf) = (fromBin_<Array_<char16_t>*>((kez), (*kfa)));
((kfb)->ng) = (fromBin_<fx*>((kez), (*kfa)));
((kfb)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kez), (*kfa)));
((kfb)->ni) = (fromBin_<Array_<char16_t>*>((kez), (*kfa)));
((kfb)->nj) = (fromBin_<fx*>((kez), (*kfa)));
((kfb)->nk) = (fromBin_<fy*>((kez), (*kfa)));
((kfb)->no) = (fromBin_<bool>((kez), (*kfa)));
((kfb)->lw) = (fromBin_<int64_t>((kez), (*kfa)));
return kfb;
}
// pushDummyScope
static void ihs(fx* kfc /*ast*/){
fx* kfd = nullptr; // dummy
(kfd) = (new fx());
(brh)((kfd), (0LL), (nullptr), (nullptr), (true));
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fne<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))))->nh), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u0024'))->Cat(v<int64_t>((avh), (new Array_<int64_t>(1, (0LL)))))), (kfd));
(avh) = ((avh) + (1LL));
((kfd)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
brj<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (kfd));
((kfc)->ng) = (kfd);
}
// obtainBlockName
static void iht(fx* kff /*ast*/){
char16_t kfg = 0; // c
(kfg) = ((brk)());
if((kfg) != (u'\u0028')){
(ave) = (kfg);
((kff)->nf) = ((bsb)((true), (false)));
(dgr)((kff), (true));
(dgn)((u'\u0028'), (true));
}
else{
((kff)->nf) = (new Array_<char16_t>(1, u'\u0024'));
}
}
// parseDummyBlock
static bvs* ihv(ge** kfk /*outStat*/, int64_t* kfl /*outTypeId*/, int64_t kfm /*typeId*/, fx* kfn /*block_*/){
bvs* kfo = nullptr; // ast
ge* kfs = nullptr; // stat
bool kfy = false; // endFlag
int64_t kga = 0;
int64_t kgd = 0;
int64_t kgh = 0;
int64_t kgl = 0;
int64_t kgq = 0;
int64_t kgu = 0;
int64_t kgz = 0;
int64_t khd = 0;
int64_t khh = 0;
(kfo) = (new bvs());
(brh)((kfo), (66052LL), ((dde)()), (nullptr), (false));
((kfo)->bwb) = (nullptr);
((kfo)->bwe) = (new List_<ge*>());
(ihs)((kfo));
((kfo)->nf) = (new Array_<char16_t>(1, u'\u0024'));
while(true){
(kfs) = ((dhu)((kfn)));
if(eqAddr_((kfs), (nullptr))){
if(avg){
(*kfk) = (nullptr);
(*kfl) = (513LL);
break;
}
else{
continue;
}
}
(kfy) = (false);
switch(kfm){
case 66049LL:
switch((kfs)->lw){
case 520LL:
case 521LL:
case 513LL:
(kfy) = (true);
break;
}
break;
case 520LL:
switch((kfs)->lw){
case 520LL:
case 521LL:
case 513LL:
(kfy) = (true);
break;
}
break;
case 521LL:
switch((kfs)->lw){
case 520LL:
case 521LL:
(ad)((65563LL), ((dde)()), (nullptr));
continue;
break;
case 513LL:
(kfy) = (true);
break;
}
break;
case 522LL:
switch((kfs)->lw){
case 522LL:
case 523LL:
case 513LL:
(kfy) = (true);
break;
}
break;
case 523LL:
switch((kfs)->lw){
case 522LL:
case 523LL:
(ad)((65564LL), ((dde)()), (nullptr));
continue;
break;
case 513LL:
(kfy) = (true);
break;
}
break;
case 66051LL:
switch((kfs)->lw){
case 524LL:
case 525LL:
(kfy) = (true);
break;
}
break;
case 524LL:
switch((kfs)->lw){
case 524LL:
case 525LL:
case 520LL:
(kfy) = (true);
break;
}
break;
case 525LL:
switch((kfs)->lw){
case 524LL:
case 525LL:
(ad)((65565LL), ((dde)()), (nullptr));
continue;
break;
case 513LL:
(kfy) = (true);
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(kfy){
(*kfk) = (kfs);
(*kfl) = ((kfs)->lw);
break;
}
uh<List_<ge*>*, ge*>(((kfo)->bwe), (new Array_<int64_t>(1, (0LL))), (kfs));
}
btd<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return kfo;
}
// makeBlockVar
static gb* iiq(ga* khn /*pos*/){
gb* kho = nullptr; // arg
(kho) = (new gb());
(brh)((kho), (7LL), (khn), (nullptr), (false));
((kho)->qk) = (3LL);
((kho)->ql) = (false);
((kho)->qf) = (nullptr);
((kho)->qg) = (nullptr);
return kho;
}
// makePrimValue
static bxl* ilp(ga* khp /*pos*/, int64_t khq /*kind*/, uint64_t khr /*value*/){
bxl* khs = nullptr; // expr
bvz* khu = nullptr; // type
(khs) = (new bxl());
(dmx)((khs), (67585LL), (khp));
(khu) = (new bvz());
(brh)((khu), (1026LL), (khp), (nullptr), (false));
((khu)->bwa) = (khq);
((khs)->pf) = (khu);
((khs)->bxn) = (khr);
return khs;
}
// parseExprOr
static gd* ipi(){
gd* khv = nullptr; // ast
int64_t kia = 0; // row
int64_t kib = 0; // col
char16_t kic = 0; // c
bzx* kif = nullptr; // ast2
(khv) = ((khw)());
while(true){
(kia) = (avc);
(kib) = (avd);
(kic) = ((brk)());
if((kic) == (u'\u007C')){
(kif) = (new bzx());
(dmx)((kif), (2050LL), ((bri)((bf), (kia), (kib))));
((kif)->bzy) = (8LL);
((kif)->cab) = (khv);
((kif)->cac) = ((khw)());
(khv) = (kif);
}
else{
(ave) = (kic);
break;
}
}
return khv;
}
// addSpecialFunc
static fw* ity(ul* kih /*class_*/, Array_<char16_t>* kii /*name*/){
fw* kij = nullptr; // ast
gb* kil = nullptr; // me_
dgu* kin = nullptr; // type
um* kip = nullptr; // item
ul* kiq = nullptr; // ptr
List_<um*>* kis = nullptr; // items
um* kiw = nullptr; // item2
(kij) = (new fw());
(bvn)((kij), (256LL), ((kih)->ne));
((kij)->nf) = (kii);
((kij)->sm) = (0LL);
((kij)->sf) = (new List_<Array_<char16_t>*>());
((kij)->sg) = (new List_<gb*>());
((kij)->sh) = (nullptr);
((kij)->si) = (new List_<ge*>());
(kil) = (new gb());
(bvn)((kil), (7LL), ((kih)->ne));
((kil)->qk) = (2LL);
((kil)->ql) = (false);
((kil)->qg) = (nullptr);
(kin) = (new dgu());
(bvn)((kin), (66565LL), ((kih)->ne));
((kin)->nj) = (kih);
((kil)->qf) = (kin);
uh<List_<gb*>*, gb*>(((kij)->sg), (new Array_<int64_t>(1, (0LL))), (kil));
(kip) = (new um());
((kip)->azr) = (true);
((kip)->azl) = (kij);
((kip)->azm) = (nullptr);
(kiq) = (as_<ul>(classTable_, ((kih)->nj), 22));
while(!eqAddr_(((kiq)->nj), (nullptr))){
(kiq) = (as_<ul>(classTable_, ((kiq)->nj), 22));
}
(kis) = ((kiq)->bag);
awe<List_<um*>*>((kis), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((kis), (new Array_<int64_t>(1, (0LL)))))){
(kiw) = (awi<List_<um*>*, um*>((kis), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((((kiw)->azl)->nf), (kii)) == 0){
((kip)->azm) = (kiw);
break;
}
ays<List_<um*>*>((kis), (new Array_<int64_t>(1, (0LL))));
}
if(!(!eqAddr_(((kip)->azm), (nullptr)))){
throw 0xE9170000U;
}
((kip)->azq) = (((kip)->azm)->azq);
uh<List_<um*>*, um*>(((kih)->bag), (new Array_<int64_t>(1, (0LL))), (kip));
return kij;
}
// makeMeDot
static ech* ivj(ul* kiz /*class_*/, gb* kja /*arg*/, Array_<char16_t>* kjb /*name*/){
ech* kjc = nullptr; // ast
gd* kje = nullptr; // me_
dgu* kjg = nullptr; // type
(kjc) = (new ech());
(bwv)((kjc), (2059LL), ((kiz)->ne));
((kjc)->hhe) = (kjb);
((kjc)->hhr) = (nullptr);
(kje) = (new gd());
(bwv)((kje), (2062LL), ((kiz)->ne));
((kje)->ni) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
((kje)->nj) = (kja);
(kjg) = (new dgu());
(bvn)((kjg), (66565LL), ((kiz)->ne));
((kjg)->nj) = (kiz);
((kje)->pf) = (kjg);
((kjc)->hdo) = (kje);
return kjc;
}
// makeTypeId
static Array_<char16_t>* jpz(gc* kjh /*type*/){
Array_<char16_t>* kji = nullptr; // result
bool kjj = false; // first
List_<int64_t>* kjk = nullptr; // items
(kji) = (new Array_<char16_t>(1, u'\u005B'));
(kjj) = (true);
(kjk) = ((kjl)((kjh)));
awe<List_<int64_t>*>((kjk), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<int64_t>*>((kjk), (new Array_<int64_t>(1, (0LL)))))){
if(kjj){
(kjj) = (false);
}
else{
(kji) = ((kji)->Cat(new Array_<char16_t>(1, u'\u002C')));
}
(kji) = ((kji)->Cat(v<int64_t>((awi<List_<int64_t>*, int64_t>((kjk), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))))));
ays<List_<int64_t>*>((kjk), (new Array_<int64_t>(1, (0LL))));
}
(kji) = ((kji)->Cat(new Array_<char16_t>(1, u'\u005D')));
return kji;
}
// parseExprAnd
static gd* khw(){
gd* kjt = nullptr; // ast
int64_t kjy = 0; // row
int64_t kjz = 0; // col
char16_t kka = 0; // c
bzx* kkd = nullptr; // ast2
(kjt) = ((kju)());
while(true){
(kjy) = (avc);
(kjz) = (avd);
(kka) = ((brk)());
if((kka) == (u'\u0026')){
(kkd) = (new bzx());
(dmx)((kkd), (2050LL), ((bri)((bf), (kjy), (kjz))));
((kkd)->bzy) = (9LL);
((kkd)->cab) = (kjt);
((kkd)->cac) = ((kju)());
(kjt) = (kkd);
}
else{
(ave) = (kka);
break;
}
}
return kjt;
}
// getTypeId
static List_<int64_t>* kjl(gc* kkf /*type*/){
List_<int64_t>* kkg = nullptr; // result
(kkg) = (new List_<int64_t>());
(kkh)((kkf), (kkg));
return kkg;
}
// parseExprCmp
static gd* kju(){
gd* kki = nullptr; // ast
int64_t kkn = 0; // row
int64_t kko = 0; // col
char16_t kkp = 0; // c
char16_t kkr = 0;
char16_t kku = 0;
bzx* kkw = nullptr; // ast2
char16_t kkz = 0;
bzx* klb = nullptr; // ast2
ebt* kld = nullptr; // ast2
bzx* klf = nullptr; // ast2
bzx* klh = nullptr; // ast2
bzx* klj = nullptr; // ast2
char16_t klp = 0;
bzx* klr = nullptr; // ast2
ebt* klt = nullptr; // ast2
bzx* klv = nullptr; // ast2
(kki) = ((kkj)());
while(true){
(kkn) = (avc);
(kko) = (avd);
(kkp) = ((brk)());
switch(kkp){
case u'\u003C':
(kkp) = ((bsx)());
switch(kkp){
case u'\u003D':
(kkw) = (new bzx());
(dmx)((kkw), (2050LL), ((bri)((bf), (kkn), (kko))));
((kkw)->bzy) = (12LL);
((kkw)->cab) = (kki);
((kkw)->cac) = ((kkj)());
(kki) = (kkw);
break;
case u'\u003E':
(kkp) = ((bsx)());
switch(kkp){
case u'\u0026':
(klb) = (new bzx());
(dmx)((klb), (2050LL), ((bri)((bf), (kkn), (kko))));
((klb)->bzy) = (17LL);
((klb)->cab) = (kki);
((klb)->cac) = ((kkj)());
(kki) = (klb);
break;
case u'\u0024':
(kld) = (new ebt());
(dmx)((kld), (2054LL), ((bri)((bf), (kkn), (kko))));
((kld)->gwe) = (2LL);
((kld)->gvw) = (kki);
((kld)->gvz) = ((dhn)());
(kki) = (kld);
break;
default:
(ave) = (kkp);
(klf) = (new bzx());
(dmx)((klf), (2050LL), ((bri)((bf), (kkn), (kko))));
((klf)->bzy) = (15LL);
((klf)->cab) = (kki);
((klf)->cac) = ((kkj)());
(kki) = (klf);
break;
}
break;
default:
(ave) = (kkp);
(klh) = (new bzx());
(dmx)((klh), (2050LL), ((bri)((bf), (kkn), (kko))));
((klh)->bzy) = (10LL);
((klh)->cab) = (kki);
((klh)->cac) = ((kkj)());
(kki) = (klh);
break;
}
break;
case u'\u003E':
(klj) = (new bzx());
(dmx)((klj), (2050LL), ((bri)((bf), (kkn), (kko))));
(kkp) = ((bsx)());
if((kkp) == (u'\u003D')){
((klj)->bzy) = (13LL);
}
else{
(ave) = (kkp);
((klj)->bzy) = (11LL);
}
((klj)->cab) = (kki);
((klj)->cac) = ((kkj)());
(kki) = (klj);
break;
case u'\u003D':
(kkp) = ((bsx)());
switch(kkp){
case u'\u0026':
(klr) = (new bzx());
(dmx)((klr), (2050LL), ((bri)((bf), (kkn), (kko))));
((klr)->bzy) = (16LL);
((klr)->cab) = (kki);
((klr)->cac) = ((kkj)());
(kki) = (klr);
break;
case u'\u0024':
(klt) = (new ebt());
(dmx)((klt), (2054LL), ((bri)((bf), (kkn), (kko))));
((klt)->gwe) = (1LL);
((klt)->gvw) = (kki);
((klt)->gvz) = ((dhn)());
(kki) = (klt);
break;
default:
(ave) = (kkp);
(klv) = (new bzx());
(dmx)((klv), (2050LL), ((bri)((bf), (kkn), (kko))));
((klv)->bzy) = (14LL);
((klv)->cab) = (kki);
((klv)->cac) = ((kkj)());
(kki) = (klv);
break;
}
break;
default:
(ave) = (kkp);
goto kkl;
break;
}
}
kkl:;
return kki;
}
// makeTypeIdRecursion
static void kkh(gc* klx /*type*/, List_<int64_t>* kly /*output*/){
int64_t kmk = 0;
int64_t kmz = 0;
if((bdg)((klx))){
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (0LL));
return;
}
if((gfs)((klx))){
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (1LL));
return;
}
if((err)((klx))){
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (2LL));
return;
}
if((ggi)((klx))){
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (3LL));
return;
}
if(((klx)->lw) == (1025LL)){
switch((as_<cci>(classTable_, (klx), 78))->ccj){
case 1LL:
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (4LL));
break;
case 2LL:
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (5LL));
break;
case 4LL:
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (6LL));
break;
case 8LL:
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (7LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return;
}
if(((klx)->lw) == (66562LL)){
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (8LL));
return;
}
if((cmx)((klx))){
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (9LL));
return;
}
if(((klx)->lw) == (66561LL)){
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (129LL));
(kkh)(((as_<cce>(classTable_, (klx), 76))->ccg), (kly));
return;
}
if(((klx)->lw) == (66563LL)){
switch((as_<cdj>(classTable_, (klx), 84))->cdm){
case 0LL:
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (130LL));
break;
case 1LL:
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (131LL));
break;
case 2LL:
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (132LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(kkh)(((as_<cdj>(classTable_, (klx), 84))->cdo), (kly));
return;
}
if(((klx)->lw) == (66564LL)){
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (133LL));
(kkh)(((as_<cdu>(classTable_, (klx), 86))->cdv), (kly));
(kkh)(((as_<cdu>(classTable_, (klx), 86))->cdw), (kly));
return;
}
if(!((egp)((klx)))){
throw 0xE9170000U;
}
uh<List_<int64_t>*, int64_t>((kly), (new Array_<int64_t>(1, (0LL))), (134LL));
}
// parseExprCat
static gd* kkj(){
gd* kng = nullptr; // ast
int64_t knl = 0; // row
int64_t knm = 0; // col
char16_t knn = 0; // c
bzx* knq = nullptr; // ast2
(kng) = ((knh)());
while(true){
(knl) = (avc);
(knm) = (avd);
(knn) = ((brk)());
if((knn) == (u'\u007E')){
(knq) = (new bzx());
(dmx)((knq), (2050LL), ((bri)((bf), (knl), (knm))));
((knq)->bzy) = (18LL);
((knq)->cab) = (kng);
((knq)->cac) = ((knh)());
(kng) = (knq);
}
else{
(ave) = (knn);
break;
}
}
return kng;
}
// parseExprAdd
static gd* knh(){
gd* kns = nullptr; // ast
int64_t knx = 0; // row
int64_t kny = 0; // col
char16_t knz = 0; // c
char16_t kob = 0;
bzx* kod = nullptr; // ast2
bzx* kof = nullptr; // ast2
(kns) = ((knt)());
while(true){
(knx) = (avc);
(kny) = (avd);
(knz) = ((brk)());
switch(knz){
case u'\u002B':
(kod) = (new bzx());
(dmx)((kod), (2050LL), ((bri)((bf), (knx), (kny))));
((kod)->bzy) = (19LL);
((kod)->cab) = (kns);
((kod)->cac) = ((knt)());
(kns) = (kod);
break;
case u'\u002D':
(kof) = (new bzx());
(dmx)((kof), (2050LL), ((bri)((bf), (knx), (kny))));
((kof)->bzy) = (20LL);
((kof)->cab) = (kns);
((kof)->cac) = ((knt)());
(kns) = (kof);
break;
default:
(ave) = (knz);
goto knv;
break;
}
}
knv:;
return kns;
}
// parseExprMul
static gd* knt(){
gd* koh = nullptr; // ast
int64_t kom = 0; // row
int64_t kon = 0; // col
char16_t koo = 0; // c
char16_t koq = 0;
bzx* kos = nullptr; // ast2
bzx* kou = nullptr; // ast2
bzx* kow = nullptr; // ast2
(koh) = ((koi)());
while(true){
(kom) = (avc);
(kon) = (avd);
(koo) = ((brk)());
switch(koo){
case u'\u002A':
(kos) = (new bzx());
(dmx)((kos), (2050LL), ((bri)((bf), (kom), (kon))));
((kos)->bzy) = (21LL);
((kos)->cab) = (koh);
((kos)->cac) = ((koi)());
(koh) = (kos);
break;
case u'\u002F':
(kou) = (new bzx());
(dmx)((kou), (2050LL), ((bri)((bf), (kom), (kon))));
((kou)->bzy) = (22LL);
((kou)->cab) = (koh);
((kou)->cac) = ((koi)());
(koh) = (kou);
break;
case u'\u0025':
(kow) = (new bzx());
(dmx)((kow), (2050LL), ((bri)((bf), (kom), (kon))));
((kow)->bzy) = (23LL);
((kow)->cab) = (koh);
((kow)->cac) = ((koi)());
(koh) = (kow);
break;
default:
(ave) = (koo);
goto kok;
break;
}
}
kok:;
return koh;
}
// parseExprPlus
static gd* koi(){
gd* koy = nullptr; // ast
int64_t kpc = 0; // row
int64_t kpd = 0; // col
char16_t kpe = 0; // c
char16_t kpi = 0;
ebq* kpk = nullptr; // ast2
ebf* kpv = nullptr; // ast2
ebn* kpx = nullptr; // ast2
ebf* kpz = nullptr; // ast2
char16_t kqb = 0;
(koy) = ((koz)());
if(!eqAddr_((koy), (nullptr))){
return koy;
}
(kpc) = (avc);
(kpd) = (avd);
(kpe) = ((brk)());
if((kpe) == (u'\u0023')){
(kpe) = ((bsx)());
switch(kpe){
case u'\u005B':
(kpk) = (new ebq());
(dmx)((kpk), (2053LL), ((bri)((bf), (kpc), (kpd))));
((kpk)->gtz) = (new List_<gd*>());
while(true){
uh<List_<gd*>*, gd*>(((kpk)->gtz), (new Array_<int64_t>(1, (0LL))), ((dms)()));
(kpe) = ((brk)());
if((kpe) == (u'\u0000')){
break;
}
if((kpe) == (u'\u005D')){
break;
}
if((kpe) != (u'\u002C')){
(dgi)((u'\u002C'), (kpe));
return nullptr;
}
}
((kpk)->gui) = ((dhn)());
(koy) = (kpk);
break;
case u'\u0023':
(kpv) = (new ebf());
(dmx)((kpv), (2049LL), ((bri)((bf), (kpc), (kpd))));
((kpv)->gfp) = (3LL);
((kpv)->gfj) = ((koi)());
(koy) = (kpv);
break;
default:
(ave) = (kpe);
(kpx) = (new ebn());
(dmx)((kpx), (2052LL), ((bri)((bf), (kpc), (kpd))));
((kpx)->gso) = ((dhn)());
(koy) = (kpx);
break;
}
}
else{
(kpz) = (new ebf());
(dmx)((kpz), (2049LL), ((bri)((bf), (kpc), (kpd))));
switch(kpe){
case u'\u002B':
((kpz)->gfp) = (0LL);
break;
case u'\u002D':
((kpz)->gfp) = (1LL);
break;
case u'\u0021':
((kpz)->gfp) = (2LL);
break;
case u'\u005E':
((kpz)->gfp) = (4LL);
break;
default:
(ad)((65569LL), ((kpz)->ne), (new Array_<Array_<char16_t>*>(1, ((ddf)((kpe))))));
(bsw)((kpe));
return nullptr;
break;
}
((kpz)->gfj) = ((koi)());
(koy) = (kpz);
}
return koy;
}
// parseExprPow
static gd* koz(){
gd* kqh = nullptr; // ast
int64_t kql = 0; // row
int64_t kqm = 0; // col
char16_t kqn = 0; // c
bzx* kqq = nullptr; // ast2
(kqh) = ((kqi)());
if(eqAddr_((kqh), (nullptr))){
return kqh;
}
(kql) = (avc);
(kqm) = (avd);
(kqn) = ((brk)());
if((kqn) == (u'\u005E')){
(kqq) = (new bzx());
(dmx)((kqq), (2050LL), ((bri)((bf), (kql), (kqm))));
((kqq)->bzy) = (24LL);
((kqq)->cab) = (kqh);
((kqq)->cac) = ((koi)());
(kqh) = (kqq);
}
else{
(ave) = (kqn);
}
return kqh;
}
// parseExprCall
static gd* kqi(){
gd* kqs = nullptr; // ast
int64_t kqz = 0; // row
int64_t kra = 0; // col
char16_t krb = 0; // c
char16_t krd = 0;
bwt* krf = nullptr; // ast2
bwu* krl = nullptr; // arg
gd* krt = nullptr; // ast3
ece* ksc = nullptr; // ast2
ech* kse = nullptr; // ast2
char16_t ksh = 0;
ebw* ksj = nullptr; // ast2
ebz* ksl = nullptr; // ast2
ebt* ksn = nullptr; // ast2
(kqs) = ((kqt)());
if(eqAddr_((kqs), (nullptr))){
return kqs;
}
while(true){
(kqz) = (avc);
(kra) = (avd);
(krb) = ((brk)());
switch(krb){
case u'\u0028':
if(!(!eqAddr_((kqs), (nullptr)))){
throw 0xE9170000U;
}
(krf) = (new bwt());
(dmx)((krf), (2057LL), ((bri)((bf), (kqz), (kra))));
((krf)->bwz) = (kqs);
((krf)->bww) = (new List_<bwu*>());
(krb) = ((brk)());
if((krb) != (u'\u0029')){
(ave) = (krb);
while(true){
(krl) = (new bwu());
((krl)->byf) = (false);
(krb) = ((brk)());
if((krb) == (u'\u0026')){
((krl)->bye) = (true);
(krb) = ((brk)());
if(((krb) == (u'\u002C')) || ((krb) == (u'\u0029'))){
((krl)->byf) = (true);
}
}
else{
((krl)->bye) = (false);
}
(ave) = (krb);
if((krl)->byf){
(krt) = (new gd());
(dmx)((krt), (2062LL), ((krf)->ne));
((krt)->ni) = (new Array_<char16_t>(1, u'\u0024'));
((krt)->nj) = ((iiq)(((krt)->ne)));
((krl)->byi) = (krt);
}
else{
((krl)->byi) = ((dms)());
}
uh<List_<bwu*>*, bwu*>(((krf)->bww), (new Array_<int64_t>(1, (0LL))), (krl));
(krb) = ((brk)());
if((krb) == (u'\u0000')){
break;
}
if((krb) == (u'\u0029')){
break;
}
if((krb) != (u'\u002C')){
(dgi)((u'\u002C'), (krb));
return nullptr;
}
}
}
(kqs) = (krf);
break;
case u'\u005B':
if(!(!eqAddr_((kqs), (nullptr)))){
throw 0xE9170000U;
}
(ksc) = (new ece());
(dmx)((ksc), (2058LL), ((bri)((bf), (kqz), (kra))));
((ksc)->hfg) = (kqs);
((ksc)->hfl) = ((dms)());
(dgn)((u'\u005D'), (true));
(kqs) = (ksc);
break;
case u'\u002E':
if(!(!eqAddr_((kqs), (nullptr)))){
throw 0xE9170000U;
}
(kse) = (new ech());
(dmx)((kse), (2059LL), ((bri)((bf), (kqz), (kra))));
((kse)->hdo) = (kqs);
((kse)->hhe) = ((bsb)((true), (false)));
((kse)->hhr) = (nullptr);
(kqs) = (kse);
break;
case u'\u0024':
if(!(!eqAddr_((kqs), (nullptr)))){
throw 0xE9170000U;
}
(krb) = ((bsx)());
switch(krb){
case u'\u003E':
(ksj) = (new ebw());
(dmx)((ksj), (2055LL), ((bri)((bf), (kqz), (kra))));
((ksj)->had) = (kqs);
((ksj)->haj) = ((dhn)());
(kqs) = (ksj);
break;
case u'\u003C':
(ksl) = (new ebz());
(dmx)((ksl), (2056LL), ((bri)((bf), (kqz), (kra))));
((ksl)->hbo) = (kqs);
((ksl)->hbt) = ((dhn)());
((ksl)->hbu) = ((ilp)(((ksl)->ne), (0LL), (0x0000000000000000ULL)));
(kqs) = (ksl);
break;
default:
(ave) = (krb);
(ksn) = (new ebt());
(dmx)((ksn), (2054LL), ((bri)((bf), (kqz), (kra))));
((ksn)->gwe) = (0LL);
((ksn)->gvw) = (kqs);
((ksn)->gvz) = ((dhn)());
(kqs) = (ksn);
break;
}
break;
default:
(ave) = (krb);
goto kqx;
break;
}
}
kqx:;
return kqs;
}
// parseExprValue
static gd* kqt(){
int64_t ksp = 0; // row
int64_t ksq = 0; // col
char16_t ksr = 0; // c
ga* kss = nullptr; // pos
char16_t ksu = 0;
Array_<char16_t>* ksw = nullptr; // buf
int64_t ksx = 0; // len
bool ksy = false; // esc
bzx* kti = nullptr; // cat
bzx* ktk = nullptr; // cat2
bwt* ktn = nullptr; // call
ech* ktp = nullptr; // dot
char16_t kuc = 0; // buf
bool kud = false; // set
bool kue = false; // esc
gd* kux = nullptr; // ast
ecx* kvb = nullptr; // ast
gd* kvh = nullptr; // expr
Array_<char16_t>* kvr = nullptr; // id
ecr* kvs = nullptr; // expr
kvv* kvu = nullptr; // type
Array_<char16_t>* kwc = nullptr; // id
Array_<char16_t>* kwe = nullptr;
bxm* kwk = nullptr; // ast
egu* kwm = nullptr; // type
gd* kwq = nullptr; // ast
(ksp) = (avc);
(ksq) = (avd);
(ksr) = ((brk)());
(kss) = ((bri)((bf), (ksp), (ksq)));
switch(ksr){
case u'\u0022':
(ksw) = (newArray_<char16_t, Array_<char16_t>*>(1, (1024LL)));
(ksx) = (0LL);
(ksy) = (false);
while(true){
(ksr) = ((fyp)());
if((ksr) == (u'\u0000')){
(ad)((65573LL), (kss), (nullptr));
return nullptr;
}
if(ksy){
if((ksr) == (u'\u007B')){
(kti) = (new bzx());
(dmx)((kti), (2050LL), (kss));
((kti)->bzy) = (18LL);
(ktk) = (new bzx());
(dmx)((ktk), (2050LL), (kss));
((ktk)->bzy) = (18LL);
((ktk)->cab) = ((ktl)((kss), (auw<Array_<char16_t>*>((ksw), (new Array_<int64_t>(1, (0LL))), (0LL), (ksx)))));
(ktn) = (new bwt());
(dmx)((ktn), (2057LL), (kss));
((ktn)->bww) = (new List_<bwu*>());
(ktp) = (new ech());
(dmx)((ktp), (2059LL), (kss));
((ktp)->hdo) = ((dms)());
((ktp)->hhe) = (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072'));
((ktp)->hhr) = (nullptr);
((ktn)->bwz) = (ktp);
((ktk)->cac) = (ktn);
(dgn)((u'\u007D'), (false));
((kti)->cab) = (ktk);
(ave) = (u'\u0022');
((kti)->cac) = ((kqt)());
return kti;
}
if((ksx) == (1024LL)){
(ad)((65570LL), (kss), (new Array_<Array_<char16_t>*>(1, (ksw))));
(bsw)((ksr));
return nullptr;
}
((ksw)->At(ksx)) = ((kts)((ksr)));
(ksx) = ((ksx) + (1LL));
(ksy) = (false);
continue;
}
if((ksr) == (u'\u0022')){
break;
}
if((ksr) == (u'\u005C')){
(ksy) = (true);
continue;
}
if((ksx) == (1024LL)){
(ad)((65570LL), (kss), (new Array_<Array_<char16_t>*>(1, (ksw))));
(bsw)((ksr));
return nullptr;
}
((ksw)->At(ksx)) = (ksr);
(ksx) = ((ksx) + (1LL));
}
return (ktl)((kss), (auw<Array_<char16_t>*>((ksw), (new Array_<int64_t>(1, (0LL))), (0LL), (ksx))));
break;
case u'\u0027':
(kuc) = (u'\u0000');
(kud) = (false);
(kue) = (false);
while(true){
(ksr) = ((fyp)());
if((ksr) == (u'\u0000')){
(ad)((65573LL), (kss), (nullptr));
return nullptr;
}
if(kue){
if(kud){
(ad)((65574LL), (kss), (new Array_<Array_<char16_t>*>(1, ((ddf)((kuc))))));
(bsw)((ksr));
return nullptr;
}
(kuc) = ((kts)((ksr)));
(kud) = (true);
(kue) = (false);
continue;
}
if((ksr) == (u'\u0027')){
break;
}
if((ksr) == (u'\u005C')){
(kue) = (true);
continue;
}
if(kud){
(ad)((65574LL), (kss), (new Array_<Array_<char16_t>*>(1, ((ddf)((kuc))))));
(bsw)((ksr));
return nullptr;
}
(kuc) = (ksr);
(kud) = (true);
}
if(!(kud)){
(ad)((65575LL), (kss), (nullptr));
(bsw)((ksr));
return nullptr;
}
return (ilp)((kss), (2LL), (static_cast<uint64_t>(kuc)));
break;
case u'\u0028':
(kux) = ((dms)());
(ksr) = ((brk)());
if((ksr) != (u'\u0029')){
(ad)((65576LL), (kss), (nullptr));
(bsw)((ksr));
return nullptr;
}
return kux;
break;
case u'\u005B':
(kvb) = (new ecx());
(dmx)((kvb), (2060LL), (kss));
((kvb)->hdx) = (new List_<gd*>());
(ksr) = ((brk)());
if((ksr) != (u'\u005D')){
(ave) = (ksr);
while(true){
(kvh) = ((dms)());
if(!eqAddr_((kvh), (nullptr))){
uh<List_<gd*>*, gd*>(((kvb)->hdx), (new Array_<int64_t>(1, (0LL))), (kvh));
}
(ksr) = ((brk)());
if((ksr) == (u'\u0000')){
break;
}
if((ksr) == (u'\u005D')){
break;
}
if((ksr) != (u'\u002C')){
(dgi)((u'\u002C'), (ksr));
return nullptr;
}
}
}
return kvb;
break;
case u'\u0025':
(kvr) = ((bsb)((false), (false)));
(kvs) = (new ecr());
(dmx)((kvs), (67587LL), (kss));
(kvu) = (new kvv());
(brh)((kvu), (1028LL), (kss), (nullptr), (false));
((kvs)->pf) = (kvu);
((kvs)->gjp) = (kvr);
return kvs;
break;
default:
if(((u'\u0030') <= (ksr)) && ((ksr) <= (u'\u0039'))){
return (kvz)((ksp), (ksq), (ksr));
}
if(((((((u'\u0061') <= (ksr)) && ((ksr) <= (u'\u007A'))) || (((u'\u0041') <= (ksr)) && ((ksr) <= (u'\u005A')))) || ((ksr) == (u'\u005F'))) || ((ksr) == (u'\u0040'))) || ((ksr) == (u'\u005C'))){
(ave) = (ksr);
(kwc) = ((bsb)((true), (true)));
kwe = kwc;
if(cmp_(kwe, (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065'))) == 0){
return (ilp)((kss), (3LL), (0x0000000000000000ULL));
}
else if(cmp_(kwe, (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))) == 0){
return (ilp)((kss), (3LL), (0x0000000000000001ULL));
}
else if(cmp_(kwe, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066'))) == 0){
return (kwi)((kss), (std::numeric_limits<double>::infinity()));
}
else if(cmp_(kwe, (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C'))) == 0){
(kwk) = (new bxm());
(dmx)((kwk), (67584LL), (kss));
(kwm) = (new egu());
(brh)((kwm), (1027LL), (kss), (nullptr), (false));
((kwk)->pf) = (kwm);
return kwk;
}
else if(cmp_(kwe, (new Array_<char16_t>(3, u'\u0064', u'\u0062', u'\u0067'))) == 0){
return (ilp)((kss), (3LL), ((ct) ? (0x0000000000000000ULL) : (0x0000000000000001ULL)));
}
else if(cmp_(kwe, (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0076'))) == 0){
return (ilp)((kss), (0LL), (static_cast<uint64_t>(ec)));
}
else{(kwq) = (new gd());
(dmx)((kwq), (2062LL), (kss));
(dgm)((kwq), (kwc));
return kwq;
}
}
break;
}
(ave) = (ksr);
return nullptr;
}
// makeStrValue
static eco* ktl(ga* kwr /*pos*/, Array_<char16_t>* kws /*value*/){
eco* kwt = nullptr; // expr
cce* kwv = nullptr; // type
bvz* kwx = nullptr; // type2
(kwt) = (new eco());
(dmx)((kwt), (67586LL), (kwr));
(kwv) = (new cce());
(brh)((kwv), (66561LL), (kwr), (nullptr), (false));
(kwx) = (new bvz());
(brh)((kwx), (1026LL), (kwr), (nullptr), (false));
((kwx)->bwa) = (2LL);
((kwv)->ccg) = (kwx);
((kwt)->pf) = (kwv);
((kwt)->gld) = (kws);
return kwt;
}
// escChar
static char16_t kts(char16_t kwy /*c*/){
char16_t kxa = 0;
Array_<char16_t>* kxg = nullptr; // buf
int64_t kxk = 0;
bool kxo = false;
int64_t kxl = 0;
switch(kwy){
case u'\u0022':
case u'\u0027':
case u'\u005C':
return kwy;
break;
case u'\u0030':
return u'\u0000';
break;
case u'\u006E':
return u'\u000A';
break;
case u'\u0074':
return u'\u0009';
break;
case u'\u0075':
(kxg) = (newArray_<char16_t, Array_<char16_t>*>(1, (6LL)));
((kxg)->At(0LL)) = (u'\u0030');
((kxg)->At(1LL)) = (u'\u0078');
for(kxk = (0LL), kxl = (3LL); kxk <= kxl; kxk += (1LL)){
(kwy) = ((fyp)());
if(!((((u'\u0030') <= (kwy)) && ((kwy) <= (u'\u0039'))) || (((u'\u0041') <= (kwy)) && ((kwy) <= (u'\u0046'))))){
(ad)((65572LL), ((dde)()), (nullptr));
return u'\u0075';
}
((kxg)->At((2LL) + (kxk))) = (kwy);
}
return static_cast<char16_t>((eq)((kxg), (&kxo)));
break;
default:
(ad)((65571LL), ((dde)()), (new Array_<Array_<char16_t>*>(1, ((ddf)((kwy))))));
return kwy;
break;
}
}
// _dtor
static void kxq(kvv* kxr){
((kxr)->ne) = (nullptr);
((kxr)->nf) = (nullptr);
((kxr)->ng) = (nullptr);
((kxr)->nh) = (nullptr);
((kxr)->ni) = (nullptr);
((kxr)->nj) = (nullptr);
((kxr)->nk) = (nullptr);
}
// _copy
static kvv* kxs(kvv* kxt){
kvv* kxu = nullptr;
(kxu) = (new kvv());
((kxu)->ne) = (copy_((kxt)->ne));
((kxu)->nf) = (copy_((kxt)->nf));
((kxu)->ng) = (copy_((kxt)->ng));
((kxu)->nh) = (copy_((kxt)->nh));
((kxu)->ni) = (copy_((kxt)->ni));
((kxu)->nj) = (copy_((kxt)->nj));
((kxu)->nk) = (copy_((kxt)->nk));
((kxu)->no) = ((kxt)->no);
((kxu)->lw) = ((kxt)->lw);
return as_<kvv>(classTable_, (kxu), 150);
}
// _toBin
static Array_<uint8_t>* kxv(kvv* kxw){
Array_<uint8_t>* kxx = nullptr;
(kxx) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kxx) = ((kxx)->Cat(toBin_((kxw)->ne)));
(kxx) = ((kxx)->Cat(toBin_((kxw)->nf)));
(kxx) = ((kxx)->Cat(toBin_((kxw)->ng)));
(kxx) = ((kxx)->Cat(toBin_((kxw)->nh)));
(kxx) = ((kxx)->Cat(toBin_((kxw)->ni)));
(kxx) = ((kxx)->Cat(toBin_((kxw)->nj)));
(kxx) = ((kxx)->Cat(toBin_((kxw)->nk)));
(kxx) = ((kxx)->Cat(toBin_((kxw)->no)));
(kxx) = ((kxx)->Cat(toBin_((kxw)->lw)));
return kxx;
}
// _fromBin
static kvv* kyh(kvv* kyi, Array_<uint8_t>* kyj, int64_t* kyk){
kvv* kyl = nullptr;
(kyl) = (new kvv());
((kyl)->ne) = (fromBin_<ga*>((kyj), (*kyk)));
((kyl)->nf) = (fromBin_<Array_<char16_t>*>((kyj), (*kyk)));
((kyl)->ng) = (fromBin_<fx*>((kyj), (*kyk)));
((kyl)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kyj), (*kyk)));
((kyl)->ni) = (fromBin_<Array_<char16_t>*>((kyj), (*kyk)));
((kyl)->nj) = (fromBin_<fx*>((kyj), (*kyk)));
((kyl)->nk) = (fromBin_<fy*>((kyj), (*kyk)));
((kyl)->no) = (fromBin_<bool>((kyj), (*kyk)));
((kyl)->lw) = (fromBin_<int64_t>((kyj), (*kyk)));
return kyl;
}
// parseExprNumber
static gd* kvz(int64_t kym /*row*/, int64_t kyn /*col*/, char16_t kyo /*c*/){
ga* kyp = nullptr; // pos
Array_<char16_t>* kyq = nullptr; // buf
int64_t kyr = 0; // len
int64_t kys = 0; // base
bool kyt = false; // changeBase
bool kyu = false; // floatType
int64_t kyv = 0; // byteSize
char16_t kza = 0;
double lam = 0.0; // value
bool lao = false; // success
ecu* lar = nullptr; // ast2
bxm* las = nullptr; // ast
char16_t lax = 0;
uint64_t lbh = 0; // value
bool lbj = false; // success
bxl* lbp = nullptr; // ast2
bvz* lbs = nullptr; // type
cci* lbx = nullptr; // type
(kyp) = ((bri)((bf), (kym), (kyn)));
(kyq) = (newArray_<char16_t, Array_<char16_t>*>(1, (1024LL)));
(kyr) = (0LL);
(kys) = (10LL);
(kyt) = (false);
(kyu) = (false);
(kyv) = (0LL);
while(true){
kza = kyo;
if(kza == (u'\u0078')){
if((kyt) || (kyu)){
(ad)((65577LL), (kyp), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(1, u'\u0078')))));
(bsw)((kyo));
return nullptr;
}
if(((kyr) != (1LL)) || (((kyq)->At(0LL)) != (u'\u0030'))){
(ad)((65579LL), (kyp), (nullptr));
(bsw)((kyo));
return nullptr;
}
(kyr) = (0LL);
(kys) = (16LL);
(kyt) = (true);
}
else if(kza == (u'\u002E')){
if((kyt) || (kyu)){
(ad)((65577LL), (kyp), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(1, u'\u002E')))));
(bsw)((kyo));
return nullptr;
}
if((kyr) == (1024LL)){
(ad)((65578LL), (kyp), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kyq), (new Array_<int64_t>(1, (0LL))), (0LL), (kyr))))));
(bsw)((kyo));
return nullptr;
}
((kyq)->At(kyr)) = (kyo);
(kyr) = ((kyr) + (1LL));
(kyu) = (true);
}
else if((u'\u0030') <= kza && kza <= (u'\u0039') || (u'\u0041') <= kza && kza <= (u'\u0046')){
if((kyr) == (1024LL)){
(ad)((65578LL), (kyp), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kyq), (new Array_<int64_t>(1, (0LL))), (0LL), (kyr))))));
(bsw)((kyo));
return nullptr;
}
((kyq)->At(kyr)) = (kyo);
(kyr) = ((kyr) + (1LL));
}
else{(ave) = (kyo);
break;
}
(kyo) = ((bsx)());
}
if(((kyr) == (0LL)) || (((kyq)->At((kyr) - (1LL))) == (u'\u002E'))){
(ad)((65577LL), (kyp), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(1, u'\u002E')))));
(bsw)(((bsx)()));
return nullptr;
}
if(kyu){
(kyo) = ((bsx)());
if((kyo) == (u'\u0065')){
if((kyr) == (1024LL)){
(ad)((65578LL), (kyp), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kyq), (new Array_<int64_t>(1, (0LL))), (0LL), (kyr))))));
(bsw)((kyo));
return nullptr;
}
((kyq)->At(kyr)) = (kyo);
(kyr) = ((kyr) + (1LL));
(kyo) = ((bsx)());
if(((kyo) != (u'\u002B')) && ((kyo) != (u'\u002D'))){
(ad)((65580LL), (kyp), (nullptr));
(bsw)((kyo));
return nullptr;
}
if((kyr) == (1024LL)){
(ad)((65578LL), (kyp), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kyq), (new Array_<int64_t>(1, (0LL))), (0LL), (kyr))))));
(bsw)((kyo));
return nullptr;
}
((kyq)->At(kyr)) = (kyo);
(kyr) = ((kyr) + (1LL));
(kyo) = ((bsx)());
if(!(((u'\u0030') <= (kyo)) && ((kyo) <= (u'\u0039')))){
(ad)((65580LL), (kyp), (nullptr));
(bsw)((kyo));
return nullptr;
}
do{
if((kyr) == (1024LL)){
(ad)((65578LL), (kyp), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kyq), (new Array_<int64_t>(1, (0LL))), (0LL), (kyr))))));
(bsw)((kyo));
return nullptr;
}
((kyq)->At(kyr)) = (kyo);
(kyr) = ((kyr) + (1LL));
(kyo) = ((bsx)());
}while(((u'\u0030') <= (kyo)) && ((kyo) <= (u'\u0039')));
}
(ave) = (kyo);
(lam) = ((lan)((auw<Array_<char16_t>*>((kyq), (new Array_<int64_t>(1, (0LL))), (0LL), (kyr))), (&lao)));
if(!(lao)){
(ad)((65581LL), (kyp), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kyq), (new Array_<int64_t>(1, (0LL))), (0LL), (kyr))))));
(bsw)(((bsx)()));
return nullptr;
}
(lar) = (new ecu());
(dmx)((lar), (67588LL), (kyp));
((lar)->ggf) = (lam);
(las) = (lar);
}
else{
(kyo) = ((bsx)());
if((kyo) == (u'\u0062')){
(kyo) = ((bsx)());
switch(kyo){
case u'\u0038':
(kyv) = (1LL);
break;
case u'\u0031':
(dgn)((u'\u0036'), (false));
(kyv) = (2LL);
break;
case u'\u0033':
(dgn)((u'\u0032'), (false));
(kyv) = (4LL);
break;
case u'\u0036':
(dgn)((u'\u0034'), (false));
(kyv) = (8LL);
break;
default:
(ad)((65582LL), (kyp), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kyq), (new Array_<int64_t>(1, (0LL))), (0LL), (kyr))))));
(bsw)((kyo));
break;
}
}
else{
(ave) = (kyo);
}
if((kys) == (10LL)){
(lbh) = ((lbi)((auw<Array_<char16_t>*>((kyq), (new Array_<int64_t>(1, (0LL))), (0LL), (kyr))), (&lbj)));
}
else{
if(!((kys) == (16LL))){
throw 0xE9170000U;
}
(lbh) = ((lbi)(((new Array_<char16_t>(2, u'\u0030', u'\u0078'))->Cat(auw<Array_<char16_t>*>((kyq), (new Array_<int64_t>(1, (0LL))), (0LL), (kyr)))), (&lbj)));
}
if(!(lbj)){
(ad)((65583LL), (kyp), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kyq), (new Array_<int64_t>(1, (0LL))), (0LL), (kyr))))));
(bsw)(((bsx)()));
return nullptr;
}
if((((((kyv) == (1LL)) && ((lbh) > (0x00000000000000FFULL))) || (((kyv) == (2LL)) && ((lbh) > (0x000000000000FFFFULL)))) || (((kyv) == (4LL)) && ((lbh) > (0x00000000FFFFFFFFULL)))) || (((kyv) == (0LL)) && ((lbh) > (0x7FFFFFFFFFFFFFFFULL)))){
(ad)((65583LL), (kyp), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kyq), (new Array_<int64_t>(1, (0LL))), (0LL), (kyr))))));
(bsw)(((bsx)()));
return nullptr;
}
(lbp) = (new bxl());
(dmx)((lbp), (67585LL), (kyp));
((lbp)->bxn) = (lbh);
(las) = (lbp);
}
if((kyv) == (0LL)){
(lbs) = (new bvz());
(brh)((lbs), (1026LL), (kyp), (nullptr), (false));
if(kyu){
((lbs)->bwa) = (1LL);
}
else{
((lbs)->bwa) = (0LL);
}
((las)->pf) = (lbs);
}
else{
(lbx) = (new cci());
(brh)((lbx), (1025LL), (kyp), (nullptr), (false));
((lbx)->ccj) = (kyv);
((las)->pf) = (lbx);
}
return las;
}
// makeFloatValue
static ecu* kwi(ga* lby /*pos*/, double lbz /*value*/){
ecu* lca = nullptr; // expr
bvz* lcc = nullptr; // type
(lca) = (new ecu());
(dmx)((lca), (67588LL), (lby));
(lcc) = (new bvz());
(brh)((lcc), (1026LL), (lby), (nullptr), (false));
((lcc)->bwa) = (1LL);
((lca)->pf) = (lcc);
((lca)->ggf) = (lbz);
return lca;
}
// _toFloat
static double lan(Array_<char16_t>* lcd /*me_*/, bool* lce /*success*/){
std::u16string s_ = lcd->B;
const std::string& t_ = utf16ToUtf8_(s_);
try{
size_t s_;
double v_ = std::stod(t_, &s_);
if(s_ == t_.size()){
*lce = true;
return v_;
}else{
*lce = false;
return 0;
}
}catch(...){
*lce = false;
return 0;
}
}
// _toBit64
static uint64_t lbi(Array_<char16_t>* lcf /*me_*/, bool* lcg /*success*/){
std::u16string s_ = lcf->B;
const std::string& t_ = utf16ToUtf8_(s_);
try{
size_t s_;
uint64_t v_ = t_.size() > 2 && t_[0] == '0' && t_[1] == 'x' ? std::stoull(t_, &s_, 16) : std::stoull(t_, &s_);
if(s_ == t_.size()){
*lcg = true;
return v_;
}else{
*lcg = false;
return 0;
}
}catch(...){
*lcg = false;
return 0;
}
}
}
int main(int c_, char** v_){
argc_ = c_ - 1;
argv_ = v_ + 1;
classTable_[0] = 0;
classTable_[2] = 0;
classTable_[6] = 0;
classTable_[4] = 2;
classTable_[12] = 4;
classTable_[14] = 4;
classTable_[10] = 4;
classTable_[16] = 4;
classTable_[8] = 4;
classTable_[18] = 0;
classTable_[20] = 0;
classTable_[24] = 0;
classTable_[22] = 4;
classTable_[26] = 0;
classTable_[28] = 0;
classTable_[30] = 0;
classTable_[34] = 0;
classTable_[32] = 4;
classTable_[36] = 2;
classTable_[38] = 4;
classTable_[40] = 0;
classTable_[42] = 2;
classTable_[44] = 4;
classTable_[46] = 4;
classTable_[48] = 4;
classTable_[50] = 16;
classTable_[54] = 50;
classTable_[58] = 0;
classTable_[56] = 16;
classTable_[52] = 50;
classTable_[60] = 12;
classTable_[62] = 16;
classTable_[66] = 0;
classTable_[64] = 14;
classTable_[68] = 14;
classTable_[70] = 68;
classTable_[72] = 14;
classTable_[74] = 12;
classTable_[76] = 74;
classTable_[78] = 12;
classTable_[82] = 0;
classTable_[80] = 74;
classTable_[84] = 74;
classTable_[86] = 74;
classTable_[90] = 16;
classTable_[88] = 50;
classTable_[94] = 16;
classTable_[92] = 50;
classTable_[96] = 50;
classTable_[98] = 96;
classTable_[100] = 96;
classTable_[102] = 16;
classTable_[104] = 16;
classTable_[106] = 16;
classTable_[108] = 74;
classTable_[110] = 14;
classTable_[112] = 14;
classTable_[114] = 14;
classTable_[116] = 14;
classTable_[118] = 14;
classTable_[120] = 14;
classTable_[122] = 14;
classTable_[124] = 14;
classTable_[126] = 14;
classTable_[128] = 68;
classTable_[130] = 68;
classTable_[132] = 68;
classTable_[134] = 14;
classTable_[136] = 16;
classTable_[138] = 12;
classTable_[140] = 16;
classTable_[142] = 16;
classTable_[144] = 16;
classTable_[146] = 16;
classTable_[148] = 16;
classTable_[150] = 12;
init_();
a();
return 0;
}
