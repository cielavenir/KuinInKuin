#include "common.h"
namespace {
// Class
class fz : public Class_{
public:
fz();
virtual int64_t cmp_(Class_* t) override;
virtual Class_* copy_(Class_* t) override;
};
// HasType
class fy : public fz{
public:
fy();
virtual Class_* copy_(Class_* t) override;
int64_t lw; // typeId
};
// Pos
class ga : public fz{
public:
ga();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* hk; // srcName
int64_t hl; // row
int64_t hm; // col
};
// Ast
class fx : public fy{
public:
fx();
virtual int64_t cmp_(Class_* t) override;
virtual Class_* copy_(Class_* t) override;
ga* ne; // pos
Array_<char16_t>* nf; // name
fx* ng; // scopeParent
Dict_<Array_<char16_t>*, fx*>* nh; // scopeChildren
Array_<char16_t>* ni; // refName
fx* nj; // refItem
fy* nk; // extra
bool no; // publicInSrc
};
// AstType
class gc : public fx{
public:
gc();
virtual Class_* copy_(Class_* t) override;
};
// AstExpr
class gd : public fx{
public:
gd();
virtual Class_* copy_(Class_* t) override;
gc* pf; // type
int64_t pj; // varKind
};
// AstArg
class gb : public fx{
public:
gb();
virtual Class_* copy_(Class_* t) override;
int64_t qk; // kind
bool ql; // refVar
gc* qf; // type
gd* qg; // expr
};
// AstStat
class ge : public fx{
public:
ge();
virtual Class_* copy_(Class_* t) override;
};
// AstFunc
class fw : public fx{
public:
fw();
virtual Class_* copy_(Class_* t) override;
int64_t sm; // funcOption
List_<Array_<char16_t>*>* sf; // funcAttr
List_<gb*>* sg; // args
gc* sh; // ret_
List_<ge*>* si; // stats
};
// ResFiles
class gj : public fz{
public:
gj();
virtual Class_* copy_(Class_* t) override;
List_<Array_<char16_t>*>* gk; // files
};
// Bool
class kl : public fz{
public:
kl();
virtual int64_t cmp_(Class_* t) override;
virtual Class_* copy_(Class_* t) override;
bool km; // value
};
// AstClassItem
class uo : public fz{
public:
uo();
virtual Class_* copy_(Class_* t) override;
bool azs; // public
bool azt; // override
fx* azn; // def
uo* azo; // parentItem
};
// AstClass
class un : public fx{
public:
un();
virtual Class_* copy_(Class_* t) override;
List_<uo*>* bai; // items
};
// TmpVar
class up : public fz{
public:
up();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bbg; // identifier
gc* bbh; // type
};
// TmpVar
class vc : public fz{
public:
vc();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bih; // identifier
gc* bii; // type
};
// Reader
class avb : public fz{
public:
avb();
virtual Class_* copy_(Class_* t) override;
int64_t bon; // handle
int64_t bpu; // delimiterNum
int64_t bpv; // delimiters
int64_t bpw; // fileSize_
};
// ScopeRefedItem
class avn : public fz{
public:
avn();
virtual Class_* copy_(Class_* t) override;
fx* awm; // def
fx* axh; // scope
};
// AstRoot
class avm : public fx{
public:
avm();
virtual Class_* copy_(Class_* t) override;
List_<fx*>* azc; // items
List_<avn*>* awf; // scopeRefedItems
};
// CppInfo
class bca : public fy{
public:
bca();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bea; // id
Array_<char16_t>* bzy; // breakLabel
Array_<char16_t>* cab; // skipLabel
int64_t bfv; // classTableOffset
bool bcc; // alreadyWritten
bool cae; // breakLabelUsed
bool caf; // skipLabelUsed
};
// AstVar
class bgk : public fx{
public:
bgk();
virtual Class_* copy_(Class_* t) override;
gb* bgm; // arg
};
// Writer
class bhq : public fz{
public:
bhq();
virtual Class_* copy_(Class_* t) override;
int64_t cos; // handle
};
// WebInfo
class biz : public fy{
public:
biz();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bjp; // id
Array_<char16_t>* cra; // breakSkipLabel
bool bjb; // alreadyWritten
};
// AstConst
class bro : public fx{
public:
bro();
virtual Class_* copy_(Class_* t) override;
gb* bse; // arg
};
// AstAlias
class brr : public fx{
public:
brr();
virtual Class_* copy_(Class_* t) override;
gc* dih; // type
};
// AstEnum
class brx : public fx{
public:
brx();
virtual Class_* copy_(Class_* t) override;
List_<gd*>* dld; // items
};
// AstStatBreakable
class buu : public ge{
public:
buu();
virtual Class_* copy_(Class_* t) override;
gb* bve; // blockVar
};
// AstStatBlock
class buv : public buu{
public:
buv();
virtual Class_* copy_(Class_* t) override;
List_<ge*>* bvh; // stats
};
// ExprPair
class bux : public fz{
public:
bux();
virtual Class_* copy_(Class_* t) override;
gd* bwt; // expr0
gd* bwy; // expr1
};
// AstStatCatch
class buw : public ge{
public:
buw();
virtual Class_* copy_(Class_* t) override;
List_<bux*>* bwg; // conds
buv* bwj; // statBlock
};
// AstStatTry
class but : public buu{
public:
but();
virtual Class_* copy_(Class_* t) override;
buv* bvi; // statBlock
List_<buw*>* bvj; // catches
buv* bvm; // finallyStatBlock
};
// AstTypePrim
class bvc : public gc{
public:
bvc();
virtual Class_* copy_(Class_* t) override;
int64_t bvd; // kind
};
// AstStatDo
class bvt : public ge{
public:
bvt();
virtual Class_* copy_(Class_* t) override;
gd* bwd; // expr
};
// AstExprCallArg
class bvx : public fz{
public:
bvx();
virtual Class_* copy_(Class_* t) override;
gd* bxl; // arg
bool bxh; // refVar
bool bxi; // skipVar
};
// AstExprCall
class bvw : public gd{
public:
bvw();
virtual Class_* copy_(Class_* t) override;
gd* bwc; // func_
List_<bvx*>* bvz; // args
};
// AstExprValue
class bwp : public gd{
public:
bwp();
virtual Class_* copy_(Class_* t) override;
};
// AstExprValuePrim
class bwo : public bwp{
public:
bwo();
virtual Class_* copy_(Class_* t) override;
uint64_t bwq; // value
};
// AstExpr2
class bza : public gd{
public:
bza();
virtual Class_* copy_(Class_* t) override;
int64_t bzb; // kind
gd* bze; // children0
gd* bzf; // children1
};
// AstTypeNullable
class cbi : public gc{
public:
cbi();
virtual Class_* copy_(Class_* t) override;
};
// AstTypeArray
class cbh : public cbi{
public:
cbh();
virtual Class_* copy_(Class_* t) override;
gc* cbj; // itemType
};
// AstTypeBit
class cbl : public gc{
public:
cbl();
virtual Class_* copy_(Class_* t) override;
int64_t cbm; // size
};
// AstTypeFuncArg
class cbq : public fz{
public:
cbq();
virtual Class_* copy_(Class_* t) override;
gc* ccf; // arg
bool cch; // refVar
};
// AstTypeFunc
class cbp : public cbi{
public:
cbp();
virtual Class_* copy_(Class_* t) override;
int64_t ekp; // funcOption
List_<Array_<char16_t>*>* ekl; // funcAttr
List_<cbq*>* cbx; // args
gc* cbs; // ret_
};
// AstTypeGen
class ccm : public cbi{
public:
ccm();
virtual Class_* copy_(Class_* t) override;
int64_t ccp; // kind
gc* ccr; // itemType
};
// AstTypeDict
class ccx : public cbi{
public:
ccx();
virtual Class_* copy_(Class_* t) override;
gc* ccy; // itemTypeKey
gc* ccz; // itemTypeValue
};
// AstStatElIf
class ckh : public ge{
public:
ckh();
virtual Class_* copy_(Class_* t) override;
gd* eod; // cond
buv* eoe; // statBlock
};
// AstStatIf
class ckg : public buu{
public:
ckg();
virtual Class_* copy_(Class_* t) override;
gd* ens; // cond
buv* enu; // statBlock
List_<ckh*>* eoa; // elIfs
buv* eog; // elseStatBlock
};
// AstStatCase
class ckl : public ge{
public:
ckl();
virtual Class_* copy_(Class_* t) override;
List_<bux*>* erb; // conds
buv* erp; // statBlock
};
// AstStatSwitch
class ckk : public buu{
public:
ckk();
virtual Class_* copy_(Class_* t) override;
gd* eqt; // cond
List_<ckl*>* eqx; // cases
buv* err; // defaultStatBlock
};
// AstStatSkipable
class ckp : public buu{
public:
ckp();
virtual Class_* copy_(Class_* t) override;
};
// AstStatWhile
class cko : public ckp{
public:
cko();
virtual Class_* copy_(Class_* t) override;
gd* euw; // cond
bool eve; // skip_
List_<ge*>* euy; // stats
};
// AstStatFor
class cks : public ckp{
public:
cks();
virtual Class_* copy_(Class_* t) override;
gd* exv; // start
gd* exu; // cond
gd* exw; // step
List_<ge*>* eye; // stats
};
// AstStatThrow
class ckx : public ge{
public:
ckx();
virtual Class_* copy_(Class_* t) override;
gd* fav; // code
};
// AstStatRet
class clc : public ge{
public:
clc();
virtual Class_* copy_(Class_* t) override;
gd* fcb; // value
};
// AstStatAssert
class cll : public ge{
public:
cll();
virtual Class_* copy_(Class_* t) override;
gd* fdp; // cond
};
// AstTypeUser
class dfx : public cbi{
public:
dfx();
virtual Class_* copy_(Class_* t) override;
};
// AstExpr1
class eai : public gd{
public:
eai();
virtual Class_* copy_(Class_* t) override;
int64_t ges; // kind
gd* gem; // child
};
// AstExpr3
class ean : public gd{
public:
ean();
virtual Class_* copy_(Class_* t) override;
gd* gpq; // children0
gd* gpt; // children1
gd* gpw; // children2
};
// AstExprNew
class eaq : public gd{
public:
eaq();
virtual Class_* copy_(Class_* t) override;
gc* grr; // itemType
};
// AstExprNewArray
class eat : public gd{
public:
eat();
virtual Class_* copy_(Class_* t) override;
List_<gd*>* gtc; // idces
gc* gtl; // itemType
};
// AstExprAs
class eaw : public gd{
public:
eaw();
virtual Class_* copy_(Class_* t) override;
int64_t gvh; // kind
gd* guz; // child
gc* gvc; // childType
};
// AstExprToBin
class eaz : public gd{
public:
eaz();
virtual Class_* copy_(Class_* t) override;
gd* gzg; // child
gc* gzm; // childType
};
// AstExprFromBin
class ebc : public gd{
public:
ebc();
virtual Class_* copy_(Class_* t) override;
gd* har; // child
gc* haw; // childType
gd* hax; // offset
};
// AstExprArray
class ebh : public gd{
public:
ebh();
virtual Class_* copy_(Class_* t) override;
gd* hej; // var_
gd* heo; // idx
};
// AstExprDot
class ebk : public gd{
public:
ebk();
virtual Class_* copy_(Class_* t) override;
gd* hcr; // var_
Array_<char16_t>* hgh; // member
uo* hgu; // classItem
};
// AstExprValueStr
class ebr : public bwp{
public:
ebr();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* gkg; // value
};
// AstExprValueEnumElement
class ebu : public bwp{
public:
ebu();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* gis; // identifier
};
// AstExprValueFloat
class ebx : public bwp{
public:
ebx();
virtual Class_* copy_(Class_* t) override;
double gfi; // value
};
// AstExprValueArray
class eca : public gd{
public:
eca();
virtual Class_* copy_(Class_* t) override;
List_<gd*>* hda; // values
};
// AstStatVar
class edr : public ge{
public:
edr();
virtual Class_* copy_(Class_* t) override;
bgk* edt; // def
};
// AstTypeNull
class efx : public gc{
public:
efx();
virtual Class_* copy_(Class_* t) override;
};
// AstStatFunc
class igf : public ge{
public:
igf();
virtual Class_* copy_(Class_* t) override;
fw* igg; // def
};
// AstStatConst
class igj : public ge{
public:
igj();
virtual Class_* copy_(Class_* t) override;
bro* igk; // def
};
// AstStatAlias
class igm : public ge{
public:
igm();
virtual Class_* copy_(Class_* t) override;
brr* ign; // def
};
// AstStatClass
class igp : public ge{
public:
igp();
virtual Class_* copy_(Class_* t) override;
un* igq; // def
};
// AstStatEnum
class igs : public ge{
public:
igs();
virtual Class_* copy_(Class_* t) override;
brx* igt; // def
};
// AstTypeEnumElement
class kuy : public gc{
public:
kuy();
virtual Class_* copy_(Class_* t) override;
};
static void a();
static void e();
static void f();
static void g();
static void i();
static void j();
static void l(int64_t bp /*excpt*/);
static bool o();
static void q(int64_t fh /*code*/);
static void u(Array_<char16_t>* fm /*str*/);
template<typename T_> static Array_<char16_t>* v(T_ fn /*me_*/, Array_<int64_t>* fo /*type*/);
static bool ab();
static void ad(int64_t hb /*id*/, ga* hc /*pos*/, Array_<Array_<char16_t>*>* hd /*args*/);
static Array_<Array_<char16_t>*>* br();
static bool cf(Array_<char16_t>** hq /*out*/, Array_<Array_<char16_t>*>* hr /*cmdLines*/, int64_t* hs /*idx*/, char16_t ht /*option*/);
static bool cs(bool* hx /*out*/, char16_t hy /*option*/);
template<typename T_, typename K_, typename V_> static void dv(T_ ib /*me_*/, Array_<int64_t>* ic /*type*/, K_ id /*key*/, V_ ie /*item*/);
static int64_t eo(int64_t ig /*min*/, int64_t ih /*max*/);
static int64_t eq(Array_<char16_t>* ii /*me_*/, bool* ij /*success*/);
static Array_<char16_t>* ew(Array_<char16_t>* ik /*path*/);
static Array_<char16_t>* ey(Array_<char16_t>* ix /*path*/);
static Array_<char16_t>* fd(Array_<char16_t>* jj /*path*/);
static Array_<char16_t>* ff(Array_<char16_t>* jw /*path*/);
static int64_t fr();
static Dict_<Array_<char16_t>*, fx*>* ft();
static fw* fv(Dict_<Array_<char16_t>*, fx*>* kq /*asts*/);
static void kx(fz* ky /*me*/);
static void kz(fz* la /*me*/);
static int64_t lb(fz* lc /*me*/, fz* ld /*t*/);
static fz* le(fz* lf /*me*/);
static Array_<uint8_t>* lh(fz* li /*me*/);
static fz* lk(fz* ll /*me*/, Array_<uint8_t>* lm /*bin*/, int64_t* ln /*idx*/);
static Array_<char16_t>* lp(fz* lq /*me*/);
static void lr(fy* ls);
static fy* lt(fy* lu);
static Array_<uint8_t>* lx(fy* ly);
static fy* mb(fy* mc, Array_<uint8_t>* md, int64_t* me);
static int64_t mg(fx* mh /*me*/, fx* mi /*t*/);
static void mm(ga* mn);
static ga* mo(ga* mp);
static Array_<uint8_t>* mr(ga* ms);
static ga* mx(ga* my, Array_<uint8_t>* mz, int64_t* na);
static void nc(fx* nd);
static fx* nl(fx* nm);
static Array_<uint8_t>* np(fx* nq);
static fx* ob(fx* oc, Array_<uint8_t>* od, int64_t* oe);
static void og(gc* oh);
static gc* oi(gc* oj);
static Array_<uint8_t>* ol(gc* om);
static gc* oy(gc* oz, Array_<uint8_t>* pa, int64_t* pb);
static void pd(gd* pe);
static gd* pg(gd* ph);
static Array_<uint8_t>* pk(gd* pl);
static gd* py(gd* pz, Array_<uint8_t>* qa, int64_t* qb);
static void qd(gb* qe);
static gb* qh(gb* qi);
static Array_<uint8_t>* qm(gb* qn);
static gb* rc(gb* rd, Array_<uint8_t>* re, int64_t* rf);
static void rh(ge* ri);
static ge* rj(ge* rk);
static Array_<uint8_t>* rm(ge* rn);
static ge* ry(ge* rz, Array_<uint8_t>* sa, int64_t* sb);
static void sd(fw* se);
static fw* sj(fw* sk);
static Array_<uint8_t>* sn(fw* so);
static fw* te(fw* tf, Array_<uint8_t>* tg, int64_t* th);
static void tj(gj* tk);
static gj* tl(gj* tm);
static Array_<uint8_t>* to(gj* tp);
static gj* ts(gj* tt, Array_<uint8_t>* tu, int64_t* tv);
static bool gm(Array_<char16_t>* tx /*path*/);
typedef bool(*ub)(Array_<char16_t>*, bool, fz*);
static bool go(Array_<char16_t>* ty /*path*/, bool tz /*recursion*/, ub ua /*callback*/, fz* uc /*data*/);
static bool gp(Array_<char16_t>* ud /*path*/, bool ue /*isDir*/, fz* uf /*data*/);
static bool gu(fw* uk /*entry*/, List_<Array_<char16_t>*>* ul /*resFiles*/);
static bool gy(fw* va /*entry*/, List_<Array_<char16_t>*>* vb /*resFiles*/);
static Array_<char16_t>* hh(int64_t vl /*id*/, Array_<Array_<char16_t>*>* vm /*args*/);
static int64_t ato(kl* atp /*me*/, kl* atq /*t*/);
static Array_<char16_t>* ats(kl* att /*me*/);
static void atu(kl* atv);
static kl* atw(kl* atx);
static Array_<uint8_t>* atz(kl* aua);
static kl* aud(kl* aue, Array_<uint8_t>* auf, int64_t* aug);
template<typename T_, typename K_, typename V_> static bool ko(T_ aui /*me_*/, Array_<int64_t>* auj /*type*/, const void* auk /*callback*/, fz* aul /*data*/);
static bool kp(Array_<char16_t>* aum /*key*/, fx* aun /*value*/, fz* auo /*data*/);
static fw* ks();
static bool kv(Array_<char16_t>* awb /*key*/, fx* awc /*value*/, fz* awd /*data*/);
static fw* kw(fw* ayv /*mainFunc*/);
static uint64_t mk(fz* aze /*class_*/);
template<typename T_, typename C_> static void uj(T_ azf /*me_*/, Array_<int64_t>* azg /*type*/, C_ azh /*item*/);
template<typename T_, typename C_> static void um(T_ azi /*me_*/, Array_<int64_t>* azj /*type*/, C_ azk /*item*/);
static void azl(uo* azm);
static uo* azp(uo* azq);
static Array_<uint8_t>* azu(uo* azv);
static uo* bab(uo* bac, Array_<uint8_t>* bad, int64_t* bae);
static void bag(un* bah);
static un* baj(un* bak);
static Array_<uint8_t>* bam(un* ban);
static un* baz(un* bba, Array_<uint8_t>* bbb, int64_t* bbc);
static void bbe(up* bbf);
static up* bbi(up* bbj);
static Array_<uint8_t>* bbl(up* bbm);
static up* bbq(up* bbr, Array_<uint8_t>* bbs, int64_t* bbt);
template<typename T_, typename R_> static R_ uu(T_ bbv /*me_*/, Array_<int64_t>* bbw /*type*/);
static void uv(fw* bbx /*ast*/);
static void uy(un* bfm /*ast*/);
static void uz(List_<Array_<char16_t>*>* bhm /*resFiles*/);
static void bif(vc* big);
static vc* bij(vc* bik);
static Array_<uint8_t>* bim(vc* bin);
static vc* bir(vc* bis, Array_<uint8_t>* bit, int64_t* biu);
static void vg(fw* biw /*ast*/);
static void vj(un* bkv /*ast*/);
static void vk(List_<Array_<char16_t>*>* blr /*resFiles*/);
static int64_t atr(int64_t bng /*me_*/);
static bool aus(Array_<char16_t>* bnh /*name*/);
static Array_<char16_t>* aux(Array_<char16_t>* boa /*path*/);
template<typename T_> static T_ auy(T_ boh /*me_*/, Array_<int64_t>* boi /*type*/, int64_t boj /*start*/, int64_t bok /*len*/);
static avb* ava(avb* bol /*me2*/, Array_<char16_t>* bom /*path*/);
static void boo(avb* bop /*me*/);
static void avo(avb* boq /*me*/);
static void bor(avb* bos /*me*/, int64_t bot /*origin*/, int64_t bou /*pos*/);
static int64_t bov(avb* bow /*me*/);
static void box(avb* boy /*me*/, Array_<char16_t>* boz /*delimiters*/);
static Array_<uint8_t>* bpa(avb* bpb /*me*/, int64_t bpc /*size*/);
static char16_t bpd(avb* bpe /*me*/);
static int64_t bpf(avb* bpg /*me*/);
static double bph(avb* bpi /*me*/);
static char16_t bpj(avb* bpk /*me*/);
static Array_<char16_t>* bpl(avb* bpm /*me*/);
static Array_<char16_t>* bmt(avb* bpn /*me*/);
static int64_t bpo(avb* bpp /*me*/);
static bool bmr(avb* bpq /*me*/);
static avb* bpr(avb* bps);
static Array_<uint8_t>* bpx(avb* bpy);
static avb* bqe(avb* bqf, Array_<uint8_t>* bqg, int64_t* bqh);
static avm* avl();
static void bsh(avn* bsi);
static avn* bsj(avn* bsk);
static Array_<uint8_t>* bsm(avn* bsn);
static avn* bsr(avn* bss, Array_<uint8_t>* bst, int64_t* bsu);
static void bsw(avm* bsx);
static avm* bsy(avm* bsz);
static Array_<uint8_t>* btb(avm* btc);
static avm* btp(avm* btq, Array_<uint8_t>* btr, int64_t* bts);
template<typename T_, typename C_, typename R_> static R_ avq(T_ btu /*me_*/, Array_<int64_t>* btv /*type*/, C_ btw /*key*/, bool* btx /*existed*/);
template<typename T_> static void awg(T_ bty /*me_*/, Array_<int64_t>* btz /*type*/);
template<typename T_> static bool awi(T_ bua /*me_*/, Array_<int64_t>* bub /*type*/);
template<typename T_, typename R_> static R_ awk(T_ buc /*me_*/, Array_<int64_t>* bud /*type*/);
template<typename T_, typename C_> static int64_t awp(T_ bue /*me_*/, Array_<int64_t>* buf /*type*/, C_ bug /*item*/, int64_t buh /*start*/);
template<typename T_> static T_ ayg(T_ bui /*me_*/, Array_<int64_t>* buj /*type*/, T_ buk /*n*/);
template<typename T_> static void ayu(T_ bul /*me_*/, Array_<int64_t>* bum /*type*/);
static fw* ayy(fw* bun /*mainFunc*/);
static void ayz(fw* bxv /*ast*/);
static bool azd(Array_<char16_t>* byf /*key*/, fx* byg /*value*/, fz* byh /*data*/);
static bca* bbz(fx* bzr /*ast*/);
static void cag(bca* cah);
static bca* cai(bca* caj);
static Array_<uint8_t>* cal(bca* cam);
static bca* caw(bca* cax, Array_<uint8_t>* cay, int64_t* caz);
static Array_<char16_t>* bcv(gc* cbb /*type*/);
static bool bdi(gc* cdr /*type*/);
static void bes(List_<Array_<char16_t>*>* cds /*codes*/, Array_<char16_t>* cdt /*attr*/, List_<gb*>* cdu /*args*/, List_<uo*>* cdv /*members*/);
template<typename T_> static void bew(T_ cjt /*me_*/, Array_<int64_t>* cju /*type*/);
template<typename T_> static int64_t bey(T_ cjv /*me_*/, Array_<int64_t>* cjw /*type*/);
static void bez(List_<ge*>* cjx /*stats*/, ge* cjy /*breakStat*/, ge* cjz /*skipStat*/);
template<typename T_> static void bfa(T_ cln /*me_*/, Array_<int64_t>* clo /*type*/, int64_t clp /*offset*/);
template<typename T_, typename C_> static void bfg(T_ clq /*me_*/, Array_<int64_t>* clr /*type*/, C_ cls /*item*/);
static Array_<char16_t>* bfh(gc* clt /*type*/);
template<typename T_> static void bfj(T_ cmk /*me_*/, Array_<int64_t>* cml /*type*/);
static Array_<char16_t>* bfq(un* cmm /*ast*/);
static void cnj(bgk* cnk);
static bgk* cnl(bgk* cnm);
static Array_<uint8_t>* cno(bgk* cnp);
static bgk* cob(bgk* coc, Array_<uint8_t>* cod, int64_t* coe);
static fw* bgp(un* cog /*ast*/, Array_<char16_t>* coh /*name*/);
static bool bhn(Array_<char16_t>* con /*dst*/, Array_<char16_t>* coo /*src*/);
static bhq* bhp(bhq* cop /*me2*/, Array_<char16_t>* coq /*path*/, bool cor /*append*/);
static void cot(bhq* cou /*me*/);
static void bie(bhq* cov /*me*/);
static void cow(bhq* cox /*me*/, int64_t coy /*origin*/, int64_t coz /*pos*/);
static int64_t cpa(bhq* cpb /*me*/);
static void cpc(bhq* cpd /*me*/, Array_<uint8_t>* cpe /*bin*/);
static void cpf(bhq* cpg /*me*/, int64_t cph /*n*/);
static void cpp(bhq* cpq /*me*/, double cpr /*n*/);
static void cpo(bhq* cpy /*me*/, char16_t cpz /*n*/);
static void bhr(bhq* cqa /*me*/, Array_<char16_t>* cqb /*n*/);
static bhq* cqh(bhq* cqi);
static Array_<uint8_t>* cqk(bhq* cql);
static bhq* cqo(bhq* cqp, Array_<uint8_t>* cqq, int64_t* cqr);
static biz* biy(fx* cqt /*ast*/);
static void crc(biz* crd);
static biz* cre(biz* crf);
static Array_<uint8_t>* crh(biz* cri);
static biz* cro(biz* crp, Array_<uint8_t>* crq, int64_t* crr);
static void bkg(List_<Array_<char16_t>*>* crt /*codes*/, Array_<char16_t>* cru /*attr*/, List_<gb*>* crv /*args*/, List_<uo*>* crw /*members*/);
static void bkl(List_<ge*>* cyk /*stats*/);
static Array_<char16_t>* bkr(gc* czo /*type*/);
static Array_<char16_t>* bkz(un* dad /*ast*/);
static fw* blh(un* daj /*ast*/, Array_<char16_t>* dak /*name*/);
static Array_<char16_t>* bmp(char16_t daq /*c*/);
static void bqk(fx* day /*ast*/, int64_t daz /*typeId*/, ga* dba /*pos*/, Array_<char16_t>* dbb /*name*/, bool dbc /*setParent*/);
static ga* bql(Array_<char16_t>* dbe /*srcName*/, int64_t dbf /*row*/, int64_t dbg /*col*/);
template<typename T_, typename C_> static void bqm(T_ dbi /*me_*/, Array_<int64_t>* dbj /*type*/, C_ dbk /*item*/);
static char16_t bqn();
static Array_<char16_t>* bre(bool dcc /*skipSpaces*/, bool dcd /*refName*/);
static fw* brj(Array_<char16_t>* ddk /*parentClass*/, bool ddl /*overritten*/);
static bgk* brl(int64_t dhf /*kind*/, Array_<char16_t>* dhg /*parentClass*/);
static bro* brn();
static void dhj(bro* dhk);
static bro* dhl(bro* dhm);
static Array_<uint8_t>* dho(bro* dhp);
static bro* dib(bro* dic, Array_<uint8_t>* did, int64_t* die);
static brr* brq();
static void dii(brr* dij);
static brr* dik(brr* dil);
static Array_<uint8_t>* din(brr* dio);
static brr* dja(brr* djb, Array_<uint8_t>* djc, int64_t* djd);
static un* bru();
static brx* brw();
static void dmd(brx* dme);
static brx* dmf(brx* dmg);
static Array_<uint8_t>* dmi(brx* dmj);
static brx* dmv(brx* dmw, Array_<uint8_t>* dmx, int64_t* dmy);
static void brz(char16_t dna /*c*/);
static char16_t bsa();
template<typename T_, typename R_> static R_ bsg(T_ dni /*me_*/, Array_<int64_t>* dnj /*type*/);
static void buq(fx* dnk /*ast*/, int64_t dnl /*typeId*/, ga* dnm /*pos*/);
static void dno(buu* dnp);
static buu* dnq(buu* dnr);
static Array_<uint8_t>* dnt(buu* dnu);
static buu* dog(buu* doh, Array_<uint8_t>* doi, int64_t* doj);
static void dol(buv* dom);
static buv* don(buv* doo);
static Array_<uint8_t>* doq(buv* dor);
static buv* dpe(buv* dpf, Array_<uint8_t>* dpg, int64_t* dph);
static void dpj(bux* dpk);
static bux* dpl(bux* dpm);
static Array_<uint8_t>* dpo(bux* dpp);
static bux* dpt(bux* dpu, Array_<uint8_t>* dpv, int64_t* dpw);
static void dpy(buw* dpz);
static buw* dqa(buw* dqb);
static Array_<uint8_t>* dqd(buw* dqe);
static buw* dqr(buw* dqs, Array_<uint8_t>* dqt, int64_t* dqu);
static void dqw(but* dqx);
static but* dqy(but* dqz);
static Array_<uint8_t>* drb(but* drc);
static but* drr(but* drs, Array_<uint8_t>* drt, int64_t* dru);
static void drw(bvc* drx);
static bvc* dry(bvc* drz);
static Array_<uint8_t>* dsb(bvc* dsc);
static bvc* dso(bvc* dsp, Array_<uint8_t>* dsq, int64_t* dsr);
static fx* bvp(Array_<char16_t>* dst /*src*/, Array_<char16_t>* dsu /*identifier*/, bool dsv /*makeExprRef*/);
static void dti(bvt* dtj);
static bvt* dtk(bvt* dtl);
static Array_<uint8_t>* dtn(bvt* dto);
static bvt* dua(bvt* dub, Array_<uint8_t>* duc, int64_t* dud);
static void duf(bvx* dug);
static bvx* duh(bvx* dui);
static Array_<uint8_t>* duk(bvx* dul);
static bvx* duq(bvx* dur, Array_<uint8_t>* dus, int64_t* dut);
static void duv(bvw* duw);
static bvw* dux(bvw* duy);
static Array_<uint8_t>* dva(bvw* dvb);
static bvw* dvq(bvw* dvr, Array_<uint8_t>* dvs, int64_t* dvt);
static void bvy(gd* dvv /*ast*/, int64_t dvw /*typeId*/, ga* dvx /*pos*/);
static void dvy(bwp* dvz);
static bwp* dwa(bwp* dwb);
static Array_<uint8_t>* dwd(bwp* dwe);
static bwp* dwr(bwp* dws, Array_<uint8_t>* dwt, int64_t* dwu);
static void dww(bwo* dwx);
static bwo* dwy(bwo* dwz);
static Array_<uint8_t>* dxb(bwo* dxc);
static bwo* dxq(bwo* dxr, Array_<uint8_t>* dxs, int64_t* dxt);
static void bya(gb* dxv /*ast*/);
static gc* byd(gc* dyl /*ast*/, brr* dym /*parentAlias*/);
static List_<ge*>* bye(List_<ge*>* dzr /*stats*/, gc* dzs /*retType*/, fw* dzt /*parentFunc*/);
static gd* byw(gd* dzz /*ast*/, bool eaa /*nullable*/);
static void ecg(bza* ech);
static bza* eci(bza* ecj);
static Array_<uint8_t>* ecl(bza* ecm);
static bza* edc(bza* edd, Array_<uint8_t>* ede, int64_t* edf);
static ge* bzg(ge* edh /*ast*/, gc* edi /*retType*/, fw* edj /*parentFunc*/);
static bool bzi(gc* efq /*type*/);
static bwp* bzp(ga* eft /*pos*/);
static Array_<char16_t>* bzv();
static void ehe(cbi* ehf);
static cbi* ehg(cbi* ehh);
static Array_<uint8_t>* ehj(cbi* ehk);
static cbi* ehv(cbi* ehw, Array_<uint8_t>* ehx, int64_t* ehy);
static void eia(cbh* eib);
static cbh* eic(cbh* eid);
static Array_<uint8_t>* eif(cbh* eig);
static cbh* eis(cbh* eit, Array_<uint8_t>* eiu, int64_t* eiv);
static void eix(cbl* eiy);
static cbl* eiz(cbl* eja);
static Array_<uint8_t>* ejc(cbl* ejd);
static cbl* ejp(cbl* ejq, Array_<uint8_t>* ejr, int64_t* ejs);
static void eju(cbq* ejv);
static cbq* ejw(cbq* ejx);
static Array_<uint8_t>* ejz(cbq* eka);
static cbq* eke(cbq* ekf, Array_<uint8_t>* ekg, int64_t* ekh);
static void ekj(cbp* ekk);
static cbp* ekm(cbp* ekn);
static Array_<uint8_t>* ekq(cbp* ekr);
static cbp* elg(cbp* elh, Array_<uint8_t>* eli, int64_t* elj);
static void ell(ccm* elm);
static ccm* eln(ccm* elo);
static Array_<uint8_t>* elq(ccm* elr);
static ccm* eme(ccm* emf, Array_<uint8_t>* emg, int64_t* emh);
static void emj(ccx* emk);
static ccx* eml(ccx* emm);
static Array_<uint8_t>* emo(ccx* emp);
static ccx* enc(ccx* end, Array_<uint8_t>* ene, int64_t* enf);
static bca* cia(List_<uo*>* enh /*members*/, Array_<char16_t>* eni /*name*/);
static void ckf(ckg* enn /*ast*/, ge* eno /*breakStat*/, ge* enp /*skipStat*/);
static void eok(ckh* eol);
static ckh* eom(ckh* eon);
static Array_<uint8_t>* eop(ckh* eoq);
static ckh* epd(ckh* epe, Array_<uint8_t>* epf, int64_t* epg);
static void epi(ckg* epj);
static ckg* epk(ckg* epl);
static Array_<uint8_t>* epn(ckg* epo);
static ckg* eqe(ckg* eqf, Array_<uint8_t>* eqg, int64_t* eqh);
static void ckj(ckk* eqj /*ast*/, ge* eqk /*breakStat*/, ge* eql /*skipStat*/);
static void est(ckl* esu);
static ckl* esv(ckl* esw);
static Array_<uint8_t>* esy(ckl* esz);
static ckl* etm(ckl* etn, Array_<uint8_t>* eto, int64_t* etp);
static void etr(ckk* ets);
static ckk* ett(ckk* etu);
static Array_<uint8_t>* etw(ckk* etx);
static ckk* eum(ckk* eun, Array_<uint8_t>* euo, int64_t* eup);
static void ckn(cko* eur /*ast*/, ge* eus /*breakStat*/, ge* eut /*skipStat*/);
static void evo(ckp* evp);
static ckp* evq(ckp* evr);
static Array_<uint8_t>* evt(ckp* evu);
static ckp* ewg(ckp* ewh, Array_<uint8_t>* ewi, int64_t* ewj);
static void ewl(cko* ewm);
static cko* ewn(cko* ewo);
static Array_<uint8_t>* ewq(cko* ewr);
static cko* exg(cko* exh, Array_<uint8_t>* exi, int64_t* exj);
static void ckr(cks* exl /*ast*/, ge* exm /*breakStat*/, ge* exn /*skipStat*/);
static void eyj(cks* eyk);
static cks* eyl(cks* eym);
static Array_<uint8_t>* eyo(cks* eyp);
static cks* ezf(cks* ezg, Array_<uint8_t>* ezh, int64_t* ezi);
static void cku(but* ezk /*ast*/, ge* ezl /*breakStat*/, ge* ezm /*skipStat*/);
static void ckw(ckx* fau /*ast*/);
static void faw(ckx* fax);
static ckx* fay(ckx* faz);
static Array_<uint8_t>* fbb(ckx* fbc);
static ckx* fbo(ckx* fbp, Array_<uint8_t>* fbq, int64_t* fbr);
static void ckz(buv* fbt /*ast*/, ge* fbu /*breakStat*/, ge* fbv /*skipStat*/);
static void clb(clc* fbz /*ast*/);
static void fce(clc* fcf);
static clc* fcg(clc* fch);
static Array_<uint8_t>* fcj(clc* fck);
static clc* fcw(clc* fcx, Array_<uint8_t>* fcy, int64_t* fcz);
static void cle(bvt* fdb /*ast*/);
static void clg(ge* fdc /*ast*/, ge* fdd /*breakStat*/);
static void cli(ge* fdi /*ast*/, ge* fdj /*skipStat*/);
static void clk(cll* fdo /*ast*/);
static void fdq(cll* fdr);
static cll* fds(cll* fdt);
static Array_<uint8_t>* fdv(cll* fdw);
static cll* fei(cll* fej, Array_<uint8_t>* fek, int64_t* fel);
static bool clv(gc* fen /*type*/);
static bool cma(gc* feo /*type*/);
static Array_<char16_t>* cqx();
static biz* cwg(List_<uo*>* ffw /*members*/, Array_<char16_t>* ffx /*name*/);
static void cyq(ckg* fgc /*ast*/);
static void cys(ckk* fgt /*ast*/);
static void cyu(cko* fjb /*ast*/);
static void cyw(cks* fjn /*ast*/);
static void cyy(but* fkd /*ast*/);
static void cza(ckx* flh /*ast*/);
static void czc(buv* fli /*ast*/);
static void cze(clc* flo /*ast*/);
static void czg(bvt* fls /*ast*/);
static void czi(ge* flt /*ast*/);
static void czk(ge* flv /*ast*/);
static void czm(cll* flx /*ast*/);
static void dbd(fx* fly /*ast*/, int64_t flz /*typeId*/, ga* fma /*pos*/, Array_<char16_t>* fmb /*name*/, bool fmc /*setParent*/);
static char16_t dbw();
static ga* dch();
static Array_<char16_t>* dci(char16_t fmz /*c*/);
static void ddd(Array_<char16_t>* fng /*name*/);
static Array_<char16_t>* ddx();
template<typename T_> static T_ def(T_ fnt /*me_*/, Array_<int64_t>* fnu /*type*/, T_ fnv /*n*/);
static void dfl(char16_t fnw /*c*/, char16_t fnx /*c2*/);
static void dfp(fx* fny /*ast*/, Array_<char16_t>* fnz /*name*/);
static void dfq(char16_t fob /*c*/, bool foc /*skipSpaces*/);
static void dfu(fx* fog /*ast*/, bool foh /*refuseReserved*/);
static void fpt(dfx* fpu);
static dfx* fpv(dfx* fpw);
static Array_<uint8_t>* fpy(dfx* fpz);
static dfx* fqk(dfx* fql, Array_<uint8_t>* fqm, int64_t* fqn);
static gb* dgf(int64_t fqp /*kind*/, Array_<char16_t>* fqq /*parentClass*/);
static gc* dgq();
static ge* dgx(fx* ftu /*block_*/);
static gd* dlv();
static void dma(gd* fxd /*ast*/, int64_t fxe /*typeId*/, ga* fxf /*pos*/);
static void dng();
static void dnn(fx* fyy /*ast*/, int64_t fyz /*typeId*/, ga* fza /*pos*/);
static gd* dth(gd* fzb /*ast*/);
static bool dyh(gc* gai /*type1*/, gc* gaj /*type2*/, bool gak /*strict*/);
static bwo* dyk(gd* gco /*enumElement*/, gc* gcp /*type*/);
static void dyz(un* gcs /*ast*/);
static void dzb(brx* gdb /*ast*/);
static void dzd(brr* ged /*ast*/, brr* gee /*parent*/);
static gd* eah(eai* gej /*ast*/);
static void gga(eai* ggb);
static eai* ggc(eai* ggd);
static Array_<uint8_t>* ggf(eai* ggg);
static eai* ggv(eai* ggw, Array_<uint8_t>* ggx, int64_t* ggy);
static gd* eak(bza* gha /*ast*/);
static gd* eam(ean* gpn /*ast*/);
static void gqn(ean* gqo);
static ean* gqp(ean* gqq);
static Array_<uint8_t>* gqs(ean* gqt);
static ean* grj(ean* grk, Array_<uint8_t>* grl, int64_t* grm);
static gd* eap(eaq* gro /*ast*/);
static void gry(eaq* grz);
static eaq* gsa(eaq* gsb);
static Array_<uint8_t>* gsd(eaq* gse);
static eaq* gss(eaq* gst, Array_<uint8_t>* gsu, int64_t* gsv);
static gd* eas(eat* gsx /*ast*/);
static void gtw(eat* gtx);
static eat* gty(eat* gtz);
static Array_<uint8_t>* gub(eat* guc);
static eat* gur(eat* gus, Array_<uint8_t>* gut, int64_t* guu);
static gd* eav(eaw* guw /*ast*/);
static void gyc(eaw* gyd);
static eaw* gye(eaw* gyf);
static Array_<uint8_t>* gyh(eaw* gyi);
static eaw* gyy(eaw* gyz, Array_<uint8_t>* gza, int64_t* gzb);
static gd* eay(eaz* gzd /*ast*/);
static void gzo(eaz* gzp);
static eaz* gzq(eaz* gzr);
static Array_<uint8_t>* gzt(eaz* gzu);
static eaz* haj(eaz* hak, Array_<uint8_t>* hal, int64_t* ham);
static gd* ebb(ebc* hao /*ast*/);
static void hay(ebc* haz);
static ebc* hba(ebc* hbb);
static Array_<uint8_t>* hbd(ebc* hbe);
static ebc* hbu(ebc* hbv, Array_<uint8_t>* hbw, int64_t* hbx);
static gd* ebe(bvw* hbz /*ast*/);
static gd* ebg(ebh* heg /*ast*/);
static void het(ebh* heu);
static ebh* hev(ebh* hew);
static Array_<uint8_t>* hey(ebh* hez);
static ebh* hfo(ebh* hfp, Array_<uint8_t>* hfq, int64_t* hfr);
static gd* ebj(ebk* hft /*ast*/);
static void hjp(ebk* hjq);
static ebk* hjr(ebk* hjs);
static Array_<uint8_t>* hju(ebk* hjv);
static ebk* hkl(ebk* hkm, Array_<uint8_t>* hkn, int64_t* hko);
static gd* ebm(bwp* hkq /*ast*/);
static gd* ebo(bwo* hkt /*ast*/);
static gd* ebq(ebr* hkw /*ast*/);
static void hkz(ebr* hla);
static ebr* hlb(ebr* hlc);
static Array_<uint8_t>* hle(ebr* hlf);
static ebr* hlt(ebr* hlu, Array_<uint8_t>* hlv, int64_t* hlw);
static gd* ebt(ebu* hly /*ast*/);
static void hmb(ebu* hmc);
static ebu* hmd(ebu* hme);
static Array_<uint8_t>* hmg(ebu* hmh);
static ebu* hmv(ebu* hmw, Array_<uint8_t>* hmx, int64_t* hmy);
static gd* ebw(ebx* hna /*ast*/);
static void hnd(ebx* hne);
static ebx* hnf(ebx* hng);
static Array_<uint8_t>* hni(ebx* hnj);
static ebx* hnx(ebx* hny, Array_<uint8_t>* hnz, int64_t* hoa);
static gd* ebz(eca* hoc /*ast*/);
static void hqk(eca* hql);
static eca* hqm(eca* hqn);
static Array_<uint8_t>* hqp(eca* hqq);
static eca* hre(eca* hrf, Array_<uint8_t>* hrg, int64_t* hrh);
static void hrj(edr* hrk);
static edr* hrl(edr* hrm);
static Array_<uint8_t>* hro(edr* hrp);
static edr* hsb(edr* hsc, Array_<uint8_t>* hsd, int64_t* hse);
static void eds(bgk* hsg /*ast*/);
static ge* eeq(ckg* hsj /*ast*/, gc* hsk /*retType*/, fw* hsl /*parentFunc*/);
static ge* ees(ckk* htw /*ast*/, gc* htx /*retType*/, fw* hty /*parentFunc*/);
static ge* eeu(cko* hva /*ast*/, gc* hvb /*retType*/, fw* hvc /*parentFunc*/);
static ge* eew(cks* hvj /*ast*/, gc* hvk /*retType*/, fw* hvl /*parentFunc*/);
static ge* eey(but* hwc /*ast*/, gc* hwd /*retType*/, fw* hwe /*parentFunc*/);
static ge* efa(ckx* hwx /*ast*/);
static ge* efc(buv* hxc /*ast*/, gc* hxd /*retType*/, fw* hxe /*parentFunc*/);
static ge* efe(clc* hxh /*ast*/, gc* hxi /*retType*/);
static ge* efg(bvt* hxv /*ast*/);
static ge* efi(ge* hzf /*ast*/, gc* hzg /*retType*/, fw* hzh /*parentFunc*/);
static ge* efk(ge* hzm /*ast*/, gc* hzn /*retType*/, fw* hzo /*parentFunc*/);
static ge* efm(cll* hzt /*ast*/);
static bool efs(gc* iaa /*type*/);
static void iab(efx* iac);
static efx* iad(efx* iae);
static Array_<uint8_t>* iag(efx* iah);
static efx* ias(efx* iat, Array_<uint8_t>* iau, int64_t* iav);
template<typename T_, typename C_> static void egl(T_ iax /*me_*/, Array_<int64_t>* iay /*type*/, C_ iaz /*value*/);
static char16_t egp(char16_t iba /*me_*/, int64_t ibb /*n*/);
static void enx(gd* ibc /*ast*/);
static bool equ(gc* ico /*type*/);
static Array_<char16_t>* ext(gc* icp /*type*/);
static void fgm(gd* icr /*ast*/);
static bool fis(gc* ied /*type*/);
static Array_<char16_t>* fjt(gc* iej /*type*/);
template<typename T_, typename R_> static R_ fmh(T_ iel /*me_*/, Array_<int64_t>* iem /*type*/);
static bool foj(Array_<char16_t>* ien /*name*/);
static ge* fuh(int64_t iey /*row*/, int64_t iez /*col*/, fx* ifa /*block_*/);
static ge* fuj();
static ge* ful();
static ge* fun();
static ge* fup();
static ge* fur();
static ge* fut();
static ge* fuv();
static ge* fux(int64_t ihe /*row*/, int64_t ihf /*col*/, fx* ihg /*block_*/);
static ge* fuz(int64_t ihk /*row*/, int64_t ihl /*col*/, fx* ihm /*block_*/);
static ge* fvb(int64_t ihq /*row*/, int64_t ihr /*col*/);
static ge* fvd(int64_t iik /*row*/, int64_t iil /*col*/, fx* iim /*block_*/);
static ge* fvf(int64_t ijk /*row*/, int64_t ijl /*col*/, fx* ijm /*block_*/);
static ge* fvh();
static ge* fvj(int64_t ikk /*row*/, int64_t ikl /*col*/);
static ge* fvl(int64_t ile /*row*/, int64_t ilf /*col*/);
static ge* fvn(int64_t ilv /*row*/, int64_t ilw /*col*/, fx* ilx /*block_*/);
static ge* fvp(int64_t inb /*row*/, int64_t inc /*col*/, fx* ind /*block_*/);
static ge* fvr();
static ge* fvt();
static ge* fvv();
static ge* fvx();
static ge* fvz();
static ge* fwb();
static ge* fwd();
static gd* fwi();
static char16_t fxs();
static uint64_t gcr(ebu* ipe /*ast*/, brx* ipf /*enum_*/);
static void gcz(un* ipo /*ast*/, fw** ipp /*dtor*/, fw** ipq /*copy*/, fw** ipr /*toBin*/, fw** ips /*fromBin*/);
static void gda(un* itw /*ast*/, fw* itx /*dtor*/, fw* ity /*copy*/, fw* itz /*toBin*/, fw* iua /*fromBin*/);
static bool gev(gc* izb /*type*/);
static bool gfl(gc* izc /*type*/);
static bool gil(gc* izd /*type*/, bool ize /*lessOrGreater*/);
static int64_t gkf(Array_<char16_t>* izj /*s1*/, Array_<char16_t>* izk /*s2*/);
static uint64_t gnm(int64_t izq /*size*/, uint64_t izr /*n*/);
static Array_<char16_t>* hdn(gc* izy /*type*/);
static bool hhb(Array_<char16_t>** jbw /*member*/, gc* jbx /*type*/);
static gd* hyv(List_<ge*>* jge /*stats*/, gd* jgf /*ast*/, ga* jgg /*pos*/);
static void ibg(eai* jgs /*ast*/);
static void ibi(bza* jhb /*ast*/);
static void ibk(ean* jiy /*ast*/);
static void ibm(eaq* jiz /*ast*/);
static void ibo(eat* jjq /*ast*/);
static void ibq(eaw* jju /*ast*/);
static void ibs(eaz* jkk /*ast*/);
static void ibu(ebc* jkl /*ast*/);
static void ibw(bvw* jkm /*ast*/);
static void iby(ebh* jmi /*ast*/);
static void ica(ebk* jmj /*ast*/);
static void icc(bwp* jms /*ast*/);
static void ice(bwo* jmt /*ast*/);
static void icg(ebr* jni /*ast*/);
static void ici(ebx* jns /*ast*/);
static void ick(eca* jny /*ast*/);
static void icm(gd* job /*ast*/);
static void icv(eai* jou /*ast*/);
static void icx(bza* jpt /*ast*/);
static void icz(ean* jse /*ast*/);
static void idb(eaq* jsf /*ast*/);
static void idd(eat* jsv /*ast*/);
static void idf(eaw* jtr /*ast*/);
static void idh(eaz* jus /*ast*/);
static void idj(ebc* jut /*ast*/);
static void idl(bvw* juu /*ast*/);
static void idn(ebh* jwy /*ast*/);
static void idp(ebk* jxc /*ast*/);
static void idr(bwp* jxl /*ast*/);
static void idt(bwo* jxm /*ast*/);
static void idv(ebr* jyb /*ast*/);
static void idx(ebx* jyl /*ast*/);
static void idz(eca* jyq /*ast*/);
static void ieb(gd* jyx /*ast*/);
template<typename T_, typename C_> static int64_t iex(T_ jzr /*me_*/, Array_<int64_t>* jzs /*type*/, C_ jzt /*item*/);
static void jzu(igf* jzv);
static igf* jzw(igf* jzx);
static Array_<uint8_t>* jzz(igf* kaa);
static igf* kam(igf* kan, Array_<uint8_t>* kao, int64_t* kap);
static void kar(igj* kas);
static igj* kat(igj* kau);
static Array_<uint8_t>* kaw(igj* kax);
static igj* kbj(igj* kbk, Array_<uint8_t>* kbl, int64_t* kbm);
static void kbo(igm* kbp);
static igm* kbq(igm* kbr);
static Array_<uint8_t>* kbt(igm* kbu);
static igm* kcg(igm* kch, Array_<uint8_t>* kci, int64_t* kcj);
static void kcl(igp* kcm);
static igp* kcn(igp* kco);
static Array_<uint8_t>* kcq(igp* kcr);
static igp* kdd(igp* kde, Array_<uint8_t>* kdf, int64_t* kdg);
static void kdi(igs* kdj);
static igs* kdk(igs* kdl);
static Array_<uint8_t>* kdn(igs* kdo);
static igs* kea(igs* keb, Array_<uint8_t>* kec, int64_t* ked);
static void igv(fx* kef /*ast*/);
static void igw(fx* kei /*ast*/);
static buv* igy(ge** ken /*outStat*/, int64_t* keo /*outTypeId*/, int64_t kep /*typeId*/, fx* keq /*block_*/);
static gb* iht(ga* kgq /*pos*/);
static bwo* iks(ga* kgs /*pos*/, int64_t kgt /*kind*/, uint64_t kgu /*value*/);
static gd* iol();
static fw* itb(un* khk /*class_*/, Array_<char16_t>* khl /*name*/);
static ebk* ium(un* kic /*class_*/, gb* kid /*arg*/, Array_<char16_t>* kie /*name*/);
static Array_<char16_t>* jpc(gc* kik /*type*/);
static gd* kgz();
static List_<int64_t>* kio(gc* kji /*type*/);
static gd* kix();
static void kjk(gc* kla /*type*/, List_<int64_t>* klb /*output*/);
static gd* kjm();
static gd* kmk();
static gd* kmw();
static gd* knl();
static gd* koc();
static gd* kpl();
static gd* kpw();
static ebr* kso(ga* kvu /*pos*/, Array_<char16_t>* kvv /*value*/);
static char16_t ksv(char16_t kwb /*c*/);
static void kwt(kuy* kwu);
static kuy* kwv(kuy* kww);
static Array_<uint8_t>* kwy(kuy* kwz);
static kuy* kxk(kuy* kxl, Array_<uint8_t>* kxm, int64_t* kxn);
static gd* kvc(int64_t kxp /*row*/, int64_t kxq /*col*/, char16_t kxr /*c*/);
static ebx* kvl(ga* lbb /*pos*/, double lbc /*value*/);
static double kzq(Array_<char16_t>* lbg /*me_*/, bool* lbh /*success*/);
static uint64_t lal(Array_<char16_t>* lbi /*me_*/, bool* lbj /*success*/);
static int64_t classTable_[152];
static int64_t argc_;
static char** argv_;
static int64_t m;
static bool s;
static bool x;
static Array_<char16_t>* y;
static bool af;
static Dict_<Array_<char16_t>*, fx*>* ah;
static Dict_<Array_<char16_t>*, int64_t>* ai;
static Queue_<fw*>* aj;
static Queue_<un*>* ak;
static Array_<char16_t>* al;
static List_<Array_<char16_t>*>* am;
static List_<Array_<char16_t>*>* an;
static List_<Array_<char16_t>*>* ao;
static List_<Array_<char16_t>*>* ap;
static List_<up*>* aq;
static List_<gb*>* ar;
static List_<gb*>* as;
static List_<Array_<char16_t>*>* at;
static Array_<char16_t>* au;
static Array_<char16_t>* av;
static Array_<char16_t>* aw;
static Dict_<Array_<char16_t>*, bool>* ax;
static Array_<char16_t>* ay;
static Array_<char16_t>* az;
static Array_<char16_t>* ba;
static Array_<Array_<char16_t>*>* bb;
static Dict_<Array_<char16_t>*, fx*>* bc;
static Dict_<Array_<char16_t>*, fx*>* bd;
static avb* be;
static Array_<char16_t>* bf;
static Stack_<fx*>* bg;
static List_<avn*>* bh;
static Queue_<fw*>* bi;
static Queue_<un*>* bj;
static Array_<char16_t>* bk;
static List_<Array_<char16_t>*>* bl;
static List_<vc*>* bm;
static List_<gb*>* bn;
static List_<gb*>* bo;
static bool ct;
static bool dp;
static int64_t ec;
static int64_t en;
static int64_t fp;
static int64_t uq;
static int64_t ave;
static int64_t avf;
static char16_t avg;
static char16_t avh;
static bool avi;
static int64_t avj;
fz::fz(): Class_(){
Y = 0;
kx(this);
}
int64_t fz::cmp_(Class_* t){
fz* u = reinterpret_cast<fz*>(t);
return lb(this, u);
}
Class_* fz::copy_(Class_* t){
return le(this);
}
fy::fy(): fz(), lw(){
Y = 2;
}
Class_* fy::copy_(Class_* t){
return lt(this);
}
ga::ga(): fz(), hk(), hl(), hm(){
Y = 6;
}
Class_* ga::copy_(Class_* t){
return mo(this);
}
fx::fx(): fy(), ne(), nf(), ng(), nh(), ni(), nj(), nk(), no(){
Y = 4;
}
int64_t fx::cmp_(Class_* t){
fx* u = reinterpret_cast<fx*>(t);
return mg(this, u);
}
Class_* fx::copy_(Class_* t){
return nl(this);
}
gc::gc(): fx(){
Y = 12;
}
Class_* gc::copy_(Class_* t){
return oi(this);
}
gd::gd(): fx(), pf(), pj(){
Y = 14;
}
Class_* gd::copy_(Class_* t){
return pg(this);
}
gb::gb(): fx(), qk(), ql(), qf(), qg(){
Y = 10;
}
Class_* gb::copy_(Class_* t){
return qh(this);
}
ge::ge(): fx(){
Y = 16;
}
Class_* ge::copy_(Class_* t){
return rj(this);
}
fw::fw(): fx(), sm(), sf(), sg(), sh(), si(){
Y = 8;
}
Class_* fw::copy_(Class_* t){
return sj(this);
}
gj::gj(): fz(), gk(){
Y = 18;
}
Class_* gj::copy_(Class_* t){
return tl(this);
}
kl::kl(): fz(), km(){
Y = 20;
}
int64_t kl::cmp_(Class_* t){
kl* u = reinterpret_cast<kl*>(t);
return ato(this, u);
}
Class_* kl::copy_(Class_* t){
return atw(this);
}
uo::uo(): fz(), azs(), azt(), azn(), azo(){
Y = 24;
}
Class_* uo::copy_(Class_* t){
return azp(this);
}
un::un(): fx(), bai(){
Y = 22;
}
Class_* un::copy_(Class_* t){
return baj(this);
}
up::up(): fz(), bbg(), bbh(){
Y = 26;
}
Class_* up::copy_(Class_* t){
return bbi(this);
}
vc::vc(): fz(), bih(), bii(){
Y = 28;
}
Class_* vc::copy_(Class_* t){
return bij(this);
}
avb::avb(): fz(), bon(), bpu(), bpv(), bpw(){
Y = 30;
}
Class_* avb::copy_(Class_* t){
return bpr(this);
}
avn::avn(): fz(), awm(), axh(){
Y = 34;
}
Class_* avn::copy_(Class_* t){
return bsj(this);
}
avm::avm(): fx(), azc(), awf(){
Y = 32;
}
Class_* avm::copy_(Class_* t){
return bsy(this);
}
bca::bca(): fy(), bea(), bzy(), cab(), bfv(), bcc(), cae(), caf(){
Y = 36;
}
Class_* bca::copy_(Class_* t){
return cai(this);
}
bgk::bgk(): fx(), bgm(){
Y = 38;
}
Class_* bgk::copy_(Class_* t){
return cnl(this);
}
bhq::bhq(): fz(), cos(){
Y = 40;
}
Class_* bhq::copy_(Class_* t){
return cqh(this);
}
biz::biz(): fy(), bjp(), cra(), bjb(){
Y = 42;
}
Class_* biz::copy_(Class_* t){
return cre(this);
}
bro::bro(): fx(), bse(){
Y = 44;
}
Class_* bro::copy_(Class_* t){
return dhl(this);
}
brr::brr(): fx(), dih(){
Y = 46;
}
Class_* brr::copy_(Class_* t){
return dik(this);
}
brx::brx(): fx(), dld(){
Y = 48;
}
Class_* brx::copy_(Class_* t){
return dmf(this);
}
buu::buu(): ge(), bve(){
Y = 50;
}
Class_* buu::copy_(Class_* t){
return dnq(this);
}
buv::buv(): buu(), bvh(){
Y = 54;
}
Class_* buv::copy_(Class_* t){
return don(this);
}
bux::bux(): fz(), bwt(), bwy(){
Y = 58;
}
Class_* bux::copy_(Class_* t){
return dpl(this);
}
buw::buw(): ge(), bwg(), bwj(){
Y = 56;
}
Class_* buw::copy_(Class_* t){
return dqa(this);
}
but::but(): buu(), bvi(), bvj(), bvm(){
Y = 52;
}
Class_* but::copy_(Class_* t){
return dqy(this);
}
bvc::bvc(): gc(), bvd(){
Y = 60;
}
Class_* bvc::copy_(Class_* t){
return dry(this);
}
bvt::bvt(): ge(), bwd(){
Y = 62;
}
Class_* bvt::copy_(Class_* t){
return dtk(this);
}
bvx::bvx(): fz(), bxl(), bxh(), bxi(){
Y = 66;
}
Class_* bvx::copy_(Class_* t){
return duh(this);
}
bvw::bvw(): gd(), bwc(), bvz(){
Y = 64;
}
Class_* bvw::copy_(Class_* t){
return dux(this);
}
bwp::bwp(): gd(){
Y = 68;
}
Class_* bwp::copy_(Class_* t){
return dwa(this);
}
bwo::bwo(): bwp(), bwq(){
Y = 70;
}
Class_* bwo::copy_(Class_* t){
return dwy(this);
}
bza::bza(): gd(), bzb(), bze(), bzf(){
Y = 72;
}
Class_* bza::copy_(Class_* t){
return eci(this);
}
cbi::cbi(): gc(){
Y = 74;
}
Class_* cbi::copy_(Class_* t){
return ehg(this);
}
cbh::cbh(): cbi(), cbj(){
Y = 76;
}
Class_* cbh::copy_(Class_* t){
return eic(this);
}
cbl::cbl(): gc(), cbm(){
Y = 78;
}
Class_* cbl::copy_(Class_* t){
return eiz(this);
}
cbq::cbq(): fz(), ccf(), cch(){
Y = 82;
}
Class_* cbq::copy_(Class_* t){
return ejw(this);
}
cbp::cbp(): cbi(), ekp(), ekl(), cbx(), cbs(){
Y = 80;
}
Class_* cbp::copy_(Class_* t){
return ekm(this);
}
ccm::ccm(): cbi(), ccp(), ccr(){
Y = 84;
}
Class_* ccm::copy_(Class_* t){
return eln(this);
}
ccx::ccx(): cbi(), ccy(), ccz(){
Y = 86;
}
Class_* ccx::copy_(Class_* t){
return eml(this);
}
ckh::ckh(): ge(), eod(), eoe(){
Y = 90;
}
Class_* ckh::copy_(Class_* t){
return eom(this);
}
ckg::ckg(): buu(), ens(), enu(), eoa(), eog(){
Y = 88;
}
Class_* ckg::copy_(Class_* t){
return epk(this);
}
ckl::ckl(): ge(), erb(), erp(){
Y = 94;
}
Class_* ckl::copy_(Class_* t){
return esv(this);
}
ckk::ckk(): buu(), eqt(), eqx(), err(){
Y = 92;
}
Class_* ckk::copy_(Class_* t){
return ett(this);
}
ckp::ckp(): buu(){
Y = 96;
}
Class_* ckp::copy_(Class_* t){
return evq(this);
}
cko::cko(): ckp(), euw(), eve(), euy(){
Y = 98;
}
Class_* cko::copy_(Class_* t){
return ewn(this);
}
cks::cks(): ckp(), exv(), exu(), exw(), eye(){
Y = 100;
}
Class_* cks::copy_(Class_* t){
return eyl(this);
}
ckx::ckx(): ge(), fav(){
Y = 102;
}
Class_* ckx::copy_(Class_* t){
return fay(this);
}
clc::clc(): ge(), fcb(){
Y = 104;
}
Class_* clc::copy_(Class_* t){
return fcg(this);
}
cll::cll(): ge(), fdp(){
Y = 106;
}
Class_* cll::copy_(Class_* t){
return fds(this);
}
dfx::dfx(): cbi(){
Y = 108;
}
Class_* dfx::copy_(Class_* t){
return fpv(this);
}
eai::eai(): gd(), ges(), gem(){
Y = 110;
}
Class_* eai::copy_(Class_* t){
return ggc(this);
}
ean::ean(): gd(), gpq(), gpt(), gpw(){
Y = 112;
}
Class_* ean::copy_(Class_* t){
return gqp(this);
}
eaq::eaq(): gd(), grr(){
Y = 114;
}
Class_* eaq::copy_(Class_* t){
return gsa(this);
}
eat::eat(): gd(), gtc(), gtl(){
Y = 116;
}
Class_* eat::copy_(Class_* t){
return gty(this);
}
eaw::eaw(): gd(), gvh(), guz(), gvc(){
Y = 118;
}
Class_* eaw::copy_(Class_* t){
return gye(this);
}
eaz::eaz(): gd(), gzg(), gzm(){
Y = 120;
}
Class_* eaz::copy_(Class_* t){
return gzq(this);
}
ebc::ebc(): gd(), har(), haw(), hax(){
Y = 122;
}
Class_* ebc::copy_(Class_* t){
return hba(this);
}
ebh::ebh(): gd(), hej(), heo(){
Y = 124;
}
Class_* ebh::copy_(Class_* t){
return hev(this);
}
ebk::ebk(): gd(), hcr(), hgh(), hgu(){
Y = 126;
}
Class_* ebk::copy_(Class_* t){
return hjr(this);
}
ebr::ebr(): bwp(), gkg(){
Y = 128;
}
Class_* ebr::copy_(Class_* t){
return hlb(this);
}
ebu::ebu(): bwp(), gis(){
Y = 130;
}
Class_* ebu::copy_(Class_* t){
return hmd(this);
}
ebx::ebx(): bwp(), gfi(){
Y = 132;
}
Class_* ebx::copy_(Class_* t){
return hnf(this);
}
eca::eca(): gd(), hda(){
Y = 134;
}
Class_* eca::copy_(Class_* t){
return hqm(this);
}
edr::edr(): ge(), edt(){
Y = 136;
}
Class_* edr::copy_(Class_* t){
return hrl(this);
}
efx::efx(): gc(){
Y = 138;
}
Class_* efx::copy_(Class_* t){
return iad(this);
}
igf::igf(): ge(), igg(){
Y = 140;
}
Class_* igf::copy_(Class_* t){
return jzw(this);
}
igj::igj(): ge(), igk(){
Y = 142;
}
Class_* igj::copy_(Class_* t){
return kat(this);
}
igm::igm(): ge(), ign(){
Y = 144;
}
Class_* igm::copy_(Class_* t){
return kbq(this);
}
igp::igp(): ge(), igq(){
Y = 146;
}
Class_* igp::copy_(Class_* t){
return kcn(this);
}
igs::igs(): ge(), igt(){
Y = 148;
}
Class_* igs::copy_(Class_* t){
return kdk(this);
}
kuy::kuy(): gc(){
Y = 150;
}
Class_* kuy::copy_(Class_* t){
return kwv(this);
}
// $
static void a(){
int64_t c = 0; // $
try{
try{
(e)();
(f)();
(g)();
(i)();
(j)();
}catch(int64_t c){
if((0LL) <= c && c <= (4294967295LL)){
(l)((c));
}
else{
throw;
}
}
}
catch(...){
(i)();
(j)();
throw;
}
}
// _init
static void e(){
}
// _initVars
static void f(){
(m) = (1LL);
}
// main
static void g(){
if(!((o)())){
(q)((1LL));
return;
}
if(s){
(u)((((new Array_<char16_t>(28, u'\u004B', u'\u0075', u'\u0069', u'\u006E', u'\u0020', u'\u0050', u'\u0072', u'\u006F', u'\u0067', u'\u0072', u'\u0061', u'\u006D', u'\u006D', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u004C', u'\u0061', u'\u006E', u'\u0067', u'\u0075', u'\u0061', u'\u0067', u'\u0065', u'\u0020', u'\u0076', u'\u002E'))->Cat(v<int64_t>((2019LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<int64_t>((10LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<int64_t>((17LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))))));
(u)((new Array_<char16_t>(14, u'\u0028', u'\u0043', u'\u0029', u'\u004B', u'\u0075', u'\u0069', u'\u006E', u'\u0061', u'\u002D', u'\u0063', u'\u0068', u'\u0061', u'\u006E', u'\u000A')));
(q)((0LL));
return;
}
if((x) || (eqAddr_((y), (nullptr)))){
(u)((new Array_<char16_t>(128, u'\u0055', u'\u0073', u'\u0061', u'\u0067', u'\u0065', u'\u003A', u'\u0020', u'\u006B', u'\u0075', u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0020', u'\u005B', u'\u002D', u'\u0069', u'\u0020', u'\u0069', u'\u006E', u'\u0070', u'\u0075', u'\u0074', u'\u002E', u'\u006B', u'\u006E', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u006F', u'\u0020', u'\u006F', u'\u0075', u'\u0074', u'\u0070', u'\u0075', u'\u0074', u'\u002E', u'\u006B', u'\u006E', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0073', u'\u0020', u'\u0027', u'\u0073', u'\u0079', u'\u0073', u'\u0027', u'\u0020', u'\u0064', u'\u0069', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006F', u'\u0072', u'\u0079', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0063', u'\u0020', u'\u0069', u'\u0063', u'\u006F', u'\u006E', u'\u002E', u'\u0069', u'\u0063', u'\u006F', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0065', u'\u0020', u'\u0065', u'\u006E', u'\u0076', u'\u0069', u'\u0072', u'\u006F', u'\u006E', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0061', u'\u0020', u'\u0061', u'\u0070', u'\u0070', u'\u0063', u'\u006F', u'\u0064', u'\u0065', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0072', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0068', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0076', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0071', u'\u005D', u'\u000A')));
(q)((0LL));
return;
}
if((ab)()){
(ad)((196609LL), (nullptr), (nullptr));
(q)((0LL));
return;
}
if(!(af)){
(ad)((196610LL), (nullptr), (nullptr));
}
(q)((1LL));
}
// _finVars
static void i(){
(ah) = (nullptr);
(ai) = (nullptr);
(aj) = (nullptr);
(ak) = (nullptr);
(al) = (nullptr);
(am) = (nullptr);
(an) = (nullptr);
(ao) = (nullptr);
(ap) = (nullptr);
(aq) = (nullptr);
(ar) = (nullptr);
(as) = (nullptr);
(at) = (nullptr);
(y) = (nullptr);
(au) = (nullptr);
(av) = (nullptr);
(aw) = (nullptr);
(ax) = (nullptr);
(ay) = (nullptr);
(az) = (nullptr);
(ba) = (nullptr);
(bb) = (nullptr);
(bc) = (nullptr);
(bd) = (nullptr);
(be) = (nullptr);
(bf) = (nullptr);
(bg) = (nullptr);
(bh) = (nullptr);
(bi) = (nullptr);
(bj) = (nullptr);
(bk) = (nullptr);
(bl) = (nullptr);
(bm) = (nullptr);
(bn) = (nullptr);
(bo) = (nullptr);
}
// _fin
static void j(){
}
// _err
static void l(int64_t bp /*excpt*/){
}
// acquireOption
static bool o(){
Array_<Array_<char16_t>*>* bq = nullptr; // cmdLines
int64_t bv = 0;
Array_<char16_t>* bx = nullptr; // cmdLine
char16_t cc = 0;
Array_<char16_t>* cx = nullptr; // envStr
Array_<char16_t>* dk = nullptr; // appCodeStr
Array_<char16_t>* dt = nullptr; // extra
Array_<char16_t>* ef = nullptr;
bool er = false; // success
int64_t bw = 0;
(bq) = ((br)());
(ax) = (new Dict_<Array_<char16_t>*, bool>());
for(bv = (0LL), bw = (((bq)->Len()) - (1LL)); bv <= bw; bv += (1LL)){
(bx) = ((bq)->At(bv));
if((((bx)->Len()) == (2LL)) && (((bx)->At(0LL)) == (u'\u002D'))){
switch((bx)->At(1LL)){
case u'\u0069':
if(!((cf)((&y), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u006F':
if(!((cf)((&au), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0073':
if(!((cf)((&av), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0063':
if(!((cf)((&aw), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0072':
if(!((cs)((&ct), (cc)))){
return false;
}
break;
case u'\u0065':
if(!((cf)((&cx), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0068':
if(!((cs)((&x), (cc)))){
return false;
}
break;
case u'\u0076':
if(!((cs)((&s), (cc)))){
return false;
}
break;
case u'\u0071':
if(!((cs)((&af), (cc)))){
return false;
}
break;
case u'\u0061':
if(!((cf)((&dk), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0064':
if(!((cs)((&dp), (cc)))){
return false;
}
break;
case u'\u0078':
if(!((cf)((&dt), (bq), (&bv), (cc)))){
return false;
}
dv<Dict_<Array_<char16_t>*, bool>*, Array_<char16_t>*, bool>((ax), (new Array_<int64_t>(1, (0LL))), (dt), (true));
break;
default:
(ad)((2LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(1, u'\u002D'))->Cat(v<char16_t>((cc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
break;
}
}
else{
(ad)((2LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
}
}
if(eqAddr_((y), (nullptr))){
return true;
}
if(eqAddr_((cx), (nullptr))){
(ec) = (0LL);
}
else{
ef = cx;
if(cmp_(ef, (new Array_<char16_t>(3, u'\u0063', u'\u0075', u'\u0069'))) == 0){
(ec) = (0LL);
}
else if(cmp_(ef, (new Array_<char16_t>(3, u'\u0077', u'\u006E', u'\u0064'))) == 0){
(ec) = (1LL);
}
else if(cmp_(ef, (new Array_<char16_t>(3, u'\u0077', u'\u0065', u'\u0062'))) == 0){
(ec) = (2LL);
}
else if(cmp_(ef, (new Array_<char16_t>(3, u'\u0063', u'\u0070', u'\u0070'))) == 0){
(ec) = (3LL);
}
else{(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(2, u'\u002D', u'\u0065')))));
}
}
if(eqAddr_((dk), (nullptr))){
(en) = ((eo)((1LL), (4294967295LL)));
}
else{
(en) = ((eq)((dk), (&er)));
if(!(er)){
(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(2, u'\u002D', u'\u0061')))));
return false;
}
}
if(eqAddr_((au), (nullptr))){
(au) = (((ew)((y)))->Cat(new Array_<char16_t>(3, u'\u006F', u'\u0075', u'\u0074')));
}
else{
(au) = ((ey)((au)));
}
if(eqAddr_((av), (nullptr))){
(av) = (new Array_<char16_t>(4, u'\u0073', u'\u0079', u'\u0073', u'\u002F'));
}
if(eqAddr_((aw), (nullptr))){
(aw) = ((av)->Cat(new Array_<char16_t>(11, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u002E', u'\u0069', u'\u0063', u'\u006F')));
}
(ay) = ((ew)((y)));
(az) = ((ey)(((fd)((y)))));
(ba) = ((ew)((au)));
if(cmp_(((ff)((y))), (new Array_<char16_t>(2, u'\u006B', u'\u006E'))) != 0){
(ad)((3LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (az))));
}
return true;
}
// exitCode
static void q(int64_t fh /*code*/){
if(((fh) < (0LL)) || ((4294967295LL) < (fh))){
throw 3910598662LL;
}
}
// print
static void u(Array_<char16_t>* fm /*str*/){
std::u16string s_ = fm->B;
const std::string& t_ = utf16ToUtf8_(s_);
std::cout << t_ << std::flush;
}
// _toStr
template<typename T_> static Array_<char16_t>* v(T_ fn /*me_*/, Array_<int64_t>* fo /*type*/){
return toStr_(fn);
}
// build
static bool ab(){
int64_t fq = 0; // beginTime
Dict_<Array_<char16_t>*, fx*>* fs = nullptr; // asts
fw* fu = nullptr; // entry
Array_<char16_t>* gh = nullptr; // resDir
gj* gi = nullptr; // resFiles
int64_t gr = 0;
(fp) = (0LL);
(fq) = ((fr)());
(ad)((196611LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((fr)()) - (fq))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
(fs) = ((ft)());
(ad)((196612LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((fr)()) - (fq))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
(fu) = ((fv)((fs)));
(ad)((196613LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((fr)()) - (fq))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
if((fp) > (0LL)){
return false;
}
(gh) = ((ay)->Cat(new Array_<char16_t>(4, u'\u0072', u'\u0065', u'\u0073', u'\u002F')));
(gi) = (new gj());
((gi)->gk) = (new List_<Array_<char16_t>*>());
if((gm)((gh))){
(go)((gh), (true), (gp), (gi));
}
switch(ec){
case 3LL:
if(!((gu)((fu), ((gi)->gk)))){
return false;
}
break;
case 2LL:
if(!((gy)((fu), ((gi)->gk)))){
return false;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(ad)((196614LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((fr)()) - (fq))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
return true;
}
// err
static void ad(int64_t hb /*id*/, ga* hc /*pos*/, Array_<Array_<char16_t>*>* hd /*args*/){
Array_<char16_t>* hg = nullptr; // msg
if(((hb) < (196608LL)) && ((fp) >= (100LL))){
return;
}
(hg) = ((hh)((hb), (hd)));
(u)(((v<uint32_t>((static_cast<uint32_t>(hb)), (new Array_<int64_t>(1, (0LL)))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u0020'))));
if(!eqAddr_((hc), (nullptr))){
(u)((((new Array_<char16_t>(1, u'\u005B'))->Cat(v<Array_<char16_t>*>(((hc)->hk), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003A', u'\u0020'))->Cat(v<int64_t>(((hc)->hl), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<int64_t>(((hc)->hm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u005D'))))));
}
(u)(((hg)->Cat(new Array_<char16_t>(1, u'\u000A'))));
if((hb) < (196608LL)){
(fp) = ((fp) + (1LL));
}
}
// cmdLine
static Array_<Array_<char16_t>*>* br(){
Array_<Array_<char16_t>*>* a_ = new Array_<Array_<char16_t>*>();
a_->L = argc_;
a_->B = new Array_<char16_t>*[static_cast<size_t>(argc_)];
for (int64_t i_ = 0; i_ < argc_; i_++){
std::string s_ = argv_[i_];
const std::u16string t_ = utf8ToUtf16_(s_);
a_->B[i_] = new Array_<char16_t>();
a_->B[i_]->L = static_cast<int64_t>(t_.size());
a_->B[i_]->B = new char16_t[t_.size() + 1];
std::memcpy(a_->B[i_]->B, t_.c_str(), sizeof(char16_t) * (t_.size() + 1));
}
return a_;
}
// getArg1
static bool cf(Array_<char16_t>** hq /*out*/, Array_<Array_<char16_t>*>* hr /*cmdLines*/, int64_t* hs /*idx*/, char16_t ht /*option*/){
if((!eqAddr_((*hq), (nullptr))) || (((*hs) + (1LL)) >= ((hr)->Len()))){
(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(1, u'\u002D'))->Cat(v<char16_t>((ht), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
}
(*hq) = ((hr)->At((*hs) + (1LL)));
(*hs) = ((*hs) + (1LL));
return true;
}
// getArg0
static bool cs(bool* hx /*out*/, char16_t hy /*option*/){
if((*hx) != (false)){
(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(1, u'\u002D'))->Cat(v<char16_t>((hy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
}
(*hx) = (true);
return true;
}
// _addDict
template<typename T_, typename K_, typename V_> static void dv(T_ ib /*me_*/, Array_<int64_t>* ic /*type*/, K_ id /*key*/, V_ ie /*item*/){
ib->Add(id, ie);
}
// rnd
static int64_t eo(int64_t ig /*min*/, int64_t ih /*max*/){
return rnd_(ig, ih);
}
// _toInt
static int64_t eq(Array_<char16_t>* ii /*me_*/, bool* ij /*success*/){
std::u16string s_ = ii->B;
const std::string& t_ = utf16ToUtf8_(s_);
try{
size_t s_;
int64_t v_ = t_.size() > 2 && t_[0] == '0' && t_[1] == 'x' ? std::stoll(t_, &s_, 16) : std::stoull(t_, &s_);
if(s_ == t_.size()){
*ij = true;
return v_;
}else{
*ij = false;
return 0;
}
}catch(...){
*ij = false;
return 0;
}
}
// dir
static Array_<char16_t>* ew(Array_<char16_t>* ik /*path*/){
int64_t il = 0; // p
Array_<char16_t>* ir = nullptr; // r
int64_t iv = 0;
int64_t iw = 0;
if(!(!eqAddr_((ik), (nullptr)))){
throw 0xE9170000U;
}
(il) = (((ik)->Len()) - (1LL));
while((((il) >= (0LL)) && (((ik)->At(il)) != (u'\u002F'))) && (((ik)->At(il)) != (u'\u005C'))){
(il) = ((il) - (1LL));
}
if((il) < (0LL)){
return new Array_<char16_t>(2, u'\u002E', u'\u002F');
}
else{
(ir) = (newArray_<char16_t, Array_<char16_t>*>(1, ((il) + (1LL))));
for(iv = (0LL), iw = (il); iv <= iw; iv += (1LL)){
((ir)->At(iv)) = ((((ik)->At(iv)) == (u'\u005C')) ? (u'\u002F') : ((ik)->At(iv)));
}
return ir;
}
}
// delExt
static Array_<char16_t>* ey(Array_<char16_t>* ix /*path*/){
int64_t iy = 0; // p
Array_<char16_t>* jd = nullptr; // r
int64_t jh = 0;
int64_t ji = 0;
if(!(!eqAddr_((ix), (nullptr)))){
throw 0xE9170000U;
}
(iy) = (((ix)->Len()) - (1LL));
while(((((iy) >= (0LL)) && (((ix)->At(iy)) != (u'\u002F'))) && (((ix)->At(iy)) != (u'\u005C'))) && (((ix)->At(iy)) != (u'\u002E'))){
(iy) = ((iy) - (1LL));
}
if(((iy) < (0LL)) || (((ix)->At(iy)) != (u'\u002E'))){
return ix;
}
(jd) = (newArray_<char16_t, Array_<char16_t>*>(1, (iy)));
for(jh = (0LL), ji = ((iy) - (1LL)); jh <= ji; jh += (1LL)){
((jd)->At(jh)) = ((((ix)->At(jh)) == (u'\u005C')) ? (u'\u002F') : ((ix)->At(jh)));
}
return jd;
}
// fileName
static Array_<char16_t>* fd(Array_<char16_t>* jj /*path*/){
int64_t jk = 0; // p
Array_<char16_t>* jq = nullptr; // r
int64_t ju = 0;
int64_t jv = 0;
if(!(!eqAddr_((jj), (nullptr)))){
throw 0xE9170000U;
}
(jk) = (((jj)->Len()) - (1LL));
while((((jk) >= (0LL)) && (((jj)->At(jk)) != (u'\u002F'))) && (((jj)->At(jk)) != (u'\u005C'))){
(jk) = ((jk) - (1LL));
}
if((jk) < (0LL)){
return jj;
}
(jk) = ((jk) + (1LL));
(jq) = (newArray_<char16_t, Array_<char16_t>*>(1, (((jj)->Len()) - (jk))));
for(ju = (0LL), jv = ((((jj)->Len()) - (jk)) - (1LL)); ju <= jv; ju += (1LL)){
((jq)->At(ju)) = ((jj)->At((jk) + (ju)));
}
return jq;
}
// ext
static Array_<char16_t>* ff(Array_<char16_t>* jw /*path*/){
int64_t jx = 0; // p
Array_<char16_t>* ke = nullptr; // r
int64_t ki = 0;
int64_t kj = 0;
if(!(!eqAddr_((jw), (nullptr)))){
throw 0xE9170000U;
}
(jx) = (((jw)->Len()) - (1LL));
while(((((jx) >= (0LL)) && (((jw)->At(jx)) != (u'\u002F'))) && (((jw)->At(jx)) != (u'\u005C'))) && (((jw)->At(jx)) != (u'\u002E'))){
(jx) = ((jx) - (1LL));
}
if(((jw)->At(jx)) != (u'\u002E')){
return new Array_<char16_t>(0);
}
else{
(jx) = ((jx) + (1LL));
(ke) = (newArray_<char16_t, Array_<char16_t>*>(1, (((jw)->Len()) - (jx))));
for(ki = (0LL), kj = ((((jw)->Len()) - (jx)) - (1LL)); ki <= kj; ki += (1LL)){
((ke)->At(ki)) = ((jw)->At((jx) + (ki)));
}
return ke;
}
}
// sysTime
static int64_t fr(){
return static_cast<int64_t>(std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::system_clock::now().time_since_epoch()).count());
}
// parse
static Dict_<Array_<char16_t>*, fx*>* ft(){
kl* kk = nullptr; // endFlag
(bc) = (new Dict_<Array_<char16_t>*, fx*>());
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bc), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u005C'))->Cat(az)), (nullptr));
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bc), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (nullptr));
(kk) = (new kl());
((kk)->km) = (false);
while(!((kk)->km)){
((kk)->km) = (true);
(bd) = (new Dict_<Array_<char16_t>*, fx*>());
ko<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bc), (new Array_<int64_t>(1, (0LL))), (kp), (kk));
(bc) = (bd);
}
return bc;
}
// analyze
static fw* fv(Dict_<Array_<char16_t>*, fx*>* kq /*asts*/){
fw* kr = nullptr; // mainFunc
(ah) = (kq);
(kr) = ((ks)());
if(eqAddr_((kr), (nullptr))){
return nullptr;
}
ko<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((kq), (new Array_<int64_t>(1, (0LL))), (kv), (nullptr));
return (kw)((kr));
}
// ctor
static void kx(fz* ky /*me*/){
}
// _dtor
static void kz(fz* la /*me*/){
}
// cmp
static int64_t lb(fz* lc /*me*/, fz* ld /*t*/){
throw 3910598660LL;
}
// _copy
static fz* le(fz* lf /*me*/){
fz* lg = nullptr;
(lg) = (new fz());
return as_<fz>(classTable_, (lg), 0);
}
// _toBin
static Array_<uint8_t>* lh(fz* li /*me*/){
Array_<uint8_t>* lj = nullptr;
(lj) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
return lj;
}
// _fromBin
static fz* lk(fz* ll /*me*/, Array_<uint8_t>* lm /*bin*/, int64_t* ln /*idx*/){
fz* lo = nullptr;
(lo) = (new fz());
return lo;
}
// toStr
static Array_<char16_t>* lp(fz* lq /*me*/){
return new Array_<char16_t>(0);
}
// _dtor
static void lr(fy* ls){
}
// _copy
static fy* lt(fy* lu){
fy* lv = nullptr;
(lv) = (new fy());
((lv)->lw) = ((lu)->lw);
return as_<fy>(classTable_, (lv), 2);
}
// _toBin
static Array_<uint8_t>* lx(fy* ly){
Array_<uint8_t>* lz = nullptr;
(lz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(lz) = ((lz)->Cat(toBin_((ly)->lw)));
return lz;
}
// _fromBin
static fy* mb(fy* mc, Array_<uint8_t>* md, int64_t* me){
fy* mf = nullptr;
(mf) = (new fy());
((mf)->lw) = (fromBin_<int64_t>((md), (*me)));
return mf;
}
// cmp
static int64_t mg(fx* mh /*me*/, fx* mi /*t*/){
uint64_t mj = 0; // meAddr
uint64_t ml = 0; // tAddr
(mj) = ((mk)((mh)));
(ml) = ((mk)((mi)));
return ((mj) > (ml)) ? (1LL) : (((mj) < (ml)) ? (-1LL) : (0LL));
}
// _dtor
static void mm(ga* mn){
((mn)->hk) = (nullptr);
}
// _copy
static ga* mo(ga* mp){
ga* mq = nullptr;
(mq) = (new ga());
((mq)->hk) = (copy_((mp)->hk));
((mq)->hl) = ((mp)->hl);
((mq)->hm) = ((mp)->hm);
return as_<ga>(classTable_, (mq), 6);
}
// _toBin
static Array_<uint8_t>* mr(ga* ms){
Array_<uint8_t>* mt = nullptr;
(mt) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(mt) = ((mt)->Cat(toBin_((ms)->hk)));
(mt) = ((mt)->Cat(toBin_((ms)->hl)));
(mt) = ((mt)->Cat(toBin_((ms)->hm)));
return mt;
}
// _fromBin
static ga* mx(ga* my, Array_<uint8_t>* mz, int64_t* na){
ga* nb = nullptr;
(nb) = (new ga());
((nb)->hk) = (fromBin_<Array_<char16_t>*>((mz), (*na)));
((nb)->hl) = (fromBin_<int64_t>((mz), (*na)));
((nb)->hm) = (fromBin_<int64_t>((mz), (*na)));
return nb;
}
// _dtor
static void nc(fx* nd){
((nd)->ne) = (nullptr);
((nd)->nf) = (nullptr);
((nd)->ng) = (nullptr);
((nd)->nh) = (nullptr);
((nd)->ni) = (nullptr);
((nd)->nj) = (nullptr);
((nd)->nk) = (nullptr);
}
// _copy
static fx* nl(fx* nm){
fx* nn = nullptr;
(nn) = (new fx());
((nn)->ne) = (copy_((nm)->ne));
((nn)->nf) = (copy_((nm)->nf));
((nn)->ng) = (copy_((nm)->ng));
((nn)->nh) = (copy_((nm)->nh));
((nn)->ni) = (copy_((nm)->ni));
((nn)->nj) = (copy_((nm)->nj));
((nn)->nk) = (copy_((nm)->nk));
((nn)->no) = ((nm)->no);
((nn)->lw) = ((nm)->lw);
return as_<fx>(classTable_, (nn), 4);
}
// _toBin
static Array_<uint8_t>* np(fx* nq){
Array_<uint8_t>* nr = nullptr;
(nr) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(nr) = ((nr)->Cat(toBin_((nq)->ne)));
(nr) = ((nr)->Cat(toBin_((nq)->nf)));
(nr) = ((nr)->Cat(toBin_((nq)->ng)));
(nr) = ((nr)->Cat(toBin_((nq)->nh)));
(nr) = ((nr)->Cat(toBin_((nq)->ni)));
(nr) = ((nr)->Cat(toBin_((nq)->nj)));
(nr) = ((nr)->Cat(toBin_((nq)->nk)));
(nr) = ((nr)->Cat(toBin_((nq)->no)));
(nr) = ((nr)->Cat(toBin_((nq)->lw)));
return nr;
}
// _fromBin
static fx* ob(fx* oc, Array_<uint8_t>* od, int64_t* oe){
fx* of = nullptr;
(of) = (new fx());
((of)->ne) = (fromBin_<ga*>((od), (*oe)));
((of)->nf) = (fromBin_<Array_<char16_t>*>((od), (*oe)));
((of)->ng) = (fromBin_<fx*>((od), (*oe)));
((of)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((od), (*oe)));
((of)->ni) = (fromBin_<Array_<char16_t>*>((od), (*oe)));
((of)->nj) = (fromBin_<fx*>((od), (*oe)));
((of)->nk) = (fromBin_<fy*>((od), (*oe)));
((of)->no) = (fromBin_<bool>((od), (*oe)));
((of)->lw) = (fromBin_<int64_t>((od), (*oe)));
return of;
}
// _dtor
static void og(gc* oh){
((oh)->ne) = (nullptr);
((oh)->nf) = (nullptr);
((oh)->ng) = (nullptr);
((oh)->nh) = (nullptr);
((oh)->ni) = (nullptr);
((oh)->nj) = (nullptr);
((oh)->nk) = (nullptr);
}
// _copy
static gc* oi(gc* oj){
gc* ok = nullptr;
(ok) = (new gc());
((ok)->ne) = (copy_((oj)->ne));
((ok)->nf) = (copy_((oj)->nf));
((ok)->ng) = (copy_((oj)->ng));
((ok)->nh) = (copy_((oj)->nh));
((ok)->ni) = (copy_((oj)->ni));
((ok)->nj) = (copy_((oj)->nj));
((ok)->nk) = (copy_((oj)->nk));
((ok)->no) = ((oj)->no);
((ok)->lw) = ((oj)->lw);
return as_<gc>(classTable_, (ok), 12);
}
// _toBin
static Array_<uint8_t>* ol(gc* om){
Array_<uint8_t>* on = nullptr;
(on) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(on) = ((on)->Cat(toBin_((om)->ne)));
(on) = ((on)->Cat(toBin_((om)->nf)));
(on) = ((on)->Cat(toBin_((om)->ng)));
(on) = ((on)->Cat(toBin_((om)->nh)));
(on) = ((on)->Cat(toBin_((om)->ni)));
(on) = ((on)->Cat(toBin_((om)->nj)));
(on) = ((on)->Cat(toBin_((om)->nk)));
(on) = ((on)->Cat(toBin_((om)->no)));
(on) = ((on)->Cat(toBin_((om)->lw)));
return on;
}
// _fromBin
static gc* oy(gc* oz, Array_<uint8_t>* pa, int64_t* pb){
gc* pc = nullptr;
(pc) = (new gc());
((pc)->ne) = (fromBin_<ga*>((pa), (*pb)));
((pc)->nf) = (fromBin_<Array_<char16_t>*>((pa), (*pb)));
((pc)->ng) = (fromBin_<fx*>((pa), (*pb)));
((pc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((pa), (*pb)));
((pc)->ni) = (fromBin_<Array_<char16_t>*>((pa), (*pb)));
((pc)->nj) = (fromBin_<fx*>((pa), (*pb)));
((pc)->nk) = (fromBin_<fy*>((pa), (*pb)));
((pc)->no) = (fromBin_<bool>((pa), (*pb)));
((pc)->lw) = (fromBin_<int64_t>((pa), (*pb)));
return pc;
}
// _dtor
static void pd(gd* pe){
((pe)->pf) = (nullptr);
((pe)->ne) = (nullptr);
((pe)->nf) = (nullptr);
((pe)->ng) = (nullptr);
((pe)->nh) = (nullptr);
((pe)->ni) = (nullptr);
((pe)->nj) = (nullptr);
((pe)->nk) = (nullptr);
}
// _copy
static gd* pg(gd* ph){
gd* pi = nullptr;
(pi) = (new gd());
((pi)->pf) = (copy_((ph)->pf));
((pi)->pj) = ((ph)->pj);
((pi)->ne) = (copy_((ph)->ne));
((pi)->nf) = (copy_((ph)->nf));
((pi)->ng) = (copy_((ph)->ng));
((pi)->nh) = (copy_((ph)->nh));
((pi)->ni) = (copy_((ph)->ni));
((pi)->nj) = (copy_((ph)->nj));
((pi)->nk) = (copy_((ph)->nk));
((pi)->no) = ((ph)->no);
((pi)->lw) = ((ph)->lw);
return as_<gd>(classTable_, (pi), 14);
}
// _toBin
static Array_<uint8_t>* pk(gd* pl){
Array_<uint8_t>* pm = nullptr;
(pm) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(pm) = ((pm)->Cat(toBin_((pl)->pf)));
(pm) = ((pm)->Cat(toBin_((pl)->pj)));
(pm) = ((pm)->Cat(toBin_((pl)->ne)));
(pm) = ((pm)->Cat(toBin_((pl)->nf)));
(pm) = ((pm)->Cat(toBin_((pl)->ng)));
(pm) = ((pm)->Cat(toBin_((pl)->nh)));
(pm) = ((pm)->Cat(toBin_((pl)->ni)));
(pm) = ((pm)->Cat(toBin_((pl)->nj)));
(pm) = ((pm)->Cat(toBin_((pl)->nk)));
(pm) = ((pm)->Cat(toBin_((pl)->no)));
(pm) = ((pm)->Cat(toBin_((pl)->lw)));
return pm;
}
// _fromBin
static gd* py(gd* pz, Array_<uint8_t>* qa, int64_t* qb){
gd* qc = nullptr;
(qc) = (new gd());
((qc)->pf) = (fromBin_<gc*>((qa), (*qb)));
((qc)->pj) = (fromBin_<int64_t>((qa), (*qb)));
((qc)->ne) = (fromBin_<ga*>((qa), (*qb)));
((qc)->nf) = (fromBin_<Array_<char16_t>*>((qa), (*qb)));
((qc)->ng) = (fromBin_<fx*>((qa), (*qb)));
((qc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((qa), (*qb)));
((qc)->ni) = (fromBin_<Array_<char16_t>*>((qa), (*qb)));
((qc)->nj) = (fromBin_<fx*>((qa), (*qb)));
((qc)->nk) = (fromBin_<fy*>((qa), (*qb)));
((qc)->no) = (fromBin_<bool>((qa), (*qb)));
((qc)->lw) = (fromBin_<int64_t>((qa), (*qb)));
return qc;
}
// _dtor
static void qd(gb* qe){
((qe)->qf) = (nullptr);
((qe)->qg) = (nullptr);
((qe)->ne) = (nullptr);
((qe)->nf) = (nullptr);
((qe)->ng) = (nullptr);
((qe)->nh) = (nullptr);
((qe)->ni) = (nullptr);
((qe)->nj) = (nullptr);
((qe)->nk) = (nullptr);
}
// _copy
static gb* qh(gb* qi){
gb* qj = nullptr;
(qj) = (new gb());
((qj)->qk) = ((qi)->qk);
((qj)->ql) = ((qi)->ql);
((qj)->qf) = (copy_((qi)->qf));
((qj)->qg) = (copy_((qi)->qg));
((qj)->ne) = (copy_((qi)->ne));
((qj)->nf) = (copy_((qi)->nf));
((qj)->ng) = (copy_((qi)->ng));
((qj)->nh) = (copy_((qi)->nh));
((qj)->ni) = (copy_((qi)->ni));
((qj)->nj) = (copy_((qi)->nj));
((qj)->nk) = (copy_((qi)->nk));
((qj)->no) = ((qi)->no);
((qj)->lw) = ((qi)->lw);
return as_<gb>(classTable_, (qj), 10);
}
// _toBin
static Array_<uint8_t>* qm(gb* qn){
Array_<uint8_t>* qo = nullptr;
(qo) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(qo) = ((qo)->Cat(toBin_((qn)->qk)));
(qo) = ((qo)->Cat(toBin_((qn)->ql)));
(qo) = ((qo)->Cat(toBin_((qn)->qf)));
(qo) = ((qo)->Cat(toBin_((qn)->qg)));
(qo) = ((qo)->Cat(toBin_((qn)->ne)));
(qo) = ((qo)->Cat(toBin_((qn)->nf)));
(qo) = ((qo)->Cat(toBin_((qn)->ng)));
(qo) = ((qo)->Cat(toBin_((qn)->nh)));
(qo) = ((qo)->Cat(toBin_((qn)->ni)));
(qo) = ((qo)->Cat(toBin_((qn)->nj)));
(qo) = ((qo)->Cat(toBin_((qn)->nk)));
(qo) = ((qo)->Cat(toBin_((qn)->no)));
(qo) = ((qo)->Cat(toBin_((qn)->lw)));
return qo;
}
// _fromBin
static gb* rc(gb* rd, Array_<uint8_t>* re, int64_t* rf){
gb* rg = nullptr;
(rg) = (new gb());
((rg)->qk) = (fromBin_<int64_t>((re), (*rf)));
((rg)->ql) = (fromBin_<bool>((re), (*rf)));
((rg)->qf) = (fromBin_<gc*>((re), (*rf)));
((rg)->qg) = (fromBin_<gd*>((re), (*rf)));
((rg)->ne) = (fromBin_<ga*>((re), (*rf)));
((rg)->nf) = (fromBin_<Array_<char16_t>*>((re), (*rf)));
((rg)->ng) = (fromBin_<fx*>((re), (*rf)));
((rg)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((re), (*rf)));
((rg)->ni) = (fromBin_<Array_<char16_t>*>((re), (*rf)));
((rg)->nj) = (fromBin_<fx*>((re), (*rf)));
((rg)->nk) = (fromBin_<fy*>((re), (*rf)));
((rg)->no) = (fromBin_<bool>((re), (*rf)));
((rg)->lw) = (fromBin_<int64_t>((re), (*rf)));
return rg;
}
// _dtor
static void rh(ge* ri){
((ri)->ne) = (nullptr);
((ri)->nf) = (nullptr);
((ri)->ng) = (nullptr);
((ri)->nh) = (nullptr);
((ri)->ni) = (nullptr);
((ri)->nj) = (nullptr);
((ri)->nk) = (nullptr);
}
// _copy
static ge* rj(ge* rk){
ge* rl = nullptr;
(rl) = (new ge());
((rl)->ne) = (copy_((rk)->ne));
((rl)->nf) = (copy_((rk)->nf));
((rl)->ng) = (copy_((rk)->ng));
((rl)->nh) = (copy_((rk)->nh));
((rl)->ni) = (copy_((rk)->ni));
((rl)->nj) = (copy_((rk)->nj));
((rl)->nk) = (copy_((rk)->nk));
((rl)->no) = ((rk)->no);
((rl)->lw) = ((rk)->lw);
return as_<ge>(classTable_, (rl), 16);
}
// _toBin
static Array_<uint8_t>* rm(ge* rn){
Array_<uint8_t>* ro = nullptr;
(ro) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ro) = ((ro)->Cat(toBin_((rn)->ne)));
(ro) = ((ro)->Cat(toBin_((rn)->nf)));
(ro) = ((ro)->Cat(toBin_((rn)->ng)));
(ro) = ((ro)->Cat(toBin_((rn)->nh)));
(ro) = ((ro)->Cat(toBin_((rn)->ni)));
(ro) = ((ro)->Cat(toBin_((rn)->nj)));
(ro) = ((ro)->Cat(toBin_((rn)->nk)));
(ro) = ((ro)->Cat(toBin_((rn)->no)));
(ro) = ((ro)->Cat(toBin_((rn)->lw)));
return ro;
}
// _fromBin
static ge* ry(ge* rz, Array_<uint8_t>* sa, int64_t* sb){
ge* sc = nullptr;
(sc) = (new ge());
((sc)->ne) = (fromBin_<ga*>((sa), (*sb)));
((sc)->nf) = (fromBin_<Array_<char16_t>*>((sa), (*sb)));
((sc)->ng) = (fromBin_<fx*>((sa), (*sb)));
((sc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((sa), (*sb)));
((sc)->ni) = (fromBin_<Array_<char16_t>*>((sa), (*sb)));
((sc)->nj) = (fromBin_<fx*>((sa), (*sb)));
((sc)->nk) = (fromBin_<fy*>((sa), (*sb)));
((sc)->no) = (fromBin_<bool>((sa), (*sb)));
((sc)->lw) = (fromBin_<int64_t>((sa), (*sb)));
return sc;
}
// _dtor
static void sd(fw* se){
((se)->sf) = (nullptr);
((se)->sg) = (nullptr);
((se)->sh) = (nullptr);
((se)->si) = (nullptr);
((se)->ne) = (nullptr);
((se)->nf) = (nullptr);
((se)->ng) = (nullptr);
((se)->nh) = (nullptr);
((se)->ni) = (nullptr);
((se)->nj) = (nullptr);
((se)->nk) = (nullptr);
}
// _copy
static fw* sj(fw* sk){
fw* sl = nullptr;
(sl) = (new fw());
((sl)->sm) = ((sk)->sm);
((sl)->sf) = (copy_((sk)->sf));
((sl)->sg) = (copy_((sk)->sg));
((sl)->sh) = (copy_((sk)->sh));
((sl)->si) = (copy_((sk)->si));
((sl)->ne) = (copy_((sk)->ne));
((sl)->nf) = (copy_((sk)->nf));
((sl)->ng) = (copy_((sk)->ng));
((sl)->nh) = (copy_((sk)->nh));
((sl)->ni) = (copy_((sk)->ni));
((sl)->nj) = (copy_((sk)->nj));
((sl)->nk) = (copy_((sk)->nk));
((sl)->no) = ((sk)->no);
((sl)->lw) = ((sk)->lw);
return as_<fw>(classTable_, (sl), 8);
}
// _toBin
static Array_<uint8_t>* sn(fw* so){
Array_<uint8_t>* sp = nullptr;
(sp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(sp) = ((sp)->Cat(toBin_((so)->sm)));
(sp) = ((sp)->Cat(toBin_((so)->sf)));
(sp) = ((sp)->Cat(toBin_((so)->sg)));
(sp) = ((sp)->Cat(toBin_((so)->sh)));
(sp) = ((sp)->Cat(toBin_((so)->si)));
(sp) = ((sp)->Cat(toBin_((so)->ne)));
(sp) = ((sp)->Cat(toBin_((so)->nf)));
(sp) = ((sp)->Cat(toBin_((so)->ng)));
(sp) = ((sp)->Cat(toBin_((so)->nh)));
(sp) = ((sp)->Cat(toBin_((so)->ni)));
(sp) = ((sp)->Cat(toBin_((so)->nj)));
(sp) = ((sp)->Cat(toBin_((so)->nk)));
(sp) = ((sp)->Cat(toBin_((so)->no)));
(sp) = ((sp)->Cat(toBin_((so)->lw)));
return sp;
}
// _fromBin
static fw* te(fw* tf, Array_<uint8_t>* tg, int64_t* th){
fw* ti = nullptr;
(ti) = (new fw());
((ti)->sm) = (fromBin_<int64_t>((tg), (*th)));
((ti)->sf) = (fromBin_<List_<Array_<char16_t>*>*>((tg), (*th)));
((ti)->sg) = (fromBin_<List_<gb*>*>((tg), (*th)));
((ti)->sh) = (fromBin_<gc*>((tg), (*th)));
((ti)->si) = (fromBin_<List_<ge*>*>((tg), (*th)));
((ti)->ne) = (fromBin_<ga*>((tg), (*th)));
((ti)->nf) = (fromBin_<Array_<char16_t>*>((tg), (*th)));
((ti)->ng) = (fromBin_<fx*>((tg), (*th)));
((ti)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((tg), (*th)));
((ti)->ni) = (fromBin_<Array_<char16_t>*>((tg), (*th)));
((ti)->nj) = (fromBin_<fx*>((tg), (*th)));
((ti)->nk) = (fromBin_<fy*>((tg), (*th)));
((ti)->no) = (fromBin_<bool>((tg), (*th)));
((ti)->lw) = (fromBin_<int64_t>((tg), (*th)));
return ti;
}
// _dtor
static void tj(gj* tk){
((tk)->gk) = (nullptr);
}
// _copy
static gj* tl(gj* tm){
gj* tn = nullptr;
(tn) = (new gj());
((tn)->gk) = (copy_((tm)->gk));
return as_<gj>(classTable_, (tn), 18);
}
// _toBin
static Array_<uint8_t>* to(gj* tp){
Array_<uint8_t>* tq = nullptr;
(tq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(tq) = ((tq)->Cat(toBin_((tp)->gk)));
return tq;
}
// _fromBin
static gj* ts(gj* tt, Array_<uint8_t>* tu, int64_t* tv){
gj* tw = nullptr;
(tw) = (new gj());
((tw)->gk) = (fromBin_<List_<Array_<char16_t>*>*>((tu), (*tv)));
return tw;
}
// exist
static bool gm(Array_<char16_t>* tx /*path*/){
return false;
}
// forEach
static bool go(Array_<char16_t>* ty /*path*/, bool tz /*recursion*/, ub ua /*callback*/, fz* uc /*data*/){
return false;
}
// searchResFiles
static bool gp(Array_<char16_t>* ud /*path*/, bool ue /*isDir*/, fz* uf /*data*/){
gj* ui = nullptr; // data2
if(!(ue)){
(ui) = (as_<gj>(classTable_, (uf), 18));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((ui)->gk), (new Array_<int64_t>(1, (0LL))), (ud));
}
return true;
}
// output
static bool gu(fw* uk /*entry*/, List_<Array_<char16_t>*>* ul /*resFiles*/){
fw* ut = nullptr; // func_
un* ux = nullptr; // class_
(aj) = (new Queue_<fw*>());
um<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL))), (uk));
(ak) = (new Queue_<un*>());
(al) = (new Array_<char16_t>(1, u'\u0061'));
(am) = (new List_<Array_<char16_t>*>());
(an) = (new List_<Array_<char16_t>*>());
(ao) = (new List_<Array_<char16_t>*>());
(ap) = (new List_<Array_<char16_t>*>());
(aq) = (new List_<up*>());
(ar) = (new List_<gb*>());
(as) = (new List_<gb*>());
(uq) = (0LL);
(at) = (new List_<Array_<char16_t>*>());
while((((aj)->Len()) > (0LL)) || (((ak)->Len()) > (0LL))){
while(((aj)->Len()) > (0LL)){
(ut) = (uu<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL)))));
(uv)((ut));
}
while(((ak)->Len()) > (0LL)){
(ux) = (uu<Queue_<un*>*, un*>((ak), (new Array_<int64_t>(1, (0LL)))));
(uy)((ux));
}
}
(uz)((ul));
return true;
}
// output
static bool gy(fw* va /*entry*/, List_<Array_<char16_t>*>* vb /*resFiles*/){
fw* vf = nullptr; // func_
un* vi = nullptr; // class_
(bi) = (new Queue_<fw*>());
um<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL))), (va));
(bj) = (new Queue_<un*>());
(bk) = (new Array_<char16_t>(1, u'\u0061'));
(bl) = (new List_<Array_<char16_t>*>());
(bm) = (new List_<vc*>());
(bn) = (new List_<gb*>());
(bo) = (new List_<gb*>());
while((((bi)->Len()) > (0LL)) || (((bj)->Len()) > (0LL))){
while(((bi)->Len()) > (0LL)){
(vf) = (uu<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL)))));
(vg)((vf));
}
while(((bj)->Len()) > (0LL)){
(vi) = (uu<Queue_<un*>*, un*>((bj), (new Array_<int64_t>(1, (0LL)))));
(vj)((vi));
}
}
(vk)((vb));
return true;
}
// get
static Array_<char16_t>* hh(int64_t vl /*id*/, Array_<Array_<char16_t>*>* vm /*args*/){
int64_t vo = 0;
int64_t vr = 0;
int64_t vw = 0;
int64_t wb = 0;
int64_t wg = 0;
int64_t wl = 0;
int64_t wq = 0;
int64_t wv = 0;
int64_t xa = 0;
int64_t xf = 0;
int64_t xk = 0;
int64_t xp = 0;
int64_t xu = 0;
int64_t xz = 0;
int64_t ye = 0;
int64_t yj = 0;
int64_t yo = 0;
int64_t yt = 0;
int64_t yy = 0;
int64_t zd = 0;
int64_t zi = 0;
int64_t zn = 0;
int64_t zs = 0;
int64_t zx = 0;
int64_t aac = 0;
int64_t aah = 0;
int64_t aam = 0;
int64_t aar = 0;
int64_t aaw = 0;
int64_t abb = 0;
int64_t abg = 0;
int64_t abl = 0;
int64_t abq = 0;
int64_t abv = 0;
int64_t aca = 0;
int64_t acf = 0;
int64_t ack = 0;
int64_t acp = 0;
int64_t acu = 0;
int64_t acz = 0;
int64_t ade = 0;
int64_t adj = 0;
int64_t ado = 0;
int64_t adt = 0;
int64_t ady = 0;
int64_t aed = 0;
int64_t aei = 0;
int64_t aen = 0;
int64_t aes = 0;
int64_t aex = 0;
int64_t afc = 0;
int64_t afh = 0;
int64_t afm = 0;
int64_t afr = 0;
int64_t afw = 0;
int64_t agb = 0;
int64_t agg = 0;
int64_t agl = 0;
int64_t agq = 0;
int64_t agv = 0;
int64_t aha = 0;
int64_t ahf = 0;
int64_t ahk = 0;
int64_t ahp = 0;
int64_t ahu = 0;
int64_t ahz = 0;
int64_t aie = 0;
int64_t aij = 0;
int64_t aio = 0;
int64_t ait = 0;
int64_t aiy = 0;
int64_t ajd = 0;
int64_t aji = 0;
int64_t ajn = 0;
int64_t ajs = 0;
int64_t ajx = 0;
int64_t akc = 0;
int64_t akh = 0;
int64_t akm = 0;
int64_t akr = 0;
int64_t akw = 0;
int64_t alb = 0;
int64_t alg = 0;
int64_t all = 0;
int64_t alq = 0;
int64_t alv = 0;
int64_t ama = 0;
int64_t amf = 0;
int64_t amk = 0;
int64_t amp = 0;
int64_t amu = 0;
int64_t amz = 0;
int64_t anf = 0;
int64_t ank = 0;
int64_t anp = 0;
int64_t anu = 0;
int64_t anz = 0;
int64_t aoe = 0;
int64_t aoj = 0;
int64_t aoo = 0;
int64_t aot = 0;
int64_t aoy = 0;
int64_t apd = 0;
int64_t api = 0;
int64_t apn = 0;
int64_t aps = 0;
int64_t apx = 0;
int64_t aqc = 0;
int64_t aqh = 0;
int64_t aqm = 0;
int64_t aqr = 0;
int64_t aqw = 0;
int64_t arb = 0;
int64_t arg = 0;
int64_t arl = 0;
int64_t arq = 0;
int64_t arv = 0;
int64_t asa = 0;
int64_t asf = 0;
int64_t ask = 0;
int64_t asq = 0;
int64_t asv = 0;
int64_t ata = 0;
int64_t atf = 0;
int64_t atk = 0;
switch(vl){
case 1LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(6, u'\u30AA', u'\u30D7', u'\u30B7', u'\u30E7', u'\u30F3', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u300D', u'\u306E', u'\u4F7F', u'\u308F', u'\u308C', u'\u65B9', u'\u304C', u'\u6B63', u'\u3057', u'\u304F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006F', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u002E'));
break;
}
break;
case 2LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u4E0D', u'\u660E', u'\u306A', u'\u30AA', u'\u30D7', u'\u30B7', u'\u30E7', u'\u30F3', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u6307', u'\u5B9A', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(20, u'\u0055', u'\u006E', u'\u0065', u'\u0078', u'\u0070', u'\u0065', u'\u0063', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u006F', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u003A', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 3LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u5165', u'\u529B', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u300D', u'\u306E', u'\u62E1', u'\u5F35', u'\u5B50', u'\u306F', u'\u300C', u'\u002E', u'\u006B', u'\u006E', u'\u300D', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(33, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0078', u'\u0074', u'\u0065', u'\u006E', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0070', u'\u0075', u'\u0074', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u002E', u'\u006B', u'\u006E', u'\u0027', u'\u002E'));
break;
}
break;
case 4LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u540D', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u300D', u'\u306B', u'\u4F7F', u'\u3048', u'\u306A', u'\u3044', u'\u6587', u'\u5B57', u'\u304C', u'\u542B', u'\u307E', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(22, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(42, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0073', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 5LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u958B', u'\u3051', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(25, u'\u0043', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u006E', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 6LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30B7', u'\u30B9', u'\u30C6', u'\u30E0', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u958B', u'\u3051', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0079', u'\u0073', u'\u0074', u'\u0065', u'\u006D', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u006E', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 7LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30B7', u'\u30B9', u'\u30C6', u'\u30E0', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u58CA', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0079', u'\u0073', u'\u0074', u'\u0065', u'\u006D', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0062', u'\u0072', u'\u006F', u'\u006B', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65537LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(16, u'\u540C', u'\u3058', u'\u30B9', u'\u30B3', u'\u30FC', u'\u30D7', u'\u5185', u'\u306B', u'\u65E2', u'\u306B', u'\u540C', u'\u3058', u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(35, u'\u0027', u'\u0020', u'\u0061', u'\u006C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0073', u'\u0063', u'\u006F', u'\u0070', u'\u0065', u'\u002E'));
break;
}
break;
case 65538LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(17, u'\u4E0A', u'\u4F4D', u'\u306E', u'\u30B9', u'\u30B3', u'\u30FC', u'\u30D7', u'\u5185', u'\u306B', u'\u65E2', u'\u306B', u'\u540C', u'\u3058', u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(36, u'\u0027', u'\u0020', u'\u0061', u'\u006C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0075', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0020', u'\u0073', u'\u0063', u'\u006F', u'\u0070', u'\u0065', u'\u002E'));
break;
}
break;
case 65539LL:
switch(m){
case 0LL:
return new Array_<char16_t>(24, u'\u30B3', u'\u30E1', u'\u30F3', u'\u30C8', u'\u306E', u'\u300C', u'\u007B', u'\u300D', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u007D', u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(49, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0020', u'\u0027', u'\u007D', u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0027', u'\u007B', u'\u0027', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E');
break;
}
break;
case 65540LL:
switch(m){
case 0LL:
return new Array_<char16_t>(54, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u3084', u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u4E2D', u'\u306B', u'\u30BF', u'\u30D6', u'\u6587', u'\u5B57', u'\u306F', u'\u8A18', u'\u8FF0', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u0020', u'\u30A8', u'\u30B9', u'\u30B1', u'\u30FC', u'\u30D7', u'\u30B7', u'\u30FC', u'\u30B1', u'\u30F3', u'\u30B9', u'\u300C', u'\u005C', u'\u0074', u'\u300D', u'\u3092', u'\u4EE3', u'\u7528', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(113, u'\u0054', u'\u0061', u'\u0062', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u002E', u'\u0020', u'\u0055', u'\u0073', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0073', u'\u0063', u'\u0061', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0071', u'\u0075', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027', u'\u005C', u'\u0074', u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0065', u'\u0061', u'\u0064', u'\u002E');
break;
}
break;
case 65541LL:
switch(m){
case 0LL:
return new Array_<char16_t>(50, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u3084', u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u4E2D', u'\u3067', u'\u306F', u'\u6539', u'\u884C', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u0020', u'\u30A8', u'\u30B9', u'\u30B1', u'\u30FC', u'\u30D7', u'\u30B7', u'\u30FC', u'\u30B1', u'\u30F3', u'\u30B9', u'\u300C', u'\u005C', u'\u006E', u'\u300D', u'\u3092', u'\u4EE3', u'\u7528', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(108, u'\u004C', u'\u0069', u'\u006E', u'\u0065', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u0073', u'\u0020', u'\u0061', u'\u0072', u'\u0065', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u002E', u'\u0020', u'\u0055', u'\u0073', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0073', u'\u0063', u'\u0061', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0071', u'\u0075', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027', u'\u005C', u'\u006E', u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0065', u'\u0061', u'\u0064', u'\u002E');
break;
}
break;
case 65542LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(12, u'\u8B58', u'\u5225', u'\u5B50', u'\u306B', u'\u306F', u'\u4F7F', u'\u3048', u'\u306A', u'\u3044', u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(15, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(49, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65543LL:
switch(m){
case 0LL:
return new Array_<char16_t>(24, u'\u8B58', u'\u5225', u'\u5B50', u'\u306B', u'\u6B63', u'\u3057', u'\u304F', u'\u306A', u'\u3044', u'\u5F62', u'\u5F0F', u'\u3067', u'\u300C', u'\u0040', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(43, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0027', u'\u0040', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u002E');
break;
}
break;
case 65544LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(12, u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u540D', u'\u306E', u'\u6307', u'\u5B9A', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u300D', u'\u306B', u'\u5927', u'\u6587', u'\u5B57', u'\u304C', u'\u542B', u'\u307E', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0041', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(29, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0073', u'\u0020', u'\u0075', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u006C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u002E'));
break;
}
break;
case 65545LL:
switch(m){
case 0LL:
return new Array_<char16_t>(24, u'\u8B58', u'\u5225', u'\u5B50', u'\u306B', u'\u6B63', u'\u3057', u'\u304F', u'\u306A', u'\u3044', u'\u5F62', u'\u5F0F', u'\u3067', u'\u300C', u'\u005C', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(43, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0027', u'\u005C', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u002E');
break;
}
break;
case 65546LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(16, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(49, u'\u002E', u'\u002E', u'\u002E', u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65547LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(16, u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u6587', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0073', u'\u0065', u'\u006E', u'\u0074', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65548LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(13, u'\u95A2', u'\u6570', u'\u5C5E', u'\u6027', u'\u306B', u'\u306F', u'\u4F7F', u'\u3048', u'\u306A', u'\u3044', u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(15, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(57, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0061', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0073', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65549LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(5, u'\u95A2', u'\u6570', u'\u5C5E', u'\u6027', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(24, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0061', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(49, u'\u002E', u'\u002E', u'\u002E', u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65550LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(3, u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(19, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u7B87', u'\u6240', u'\u306B', u'\u3001', u'\u4E0D', u'\u6B63', u'\u306A', u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(22, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(46, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0070', u'\u006C', u'\u0061', u'\u0063', u'\u0065', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u0027', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E')));
break;
}
break;
case 65551LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u300D', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(20, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E')));
break;
}
break;
case 65552LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u95A2', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3092', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u004F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 65553LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(14, u'\u95A2', u'\u6570', u'\u304A', u'\u3088', u'\u3073', u'\u5909', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u300D', u'\u3092', u'\u516C', u'\u958B', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(55, u'\u0027', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0073', u'\u0020', u'\u0068', u'\u0061', u'\u0073', u'\u0020', u'\u0062', u'\u0065', u'\u0065', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u006C', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 65554LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u300D', u'\u304C', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u300D', u'\u3067', u'\u306F', u'\u306A', u'\u304F', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u3067', u'\u9589', u'\u3058', u'\u3089', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(1, u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(31, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(18, u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0065', u'\u0061', u'\u0064', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'))));
break;
}
break;
case 65555LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(12, u'\u6B63', u'\u3057', u'\u304F', u'\u306A', u'\u3044', u'\u5F62', u'\u5F0F', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(30, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u006D', u'\u0061', u'\u0074', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65556LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u5F15', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u5909', u'\u6570', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0026', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(53, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0026', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E');
break;
}
break;
case 65557LL:
switch(m){
case 0LL:
return new Array_<char16_t>(25, u'\u5F15', u'\u6570', u'\u306B', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3059', u'\u308B', u'\u3053', u'\u3068', u'\u306F', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u002E');
break;
}
break;
case 65558LL:
switch(m){
case 0LL:
return new Array_<char16_t>(26, u'\u30E1', u'\u30F3', u'\u30D0', u'\u306B', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3059', u'\u308B', u'\u3053', u'\u3068', u'\u306F', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(50, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0073', u'\u002E');
break;
}
break;
case 65559LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u6587', u'\u306B', u'\u306F', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(57, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u002E');
break;
}
break;
case 65560LL:
switch(m){
case 0LL:
return new Array_<char16_t>(22, u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(43, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0061', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002E');
break;
}
break;
case 65561LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(5, u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u306F', u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u3067', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(5, u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(27, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u006D', u'\u0061', u'\u0074', u'\u0074', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 65562LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(18, u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3068', u'\u5BFE', u'\u5FDC', u'\u3057', u'\u306A', u'\u3044', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u3067', u'\u9589', u'\u3058', u'\u3089', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(25, u'\u0043', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(40, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002E'));
break;
}
break;
case 65563LL:
switch(m){
case 0LL:
return new Array_<char16_t>(46, u'\u300C', u'\u0069', u'\u0066', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u306E', u'\u5F8C', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u300D', u'\u7BC0', u'\u3084', u'\u300C', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(88, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0061', u'\u0066', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u002E');
break;
}
break;
case 65564LL:
switch(m){
case 0LL:
return new Array_<char16_t>(56, u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u300D', u'\u7BC0', u'\u306E', u'\u5F8C', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u3084', u'\u300C', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(96, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0061', u'\u0066', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u002E');
break;
}
break;
case 65565LL:
switch(m){
case 0LL:
return new Array_<char16_t>(54, u'\u300C', u'\u0074', u'\u0072', u'\u0079', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u300D', u'\u7BC0', u'\u306E', u'\u5F8C', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u7BC0', u'\u3084', u'\u300C', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(94, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0074', u'\u0072', u'\u0079', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0061', u'\u0066', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u002E');
break;
}
break;
case 65566LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(12, u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u4EE5', u'\u5916', u'\u3067', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(11, u'\u0041', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(30, u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u006F', u'\u0075', u'\u0074', u'\u0073', u'\u0069', u'\u0064', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0073', u'\u002E')));
break;
}
break;
case 65567LL:
switch(m){
case 0LL:
return new Array_<char16_t>(69, u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u300D', u'\u300C', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u300D', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u306E', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u7B87', u'\u6240', u'\u306B', u'\u305D', u'\u308C', u'\u4EE5', u'\u5916', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(88, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0027', u'\u002C', u'\u0020', u'\u0027', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u0027', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0077', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E');
break;
}
break;
case 65568LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(16, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u7B87', u'\u6240', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(12, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(21, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u0027', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E')));
break;
}
break;
case 65569LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(11, u'\u300C', u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u6F14', u'\u7B97', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65570LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(31, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(20, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(47, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65571LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(18, u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u30A8', u'\u30B9', u'\u30B1', u'\u30FC', u'\u30D7', u'\u30B7', u'\u30FC', u'\u30B1', u'\u30F3', u'\u30B9', u'\u300C', u'\u005C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(28, u'\u0041', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0065', u'\u0073', u'\u0063', u'\u0061', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0071', u'\u0075', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027', u'\u005C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65572LL:
switch(m){
case 0LL:
return new Array_<char16_t>(54, u'\u6587', u'\u5B57', u'\u30B3', u'\u30FC', u'\u30C9', u'\u8868', u'\u8A18', u'\u306F', u'\u300C', u'\u005C', u'\u0075', u'\u300D', u'\u306B', u'\u7D9A', u'\u3044', u'\u3066', u'\u3001', u'\u6570', u'\u5B57', u'\u307E', u'\u305F', u'\u306F', u'\u5927', u'\u6587', u'\u5B57', u'\u30A2', u'\u30EB', u'\u30D5', u'\u30A1', u'\u30D9', u'\u30C3', u'\u30C8', u'\u3067', u'\u0034', u'\u6841', u'\u306E', u'\u0031', u'\u0036', u'\u9032', u'\u6570', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(115, u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0063', u'\u006F', u'\u0064', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0065', u'\u006E', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u005C', u'\u0075', u'\u0027', u'\u0020', u'\u0066', u'\u006F', u'\u006C', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0079', u'\u0020', u'\u0061', u'\u0020', u'\u0034', u'\u002D', u'\u0064', u'\u0069', u'\u0067', u'\u0069', u'\u0074', u'\u0020', u'\u0068', u'\u0065', u'\u0078', u'\u0061', u'\u0064', u'\u0065', u'\u0063', u'\u0069', u'\u006D', u'\u0061', u'\u006C', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0063', u'\u0061', u'\u0070', u'\u0069', u'\u0074', u'\u0061', u'\u006C', u'\u0020', u'\u006C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u002E');
break;
}
break;
case 65573LL:
switch(m){
case 0LL:
return new Array_<char16_t>(28, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u304C', u'\u9589', u'\u3058', u'\u3089', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0041', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0064', u'\u002E');
break;
}
break;
case 65574LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u6587', u'\u5B57', u'\u5206', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(65, u'\u002E', u'\u002E', u'\u002E', u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u0041', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u002E'));
break;
}
break;
case 65575LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u304C', u'\u7A7A', u'\u3067', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u6587', u'\u5B57', u'\u5206', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(84, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0065', u'\u006D', u'\u0070', u'\u0074', u'\u0079', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u002E', u'\u0020', u'\u0041', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u002E');
break;
}
break;
case 65576LL:
switch(m){
case 0LL:
return new Array_<char16_t>(29, u'\u62EC', u'\u5F27', u'\u300C', u'\u0028', u'\u300D', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u0029', u'\u300D', u'\u304C', u'\u3001', u'\u3042', u'\u308B', u'\u3079', u'\u304D', u'\u5834', u'\u6240', u'\u306B', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(79, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0029', u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0068', u'\u0065', u'\u0073', u'\u0069', u'\u0073', u'\u0020', u'\u0027', u'\u0028', u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0074', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u002E');
break;
}
break;
case 65577LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(14, u'\u6570', u'\u5024', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(35, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0069', u'\u0063', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u002E'));
break;
}
break;
case 65578LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u6570', u'\u5024', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(31, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0069', u'\u0063', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(47, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65579LL:
switch(m){
case 0LL:
return new Array_<char16_t>(27, u'\u0031', u'\u0036', u'\u9032', u'\u6570', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u306F', u'\u300C', u'\u0030', u'\u0078', u'\u300D', u'\u304B', u'\u3089', u'\u59CB', u'\u3081', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(42, u'\u0048', u'\u0065', u'\u0078', u'\u0061', u'\u0064', u'\u0065', u'\u0063', u'\u0069', u'\u006D', u'\u0061', u'\u006C', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0027', u'\u0030', u'\u0078', u'\u0027', u'\u002E');
break;
}
break;
case 65580LL:
switch(m){
case 0LL:
return new Array_<char16_t>(43, u'\u6307', u'\u6570', u'\u8868', u'\u8A18', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u306F', u'\u300C', u'\u0065', u'\u002B', u'\u300D', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u300C', u'\u0065', u'\u002D', u'\u300D', u'\u304B', u'\u3089', u'\u59CB', u'\u3081', u'\u3066', u'\u6307', u'\u6570', u'\u90E8', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(87, u'\u0045', u'\u0078', u'\u0070', u'\u006F', u'\u006E', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0027', u'\u0065', u'\u002B', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0065', u'\u002D', u'\u0027', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u006F', u'\u006E', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0074', u'\u002E');
break;
}
break;
case 65581LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(10, u'\u6D6E', u'\u52D5', u'\u5C0F', u'\u6570', u'\u70B9', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u300D', u'\u304C', u'\u89E3', u'\u91C8', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u5024', u'\u304C', u'\u5927', u'\u304D', u'\u3059', u'\u304E', u'\u308B', u'\u53EF', u'\u80FD', u'\u6027', u'\u304C', u'\u3042', u'\u308A', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(28, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0070', u'\u006F', u'\u0069', u'\u006E', u'\u0074', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(55, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u0065', u'\u0064', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006D', u'\u0061', u'\u0079', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u0061', u'\u0072', u'\u0067', u'\u0065', u'\u002E'));
break;
}
break;
case 65582LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30D3', u'\u30C3', u'\u30C8', u'\u578B', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(41, u'\u300D', u'\u306E', u'\u63A5', u'\u5C3E', u'\u8F9E', u'\u306F', u'\u300C', u'\u0062', u'\u0038', u'\u300D', u'\u300C', u'\u0062', u'\u0031', u'\u0036', u'\u300D', u'\u300C', u'\u0062', u'\u0033', u'\u0032', u'\u300D', u'\u300C', u'\u0062', u'\u0036', u'\u0034', u'\u300D', u'\u306E', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0075', u'\u0066', u'\u0066', u'\u0069', u'\u0078', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0062', u'\u0069', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(45, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0065', u'\u0069', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u0062', u'\u0038', u'\u0027', u'\u002C', u'\u0020', u'\u0027', u'\u0062', u'\u0031', u'\u0036', u'\u0027', u'\u002C', u'\u0020', u'\u0027', u'\u0062', u'\u0033', u'\u0032', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0062', u'\u0036', u'\u0034', u'\u0027', u'\u002E'));
break;
}
break;
case 65583LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u6574', u'\u6570', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u300D', u'\u304C', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30D5', u'\u30ED', u'\u30FC', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0067', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0068', u'\u0061', u'\u0073', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0066', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 131073LL:
switch(m){
case 0LL:
return new Array_<char16_t>(55, u'\u300C', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u300D', u'\u95A2', u'\u6570', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u0020', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u3059', u'\u308B', u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u306B', u'\u300C', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u300D', u'\u3092', u'\u5B9A', u'\u7FA9', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(88, u'\u0027', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0027', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u002E', u'\u0020', u'\u0044', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0064', u'\u002E');
break;
}
break;
case 131074LL:
switch(m){
case 0LL:
return new Array_<char16_t>(37, u'\u300C', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u300D', u'\u95A2', u'\u6570', u'\u306E', u'\u5B9A', u'\u7FA9', u'\u306F', u'\u300C', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u300D', u'\u3068', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(60, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0027', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u0027', u'\u002E');
break;
}
break;
case 131075LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(10, u'\u30E1', u'\u30F3', u'\u30D0', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u5909', u'\u6570', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(36, u'\u300D', u'\u306B', u'\u3001', u'\u300C', u'\u006D', u'\u0065', u'\u300D', u'\u3092', u'\u4ECB', u'\u3055', u'\u305A', u'\u76F4', u'\u63A5', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u305F', u'\u304B', u'\u3001', u'\u95A2', u'\u6570', u'\u3092', u'\u8D85', u'\u3048', u'\u3066', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(24, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(70, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0064', u'\u0069', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u0027', u'\u006D', u'\u0065', u'\u0027', u'\u002C', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0079', u'\u006F', u'\u006E', u'\u0064', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E'));
break;
}
break;
case 131076LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(58, u'\u0040', u'\u300D', u'\u306B', u'\u3064', u'\u3044', u'\u3066', u'\u3001', u'\u81EA', u'\u8EAB', u'\u306E', u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u306E', u'\u30B0', u'\u30ED', u'\u30FC', u'\u30D0', u'\u30EB', u'\u8981', u'\u7D20', u'\u3092', u'\u53C2', u'\u7167', u'\u3059', u'\u308B', u'\u3068', u'\u304D', u'\u306F', u'\u3001', u'\u300C', u'\u0040', u'\u300D', u'\u306E', u'\u524D', u'\u306E', u'\u30BD', u'\u30FC', u'\u30B9', u'\u540D', u'\u3092', u'\u7701', u'\u7565', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(5, u'\u0046', u'\u006F', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(109, u'\u0040', u'\u0027', u'\u002C', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0067', u'\u006C', u'\u006F', u'\u0062', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0069', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0077', u'\u006E', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u002C', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0062', u'\u0065', u'\u0066', u'\u006F', u'\u0072', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0040', u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u006D', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 131077LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(21, u'\u4ED6', u'\u306E', u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u306E', u'\u516C', u'\u958B', u'\u3055', u'\u308C', u'\u3066', u'\u3044', u'\u306A', u'\u3044', u'\u8981', u'\u7D20', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(32, u'\u300D', u'\u3092', u'\u53C2', u'\u7167', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002', u'\u8981', u'\u7D20', u'\u306E', u'\u5148', u'\u982D', u'\u306B', u'\u300C', u'\u002B', u'\u300D', u'\u304C', u'\u4ED8', u'\u3044', u'\u3066', u'\u3044', u'\u308B', u'\u5FC5', u'\u8981', u'\u304C', u'\u3042', u'\u308A', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(22, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0063', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(74, u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u002B', u'\u0027', u'\u002E'));
break;
}
break;
case 131078LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(31, u'\u300D', u'\u306E', u'\u5B9A', u'\u7FA9', u'\u304C', u'\u898B', u'\u3064', u'\u304B', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u540D', u'\u524D', u'\u3092', u'\u9593', u'\u9055', u'\u3048', u'\u3066', u'\u3044', u'\u308B', u'\u53EF', u'\u80FD', u'\u6027', u'\u304C', u'\u3042', u'\u308A', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(30, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(63, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0075', u'\u006E', u'\u0064', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u006D', u'\u0061', u'\u0079', u'\u0020', u'\u0068', u'\u0061', u'\u0076', u'\u0065', u'\u0020', u'\u0062', u'\u0065', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u002E'));
break;
}
break;
case 131079LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u300C', u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u300D', u'\u306E', u'\u5B9A', u'\u7FA9', u'\u304C', u'\u5FAA', u'\u74B0', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(25, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u0069', u'\u0072', u'\u0063', u'\u0075', u'\u006C', u'\u0061', u'\u0074', u'\u0069', u'\u006E', u'\u0067', u'\u002E'));
break;
}
break;
case 131080LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u300C', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u300D', u'\u306E', u'\u7D99', u'\u627F', u'\u304C', u'\u5FAA', u'\u74B0', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(26, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0068', u'\u0065', u'\u0072', u'\u0069', u'\u0074', u'\u0061', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u0069', u'\u0072', u'\u0063', u'\u0075', u'\u006C', u'\u0061', u'\u0074', u'\u0069', u'\u006E', u'\u0067', u'\u002E'));
break;
}
break;
case 131081LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(18, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3059', u'\u308B', u'\u89AA', u'\u30AF', u'\u30E9', u'\u30B9', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u898B', u'\u3064', u'\u304B', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(50, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0065', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0075', u'\u006E', u'\u0064', u'\u002E'));
break;
}
break;
case 131082LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(5, u'\u30E1', u'\u30F3', u'\u30D0', u'\u540D', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(43, u'\u300D', u'\u304C', u'\u89AA', u'\u30AF', u'\u30E9', u'\u30B9', u'\u306E', u'\u3082', u'\u306E', u'\u3068', u'\u91CD', u'\u8907', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3059', u'\u308B', u'\u5834', u'\u5408', u'\u306F', u'\u300C', u'\u002A', u'\u300D', u'\u3092', u'\u4ED8', u'\u3051', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(71, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0064', u'\u0075', u'\u0070', u'\u006C', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u002E', u'\u0020', u'\u0041', u'\u0064', u'\u0064', u'\u0020', u'\u0027', u'\u002A', u'\u0027', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u006E', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u002E'));
break;
}
break;
case 131083LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u95A2', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3092', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u004F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 131084LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(13, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u305F', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u300D', u'\u3068', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u4FEE', u'\u98FE', u'\u5B50', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(66, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0020', u'\u006D', u'\u006F', u'\u0064', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 131085LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(13, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u305F', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3068', u'\u578B', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u5F15', u'\u6570', u'\u540D', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(72, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0020', u'\u0064', u'\u006F', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 131086LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(20, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u304C', u'\u8A31', u'\u53EF', u'\u3055', u'\u308C', u'\u3066', u'\u3044', u'\u306A', u'\u3044', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3092', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(54, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 131087LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u5217', u'\u6319', u'\u578B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(36, u'\u300D', u'\u306E', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u306E', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(27, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(69, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006D', u'\u0061', u'\u0064', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E')));
break;
}
break;
case 131088LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u5217', u'\u6319', u'\u578B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u300D', u'\u306E', u'\u5024', u'\u304C', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u306E', u'\u6709', u'\u52B9', u'\u7BC4', u'\u56F2', u'\u3092', u'\u8D85', u'\u3048', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(27, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(40, u'\u0027', u'\u0020', u'\u0065', u'\u0078', u'\u0063', u'\u0065', u'\u0065', u'\u0064', u'\u0073', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0072', u'\u0061', u'\u006E', u'\u0067', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E')));
break;
}
break;
case 131089LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u5217', u'\u6319', u'\u578B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u300D', u'\u306E', u'\u5024', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u300D', u'\u304C', u'\u5225', u'\u306E', u'\u8981', u'\u7D20', u'\u306E', u'\u5024', u'\u3068', u'\u91CD', u'\u8907', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(11, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(19, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(50, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0064', u'\u0075', u'\u0070', u'\u006C', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0061', u'\u006E', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E'))));
break;
}
break;
case 131090LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(15, u'\u5217', u'\u6319', u'\u578B', u'\u5185', u'\u306B', u'\u5B58', u'\u5728', u'\u3057', u'\u306A', u'\u3044', u'\u8981', u'\u7D20', u'\u540D', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(19, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(58, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 131091LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u30B0', u'\u30ED', u'\u30FC', u'\u30D0', u'\u30EB', u'\u5909', u'\u6570', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(29, u'\u300D', u'\u306E', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(30, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0067', u'\u006C', u'\u006F', u'\u0062', u'\u0061', u'\u006C', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(37, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E'));
break;
}
break;
case 131092LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u300C', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u300D', u'\u6587', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(29, u'\u300D', u'\u306E', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(37, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E'));
break;
}
break;
case 131093LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(3, u'\u5909', u'\u6570', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u300D', u'\u306E', u'\u578B', u'\u3068', u'\u5024', u'\u306E', u'\u578B', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(26, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(32, u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E'));
break;
}
break;
case 131094LL:
switch(m){
case 0LL:
return new Array_<char16_t>(31, u'\u300C', u'\u0069', u'\u0066', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(65, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131095LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u300C', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u300D', u'\u7BC0', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(68, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131096LL:
switch(m){
case 0LL:
return new Array_<char16_t>(34, u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u6BD4', u'\u8F03', u'\u53EF', u'\u80FD', u'\u306A', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(75, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0061', u'\u0072', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131097LL:
switch(m){
case 0LL:
return new Array_<char16_t>(36, u'\u300C', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u306E', u'\u578B', u'\u304C', u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306E', u'\u578B', u'\u3068', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(106, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002E');
break;
}
break;
case 131098LL:
switch(m){
case 0LL:
return new Array_<char16_t>(34, u'\u300C', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(68, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131099LL:
switch(m){
case 0LL:
return new Array_<char16_t>(31, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u521D', u'\u671F', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(54, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131100LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u7D42', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006E', u'\u0064', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131101LL:
switch(m){
case 0LL:
return new Array_<char16_t>(31, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u5897', u'\u6E1B', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(68, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u002F', u'\u0020', u'\u0064', u'\u0065', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131102LL:
switch(m){
case 0LL:
return new Array_<char16_t>(39, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u5897', u'\u6E1B', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(84, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u002F', u'\u0020', u'\u0064', u'\u0065', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E');
break;
}
break;
case 131103LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u5897', u'\u6E1B', u'\u5024', u'\u306F', u'\u300C', u'\u0030', u'\u300D', u'\u4EE5', u'\u5916', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(72, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u002F', u'\u0020', u'\u0064', u'\u0065', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0030', u'\u0027', u'\u002E');
break;
}
break;
case 131104LL:
switch(m){
case 0LL:
return new Array_<char16_t>(45, u'\u300C', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u7BC0', u'\u306E', u'\u6761', u'\u4EF6', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u306E', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(104, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E');
break;
}
break;
case 131105LL:
switch(m){
case 0LL:
return new Array_<char16_t>(32, u'\u300C', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u300D', u'\u6587', u'\u306E', u'\u4F8B', u'\u5916', u'\u30B3', u'\u30FC', u'\u30C9', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(59, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0078', u'\u0063', u'\u0065', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u006F', u'\u0064', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131106LL:
switch(m){
case 0LL:
return new Array_<char16_t>(31, u'\u623B', u'\u308A', u'\u5024', u'\u3092', u'\u8FD4', u'\u3059', u'\u95A2', u'\u6570', u'\u3067', u'\u306F', u'\u300C', u'\u0072', u'\u0065', u'\u0074', u'\u300D', u'\u6587', u'\u306F', u'\u5024', u'\u3092', u'\u8FD4', u'\u3055', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(72, u'\u0046', u'\u006F', u'\u0072', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0073', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u002C', u'\u0020', u'\u0027', u'\u0072', u'\u0065', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u002E');
break;
}
break;
case 131107LL:
switch(m){
case 0LL:
return new Array_<char16_t>(27, u'\u300C', u'\u0072', u'\u0065', u'\u0074', u'\u300D', u'\u6587', u'\u306E', u'\u5024', u'\u306E', u'\u578B', u'\u304C', u'\u95A2', u'\u6570', u'\u306E', u'\u623B', u'\u308A', u'\u5024', u'\u306E', u'\u578B', u'\u3068', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(79, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0072', u'\u0065', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E');
break;
}
break;
case 131108LL:
switch(m){
case 0LL:
return new Array_<char16_t>(50, u'\u300C', u'\u0064', u'\u006F', u'\u300D', u'\u6587', u'\u3067', u'\u6700', u'\u5F8C', u'\u306B', u'\u884C', u'\u3046', u'\u6F14', u'\u7B97', u'\u306F', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u3084', u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306A', u'\u3069', u'\u306E', u'\u526F', u'\u4F5C', u'\u7528', u'\u306E', u'\u3042', u'\u308B', u'\u6F14', u'\u7B97', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(104, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006C', u'\u0061', u'\u0073', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0027', u'\u0064', u'\u006F', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0073', u'\u0069', u'\u0064', u'\u0065', u'\u0020', u'\u0065', u'\u0066', u'\u0066', u'\u0065', u'\u0063', u'\u0074', u'\u0073', u'\u0020', u'\u0073', u'\u0075', u'\u0063', u'\u0068', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0073', u'\u002E');
break;
}
break;
case 131109LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(23, u'\u300D', u'\u6587', u'\u306B', u'\u306F', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u540D', u'\u3092', u'\u6307', u'\u5B9A', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(1, u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(39, u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0067', u'\u0069', u'\u0076', u'\u0065', u'\u006E', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u002E'));
break;
}
break;
case 131110LL:
switch(m){
case 0LL:
return new Array_<char16_t>(32, u'\u300C', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074', u'\u300D', u'\u6587', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(73, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131111LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u578B', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3059', u'\u3079', u'\u304D', u'\u3068', u'\u3053', u'\u308D', u'\u306B', u'\u578B', u'\u4EE5', u'\u5916', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(54, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E');
break;
}
break;
case 131112LL:
switch(m){
case 0LL:
return new Array_<char16_t>(24, u'\u5024', u'\u304C', u'\u8A2D', u'\u5B9A', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u5834', u'\u6240', u'\u306B', u'\u5024', u'\u304C', u'\u6E21', u'\u3055', u'\u308C', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(51, u'\u004E', u'\u006F', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0070', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u006D', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0074', u'\u002E');
break;
}
break;
case 131113LL:
switch(m){
case 0LL:
return new Array_<char16_t>(15, u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u578B', u'\u304C', u'\u6B63', u'\u3057', u'\u304F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(28, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u002E');
break;
}
break;
case 131114LL:
switch(m){
case 0LL:
return new Array_<char16_t>(25, u'\u4EE3', u'\u5165', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u5DE6', u'\u8FBA', u'\u5024', u'\u304C', u'\u4EE3', u'\u5165', u'\u53EF', u'\u80FD', u'\u306A', u'\u5909', u'\u6570', u'\u3067', u'\u306F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(72, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006C', u'\u0065', u'\u0066', u'\u0074', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0073', u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0073', u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u002E');
break;
}
break;
case 131115LL:
switch(m){
case 0LL:
return new Array_<char16_t>(17, u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u306F', u'\u5024', u'\u6BD4', u'\u8F03', u'\u304C', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(35, u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0079', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u002E');
break;
}
break;
case 131116LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(11, u'\u300C', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u540D', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u300D', u'\u304B', u'\u3089', u'\u578B', u'\u304C', u'\u63A8', u'\u6E2C', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(54, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0066', u'\u0065', u'\u0072', u'\u0072', u'\u0065', u'\u0064', u'\u0020', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0027', u'\u002E'));
break;
}
break;
case 131117LL:
switch(m){
case 0LL:
return new Array_<char16_t>(22, u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u306F', u'\u300C', u'\u007E', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u3067', u'\u9023', u'\u7D50', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u006E', u'\u0061', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u007E', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u002E');
break;
}
break;
case 131118LL:
switch(m){
case 0LL:
return new Array_<char16_t>(9, u'\u0030', u'\u3067', u'\u9664', u'\u7B97', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(13, u'\u0044', u'\u0069', u'\u0076', u'\u0069', u'\u0064', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0079', u'\u0020', u'\u0030', u'\u002E');
break;
}
break;
case 131119LL:
switch(m){
case 0LL:
return new Array_<char16_t>(34, u'\u300C', u'\u003A', u'\u0024', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u5DE6', u'\u8FBA', u'\u5024', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u53F3', u'\u8FBA', u'\u5024', u'\u304C', u'\u4EE3', u'\u5165', u'\u53EF', u'\u80FD', u'\u306A', u'\u5909', u'\u6570', u'\u3067', u'\u306F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(75, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006C', u'\u0065', u'\u0066', u'\u0074', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0072', u'\u0069', u'\u0067', u'\u0068', u'\u0074', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u003A', u'\u0024', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0073', u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u002E');
break;
}
break;
case 131120LL:
switch(m){
case 0LL:
return new Array_<char16_t>(32, u'\u300C', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(66, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u002E');
break;
}
break;
case 131121LL:
switch(m){
case 0LL:
return new Array_<char16_t>(33, u'\u300C', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u62EC', u'\u5F27', u'\u5185', u'\u306E', u'\u0032', u'\u3064', u'\u306E', u'\u5024', u'\u306F', u'\u540C', u'\u3058', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(80, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0077', u'\u006F', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0068', u'\u0065', u'\u0073', u'\u0069', u'\u0073', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131122LL:
switch(m){
case 0LL:
return new Array_<char16_t>(38, u'\u300C', u'\u0023', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306F', u'\u30AF', u'\u30E9', u'\u30B9', u'\u3084', u'\u300C', u'\u006C', u'\u0069', u'\u0073', u'\u0074', u'\u300D', u'\u300C', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u300D', u'\u306A', u'\u3069', u'\u306E', u'\u53C2', u'\u7167', u'\u578B', u'\u306B', u'\u3057', u'\u304B', u'\u4F7F', u'\u3048', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(89, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0023', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u0020', u'\u006F', u'\u006E', u'\u006C', u'\u0079', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0073', u'\u0020', u'\u0073', u'\u0075', u'\u0063', u'\u0068', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0073', u'\u002C', u'\u0020', u'\u0027', u'\u006C', u'\u0069', u'\u0073', u'\u0074', u'\u0027', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0027', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131123LL:
switch(m){
case 0LL:
return new Array_<char16_t>(37, u'\u300C', u'\u0023', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306B', u'\u8A18', u'\u8FF0', u'\u3059', u'\u308B', u'\u914D', u'\u5217', u'\u306E', u'\u8981', u'\u7D20', u'\u6570', u'\u306E', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(71, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0023', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131124LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u95A2', u'\u6570', u'\u3067', u'\u306A', u'\u3044', u'\u3082', u'\u306E', u'\u3092', u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(51, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0065', u'\u0064', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0069', u'\u0066', u'\u0020', u'\u0069', u'\u0074', u'\u0020', u'\u0077', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E');
break;
}
break;
case 131125LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(16, u'\u500B', u'\u306E', u'\u5F15', u'\u6570', u'\u3092', u'\u53D7', u'\u3051', u'\u53D6', u'\u308B', u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306B'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(20, u'\u500B', u'\u306E', u'\u5F15', u'\u6570', u'\u304C', u'\u6307', u'\u5B9A', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u95A2', u'\u6570', u'\u306E', u'\u578B', u'\u306F', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u300D', u'\u3067', u'\u3059', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(59, u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u0077', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0072', u'\u0065', u'\u0063', u'\u0065', u'\u0069', u'\u0076', u'\u0065', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(34, u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0027'))));
break;
}
break;
case 131126LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306E'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(28, u'\u756A', u'\u76EE', u'\u306E', u'\u53C2', u'\u7167', u'\u6E21', u'\u3057', u'\u306E', u'\u5F15', u'\u6570', u'\u306B', u'\u3001', u'\u53C2', u'\u7167', u'\u3092', u'\u53D6', u'\u308C', u'\u306A', u'\u3044', u'\u5024', u'\u304C', u'\u6E21', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(52, u'\u0041', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0070', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(74, u'\u0074', u'\u0068', u'\u002F', u'\u0073', u'\u0074', u'\u002F', u'\u006E', u'\u0064', u'\u002F', u'\u0072', u'\u0064', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002C', u'\u0020', u'\u0077', u'\u0068', u'\u0069', u'\u0063', u'\u0068', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0061', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002C', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u002E'));
break;
}
break;
case 131127LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(19, u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306E', u'\u5F15', u'\u6570', u'\u306E', u'\u578B', u'\u304C', u'\u7570', u'\u306A', u'\u308A', u'\u307E', u'\u3059', u'\u3002', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u756A', u'\u76EE', u'\u306E', u'\u5F15', u'\u6570', u'\u3067', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(12, u'\u300D', u'\u3092', u'\u6307', u'\u5B9A', u'\u3059', u'\u3079', u'\u304D', u'\u3068', u'\u3053', u'\u308D', u'\u306B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u6E21', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(58, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0064', u'\u0069', u'\u0066', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(25, u'\u0027', u'\u0020', u'\u0068', u'\u0061', u'\u0073', u'\u0020', u'\u0062', u'\u0065', u'\u0065', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(27, u'\u0027', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(21, u'\u0074', u'\u0068', u'\u002F', u'\u0073', u'\u0074', u'\u002F', u'\u006E', u'\u0064', u'\u002F', u'\u0072', u'\u0064', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E'))));
break;
}
break;
case 131128LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u914D', u'\u5217', u'\u3067', u'\u306A', u'\u3044', u'\u3082', u'\u306E', u'\u306B', u'\u914D', u'\u5217', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(37, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u002E');
break;
}
break;
case 131129LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u914D', u'\u5217', u'\u306E', u'\u6DFB', u'\u5B57', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(28, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0064', u'\u0069', u'\u0063', u'\u0065', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131130LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u53C2', u'\u7167', u'\u5148', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u002E'));
break;
}
break;
case 131131LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(12, u'\u516C', u'\u958B', u'\u3055', u'\u308C', u'\u3066', u'\u3044', u'\u306A', u'\u3044', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u3092', u'\u53C2', u'\u7167', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0041', u'\u006E', u'\u0020', u'\u0075', u'\u006E', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0073', u'\u0068', u'\u0065', u'\u0064', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 131132LL:
switch(m){
case 0LL:
return new Array_<char16_t>(25, u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u306E', u'\u578B', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(61, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u002E');
break;
}
break;
case 131133LL:
switch(m){
case 0LL:
return new Array_<char16_t>(29, u'\u5024', u'\u578B', u'\u306E', u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306B', u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(60, u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u002E');
break;
}
break;
case 131134LL:
switch(m){
case 0LL:
return new Array_<char16_t>(71, u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306E', u'\u3059', u'\u3079', u'\u3066', u'\u306E', u'\u8981', u'\u7D20', u'\u304C', u'\u300C', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u540D', u'\u306E', u'\u305F', u'\u3081', u'\u3001', u'\u578B', u'\u304C', u'\u6C7A', u'\u5B9A', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u306E', u'\u8981', u'\u7D20', u'\u540D', u'\u3092', u'\u30AD', u'\u30E3', u'\u30B9', u'\u30C8', u'\u3057', u'\u3066', u'\u578B', u'\u3092', u'\u793A', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(164, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0074', u'\u0065', u'\u0072', u'\u006D', u'\u0069', u'\u006E', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0063', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u0020', u'\u0061', u'\u0072', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0027', u'\u002E', u'\u0020', u'\u0043', u'\u0061', u'\u0073', u'\u0074', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0069', u'\u006E', u'\u0064', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131135LL:
switch(m){
case 0LL:
return new Array_<char16_t>(70, u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306E', u'\u3059', u'\u3079', u'\u3066', u'\u306E', u'\u8981', u'\u7D20', u'\u304C', u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u306E', u'\u305F', u'\u3081', u'\u3001', u'\u578B', u'\u304C', u'\u6C7A', u'\u5B9A', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u306E', u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u3092', u'\u30AD', u'\u30E3', u'\u30B9', u'\u30C8', u'\u3057', u'\u3066', u'\u578B', u'\u3092', u'\u793A', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(136, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0074', u'\u0065', u'\u0072', u'\u006D', u'\u0069', u'\u006E', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0063', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u0020', u'\u0061', u'\u0072', u'\u0065', u'\u0020', u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u002E', u'\u0020', u'\u0043', u'\u0061', u'\u0073', u'\u0074', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0069', u'\u006E', u'\u0064', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131136LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(11, u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3067', u'\u304D', u'\u306A', u'\u3044', u'\u8981', u'\u7D20', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u300D', u'\u306B', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(31, u'\u0041', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 196609LL:
switch(m){
case 0LL:
return new Array_<char16_t>(3, u'\u6210', u'\u529F', u'\u3002');
break;
default:
return new Array_<char16_t>(8, u'\u0053', u'\u0075', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u002E');
break;
}
break;
case 196610LL:
switch(m){
case 0LL:
return new Array_<char16_t>(3, u'\u5931', u'\u6557', u'\u3002');
break;
default:
return new Array_<char16_t>(8, u'\u0046', u'\u0061', u'\u0069', u'\u006C', u'\u0075', u'\u0072', u'\u0065', u'\u002E');
break;
}
break;
case 196611LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u958B', u'\u59CB', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0043', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0065', u'\u0064', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u002E'));
break;
}
break;
case 196612LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(10, u'\u5B57', u'\u53E5', u'\u69CB', u'\u6587', u'\u89E3', u'\u6790', u'\u5B8C', u'\u4E86', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0050', u'\u0061', u'\u0072', u'\u0073', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u002E'));
break;
}
break;
case 196613LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u610F', u'\u5473', u'\u89E3', u'\u6790', u'\u5B8C', u'\u4E86', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u3002'));
break;
default:
return ((new Array_<char16_t>(31, u'\u0053', u'\u0065', u'\u006D', u'\u0061', u'\u006E', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0061', u'\u006E', u'\u0061', u'\u006C', u'\u0079', u'\u0073', u'\u0069', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u002E'));
break;
}
break;
case 196614LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u751F', u'\u6210', u'\u51E6', u'\u7406', u'\u5B8C', u'\u4E86', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0047', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0070', u'\u0072', u'\u006F', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vm)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u002E'));
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// cmp
static int64_t ato(kl* atp /*me*/, kl* atq /*t*/){
return (atr)(((static_cast<int64_t>((atp)->km)) - (static_cast<int64_t>((atq)->km))));
}
// toStr
static Array_<char16_t>* ats(kl* att /*me*/){
return v<bool>(((att)->km), (new Array_<int64_t>(1, (0LL))));
}
// _dtor
static void atu(kl* atv){
}
// _copy
static kl* atw(kl* atx){
kl* aty = nullptr;
(aty) = (new kl());
((aty)->km) = ((atx)->km);
return as_<kl>(classTable_, (aty), 20);
}
// _toBin
static Array_<uint8_t>* atz(kl* aua){
Array_<uint8_t>* aub = nullptr;
(aub) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(aub) = ((aub)->Cat(toBin_((aua)->km)));
return aub;
}
// _fromBin
static kl* aud(kl* aue, Array_<uint8_t>* auf, int64_t* aug){
kl* auh = nullptr;
(auh) = (new kl());
((auh)->km) = (fromBin_<bool>((auf), (*aug)));
return auh;
}
// _forEach
template<typename T_, typename K_, typename V_> static bool ko(T_ aui /*me_*/, Array_<int64_t>* auj /*type*/, const void* auk /*callback*/, fz* aul /*data*/){
return dictForEach_(aui->B, static_cast<bool(*)(K_, V_, Class_*)>(auk), aul);
}
// parseSrc
static bool kp(Array_<char16_t>* aum /*key*/, fx* aun /*value*/, fz* auo /*data*/){
Array_<char16_t>* auw = nullptr; // truePath
avm* avk = nullptr; // ast
if(!eqAddr_((aun), (nullptr))){
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (aum), (aun));
return true;
}
if(!((aus)((aum)))){
(ad)((4LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (aum))));
return true;
}
((as_<kl>(classTable_, (auo), 20))->km) = (false);
if(((aum)->At(0LL)) == (u'\u005C')){
(auw) = (((ay)->Cat((aux)((auy<Array_<char16_t>*>((aum), (new Array_<int64_t>(1, (0LL))), (1LL), (-1LL))))))->Cat(new Array_<char16_t>(3, u'\u002E', u'\u006B', u'\u006E')));
}
else{
(auw) = (((av)->Cat((aux)((aum))))->Cat(new Array_<char16_t>(3, u'\u002E', u'\u006B', u'\u006E')));
}
(be) = ((ava)((new avb()), (auw)));
if(eqAddr_((be), (nullptr))){
(ad)((5LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (auw))));
return true;
}
(bf) = (aum);
(ave) = (1LL);
(avf) = (0LL);
(avg) = (u'\u0000');
(avh) = (u'\u0000');
(avi) = (false);
(bg) = (new Stack_<fx*>());
(avj) = (0LL);
(bh) = (nullptr);
(avk) = ((avl)());
(avo)((be));
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (aum), (avk));
return true;
}
// searchMain
static fw* ks(){
fx* avp = nullptr; // ast
bool avr = false;
fx* avu = nullptr; // mainFunc
bool avv = false;
fw* avy = nullptr; // mainFunc2
(avp) = (avq<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u005C'))->Cat(az)), (&avr)));
if(eqAddr_((avp), (nullptr))){
(ad)((131073LL), (nullptr), (nullptr));
return nullptr;
}
(avu) = (avq<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((avp)->nh), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006D', u'\u0061', u'\u0069', u'\u006E')), (&avv)));
if((eqAddr_((avu), (nullptr))) || (((avu)->lw) != (256LL))){
(ad)((131073LL), (nullptr), (nullptr));
return nullptr;
}
(avy) = (as_<fw>(classTable_, (avu), 8));
if(((((((avy)->sg)->Len()) != (0LL)) || (!eqAddr_(((avy)->sh), (nullptr)))) || (((avy)->sm) != (0LL))) || ((((avy)->sf)->Len()) != (0LL))){
(ad)((131074LL), ((avy)->ne), (nullptr));
}
return avy;
}
// resolveIdentifier
static bool kv(Array_<char16_t>* awb /*key*/, fx* awc /*value*/, fz* awd /*data*/){
List_<avn*>* awe = nullptr; // scopeRefedItems
avn* awj = nullptr; // item
fx* awl = nullptr; // ast
bool awn = false; // otherFile
int64_t awo = 0; // ptrAt
Array_<char16_t>* awq = nullptr; // ptrName
fx* awr = nullptr; // foundAst
Array_<char16_t>* aww = nullptr; // ptrSrc
fx* axa = nullptr; // ast2
bool axb = false;
bool axe = false;
fx* axg = nullptr; // scope
bool axi = false; // overFunc
fx* axt = nullptr; // ast2
bool axu = false;
bool axx = false; // err
int64_t ayc = 0; // kind
if(!(is_(classTable_, (awc), 32))){
throw 0xE9170000U;
}
(awe) = ((as_<avm>(classTable_, (awc), 32))->awf);
awg<List_<avn*>*>((awe), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<avn*>*>((awe), (new Array_<int64_t>(1, (0LL)))))){
(awj) = (awk<List_<avn*>*, avn*>((awe), (new Array_<int64_t>(1, (0LL)))));
(awl) = ((awj)->awm);
if(!(eqAddr_(((awl)->nj), (nullptr)))){
throw 0xE9170000U;
}
if(!(!eqAddr_(((awl)->ni), (nullptr)))){
throw 0xE9170000U;
}
(awn) = (false);
(awo) = (awp<Array_<char16_t>*, char16_t>(((awl)->ni), (new Array_<int64_t>(1, (0LL))), (u'\u0040'), (-1LL)));
(awq) = (((awo) == (-1LL)) ? ((awl)->ni) : (auy<Array_<char16_t>*>(((awl)->ni), (new Array_<int64_t>(1, (0LL))), ((awo) + (1LL)), (-1LL))));
(awr) = (nullptr);
if((awo) != (-1LL)){
if((awo) == (0LL)){
(aww) = (awb);
}
else{
(aww) = (auy<Array_<char16_t>*>(((awl)->ni), (new Array_<int64_t>(1, (0LL))), (0LL), (awo)));
if(cmp_((aww), (awb)) == 0){
(ad)((131076LL), ((awl)->ne), (new Array_<Array_<char16_t>*>(1, (aww))));
}
(awn) = (true);
}
(axa) = (avq<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), (aww), (&axb)));
if(!eqAddr_((axa), (nullptr))){
(awr) = (avq<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((axa)->nh), (new Array_<int64_t>(1, (0LL))), (awq), (&axe)));
}
}
else{
(axg) = ((awj)->axh);
(axi) = (false);
while(true){
if(eqAddr_(((axg)->ng), (nullptr))){
break;
}
if((!eqAddr_(((axg)->nf), (nullptr))) && (cmp_(((axg)->nf), (awq)) == 0)){
if((((axg)->lw) == (256LL)) && (!eqAddr_(((axg)->ni), (nullptr)))){
(ad)((131075LL), ((awl)->ne), (new Array_<Array_<char16_t>*>(1, (awq))));
}
else{
(awr) = (axg);
break;
}
}
(axt) = (avq<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((axg)->nh), (new Array_<int64_t>(1, (0LL))), (awq), (&axu)));
if(!eqAddr_((axt), (nullptr))){
(axx) = (false);
if(axi){
if(((axt)->lw) == (7LL)){
(ayc) = ((as_<gb>(classTable_, (axt), 10))->qk);
if((((ayc) == (5LL)) || ((ayc) == (3LL))) || ((ayc) == (2LL))){
(axx) = (true);
}
}
if((!(axx)) && ((ayg<int64_t>(((axt)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
(axx) = (true);
}
}
if(((!(axx)) && (((axt)->lw) == (256LL))) && (!eqAddr_(((axt)->ni), (nullptr)))){
(axx) = (true);
}
if(axx){
(ad)((131075LL), ((awl)->ne), (new Array_<Array_<char16_t>*>(1, (awq))));
}
else{
(awr) = (axt);
break;
}
}
if(((axg)->lw) == (256LL)){
(axi) = (true);
}
(axg) = ((axg)->ng);
}
}
if(!eqAddr_((awr), (nullptr))){
if((awn) && (!((awr)->no))){
(ad)((131077LL), ((awl)->ne), (new Array_<Array_<char16_t>*>(1, ((awl)->ni))));
}
((awl)->nj) = (awr);
}
else{
(ad)((131078LL), ((awl)->ne), (new Array_<Array_<char16_t>*>(1, ((awl)->ni))));
((awl)->nj) = (nullptr);
}
ayu<List_<avn*>*>((awe), (new Array_<int64_t>(1, (0LL))));
}
return true;
}
// rebuild
static fw* kw(fw* ayv /*mainFunc*/){
fw* ayx = nullptr; // entry
fx* aza = nullptr; // root
bool azb = false;
(ayx) = ((ayy)((ayv)));
(ayz)((ayx));
(aza) = (avq<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u005C'))->Cat(az)), (&azb)));
if(!(is_(classTable_, (aza), 32))){
throw 0xE9170000U;
}
uj<List_<fx*>*, fx*>(((as_<avm>(classTable_, (aza), 32))->azc), (new Array_<int64_t>(1, (0LL))), (ayx));
ko<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), (azd), (nullptr));
return ayx;
}
// addr
static uint64_t mk(fz* aze /*class_*/){
return reinterpret_cast<uint64_t>(aze);
}
// _addList
template<typename T_, typename C_> static void uj(T_ azf /*me_*/, Array_<int64_t>* azg /*type*/, C_ azh /*item*/){
azf->B.push_back(azh);
}
// _addQueue
template<typename T_, typename C_> static void um(T_ azi /*me_*/, Array_<int64_t>* azj /*type*/, C_ azk /*item*/){
azi->B.push(azk);
}
// _dtor
static void azl(uo* azm){
((azm)->azn) = (nullptr);
((azm)->azo) = (nullptr);
}
// _copy
static uo* azp(uo* azq){
uo* azr = nullptr;
(azr) = (new uo());
((azr)->azs) = ((azq)->azs);
((azr)->azt) = ((azq)->azt);
((azr)->azn) = (copy_((azq)->azn));
((azr)->azo) = (copy_((azq)->azo));
return as_<uo>(classTable_, (azr), 24);
}
// _toBin
static Array_<uint8_t>* azu(uo* azv){
Array_<uint8_t>* azw = nullptr;
(azw) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(azw) = ((azw)->Cat(toBin_((azv)->azs)));
(azw) = ((azw)->Cat(toBin_((azv)->azt)));
(azw) = ((azw)->Cat(toBin_((azv)->azn)));
(azw) = ((azw)->Cat(toBin_((azv)->azo)));
return azw;
}
// _fromBin
static uo* bab(uo* bac, Array_<uint8_t>* bad, int64_t* bae){
uo* baf = nullptr;
(baf) = (new uo());
((baf)->azs) = (fromBin_<bool>((bad), (*bae)));
((baf)->azt) = (fromBin_<bool>((bad), (*bae)));
((baf)->azn) = (fromBin_<fx*>((bad), (*bae)));
((baf)->azo) = (fromBin_<uo*>((bad), (*bae)));
return baf;
}
// _dtor
static void bag(un* bah){
((bah)->bai) = (nullptr);
((bah)->ne) = (nullptr);
((bah)->nf) = (nullptr);
((bah)->ng) = (nullptr);
((bah)->nh) = (nullptr);
((bah)->ni) = (nullptr);
((bah)->nj) = (nullptr);
((bah)->nk) = (nullptr);
}
// _copy
static un* baj(un* bak){
un* bal = nullptr;
(bal) = (new un());
((bal)->bai) = (copy_((bak)->bai));
((bal)->ne) = (copy_((bak)->ne));
((bal)->nf) = (copy_((bak)->nf));
((bal)->ng) = (copy_((bak)->ng));
((bal)->nh) = (copy_((bak)->nh));
((bal)->ni) = (copy_((bak)->ni));
((bal)->nj) = (copy_((bak)->nj));
((bal)->nk) = (copy_((bak)->nk));
((bal)->no) = ((bak)->no);
((bal)->lw) = ((bak)->lw);
return as_<un>(classTable_, (bal), 22);
}
// _toBin
static Array_<uint8_t>* bam(un* ban){
Array_<uint8_t>* bao = nullptr;
(bao) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bao) = ((bao)->Cat(toBin_((ban)->bai)));
(bao) = ((bao)->Cat(toBin_((ban)->ne)));
(bao) = ((bao)->Cat(toBin_((ban)->nf)));
(bao) = ((bao)->Cat(toBin_((ban)->ng)));
(bao) = ((bao)->Cat(toBin_((ban)->nh)));
(bao) = ((bao)->Cat(toBin_((ban)->ni)));
(bao) = ((bao)->Cat(toBin_((ban)->nj)));
(bao) = ((bao)->Cat(toBin_((ban)->nk)));
(bao) = ((bao)->Cat(toBin_((ban)->no)));
(bao) = ((bao)->Cat(toBin_((ban)->lw)));
return bao;
}
// _fromBin
static un* baz(un* bba, Array_<uint8_t>* bbb, int64_t* bbc){
un* bbd = nullptr;
(bbd) = (new un());
((bbd)->bai) = (fromBin_<List_<uo*>*>((bbb), (*bbc)));
((bbd)->ne) = (fromBin_<ga*>((bbb), (*bbc)));
((bbd)->nf) = (fromBin_<Array_<char16_t>*>((bbb), (*bbc)));
((bbd)->ng) = (fromBin_<fx*>((bbb), (*bbc)));
((bbd)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((bbb), (*bbc)));
((bbd)->ni) = (fromBin_<Array_<char16_t>*>((bbb), (*bbc)));
((bbd)->nj) = (fromBin_<fx*>((bbb), (*bbc)));
((bbd)->nk) = (fromBin_<fy*>((bbb), (*bbc)));
((bbd)->no) = (fromBin_<bool>((bbb), (*bbc)));
((bbd)->lw) = (fromBin_<int64_t>((bbb), (*bbc)));
return bbd;
}
// _dtor
static void bbe(up* bbf){
((bbf)->bbg) = (nullptr);
((bbf)->bbh) = (nullptr);
}
// _copy
static up* bbi(up* bbj){
up* bbk = nullptr;
(bbk) = (new up());
((bbk)->bbg) = (copy_((bbj)->bbg));
((bbk)->bbh) = (copy_((bbj)->bbh));
return as_<up>(classTable_, (bbk), 26);
}
// _toBin
static Array_<uint8_t>* bbl(up* bbm){
Array_<uint8_t>* bbn = nullptr;
(bbn) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bbn) = ((bbn)->Cat(toBin_((bbm)->bbg)));
(bbn) = ((bbn)->Cat(toBin_((bbm)->bbh)));
return bbn;
}
// _fromBin
static up* bbq(up* bbr, Array_<uint8_t>* bbs, int64_t* bbt){
up* bbu = nullptr;
(bbu) = (new up());
((bbu)->bbg) = (fromBin_<Array_<char16_t>*>((bbs), (*bbt)));
((bbu)->bbh) = (fromBin_<gc*>((bbs), (*bbt)));
return bbu;
}
// _getQueue
template<typename T_, typename R_> static R_ uu(T_ bbv /*me_*/, Array_<int64_t>* bbw /*type*/){
R_ r_ = bbv->B.front();
bbv->B.pop();
return r_;
}
// buildFunc
static void uv(fw* bbx /*ast*/){
bca* bby = nullptr; // info
Array_<char16_t>* bce = nullptr; // template
Array_<char16_t>* bcs = nullptr; // retType
Array_<char16_t>* bcw = nullptr; // arg
int64_t bcy = 0; // idx
List_<gb*>* bcz = nullptr; // items
gb* bdb = nullptr; // item
bca* bdf = nullptr; // info2
bool bel = false; // hasMembers
gb* beo = nullptr; // arg2
List_<uo*>* ber = nullptr; // members
int64_t bex = 0; // localVarPos
gb* bfc = nullptr; // localVar
bca* bfd = nullptr; // info2
up* bfl = nullptr; // tmpVar
(bby) = ((bbz)((bbx)));
if((bby)->bcc){
return;
}
((bby)->bcc) = (true);
(bce) = (new Array_<char16_t>(0));
if((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL)){
if((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)){
(bce) = (new Array_<char16_t>(48, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u004B', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0056', u'\u005F', u'\u003E', u'\u0020'));
}
else if((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (8LL))) == (8LL)){
if((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(bce) = (new Array_<char16_t>(48, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0043', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0052', u'\u005F', u'\u003E', u'\u0020'));
}
else{
(bce) = (new Array_<char16_t>(35, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0043', u'\u005F', u'\u003E', u'\u0020'));
}
}
else if((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(bce) = (new Array_<char16_t>(35, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0052', u'\u005F', u'\u003E', u'\u0020'));
}
else if((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (256LL))) == (256LL)){
(bce) = (new Array_<char16_t>(48, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u004B', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0056', u'\u005F', u'\u003E', u'\u0020'));
}
else{
(bce) = (new Array_<char16_t>(22, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u003E', u'\u0020'));
}
}
if((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(bcs) = (new Array_<char16_t>(2, u'\u0052', u'\u005F'));
}
else if((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (4LL))) == (4LL)){
(bcs) = (new Array_<char16_t>(2, u'\u0054', u'\u005F'));
}
else{
(bcs) = ((bcv)(((bbx)->sh)));
}
(bcw) = (new Array_<char16_t>(0));
(bcy) = (0LL);
(bcz) = ((bbx)->sg);
awg<List_<gb*>*>((bcz), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gb*>*>((bcz), (new Array_<int64_t>(1, (0LL)))))){
(bdb) = (awk<List_<gb*>*, gb*>((bcz), (new Array_<int64_t>(1, (0LL)))));
if((bcy) != (0LL)){
(bcw) = ((bcw)->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
}
(bdf) = ((bbz)((bdb)));
if(((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL)) && ((bcy) == (0LL))){
if(!((bdi)(((bdb)->qf)))){
throw 0xE9170000U;
}
(bcw) = ((bcw)->Cat(new Array_<char16_t>(2, u'\u0054', u'\u005F')));
}
else if(((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)) && ((bcy) == (2LL))){
if(!((bdi)(((bdb)->qf)))){
throw 0xE9170000U;
}
(bcw) = ((bcw)->Cat(new Array_<char16_t>(2, u'\u004B', u'\u005F')));
}
else if(((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)) && ((bcy) == (3LL))){
if(!((bdi)(((bdb)->qf)))){
throw 0xE9170000U;
}
(bcw) = ((bcw)->Cat(new Array_<char16_t>(2, u'\u0056', u'\u005F')));
}
else if(((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (8LL))) == (8LL)) && ((bcy) == (2LL))){
if(!((bdi)(((bdb)->qf)))){
throw 0xE9170000U;
}
(bcw) = ((bcw)->Cat(new Array_<char16_t>(2, u'\u0043', u'\u005F')));
}
else if(((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (2LL))) == (2LL)) && ((bcy) == (2LL))){
if(!((bdi)(((bdb)->qf)))){
throw 0xE9170000U;
}
(bcw) = ((bcw)->Cat(new Array_<char16_t>(2, u'\u0054', u'\u005F')));
}
else if(((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (256LL))) == (256LL)) && ((bcy) == (2LL))){
if(!((bdi)(((bdb)->qf)))){
throw 0xE9170000U;
}
(bcw) = ((bcw)->Cat(new Array_<char16_t>(11, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0076', u'\u006F', u'\u0069', u'\u0064', u'\u002A')));
}
else{
(bcw) = ((bcw)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)(((bdb)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
if((bdb)->ql){
(bcw) = ((bcw)->Cat(new Array_<char16_t>(1, u'\u002A')));
}
(bcw) = ((bcw)->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bdf)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if(!eqAddr_(((bdb)->nf), (nullptr))){
(bcw) = ((bcw)->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u002F', u'\u002A'))->Cat(v<Array_<char16_t>*>(((bdb)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002A', u'\u002F'))));
}
ayu<List_<gb*>*>((bcz), (new Array_<int64_t>(1, (0LL))));
(bcy) = ((bcy) + (1LL));
}
if(!eqAddr_(((bbx)->nf), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bbx)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bce), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>((bcs), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bby)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0028'))->Cat(v<Array_<char16_t>*>((bcw), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bce), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>((bcs), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bby)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0028'))->Cat(v<Array_<char16_t>*>((bcw), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')))))));
if((ayg<int64_t>(((bbx)->sm), (new Array_<int64_t>(1, (0LL))), (4096LL))) == (4096LL)){
if((((bbx)->sf)->Len()) == (1LL)){
awg<List_<Array_<char16_t>*>*>(((bbx)->sf), (new Array_<int64_t>(1, (0LL))));
(bel) = (false);
if((((bbx)->sg)->Len()) > (0LL)){
awg<List_<gb*>*>(((bbx)->sg), (new Array_<int64_t>(1, (0LL))));
(beo) = (awk<List_<gb*>*, gb*>(((bbx)->sg), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((((beo)->qf)->nj), (nullptr))) && (((((beo)->qf)->nj)->lw) == (5LL))){
(ber) = ((as_<un>(classTable_, (((beo)->qf)->nj), 22))->bai);
(bes)((ao), (awk<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((bbx)->sf), (new Array_<int64_t>(1, (0LL))))), ((bbx)->sg), (ber));
(bel) = (true);
}
}
if(!(bel)){
(bes)((ao), (awk<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((bbx)->sf), (new Array_<int64_t>(1, (0LL))))), ((bbx)->sg), (nullptr));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
else{
bew<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
(bex) = (bey<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL)))));
(bez)(((bbx)->si), (nullptr), (nullptr));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
awg<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
bfa<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))), (bex));
ayu<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
awg<List_<gb*>*>((as), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gb*>*>((as), (new Array_<int64_t>(1, (0LL)))))){
(bfc) = (awk<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL)))));
(bfd) = ((bbz)((bfc)));
if(eqAddr_(((bfc)->nf), (nullptr))){
bfg<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)(((bfc)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfd)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfh)(((bfc)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else{
bfg<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)(((bfc)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfd)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfh)(((bfc)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u003B', u'\u0020', u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfc)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A')))))));
}
bfj<List_<gb*>*>((as), (new Array_<int64_t>(1, (0LL))));
}
awg<List_<up*>*>((aq), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<up*>*>((aq), (new Array_<int64_t>(1, (0LL)))))){
(bfl) = (awk<List_<up*>*, up*>((aq), (new Array_<int64_t>(1, (0LL)))));
bfg<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)(((bfl)->bbh))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfl)->bbg), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfh)(((bfl)->bbh))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
bfj<List_<up*>*>((aq), (new Array_<int64_t>(1, (0LL))));
}
}
}
// buildClass
static void uy(un* bfm /*ast*/){
Array_<char16_t>* bfn = nullptr; // parentId
bca* bft = nullptr; // info
int64_t bfy = 0; // parentOffset
bca* bga = nullptr; // parentInfo
List_<uo*>* bge = nullptr; // items
uo* bgg = nullptr; // item
bgk* bgj = nullptr; // var_
bca* bgl = nullptr; // info2
fw* bgo = nullptr; // ctor
bca* bgs = nullptr; // ctorInfo
fw* bgu = nullptr; // cmp
bca* bgx = nullptr; // cmpInfo
fw* bgy = nullptr; // copy
bca* bha = nullptr; // copyInfo
List_<uo*>* bhc = nullptr; // items
uo* bhe = nullptr; // item
bgk* bhh = nullptr; // var_
bca* bhi = nullptr; // info2
(bfn) = (nullptr);
if(!eqAddr_(((bfm)->nj), (nullptr))){
(bfn) = ((bfq)((as_<un>(classTable_, ((bfm)->nj), 22))));
}
if(eqAddr_((bfn), (nullptr))){
(bfn) = (new Array_<char16_t>(6, u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F'));
}
(bft) = ((bbz)((bfm)));
if(!(((bft)->bfv) != (-1LL))){
throw 0xE9170000U;
}
if(eqAddr_(((bfm)->nj), (nullptr))){
(bfy) = (0LL);
}
else{
(bga) = ((bbz)(((bfm)->nj)));
if(!(((bga)->bfv) != (-1LL))){
throw 0xE9170000U;
}
(bfy) = ((bga)->bfv);
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((at), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u005B'))->Cat(v<int64_t>((((bft)->bfv) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u005D', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<int64_t>(((bfy) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
if(!eqAddr_(((bfm)->nf), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfm)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bft)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(10, u'\u0020', u'\u003A', u'\u0020', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>((bfn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u007B', u'\u000A', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0063', u'\u003A', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bft)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bft)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003A', u'\u003A'))->Cat(v<Array_<char16_t>*>(((bft)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0028', u'\u0029', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>((bfn), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))))));
(bge) = ((bfm)->bai);
awg<List_<uo*>*>((bge), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((bge), (new Array_<int64_t>(1, (0LL)))))){
(bgg) = (awk<List_<uo*>*, uo*>((bge), (new Array_<int64_t>(1, (0LL)))));
if((((bgg)->azn)->lw) == (2LL)){
(bgj) = (as_<bgk>(classTable_, ((bgg)->azn), 38));
(bgl) = ((bbz)(((bgj)->bgm)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bgl)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))));
}
ayu<List_<uo*>*>((bge), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0059', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<int64_t>((((bft)->bfv) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
(bgo) = ((bgp)((bfm), (new Array_<char16_t>(4, u'\u0063', u'\u0074', u'\u006F', u'\u0072'))));
if(!eqAddr_((bgo), (nullptr))){
(bgs) = ((bbz)((bgo)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bgs)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bgu) = ((bgp)((bfm), (new Array_<char16_t>(3, u'\u0063', u'\u006D', u'\u0070'))));
if(!eqAddr_((bgu), (nullptr))){
(bgx) = ((bbz)((bgu)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0076', u'\u0069', u'\u0072', u'\u0074', u'\u0075', u'\u0061', u'\u006C', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0065', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bft)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(19, u'\u003A', u'\u003A', u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bft)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u002A', u'\u0020', u'\u0075', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bft)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002A', u'\u003E', u'\u0028', u'\u0074', u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bgx)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002C', u'\u0020', u'\u0075', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
(bgy) = ((bgp)((bfm), (new Array_<char16_t>(5, u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079'))));
if(!(!eqAddr_((bgy), (nullptr)))){
throw 0xE9170000U;
}
(bha) = ((bbz)((bgy)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(43, u'\u0076', u'\u0069', u'\u0072', u'\u0074', u'\u0075', u'\u0061', u'\u006C', u'\u0020', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0065', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bft)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u003A', u'\u003A', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bha)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhc) = ((bfm)->bai);
awg<List_<uo*>*>((bhc), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((bhc), (new Array_<int64_t>(1, (0LL)))))){
(bhe) = (awk<List_<uo*>*, uo*>((bhc), (new Array_<int64_t>(1, (0LL)))));
if((((bhe)->azn)->lw) == (2LL)){
(bhh) = (as_<bgk>(classTable_, ((bhe)->azn), 38));
(bhi) = ((bbz)(((bhh)->bgm)));
if(eqAddr_((((bhh)->bgm)->nf), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)((((bhh)->bgm)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bhi)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)((((bhh)->bgm)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bhi)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u003B', u'\u0020', u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>((((bhh)->bgm)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))))));
}
}
ayu<List_<uo*>*>((bhc), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u007D', u'\u003B', u'\u000A')));
}
// write
static void uz(List_<Array_<char16_t>*>* bhm /*resFiles*/){
bhq* bho = nullptr; // writer
gb* bhx = nullptr; // globalVar
bca* bhy = nullptr; // info
Array_<char16_t>* bid = nullptr; // item
(bhn)(((ba)->Cat(new Array_<char16_t>(8, u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068'))), ((av)->Cat(new Array_<char16_t>(8, u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068'))));
(bho) = ((bhp)((new bhq()), ((au)->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0063', u'\u0070', u'\u0070'))), (false)));
(bhr)((bho), (new Array_<char16_t>(20, u'\u0023', u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0075', u'\u0064', u'\u0065', u'\u0020', u'\u0022', u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068', u'\u0022', u'\u000A')));
(bhr)((bho), (new Array_<char16_t>(12, u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0070', u'\u0061', u'\u0063', u'\u0065', u'\u0020', u'\u007B', u'\u000A')));
awg<List_<Array_<char16_t>*>*>((am), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<Array_<char16_t>*>*>((am), (new Array_<int64_t>(1, (0LL)))))){
(bhr)((bho), (awk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))))));
ayu<List_<Array_<char16_t>*>*>((am), (new Array_<int64_t>(1, (0LL))));
}
awg<List_<Array_<char16_t>*>*>((an), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<Array_<char16_t>*>*>((an), (new Array_<int64_t>(1, (0LL)))))){
(bhr)((bho), (awk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))))));
ayu<List_<Array_<char16_t>*>*>((an), (new Array_<int64_t>(1, (0LL))));
}
if((uq) != (0LL)){
(bhr)((bho), (((new Array_<char16_t>(27, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u005B'))->Cat(v<int64_t>(((uq) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u005D', u'\u003B', u'\u000A'))));
}
(bhr)((bho), (new Array_<char16_t>(22, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
(bhr)((bho), (new Array_<char16_t>(21, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u002A', u'\u002A', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
awg<List_<gb*>*>((ar), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gb*>*>((ar), (new Array_<int64_t>(1, (0LL)))))){
(bhx) = (awk<List_<gb*>*, gb*>((ar), (new Array_<int64_t>(1, (0LL)))));
(bhy) = ((bbz)((bhx)));
(bhr)((bho), (((new Array_<char16_t>(7, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcv)(((bhx)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bhy)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
ayu<List_<gb*>*>((ar), (new Array_<int64_t>(1, (0LL))));
}
awg<List_<Array_<char16_t>*>*>((ap), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<Array_<char16_t>*>*>((ap), (new Array_<int64_t>(1, (0LL)))))){
(bhr)((bho), (awk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))))));
ayu<List_<Array_<char16_t>*>*>((ap), (new Array_<int64_t>(1, (0LL))));
}
awg<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL)))))){
(bhr)((bho), (awk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))))));
ayu<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
}
(bhr)((bho), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhr)((bho), (new Array_<char16_t>(29, u'\u0069', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0020', u'\u0063', u'\u005F', u'\u002C', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u002A', u'\u002A', u'\u0020', u'\u0076', u'\u005F', u'\u0029', u'\u007B', u'\u000A')));
(bhr)((bho), (new Array_<char16_t>(16, u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
(bhr)((bho), (new Array_<char16_t>(16, u'\u0061', u'\u0072', u'\u0067', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
awg<List_<Array_<char16_t>*>*>((at), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<Array_<char16_t>*>*>((at), (new Array_<int64_t>(1, (0LL)))))){
(bid) = (awk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((at), (new Array_<int64_t>(1, (0LL)))));
(bhr)((bho), (bid));
ayu<List_<Array_<char16_t>*>*>((at), (new Array_<int64_t>(1, (0LL))));
}
(bhr)((bho), (new Array_<char16_t>(9, u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u005F', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
(bhr)((bho), (new Array_<char16_t>(5, u'\u0061', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
(bhr)((bho), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
(bhr)((bho), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bie)((bho));
}
// _dtor
static void bif(vc* big){
((big)->bih) = (nullptr);
((big)->bii) = (nullptr);
}
// _copy
static vc* bij(vc* bik){
vc* bil = nullptr;
(bil) = (new vc());
((bil)->bih) = (copy_((bik)->bih));
((bil)->bii) = (copy_((bik)->bii));
return as_<vc>(classTable_, (bil), 28);
}
// _toBin
static Array_<uint8_t>* bim(vc* bin){
Array_<uint8_t>* bio = nullptr;
(bio) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bio) = ((bio)->Cat(toBin_((bin)->bih)));
(bio) = ((bio)->Cat(toBin_((bin)->bii)));
return bio;
}
// _fromBin
static vc* bir(vc* bis, Array_<uint8_t>* bit, int64_t* biu){
vc* biv = nullptr;
(biv) = (new vc());
((biv)->bih) = (fromBin_<Array_<char16_t>*>((bit), (*biu)));
((biv)->bii) = (fromBin_<gc*>((bit), (*biu)));
return biv;
}
// buildFunc
static void vg(fw* biw /*ast*/){
biz* bix = nullptr; // info
Array_<char16_t>* bjd = nullptr; // arg
bool bjf = false; // first
List_<gb*>* bjg = nullptr; // items
gb* bji = nullptr; // item
biz* bjj = nullptr; // info2
bool bjz = false; // hasMembers
gb* bkc = nullptr; // arg2
List_<uo*>* bkf = nullptr; // members
int64_t bkk = 0; // localVarPos
gb* bkn = nullptr; // localVar
biz* bko = nullptr; // info2
vc* bku = nullptr; // tmpVar
(bix) = ((biy)((biw)));
if((bix)->bjb){
return;
}
((bix)->bjb) = (true);
(bjd) = (new Array_<char16_t>(0));
(bjf) = (true);
(bjg) = ((biw)->sg);
awg<List_<gb*>*>((bjg), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gb*>*>((bjg), (new Array_<int64_t>(1, (0LL)))))){
(bji) = (awk<List_<gb*>*, gb*>((bjg), (new Array_<int64_t>(1, (0LL)))));
(bjj) = ((biy)((bji)));
if(bjf){
(bjf) = (false);
}
else{
(bjd) = ((bjd)->Cat(new Array_<char16_t>(1, u'\u002C')));
}
(bjd) = ((bjd)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bjj)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if(!eqAddr_(((bji)->nf), (nullptr))){
(bjd) = ((bjd)->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u002F', u'\u002A'))->Cat(v<Array_<char16_t>*>(((bji)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002A', u'\u002F'))));
}
ayu<List_<gb*>*>((bjg), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((biw)->nf), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((biw)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bix)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0028'))->Cat(v<Array_<char16_t>*>((bjd), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')))));
if((ayg<int64_t>(((biw)->sm), (new Array_<int64_t>(1, (0LL))), (4096LL))) == (4096LL)){
if((((biw)->sf)->Len()) == (1LL)){
awg<List_<Array_<char16_t>*>*>(((biw)->sf), (new Array_<int64_t>(1, (0LL))));
(bjz) = (false);
if((((biw)->sg)->Len()) > (0LL)){
awg<List_<gb*>*>(((biw)->sg), (new Array_<int64_t>(1, (0LL))));
(bkc) = (awk<List_<gb*>*, gb*>(((biw)->sg), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((((bkc)->qf)->nj), (nullptr))) && (((((bkc)->qf)->nj)->lw) == (5LL))){
(bkf) = ((as_<un>(classTable_, (((bkc)->qf)->nj), 22))->bai);
(bkg)((bl), (awk<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((biw)->sf), (new Array_<int64_t>(1, (0LL))))), ((biw)->sg), (bkf));
(bjz) = (true);
}
}
if(!(bjz)){
(bkg)((bl), (awk<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((biw)->sf), (new Array_<int64_t>(1, (0LL))))), ((biw)->sg), (nullptr));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
else{
bew<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
(bkk) = (bey<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL)))));
(bkl)(((biw)->si));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
awg<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
bfa<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))), (bkk));
ayu<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
awg<List_<gb*>*>((bo), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gb*>*>((bo), (new Array_<int64_t>(1, (0LL)))))){
(bkn) = (awk<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL)))));
(bko) = ((biy)((bkn)));
if(eqAddr_(((bkn)->nf), (nullptr))){
bfg<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bko)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((bkr)(((bkn)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else{
bfg<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bko)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((bkr)(((bkn)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u003B', u'\u0020', u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkn)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))))));
}
bfj<List_<gb*>*>((bo), (new Array_<int64_t>(1, (0LL))));
}
awg<List_<vc*>*>((bm), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<vc*>*>((bm), (new Array_<int64_t>(1, (0LL)))))){
(bku) = (awk<List_<vc*>*, vc*>((bm), (new Array_<int64_t>(1, (0LL)))));
bfg<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bku)->bih), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((bkr)(((bku)->bii))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
bfj<List_<vc*>*>((bm), (new Array_<int64_t>(1, (0LL))));
}
}
}
// buildClass
static void vj(un* bkv /*ast*/){
Array_<char16_t>* bkw = nullptr; // parentId
biz* blc = nullptr; // info
fw* blg = nullptr; // ctor
biz* blk = nullptr; // ctorInfo
List_<uo*>* blm = nullptr; // items
uo* blo = nullptr; // item
(bkw) = (nullptr);
if(!eqAddr_(((bkv)->nj), (nullptr))){
(bkw) = ((bkz)((as_<un>(classTable_, ((bkv)->nj), 22))));
}
if(eqAddr_((bkw), (nullptr))){
(bkw) = (new Array_<char16_t>(6, u'\u004F', u'\u0062', u'\u006A', u'\u0065', u'\u0063', u'\u0074'));
}
(blc) = ((biy)((bkv)));
if(!eqAddr_(((bkv)->nf), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkv)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
(blg) = ((blh)((bkv), (new Array_<char16_t>(4, u'\u0063', u'\u0074', u'\u006F', u'\u0072'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((blc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0028', u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bkw), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
if(!eqAddr_((blg), (nullptr))){
(blk) = ((biy)((blg)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((blk)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((blc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(27, u'\u002E', u'\u0070', u'\u0072', u'\u006F', u'\u0074', u'\u006F', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u003D', u'\u0020', u'\u004F', u'\u0062', u'\u006A', u'\u0065', u'\u0063', u'\u0074', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>((bkw), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0070', u'\u0072', u'\u006F', u'\u0074', u'\u006F', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0029', u'\u003B', u'\u000A')))));
(blm) = ((bkv)->bai);
awg<List_<uo*>*>((blm), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((blm), (new Array_<int64_t>(1, (0LL)))))){
(blo) = (awk<List_<uo*>*, uo*>((blm), (new Array_<int64_t>(1, (0LL)))));
if((((blo)->azn)->lw) == (256LL)){
um<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL))), (as_<fw>(classTable_, ((blo)->azn), 8)));
}
ayu<List_<uo*>*>((blm), (new Array_<int64_t>(1, (0LL))));
}
}
// write
static void vk(List_<Array_<char16_t>*>* blr /*resFiles*/){
bhq* bls = nullptr; // writer
bool blt = false; // static
bool blu = false;
gb* blz = nullptr; // globalVar
biz* bma = nullptr; // info
bool bmd = false; // first
Array_<char16_t>* bmf = nullptr; // resFile
avb* bmg = nullptr; // reader
int64_t bmn = 0;
Array_<char16_t>* bms = nullptr; // line
int64_t bmx = 0;
Array_<char16_t>* bnf = nullptr; // fileName
int64_t bmo = 0;
int64_t bmy = 0;
(bls) = ((bhp)((new bhq()), ((au)->Cat(new Array_<char16_t>(3, u'\u002E', u'\u006A', u'\u0073'))), (false)));
(blt) = (avq<Dict_<Array_<char16_t>*, bool>*, Array_<char16_t>*, bool>((ax), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063')), (&blu)));
if(blt){
(bhr)((bls), (((new Array_<char16_t>(22, u'\u0022', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u0063', u'\u0074', u'\u0022', u'\u003B', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fd)((au))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u0028', u'\u004F', u'\u005F', u'\u0029', u'\u007B', u'\u000A'))));
}
else{
(bhr)((bls), (new Array_<char16_t>(310, u'\u0022', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u0063', u'\u0074', u'\u0022', u'\u003B', u'\u0021', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0066', u'\u0029', u'\u007B', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0064', u'\u003D', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u003B', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0068', u'\u0028', u'\u0029', u'\u007B', u'\u0064', u'\u002E', u'\u0072', u'\u0065', u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u0044', u'\u004F', u'\u004D', u'\u0043', u'\u006F', u'\u006E', u'\u0074', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u006F', u'\u0061', u'\u0064', u'\u0065', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u003B', u'\u0066', u'\u0028', u'\u0029', u'\u007D', u'\u0022', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u0022', u'\u003D', u'\u003D', u'\u003D', u'\u0064', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0053', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u007C', u'\u007C', u'\u0022', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0022', u'\u0021', u'\u003D', u'\u003D', u'\u0064', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0053', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u0026', u'\u0026', u'\u0021', u'\u0064', u'\u002E', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0045', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0064', u'\u006F', u'\u0053', u'\u0063', u'\u0072', u'\u006F', u'\u006C', u'\u006C', u'\u003F', u'\u0073', u'\u0065', u'\u0074', u'\u0054', u'\u0069', u'\u006D', u'\u0065', u'\u006F', u'\u0075', u'\u0074', u'\u0028', u'\u0066', u'\u0029', u'\u003A', u'\u0028', u'\u0064', u'\u002E', u'\u0061', u'\u0064', u'\u0064', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u0044', u'\u004F', u'\u004D', u'\u0043', u'\u006F', u'\u006E', u'\u0074', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u006F', u'\u0061', u'\u0064', u'\u0065', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u002C', u'\u0061', u'\u0064', u'\u0064', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u0029', u'\u007D', u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0029', u'\u007B', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(8, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u004F', u'\u005F', u'\u003B', u'\u000A')));
}
awg<List_<gb*>*>((bn), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gb*>*>((bn), (new Array_<int64_t>(1, (0LL)))))){
(blz) = (awk<List_<gb*>*, gb*>((bn), (new Array_<int64_t>(1, (0LL)))));
(bma) = ((biy)((blz)));
(bhr)((bls), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bma)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((bkr)(((blz)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
ayu<List_<gb*>*>((bn), (new Array_<int64_t>(1, (0LL))));
}
awg<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL)))))){
(bhr)((bls), (awk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))))));
ayu<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
}
(bhr)((bls), (new Array_<char16_t>(18, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0043', u'\u005F', u'\u0028', u'\u0074', u'\u002C', u'\u0076', u'\u0029', u'\u007B', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(14, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u0074', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u007B', u'\u000A')));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((3LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((8LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u003B', u'\u000A')));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(10, u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A'))));
(bhr)((bls), (new Array_<char16_t>(30, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u007B', u'\u0053', u'\u003A', u'\u0076', u'\u002E', u'\u0053', u'\u007D', u'\u003B', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(27, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u0076', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003B', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(53, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u0076', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0061', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0043', u'\u005F', u'\u0028', u'\u0074', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0031', u'\u0029', u'\u002C', u'\u0076', u'\u005B', u'\u0069', u'\u005D', u'\u0029', u'\u003B', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u003B', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((130LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((131LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((132LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((133LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((134LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhr)((bls), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(16, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0046', u'\u005F', u'\u0028', u'\u0070', u'\u0029', u'\u007B', u'\u000A')));
(bmd) = (true);
awg<List_<Array_<char16_t>*>*>((blr), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<Array_<char16_t>*>*>((blr), (new Array_<int64_t>(1, (0LL)))))){
(bmf) = (awk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((blr), (new Array_<int64_t>(1, (0LL)))));
(bmg) = ((ava)((new avb()), (bmf)));
if(bmd){
(bmd) = (false);
(bhr)((bls), (new Array_<char16_t>(8, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u003D', u'\u003D', u'\u003D', u'\u0022')));
}
else{
(bhr)((bls), (new Array_<char16_t>(13, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u003D', u'\u003D', u'\u003D', u'\u0022')));
}
for(bmn = ((ay)->Len()), bmo = (((bmf)->Len()) - (1LL)); bmn <= bmo; bmn += (1LL)){
(bhr)((bls), ((bmp)(((bmf)->At(bmn)))));
}
(bhr)((bls), (new Array_<char16_t>(3, u'\u0022', u'\u0029', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0022')));
while(!((bmr)((bmg)))){
(bms) = ((bmt)((bmg)));
for(bmx = (0LL), bmy = (((bms)->Len()) - (1LL)); bmx <= bmy; bmx += (1LL)){
(bhr)((bls), ((bmp)(((bms)->At(bmx)))));
}
(bhr)((bls), (new Array_<char16_t>(2, u'\u005C', u'\u006E')));
}
(bhr)((bls), (new Array_<char16_t>(3, u'\u0022', u'\u003B', u'\u000A')));
(avo)((bmg));
ayu<List_<Array_<char16_t>*>*>((blr), (new Array_<int64_t>(1, (0LL))));
}
if(((blr)->Len()) > (0LL)){
(bhr)((bls), (new Array_<char16_t>(18, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
}
else{
(bhr)((bls), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
}
(bhr)((bls), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(5, u'\u0061', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
if(blt){
(bhr)((bls), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else{
(bhr)((bls), (new Array_<char16_t>(3, u'\u007D', u'\u0029', u'\u000A')));
}
(bie)((bls));
(bnf) = ((fd)((au)));
(bls) = ((bhp)((new bhq()), ((au)->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0068', u'\u0074', u'\u006D', u'\u006C'))), (false)));
(bhr)((bls), (new Array_<char16_t>(16, u'\u003C', u'\u0021', u'\u0044', u'\u004F', u'\u0043', u'\u0054', u'\u0059', u'\u0050', u'\u0045', u'\u0020', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(7, u'\u003C', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(8, u'\u0009', u'\u003C', u'\u0068', u'\u0065', u'\u0061', u'\u0064', u'\u003E', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(27, u'\u0009', u'\u0009', u'\u003C', u'\u006D', u'\u0065', u'\u0074', u'\u0061', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0074', u'\u003D', u'\u0022', u'\u0075', u'\u0074', u'\u0066', u'\u002D', u'\u0038', u'\u0022', u'\u0020', u'\u002F', u'\u003E', u'\u000A')));
(bhr)((bls), (((new Array_<char16_t>(15, u'\u0009', u'\u0009', u'\u003C', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0020', u'\u0073', u'\u0072', u'\u0063', u'\u003D', u'\u0022'))->Cat(v<Array_<char16_t>*>((bnf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(38, u'\u002E', u'\u006A', u'\u0073', u'\u0022', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u003D', u'\u0022', u'\u0074', u'\u0065', u'\u0078', u'\u0074', u'\u002F', u'\u006A', u'\u0061', u'\u0076', u'\u0061', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0022', u'\u003E', u'\u003C', u'\u002F', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u003E', u'\u000A'))));
(bhr)((bls), (((new Array_<char16_t>(9, u'\u0009', u'\u0009', u'\u003C', u'\u0074', u'\u0069', u'\u0074', u'\u006C', u'\u0065', u'\u003E'))->Cat(v<Array_<char16_t>*>((bnf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003C', u'\u002F', u'\u0074', u'\u0069', u'\u0074', u'\u006C', u'\u0065', u'\u003E', u'\u000A'))));
(bhr)((bls), (new Array_<char16_t>(9, u'\u0009', u'\u003C', u'\u002F', u'\u0068', u'\u0065', u'\u0061', u'\u0064', u'\u003E', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(8, u'\u0009', u'\u003C', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u003E', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(9, u'\u0009', u'\u003C', u'\u002F', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u003E', u'\u000A')));
(bhr)((bls), (new Array_<char16_t>(8, u'\u003C', u'\u002F', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bie)((bls));
}
// _signInt
static int64_t atr(int64_t bng /*me_*/){
return ((bng) > (0LL)) ? (1LL) : (((bng) < (0LL)) ? (-1LL) : (0LL));
}
// isCorrectSrcName
static bool aus(Array_<char16_t>* bnh /*name*/){
int64_t bni = 0; // idx
(bni) = (0LL);
if(((bni) < ((bnh)->Len())) && (((bnh)->At(bni)) == (u'\u005C'))){
(bni) = ((bni) + (1LL));
}
while(true){
if(((bni) >= ((bnh)->Len())) || (!((((u'\u0061') <= ((bnh)->At(bni))) && (((bnh)->At(bni)) <= (u'\u007A'))) || (((bnh)->At(bni)) == (u'\u005F'))))){
return false;
}
while(true){
(bni) = ((bni) + (1LL));
if((bni) >= ((bnh)->Len())){
return true;
}
if(((((u'\u0061') <= ((bnh)->At(bni))) && (((bnh)->At(bni)) <= (u'\u007A'))) || (((bnh)->At(bni)) == (u'\u005F'))) || (((u'\u0030') <= ((bnh)->At(bni))) && (((bnh)->At(bni)) <= (u'\u0039')))){
continue;
}
if(((bnh)->At(bni)) == (u'\u005C')){
(bni) = ((bni) + (1LL));
break;
}
return false;
}
}
}
// replacePath
static Array_<char16_t>* aux(Array_<char16_t>* boa /*path*/){
Array_<char16_t>* bob = nullptr; // r
int64_t bof = 0;
int64_t bog = 0;
(bob) = (newArray_<char16_t, Array_<char16_t>*>(1, ((boa)->Len())));
for(bof = (0LL), bog = (((boa)->Len()) - (1LL)); bof <= bog; bof += (1LL)){
((bob)->At(bof)) = ((((boa)->At(bof)) == (u'\u005C')) ? (u'\u002F') : ((boa)->At(bof)));
}
return bob;
}
// _sub
template<typename T_> static T_ auy(T_ boh /*me_*/, Array_<int64_t>* boi /*type*/, int64_t boj /*start*/, int64_t bok /*len*/){
return sub_(boh, boj, bok);
}
// makeReader
static avb* ava(avb* bol /*me2*/, Array_<char16_t>* bom /*path*/){
bol->bon = reinterpret_cast<int64_t>(new reader_());
std::u16string s_ = bom->B;
const std::string& t_ = utf16ToUtf8_(s_);
reader_* r_ = reinterpret_cast<reader_*>(bol->bon);
r_->F = new std::ifstream(t_.c_str(), std::ios::in | std::ios::binary);
if(!*r_->F) return nullptr;
return bol;
}
// _dtor
static void boo(avb* bop /*me*/){
}
// fin
static void avo(avb* boq /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(boq->bon);
r_->F->close();
}
// setPos
static void bor(avb* bos /*me*/, int64_t bot /*origin*/, int64_t bou /*pos*/){
reader_* r_ = reinterpret_cast<reader_*>(bos->bon);
std::ios_base::seekdir o_ = std::ios_base::beg;
switch(bot){
case 0: o_ = std::ios_base::beg; break;
case 1: o_ = std::ios_base::cur; break;
case 2: o_ = std::ios_base::end; break;
}
r_->F->seekg(bou, o_);
}
// getPos
static int64_t bov(avb* bow /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bow->bon);
return static_cast<int64_t>(r_->F->tellg());
}
// delimiter
static void box(avb* boy /*me*/, Array_<char16_t>* boz /*delimiters*/){
}
// read
static Array_<uint8_t>* bpa(avb* bpb /*me*/, int64_t bpc /*size*/){
}
// readLetter
static char16_t bpd(avb* bpe /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bpe->bon);
return readUtf8_(r_->F);
}
// readInt
static int64_t bpf(avb* bpg /*me*/){
}
// readFloat
static double bph(avb* bpi /*me*/){
}
// readChar
static char16_t bpj(avb* bpk /*me*/){
}
// readStr
static Array_<char16_t>* bpl(avb* bpm /*me*/){
}
// readLine
static Array_<char16_t>* bmt(avb* bpn /*me*/){
return nullptr;
}
// fileSize
static int64_t bpo(avb* bpp /*me*/){
}
// term
static bool bmr(avb* bpq /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bpq->bon);
char c_;
if(r_->F->get(c_)) {
r_->F->seekg(-1, std::ios_base::cur);
return false;
}
return true;
}
// _copy
static avb* bpr(avb* bps){
avb* bpt = nullptr;
(bpt) = (new avb());
((bpt)->bon) = ((bps)->bon);
((bpt)->bpu) = ((bps)->bpu);
((bpt)->bpv) = ((bps)->bpv);
((bpt)->bpw) = ((bps)->bpw);
return as_<avb>(classTable_, (bpt), 30);
}
// _toBin
static Array_<uint8_t>* bpx(avb* bpy){
Array_<uint8_t>* bpz = nullptr;
(bpz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bpz) = ((bpz)->Cat(toBin_((bpy)->bon)));
(bpz) = ((bpz)->Cat(toBin_((bpy)->bpu)));
(bpz) = ((bpz)->Cat(toBin_((bpy)->bpv)));
(bpz) = ((bpz)->Cat(toBin_((bpy)->bpw)));
return bpz;
}
// _fromBin
static avb* bqe(avb* bqf, Array_<uint8_t>* bqg, int64_t* bqh){
avb* bqi = nullptr;
(bqi) = (new avb());
((bqi)->bon) = (fromBin_<int64_t>((bqg), (*bqh)));
((bqi)->bpu) = (fromBin_<int64_t>((bqg), (*bqh)));
((bqi)->bpv) = (fromBin_<int64_t>((bqg), (*bqh)));
((bqi)->bpw) = (fromBin_<int64_t>((bqg), (*bqh)));
return bqi;
}
// parseRoot
static avm* avl(){
avm* bqj = nullptr; // ast
char16_t bqr = 0; // c
bool bqw = false; // itemPublic
int64_t brb = 0; // row
int64_t brc = 0; // col
Array_<char16_t>* brd = nullptr; // id
Array_<char16_t>* brg = nullptr;
fx* bri = nullptr; // item
(bqj) = (new avm());
(bqk)((bqj), (1LL), ((bql)((bf), (1LL), (1LL))), (nullptr), (false));
((bqj)->awf) = (new List_<avn*>());
((bqj)->azc) = (new List_<fx*>());
(bh) = ((bqj)->awf);
((bqj)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bqm<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (bqj));
(avg) = (u'\u000A');
(avg) = ((bqn)());
while(true){
(bqr) = ((bqn)());
if((bqr) == (u'\u0000')){
break;
}
if((bqr) == (u'\u000A')){
continue;
}
(bqw) = (false);
if((bqr) == (u'\u002B')){
(bqw) = (true);
}
else{
(avg) = (bqr);
}
(brb) = (ave);
(brc) = (avf);
(brd) = ((bre)((true), (false)));
brg = brd;
if(cmp_(brg, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
(bri) = ((brj)((nullptr), (false)));
}
else if(cmp_(brg, (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0){
(bri) = ((brl)((1LL), (nullptr)));
}
else if(cmp_(brg, (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074'))) == 0){
(bri) = ((brn)());
}
else if(cmp_(brg, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073'))) == 0){
(bri) = ((brq)());
}
else if(cmp_(brg, (new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0075', u'\u0064', u'\u0065'))) == 0){
}
else if(cmp_(brg, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0){
(bri) = ((bru)());
}
else if(cmp_(brg, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0){
(bri) = ((brw)());
}
else{(ad)((65547LL), ((bql)((bf), (brb), (brc))), (new Array_<Array_<char16_t>*>(1, (brd))));
(brz)(((bsa)()));
continue;
}
if(((bri)->lw) == (2LL)){
(((as_<bgk>(classTable_, (bri), 38))->bgm)->no) = (bqw);
}
else if(((bri)->lw) == (3LL)){
(((as_<bro>(classTable_, (bri), 44))->bse)->no) = (bqw);
}
else{
((bri)->no) = (bqw);
}
uj<List_<fx*>*, fx*>(((bqj)->azc), (new Array_<int64_t>(1, (0LL))), (bri));
}
bsg<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return bqj;
}
// _dtor
static void bsh(avn* bsi){
((bsi)->awm) = (nullptr);
((bsi)->axh) = (nullptr);
}
// _copy
static avn* bsj(avn* bsk){
avn* bsl = nullptr;
(bsl) = (new avn());
((bsl)->awm) = (copy_((bsk)->awm));
((bsl)->axh) = (copy_((bsk)->axh));
return as_<avn>(classTable_, (bsl), 34);
}
// _toBin
static Array_<uint8_t>* bsm(avn* bsn){
Array_<uint8_t>* bso = nullptr;
(bso) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bso) = ((bso)->Cat(toBin_((bsn)->awm)));
(bso) = ((bso)->Cat(toBin_((bsn)->axh)));
return bso;
}
// _fromBin
static avn* bsr(avn* bss, Array_<uint8_t>* bst, int64_t* bsu){
avn* bsv = nullptr;
(bsv) = (new avn());
((bsv)->awm) = (fromBin_<fx*>((bst), (*bsu)));
((bsv)->axh) = (fromBin_<fx*>((bst), (*bsu)));
return bsv;
}
// _dtor
static void bsw(avm* bsx){
((bsx)->azc) = (nullptr);
((bsx)->awf) = (nullptr);
((bsx)->ne) = (nullptr);
((bsx)->nf) = (nullptr);
((bsx)->ng) = (nullptr);
((bsx)->nh) = (nullptr);
((bsx)->ni) = (nullptr);
((bsx)->nj) = (nullptr);
((bsx)->nk) = (nullptr);
}
// _copy
static avm* bsy(avm* bsz){
avm* bta = nullptr;
(bta) = (new avm());
((bta)->azc) = (copy_((bsz)->azc));
((bta)->awf) = (copy_((bsz)->awf));
((bta)->ne) = (copy_((bsz)->ne));
((bta)->nf) = (copy_((bsz)->nf));
((bta)->ng) = (copy_((bsz)->ng));
((bta)->nh) = (copy_((bsz)->nh));
((bta)->ni) = (copy_((bsz)->ni));
((bta)->nj) = (copy_((bsz)->nj));
((bta)->nk) = (copy_((bsz)->nk));
((bta)->no) = ((bsz)->no);
((bta)->lw) = ((bsz)->lw);
return as_<avm>(classTable_, (bta), 32);
}
// _toBin
static Array_<uint8_t>* btb(avm* btc){
Array_<uint8_t>* btd = nullptr;
(btd) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(btd) = ((btd)->Cat(toBin_((btc)->azc)));
(btd) = ((btd)->Cat(toBin_((btc)->awf)));
(btd) = ((btd)->Cat(toBin_((btc)->ne)));
(btd) = ((btd)->Cat(toBin_((btc)->nf)));
(btd) = ((btd)->Cat(toBin_((btc)->ng)));
(btd) = ((btd)->Cat(toBin_((btc)->nh)));
(btd) = ((btd)->Cat(toBin_((btc)->ni)));
(btd) = ((btd)->Cat(toBin_((btc)->nj)));
(btd) = ((btd)->Cat(toBin_((btc)->nk)));
(btd) = ((btd)->Cat(toBin_((btc)->no)));
(btd) = ((btd)->Cat(toBin_((btc)->lw)));
return btd;
}
// _fromBin
static avm* btp(avm* btq, Array_<uint8_t>* btr, int64_t* bts){
avm* btt = nullptr;
(btt) = (new avm());
((btt)->azc) = (fromBin_<List_<fx*>*>((btr), (*bts)));
((btt)->awf) = (fromBin_<List_<avn*>*>((btr), (*bts)));
((btt)->ne) = (fromBin_<ga*>((btr), (*bts)));
((btt)->nf) = (fromBin_<Array_<char16_t>*>((btr), (*bts)));
((btt)->ng) = (fromBin_<fx*>((btr), (*bts)));
((btt)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((btr), (*bts)));
((btt)->ni) = (fromBin_<Array_<char16_t>*>((btr), (*bts)));
((btt)->nj) = (fromBin_<fx*>((btr), (*bts)));
((btt)->nk) = (fromBin_<fy*>((btr), (*bts)));
((btt)->no) = (fromBin_<bool>((btr), (*bts)));
((btt)->lw) = (fromBin_<int64_t>((btr), (*bts)));
return btt;
}
// _getDict
template<typename T_, typename C_, typename R_> static R_ avq(T_ btu /*me_*/, Array_<int64_t>* btv /*type*/, C_ btw /*key*/, bool* btx /*existed*/){
return dictSearch_(btu->B, btw, btx);
}
// _head
template<typename T_> static void awg(T_ bty /*me_*/, Array_<int64_t>* btz /*type*/){
bty->I = bty->B.begin();
}
// _term
template<typename T_> static bool awi(T_ bua /*me_*/, Array_<int64_t>* bub /*type*/){
return bua->I == bua->B.end();
}
// _getList
template<typename T_, typename R_> static R_ awk(T_ buc /*me_*/, Array_<int64_t>* bud /*type*/){
return *buc->I;
}
// _findArray
template<typename T_, typename C_> static int64_t awp(T_ bue /*me_*/, Array_<int64_t>* buf /*type*/, C_ bug /*item*/, int64_t buh /*start*/){
if(buh == -1) buh = 0;
if(buh < 0) return -1;
for(int64_t i_ = buh; i_ < bue->L; i_++){
if(bue->B[i_] == bug) return i_;
}
return -1;
}
// _and
template<typename T_> static T_ ayg(T_ bui /*me_*/, Array_<int64_t>* buj /*type*/, T_ buk /*n*/){
return bui & buk;
}
// _next
template<typename T_> static void ayu(T_ bul /*me_*/, Array_<int64_t>* bum /*type*/){
++bul->I;
}
// makeEntryPoint
static fw* ayy(fw* bun /*mainFunc*/){
ga* buo = nullptr; // pos
fw* bup = nullptr; // entry
but* bus = nullptr; // try_
gb* buz = nullptr; // var_
bvc* bvb = nullptr; // type
buv* bvg = nullptr; // block_
buv* bvl = nullptr; // block_
List_<fx*>* bvo = nullptr; // funcs
bvt* bvs = nullptr; // do_
bvw* bvv = nullptr; // call
gd* bwb = nullptr; // ref
buw* bwf = nullptr; // catch_
buv* bwi = nullptr; // block_
bux* bwl = nullptr; // exprs
bwo* bwn = nullptr; // expr
bvc* bws = nullptr; // type
bwo* bwv = nullptr; // expr
bvc* bwx = nullptr; // type
bvt* bxa = nullptr; // do_
bvw* bxc = nullptr; // call
gd* bxe = nullptr; // ref_
bvx* bxg = nullptr; // excpt
gd* bxk = nullptr; // ref_
List_<fx*>* bxn = nullptr; // funcs
bvt* bxq = nullptr; // do_
bvw* bxs = nullptr; // call
gd* bxu = nullptr; // ref
(buo) = ((bql)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (1LL), (1LL)));
(bup) = (new fw());
(buq)((bup), (256LL), (buo));
((bup)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bup)->sm) = (0LL);
((bup)->sf) = (new List_<Array_<char16_t>*>());
((bup)->sg) = (new List_<gb*>());
((bup)->sh) = (nullptr);
((bup)->si) = (new List_<ge*>());
(bus) = (new but());
(buq)((bus), (66051LL), (buo));
(buz) = (new gb());
(buq)((buz), (7LL), (buo));
((buz)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((buz)->qk) = (3LL);
((buz)->ql) = (false);
(bvb) = (new bvc());
(buq)((bvb), (1026LL), (buo));
((bvb)->bvd) = (0LL);
((buz)->qf) = (bvb);
((buz)->qg) = (nullptr);
((bus)->bve) = (buz);
(bvg) = (new buv());
(buq)((bvg), (66052LL), (buo));
((bvg)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bvg)->bve) = (nullptr);
((bvg)->bvh) = (new List_<ge*>());
((bus)->bvi) = (bvg);
((bus)->bvj) = (new List_<buw*>());
(bvl) = (new buv());
(buq)((bvl), (66052LL), (buo));
((bvl)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bvl)->bve) = (nullptr);
((bvl)->bvh) = (new List_<ge*>());
((bus)->bvm) = (bvl);
(bvo) = (new List_<fx*>());
uj<List_<fx*>*, fx*>((bvo), (new Array_<int64_t>(1, (0LL))), ((bvp)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(5, u'\u005F', u'\u0069', u'\u006E', u'\u0069', u'\u0074')), (false))));
uj<List_<fx*>*, fx*>((bvo), (new Array_<int64_t>(1, (0LL))), ((bvp)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(9, u'\u005F', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))));
uj<List_<fx*>*, fx*>((bvo), (new Array_<int64_t>(1, (0LL))), (bun));
awg<List_<fx*>*>((bvo), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<fx*>*>((bvo), (new Array_<int64_t>(1, (0LL)))))){
(bvs) = (new bvt());
(buq)((bvs), (528LL), (buo));
(bvv) = (new bvw());
(bvy)((bvv), (2057LL), (buo));
((bvv)->bvz) = (new List_<bvx*>());
(bwb) = (new gd());
(bvy)((bwb), (2062LL), (buo));
((bwb)->nj) = (awk<List_<fx*>*, fx*>((bvo), (new Array_<int64_t>(1, (0LL)))));
((bvv)->bwc) = (bwb);
((bvs)->bwd) = (bvv);
uj<List_<ge*>*, ge*>((((bus)->bvi)->bvh), (new Array_<int64_t>(1, (0LL))), (bvs));
ayu<List_<fx*>*>((bvo), (new Array_<int64_t>(1, (0LL))));
}
(bwf) = (new buw());
(buq)((bwf), (524LL), (buo));
((bwf)->bwg) = (new List_<bux*>());
(bwi) = (new buv());
(buq)((bwi), (66052LL), (buo));
((bwi)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bwi)->bve) = (nullptr);
((bwi)->bvh) = (new List_<ge*>());
((bwf)->bwj) = (bwi);
(bwl) = (new bux());
(bwn) = (new bwo());
(bvy)((bwn), (67585LL), (buo));
((bwn)->pj) = (1LL);
((bwn)->bwq) = (0x0000000000000000ULL);
(bws) = (new bvc());
(buq)((bws), (1026LL), (buo));
((bws)->bvd) = (0LL);
((bwn)->pf) = (bws);
((bwl)->bwt) = (bwn);
(bwv) = (new bwo());
(bvy)((bwv), (67585LL), (buo));
((bwv)->pj) = (1LL);
((bwv)->bwq) = (0x00000000FFFFFFFFULL);
(bwx) = (new bvc());
(buq)((bwx), (1026LL), (buo));
((bwx)->bvd) = (0LL);
((bwv)->pf) = (bwx);
((bwl)->bwy) = (bwv);
uj<List_<bux*>*, bux*>(((bwf)->bwg), (new Array_<int64_t>(1, (0LL))), (bwl));
(bxa) = (new bvt());
(buq)((bxa), (528LL), (buo));
(bxc) = (new bvw());
(bvy)((bxc), (2057LL), (buo));
((bxc)->bvz) = (new List_<bvx*>());
(bxe) = (new gd());
(bvy)((bxe), (2062LL), (buo));
((bxe)->nj) = ((bvp)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(4, u'\u005F', u'\u0065', u'\u0072', u'\u0072')), (false)));
((bxc)->bwc) = (bxe);
(bxg) = (new bvx());
((bxg)->bxh) = (false);
((bxg)->bxi) = (false);
(bxk) = (new gd());
(bvy)((bxk), (2062LL), (buo));
((bxk)->nj) = ((bus)->bve);
((bxg)->bxl) = (bxk);
uj<List_<bvx*>*, bvx*>(((bxc)->bvz), (new Array_<int64_t>(1, (0LL))), (bxg));
((bxa)->bwd) = (bxc);
uj<List_<ge*>*, ge*>((((bwf)->bwj)->bvh), (new Array_<int64_t>(1, (0LL))), (bxa));
uj<List_<buw*>*, buw*>(((bus)->bvj), (new Array_<int64_t>(1, (0LL))), (bwf));
(bxn) = (new List_<fx*>());
uj<List_<fx*>*, fx*>((bxn), (new Array_<int64_t>(1, (0LL))), ((bvp)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0069', u'\u006E', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))));
uj<List_<fx*>*, fx*>((bxn), (new Array_<int64_t>(1, (0LL))), ((bvp)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(4, u'\u005F', u'\u0066', u'\u0069', u'\u006E')), (false))));
awg<List_<fx*>*>((bxn), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<fx*>*>((bxn), (new Array_<int64_t>(1, (0LL)))))){
(bxq) = (new bvt());
(buq)((bxq), (528LL), (buo));
(bxs) = (new bvw());
(bvy)((bxs), (2057LL), (buo));
((bxs)->bvz) = (new List_<bvx*>());
(bxu) = (new gd());
(bvy)((bxu), (2062LL), (buo));
((bxu)->nj) = (awk<List_<fx*>*, fx*>((bxn), (new Array_<int64_t>(1, (0LL)))));
((bxs)->bwc) = (bxu);
((bxq)->bwd) = (bxs);
uj<List_<ge*>*, ge*>((((bus)->bvm)->bvh), (new Array_<int64_t>(1, (0LL))), (bxq));
ayu<List_<fx*>*>((bxn), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<ge*>*, ge*>(((bup)->si), (new Array_<int64_t>(1, (0LL))), (bus));
return bup;
}
// rebuildFunc
static void ayz(fw* bxv /*ast*/){
List_<gb*>* bxy = nullptr; // items
if(!eqAddr_(((bxv)->nk), (nullptr))){
return;
}
((bxv)->nk) = (bxv);
(bxy) = ((bxv)->sg);
awg<List_<gb*>*>((bxy), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gb*>*>((bxy), (new Array_<int64_t>(1, (0LL)))))){
(bya)((awk<List_<gb*>*, gb*>((bxy), (new Array_<int64_t>(1, (0LL))))));
ayu<List_<gb*>*>((bxy), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((bxv)->sh), (nullptr))){
((bxv)->sh) = ((byd)(((bxv)->sh), (nullptr)));
}
((bxv)->si) = ((bye)(((bxv)->si), ((bxv)->sh), (bxv)));
}
// rebuildRoot
static bool azd(Array_<char16_t>* byf /*key*/, fx* byg /*value*/, fz* byh /*data*/){
avm* byi = nullptr; // ast
fw* byl = nullptr; // initVarsFunc
fw* bym = nullptr; // finVarsFunc
List_<fx*>* byn = nullptr; // items
fx* byp = nullptr; // item
bgk* byt = nullptr; // var_
bvt* byx = nullptr; // do_
bza* byz = nullptr; // assign
gd* bzd = nullptr; // ref
bvt* bzk = nullptr; // do_
bza* bzm = nullptr; // assign
gd* bzo = nullptr; // ref
(byi) = (as_<avm>(classTable_, (byg), 32));
if(!eqAddr_(((byi)->nk), (nullptr))){
return true;
}
((byi)->nk) = (byi);
(byl) = (as_<fw>(classTable_, ((bvp)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(9, u'\u005F', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))), 8));
(bym) = (as_<fw>(classTable_, ((bvp)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0069', u'\u006E', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))), 8));
(byn) = ((byi)->azc);
awg<List_<fx*>*>((byn), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<fx*>*>((byn), (new Array_<int64_t>(1, (0LL)))))){
(byp) = (awk<List_<fx*>*, fx*>((byn), (new Array_<int64_t>(1, (0LL)))));
if(((byp)->lw) == (256LL)){
(ayz)((as_<fw>(classTable_, (byp), 8)));
}
else if(((byp)->lw) == (2LL)){
(byt) = (as_<bgk>(classTable_, (byp), 38));
if(!((((byt)->bgm)->qk) == (1LL))){
throw 0xE9170000U;
}
if(!eqAddr_((((byt)->bgm)->qg), (nullptr))){
(((byt)->bgm)->qg) = ((byw)((((byt)->bgm)->qg), (false)));
(byx) = (new bvt());
(buq)((byx), (528LL), ((byi)->ne));
(byz) = (new bza());
(bvy)((byz), (2050LL), ((byi)->ne));
((byz)->bzb) = (0LL);
(bzd) = (new gd());
(bvy)((bzd), (2062LL), ((byi)->ne));
((bzd)->pf) = (((byt)->bgm)->qf);
((bzd)->nj) = ((byt)->bgm);
((byz)->bze) = (bzd);
((byz)->bzf) = (((byt)->bgm)->qg);
((byx)->bwd) = (byz);
uj<List_<ge*>*, ge*>(((byl)->si), (new Array_<int64_t>(1, (0LL))), ((bzg)((byx), (nullptr), (nullptr))));
}
if((!eqAddr_((((byt)->bgm)->qf), (nullptr))) && ((bzi)((((byt)->bgm)->qf)))){
(bzk) = (new bvt());
(buq)((bzk), (528LL), ((byi)->ne));
(bzm) = (new bza());
(bvy)((bzm), (2050LL), ((byi)->ne));
((bzm)->bzb) = (0LL);
(bzo) = (new gd());
(bvy)((bzo), (2062LL), ((byi)->ne));
((bzo)->pf) = (((byt)->bgm)->qf);
((bzo)->nj) = ((byt)->bgm);
((bzm)->bze) = (bzo);
((bzm)->bzf) = ((bzp)(((byi)->ne)));
((bzk)->bwd) = (bzm);
uj<List_<ge*>*, ge*>(((bym)->si), (new Array_<int64_t>(1, (0LL))), ((bzg)((bzk), (nullptr), (nullptr))));
}
}
else{
if(!((((((byp)->lw) == (3LL)) || (((byp)->lw) == (4LL))) || (((byp)->lw) == (5LL))) || (((byp)->lw) == (6LL)))){
throw 0xE9170000U;
}
}
ayu<List_<fx*>*>((byn), (new Array_<int64_t>(1, (0LL))));
}
return true;
}
// getInfo
static bca* bbz(fx* bzr /*ast*/){
bca* bzu = nullptr; // info
if((eqAddr_(((bzr)->nk), (nullptr))) || ((((bzr)->nk)->lw) != (268435456LL))){
(bzu) = (new bca());
((bzu)->lw) = (268435456LL);
((bzu)->bea) = ((bzv)());
if((((ayg<int64_t>(((bzr)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL)) && (!eqAddr_(((bzr)->nf), (nullptr)))) && (cmp_(((bzr)->nf), (new Array_<char16_t>(1, u'\u0024'))) != 0)){
((bzu)->bzy) = ((bzv)());
if((ayg<int64_t>(((bzr)->lw), (new Array_<int64_t>(1, (0LL))), (16843264LL))) == (16843264LL)){
((bzu)->cab) = ((bzv)());
}
else{
((bzu)->cab) = (nullptr);
}
}
else{
((bzu)->bzy) = (nullptr);
((bzu)->cab) = (nullptr);
}
((bzu)->bfv) = (-1LL);
((bzu)->bcc) = (false);
((bzu)->cae) = (false);
((bzu)->caf) = (false);
((bzr)->nk) = (bzu);
}
return as_<bca>(classTable_, ((bzr)->nk), 36);
}
// _dtor
static void cag(bca* cah){
((cah)->bea) = (nullptr);
((cah)->bzy) = (nullptr);
((cah)->cab) = (nullptr);
}
// _copy
static bca* cai(bca* caj){
bca* cak = nullptr;
(cak) = (new bca());
((cak)->bea) = (copy_((caj)->bea));
((cak)->bzy) = (copy_((caj)->bzy));
((cak)->cab) = (copy_((caj)->cab));
((cak)->bfv) = ((caj)->bfv);
((cak)->bcc) = ((caj)->bcc);
((cak)->cae) = ((caj)->cae);
((cak)->caf) = ((caj)->caf);
((cak)->lw) = ((caj)->lw);
return as_<bca>(classTable_, (cak), 36);
}
// _toBin
static Array_<uint8_t>* cal(bca* cam){
Array_<uint8_t>* can = nullptr;
(can) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(can) = ((can)->Cat(toBin_((cam)->bea)));
(can) = ((can)->Cat(toBin_((cam)->bzy)));
(can) = ((can)->Cat(toBin_((cam)->cab)));
(can) = ((can)->Cat(toBin_((cam)->bfv)));
(can) = ((can)->Cat(toBin_((cam)->bcc)));
(can) = ((can)->Cat(toBin_((cam)->cae)));
(can) = ((can)->Cat(toBin_((cam)->caf)));
(can) = ((can)->Cat(toBin_((cam)->lw)));
return can;
}
// _fromBin
static bca* caw(bca* cax, Array_<uint8_t>* cay, int64_t* caz){
bca* cba = nullptr;
(cba) = (new bca());
((cba)->bea) = (fromBin_<Array_<char16_t>*>((cay), (*caz)));
((cba)->bzy) = (fromBin_<Array_<char16_t>*>((cay), (*caz)));
((cba)->cab) = (fromBin_<Array_<char16_t>*>((cay), (*caz)));
((cba)->bfv) = (fromBin_<int64_t>((cay), (*caz)));
((cba)->bcc) = (fromBin_<bool>((cay), (*caz)));
((cba)->cae) = (fromBin_<bool>((cay), (*caz)));
((cba)->caf) = (fromBin_<bool>((cay), (*caz)));
((cba)->lw) = (fromBin_<int64_t>((cay), (*caz)));
return cba;
}
// getType
static Array_<char16_t>* bcv(gc* cbb /*type*/){
int64_t cbf = 0;
cbp* cbo = nullptr; // func_
Array_<char16_t>* cbr = nullptr; // id
Array_<char16_t>* cbu = nullptr; // arg
bool cbv = false; // first
List_<cbq*>* cbw = nullptr; // items
cbq* cbz = nullptr; // item
ccm* ccl = nullptr; // gen
int64_t cco = 0;
ccx* ccw = nullptr; // dict_
bvc* cdb = nullptr; // prim
int64_t cdd = 0;
fx* cdk = nullptr; // ref
bca* cdn = nullptr; // info
if(eqAddr_((cbb), (nullptr))){
return new Array_<char16_t>(4, u'\u0076', u'\u006F', u'\u0069', u'\u0064');
}
switch((cbb)->lw){
case 66561LL:
return ((new Array_<char16_t>(7, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((as_<cbh>(classTable_, (cbb), 76))->cbj))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
case 1025LL:
return ((new Array_<char16_t>(4, u'\u0075', u'\u0069', u'\u006E', u'\u0074'))->Cat(v<int64_t>((((as_<cbl>(classTable_, (cbb), 78))->cbm) * (8LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u005F', u'\u0074'));
break;
case 66562LL:
(cbo) = (as_<cbp>(classTable_, (cbb), 80));
(cbr) = ((bzv)());
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0064', u'\u0065', u'\u0066', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcv)(((cbo)->cbs))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0028', u'\u002A'))->Cat(v<Array_<char16_t>*>((cbr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u0028')))));
(cbu) = (new Array_<char16_t>(0));
(cbv) = (true);
(cbw) = ((cbo)->cbx);
awg<List_<cbq*>*>((cbw), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<cbq*>*>((cbw), (new Array_<int64_t>(1, (0LL)))))){
(cbz) = (awk<List_<cbq*>*, cbq*>((cbw), (new Array_<int64_t>(1, (0LL)))));
if(cbv){
(cbv) = (false);
}
else{
(cbu) = ((cbu)->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
}
(cbu) = ((cbu)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)(((cbz)->ccf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if((cbz)->cch){
(cbu) = ((cbu)->Cat(new Array_<char16_t>(1, u'\u002A')));
}
ayu<List_<cbq*>*>((cbw), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((cbu), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
return cbr;
break;
case 66563LL:
(ccl) = (as_<ccm>(classTable_, (cbb), 84));
switch((ccl)->ccp){
case 0LL:
return ((new Array_<char16_t>(6, u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((ccl)->ccr))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
case 1LL:
return ((new Array_<char16_t>(7, u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((ccl)->ccr))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
case 2LL:
return ((new Array_<char16_t>(7, u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((ccl)->ccr))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66564LL:
(ccw) = (as_<ccx>(classTable_, (cbb), 86));
return ((new Array_<char16_t>(6, u'\u0044', u'\u0069', u'\u0063', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((ccw)->ccy))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcv)(((ccw)->ccz))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A')));
break;
case 1026LL:
(cdb) = (as_<bvc>(classTable_, (cbb), 60));
switch((cdb)->bvd){
case 0LL:
return new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074');
break;
case 1LL:
return new Array_<char16_t>(6, u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065');
break;
case 2LL:
return new Array_<char16_t>(8, u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074');
break;
case 3LL:
return new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66565LL:
(cdk) = ((cbb)->nj);
if(((cdk)->lw) == (5LL)){
(bfq)((as_<un>(classTable_, (cdk), 22)));
(cdn) = ((bbz)((cdk)));
return ((cdn)->bea)->Cat(new Array_<char16_t>(1, u'\u002A'));
}
else{
if(!(((cdk)->lw) == (6LL))){
throw 0xE9170000U;
}
return new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074');
}
break;
case 1027LL:
if(!(false)){
throw 0xE9170000U;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// isInt
static bool bdi(gc* cdr /*type*/){
return (((cdr)->lw) == (1026LL)) && (((as_<bvc>(classTable_, (cdr), 60))->bvd) == (0LL));
}
// write
static void bes(List_<Array_<char16_t>*>* cds /*codes*/, Array_<char16_t>* cdt /*attr*/, List_<gb*>* cdu /*args*/, List_<uo*>* cdv /*members*/){
Array_<char16_t>* cdx = nullptr;
bca* cdz = nullptr; // class_
bca* ceb = nullptr; // me_
bca* cec = nullptr; // key
bca* ced = nullptr; // item
bca* cef = nullptr; // me_
bca* ceg = nullptr; // item
bca* cei = nullptr; // me_
bca* cej = nullptr; // item
bca* cel = nullptr; // me_
bca* cem = nullptr; // item
bca* ceo = nullptr; // me_
bca* cep = nullptr; // n
bca* ces = nullptr; // me_
bca* ceu = nullptr; // me_
bca* cev = nullptr; // value
bca* cex = nullptr; // me_
bca* cey = nullptr; // item
bca* cez = nullptr; // start
bca* cfb = nullptr; // me_
bca* cfc = nullptr; // item
bca* cfe = nullptr; // me_
bca* cff = nullptr; // callback
bca* cfg = nullptr; // data
bca* cfi = nullptr; // me_
bca* cfj = nullptr; // key
bca* cfk = nullptr; // existed
bca* cfm = nullptr; // me_
bca* cfo = nullptr; // me_
bca* cfq = nullptr; // me_
bca* cfs = nullptr; // me_
bca* cfu = nullptr; // me_
bca* cfw = nullptr; // me_
bca* cfx = nullptr; // item
bca* cfz = nullptr; // me_
bca* cga = nullptr; // offset
bca* cgc = nullptr; // me_
bca* cge = nullptr; // me_
bca* cgf = nullptr; // n
bca* cgh = nullptr; // me_
bca* cgj = nullptr; // me_
bca* cgl = nullptr; // min
bca* cgm = nullptr; // max
bca* cgo = nullptr; // min
bca* cgp = nullptr; // max
bca* cgr = nullptr; // me_
bca* cgs = nullptr; // start
bca* cgt = nullptr; // len
bca* cgw = nullptr; // me_
bca* cgy = nullptr; // me_
bca* cha = nullptr; // me_
bca* chb = nullptr; // success
bca* chd = nullptr; // me_
bca* che = nullptr; // success
bca* chg = nullptr; // me_
bca* chh = nullptr; // success
bca* chj = nullptr; // me_
bca* chl = nullptr; // str
bca* chn = nullptr; // dst
bca* cho = nullptr; // src
bca* chq = nullptr; // path
bca* chs = nullptr; // path
bca* cht = nullptr; // recursion
bca* chu = nullptr; // callback
bca* chv = nullptr; // data
bca* chx = nullptr; // me_
bca* chy = nullptr; // path
bca* chz = nullptr; // handle
bca* cic = nullptr; // me_
bca* cid = nullptr; // path
bca* cie = nullptr; // append
bca* cif = nullptr; // handle
bca* cih = nullptr; // me_
bca* cii = nullptr; // handle
bca* cik = nullptr; // me_
bca* cil = nullptr; // handle
bca* cin = nullptr; // me_
bca* cio = nullptr; // handle
bca* ciq = nullptr; // me_
bca* cir = nullptr; // origin
bca* cis = nullptr; // pos
bca* cit = nullptr; // handle
bca* civ = nullptr; // me_
bca* ciw = nullptr; // handle
bca* ciy = nullptr; // me_
bca* ciz = nullptr; // handle
bca* cjb = nullptr; // me_
bca* cjc = nullptr; // handle
bca* cje = nullptr; // me_
bca* cjf = nullptr; // origin
bca* cjg = nullptr; // pos
bca* cjh = nullptr; // handle
bca* cjj = nullptr; // me_
bca* cjk = nullptr; // n
bca* cjl = nullptr; // handle
bca* cjn = nullptr; // me_
bca* cjo = nullptr; // n
bca* cjp = nullptr; // handle
cdx = cdt;
if(cmp_(cdx, (new Array_<char16_t>(4, u'\u0061', u'\u0064', u'\u0064', u'\u0072'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cdz) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(34, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cdz)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(ceb) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cec) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(ced) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ceb)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0041', u'\u0064', u'\u0064', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cec)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ced)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cdx, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cef) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(ceg) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cef)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u005F', u'\u0062', u'\u0061', u'\u0063', u'\u006B', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ceg)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdx, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cei) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cej) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cei)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cej)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdx, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cel) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cem) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cel)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cem)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdx, (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(ceo) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cep) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ceo)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u0026', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cep)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cdx, (new Array_<char16_t>(7, u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065'))) == 0){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(65, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u002A', u'\u003E', u'\u002A', u'\u0020', u'\u0061', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u002A', u'\u003E', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u003D', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(59, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u002A', u'\u005B', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u0029', u'\u005D', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0076', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(44, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0038', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(36, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(48, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(44, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002D', u'\u003E', u'\u0042', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u005B', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u005D', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(75, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006D', u'\u0065', u'\u006D', u'\u0063', u'\u0070', u'\u0079', u'\u0028', u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0063', u'\u005F', u'\u0073', u'\u0074', u'\u0072', u'\u0028', u'\u0029', u'\u002C', u'\u0020', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u006F', u'\u0066', u'\u0028', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u0029', u'\u0020', u'\u002A', u'\u0020', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(3, u'\u0064', u'\u0065', u'\u006C'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(ces) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u0061', u'\u0075', u'\u0074', u'\u006F', u'\u0026', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ces)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u002B', u'\u002B', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ces)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u0072', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0069', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006C', u'\u006C'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(ceu) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cev) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ceu)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u004C', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ceu)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(10, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cev)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(cdx, (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cex) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cey) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cez) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cez)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u002D', u'\u0031', u'\u0029', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cez)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cez)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0020', u'\u003C', u'\u0020', u'\u0030', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cez)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cex)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u002D', u'\u003E', u'\u004C', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cex)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cey)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0042', u'\u0069', u'\u006E'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfb) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfc) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(21, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0061', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u002C', u'\u0020', u'\u0062', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfb)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(19, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0028', u'\u0061', u'\u005F', u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0062', u'\u005F', u'\u0029', u'\u0020', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0028', u'\u0061', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0062', u'\u005F', u'\u0029', u'\u0020', u'\u002F', u'\u0020', u'\u0032', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u006D', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfc)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfb)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0063', u'\u005F', u'\u005D', u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(24, u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u0020', u'\u003C', u'\u0020', u'\u0030', u'\u0029', u'\u0020', u'\u0062', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(29, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u0020', u'\u003E', u'\u0020', u'\u0030', u'\u0029', u'\u0020', u'\u0061', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(7, u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfe) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cff) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfg) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u0046', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfe)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(43, u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0028', u'\u002A', u'\u0029', u'\u0028', u'\u004B', u'\u005F', u'\u002C', u'\u0020', u'\u0056', u'\u005F', u'\u002C', u'\u0020', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0029', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cff)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfg)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cdx, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfi) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfj) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfk) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(19, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u0053', u'\u0065', u'\u0061', u'\u0072', u'\u0063', u'\u0068', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfi)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfj)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfk)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cdx, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfm) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002A'))->Cat(v<Array_<char16_t>*>(((cfm)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfo) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0052', u'\u005F', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfo)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006E', u'\u0074', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cfo)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfq) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0052', u'\u005F', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfq)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0074', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cfq)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(4, u'\u0068', u'\u0065', u'\u0061', u'\u0064'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfs) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cfs)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfs)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdx, (new Array_<char16_t>(3, u'\u0069', u'\u0064', u'\u0078'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfu) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0061', u'\u0075', u'\u0074', u'\u006F', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfu)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(19, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u003B', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u0021', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfu)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u0020', u'\u002B', u'\u002B', u'\u0074', u'\u005F', u'\u0029', u'\u007B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfu)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002D', u'\u003E', u'\u0049', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0073'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfw) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfx) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cfw)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0069', u'\u006E', u'\u0073', u'\u0065', u'\u0072', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfw)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfx)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cdx, (new Array_<char16_t>(10, u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cfz) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cga) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cga)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0030', u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cga)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfz)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfz)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u0029', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002B', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cfz)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cga)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002D', u'\u002D', u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfz)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfz)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u0029', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002D', u'\u002D'))->Cat(v<Array_<char16_t>*>(((cfz)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0078', u'\u0074'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgc) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002B', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cgc)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(2, u'\u006F', u'\u0072'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cge) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgf) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cge)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u007C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgf)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cdx, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgh) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgh)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006E', u'\u0074', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgj) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgj)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0074', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(3, u'\u0072', u'\u006E', u'\u0064'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgl) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgm) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u006E', u'\u0064', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgl)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgm)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdx, (new Array_<char16_t>(8, u'\u0072', u'\u006E', u'\u0064', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgo) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgp) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u006E', u'\u0064', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgo)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgp)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdx, (new Array_<char16_t>(3, u'\u0073', u'\u0075', u'\u0062'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgr) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgs) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgt) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0075', u'\u0062', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgr)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgs)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgt)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cdx, (new Array_<char16_t>(7, u'\u0073', u'\u0079', u'\u0073', u'\u0054', u'\u0069', u'\u006D', u'\u0065'))) == 0){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(145, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0068', u'\u0072', u'\u006F', u'\u006E', u'\u006F', u'\u003A', u'\u003A', u'\u0064', u'\u0075', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0068', u'\u0072', u'\u006F', u'\u006E', u'\u006F', u'\u003A', u'\u003A', u'\u006D', u'\u0069', u'\u006C', u'\u006C', u'\u0069', u'\u0073', u'\u0065', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0073', u'\u003E', u'\u0028', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0068', u'\u0072', u'\u006F', u'\u006E', u'\u006F', u'\u003A', u'\u003A', u'\u0073', u'\u0079', u'\u0073', u'\u0074', u'\u0065', u'\u006D', u'\u005F', u'\u0063', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u003A', u'\u003A', u'\u006E', u'\u006F', u'\u0077', u'\u0028', u'\u0029', u'\u002E', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u005F', u'\u0073', u'\u0069', u'\u006E', u'\u0063', u'\u0065', u'\u005F', u'\u0065', u'\u0070', u'\u006F', u'\u0063', u'\u0068', u'\u0028', u'\u0029', u'\u0029', u'\u002E', u'\u0063', u'\u006F', u'\u0075', u'\u006E', u'\u0074', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u0069', u'\u006C'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgw) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cgw)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgw)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002D', u'\u002D'))->Cat(v<Array_<char16_t>*>(((cgw)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(4, u'\u0074', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cgy) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgy)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgy)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdx, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u0074', u'\u0036', u'\u0034'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cha) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chb) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cha)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(111, u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0032', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0030', u'\u0027', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0078', u'\u0027', u'\u0020', u'\u003F', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0075', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u002C', u'\u0020', u'\u0031', u'\u0036', u'\u0029', u'\u0020', u'\u003A', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0075', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((chb)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((chb)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((chb)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chd) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(che) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chd)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(32, u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0064', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((che)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((che)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((che)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0049', u'\u006E', u'\u0074'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chg) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chh) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chg)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(109, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0032', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0030', u'\u0027', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0078', u'\u0027', u'\u0020', u'\u003F', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u002C', u'\u0020', u'\u0031', u'\u0036', u'\u0029', u'\u0020', u'\u003A', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0075', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((chh)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((chh)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((chh)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chj) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chj)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(9, u'\u0063', u'\u0075', u'\u0069', u'\u005F', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chl) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chl)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u003C', u'\u003C', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003C', u'\u003C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0066', u'\u006C', u'\u0075', u'\u0073', u'\u0068', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u0046', u'\u0069', u'\u006C', u'\u0065'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chn) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cho) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chn)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cho)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0042', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdx, (new Array_<char16_t>(10, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chq) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(12, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chs) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cht) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chu) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chv) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chx) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(chy) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
(chz) = ((cia)((cdv), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((chx)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((chz)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(45, u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chy)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chx)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((chz)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(72, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u0066', u'\u0073', u'\u0074', u'\u0072', u'\u0065', u'\u0061', u'\u006D', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0063', u'\u005F', u'\u0073', u'\u0074', u'\u0072', u'\u0028', u'\u0029', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0069', u'\u006E', u'\u0020', u'\u007C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0062', u'\u0069', u'\u006E', u'\u0061', u'\u0072', u'\u0079', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u002A', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chx)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cic) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cid) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cie) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
(cif) = ((cia)((cdv), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cic)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cif)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(45, u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cid)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cic)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cif)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(74, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006F', u'\u0066', u'\u0073', u'\u0074', u'\u0072', u'\u0065', u'\u0061', u'\u006D', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0063', u'\u005F', u'\u0073', u'\u0074', u'\u0072', u'\u0028', u'\u0029', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u007C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0062', u'\u0069', u'\u006E', u'\u0061', u'\u0072', u'\u0079', u'\u0020', u'\u007C', u'\u0020', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cie)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(38, u'\u0020', u'\u003F', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0061', u'\u0070', u'\u0070', u'\u0020', u'\u003A', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u006E', u'\u0063', u'\u0029', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u002A', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cic)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cih) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
(cii) = ((cia)((cdv), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cih)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cii)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cik) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
(cil) = ((cia)((cdv), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cik)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cil)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(45, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0074', u'\u0065', u'\u006C', u'\u006C', u'\u0067', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(21, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u004C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cin) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
(cio) = ((cia)((cdv), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cin)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cio)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(25, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(ciq) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cir) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cis) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
(cit) = ((cia)((cdv), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ciq)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cit)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(48, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0064', u'\u0069', u'\u0072', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cir)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0030', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0031', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0063', u'\u0075', u'\u0072', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0032', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0065', u'\u006E', u'\u0064', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(13, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0067', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cis)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002C', u'\u0020', u'\u006F', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0054', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(civ) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
(ciw) = ((cia)((cdv), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((civ)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((ciw)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0020', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0067', u'\u0065', u'\u0074', u'\u0028', u'\u0063', u'\u005F', u'\u0029', u'\u0029', u'\u0020', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(38, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0067', u'\u0028', u'\u002D', u'\u0031', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0063', u'\u0075', u'\u0072', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(ciy) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
(ciz) = ((cia)((cdv), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ciy)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((ciz)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cjb) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
(cjc) = ((cia)((cdv), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjb)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjc)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(45, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0074', u'\u0065', u'\u006C', u'\u006C', u'\u0070', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cdx, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cje) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cjf) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cjg) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
(cjh) = ((cia)((cdv), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cje)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjh)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(48, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0064', u'\u0069', u'\u0072', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjf)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0030', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0031', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0063', u'\u0075', u'\u0072', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0032', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0065', u'\u006E', u'\u0064', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(13, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0070', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjg)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002C', u'\u0020', u'\u006F', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(16, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cjj) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cjk) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
(cjl) = ((cia)((cdv), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjj)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjl)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(37, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0028', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjk)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0042', u'\u0029', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cjk)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u004C', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdx, (new Array_<char16_t>(20, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0043', u'\u0068', u'\u0061', u'\u0072'))) == 0){
awg<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cjn) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((cdu), (new Array_<int64_t>(1, (0LL))));
(cjo) = ((bbz)((awk<List_<gb*>*, gb*>((cdu), (new Array_<int64_t>(1, (0LL)))))));
(cjp) = ((cia)((cdv), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjn)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjp)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cds), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cjo)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdx, (new Array_<char16_t>(19, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u0065', u'\u0064', u'\u0069', u'\u0074', u'\u0042', u'\u0061', u'\u0073', u'\u0065', u'\u0047', u'\u0065', u'\u0074', u'\u0054', u'\u0065', u'\u0078', u'\u0074'))) == 0){
}
else if(cmp_(cdx, (new Array_<char16_t>(17, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0045', u'\u0064', u'\u0069', u'\u0074', u'\u004D', u'\u0075', u'\u006C', u'\u0074', u'\u0069'))) == 0){
}
else{if(!(false)){
throw 0xE9170000U;
}
}
}
// _tail
template<typename T_> static void bew(T_ cjt /*me_*/, Array_<int64_t>* cju /*type*/){
cjt->I = cjt->B.end();
--cjt->I;
}
// _idx
template<typename T_> static int64_t bey(T_ cjv /*me_*/, Array_<int64_t>* cjw /*type*/){
int64_t i_ = 0;
for(auto& t_ = cjv->B.begin(); t_ != cjv->B.end(); ++t_){
if(t_ == cjv->I) return i_;
i_++;
}
return -1;
}
// buildStats
static void bez(List_<ge*>* cjx /*stats*/, ge* cjy /*breakStat*/, ge* cjz /*skipStat*/){
ge* ckb = nullptr; // stat
int64_t ckd = 0;
awg<List_<ge*>*>((cjx), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ge*>*>((cjx), (new Array_<int64_t>(1, (0LL)))))){
(ckb) = (awk<List_<ge*>*, ge*>((cjx), (new Array_<int64_t>(1, (0LL)))));
switch((ckb)->lw){
case 66049LL:
(ckf)((as_<ckg>(classTable_, (ckb), 88)), (cjy), (cjz));
break;
case 66050LL:
(ckj)((as_<ckk>(classTable_, (ckb), 92)), (cjy), (cjz));
break;
case 16843265LL:
(ckn)((as_<cko>(classTable_, (ckb), 98)), (cjy), (cjz));
break;
case 16843266LL:
(ckr)((as_<cks>(classTable_, (ckb), 100)), (cjy), (cjz));
break;
case 66051LL:
(cku)((as_<but>(classTable_, (ckb), 52)), (cjy), (cjz));
break;
case 526LL:
(ckw)((as_<ckx>(classTable_, (ckb), 102)));
break;
case 66052LL:
(ckz)((as_<buv>(classTable_, (ckb), 54)), (cjy), (cjz));
break;
case 527LL:
(clb)((as_<clc>(classTable_, (ckb), 104)));
break;
case 528LL:
(cle)((as_<bvt>(classTable_, (ckb), 62)));
break;
case 529LL:
(clg)((as_<ge>(classTable_, (ckb), 16)), (cjy));
break;
case 530LL:
(cli)((as_<ge>(classTable_, (ckb), 16)), (cjz));
break;
case 531LL:
(clk)((as_<cll>(classTable_, (ckb), 106)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
ayu<List_<ge*>*>((cjx), (new Array_<int64_t>(1, (0LL))));
}
}
// _moveOffset
template<typename T_> static void bfa(T_ cln /*me_*/, Array_<int64_t>* clo /*type*/, int64_t clp /*offset*/){
if(clp >= 0){
for(int64_t i_ = 0; i_ < clp; i_++){
if(cln->I == cln->B.end()) break;
++cln->I;
}
}else{
for(int64_t i_ = 0; i_ > clp; i_--){
if(cln->I == cln->B.end()) break;
--cln->I;
}
}
}
// _ins
template<typename T_, typename C_> static void bfg(T_ clq /*me_*/, Array_<int64_t>* clr /*type*/, C_ cls /*item*/){
clq->B.insert(clq->I, cls);
}
// getDefaultValue
static Array_<char16_t>* bfh(gc* clt /*type*/){
int64_t cly = 0;
int64_t cme = 0;
if((clv)((clt))){
return new Array_<char16_t>(7, u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072');
}
switch((clt)->lw){
case 66565LL:
if(!((cma)((clt)))){
throw 0xE9170000U;
}
return new Array_<char16_t>(1, u'\u0030');
break;
case 1025LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1026LL:
switch((as_<bvc>(classTable_, (clt), 60))->bvd){
case 0LL:
case 2LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1LL:
return new Array_<char16_t>(3, u'\u0030', u'\u002E', u'\u0030');
break;
case 3LL:
return new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// _del
template<typename T_> static void bfj(T_ cmk /*me_*/, Array_<int64_t>* cml /*type*/){
auto& i_ = cmk->I++;
cmk->B.erase(i_);
}
// refClass
static Array_<char16_t>* bfq(un* cmm /*ast*/){
bca* cmn = nullptr; // info
List_<uo*>* cmw = nullptr; // items
uo* cmy = nullptr; // item
fw* cnb = nullptr; // func_
List_<gb*>* cne = nullptr; // items2
gb* cng = nullptr; // arg
bgk* cni = nullptr; // var_
(cmn) = ((bbz)((cmm)));
if((cmn)->bcc){
return (cmn)->bea;
}
((cmn)->bcc) = (true);
if(!eqAddr_(((cmm)->nj), (nullptr))){
(bfq)((as_<un>(classTable_, ((cmm)->nj), 22)));
}
if(((cmn)->bfv) == (-1LL)){
((cmn)->bfv) = (uq);
(uq) = ((uq) + (1LL));
}
(cmw) = ((cmm)->bai);
awg<List_<uo*>*>((cmw), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((cmw), (new Array_<int64_t>(1, (0LL)))))){
(cmy) = (awk<List_<uo*>*, uo*>((cmw), (new Array_<int64_t>(1, (0LL)))));
if((((cmy)->azn)->lw) == (256LL)){
(cnb) = (as_<fw>(classTable_, ((cmy)->azn), 8));
if(!eqAddr_(((cnb)->sh), (nullptr))){
(bcv)(((cnb)->sh));
}
(cne) = ((cnb)->sg);
awg<List_<gb*>*>((cne), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gb*>*>((cne), (new Array_<int64_t>(1, (0LL)))))){
(cng) = (awk<List_<gb*>*, gb*>((cne), (new Array_<int64_t>(1, (0LL)))));
(bcv)(((cng)->qf));
ayu<List_<gb*>*>((cne), (new Array_<int64_t>(1, (0LL))));
}
um<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL))), (cnb));
}
else if((((cmy)->azn)->lw) == (2LL)){
(cni) = (as_<bgk>(classTable_, ((cmy)->azn), 38));
(bcv)((((cni)->bgm)->qf));
}
ayu<List_<uo*>*>((cmw), (new Array_<int64_t>(1, (0LL))));
}
um<Queue_<un*>*, un*>((ak), (new Array_<int64_t>(1, (0LL))), (cmm));
return (cmn)->bea;
}
// _dtor
static void cnj(bgk* cnk){
((cnk)->bgm) = (nullptr);
((cnk)->ne) = (nullptr);
((cnk)->nf) = (nullptr);
((cnk)->ng) = (nullptr);
((cnk)->nh) = (nullptr);
((cnk)->ni) = (nullptr);
((cnk)->nj) = (nullptr);
((cnk)->nk) = (nullptr);
}
// _copy
static bgk* cnl(bgk* cnm){
bgk* cnn = nullptr;
(cnn) = (new bgk());
((cnn)->bgm) = (copy_((cnm)->bgm));
((cnn)->ne) = (copy_((cnm)->ne));
((cnn)->nf) = (copy_((cnm)->nf));
((cnn)->ng) = (copy_((cnm)->ng));
((cnn)->nh) = (copy_((cnm)->nh));
((cnn)->ni) = (copy_((cnm)->ni));
((cnn)->nj) = (copy_((cnm)->nj));
((cnn)->nk) = (copy_((cnm)->nk));
((cnn)->no) = ((cnm)->no);
((cnn)->lw) = ((cnm)->lw);
return as_<bgk>(classTable_, (cnn), 38);
}
// _toBin
static Array_<uint8_t>* cno(bgk* cnp){
Array_<uint8_t>* cnq = nullptr;
(cnq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(cnq) = ((cnq)->Cat(toBin_((cnp)->bgm)));
(cnq) = ((cnq)->Cat(toBin_((cnp)->ne)));
(cnq) = ((cnq)->Cat(toBin_((cnp)->nf)));
(cnq) = ((cnq)->Cat(toBin_((cnp)->ng)));
(cnq) = ((cnq)->Cat(toBin_((cnp)->nh)));
(cnq) = ((cnq)->Cat(toBin_((cnp)->ni)));
(cnq) = ((cnq)->Cat(toBin_((cnp)->nj)));
(cnq) = ((cnq)->Cat(toBin_((cnp)->nk)));
(cnq) = ((cnq)->Cat(toBin_((cnp)->no)));
(cnq) = ((cnq)->Cat(toBin_((cnp)->lw)));
return cnq;
}
// _fromBin
static bgk* cob(bgk* coc, Array_<uint8_t>* cod, int64_t* coe){
bgk* cof = nullptr;
(cof) = (new bgk());
((cof)->bgm) = (fromBin_<gb*>((cod), (*coe)));
((cof)->ne) = (fromBin_<ga*>((cod), (*coe)));
((cof)->nf) = (fromBin_<Array_<char16_t>*>((cod), (*coe)));
((cof)->ng) = (fromBin_<fx*>((cod), (*coe)));
((cof)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((cod), (*coe)));
((cof)->ni) = (fromBin_<Array_<char16_t>*>((cod), (*coe)));
((cof)->nj) = (fromBin_<fx*>((cod), (*coe)));
((cof)->nk) = (fromBin_<fy*>((cod), (*coe)));
((cof)->no) = (fromBin_<bool>((cod), (*coe)));
((cof)->lw) = (fromBin_<int64_t>((cod), (*coe)));
return cof;
}
// findFunc
static fw* bgp(un* cog /*ast*/, Array_<char16_t>* coh /*name*/){
List_<uo*>* coi = nullptr; // items
uo* cok = nullptr; // item
(coi) = ((cog)->bai);
awg<List_<uo*>*>((coi), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((coi), (new Array_<int64_t>(1, (0LL)))))){
(cok) = (awk<List_<uo*>*, uo*>((coi), (new Array_<int64_t>(1, (0LL)))));
if(((((cok)->azn)->lw) == (256LL)) && (cmp_((((cok)->azn)->nf), (coh)) == 0)){
return as_<fw>(classTable_, ((cok)->azn), 8);
}
ayu<List_<uo*>*>((coi), (new Array_<int64_t>(1, (0LL))));
}
return nullptr;
}
// copyFile
static bool bhn(Array_<char16_t>* con /*dst*/, Array_<char16_t>* coo /*src*/){
return copyFile_(con->B, coo->B);
}
// makeWriter
static bhq* bhp(bhq* cop /*me2*/, Array_<char16_t>* coq /*path*/, bool cor /*append*/){
cop->cos = reinterpret_cast<int64_t>(new writer_());
std::u16string s_ = coq->B;
const std::string& t_ = utf16ToUtf8_(s_);
writer_* r_ = reinterpret_cast<writer_*>(cop->cos);
r_->F = new std::ofstream(t_.c_str(), std::ios::out | std::ios::binary | (cor ? std::ios::app : std::ios::trunc));
if(!*r_->F) return nullptr;
return cop;
}
// _dtor
static void cot(bhq* cou /*me*/){
}
// fin
static void bie(bhq* cov /*me*/){
writer_* r_ = reinterpret_cast<writer_*>(cov->cos);
r_->F->close();
}
// setPos
static void cow(bhq* cox /*me*/, int64_t coy /*origin*/, int64_t coz /*pos*/){
writer_* r_ = reinterpret_cast<writer_*>(cox->cos);
std::ios_base::seekdir o_ = std::ios_base::beg;
switch(coy){
case 0: o_ = std::ios_base::beg; break;
case 1: o_ = std::ios_base::cur; break;
case 2: o_ = std::ios_base::end; break;
}
r_->F->seekp(coz, o_);
}
// getPos
static int64_t cpa(bhq* cpb /*me*/){
writer_* r_ = reinterpret_cast<writer_*>(cpb->cos);
return static_cast<int64_t>(r_->F->tellp());
}
// write
static void cpc(bhq* cpd /*me*/, Array_<uint8_t>* cpe /*bin*/){
writer_* r_ = reinterpret_cast<writer_*>(cpd->cos);
r_->F->write(reinterpret_cast<char*>(cpe->B), cpe->L);
}
// writeInt
static void cpf(bhq* cpg /*me*/, int64_t cph /*n*/){
Array_<char16_t>* cpi = nullptr; // s
int64_t cpm = 0;
int64_t cpn = 0;
(cpi) = (v<int64_t>((cph), (new Array_<int64_t>(1, (0LL)))));
for(cpm = (0LL), cpn = (((cpi)->Len()) - (1LL)); cpm <= cpn; cpm += (1LL)){
(cpo)((cpg), ((cpi)->At(cpm)));
}
}
// writeFloat
static void cpp(bhq* cpq /*me*/, double cpr /*n*/){
Array_<char16_t>* cps = nullptr; // s
int64_t cpw = 0;
int64_t cpx = 0;
(cps) = (v<double>((cpr), (new Array_<int64_t>(1, (0LL)))));
for(cpw = (0LL), cpx = (((cps)->Len()) - (1LL)); cpw <= cpx; cpw += (1LL)){
(cpo)((cpq), ((cps)->At(cpw)));
}
}
// writeChar
static void cpo(bhq* cpy /*me*/, char16_t cpz /*n*/){
writer_* r_ = reinterpret_cast<writer_*>(cpy->cos);
writeUtf8_(r_->F, cpz);
}
// writeStr
static void bhr(bhq* cqa /*me*/, Array_<char16_t>* cqb /*n*/){
int64_t cqf = 0;
int64_t cqg = 0;
for(cqf = (0LL), cqg = (((cqb)->Len()) - (1LL)); cqf <= cqg; cqf += (1LL)){
(cpo)((cqa), ((cqb)->At(cqf)));
}
}
// _copy
static bhq* cqh(bhq* cqi){
bhq* cqj = nullptr;
(cqj) = (new bhq());
((cqj)->cos) = ((cqi)->cos);
return as_<bhq>(classTable_, (cqj), 40);
}
// _toBin
static Array_<uint8_t>* cqk(bhq* cql){
Array_<uint8_t>* cqm = nullptr;
(cqm) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(cqm) = ((cqm)->Cat(toBin_((cql)->cos)));
return cqm;
}
// _fromBin
static bhq* cqo(bhq* cqp, Array_<uint8_t>* cqq, int64_t* cqr){
bhq* cqs = nullptr;
(cqs) = (new bhq());
((cqs)->cos) = (fromBin_<int64_t>((cqq), (*cqr)));
return cqs;
}
// getInfo
static biz* biy(fx* cqt /*ast*/){
biz* cqw = nullptr; // info
if((eqAddr_(((cqt)->nk), (nullptr))) || ((((cqt)->nk)->lw) != (268435456LL))){
(cqw) = (new biz());
((cqw)->lw) = (268435456LL);
((cqw)->bjp) = ((cqx)());
if((((ayg<int64_t>(((cqt)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL)) && (!eqAddr_(((cqt)->nf), (nullptr)))) && (cmp_(((cqt)->nf), (new Array_<char16_t>(1, u'\u0024'))) != 0)){
((cqw)->cra) = ((cqx)());
}
else{
((cqw)->cra) = (nullptr);
}
((cqw)->bjb) = (false);
((cqt)->nk) = (cqw);
}
return as_<biz>(classTable_, ((cqt)->nk), 42);
}
// _dtor
static void crc(biz* crd){
((crd)->bjp) = (nullptr);
((crd)->cra) = (nullptr);
}
// _copy
static biz* cre(biz* crf){
biz* crg = nullptr;
(crg) = (new biz());
((crg)->bjp) = (copy_((crf)->bjp));
((crg)->cra) = (copy_((crf)->cra));
((crg)->bjb) = ((crf)->bjb);
((crg)->lw) = ((crf)->lw);
return as_<biz>(classTable_, (crg), 42);
}
// _toBin
static Array_<uint8_t>* crh(biz* cri){
Array_<uint8_t>* crj = nullptr;
(crj) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(crj) = ((crj)->Cat(toBin_((cri)->bjp)));
(crj) = ((crj)->Cat(toBin_((cri)->cra)));
(crj) = ((crj)->Cat(toBin_((cri)->bjb)));
(crj) = ((crj)->Cat(toBin_((cri)->lw)));
return crj;
}
// _fromBin
static biz* cro(biz* crp, Array_<uint8_t>* crq, int64_t* crr){
biz* crs = nullptr;
(crs) = (new biz());
((crs)->bjp) = (fromBin_<Array_<char16_t>*>((crq), (*crr)));
((crs)->cra) = (fromBin_<Array_<char16_t>*>((crq), (*crr)));
((crs)->bjb) = (fromBin_<bool>((crq), (*crr)));
((crs)->lw) = (fromBin_<int64_t>((crq), (*crr)));
return crs;
}
// write
static void bkg(List_<Array_<char16_t>*>* crt /*codes*/, Array_<char16_t>* cru /*attr*/, List_<gb*>* crv /*args*/, List_<uo*>* crw /*members*/){
Array_<char16_t>* cry = nullptr;
biz* csb = nullptr; // me_
biz* csc = nullptr; // meType
biz* csd = nullptr; // key
biz* cse = nullptr; // item
biz* csg = nullptr; // me_
biz* csh = nullptr; // item
biz* csj = nullptr; // me_
biz* csk = nullptr; // item
biz* csm = nullptr; // me_
biz* csn = nullptr; // item
biz* csp = nullptr; // me_
biz* csq = nullptr; // n
biz* cst = nullptr; // me_
biz* csv = nullptr; // me_
biz* csw = nullptr; // meType
biz* csx = nullptr; // value
biz* csz = nullptr; // me_
biz* cta = nullptr; // meType
biz* ctb = nullptr; // item
biz* ctc = nullptr; // start
biz* cte = nullptr; // me_
biz* ctf = nullptr; // meType
biz* ctg = nullptr; // item
biz* cti = nullptr; // me_
biz* ctj = nullptr; // meType
biz* ctk = nullptr; // callback
biz* ctl = nullptr; // data
biz* ctn = nullptr; // me_
biz* cto = nullptr; // meType
biz* ctp = nullptr; // key
biz* ctq = nullptr; // existed
biz* cts = nullptr; // me_
biz* ctu = nullptr; // me_
biz* ctw = nullptr; // me_
biz* cty = nullptr; // me_
biz* cua = nullptr; // me_
biz* cuc = nullptr; // me_
biz* cud = nullptr; // item
biz* cuf = nullptr; // me_
biz* cug = nullptr; // offset
biz* cui = nullptr; // me_
biz* cuk = nullptr; // me_
biz* cul = nullptr; // n
biz* cun = nullptr; // me_
biz* cup = nullptr; // me_
biz* cur = nullptr; // min
biz* cus = nullptr; // max
biz* cuu = nullptr; // min
biz* cuv = nullptr; // max
biz* cux = nullptr; // me_
biz* cuy = nullptr; // meType
biz* cuz = nullptr; // start
biz* cva = nullptr; // len
biz* cvd = nullptr; // me_
biz* cvf = nullptr; // me_
biz* cvh = nullptr; // me_
biz* cvi = nullptr; // success
biz* cvk = nullptr; // me_
biz* cvl = nullptr; // success
biz* cvn = nullptr; // me_
biz* cvo = nullptr; // success
biz* cvq = nullptr; // me_
biz* cvr = nullptr; // type
biz* cvt = nullptr; // str
biz* cvw = nullptr; // path
biz* cvy = nullptr; // path
biz* cvz = nullptr; // recursion
biz* cwa = nullptr; // callback
biz* cwb = nullptr; // data
biz* cwd = nullptr; // me_
biz* cwe = nullptr; // path
biz* cwf = nullptr; // handle
biz* cwi = nullptr; // me_
biz* cwj = nullptr; // path
biz* cwk = nullptr; // append
biz* cwl = nullptr; // handle
biz* cwn = nullptr; // me_
biz* cwo = nullptr; // handle
biz* cwq = nullptr; // me_
biz* cwr = nullptr; // handle
biz* cwt = nullptr; // me_
biz* cwu = nullptr; // handle
biz* cww = nullptr; // me_
biz* cwx = nullptr; // origin
biz* cwy = nullptr; // pos
biz* cwz = nullptr; // handle
biz* cxb = nullptr; // me_
biz* cxc = nullptr; // handle
biz* cxe = nullptr; // me_
biz* cxf = nullptr; // handle
biz* cxh = nullptr; // me_
biz* cxi = nullptr; // handle
biz* cxk = nullptr; // me_
biz* cxl = nullptr; // origin
biz* cxm = nullptr; // pos
biz* cxn = nullptr; // handle
biz* cxp = nullptr; // me_
biz* cxq = nullptr; // n
biz* cxr = nullptr; // handle
biz* cxt = nullptr; // me_
biz* cxu = nullptr; // n
biz* cxv = nullptr; // handle
biz* cxx = nullptr; // me_
biz* cxy = nullptr; // handle
biz* cya = nullptr; // me_
biz* cyb = nullptr; // parent
biz* cyc = nullptr; // x
biz* cyd = nullptr; // y
biz* cye = nullptr; // width
biz* cyf = nullptr; // height
biz* cyg = nullptr; // anchorX
biz* cyh = nullptr; // anchorY
biz* cyi = nullptr; // handle
cry = cru;
if(cmp_(cry, (new Array_<char16_t>(4, u'\u0061', u'\u0064', u'\u0064', u'\u0072'))) == 0){
}
else if(cmp_(cry, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csb) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csc) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csd) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cse) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((csc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csb)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csd)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cse)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csb)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csd)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cse)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cry, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csg) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csh) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(24, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006E', u'\u005F', u'\u003D', u'\u007B', u'\u0050', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u004E', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0049', u'\u003A'))->Cat(v<Array_<char16_t>*>(((csh)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u007D', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csg)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002E', u'\u0048', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u007B'))->Cat(v<Array_<char16_t>*>(((csg)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0048', u'\u003D', u'\u006E', u'\u005F', u'\u003B'))->Cat(v<Array_<char16_t>*>(((csg)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(16, u'\u002E', u'\u0054', u'\u003D', u'\u006E', u'\u005F', u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u006E', u'\u005F', u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((csg)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0054', u'\u003B'))->Cat(v<Array_<char16_t>*>(((csg)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u002E', u'\u0054', u'\u002E', u'\u004E', u'\u003D', u'\u006E', u'\u005F', u'\u003B'))->Cat(v<Array_<char16_t>*>(((csg)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0054', u'\u003D', u'\u006E', u'\u005F', u'\u007D', u'\u000A')))))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csg)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u004C', u'\u002B', u'\u002B', u'\u003B', u'\u000A'))));
}
else if(cmp_(cry, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csj) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csk) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csj)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csk)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csm) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csn) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csm)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csn)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csp) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csq) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((csp)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0026'))->Cat(v<Array_<char16_t>*>(((csq)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(7, u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065'))) == 0){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(37, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004F', u'\u005F', u'\u002E', u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(44, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u006C', u'\u006F', u'\u0063', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E', u'\u0073', u'\u0065', u'\u0061', u'\u0072', u'\u0063', u'\u0068', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0031', u'\u0029', u'\u002E', u'\u0073', u'\u0070', u'\u006C', u'\u0069', u'\u0074', u'\u0028', u'\u0022', u'\u0026', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(39, u'\u0069', u'\u0066', u'\u0028', u'\u0072', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003D', u'\u003D', u'\u003D', u'\u0031', u'\u0026', u'\u0026', u'\u0072', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0022', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u005B', u'\u005D', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(32, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003C', u'\u0072', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(19, u'\u0072', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u003D', u'\u007B', u'\u0053', u'\u003A', u'\u0072', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u007D', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(3, u'\u0064', u'\u0065', u'\u006C'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cst) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cst)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0050', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((cst)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(26, u'\u002E', u'\u0048', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((cst)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(26, u'\u002E', u'\u0054', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u002E', u'\u0050', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cst)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0050', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cst)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u004C', u'\u002D', u'\u002D', u'\u003B', u'\u000A'))));
}
else if(cmp_(cry, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006C', u'\u006C'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csv) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csw) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csx) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csw)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((csw)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u002E', u'\u0053', u'\u003D', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csx)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u0029', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003B', u'\u000A'))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0066', u'\u0069', u'\u006C', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csx)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(csz) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cta) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(ctb) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(ctc) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cta)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cta)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((csz)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(31, u'\u002E', u'\u0053', u'\u002E', u'\u0069', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctb)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002C'))->Cat(v<Array_<char16_t>*>(((ctc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F', u'\u0030', u'\u003A'))->Cat(v<Array_<char16_t>*>(((ctc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((csz)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0069', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctb)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((ctc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F', u'\u0030', u'\u003A'))->Cat(v<Array_<char16_t>*>(((ctc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
}
else if(cmp_(cry, (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0042', u'\u0069', u'\u006E'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cte) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(ctf) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(ctg) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u005F', u'\u003D', u'\u0030', u'\u002C', u'\u0062', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cte)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u002C', u'\u0063', u'\u005F', u'\u002C', u'\u006D', u'\u005F', u'\u002C', u'\u0066', u'\u005F', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(41, u'\u0066', u'\u005F', u'\u003D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0061', u'\u002C', u'\u0062', u'\u0029', u'\u007B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u003E', u'\u0062', u'\u003F', u'\u0031', u'\u003A', u'\u0061', u'\u003C', u'\u0062', u'\u003F', u'\u002D', u'\u0031', u'\u003A', u'\u0030', u'\u007D', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(49, u'\u0066', u'\u005F', u'\u003D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0061', u'\u002C', u'\u0062', u'\u0029', u'\u007B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u002E', u'\u0053', u'\u003E', u'\u0062', u'\u002E', u'\u0053', u'\u003F', u'\u0031', u'\u003A', u'\u0061', u'\u002E', u'\u0053', u'\u003C', u'\u0062', u'\u002E', u'\u0053', u'\u003F', u'\u002D', u'\u0031', u'\u003A', u'\u0030', u'\u007D', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0028', u'\u0061', u'\u005F', u'\u003C', u'\u003D', u'\u0062', u'\u005F', u'\u0029', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(18, u'\u0063', u'\u005F', u'\u003D', u'\u007E', u'\u007E', u'\u0028', u'\u0028', u'\u0061', u'\u005F', u'\u002B', u'\u0062', u'\u005F', u'\u0029', u'\u002F', u'\u0032', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u006D', u'\u005F', u'\u003D', u'\u0066', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctg)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cte)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u005B', u'\u0063', u'\u005F', u'\u005D', u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(17, u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u003C', u'\u0030', u'\u0029', u'\u0062', u'\u005F', u'\u003D', u'\u0063', u'\u005F', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(22, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u003E', u'\u0030', u'\u0029', u'\u0061', u'\u005F', u'\u003D', u'\u0063', u'\u005F', u'\u002B', u'\u0031', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(7, u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cti) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(ctj) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(ctk) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(ctl) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0044', u'\u005F', u'\u003D', u'\u007B', u'\u0046', u'\u003A'))->Cat(v<Array_<char16_t>*>(((ctk)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002C', u'\u0044', u'\u003A'))->Cat(v<Array_<char16_t>*>(((ctl)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002C', u'\u0043', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u007D', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctj)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((ctj)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cti)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(73, u'\u002E', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068', u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0056', u'\u005F', u'\u002C', u'\u004B', u'\u005F', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u0029', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u003D', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0046', u'\u0028', u'\u007B', u'\u0053', u'\u003A', u'\u004B', u'\u005F', u'\u007D', u'\u002C', u'\u0056', u'\u005F', u'\u002C', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0044', u'\u0029', u'\u007D', u'\u002C', u'\u0044', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cti)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(69, u'\u002E', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068', u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0056', u'\u005F', u'\u002C', u'\u004B', u'\u005F', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u0029', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u003D', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0046', u'\u0028', u'\u004B', u'\u005F', u'\u002C', u'\u0056', u'\u005F', u'\u002C', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0044', u'\u0029', u'\u007D', u'\u002C', u'\u0044', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0044', u'\u005F', u'\u002E', u'\u0043', u'\u003B', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(ctn) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cto) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(ctp) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(ctq) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cto)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cto)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0072', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctn)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0067', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctp)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0072', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctn)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0067', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctp)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctq)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(21, u'\u002E', u'\u0024', u'\u003D', u'\u0072', u'\u005F', u'\u0021', u'\u003D', u'\u003D', u'\u0075', u'\u006E', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0065', u'\u0064', u'\u0029', u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cto)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((3LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cts) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cts)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(cry, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(ctu) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ctu)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002E', u'\u0073', u'\u0068', u'\u0069', u'\u0066', u'\u0074', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cry, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(ctw) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ctw)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u002E', u'\u0070', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cry, (new Array_<char16_t>(4, u'\u0068', u'\u0065', u'\u0061', u'\u0064'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cty) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cty)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cty)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0048', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(3, u'\u0069', u'\u0064', u'\u0078'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cua) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cua)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0048', u'\u002C', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cua)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(21, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(18, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u0021', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cua)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0050', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0070', u'\u005F', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0073'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cuc) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cud) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cuc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0050', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006E', u'\u005F', u'\u003D', u'\u007B', u'\u0050', u'\u003A', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u002C', u'\u004E', u'\u003A', u'\u0070', u'\u005F', u'\u002C', u'\u0049', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cud)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u007D', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((cuc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u002E', u'\u0048', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(10, u'\u002E', u'\u0054', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((cuc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0054', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cuc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u004C', u'\u002B', u'\u002B', u'\u003B', u'\u000A'))));
}
else if(cmp_(cry, (new Array_<char16_t>(10, u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cuf) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cug) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cug)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u003E', u'\u003D', u'\u0030', u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((cug)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u003B', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cuf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cuf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cug)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u003B', u'\u0069', u'\u005F', u'\u002D', u'\u002D', u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cuf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cuf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u0050', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0078', u'\u0074'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cui) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cui)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cui)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(2, u'\u006F', u'\u0072'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cuk) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cul) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cuk)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u007C'))->Cat(v<Array_<char16_t>*>(((cul)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cun) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cun)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u005B', u'\u0030', u'\u005D', u'\u003B', u'\u000A'))));
}
else if(cmp_(cry, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cup) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cup)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u005B'))->Cat(v<Array_<char16_t>*>(((cup)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u005D', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(3, u'\u0072', u'\u006E', u'\u0064'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cur) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cus) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u007E', u'\u007E', u'\u0028', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0072', u'\u0061', u'\u006E', u'\u0064', u'\u006F', u'\u006D', u'\u0028', u'\u0029', u'\u002A', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cus)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002D'))->Cat(v<Array_<char16_t>*>(((cur)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002B', u'\u0031', u'\u0029', u'\u0029', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cur)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(cry, (new Array_<char16_t>(8, u'\u0072', u'\u006E', u'\u0064', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cuu) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cuv) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0072', u'\u0061', u'\u006E', u'\u0064', u'\u006F', u'\u006D', u'\u0028', u'\u0029', u'\u002A', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002D'))->Cat(v<Array_<char16_t>*>(((cuu)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cuu)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(cry, (new Array_<char16_t>(3, u'\u0073', u'\u0075', u'\u0062'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cux) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cuy) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cuz) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cva) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuy)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cuy)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u007B', u'\u0053', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cva)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F'))->Cat(v<Array_<char16_t>*>(((cux)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuz)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cux)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuz)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cuz)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002B'))->Cat(v<Array_<char16_t>*>(((cva)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0029', u'\u007D', u'\u003B', u'\u000A'))))))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cva)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F'))->Cat(v<Array_<char16_t>*>(((cux)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuz)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cux)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuz)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cuz)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002B'))->Cat(v<Array_<char16_t>*>(((cva)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))))))));
}
else if(cmp_(cry, (new Array_<char16_t>(7, u'\u0073', u'\u0079', u'\u0073', u'\u0054', u'\u0069', u'\u006D', u'\u0065'))) == 0){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(29, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0044', u'\u0061', u'\u0074', u'\u0065', u'\u0028', u'\u0029', u'\u002E', u'\u0067', u'\u0065', u'\u0074', u'\u0054', u'\u0069', u'\u006D', u'\u0065', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u0069', u'\u006C'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvd) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvd)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvd)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0054', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(4, u'\u0074', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvf) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A'))));
}
else if(cmp_(cry, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u0074', u'\u0036', u'\u0034'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvh) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvi) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvh)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0032', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cvh)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u002E', u'\u0053', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0030', u'\u0022', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cvh)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0078', u'\u0022', u'\u0029', u'\u007B', u'\u000A'))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvh)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(22, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0032', u'\u0029', u'\u002C', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvh)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvi)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(24, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028', u'\u0073', u'\u005F', u'\u002C', u'\u0031', u'\u0036', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvh)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvi)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvh)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u002E', u'\u0053', u'\u002C', u'\u0031', u'\u0030', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvk) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvl) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvk)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvl)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0049', u'\u006E', u'\u0074'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvn) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvo) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvn)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0032', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cvn)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u002E', u'\u0053', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0030', u'\u0022', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cvn)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0078', u'\u0022', u'\u0029', u'\u007B', u'\u000A'))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvn)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(22, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0032', u'\u0029', u'\u002C', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvn)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvo)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(24, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028', u'\u0073', u'\u005F', u'\u002C', u'\u0031', u'\u0036', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvn)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvo)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvn)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u002E', u'\u0053', u'\u002C', u'\u0031', u'\u0030', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvq) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvr) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvr)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u007B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cvq)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0030', u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(29, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvq)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((3LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cvq)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u003F', u'\u0022', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u0022', u'\u003A', u'\u0022', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u0022', u'\u007D', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0022', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cvq)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(41, u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0032', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0022', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cvq)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(41, u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0034', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(26, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0022', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cvq)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(41, u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0038', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(34, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0022', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cvq)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(42, u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0031', u'\u0036', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvr)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvq)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(9, u'\u0063', u'\u0075', u'\u0069', u'\u005F', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvt) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(26, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074', u'\u0029', u'\u007B', u'\u004F', u'\u005F', u'\u002E', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u007D', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u006F', u'\u006C', u'\u0065', u'\u002E', u'\u006C', u'\u006F', u'\u0067', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cry, (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u0046', u'\u0069', u'\u006C', u'\u0065'))) == 0){
}
else if(cmp_(cry, (new Array_<char16_t>(10, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvw) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(12, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvy) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cvz) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cwa) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cwb) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(cry, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cwd) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cwe) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cwf) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0066', u'\u005F', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwe)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(39, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0029', u'\u0066', u'\u005F', u'\u003D', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0034', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0072', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0065', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0073', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0033', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0066', u'\u005F', u'\u003D', u'\u0046', u'\u005F', u'\u0028', u'\u0070', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(26, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwd)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u003D', u'\u007B', u'\u0046', u'\u003A', u'\u0066', u'\u005F', u'\u002C', u'\u0049', u'\u003A', u'\u0030', u'\u007D', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cwd)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(cry, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cwi) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cwj) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cwk) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cwl) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwi)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwl)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u003D', u'\u007B', u'\u0046', u'\u003A', u'\u0022', u'\u0022', u'\u002C', u'\u0049', u'\u003A', u'\u0030', u'\u002C', u'\u0050', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cwj)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u007D', u'\u003B', u'\u000A'))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cwi)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(cry, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cwn) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cwo) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwn)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwo)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0046', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cwq) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cwr) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cwq)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwr)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0049', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(21, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u004C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cwt) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cwu) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cwt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwu)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002E', u'\u0046', u'\u002E', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0041', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwu)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0049', u'\u002B', u'\u002B', u'\u0029', u'\u003B', u'\u000A')))))));
}
else if(cmp_(cry, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cww) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cwx) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cwy) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cwz) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cww)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwz)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0049', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwy)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(cry, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0054', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cxb) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cxc) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxb)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u002E', u'\u0049', u'\u003E', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxb)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxc)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002E', u'\u0046', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u000A')))))));
}
else if(cmp_(cry, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cxe) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cxf) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0076', u'\u0061', u'\u0072', u'\u0020', u'\u0064', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxe)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u0046', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u006C', u'\u0061', u'\u0063', u'\u0065', u'\u0028', u'\u0022', u'\u005C', u'\u006E', u'\u0022', u'\u002C', u'\u0020', u'\u0022', u'\u005C', u'\u0075', u'\u0030', u'\u0030', u'\u0030', u'\u0044', u'\u005C', u'\u006E', u'\u0022', u'\u0029', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(34, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0029', u'\u007B', u'\u004F', u'\u005F', u'\u002E', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxe)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002E', u'\u0050', u'\u002C', u'\u0064', u'\u005F', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u007D', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(43, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0062', u'\u005F', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0042', u'\u006C', u'\u006F', u'\u0062', u'\u0028', u'\u005B', u'\u0064', u'\u005F', u'\u005D', u'\u002C', u'\u007B', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u003A', u'\u0022', u'\u0074', u'\u0065', u'\u0078', u'\u0074', u'\u002F', u'\u0070', u'\u006C', u'\u0061', u'\u0069', u'\u006E', u'\u0022', u'\u007D', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(36, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006C', u'\u005F', u'\u003D', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u0045', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0028', u'\u0022', u'\u0061', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u006C', u'\u005F', u'\u002E', u'\u0064', u'\u006F', u'\u0077', u'\u006E', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxe)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0050', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(46, u'\u006C', u'\u005F', u'\u002E', u'\u0068', u'\u0072', u'\u0065', u'\u0066', u'\u003D', u'\u0028', u'\u0055', u'\u0052', u'\u004C', u'\u007C', u'\u007C', u'\u0077', u'\u0065', u'\u0062', u'\u006B', u'\u0069', u'\u0074', u'\u0055', u'\u0052', u'\u004C', u'\u0029', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u004F', u'\u0062', u'\u006A', u'\u0065', u'\u0063', u'\u0074', u'\u0055', u'\u0052', u'\u004C', u'\u0028', u'\u0062', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(41, u'\u006C', u'\u005F', u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0041', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0028', u'\u0022', u'\u0073', u'\u0074', u'\u0079', u'\u006C', u'\u0065', u'\u0022', u'\u002C', u'\u0022', u'\u0064', u'\u0069', u'\u0073', u'\u0070', u'\u006C', u'\u0061', u'\u0079', u'\u003A', u'\u006E', u'\u006F', u'\u006E', u'\u0065', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u002E', u'\u0061', u'\u0070', u'\u0070', u'\u0065', u'\u006E', u'\u0064', u'\u0043', u'\u0068', u'\u0069', u'\u006C', u'\u0064', u'\u0028', u'\u006C', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(12, u'\u006C', u'\u005F', u'\u002E', u'\u0063', u'\u006C', u'\u0069', u'\u0063', u'\u006B', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u002E', u'\u0072', u'\u0065', u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u0043', u'\u0068', u'\u0069', u'\u006C', u'\u0064', u'\u0028', u'\u006C', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxe)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0046', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cxh) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cxi) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxh)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxi)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0049', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cxk) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cxl) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cxm) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cxn) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxk)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxn)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0049', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxm)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(cry, (new Array_<char16_t>(16, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cxp) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cxq) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cxr) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
}
else if(cmp_(cry, (new Array_<char16_t>(20, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0043', u'\u0068', u'\u0061', u'\u0072'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cxt) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cxu) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cxv) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0049', u'\u003C'))->Cat(v<Array_<char16_t>*>(((cxt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002E', u'\u0046', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u000A')))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0046', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002E', u'\u0046', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0030', u'\u002C'))->Cat(v<Array_<char16_t>*>(((cxt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(24, u'\u002E', u'\u0049', u'\u0029', u'\u002B', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxu)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cxt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0046', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0049', u'\u002B', u'\u0031', u'\u0029', u'\u003B', u'\u000A'))))))))))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(24, u'\u002E', u'\u0046', u'\u002B', u'\u003D', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxu)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxt)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0049', u'\u002B', u'\u002B', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(19, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u0065', u'\u0064', u'\u0069', u'\u0074', u'\u0042', u'\u0061', u'\u0073', u'\u0065', u'\u0047', u'\u0065', u'\u0074', u'\u0054', u'\u0065', u'\u0078', u'\u0074'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cxx) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cxy) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxx)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxy)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002E', u'\u0048', u'\u002E', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u003B', u'\u000A')))));
}
else if(cmp_(cry, (new Array_<char16_t>(17, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0045', u'\u0064', u'\u0069', u'\u0074', u'\u004D', u'\u0075', u'\u006C', u'\u0074', u'\u0069'))) == 0){
awg<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cya) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cyb) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cyc) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cyd) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cye) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cyf) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cyg) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
ayu<List_<gb*>*>((crv), (new Array_<int64_t>(1, (0LL))));
(cyh) = ((biy)((awk<List_<gb*>*, gb*>((crv), (new Array_<int64_t>(1, (0LL)))))));
(cyi) = ((cwg)((crw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(43, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0068', u'\u005F', u'\u003D', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u0045', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0028', u'\u0022', u'\u0074', u'\u0065', u'\u0078', u'\u0074', u'\u0061', u'\u0072', u'\u0065', u'\u0061', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(24, u'\u0068', u'\u005F', u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0041', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0028', u'\u0022', u'\u0063', u'\u006F', u'\u006C', u'\u0073', u'\u0022', u'\u002C', u'\u0022'))->Cat(v<Array_<char16_t>*>(((cye)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0022', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(24, u'\u0068', u'\u005F', u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0041', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0028', u'\u0022', u'\u0072', u'\u006F', u'\u0077', u'\u0073', u'\u0022', u'\u002C', u'\u0022'))->Cat(v<Array_<char16_t>*>(((cyf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0022', u'\u0029', u'\u003B', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u002E', u'\u0061', u'\u0070', u'\u0070', u'\u0065', u'\u006E', u'\u0064', u'\u0043', u'\u0068', u'\u0069', u'\u006C', u'\u0064', u'\u0028', u'\u0063', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cya)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cyi)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003D', u'\u007B', u'\u0043', u'\u003A', u'\u0063', u'\u005F', u'\u007D', u'\u003B', u'\u000A')))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((crt), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cya)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
}
// buildStats
static void bkl(List_<ge*>* cyk /*stats*/){
ge* cym = nullptr; // stat
int64_t cyo = 0;
awg<List_<ge*>*>((cyk), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ge*>*>((cyk), (new Array_<int64_t>(1, (0LL)))))){
(cym) = (awk<List_<ge*>*, ge*>((cyk), (new Array_<int64_t>(1, (0LL)))));
switch((cym)->lw){
case 66049LL:
(cyq)((as_<ckg>(classTable_, (cym), 88)));
break;
case 66050LL:
(cys)((as_<ckk>(classTable_, (cym), 92)));
break;
case 16843265LL:
(cyu)((as_<cko>(classTable_, (cym), 98)));
break;
case 16843266LL:
(cyw)((as_<cks>(classTable_, (cym), 100)));
break;
case 66051LL:
(cyy)((as_<but>(classTable_, (cym), 52)));
break;
case 526LL:
(cza)((as_<ckx>(classTable_, (cym), 102)));
break;
case 66052LL:
(czc)((as_<buv>(classTable_, (cym), 54)));
break;
case 527LL:
(cze)((as_<clc>(classTable_, (cym), 104)));
break;
case 528LL:
(czg)((as_<bvt>(classTable_, (cym), 62)));
break;
case 529LL:
(czi)((as_<ge>(classTable_, (cym), 16)));
break;
case 530LL:
(czk)((as_<ge>(classTable_, (cym), 16)));
break;
case 531LL:
(czm)((as_<cll>(classTable_, (cym), 106)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
ayu<List_<ge*>*>((cyk), (new Array_<int64_t>(1, (0LL))));
}
}
// getDefaultValue
static Array_<char16_t>* bkr(gc* czo /*type*/){
int64_t czs = 0;
int64_t czx = 0;
if((clv)((czo))){
return new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C');
}
switch((czo)->lw){
case 66565LL:
if(!((cma)((czo)))){
throw 0xE9170000U;
}
return new Array_<char16_t>(1, u'\u0030');
break;
case 1025LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1026LL:
switch((as_<bvc>(classTable_, (czo), 60))->bvd){
case 0LL:
case 2LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 3LL:
return new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// refClass
static Array_<char16_t>* bkz(un* dad /*ast*/){
biz* dae = nullptr; // info
(dae) = ((biy)((dad)));
if((dae)->bjb){
return (dae)->bjp;
}
((dae)->bjb) = (true);
if(!eqAddr_(((dad)->nj), (nullptr))){
(bkz)((as_<un>(classTable_, ((dad)->nj), 22)));
}
um<Queue_<un*>*, un*>((bj), (new Array_<int64_t>(1, (0LL))), (dad));
return (dae)->bjp;
}
// findFunc
static fw* blh(un* daj /*ast*/, Array_<char16_t>* dak /*name*/){
List_<uo*>* dal = nullptr; // items
uo* dan = nullptr; // item
(dal) = ((daj)->bai);
awg<List_<uo*>*>((dal), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((dal), (new Array_<int64_t>(1, (0LL)))))){
(dan) = (awk<List_<uo*>*, uo*>((dal), (new Array_<int64_t>(1, (0LL)))));
if(((((dan)->azn)->lw) == (256LL)) && (cmp_((((dan)->azn)->nf), (dak)) == 0)){
return as_<fw>(classTable_, ((dan)->azn), 8);
}
ayu<List_<uo*>*>((dal), (new Array_<int64_t>(1, (0LL))));
}
return nullptr;
}
// escapeChar
static Array_<char16_t>* bmp(char16_t daq /*c*/){
char16_t das = 0;
das = daq;
if(das == (u'\u0022')){
return new Array_<char16_t>(2, u'\u005C', u'\u0022');
}
else if(das == (u'\u0027')){
return new Array_<char16_t>(2, u'\u005C', u'\u0027');
}
else if(das == (u'\u005C')){
return new Array_<char16_t>(2, u'\u005C', u'\u005C');
}
else if((u'\u0020') <= das && das <= (u'\u007E')){
return v<char16_t>((daq), (new Array_<int64_t>(1, (0LL))));
}
else{return ((new Array_<char16_t>(2, u'\u005C', u'\u0075'))->Cat(v<Array_<char16_t>*>((auy<Array_<char16_t>*>((v<uint16_t>((static_cast<uint16_t>(daq)), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))), (2LL), (-1LL))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0));
}
}
// initAst
static void bqk(fx* day /*ast*/, int64_t daz /*typeId*/, ga* dba /*pos*/, Array_<char16_t>* dbb /*name*/, bool dbc /*setParent*/){
if(!(!is_(classTable_, (day), 14))){
throw 0xE9170000U;
}
(dbd)((day), (daz), (dba), (dbb), (dbc));
}
// make
static ga* bql(Array_<char16_t>* dbe /*srcName*/, int64_t dbf /*row*/, int64_t dbg /*col*/){
ga* dbh = nullptr; // pos
(dbh) = (new ga());
((dbh)->hk) = (dbe);
((dbh)->hl) = (dbf);
((dbh)->hm) = (dbg);
return dbh;
}
// _addStack
template<typename T_, typename C_> static void bqm(T_ dbi /*me_*/, Array_<int64_t>* dbj /*type*/, C_ dbk /*item*/){
dbi->B.push(dbk);
}
// readChar
static char16_t bqn(){
char16_t dbo = 0; // c
char16_t dbs = 0;
while(true){
(dbo) = ((bsa)());
if((dbo) == (u'\u000A')){
(dbo) = ((bqn)());
switch(dbo){
case u'\u000A':
return u'\u000A';
break;
case u'\u003B':
do{
(dbo) = ((dbw)());
if((dbo) == (u'\u0000')){
return u'\u0000';
}
}while((dbo) != (u'\u000A'));
(avg) = (dbo);
continue;
break;
case u'\u007C':
return (bqn)();
break;
}
(avh) = (dbo);
return u'\u000A';
}
if((dbo) != (u'\u0020')){
return dbo;
}
}
}
// readIdentifier
static Array_<char16_t>* bre(bool dcc /*skipSpaces*/, bool dcd /*refName*/){
char16_t dce = 0; // c
Array_<char16_t>* dcj = nullptr; // buf
int64_t dck = 0; // pos
bool dcl = false; // at
char16_t dco = 0;
Array_<char16_t>* dcu = nullptr; // srcName
int64_t dcy = 0;
char16_t dda = 0; // c2
int64_t dcz = 0;
(dce) = ((dcc) ? ((bqn)()) : ((bsa)()));
if(!((((((u'\u0061') <= (dce)) && ((dce) <= (u'\u007A'))) || (((u'\u0041') <= (dce)) && ((dce) <= (u'\u005A')))) || ((dce) == (u'\u005F'))) || ((dcd) && (((dce) == (u'\u0040')) || ((dce) == (u'\u005C')))))){
(avg) = (dce);
(ad)((65542LL), ((dch)()), (new Array_<Array_<char16_t>*>(1, ((dci)((dce))))));
return new Array_<char16_t>(0);
}
(dcj) = (newArray_<char16_t, Array_<char16_t>*>(1, (128LL)));
(dck) = (0LL);
(dcl) = (false);
do{
switch(dce){
case u'\u0040':
if(dcl){
(avg) = (dce);
(ad)((65543LL), ((dch)()), (nullptr));
return new Array_<char16_t>(0);
}
if((dck) != (0LL)){
(dcu) = (auy<Array_<char16_t>*>((dcj), (new Array_<int64_t>(1, (0LL))), (0LL), (dck)));
for(dcy = (0LL), dcz = (((dcu)->Len()) - (1LL)); dcy <= dcz; dcy += (1LL)){
(dda) = ((dcu)->At(dcy));
if(((u'\u0041') <= (dda)) && ((dda) <= (u'\u005A'))){
(avg) = (dce);
(ad)((65544LL), ((dch)()), (new Array_<Array_<char16_t>*>(1, (dcu))));
return new Array_<char16_t>(0);
}
}
(ddd)((dcu));
}
(dcl) = (true);
break;
case u'\u005C':
if(dcl){
(avg) = (dce);
(ad)((65545LL), ((dch)()), (nullptr));
return new Array_<char16_t>(0);
}
break;
}
if((dck) == (128LL)){
(avg) = (dce);
(ad)((65546LL), ((dch)()), (new Array_<Array_<char16_t>*>(1, (dcj))));
return new Array_<char16_t>(0);
}
((dcj)->At(dck)) = (dce);
(dck) = ((dck) + (1LL));
(dce) = ((bsa)());
}while(((((((u'\u0061') <= (dce)) && ((dce) <= (u'\u007A'))) || (((u'\u0041') <= (dce)) && ((dce) <= (u'\u005A')))) || ((dce) == (u'\u005F'))) || (((u'\u0030') <= (dce)) && ((dce) <= (u'\u0039')))) || ((dcd) && (((dce) == (u'\u0040')) || ((dce) == (u'\u005C')))));
(avg) = (dce);
return auy<Array_<char16_t>*>((dcj), (new Array_<int64_t>(1, (0LL))), (0LL), (dck));
}
// parseFunc
static fw* brj(Array_<char16_t>* ddk /*parentClass*/, bool ddl /*overritten*/){
fw* ddm = nullptr; // ast
char16_t ddo = 0; // c
int64_t ddu = 0; // row
int64_t ddv = 0; // col
Array_<char16_t>* ddw = nullptr; // s
char16_t deb = 0;
gb* dft = nullptr; // arg
dfx* dfw = nullptr; // type
char16_t dfz = 0; // c
char16_t dgn = 0; // c
ge* dgw = nullptr; // stat
(ddm) = (new fw());
((ddm)->sm) = (0LL);
((ddm)->sf) = (new List_<Array_<char16_t>*>());
(ddo) = ((bqn)());
if((ddo) == (u'\u005B')){
while(true){
(ddu) = (ave);
(ddv) = (avf);
(ddw) = ((ddx)());
if(((((ddw)->Len()) == (5LL)) && (((ddw)->At(0LL)) == (u'\u005F'))) && (((ddw)->At(1LL)) == (u'\u005F'))){
switch((ddw)->At(2LL)){
case u'\u0061':
if((((ddw)->At(3LL)) == (u'\u006E')) && (((ddw)->At(4LL)) == (u'\u0079'))){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (1LL)));
}
break;
case u'\u0066':
if((((ddw)->At(3LL)) == (u'\u0072')) && (((ddw)->At(4LL)) == (u'\u0063'))){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (128LL)));
}
break;
case u'\u006B':
if((((ddw)->At(3LL)) == (u'\u0076')) && (((ddw)->At(4LL)) == (u'\u0066'))){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (256LL)));
}
break;
case u'\u006D':
if((((ddw)->At(3LL)) == (u'\u006B')) && (((ddw)->At(4LL)) == (u'\u0069'))){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (2048LL)));
}
break;
case u'\u0072':
if((((ddw)->At(3LL)) == (u'\u0061')) && (((ddw)->At(4LL)) == (u'\u0077'))){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (4096LL)));
}
else if((((ddw)->At(3LL)) == (u'\u006D')) && (((ddw)->At(4LL)) == (u'\u0065'))){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (4LL)));
}
else if((((ddw)->At(3LL)) == (u'\u0063')) && (((ddw)->At(4LL)) == (u'\u0068'))){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (16LL)));
}
else if(((ddw)->At(3LL)) == (u'\u0061')){
if(((ddw)->At(4LL)) == (u'\u0063')){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (64LL)));
}
else if(((ddw)->At(4LL)) == (u'\u006B')){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (512LL)));
}
else if(((ddw)->At(4LL)) == (u'\u0076')){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (1024LL)));
}
}
break;
case u'\u0074':
if((((ddw)->At(3LL)) == (u'\u006D')) && (((ddw)->At(4LL)) == (u'\u0065'))){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (2LL)));
}
else if((((ddw)->At(3LL)) == (u'\u0063')) && (((ddw)->At(4LL)) == (u'\u0068'))){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (8LL)));
}
else if((((ddw)->At(3LL)) == (u'\u006B')) && (((ddw)->At(4LL)) == (u'\u0076'))){
((ddm)->sm) = (def<int64_t>(((ddm)->sm), (new Array_<int64_t>(1, (0LL))), (32LL)));
}
break;
}
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((ddm)->sf), (new Array_<int64_t>(1, (0LL))), (ddw));
}
(ddo) = ((bqn)());
if((ddo) == (u'\u0000')){
break;
}
if((ddo) == (u'\u005D')){
break;
}
if((ddo) != (u'\u002C')){
(dfl)((u'\u002C'), (ddo));
break;
}
}
}
else{
(avg) = (ddo);
}
(bqk)((ddm), (256LL), ((dch)()), ((bre)((true), (false))), (true));
((ddm)->sg) = (new List_<gb*>());
((ddm)->sh) = (nullptr);
((ddm)->si) = (new List_<ge*>());
((ddm)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bqm<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (ddm));
if(!eqAddr_((ddk), (nullptr))){
(dfp)((ddm), (ddk));
}
(dfq)((u'\u0028'), (true));
if(!eqAddr_((ddk), (nullptr))){
(dft) = (new gb());
(bqk)((dft), (7LL), ((ddm)->ne), (nullptr), (false));
((dft)->nf) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
((dft)->qk) = (2LL);
((dft)->ql) = (false);
((dft)->qg) = (nullptr);
(dfu)((dft), (false));
(dfw) = (new dfx());
(bqk)((dfw), (66565LL), ((ddm)->ne), (nullptr), (false));
(dfp)((dfw), (ddk));
((dft)->qf) = (dfw);
uj<List_<gb*>*, gb*>(((ddm)->sg), (new Array_<int64_t>(1, (0LL))), (dft));
}
(dfz) = ((bqn)());
if((dfz) != (u'\u0029')){
(avg) = (dfz);
while(true){
uj<List_<gb*>*, gb*>(((ddm)->sg), (new Array_<int64_t>(1, (0LL))), ((dgf)((2LL), (nullptr))));
(dfz) = ((bqn)());
if((dfz) == (u'\u0000')){
break;
}
if((dfz) == (u'\u0029')){
break;
}
if((dfz) != (u'\u002C')){
(dfl)((u'\u002C'), (dfz));
break;
}
}
}
(dgn) = ((bqn)());
if((dgn) == (u'\u003A')){
((ddm)->sh) = ((dgq)());
(dgn) = ((bqn)());
}
if((dgn) != (u'\u000A')){
(dfl)((u'\u000A'), (dgn));
}
while(true){
(dgw) = ((dgx)((ddm)));
if(eqAddr_((dgw), (nullptr))){
if(avi){
break;
}
else{
continue;
}
}
if(((dgw)->lw) == (513LL)){
break;
}
uj<List_<ge*>*, ge*>(((ddm)->si), (new Array_<int64_t>(1, (0LL))), (dgw));
}
bsg<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ddm;
}
// parseVar
static bgk* brl(int64_t dhf /*kind*/, Array_<char16_t>* dhg /*parentClass*/){
bgk* dhh = nullptr; // ast
(dhh) = (new bgk());
(bqk)((dhh), (2LL), ((dch)()), (nullptr), (false));
((dhh)->bgm) = ((dgf)((dhf), (dhg)));
(dfq)((u'\u000A'), (true));
return dhh;
}
// parseConst
static bro* brn(){
bro* dhi = nullptr; // ast
(dhi) = (new bro());
(bqk)((dhi), (3LL), ((dch)()), (nullptr), (false));
((dhi)->bse) = ((dgf)((4LL), (nullptr)));
(dfq)((u'\u000A'), (true));
return dhi;
}
// _dtor
static void dhj(bro* dhk){
((dhk)->bse) = (nullptr);
((dhk)->ne) = (nullptr);
((dhk)->nf) = (nullptr);
((dhk)->ng) = (nullptr);
((dhk)->nh) = (nullptr);
((dhk)->ni) = (nullptr);
((dhk)->nj) = (nullptr);
((dhk)->nk) = (nullptr);
}
// _copy
static bro* dhl(bro* dhm){
bro* dhn = nullptr;
(dhn) = (new bro());
((dhn)->bse) = (copy_((dhm)->bse));
((dhn)->ne) = (copy_((dhm)->ne));
((dhn)->nf) = (copy_((dhm)->nf));
((dhn)->ng) = (copy_((dhm)->ng));
((dhn)->nh) = (copy_((dhm)->nh));
((dhn)->ni) = (copy_((dhm)->ni));
((dhn)->nj) = (copy_((dhm)->nj));
((dhn)->nk) = (copy_((dhm)->nk));
((dhn)->no) = ((dhm)->no);
((dhn)->lw) = ((dhm)->lw);
return as_<bro>(classTable_, (dhn), 44);
}
// _toBin
static Array_<uint8_t>* dho(bro* dhp){
Array_<uint8_t>* dhq = nullptr;
(dhq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dhq) = ((dhq)->Cat(toBin_((dhp)->bse)));
(dhq) = ((dhq)->Cat(toBin_((dhp)->ne)));
(dhq) = ((dhq)->Cat(toBin_((dhp)->nf)));
(dhq) = ((dhq)->Cat(toBin_((dhp)->ng)));
(dhq) = ((dhq)->Cat(toBin_((dhp)->nh)));
(dhq) = ((dhq)->Cat(toBin_((dhp)->ni)));
(dhq) = ((dhq)->Cat(toBin_((dhp)->nj)));
(dhq) = ((dhq)->Cat(toBin_((dhp)->nk)));
(dhq) = ((dhq)->Cat(toBin_((dhp)->no)));
(dhq) = ((dhq)->Cat(toBin_((dhp)->lw)));
return dhq;
}
// _fromBin
static bro* dib(bro* dic, Array_<uint8_t>* did, int64_t* die){
bro* dif = nullptr;
(dif) = (new bro());
((dif)->bse) = (fromBin_<gb*>((did), (*die)));
((dif)->ne) = (fromBin_<ga*>((did), (*die)));
((dif)->nf) = (fromBin_<Array_<char16_t>*>((did), (*die)));
((dif)->ng) = (fromBin_<fx*>((did), (*die)));
((dif)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((did), (*die)));
((dif)->ni) = (fromBin_<Array_<char16_t>*>((did), (*die)));
((dif)->nj) = (fromBin_<fx*>((did), (*die)));
((dif)->nk) = (fromBin_<fy*>((did), (*die)));
((dif)->no) = (fromBin_<bool>((did), (*die)));
((dif)->lw) = (fromBin_<int64_t>((did), (*die)));
return dif;
}
// parseAlias
static brr* brq(){
brr* dig = nullptr; // ast
(dig) = (new brr());
(bqk)((dig), (4LL), ((dch)()), ((bre)((true), (false))), (true));
(dfq)((u'\u003A'), (true));
((dig)->dih) = ((dgq)());
(dfq)((u'\u000A'), (true));
return dig;
}
// _dtor
static void dii(brr* dij){
((dij)->dih) = (nullptr);
((dij)->ne) = (nullptr);
((dij)->nf) = (nullptr);
((dij)->ng) = (nullptr);
((dij)->nh) = (nullptr);
((dij)->ni) = (nullptr);
((dij)->nj) = (nullptr);
((dij)->nk) = (nullptr);
}
// _copy
static brr* dik(brr* dil){
brr* dim = nullptr;
(dim) = (new brr());
((dim)->dih) = (copy_((dil)->dih));
((dim)->ne) = (copy_((dil)->ne));
((dim)->nf) = (copy_((dil)->nf));
((dim)->ng) = (copy_((dil)->ng));
((dim)->nh) = (copy_((dil)->nh));
((dim)->ni) = (copy_((dil)->ni));
((dim)->nj) = (copy_((dil)->nj));
((dim)->nk) = (copy_((dil)->nk));
((dim)->no) = ((dil)->no);
((dim)->lw) = ((dil)->lw);
return as_<brr>(classTable_, (dim), 46);
}
// _toBin
static Array_<uint8_t>* din(brr* dio){
Array_<uint8_t>* dip = nullptr;
(dip) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dip) = ((dip)->Cat(toBin_((dio)->dih)));
(dip) = ((dip)->Cat(toBin_((dio)->ne)));
(dip) = ((dip)->Cat(toBin_((dio)->nf)));
(dip) = ((dip)->Cat(toBin_((dio)->ng)));
(dip) = ((dip)->Cat(toBin_((dio)->nh)));
(dip) = ((dip)->Cat(toBin_((dio)->ni)));
(dip) = ((dip)->Cat(toBin_((dio)->nj)));
(dip) = ((dip)->Cat(toBin_((dio)->nk)));
(dip) = ((dip)->Cat(toBin_((dio)->no)));
(dip) = ((dip)->Cat(toBin_((dio)->lw)));
return dip;
}
// _fromBin
static brr* dja(brr* djb, Array_<uint8_t>* djc, int64_t* djd){
brr* dje = nullptr;
(dje) = (new brr());
((dje)->dih) = (fromBin_<gc*>((djc), (*djd)));
((dje)->ne) = (fromBin_<ga*>((djc), (*djd)));
((dje)->nf) = (fromBin_<Array_<char16_t>*>((djc), (*djd)));
((dje)->ng) = (fromBin_<fx*>((djc), (*djd)));
((dje)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((djc), (*djd)));
((dje)->ni) = (fromBin_<Array_<char16_t>*>((djc), (*djd)));
((dje)->nj) = (fromBin_<fx*>((djc), (*djd)));
((dje)->nk) = (fromBin_<fy*>((djc), (*djd)));
((dje)->no) = (fromBin_<bool>((djc), (*djd)));
((dje)->lw) = (fromBin_<int64_t>((djc), (*djd)));
return dje;
}
// parseClass
static un* bru(){
un* djf = nullptr; // ast
char16_t djh = 0; // c
bool djl = false; // kuinSrc
char16_t djr = 0; // c
int64_t djw = 0; // row
int64_t djx = 0; // col
uo* djy = nullptr; // item
Array_<char16_t>* dkf = nullptr; // id
Array_<char16_t>* dkg = nullptr; // className
Array_<char16_t>* dks = nullptr;
Array_<char16_t>* dku = nullptr; // id2
fx* dkx = nullptr; // astEndClass
(djf) = (new un());
(bqk)((djf), (5LL), ((dch)()), ((bre)((true), (false))), (true));
((djf)->bai) = (new List_<uo*>());
(dfq)((u'\u0028'), (true));
(djh) = ((bqn)());
if((djh) != (u'\u0029')){
(avg) = (djh);
(dfp)((djf), ((bre)((true), (true))));
(dfq)((u'\u0029'), (true));
}
else{
(djl) = (cmp_((bf), (new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E'))) == 0);
if(!((djl) && (cmp_(((djf)->nf), (new Array_<char16_t>(5, u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0))){
(dfp)((djf), ((djl) ? (new Array_<char16_t>(6, u'\u0040', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073')) : (new Array_<char16_t>(10, u'\u006B', u'\u0075', u'\u0069', u'\u006E', u'\u0040', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))));
}
}
(dfq)((u'\u000A'), (true));
((djf)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bqm<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (djf));
while(true){
(djr) = ((bqn)());
if((djr) == (u'\u0000')){
(ad)((65551LL), ((dch)()), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073')))));
break;
}
if((djr) == (u'\u000A')){
continue;
}
(djw) = (ave);
(djx) = (avf);
(djy) = (new uo());
((djy)->azs) = (false);
((djy)->azt) = (false);
((djy)->azo) = (nullptr);
if((djr) == (u'\u002B')){
((djy)->azs) = (true);
}
else{
(avg) = (djr);
}
(djr) = ((bqn)());
if((djr) == (u'\u002A')){
((djy)->azt) = (true);
}
else{
(avg) = (djr);
}
(dkf) = ((bre)((true), (false)));
(dkg) = (((((djf)->ng)->lw) == (1LL)) ? ((new Array_<char16_t>(1, u'\u0040'))->Cat((djf)->nf)) : ((djf)->nf));
if(cmp_((dkf), (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
((djy)->azn) = ((brj)((dkg), ((djy)->azt)));
}
else if(cmp_((dkf), (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0){
if((djy)->azt){
(ad)((65552LL), ((bql)((bf), (djw), (djx))), (new Array_<Array_<char16_t>*>(1, (dkf))));
}
((djy)->azn) = ((brl)((5LL), (dkg)));
}
else{
if((djy)->azs){
(ad)((65553LL), ((bql)((bf), (djw), (djx))), (new Array_<Array_<char16_t>*>(1, (dkf))));
}
if((djy)->azt){
(ad)((65552LL), ((bql)((bf), (djw), (djx))), (new Array_<Array_<char16_t>*>(1, (dkf))));
}
dks = dkf;
if(cmp_(dks, (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064'))) == 0){
(dku) = ((bre)((true), (false)));
if(cmp_((dku), (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) != 0){
(ad)((65554LL), ((bql)((bf), (djw), (djx))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073')), (dku))));
}
(dkx) = (new fx());
(bqk)((dkx), (0LL), ((bql)((bf), (djw), (djx))), (nullptr), (false));
(dfq)((u'\u000A'), (true));
break;
}
else if(cmp_(dks, (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074'))) == 0){
((djy)->azn) = ((brn)());
}
else if(cmp_(dks, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073'))) == 0){
((djy)->azn) = ((brq)());
}
else if(cmp_(dks, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0){
((djy)->azn) = ((bru)());
}
else{(ad)((65555LL), ((bql)((bf), (djw), (djx))), (new Array_<Array_<char16_t>*>(1, (dkf))));
(brz)(((bsa)()));
continue;
}
}
uj<List_<uo*>*, uo*>(((djf)->bai), (new Array_<int64_t>(1, (0LL))), (djy));
}
bsg<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return djf;
}
// parseEnum
static brx* brw(){
brx* dlc = nullptr; // ast
char16_t dlh = 0; // c
Array_<char16_t>* dlm = nullptr; // id
Array_<char16_t>* dlp = nullptr; // id2
gd* dlu = nullptr; // item
bwo* dlz = nullptr; // expr
(dlc) = (new brx());
(bqk)((dlc), (6LL), ((dch)()), ((bre)((true), (false))), (true));
((dlc)->dld) = (new List_<gd*>());
(dfq)((u'\u000A'), (true));
((dlc)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bqm<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (dlc));
while(true){
(dlh) = ((bqn)());
if((dlh) == (u'\u0000')){
(ad)((65551LL), ((dch)()), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D')))));
break;
}
if((dlh) == (u'\u000A')){
continue;
}
(avg) = (dlh);
(dlm) = ((bre)((true), (false)));
if(cmp_((dlm), (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064'))) == 0){
(dlp) = ((bre)((true), (false)));
if(cmp_((dlp), (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) != 0){
(ad)((65554LL), ((dch)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D')), (dlp))));
}
(dfq)((u'\u000A'), (true));
break;
}
(dlh) = ((bqn)());
if((dlh) == (u'\u003A')){
(dfq)((u'\u003A'), (false));
(dlu) = ((dlv)());
if(eqAddr_((dlu), (nullptr))){
(brz)(((bsa)()));
continue;
}
(dlh) = ((bqn)());
}
else{
(dlz) = (new bwo());
(dma)((dlz), (67585LL), ((dlc)->ne));
((dlz)->pf) = (nullptr);
((dlz)->bwq) = (0x0000000000000000ULL);
(dlu) = (dlz);
}
((dlu)->nf) = (dlm);
if((dlh) != (u'\u000A')){
(dfl)((u'\u000A'), (dlh));
}
uj<List_<gd*>*, gd*>(((dlc)->dld), (new Array_<int64_t>(1, (0LL))), (dlu));
(dfu)((dlu), (true));
}
bsg<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return dlc;
}
// _dtor
static void dmd(brx* dme){
((dme)->dld) = (nullptr);
((dme)->ne) = (nullptr);
((dme)->nf) = (nullptr);
((dme)->ng) = (nullptr);
((dme)->nh) = (nullptr);
((dme)->ni) = (nullptr);
((dme)->nj) = (nullptr);
((dme)->nk) = (nullptr);
}
// _copy
static brx* dmf(brx* dmg){
brx* dmh = nullptr;
(dmh) = (new brx());
((dmh)->dld) = (copy_((dmg)->dld));
((dmh)->ne) = (copy_((dmg)->ne));
((dmh)->nf) = (copy_((dmg)->nf));
((dmh)->ng) = (copy_((dmg)->ng));
((dmh)->nh) = (copy_((dmg)->nh));
((dmh)->ni) = (copy_((dmg)->ni));
((dmh)->nj) = (copy_((dmg)->nj));
((dmh)->nk) = (copy_((dmg)->nk));
((dmh)->no) = ((dmg)->no);
((dmh)->lw) = ((dmg)->lw);
return as_<brx>(classTable_, (dmh), 48);
}
// _toBin
static Array_<uint8_t>* dmi(brx* dmj){
Array_<uint8_t>* dmk = nullptr;
(dmk) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dmk) = ((dmk)->Cat(toBin_((dmj)->dld)));
(dmk) = ((dmk)->Cat(toBin_((dmj)->ne)));
(dmk) = ((dmk)->Cat(toBin_((dmj)->nf)));
(dmk) = ((dmk)->Cat(toBin_((dmj)->ng)));
(dmk) = ((dmk)->Cat(toBin_((dmj)->nh)));
(dmk) = ((dmk)->Cat(toBin_((dmj)->ni)));
(dmk) = ((dmk)->Cat(toBin_((dmj)->nj)));
(dmk) = ((dmk)->Cat(toBin_((dmj)->nk)));
(dmk) = ((dmk)->Cat(toBin_((dmj)->no)));
(dmk) = ((dmk)->Cat(toBin_((dmj)->lw)));
return dmk;
}
// _fromBin
static brx* dmv(brx* dmw, Array_<uint8_t>* dmx, int64_t* dmy){
brx* dmz = nullptr;
(dmz) = (new brx());
((dmz)->dld) = (fromBin_<List_<gd*>*>((dmx), (*dmy)));
((dmz)->ne) = (fromBin_<ga*>((dmx), (*dmy)));
((dmz)->nf) = (fromBin_<Array_<char16_t>*>((dmx), (*dmy)));
((dmz)->ng) = (fromBin_<fx*>((dmx), (*dmy)));
((dmz)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dmx), (*dmy)));
((dmz)->ni) = (fromBin_<Array_<char16_t>*>((dmx), (*dmy)));
((dmz)->nj) = (fromBin_<fx*>((dmx), (*dmy)));
((dmz)->nk) = (fromBin_<fy*>((dmx), (*dmy)));
((dmz)->no) = (fromBin_<bool>((dmx), (*dmy)));
((dmz)->lw) = (fromBin_<int64_t>((dmx), (*dmy)));
return dmz;
}
// readUntilRet
static void brz(char16_t dna /*c*/){
while(((dna) != (u'\u000A')) && ((dna) != (u'\u0000'))){
(dna) = ((bsa)());
}
(avg) = (dna);
}
// read
static char16_t bsa(){
char16_t dnc = 0; // c
char16_t dne = 0;
(dnc) = ((dbw)());
switch(dnc){
case u'\u007B':
(dng)();
return u'\u0020';
break;
case u'\u0009':
return u'\u0020';
break;
}
return dnc;
}
// _getStack
template<typename T_, typename R_> static R_ bsg(T_ dni /*me_*/, Array_<int64_t>* dnj /*type*/){
R_ r_ = dni->B.top();
dni->B.pop();
return r_;
}
// initAst
static void buq(fx* dnk /*ast*/, int64_t dnl /*typeId*/, ga* dnm /*pos*/){
if(!(!is_(classTable_, (dnk), 14))){
throw 0xE9170000U;
}
(dnn)((dnk), (dnl), (dnm));
}
// _dtor
static void dno(buu* dnp){
((dnp)->bve) = (nullptr);
((dnp)->ne) = (nullptr);
((dnp)->nf) = (nullptr);
((dnp)->ng) = (nullptr);
((dnp)->nh) = (nullptr);
((dnp)->ni) = (nullptr);
((dnp)->nj) = (nullptr);
((dnp)->nk) = (nullptr);
}
// _copy
static buu* dnq(buu* dnr){
buu* dns = nullptr;
(dns) = (new buu());
((dns)->bve) = (copy_((dnr)->bve));
((dns)->ne) = (copy_((dnr)->ne));
((dns)->nf) = (copy_((dnr)->nf));
((dns)->ng) = (copy_((dnr)->ng));
((dns)->nh) = (copy_((dnr)->nh));
((dns)->ni) = (copy_((dnr)->ni));
((dns)->nj) = (copy_((dnr)->nj));
((dns)->nk) = (copy_((dnr)->nk));
((dns)->no) = ((dnr)->no);
((dns)->lw) = ((dnr)->lw);
return as_<buu>(classTable_, (dns), 50);
}
// _toBin
static Array_<uint8_t>* dnt(buu* dnu){
Array_<uint8_t>* dnv = nullptr;
(dnv) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dnv) = ((dnv)->Cat(toBin_((dnu)->bve)));
(dnv) = ((dnv)->Cat(toBin_((dnu)->ne)));
(dnv) = ((dnv)->Cat(toBin_((dnu)->nf)));
(dnv) = ((dnv)->Cat(toBin_((dnu)->ng)));
(dnv) = ((dnv)->Cat(toBin_((dnu)->nh)));
(dnv) = ((dnv)->Cat(toBin_((dnu)->ni)));
(dnv) = ((dnv)->Cat(toBin_((dnu)->nj)));
(dnv) = ((dnv)->Cat(toBin_((dnu)->nk)));
(dnv) = ((dnv)->Cat(toBin_((dnu)->no)));
(dnv) = ((dnv)->Cat(toBin_((dnu)->lw)));
return dnv;
}
// _fromBin
static buu* dog(buu* doh, Array_<uint8_t>* doi, int64_t* doj){
buu* dok = nullptr;
(dok) = (new buu());
((dok)->bve) = (fromBin_<gb*>((doi), (*doj)));
((dok)->ne) = (fromBin_<ga*>((doi), (*doj)));
((dok)->nf) = (fromBin_<Array_<char16_t>*>((doi), (*doj)));
((dok)->ng) = (fromBin_<fx*>((doi), (*doj)));
((dok)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((doi), (*doj)));
((dok)->ni) = (fromBin_<Array_<char16_t>*>((doi), (*doj)));
((dok)->nj) = (fromBin_<fx*>((doi), (*doj)));
((dok)->nk) = (fromBin_<fy*>((doi), (*doj)));
((dok)->no) = (fromBin_<bool>((doi), (*doj)));
((dok)->lw) = (fromBin_<int64_t>((doi), (*doj)));
return dok;
}
// _dtor
static void dol(buv* dom){
((dom)->bvh) = (nullptr);
((dom)->bve) = (nullptr);
((dom)->ne) = (nullptr);
((dom)->nf) = (nullptr);
((dom)->ng) = (nullptr);
((dom)->nh) = (nullptr);
((dom)->ni) = (nullptr);
((dom)->nj) = (nullptr);
((dom)->nk) = (nullptr);
}
// _copy
static buv* don(buv* doo){
buv* dop = nullptr;
(dop) = (new buv());
((dop)->bvh) = (copy_((doo)->bvh));
((dop)->bve) = (copy_((doo)->bve));
((dop)->ne) = (copy_((doo)->ne));
((dop)->nf) = (copy_((doo)->nf));
((dop)->ng) = (copy_((doo)->ng));
((dop)->nh) = (copy_((doo)->nh));
((dop)->ni) = (copy_((doo)->ni));
((dop)->nj) = (copy_((doo)->nj));
((dop)->nk) = (copy_((doo)->nk));
((dop)->no) = ((doo)->no);
((dop)->lw) = ((doo)->lw);
return as_<buv>(classTable_, (dop), 54);
}
// _toBin
static Array_<uint8_t>* doq(buv* dor){
Array_<uint8_t>* dos = nullptr;
(dos) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dos) = ((dos)->Cat(toBin_((dor)->bvh)));
(dos) = ((dos)->Cat(toBin_((dor)->bve)));
(dos) = ((dos)->Cat(toBin_((dor)->ne)));
(dos) = ((dos)->Cat(toBin_((dor)->nf)));
(dos) = ((dos)->Cat(toBin_((dor)->ng)));
(dos) = ((dos)->Cat(toBin_((dor)->nh)));
(dos) = ((dos)->Cat(toBin_((dor)->ni)));
(dos) = ((dos)->Cat(toBin_((dor)->nj)));
(dos) = ((dos)->Cat(toBin_((dor)->nk)));
(dos) = ((dos)->Cat(toBin_((dor)->no)));
(dos) = ((dos)->Cat(toBin_((dor)->lw)));
return dos;
}
// _fromBin
static buv* dpe(buv* dpf, Array_<uint8_t>* dpg, int64_t* dph){
buv* dpi = nullptr;
(dpi) = (new buv());
((dpi)->bvh) = (fromBin_<List_<ge*>*>((dpg), (*dph)));
((dpi)->bve) = (fromBin_<gb*>((dpg), (*dph)));
((dpi)->ne) = (fromBin_<ga*>((dpg), (*dph)));
((dpi)->nf) = (fromBin_<Array_<char16_t>*>((dpg), (*dph)));
((dpi)->ng) = (fromBin_<fx*>((dpg), (*dph)));
((dpi)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dpg), (*dph)));
((dpi)->ni) = (fromBin_<Array_<char16_t>*>((dpg), (*dph)));
((dpi)->nj) = (fromBin_<fx*>((dpg), (*dph)));
((dpi)->nk) = (fromBin_<fy*>((dpg), (*dph)));
((dpi)->no) = (fromBin_<bool>((dpg), (*dph)));
((dpi)->lw) = (fromBin_<int64_t>((dpg), (*dph)));
return dpi;
}
// _dtor
static void dpj(bux* dpk){
((dpk)->bwt) = (nullptr);
((dpk)->bwy) = (nullptr);
}
// _copy
static bux* dpl(bux* dpm){
bux* dpn = nullptr;
(dpn) = (new bux());
((dpn)->bwt) = (copy_((dpm)->bwt));
((dpn)->bwy) = (copy_((dpm)->bwy));
return as_<bux>(classTable_, (dpn), 58);
}
// _toBin
static Array_<uint8_t>* dpo(bux* dpp){
Array_<uint8_t>* dpq = nullptr;
(dpq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dpq) = ((dpq)->Cat(toBin_((dpp)->bwt)));
(dpq) = ((dpq)->Cat(toBin_((dpp)->bwy)));
return dpq;
}
// _fromBin
static bux* dpt(bux* dpu, Array_<uint8_t>* dpv, int64_t* dpw){
bux* dpx = nullptr;
(dpx) = (new bux());
((dpx)->bwt) = (fromBin_<gd*>((dpv), (*dpw)));
((dpx)->bwy) = (fromBin_<gd*>((dpv), (*dpw)));
return dpx;
}
// _dtor
static void dpy(buw* dpz){
((dpz)->bwg) = (nullptr);
((dpz)->bwj) = (nullptr);
((dpz)->ne) = (nullptr);
((dpz)->nf) = (nullptr);
((dpz)->ng) = (nullptr);
((dpz)->nh) = (nullptr);
((dpz)->ni) = (nullptr);
((dpz)->nj) = (nullptr);
((dpz)->nk) = (nullptr);
}
// _copy
static buw* dqa(buw* dqb){
buw* dqc = nullptr;
(dqc) = (new buw());
((dqc)->bwg) = (copy_((dqb)->bwg));
((dqc)->bwj) = (copy_((dqb)->bwj));
((dqc)->ne) = (copy_((dqb)->ne));
((dqc)->nf) = (copy_((dqb)->nf));
((dqc)->ng) = (copy_((dqb)->ng));
((dqc)->nh) = (copy_((dqb)->nh));
((dqc)->ni) = (copy_((dqb)->ni));
((dqc)->nj) = (copy_((dqb)->nj));
((dqc)->nk) = (copy_((dqb)->nk));
((dqc)->no) = ((dqb)->no);
((dqc)->lw) = ((dqb)->lw);
return as_<buw>(classTable_, (dqc), 56);
}
// _toBin
static Array_<uint8_t>* dqd(buw* dqe){
Array_<uint8_t>* dqf = nullptr;
(dqf) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dqf) = ((dqf)->Cat(toBin_((dqe)->bwg)));
(dqf) = ((dqf)->Cat(toBin_((dqe)->bwj)));
(dqf) = ((dqf)->Cat(toBin_((dqe)->ne)));
(dqf) = ((dqf)->Cat(toBin_((dqe)->nf)));
(dqf) = ((dqf)->Cat(toBin_((dqe)->ng)));
(dqf) = ((dqf)->Cat(toBin_((dqe)->nh)));
(dqf) = ((dqf)->Cat(toBin_((dqe)->ni)));
(dqf) = ((dqf)->Cat(toBin_((dqe)->nj)));
(dqf) = ((dqf)->Cat(toBin_((dqe)->nk)));
(dqf) = ((dqf)->Cat(toBin_((dqe)->no)));
(dqf) = ((dqf)->Cat(toBin_((dqe)->lw)));
return dqf;
}
// _fromBin
static buw* dqr(buw* dqs, Array_<uint8_t>* dqt, int64_t* dqu){
buw* dqv = nullptr;
(dqv) = (new buw());
((dqv)->bwg) = (fromBin_<List_<bux*>*>((dqt), (*dqu)));
((dqv)->bwj) = (fromBin_<buv*>((dqt), (*dqu)));
((dqv)->ne) = (fromBin_<ga*>((dqt), (*dqu)));
((dqv)->nf) = (fromBin_<Array_<char16_t>*>((dqt), (*dqu)));
((dqv)->ng) = (fromBin_<fx*>((dqt), (*dqu)));
((dqv)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dqt), (*dqu)));
((dqv)->ni) = (fromBin_<Array_<char16_t>*>((dqt), (*dqu)));
((dqv)->nj) = (fromBin_<fx*>((dqt), (*dqu)));
((dqv)->nk) = (fromBin_<fy*>((dqt), (*dqu)));
((dqv)->no) = (fromBin_<bool>((dqt), (*dqu)));
((dqv)->lw) = (fromBin_<int64_t>((dqt), (*dqu)));
return dqv;
}
// _dtor
static void dqw(but* dqx){
((dqx)->bvi) = (nullptr);
((dqx)->bvj) = (nullptr);
((dqx)->bvm) = (nullptr);
((dqx)->bve) = (nullptr);
((dqx)->ne) = (nullptr);
((dqx)->nf) = (nullptr);
((dqx)->ng) = (nullptr);
((dqx)->nh) = (nullptr);
((dqx)->ni) = (nullptr);
((dqx)->nj) = (nullptr);
((dqx)->nk) = (nullptr);
}
// _copy
static but* dqy(but* dqz){
but* dra = nullptr;
(dra) = (new but());
((dra)->bvi) = (copy_((dqz)->bvi));
((dra)->bvj) = (copy_((dqz)->bvj));
((dra)->bvm) = (copy_((dqz)->bvm));
((dra)->bve) = (copy_((dqz)->bve));
((dra)->ne) = (copy_((dqz)->ne));
((dra)->nf) = (copy_((dqz)->nf));
((dra)->ng) = (copy_((dqz)->ng));
((dra)->nh) = (copy_((dqz)->nh));
((dra)->ni) = (copy_((dqz)->ni));
((dra)->nj) = (copy_((dqz)->nj));
((dra)->nk) = (copy_((dqz)->nk));
((dra)->no) = ((dqz)->no);
((dra)->lw) = ((dqz)->lw);
return as_<but>(classTable_, (dra), 52);
}
// _toBin
static Array_<uint8_t>* drb(but* drc){
Array_<uint8_t>* drd = nullptr;
(drd) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(drd) = ((drd)->Cat(toBin_((drc)->bvi)));
(drd) = ((drd)->Cat(toBin_((drc)->bvj)));
(drd) = ((drd)->Cat(toBin_((drc)->bvm)));
(drd) = ((drd)->Cat(toBin_((drc)->bve)));
(drd) = ((drd)->Cat(toBin_((drc)->ne)));
(drd) = ((drd)->Cat(toBin_((drc)->nf)));
(drd) = ((drd)->Cat(toBin_((drc)->ng)));
(drd) = ((drd)->Cat(toBin_((drc)->nh)));
(drd) = ((drd)->Cat(toBin_((drc)->ni)));
(drd) = ((drd)->Cat(toBin_((drc)->nj)));
(drd) = ((drd)->Cat(toBin_((drc)->nk)));
(drd) = ((drd)->Cat(toBin_((drc)->no)));
(drd) = ((drd)->Cat(toBin_((drc)->lw)));
return drd;
}
// _fromBin
static but* drr(but* drs, Array_<uint8_t>* drt, int64_t* dru){
but* drv = nullptr;
(drv) = (new but());
((drv)->bvi) = (fromBin_<buv*>((drt), (*dru)));
((drv)->bvj) = (fromBin_<List_<buw*>*>((drt), (*dru)));
((drv)->bvm) = (fromBin_<buv*>((drt), (*dru)));
((drv)->bve) = (fromBin_<gb*>((drt), (*dru)));
((drv)->ne) = (fromBin_<ga*>((drt), (*dru)));
((drv)->nf) = (fromBin_<Array_<char16_t>*>((drt), (*dru)));
((drv)->ng) = (fromBin_<fx*>((drt), (*dru)));
((drv)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((drt), (*dru)));
((drv)->ni) = (fromBin_<Array_<char16_t>*>((drt), (*dru)));
((drv)->nj) = (fromBin_<fx*>((drt), (*dru)));
((drv)->nk) = (fromBin_<fy*>((drt), (*dru)));
((drv)->no) = (fromBin_<bool>((drt), (*dru)));
((drv)->lw) = (fromBin_<int64_t>((drt), (*dru)));
return drv;
}
// _dtor
static void drw(bvc* drx){
((drx)->ne) = (nullptr);
((drx)->nf) = (nullptr);
((drx)->ng) = (nullptr);
((drx)->nh) = (nullptr);
((drx)->ni) = (nullptr);
((drx)->nj) = (nullptr);
((drx)->nk) = (nullptr);
}
// _copy
static bvc* dry(bvc* drz){
bvc* dsa = nullptr;
(dsa) = (new bvc());
((dsa)->bvd) = ((drz)->bvd);
((dsa)->ne) = (copy_((drz)->ne));
((dsa)->nf) = (copy_((drz)->nf));
((dsa)->ng) = (copy_((drz)->ng));
((dsa)->nh) = (copy_((drz)->nh));
((dsa)->ni) = (copy_((drz)->ni));
((dsa)->nj) = (copy_((drz)->nj));
((dsa)->nk) = (copy_((drz)->nk));
((dsa)->no) = ((drz)->no);
((dsa)->lw) = ((drz)->lw);
return as_<bvc>(classTable_, (dsa), 60);
}
// _toBin
static Array_<uint8_t>* dsb(bvc* dsc){
Array_<uint8_t>* dsd = nullptr;
(dsd) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dsd) = ((dsd)->Cat(toBin_((dsc)->bvd)));
(dsd) = ((dsd)->Cat(toBin_((dsc)->ne)));
(dsd) = ((dsd)->Cat(toBin_((dsc)->nf)));
(dsd) = ((dsd)->Cat(toBin_((dsc)->ng)));
(dsd) = ((dsd)->Cat(toBin_((dsc)->nh)));
(dsd) = ((dsd)->Cat(toBin_((dsc)->ni)));
(dsd) = ((dsd)->Cat(toBin_((dsc)->nj)));
(dsd) = ((dsd)->Cat(toBin_((dsc)->nk)));
(dsd) = ((dsd)->Cat(toBin_((dsc)->no)));
(dsd) = ((dsd)->Cat(toBin_((dsc)->lw)));
return dsd;
}
// _fromBin
static bvc* dso(bvc* dsp, Array_<uint8_t>* dsq, int64_t* dsr){
bvc* dss = nullptr;
(dss) = (new bvc());
((dss)->bvd) = (fromBin_<int64_t>((dsq), (*dsr)));
((dss)->ne) = (fromBin_<ga*>((dsq), (*dsr)));
((dss)->nf) = (fromBin_<Array_<char16_t>*>((dsq), (*dsr)));
((dss)->ng) = (fromBin_<fx*>((dsq), (*dsr)));
((dss)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dsq), (*dsr)));
((dss)->ni) = (fromBin_<Array_<char16_t>*>((dsq), (*dsr)));
((dss)->nj) = (fromBin_<fx*>((dsq), (*dsr)));
((dss)->nk) = (fromBin_<fy*>((dsq), (*dsr)));
((dss)->no) = (fromBin_<bool>((dsq), (*dsr)));
((dss)->lw) = (fromBin_<int64_t>((dsq), (*dsr)));
return dss;
}
// searchStdItem
static fx* bvp(Array_<char16_t>* dst /*src*/, Array_<char16_t>* dsu /*identifier*/, bool dsv /*makeExprRef*/){
fx* dsw = nullptr; // ast
bool dsx = false;
fx* dta = nullptr; // ast2
bool dtb = false;
gd* dtg = nullptr; // expr
(dsw) = (avq<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), (dst), (&dsx)));
if(eqAddr_((dsw), (nullptr))){
(ad)((6LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (dst))));
return nullptr;
}
(dta) = (avq<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((dsw)->nh), (new Array_<int64_t>(1, (0LL))), (dsu), (&dtb)));
if(eqAddr_((dsw), (nullptr))){
(ad)((7LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (dst))));
return nullptr;
}
if(dsv){
(dtg) = (new gd());
(bvy)((dtg), (2062LL), ((bql)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (1LL), (1LL))));
((dtg)->nj) = (dta);
return (dth)((dtg));
}
return dta;
}
// _dtor
static void dti(bvt* dtj){
((dtj)->bwd) = (nullptr);
((dtj)->ne) = (nullptr);
((dtj)->nf) = (nullptr);
((dtj)->ng) = (nullptr);
((dtj)->nh) = (nullptr);
((dtj)->ni) = (nullptr);
((dtj)->nj) = (nullptr);
((dtj)->nk) = (nullptr);
}
// _copy
static bvt* dtk(bvt* dtl){
bvt* dtm = nullptr;
(dtm) = (new bvt());
((dtm)->bwd) = (copy_((dtl)->bwd));
((dtm)->ne) = (copy_((dtl)->ne));
((dtm)->nf) = (copy_((dtl)->nf));
((dtm)->ng) = (copy_((dtl)->ng));
((dtm)->nh) = (copy_((dtl)->nh));
((dtm)->ni) = (copy_((dtl)->ni));
((dtm)->nj) = (copy_((dtl)->nj));
((dtm)->nk) = (copy_((dtl)->nk));
((dtm)->no) = ((dtl)->no);
((dtm)->lw) = ((dtl)->lw);
return as_<bvt>(classTable_, (dtm), 62);
}
// _toBin
static Array_<uint8_t>* dtn(bvt* dto){
Array_<uint8_t>* dtp = nullptr;
(dtp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dtp) = ((dtp)->Cat(toBin_((dto)->bwd)));
(dtp) = ((dtp)->Cat(toBin_((dto)->ne)));
(dtp) = ((dtp)->Cat(toBin_((dto)->nf)));
(dtp) = ((dtp)->Cat(toBin_((dto)->ng)));
(dtp) = ((dtp)->Cat(toBin_((dto)->nh)));
(dtp) = ((dtp)->Cat(toBin_((dto)->ni)));
(dtp) = ((dtp)->Cat(toBin_((dto)->nj)));
(dtp) = ((dtp)->Cat(toBin_((dto)->nk)));
(dtp) = ((dtp)->Cat(toBin_((dto)->no)));
(dtp) = ((dtp)->Cat(toBin_((dto)->lw)));
return dtp;
}
// _fromBin
static bvt* dua(bvt* dub, Array_<uint8_t>* duc, int64_t* dud){
bvt* due = nullptr;
(due) = (new bvt());
((due)->bwd) = (fromBin_<gd*>((duc), (*dud)));
((due)->ne) = (fromBin_<ga*>((duc), (*dud)));
((due)->nf) = (fromBin_<Array_<char16_t>*>((duc), (*dud)));
((due)->ng) = (fromBin_<fx*>((duc), (*dud)));
((due)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((duc), (*dud)));
((due)->ni) = (fromBin_<Array_<char16_t>*>((duc), (*dud)));
((due)->nj) = (fromBin_<fx*>((duc), (*dud)));
((due)->nk) = (fromBin_<fy*>((duc), (*dud)));
((due)->no) = (fromBin_<bool>((duc), (*dud)));
((due)->lw) = (fromBin_<int64_t>((duc), (*dud)));
return due;
}
// _dtor
static void duf(bvx* dug){
((dug)->bxl) = (nullptr);
}
// _copy
static bvx* duh(bvx* dui){
bvx* duj = nullptr;
(duj) = (new bvx());
((duj)->bxl) = (copy_((dui)->bxl));
((duj)->bxh) = ((dui)->bxh);
((duj)->bxi) = ((dui)->bxi);
return as_<bvx>(classTable_, (duj), 66);
}
// _toBin
static Array_<uint8_t>* duk(bvx* dul){
Array_<uint8_t>* dum = nullptr;
(dum) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dum) = ((dum)->Cat(toBin_((dul)->bxl)));
(dum) = ((dum)->Cat(toBin_((dul)->bxh)));
(dum) = ((dum)->Cat(toBin_((dul)->bxi)));
return dum;
}
// _fromBin
static bvx* duq(bvx* dur, Array_<uint8_t>* dus, int64_t* dut){
bvx* duu = nullptr;
(duu) = (new bvx());
((duu)->bxl) = (fromBin_<gd*>((dus), (*dut)));
((duu)->bxh) = (fromBin_<bool>((dus), (*dut)));
((duu)->bxi) = (fromBin_<bool>((dus), (*dut)));
return duu;
}
// _dtor
static void duv(bvw* duw){
((duw)->bwc) = (nullptr);
((duw)->bvz) = (nullptr);
((duw)->pf) = (nullptr);
((duw)->ne) = (nullptr);
((duw)->nf) = (nullptr);
((duw)->ng) = (nullptr);
((duw)->nh) = (nullptr);
((duw)->ni) = (nullptr);
((duw)->nj) = (nullptr);
((duw)->nk) = (nullptr);
}
// _copy
static bvw* dux(bvw* duy){
bvw* duz = nullptr;
(duz) = (new bvw());
((duz)->bwc) = (copy_((duy)->bwc));
((duz)->bvz) = (copy_((duy)->bvz));
((duz)->pf) = (copy_((duy)->pf));
((duz)->pj) = ((duy)->pj);
((duz)->ne) = (copy_((duy)->ne));
((duz)->nf) = (copy_((duy)->nf));
((duz)->ng) = (copy_((duy)->ng));
((duz)->nh) = (copy_((duy)->nh));
((duz)->ni) = (copy_((duy)->ni));
((duz)->nj) = (copy_((duy)->nj));
((duz)->nk) = (copy_((duy)->nk));
((duz)->no) = ((duy)->no);
((duz)->lw) = ((duy)->lw);
return as_<bvw>(classTable_, (duz), 64);
}
// _toBin
static Array_<uint8_t>* dva(bvw* dvb){
Array_<uint8_t>* dvc = nullptr;
(dvc) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->bwc)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->bvz)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->pf)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->pj)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->ne)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->nf)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->ng)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->nh)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->ni)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->nj)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->nk)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->no)));
(dvc) = ((dvc)->Cat(toBin_((dvb)->lw)));
return dvc;
}
// _fromBin
static bvw* dvq(bvw* dvr, Array_<uint8_t>* dvs, int64_t* dvt){
bvw* dvu = nullptr;
(dvu) = (new bvw());
((dvu)->bwc) = (fromBin_<gd*>((dvs), (*dvt)));
((dvu)->bvz) = (fromBin_<List_<bvx*>*>((dvs), (*dvt)));
((dvu)->pf) = (fromBin_<gc*>((dvs), (*dvt)));
((dvu)->pj) = (fromBin_<int64_t>((dvs), (*dvt)));
((dvu)->ne) = (fromBin_<ga*>((dvs), (*dvt)));
((dvu)->nf) = (fromBin_<Array_<char16_t>*>((dvs), (*dvt)));
((dvu)->ng) = (fromBin_<fx*>((dvs), (*dvt)));
((dvu)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dvs), (*dvt)));
((dvu)->ni) = (fromBin_<Array_<char16_t>*>((dvs), (*dvt)));
((dvu)->nj) = (fromBin_<fx*>((dvs), (*dvt)));
((dvu)->nk) = (fromBin_<fy*>((dvs), (*dvt)));
((dvu)->no) = (fromBin_<bool>((dvs), (*dvt)));
((dvu)->lw) = (fromBin_<int64_t>((dvs), (*dvt)));
return dvu;
}
// initAstExpr
static void bvy(gd* dvv /*ast*/, int64_t dvw /*typeId*/, ga* dvx /*pos*/){
if(!(is_(classTable_, (dvv), 14))){
throw 0xE9170000U;
}
(dnn)((dvv), (dvw), (dvx));
((dvv)->pf) = (nullptr);
((dvv)->pj) = (0LL);
}
// _dtor
static void dvy(bwp* dvz){
((dvz)->pf) = (nullptr);
((dvz)->ne) = (nullptr);
((dvz)->nf) = (nullptr);
((dvz)->ng) = (nullptr);
((dvz)->nh) = (nullptr);
((dvz)->ni) = (nullptr);
((dvz)->nj) = (nullptr);
((dvz)->nk) = (nullptr);
}
// _copy
static bwp* dwa(bwp* dwb){
bwp* dwc = nullptr;
(dwc) = (new bwp());
((dwc)->pf) = (copy_((dwb)->pf));
((dwc)->pj) = ((dwb)->pj);
((dwc)->ne) = (copy_((dwb)->ne));
((dwc)->nf) = (copy_((dwb)->nf));
((dwc)->ng) = (copy_((dwb)->ng));
((dwc)->nh) = (copy_((dwb)->nh));
((dwc)->ni) = (copy_((dwb)->ni));
((dwc)->nj) = (copy_((dwb)->nj));
((dwc)->nk) = (copy_((dwb)->nk));
((dwc)->no) = ((dwb)->no);
((dwc)->lw) = ((dwb)->lw);
return as_<bwp>(classTable_, (dwc), 68);
}
// _toBin
static Array_<uint8_t>* dwd(bwp* dwe){
Array_<uint8_t>* dwf = nullptr;
(dwf) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dwf) = ((dwf)->Cat(toBin_((dwe)->pf)));
(dwf) = ((dwf)->Cat(toBin_((dwe)->pj)));
(dwf) = ((dwf)->Cat(toBin_((dwe)->ne)));
(dwf) = ((dwf)->Cat(toBin_((dwe)->nf)));
(dwf) = ((dwf)->Cat(toBin_((dwe)->ng)));
(dwf) = ((dwf)->Cat(toBin_((dwe)->nh)));
(dwf) = ((dwf)->Cat(toBin_((dwe)->ni)));
(dwf) = ((dwf)->Cat(toBin_((dwe)->nj)));
(dwf) = ((dwf)->Cat(toBin_((dwe)->nk)));
(dwf) = ((dwf)->Cat(toBin_((dwe)->no)));
(dwf) = ((dwf)->Cat(toBin_((dwe)->lw)));
return dwf;
}
// _fromBin
static bwp* dwr(bwp* dws, Array_<uint8_t>* dwt, int64_t* dwu){
bwp* dwv = nullptr;
(dwv) = (new bwp());
((dwv)->pf) = (fromBin_<gc*>((dwt), (*dwu)));
((dwv)->pj) = (fromBin_<int64_t>((dwt), (*dwu)));
((dwv)->ne) = (fromBin_<ga*>((dwt), (*dwu)));
((dwv)->nf) = (fromBin_<Array_<char16_t>*>((dwt), (*dwu)));
((dwv)->ng) = (fromBin_<fx*>((dwt), (*dwu)));
((dwv)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dwt), (*dwu)));
((dwv)->ni) = (fromBin_<Array_<char16_t>*>((dwt), (*dwu)));
((dwv)->nj) = (fromBin_<fx*>((dwt), (*dwu)));
((dwv)->nk) = (fromBin_<fy*>((dwt), (*dwu)));
((dwv)->no) = (fromBin_<bool>((dwt), (*dwu)));
((dwv)->lw) = (fromBin_<int64_t>((dwt), (*dwu)));
return dwv;
}
// _dtor
static void dww(bwo* dwx){
((dwx)->pf) = (nullptr);
((dwx)->ne) = (nullptr);
((dwx)->nf) = (nullptr);
((dwx)->ng) = (nullptr);
((dwx)->nh) = (nullptr);
((dwx)->ni) = (nullptr);
((dwx)->nj) = (nullptr);
((dwx)->nk) = (nullptr);
}
// _copy
static bwo* dwy(bwo* dwz){
bwo* dxa = nullptr;
(dxa) = (new bwo());
((dxa)->bwq) = ((dwz)->bwq);
((dxa)->pf) = (copy_((dwz)->pf));
((dxa)->pj) = ((dwz)->pj);
((dxa)->ne) = (copy_((dwz)->ne));
((dxa)->nf) = (copy_((dwz)->nf));
((dxa)->ng) = (copy_((dwz)->ng));
((dxa)->nh) = (copy_((dwz)->nh));
((dxa)->ni) = (copy_((dwz)->ni));
((dxa)->nj) = (copy_((dwz)->nj));
((dxa)->nk) = (copy_((dwz)->nk));
((dxa)->no) = ((dwz)->no);
((dxa)->lw) = ((dwz)->lw);
return as_<bwo>(classTable_, (dxa), 70);
}
// _toBin
static Array_<uint8_t>* dxb(bwo* dxc){
Array_<uint8_t>* dxd = nullptr;
(dxd) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dxd) = ((dxd)->Cat(toBin_((dxc)->bwq)));
(dxd) = ((dxd)->Cat(toBin_((dxc)->pf)));
(dxd) = ((dxd)->Cat(toBin_((dxc)->pj)));
(dxd) = ((dxd)->Cat(toBin_((dxc)->ne)));
(dxd) = ((dxd)->Cat(toBin_((dxc)->nf)));
(dxd) = ((dxd)->Cat(toBin_((dxc)->ng)));
(dxd) = ((dxd)->Cat(toBin_((dxc)->nh)));
(dxd) = ((dxd)->Cat(toBin_((dxc)->ni)));
(dxd) = ((dxd)->Cat(toBin_((dxc)->nj)));
(dxd) = ((dxd)->Cat(toBin_((dxc)->nk)));
(dxd) = ((dxd)->Cat(toBin_((dxc)->no)));
(dxd) = ((dxd)->Cat(toBin_((dxc)->lw)));
return dxd;
}
// _fromBin
static bwo* dxq(bwo* dxr, Array_<uint8_t>* dxs, int64_t* dxt){
bwo* dxu = nullptr;
(dxu) = (new bwo());
((dxu)->bwq) = (fromBin_<uint64_t>((dxs), (*dxt)));
((dxu)->pf) = (fromBin_<gc*>((dxs), (*dxt)));
((dxu)->pj) = (fromBin_<int64_t>((dxs), (*dxt)));
((dxu)->ne) = (fromBin_<ga*>((dxs), (*dxt)));
((dxu)->nf) = (fromBin_<Array_<char16_t>*>((dxs), (*dxt)));
((dxu)->ng) = (fromBin_<fx*>((dxs), (*dxt)));
((dxu)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dxs), (*dxt)));
((dxu)->ni) = (fromBin_<Array_<char16_t>*>((dxs), (*dxt)));
((dxu)->nj) = (fromBin_<fx*>((dxs), (*dxt)));
((dxu)->nk) = (fromBin_<fy*>((dxs), (*dxt)));
((dxu)->no) = (fromBin_<bool>((dxs), (*dxt)));
((dxu)->lw) = (fromBin_<int64_t>((dxs), (*dxt)));
return dxu;
}
// rebuildArg
static void bya(gb* dxv /*ast*/){
if(!eqAddr_(((dxv)->nk), (nullptr))){
return;
}
((dxv)->nk) = (dxv);
((dxv)->qf) = ((byd)(((dxv)->qf), (nullptr)));
if(!eqAddr_(((dxv)->qg), (nullptr))){
((dxv)->qg) = ((byw)(((dxv)->qg), (false)));
if(eqAddr_(((dxv)->qg), (nullptr))){
return;
}
if((((dxv)->qk) == (1LL)) && ((ayg<int64_t>((((dxv)->qg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL))){
(ad)((131091LL), ((dxv)->ne), (new Array_<Array_<char16_t>*>(1, ((dxv)->nf))));
}
if((((dxv)->qk) == (4LL)) && ((ayg<int64_t>((((dxv)->qg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL))){
(ad)((131092LL), ((dxv)->ne), (new Array_<Array_<char16_t>*>(1, ((dxv)->nf))));
}
if(!((dyh)((((dxv)->qg)->pf), ((dxv)->qf), (false)))){
(ad)((131093LL), ((dxv)->ne), (new Array_<Array_<char16_t>*>(1, ((dxv)->nf))));
}
else if(((((dxv)->qg)->pf)->lw) == (1028LL)){
((dxv)->qg) = ((dyk)(((dxv)->qg), ((dxv)->qf)));
}
}
}
// rebuildType
static gc* byd(gc* dyl /*ast*/, brr* dym /*parentAlias*/){
int64_t dyp = 0; // type
int64_t dyr = 0;
fx* dyt = nullptr; // refItem
int64_t dyx = 0;
cbp* dzh = nullptr; // ast2
List_<cbq*>* dzi = nullptr; // items
cbq* dzk = nullptr; // arg
ccx* dzp = nullptr; // ast2
if(!eqAddr_(((dyl)->nk), (nullptr))){
return as_<gc>(classTable_, ((dyl)->nk), 12);
}
((dyl)->nk) = (dyl);
(dyp) = ((dyl)->lw);
switch(dyp){
case 66565LL:
(dyt) = ((dyl)->nj);
if(eqAddr_((dyt), (nullptr))){
return nullptr;
}
switch((dyt)->lw){
case 5LL:
(dyz)((as_<un>(classTable_, (dyt), 22)));
break;
case 6LL:
(dzb)((as_<brx>(classTable_, (dyt), 48)));
break;
case 4LL:
(dzd)((as_<brr>(classTable_, (dyt), 46)), (dym));
((dyl)->nk) = ((as_<brr>(classTable_, (dyt), 46))->dih);
(dyl) = ((as_<brr>(classTable_, (dyt), 46))->dih);
break;
default:
(ad)((131111LL), ((dyl)->ne), (nullptr));
return nullptr;
break;
}
break;
case 66561LL:
((as_<cbh>(classTable_, (dyl), 76))->cbj) = ((byd)(((as_<cbh>(classTable_, (dyl), 76))->cbj), (dym)));
break;
case 66562LL:
(dzh) = (as_<cbp>(classTable_, (dyl), 80));
(dzi) = ((dzh)->cbx);
awg<List_<cbq*>*>((dzi), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<cbq*>*>((dzi), (new Array_<int64_t>(1, (0LL)))))){
(dzk) = (awk<List_<cbq*>*, cbq*>((dzi), (new Array_<int64_t>(1, (0LL)))));
((dzk)->ccf) = ((byd)(((dzk)->ccf), (dym)));
ayu<List_<cbq*>*>((dzi), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((dzh)->cbs), (nullptr))){
((dzh)->cbs) = ((byd)(((dzh)->cbs), (dym)));
}
break;
case 66563LL:
((as_<ccm>(classTable_, (dyl), 84))->ccr) = ((byd)(((as_<ccm>(classTable_, (dyl), 84))->ccr), (dym)));
break;
case 66564LL:
(dzp) = (as_<ccx>(classTable_, (dyl), 86));
((dzp)->ccy) = ((byd)(((dzp)->ccy), (dym)));
((dzp)->ccz) = ((byd)(((dzp)->ccz), (dym)));
break;
default:
if(!(((((dyp) == (0LL)) || ((dyp) == (1025LL))) || ((dyp) == (1026LL))) || ((dyp) == (1027LL)))){
throw 0xE9170000U;
}
break;
}
return dyl;
}
// refreshStats
static List_<ge*>* bye(List_<ge*>* dzr /*stats*/, gc* dzs /*retType*/, fw* dzt /*parentFunc*/){
List_<ge*>* dzu = nullptr; // stats2
ge* dzw = nullptr; // stat
(dzu) = (new List_<ge*>());
awg<List_<ge*>*>((dzr), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ge*>*>((dzr), (new Array_<int64_t>(1, (0LL)))))){
(dzw) = ((bzg)((awk<List_<ge*>*, ge*>((dzr), (new Array_<int64_t>(1, (0LL))))), (dzs), (dzt)));
if(!eqAddr_((dzw), (nullptr))){
uj<List_<ge*>*, ge*>((dzu), (new Array_<int64_t>(1, (0LL))), (dzw));
}
ayu<List_<ge*>*>((dzr), (new Array_<int64_t>(1, (0LL))));
}
return dzu;
}
// rebuildExpr
static gd* byw(gd* dzz /*ast*/, bool eaa /*nullable*/){
int64_t eae = 0;
if(eqAddr_((dzz), (nullptr))){
return nullptr;
}
switch((dzz)->lw){
case 0LL:
return nullptr;
break;
case 2049LL:
(dzz) = ((eah)((as_<eai>(classTable_, (dzz), 110))));
break;
case 2050LL:
(dzz) = ((eak)((as_<bza>(classTable_, (dzz), 72))));
break;
case 2051LL:
(dzz) = ((eam)((as_<ean>(classTable_, (dzz), 112))));
break;
case 2052LL:
(dzz) = ((eap)((as_<eaq>(classTable_, (dzz), 114))));
break;
case 2053LL:
(dzz) = ((eas)((as_<eat>(classTable_, (dzz), 116))));
break;
case 2054LL:
(dzz) = ((eav)((as_<eaw>(classTable_, (dzz), 118))));
break;
case 2055LL:
(dzz) = ((eay)((as_<eaz>(classTable_, (dzz), 120))));
break;
case 2056LL:
(dzz) = ((ebb)((as_<ebc>(classTable_, (dzz), 122))));
break;
case 2057LL:
(dzz) = ((ebe)((as_<bvw>(classTable_, (dzz), 64))));
break;
case 2058LL:
(dzz) = ((ebg)((as_<ebh>(classTable_, (dzz), 124))));
break;
case 2059LL:
(dzz) = ((ebj)((as_<ebk>(classTable_, (dzz), 126))));
break;
case 67584LL:
(dzz) = ((ebm)((as_<bwp>(classTable_, (dzz), 68))));
break;
case 67585LL:
(dzz) = ((ebo)((as_<bwo>(classTable_, (dzz), 70))));
break;
case 67586LL:
(dzz) = ((ebq)((as_<ebr>(classTable_, (dzz), 128))));
break;
case 67587LL:
(dzz) = ((ebt)((as_<ebu>(classTable_, (dzz), 130))));
break;
case 67588LL:
(dzz) = ((ebw)((as_<ebx>(classTable_, (dzz), 132))));
break;
case 2060LL:
(dzz) = ((ebz)((as_<eca>(classTable_, (dzz), 134))));
break;
case 2062LL:
(dzz) = ((dth)((dzz)));
break;
}
if(eqAddr_((dzz), (nullptr))){
return nullptr;
}
if((!(eaa)) && (eqAddr_(((dzz)->pf), (nullptr)))){
(ad)((131112LL), ((dzz)->ne), (nullptr));
return nullptr;
}
return dzz;
}
// _dtor
static void ecg(bza* ech){
((ech)->bze) = (nullptr);
((ech)->bzf) = (nullptr);
((ech)->pf) = (nullptr);
((ech)->ne) = (nullptr);
((ech)->nf) = (nullptr);
((ech)->ng) = (nullptr);
((ech)->nh) = (nullptr);
((ech)->ni) = (nullptr);
((ech)->nj) = (nullptr);
((ech)->nk) = (nullptr);
}
// _copy
static bza* eci(bza* ecj){
bza* eck = nullptr;
(eck) = (new bza());
((eck)->bzb) = ((ecj)->bzb);
((eck)->bze) = (copy_((ecj)->bze));
((eck)->bzf) = (copy_((ecj)->bzf));
((eck)->pf) = (copy_((ecj)->pf));
((eck)->pj) = ((ecj)->pj);
((eck)->ne) = (copy_((ecj)->ne));
((eck)->nf) = (copy_((ecj)->nf));
((eck)->ng) = (copy_((ecj)->ng));
((eck)->nh) = (copy_((ecj)->nh));
((eck)->ni) = (copy_((ecj)->ni));
((eck)->nj) = (copy_((ecj)->nj));
((eck)->nk) = (copy_((ecj)->nk));
((eck)->no) = ((ecj)->no);
((eck)->lw) = ((ecj)->lw);
return as_<bza>(classTable_, (eck), 72);
}
// _toBin
static Array_<uint8_t>* ecl(bza* ecm){
Array_<uint8_t>* ecn = nullptr;
(ecn) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->bzb)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->bze)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->bzf)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->pf)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->pj)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->ne)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->nf)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->ng)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->nh)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->ni)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->nj)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->nk)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->no)));
(ecn) = ((ecn)->Cat(toBin_((ecm)->lw)));
return ecn;
}
// _fromBin
static bza* edc(bza* edd, Array_<uint8_t>* ede, int64_t* edf){
bza* edg = nullptr;
(edg) = (new bza());
((edg)->bzb) = (fromBin_<int64_t>((ede), (*edf)));
((edg)->bze) = (fromBin_<gd*>((ede), (*edf)));
((edg)->bzf) = (fromBin_<gd*>((ede), (*edf)));
((edg)->pf) = (fromBin_<gc*>((ede), (*edf)));
((edg)->pj) = (fromBin_<int64_t>((ede), (*edf)));
((edg)->ne) = (fromBin_<ga*>((ede), (*edf)));
((edg)->nf) = (fromBin_<Array_<char16_t>*>((ede), (*edf)));
((edg)->ng) = (fromBin_<fx*>((ede), (*edf)));
((edg)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ede), (*edf)));
((edg)->ni) = (fromBin_<Array_<char16_t>*>((ede), (*edf)));
((edg)->nj) = (fromBin_<fx*>((ede), (*edf)));
((edg)->nk) = (fromBin_<fy*>((ede), (*edf)));
((edg)->no) = (fromBin_<bool>((ede), (*edf)));
((edg)->lw) = (fromBin_<int64_t>((ede), (*edf)));
return edg;
}
// rebuildStat
static ge* bzg(ge* edh /*ast*/, gc* edi /*retType*/, fw* edj /*parentFunc*/){
int64_t edn = 0;
edr* edq = nullptr; // ast2
gb* edu = nullptr; // arg
List_<cbq*>* edx = nullptr; // args
un* edy = nullptr; // refClass
List_<uo*>* edz = nullptr; // items
uo* eed = nullptr; // item
gd* eeg = nullptr; // astRef
bvt* eek = nullptr; // astDo
bza* eem = nullptr; // astAssign
gd* eeo = nullptr; // astRef
if(eqAddr_((edh), (nullptr))){
return nullptr;
}
switch((edh)->lw){
case 514LL:
case 516LL:
case 517LL:
case 518LL:
case 519LL:
return nullptr;
break;
case 515LL:
(edq) = (as_<edr>(classTable_, (edh), 136));
(eds)(((edq)->edt));
(edu) = (((edq)->edt)->bgm);
if((!eqAddr_(((edu)->nf), (nullptr))) && (cmp_(((edu)->nf), (new Array_<char16_t>(5, u'\u0073', u'\u0075', u'\u0070', u'\u0065', u'\u0072'))) == 0)){
if(!((!eqAddr_((edj), (nullptr))) && (!eqAddr_(((edj)->nf), (nullptr))))){
throw 0xE9170000U;
}
if(!((((edu)->qf)->lw) == (66562LL))){
throw 0xE9170000U;
}
(edx) = ((as_<cbp>(classTable_, ((edu)->qf), 80))->cbx);
awg<List_<cbq*>*>((edx), (new Array_<int64_t>(1, (0LL))));
(edy) = (as_<un>(classTable_, (((awk<List_<cbq*>*, cbq*>((edx), (new Array_<int64_t>(1, (0LL)))))->ccf)->nj), 22));
if(!(((edy)->lw) == (5LL))){
throw 0xE9170000U;
}
(edz) = ((edy)->bai);
awg<List_<uo*>*>((edz), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((edz), (new Array_<int64_t>(1, (0LL)))))){
(eed) = (awk<List_<uo*>*, uo*>((edz), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((((eed)->azn)->nf), (nullptr))) && (cmp_((((eed)->azn)->nf), ((edj)->nf)) == 0)){
if(!((eed)->azt)){
throw 0xE9170000U;
}
(eeg) = (new gd());
(bvy)((eeg), (2062LL), ((edh)->ne));
((eeg)->nj) = (((eed)->azo)->azn);
((edu)->qg) = (eeg);
break;
}
ayu<List_<uo*>*>((edz), (new Array_<int64_t>(1, (0LL))));
}
if(!(!(awi<List_<uo*>*>((edz), (new Array_<int64_t>(1, (0LL))))))){
throw 0xE9170000U;
}
}
if(eqAddr_(((edu)->qg), (nullptr))){
return nullptr;
}
(eek) = (new bvt());
(buq)((eek), (528LL), ((edh)->ne));
(eem) = (new bza());
(bvy)((eem), (2050LL), ((edh)->ne));
((eem)->bzb) = (0LL);
(eeo) = (new gd());
(bvy)((eeo), (2062LL), ((edh)->ne));
((eeo)->nj) = (edu);
((eem)->bze) = (eeo);
((eem)->bzf) = ((edu)->qg);
((eek)->bwd) = (eem);
((edu)->qg) = (nullptr);
(edh) = ((bzg)((eek), (edi), (edj)));
break;
case 66049LL:
(edh) = ((eeq)((as_<ckg>(classTable_, (edh), 88)), (edi), (edj)));
break;
case 66050LL:
(edh) = ((ees)((as_<ckk>(classTable_, (edh), 92)), (edi), (edj)));
break;
case 16843265LL:
(edh) = ((eeu)((as_<cko>(classTable_, (edh), 98)), (edi), (edj)));
break;
case 16843266LL:
(edh) = ((eew)((as_<cks>(classTable_, (edh), 100)), (edi), (edj)));
break;
case 66051LL:
(edh) = ((eey)((as_<but>(classTable_, (edh), 52)), (edi), (edj)));
break;
case 526LL:
(edh) = ((efa)((as_<ckx>(classTable_, (edh), 102))));
break;
case 66052LL:
(edh) = ((efc)((as_<buv>(classTable_, (edh), 54)), (edi), (edj)));
break;
case 527LL:
(edh) = ((efe)((as_<clc>(classTable_, (edh), 104)), (edi)));
break;
case 528LL:
(edh) = ((efg)((as_<bvt>(classTable_, (edh), 62))));
break;
case 529LL:
(edh) = ((efi)((as_<ge>(classTable_, (edh), 16)), (edi), (edj)));
break;
case 530LL:
(edh) = ((efk)((as_<ge>(classTable_, (edh), 16)), (edi), (edj)));
break;
case 531LL:
(edh) = ((efm)((as_<cll>(classTable_, (edh), 106))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(eqAddr_((edh), (nullptr))){
return nullptr;
}
if(!(!eqAddr_(((edh)->nk), (nullptr)))){
throw 0xE9170000U;
}
return edh;
}
// isRef
static bool bzi(gc* efq /*type*/){
int64_t efr = 0; // typeId
(efr) = ((efq)->lw);
return ((((efr) == (66561LL)) || ((efr) == (66563LL))) || ((efr) == (66564LL))) || ((efs)((efq)));
}
// makeExprNull
static bwp* bzp(ga* eft /*pos*/){
bwp* efu = nullptr; // value
efx* efw = nullptr; // type
(efu) = (new bwp());
(bvy)((efu), (67584LL), (eft));
(efw) = (new efx());
(buq)((efw), (1027LL), (eft));
((efu)->pf) = (efw);
return efu;
}
// getId
static Array_<char16_t>* bzv(){
Array_<char16_t>* efy = nullptr; // curId
Array_<char16_t>* efz = nullptr; // newId
int64_t egd = 0; // idx
int64_t egr = 0;
Array_<char16_t>* egu = nullptr;
Array_<char16_t>* egy = nullptr;
Array_<char16_t>* ehc = nullptr;
(efy) = (al);
(efz) = (copy_(al));
while(true){
(egd) = (((efz)->Len()) - (1LL));
while(true){
if(((efz)->At(egd)) == (u'\u007A')){
if((egd) == (0LL)){
(efz) = (newArray_<char16_t, Array_<char16_t>*>(1, (((efz)->Len()) + (1LL))));
egl<Array_<char16_t>*, char16_t>((efz), (new Array_<int64_t>(1, (0LL))), (u'\u0061'));
}
else{
((efz)->At(egd)) = (u'\u0061');
(egd) = ((egd) - (1LL));
continue;
}
}
else{
((efz)->At(egd)) = ((egp)(((efz)->At(egd)), (1LL)));
}
break;
}
switch((efz)->Len()){
case 2LL:
egu = efz;
if(cmp_(egu, (new Array_<char16_t>(2, u'\u0064', u'\u006F'))) == 0 || cmp_(egu, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0 || cmp_(egu, (new Array_<char16_t>(2, u'\u006F', u'\u0072'))) == 0){
continue;
}
break;
case 3LL:
egy = efz;
if(cmp_(egy, (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064'))) == 0 || cmp_(egy, (new Array_<char16_t>(3, u'\u0061', u'\u0073', u'\u006D'))) == 0 || cmp_(egy, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0 || cmp_(egy, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074'))) == 0 || cmp_(egy, (new Array_<char16_t>(3, u'\u006E', u'\u0065', u'\u0077'))) == 0 || cmp_(egy, (new Array_<char16_t>(3, u'\u006E', u'\u006F', u'\u0074'))) == 0 || cmp_(egy, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0 || cmp_(egy, (new Array_<char16_t>(3, u'\u0078', u'\u006F', u'\u0072'))) == 0){
continue;
}
break;
case 4LL:
ehc = efz;
if(cmp_(ehc, (new Array_<char16_t>(4, u'\u0061', u'\u0075', u'\u0074', u'\u006F'))) == 0 || cmp_(ehc, (new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C'))) == 0 || cmp_(ehc, (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065'))) == 0 || cmp_(ehc, (new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072'))) == 0 || cmp_(ehc, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065'))) == 0 || cmp_(ehc, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0 || cmp_(ehc, (new Array_<char16_t>(4, u'\u0067', u'\u006F', u'\u0074', u'\u006F'))) == 0 || cmp_(ehc, (new Array_<char16_t>(4, u'\u006C', u'\u006F', u'\u006E', u'\u0067'))) == 0 || cmp_(ehc, (new Array_<char16_t>(4, u'\u006D', u'\u0061', u'\u0069', u'\u006E'))) == 0 || cmp_(ehc, (new Array_<char16_t>(4, u'\u0074', u'\u0068', u'\u0069', u'\u0073'))) == 0 || cmp_(ehc, (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))) == 0 || cmp_(ehc, (new Array_<char16_t>(4, u'\u0076', u'\u006F', u'\u0069', u'\u0064'))) == 0){
continue;
}
break;
}
break;
}
(al) = (efz);
return efy;
}
// _dtor
static void ehe(cbi* ehf){
((ehf)->ne) = (nullptr);
((ehf)->nf) = (nullptr);
((ehf)->ng) = (nullptr);
((ehf)->nh) = (nullptr);
((ehf)->ni) = (nullptr);
((ehf)->nj) = (nullptr);
((ehf)->nk) = (nullptr);
}
// _copy
static cbi* ehg(cbi* ehh){
cbi* ehi = nullptr;
(ehi) = (new cbi());
((ehi)->ne) = (copy_((ehh)->ne));
((ehi)->nf) = (copy_((ehh)->nf));
((ehi)->ng) = (copy_((ehh)->ng));
((ehi)->nh) = (copy_((ehh)->nh));
((ehi)->ni) = (copy_((ehh)->ni));
((ehi)->nj) = (copy_((ehh)->nj));
((ehi)->nk) = (copy_((ehh)->nk));
((ehi)->no) = ((ehh)->no);
((ehi)->lw) = ((ehh)->lw);
return as_<cbi>(classTable_, (ehi), 74);
}
// _toBin
static Array_<uint8_t>* ehj(cbi* ehk){
Array_<uint8_t>* ehl = nullptr;
(ehl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ehl) = ((ehl)->Cat(toBin_((ehk)->ne)));
(ehl) = ((ehl)->Cat(toBin_((ehk)->nf)));
(ehl) = ((ehl)->Cat(toBin_((ehk)->ng)));
(ehl) = ((ehl)->Cat(toBin_((ehk)->nh)));
(ehl) = ((ehl)->Cat(toBin_((ehk)->ni)));
(ehl) = ((ehl)->Cat(toBin_((ehk)->nj)));
(ehl) = ((ehl)->Cat(toBin_((ehk)->nk)));
(ehl) = ((ehl)->Cat(toBin_((ehk)->no)));
(ehl) = ((ehl)->Cat(toBin_((ehk)->lw)));
return ehl;
}
// _fromBin
static cbi* ehv(cbi* ehw, Array_<uint8_t>* ehx, int64_t* ehy){
cbi* ehz = nullptr;
(ehz) = (new cbi());
((ehz)->ne) = (fromBin_<ga*>((ehx), (*ehy)));
((ehz)->nf) = (fromBin_<Array_<char16_t>*>((ehx), (*ehy)));
((ehz)->ng) = (fromBin_<fx*>((ehx), (*ehy)));
((ehz)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ehx), (*ehy)));
((ehz)->ni) = (fromBin_<Array_<char16_t>*>((ehx), (*ehy)));
((ehz)->nj) = (fromBin_<fx*>((ehx), (*ehy)));
((ehz)->nk) = (fromBin_<fy*>((ehx), (*ehy)));
((ehz)->no) = (fromBin_<bool>((ehx), (*ehy)));
((ehz)->lw) = (fromBin_<int64_t>((ehx), (*ehy)));
return ehz;
}
// _dtor
static void eia(cbh* eib){
((eib)->cbj) = (nullptr);
((eib)->ne) = (nullptr);
((eib)->nf) = (nullptr);
((eib)->ng) = (nullptr);
((eib)->nh) = (nullptr);
((eib)->ni) = (nullptr);
((eib)->nj) = (nullptr);
((eib)->nk) = (nullptr);
}
// _copy
static cbh* eic(cbh* eid){
cbh* eie = nullptr;
(eie) = (new cbh());
((eie)->cbj) = (copy_((eid)->cbj));
((eie)->ne) = (copy_((eid)->ne));
((eie)->nf) = (copy_((eid)->nf));
((eie)->ng) = (copy_((eid)->ng));
((eie)->nh) = (copy_((eid)->nh));
((eie)->ni) = (copy_((eid)->ni));
((eie)->nj) = (copy_((eid)->nj));
((eie)->nk) = (copy_((eid)->nk));
((eie)->no) = ((eid)->no);
((eie)->lw) = ((eid)->lw);
return as_<cbh>(classTable_, (eie), 76);
}
// _toBin
static Array_<uint8_t>* eif(cbh* eig){
Array_<uint8_t>* eih = nullptr;
(eih) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eih) = ((eih)->Cat(toBin_((eig)->cbj)));
(eih) = ((eih)->Cat(toBin_((eig)->ne)));
(eih) = ((eih)->Cat(toBin_((eig)->nf)));
(eih) = ((eih)->Cat(toBin_((eig)->ng)));
(eih) = ((eih)->Cat(toBin_((eig)->nh)));
(eih) = ((eih)->Cat(toBin_((eig)->ni)));
(eih) = ((eih)->Cat(toBin_((eig)->nj)));
(eih) = ((eih)->Cat(toBin_((eig)->nk)));
(eih) = ((eih)->Cat(toBin_((eig)->no)));
(eih) = ((eih)->Cat(toBin_((eig)->lw)));
return eih;
}
// _fromBin
static cbh* eis(cbh* eit, Array_<uint8_t>* eiu, int64_t* eiv){
cbh* eiw = nullptr;
(eiw) = (new cbh());
((eiw)->cbj) = (fromBin_<gc*>((eiu), (*eiv)));
((eiw)->ne) = (fromBin_<ga*>((eiu), (*eiv)));
((eiw)->nf) = (fromBin_<Array_<char16_t>*>((eiu), (*eiv)));
((eiw)->ng) = (fromBin_<fx*>((eiu), (*eiv)));
((eiw)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eiu), (*eiv)));
((eiw)->ni) = (fromBin_<Array_<char16_t>*>((eiu), (*eiv)));
((eiw)->nj) = (fromBin_<fx*>((eiu), (*eiv)));
((eiw)->nk) = (fromBin_<fy*>((eiu), (*eiv)));
((eiw)->no) = (fromBin_<bool>((eiu), (*eiv)));
((eiw)->lw) = (fromBin_<int64_t>((eiu), (*eiv)));
return eiw;
}
// _dtor
static void eix(cbl* eiy){
((eiy)->ne) = (nullptr);
((eiy)->nf) = (nullptr);
((eiy)->ng) = (nullptr);
((eiy)->nh) = (nullptr);
((eiy)->ni) = (nullptr);
((eiy)->nj) = (nullptr);
((eiy)->nk) = (nullptr);
}
// _copy
static cbl* eiz(cbl* eja){
cbl* ejb = nullptr;
(ejb) = (new cbl());
((ejb)->cbm) = ((eja)->cbm);
((ejb)->ne) = (copy_((eja)->ne));
((ejb)->nf) = (copy_((eja)->nf));
((ejb)->ng) = (copy_((eja)->ng));
((ejb)->nh) = (copy_((eja)->nh));
((ejb)->ni) = (copy_((eja)->ni));
((ejb)->nj) = (copy_((eja)->nj));
((ejb)->nk) = (copy_((eja)->nk));
((ejb)->no) = ((eja)->no);
((ejb)->lw) = ((eja)->lw);
return as_<cbl>(classTable_, (ejb), 78);
}
// _toBin
static Array_<uint8_t>* ejc(cbl* ejd){
Array_<uint8_t>* eje = nullptr;
(eje) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eje) = ((eje)->Cat(toBin_((ejd)->cbm)));
(eje) = ((eje)->Cat(toBin_((ejd)->ne)));
(eje) = ((eje)->Cat(toBin_((ejd)->nf)));
(eje) = ((eje)->Cat(toBin_((ejd)->ng)));
(eje) = ((eje)->Cat(toBin_((ejd)->nh)));
(eje) = ((eje)->Cat(toBin_((ejd)->ni)));
(eje) = ((eje)->Cat(toBin_((ejd)->nj)));
(eje) = ((eje)->Cat(toBin_((ejd)->nk)));
(eje) = ((eje)->Cat(toBin_((ejd)->no)));
(eje) = ((eje)->Cat(toBin_((ejd)->lw)));
return eje;
}
// _fromBin
static cbl* ejp(cbl* ejq, Array_<uint8_t>* ejr, int64_t* ejs){
cbl* ejt = nullptr;
(ejt) = (new cbl());
((ejt)->cbm) = (fromBin_<int64_t>((ejr), (*ejs)));
((ejt)->ne) = (fromBin_<ga*>((ejr), (*ejs)));
((ejt)->nf) = (fromBin_<Array_<char16_t>*>((ejr), (*ejs)));
((ejt)->ng) = (fromBin_<fx*>((ejr), (*ejs)));
((ejt)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ejr), (*ejs)));
((ejt)->ni) = (fromBin_<Array_<char16_t>*>((ejr), (*ejs)));
((ejt)->nj) = (fromBin_<fx*>((ejr), (*ejs)));
((ejt)->nk) = (fromBin_<fy*>((ejr), (*ejs)));
((ejt)->no) = (fromBin_<bool>((ejr), (*ejs)));
((ejt)->lw) = (fromBin_<int64_t>((ejr), (*ejs)));
return ejt;
}
// _dtor
static void eju(cbq* ejv){
((ejv)->ccf) = (nullptr);
}
// _copy
static cbq* ejw(cbq* ejx){
cbq* ejy = nullptr;
(ejy) = (new cbq());
((ejy)->ccf) = (copy_((ejx)->ccf));
((ejy)->cch) = ((ejx)->cch);
return as_<cbq>(classTable_, (ejy), 82);
}
// _toBin
static Array_<uint8_t>* ejz(cbq* eka){
Array_<uint8_t>* ekb = nullptr;
(ekb) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ekb) = ((ekb)->Cat(toBin_((eka)->ccf)));
(ekb) = ((ekb)->Cat(toBin_((eka)->cch)));
return ekb;
}
// _fromBin
static cbq* eke(cbq* ekf, Array_<uint8_t>* ekg, int64_t* ekh){
cbq* eki = nullptr;
(eki) = (new cbq());
((eki)->ccf) = (fromBin_<gc*>((ekg), (*ekh)));
((eki)->cch) = (fromBin_<bool>((ekg), (*ekh)));
return eki;
}
// _dtor
static void ekj(cbp* ekk){
((ekk)->ekl) = (nullptr);
((ekk)->cbx) = (nullptr);
((ekk)->cbs) = (nullptr);
((ekk)->ne) = (nullptr);
((ekk)->nf) = (nullptr);
((ekk)->ng) = (nullptr);
((ekk)->nh) = (nullptr);
((ekk)->ni) = (nullptr);
((ekk)->nj) = (nullptr);
((ekk)->nk) = (nullptr);
}
// _copy
static cbp* ekm(cbp* ekn){
cbp* eko = nullptr;
(eko) = (new cbp());
((eko)->ekp) = ((ekn)->ekp);
((eko)->ekl) = (copy_((ekn)->ekl));
((eko)->cbx) = (copy_((ekn)->cbx));
((eko)->cbs) = (copy_((ekn)->cbs));
((eko)->ne) = (copy_((ekn)->ne));
((eko)->nf) = (copy_((ekn)->nf));
((eko)->ng) = (copy_((ekn)->ng));
((eko)->nh) = (copy_((ekn)->nh));
((eko)->ni) = (copy_((ekn)->ni));
((eko)->nj) = (copy_((ekn)->nj));
((eko)->nk) = (copy_((ekn)->nk));
((eko)->no) = ((ekn)->no);
((eko)->lw) = ((ekn)->lw);
return as_<cbp>(classTable_, (eko), 80);
}
// _toBin
static Array_<uint8_t>* ekq(cbp* ekr){
Array_<uint8_t>* eks = nullptr;
(eks) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eks) = ((eks)->Cat(toBin_((ekr)->ekp)));
(eks) = ((eks)->Cat(toBin_((ekr)->ekl)));
(eks) = ((eks)->Cat(toBin_((ekr)->cbx)));
(eks) = ((eks)->Cat(toBin_((ekr)->cbs)));
(eks) = ((eks)->Cat(toBin_((ekr)->ne)));
(eks) = ((eks)->Cat(toBin_((ekr)->nf)));
(eks) = ((eks)->Cat(toBin_((ekr)->ng)));
(eks) = ((eks)->Cat(toBin_((ekr)->nh)));
(eks) = ((eks)->Cat(toBin_((ekr)->ni)));
(eks) = ((eks)->Cat(toBin_((ekr)->nj)));
(eks) = ((eks)->Cat(toBin_((ekr)->nk)));
(eks) = ((eks)->Cat(toBin_((ekr)->no)));
(eks) = ((eks)->Cat(toBin_((ekr)->lw)));
return eks;
}
// _fromBin
static cbp* elg(cbp* elh, Array_<uint8_t>* eli, int64_t* elj){
cbp* elk = nullptr;
(elk) = (new cbp());
((elk)->ekp) = (fromBin_<int64_t>((eli), (*elj)));
((elk)->ekl) = (fromBin_<List_<Array_<char16_t>*>*>((eli), (*elj)));
((elk)->cbx) = (fromBin_<List_<cbq*>*>((eli), (*elj)));
((elk)->cbs) = (fromBin_<gc*>((eli), (*elj)));
((elk)->ne) = (fromBin_<ga*>((eli), (*elj)));
((elk)->nf) = (fromBin_<Array_<char16_t>*>((eli), (*elj)));
((elk)->ng) = (fromBin_<fx*>((eli), (*elj)));
((elk)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eli), (*elj)));
((elk)->ni) = (fromBin_<Array_<char16_t>*>((eli), (*elj)));
((elk)->nj) = (fromBin_<fx*>((eli), (*elj)));
((elk)->nk) = (fromBin_<fy*>((eli), (*elj)));
((elk)->no) = (fromBin_<bool>((eli), (*elj)));
((elk)->lw) = (fromBin_<int64_t>((eli), (*elj)));
return elk;
}
// _dtor
static void ell(ccm* elm){
((elm)->ccr) = (nullptr);
((elm)->ne) = (nullptr);
((elm)->nf) = (nullptr);
((elm)->ng) = (nullptr);
((elm)->nh) = (nullptr);
((elm)->ni) = (nullptr);
((elm)->nj) = (nullptr);
((elm)->nk) = (nullptr);
}
// _copy
static ccm* eln(ccm* elo){
ccm* elp = nullptr;
(elp) = (new ccm());
((elp)->ccp) = ((elo)->ccp);
((elp)->ccr) = (copy_((elo)->ccr));
((elp)->ne) = (copy_((elo)->ne));
((elp)->nf) = (copy_((elo)->nf));
((elp)->ng) = (copy_((elo)->ng));
((elp)->nh) = (copy_((elo)->nh));
((elp)->ni) = (copy_((elo)->ni));
((elp)->nj) = (copy_((elo)->nj));
((elp)->nk) = (copy_((elo)->nk));
((elp)->no) = ((elo)->no);
((elp)->lw) = ((elo)->lw);
return as_<ccm>(classTable_, (elp), 84);
}
// _toBin
static Array_<uint8_t>* elq(ccm* elr){
Array_<uint8_t>* els = nullptr;
(els) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(els) = ((els)->Cat(toBin_((elr)->ccp)));
(els) = ((els)->Cat(toBin_((elr)->ccr)));
(els) = ((els)->Cat(toBin_((elr)->ne)));
(els) = ((els)->Cat(toBin_((elr)->nf)));
(els) = ((els)->Cat(toBin_((elr)->ng)));
(els) = ((els)->Cat(toBin_((elr)->nh)));
(els) = ((els)->Cat(toBin_((elr)->ni)));
(els) = ((els)->Cat(toBin_((elr)->nj)));
(els) = ((els)->Cat(toBin_((elr)->nk)));
(els) = ((els)->Cat(toBin_((elr)->no)));
(els) = ((els)->Cat(toBin_((elr)->lw)));
return els;
}
// _fromBin
static ccm* eme(ccm* emf, Array_<uint8_t>* emg, int64_t* emh){
ccm* emi = nullptr;
(emi) = (new ccm());
((emi)->ccp) = (fromBin_<int64_t>((emg), (*emh)));
((emi)->ccr) = (fromBin_<gc*>((emg), (*emh)));
((emi)->ne) = (fromBin_<ga*>((emg), (*emh)));
((emi)->nf) = (fromBin_<Array_<char16_t>*>((emg), (*emh)));
((emi)->ng) = (fromBin_<fx*>((emg), (*emh)));
((emi)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((emg), (*emh)));
((emi)->ni) = (fromBin_<Array_<char16_t>*>((emg), (*emh)));
((emi)->nj) = (fromBin_<fx*>((emg), (*emh)));
((emi)->nk) = (fromBin_<fy*>((emg), (*emh)));
((emi)->no) = (fromBin_<bool>((emg), (*emh)));
((emi)->lw) = (fromBin_<int64_t>((emg), (*emh)));
return emi;
}
// _dtor
static void emj(ccx* emk){
((emk)->ccy) = (nullptr);
((emk)->ccz) = (nullptr);
((emk)->ne) = (nullptr);
((emk)->nf) = (nullptr);
((emk)->ng) = (nullptr);
((emk)->nh) = (nullptr);
((emk)->ni) = (nullptr);
((emk)->nj) = (nullptr);
((emk)->nk) = (nullptr);
}
// _copy
static ccx* eml(ccx* emm){
ccx* emn = nullptr;
(emn) = (new ccx());
((emn)->ccy) = (copy_((emm)->ccy));
((emn)->ccz) = (copy_((emm)->ccz));
((emn)->ne) = (copy_((emm)->ne));
((emn)->nf) = (copy_((emm)->nf));
((emn)->ng) = (copy_((emm)->ng));
((emn)->nh) = (copy_((emm)->nh));
((emn)->ni) = (copy_((emm)->ni));
((emn)->nj) = (copy_((emm)->nj));
((emn)->nk) = (copy_((emm)->nk));
((emn)->no) = ((emm)->no);
((emn)->lw) = ((emm)->lw);
return as_<ccx>(classTable_, (emn), 86);
}
// _toBin
static Array_<uint8_t>* emo(ccx* emp){
Array_<uint8_t>* emq = nullptr;
(emq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(emq) = ((emq)->Cat(toBin_((emp)->ccy)));
(emq) = ((emq)->Cat(toBin_((emp)->ccz)));
(emq) = ((emq)->Cat(toBin_((emp)->ne)));
(emq) = ((emq)->Cat(toBin_((emp)->nf)));
(emq) = ((emq)->Cat(toBin_((emp)->ng)));
(emq) = ((emq)->Cat(toBin_((emp)->nh)));
(emq) = ((emq)->Cat(toBin_((emp)->ni)));
(emq) = ((emq)->Cat(toBin_((emp)->nj)));
(emq) = ((emq)->Cat(toBin_((emp)->nk)));
(emq) = ((emq)->Cat(toBin_((emp)->no)));
(emq) = ((emq)->Cat(toBin_((emp)->lw)));
return emq;
}
// _fromBin
static ccx* enc(ccx* end, Array_<uint8_t>* ene, int64_t* enf){
ccx* eng = nullptr;
(eng) = (new ccx());
((eng)->ccy) = (fromBin_<gc*>((ene), (*enf)));
((eng)->ccz) = (fromBin_<gc*>((ene), (*enf)));
((eng)->ne) = (fromBin_<ga*>((ene), (*enf)));
((eng)->nf) = (fromBin_<Array_<char16_t>*>((ene), (*enf)));
((eng)->ng) = (fromBin_<fx*>((ene), (*enf)));
((eng)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ene), (*enf)));
((eng)->ni) = (fromBin_<Array_<char16_t>*>((ene), (*enf)));
((eng)->nj) = (fromBin_<fx*>((ene), (*enf)));
((eng)->nk) = (fromBin_<fy*>((ene), (*enf)));
((eng)->no) = (fromBin_<bool>((ene), (*enf)));
((eng)->lw) = (fromBin_<int64_t>((ene), (*enf)));
return eng;
}
// search
static bca* cia(List_<uo*>* enh /*members*/, Array_<char16_t>* eni /*name*/){
fx* enk = nullptr; // def
awg<List_<uo*>*>((enh), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((enh), (new Array_<int64_t>(1, (0LL)))))){
(enk) = ((awk<List_<uo*>*, uo*>((enh), (new Array_<int64_t>(1, (0LL)))))->azn);
if(((((enk)->lw) == (2LL)) && (!eqAddr_((((as_<bgk>(classTable_, (enk), 38))->bgm)->nf), (nullptr)))) && (cmp_((((as_<bgk>(classTable_, (enk), 38))->bgm)->nf), (eni)) == 0)){
return (bbz)(((as_<bgk>(classTable_, (enk), 38))->bgm));
}
ayu<List_<uo*>*>((enh), (new Array_<int64_t>(1, (0LL))));
}
if(!(false)){
throw 0xE9170000U;
}
return nullptr;
}
// buildIf
static void ckf(ckg* enn /*ast*/, ge* eno /*breakStat*/, ge* enp /*skipStat*/){
bca* enq = nullptr; // infoMe
List_<ckh*>* enz = nullptr; // items
ckh* eoc = nullptr; // item
(enq) = ((bbz)((enn)));
if(eqAddr_(((enn)->ens), (nullptr))){
(ckz)(((enn)->enu), (eno), (enp));
if((!eqAddr_(((enq)->bzy), (nullptr))) && ((enq)->cae)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((enq)->bzy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
return;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
(enx)(((enn)->ens));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(ckz)(((enn)->enu), (eno), (enp));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(enz) = ((enn)->eoa);
awg<List_<ckh*>*>((enz), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ckh*>*>((enz), (new Array_<int64_t>(1, (0LL)))))){
(eoc) = (awk<List_<ckh*>*, ckh*>((enz), (new Array_<int64_t>(1, (0LL)))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
(enx)(((eoc)->eod));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(ckz)(((eoc)->eoe), (eno), (enp));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ayu<List_<ckh*>*>((enz), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((enn)->eog), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
(ckz)(((enn)->eog), (eno), (enp));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
if((!eqAddr_(((enq)->bzy), (nullptr))) && ((enq)->cae)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((enq)->bzy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void eok(ckh* eol){
((eol)->eod) = (nullptr);
((eol)->eoe) = (nullptr);
((eol)->ne) = (nullptr);
((eol)->nf) = (nullptr);
((eol)->ng) = (nullptr);
((eol)->nh) = (nullptr);
((eol)->ni) = (nullptr);
((eol)->nj) = (nullptr);
((eol)->nk) = (nullptr);
}
// _copy
static ckh* eom(ckh* eon){
ckh* eoo = nullptr;
(eoo) = (new ckh());
((eoo)->eod) = (copy_((eon)->eod));
((eoo)->eoe) = (copy_((eon)->eoe));
((eoo)->ne) = (copy_((eon)->ne));
((eoo)->nf) = (copy_((eon)->nf));
((eoo)->ng) = (copy_((eon)->ng));
((eoo)->nh) = (copy_((eon)->nh));
((eoo)->ni) = (copy_((eon)->ni));
((eoo)->nj) = (copy_((eon)->nj));
((eoo)->nk) = (copy_((eon)->nk));
((eoo)->no) = ((eon)->no);
((eoo)->lw) = ((eon)->lw);
return as_<ckh>(classTable_, (eoo), 90);
}
// _toBin
static Array_<uint8_t>* eop(ckh* eoq){
Array_<uint8_t>* eor = nullptr;
(eor) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eor) = ((eor)->Cat(toBin_((eoq)->eod)));
(eor) = ((eor)->Cat(toBin_((eoq)->eoe)));
(eor) = ((eor)->Cat(toBin_((eoq)->ne)));
(eor) = ((eor)->Cat(toBin_((eoq)->nf)));
(eor) = ((eor)->Cat(toBin_((eoq)->ng)));
(eor) = ((eor)->Cat(toBin_((eoq)->nh)));
(eor) = ((eor)->Cat(toBin_((eoq)->ni)));
(eor) = ((eor)->Cat(toBin_((eoq)->nj)));
(eor) = ((eor)->Cat(toBin_((eoq)->nk)));
(eor) = ((eor)->Cat(toBin_((eoq)->no)));
(eor) = ((eor)->Cat(toBin_((eoq)->lw)));
return eor;
}
// _fromBin
static ckh* epd(ckh* epe, Array_<uint8_t>* epf, int64_t* epg){
ckh* eph = nullptr;
(eph) = (new ckh());
((eph)->eod) = (fromBin_<gd*>((epf), (*epg)));
((eph)->eoe) = (fromBin_<buv*>((epf), (*epg)));
((eph)->ne) = (fromBin_<ga*>((epf), (*epg)));
((eph)->nf) = (fromBin_<Array_<char16_t>*>((epf), (*epg)));
((eph)->ng) = (fromBin_<fx*>((epf), (*epg)));
((eph)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((epf), (*epg)));
((eph)->ni) = (fromBin_<Array_<char16_t>*>((epf), (*epg)));
((eph)->nj) = (fromBin_<fx*>((epf), (*epg)));
((eph)->nk) = (fromBin_<fy*>((epf), (*epg)));
((eph)->no) = (fromBin_<bool>((epf), (*epg)));
((eph)->lw) = (fromBin_<int64_t>((epf), (*epg)));
return eph;
}
// _dtor
static void epi(ckg* epj){
((epj)->ens) = (nullptr);
((epj)->enu) = (nullptr);
((epj)->eoa) = (nullptr);
((epj)->eog) = (nullptr);
((epj)->bve) = (nullptr);
((epj)->ne) = (nullptr);
((epj)->nf) = (nullptr);
((epj)->ng) = (nullptr);
((epj)->nh) = (nullptr);
((epj)->ni) = (nullptr);
((epj)->nj) = (nullptr);
((epj)->nk) = (nullptr);
}
// _copy
static ckg* epk(ckg* epl){
ckg* epm = nullptr;
(epm) = (new ckg());
((epm)->ens) = (copy_((epl)->ens));
((epm)->enu) = (copy_((epl)->enu));
((epm)->eoa) = (copy_((epl)->eoa));
((epm)->eog) = (copy_((epl)->eog));
((epm)->bve) = (copy_((epl)->bve));
((epm)->ne) = (copy_((epl)->ne));
((epm)->nf) = (copy_((epl)->nf));
((epm)->ng) = (copy_((epl)->ng));
((epm)->nh) = (copy_((epl)->nh));
((epm)->ni) = (copy_((epl)->ni));
((epm)->nj) = (copy_((epl)->nj));
((epm)->nk) = (copy_((epl)->nk));
((epm)->no) = ((epl)->no);
((epm)->lw) = ((epl)->lw);
return as_<ckg>(classTable_, (epm), 88);
}
// _toBin
static Array_<uint8_t>* epn(ckg* epo){
Array_<uint8_t>* epp = nullptr;
(epp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(epp) = ((epp)->Cat(toBin_((epo)->ens)));
(epp) = ((epp)->Cat(toBin_((epo)->enu)));
(epp) = ((epp)->Cat(toBin_((epo)->eoa)));
(epp) = ((epp)->Cat(toBin_((epo)->eog)));
(epp) = ((epp)->Cat(toBin_((epo)->bve)));
(epp) = ((epp)->Cat(toBin_((epo)->ne)));
(epp) = ((epp)->Cat(toBin_((epo)->nf)));
(epp) = ((epp)->Cat(toBin_((epo)->ng)));
(epp) = ((epp)->Cat(toBin_((epo)->nh)));
(epp) = ((epp)->Cat(toBin_((epo)->ni)));
(epp) = ((epp)->Cat(toBin_((epo)->nj)));
(epp) = ((epp)->Cat(toBin_((epo)->nk)));
(epp) = ((epp)->Cat(toBin_((epo)->no)));
(epp) = ((epp)->Cat(toBin_((epo)->lw)));
return epp;
}
// _fromBin
static ckg* eqe(ckg* eqf, Array_<uint8_t>* eqg, int64_t* eqh){
ckg* eqi = nullptr;
(eqi) = (new ckg());
((eqi)->ens) = (fromBin_<gd*>((eqg), (*eqh)));
((eqi)->enu) = (fromBin_<buv*>((eqg), (*eqh)));
((eqi)->eoa) = (fromBin_<List_<ckh*>*>((eqg), (*eqh)));
((eqi)->eog) = (fromBin_<buv*>((eqg), (*eqh)));
((eqi)->bve) = (fromBin_<gb*>((eqg), (*eqh)));
((eqi)->ne) = (fromBin_<ga*>((eqg), (*eqh)));
((eqi)->nf) = (fromBin_<Array_<char16_t>*>((eqg), (*eqh)));
((eqi)->ng) = (fromBin_<fx*>((eqg), (*eqh)));
((eqi)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eqg), (*eqh)));
((eqi)->ni) = (fromBin_<Array_<char16_t>*>((eqg), (*eqh)));
((eqi)->nj) = (fromBin_<fx*>((eqg), (*eqh)));
((eqi)->nk) = (fromBin_<fy*>((eqg), (*eqh)));
((eqi)->no) = (fromBin_<bool>((eqg), (*eqh)));
((eqi)->lw) = (fromBin_<int64_t>((eqg), (*eqh)));
return eqi;
}
// buildSwitch
static void ckj(ckk* eqj /*ast*/, ge* eqk /*breakStat*/, ge* eql /*skipStat*/){
bca* eqm = nullptr; // infoMe
bca* eqn = nullptr; // info
bool eqq = false; // useSwitch
List_<ckl*>* eqw = nullptr; // items
ckl* eqz = nullptr; // item
List_<bux*>* era = nullptr; // items2
bux* erd = nullptr; // exprs
List_<ckl*>* erj = nullptr; // items
ckl* erl = nullptr; // item
List_<bux*>* erm = nullptr; // items2
bux* ero = nullptr; // exprs
bool erv = false; // first
List_<ckl*>* erw = nullptr; // items
ckl* ery = nullptr; // item
bool esc = false; // first2
List_<bux*>* esd = nullptr; // items2
bux* esf = nullptr; // exprs
(eqm) = ((bbz)((eqj)));
(eqn) = ((bbz)(((eqj)->bve)));
if(!((eqn)->bcc)){
((eqn)->bcc) = (true);
uj<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), ((eqj)->bve));
}
(eqq) = (false);
if(((((bdi)((((eqj)->eqt)->pf))) || ((equ)((((eqj)->eqt)->pf)))) || ((cma)((((eqj)->eqt)->pf)))) || (((((eqj)->eqt)->pf)->lw) == (1025LL))){
(eqq) = (true);
(eqw) = ((eqj)->eqx);
awg<List_<ckl*>*>((eqw), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ckl*>*>((eqw), (new Array_<int64_t>(1, (0LL)))))){
(eqz) = (awk<List_<ckl*>*, ckl*>((eqw), (new Array_<int64_t>(1, (0LL)))));
(era) = ((eqz)->erb);
awg<List_<bux*>*>((era), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bux*>*>((era), (new Array_<int64_t>(1, (0LL)))))){
(erd) = (awk<List_<bux*>*, bux*>((era), (new Array_<int64_t>(1, (0LL)))));
if(((ayg<int64_t>((((erd)->bwt)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL)) || (!eqAddr_(((erd)->bwy), (nullptr)))){
(eqq) = (false);
goto eqs;
}
ayu<List_<bux*>*>((era), (new Array_<int64_t>(1, (0LL))));
}
ayu<List_<ckl*>*>((eqw), (new Array_<int64_t>(1, (0LL))));
}
}
eqs:;
if(eqq){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028')));
(enx)(((eqj)->eqt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(erj) = ((eqj)->eqx);
awg<List_<ckl*>*>((erj), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ckl*>*>((erj), (new Array_<int64_t>(1, (0LL)))))){
(erl) = (awk<List_<ckl*>*, ckl*>((erj), (new Array_<int64_t>(1, (0LL)))));
(erm) = ((erl)->erb);
awg<List_<bux*>*>((erm), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bux*>*>((erm), (new Array_<int64_t>(1, (0LL)))))){
(ero) = (awk<List_<bux*>*, bux*>((erm), (new Array_<int64_t>(1, (0LL)))));
if(!(eqAddr_(((ero)->bwy), (nullptr)))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020')));
(enx)(((ero)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003A', u'\u000A')));
ayu<List_<bux*>*>((erm), (new Array_<int64_t>(1, (0LL))));
}
(ckz)(((erl)->erp), (eqj), (eql));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
ayu<List_<ckl*>*>((erj), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((eqj)->err), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
(ckz)(((eqj)->err), (eqj), (eql));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((eqn)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))));
(enx)(((eqj)->eqt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
(erv) = (true);
(erw) = ((eqj)->eqx);
awg<List_<ckl*>*>((erw), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ckl*>*>((erw), (new Array_<int64_t>(1, (0LL)))))){
(ery) = (awk<List_<ckl*>*, ckl*>((erw), (new Array_<int64_t>(1, (0LL)))));
if(erv){
(erv) = (false);
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(esc) = (true);
(esd) = ((ery)->erb);
awg<List_<bux*>*>((esd), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bux*>*>((esd), (new Array_<int64_t>(1, (0LL)))))){
(esf) = (awk<List_<bux*>*, bux*>((esd), (new Array_<int64_t>(1, (0LL)))));
if(esc){
(esc) = (false);
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0020', u'\u007C', u'\u007C', u'\u0020')));
}
if(eqAddr_(((esf)->bwy), (nullptr))){
if((bzi)((((eqj)->eqt)->pf))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((eqn)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028'))));
(enx)(((esf)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((eqn)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0028'))));
(enx)(((esf)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((esf)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((eqn)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0020', u'\u0026', u'\u0026', u'\u0020'))->Cat(v<Array_<char16_t>*>(((eqn)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0028')))));
(enx)(((esf)->bwy));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ayu<List_<bux*>*>((esd), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(ckz)(((ery)->erp), (eqk), (eql));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ayu<List_<ckl*>*>((erw), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((eqj)->err), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B')));
(ckz)(((eqj)->err), (eqk), (eql));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
if((!eqAddr_(((eqm)->bzy), (nullptr))) && ((eqm)->cae)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((eqm)->bzy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void est(ckl* esu){
((esu)->erb) = (nullptr);
((esu)->erp) = (nullptr);
((esu)->ne) = (nullptr);
((esu)->nf) = (nullptr);
((esu)->ng) = (nullptr);
((esu)->nh) = (nullptr);
((esu)->ni) = (nullptr);
((esu)->nj) = (nullptr);
((esu)->nk) = (nullptr);
}
// _copy
static ckl* esv(ckl* esw){
ckl* esx = nullptr;
(esx) = (new ckl());
((esx)->erb) = (copy_((esw)->erb));
((esx)->erp) = (copy_((esw)->erp));
((esx)->ne) = (copy_((esw)->ne));
((esx)->nf) = (copy_((esw)->nf));
((esx)->ng) = (copy_((esw)->ng));
((esx)->nh) = (copy_((esw)->nh));
((esx)->ni) = (copy_((esw)->ni));
((esx)->nj) = (copy_((esw)->nj));
((esx)->nk) = (copy_((esw)->nk));
((esx)->no) = ((esw)->no);
((esx)->lw) = ((esw)->lw);
return as_<ckl>(classTable_, (esx), 94);
}
// _toBin
static Array_<uint8_t>* esy(ckl* esz){
Array_<uint8_t>* eta = nullptr;
(eta) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eta) = ((eta)->Cat(toBin_((esz)->erb)));
(eta) = ((eta)->Cat(toBin_((esz)->erp)));
(eta) = ((eta)->Cat(toBin_((esz)->ne)));
(eta) = ((eta)->Cat(toBin_((esz)->nf)));
(eta) = ((eta)->Cat(toBin_((esz)->ng)));
(eta) = ((eta)->Cat(toBin_((esz)->nh)));
(eta) = ((eta)->Cat(toBin_((esz)->ni)));
(eta) = ((eta)->Cat(toBin_((esz)->nj)));
(eta) = ((eta)->Cat(toBin_((esz)->nk)));
(eta) = ((eta)->Cat(toBin_((esz)->no)));
(eta) = ((eta)->Cat(toBin_((esz)->lw)));
return eta;
}
// _fromBin
static ckl* etm(ckl* etn, Array_<uint8_t>* eto, int64_t* etp){
ckl* etq = nullptr;
(etq) = (new ckl());
((etq)->erb) = (fromBin_<List_<bux*>*>((eto), (*etp)));
((etq)->erp) = (fromBin_<buv*>((eto), (*etp)));
((etq)->ne) = (fromBin_<ga*>((eto), (*etp)));
((etq)->nf) = (fromBin_<Array_<char16_t>*>((eto), (*etp)));
((etq)->ng) = (fromBin_<fx*>((eto), (*etp)));
((etq)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eto), (*etp)));
((etq)->ni) = (fromBin_<Array_<char16_t>*>((eto), (*etp)));
((etq)->nj) = (fromBin_<fx*>((eto), (*etp)));
((etq)->nk) = (fromBin_<fy*>((eto), (*etp)));
((etq)->no) = (fromBin_<bool>((eto), (*etp)));
((etq)->lw) = (fromBin_<int64_t>((eto), (*etp)));
return etq;
}
// _dtor
static void etr(ckk* ets){
((ets)->eqt) = (nullptr);
((ets)->eqx) = (nullptr);
((ets)->err) = (nullptr);
((ets)->bve) = (nullptr);
((ets)->ne) = (nullptr);
((ets)->nf) = (nullptr);
((ets)->ng) = (nullptr);
((ets)->nh) = (nullptr);
((ets)->ni) = (nullptr);
((ets)->nj) = (nullptr);
((ets)->nk) = (nullptr);
}
// _copy
static ckk* ett(ckk* etu){
ckk* etv = nullptr;
(etv) = (new ckk());
((etv)->eqt) = (copy_((etu)->eqt));
((etv)->eqx) = (copy_((etu)->eqx));
((etv)->err) = (copy_((etu)->err));
((etv)->bve) = (copy_((etu)->bve));
((etv)->ne) = (copy_((etu)->ne));
((etv)->nf) = (copy_((etu)->nf));
((etv)->ng) = (copy_((etu)->ng));
((etv)->nh) = (copy_((etu)->nh));
((etv)->ni) = (copy_((etu)->ni));
((etv)->nj) = (copy_((etu)->nj));
((etv)->nk) = (copy_((etu)->nk));
((etv)->no) = ((etu)->no);
((etv)->lw) = ((etu)->lw);
return as_<ckk>(classTable_, (etv), 92);
}
// _toBin
static Array_<uint8_t>* etw(ckk* etx){
Array_<uint8_t>* ety = nullptr;
(ety) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ety) = ((ety)->Cat(toBin_((etx)->eqt)));
(ety) = ((ety)->Cat(toBin_((etx)->eqx)));
(ety) = ((ety)->Cat(toBin_((etx)->err)));
(ety) = ((ety)->Cat(toBin_((etx)->bve)));
(ety) = ((ety)->Cat(toBin_((etx)->ne)));
(ety) = ((ety)->Cat(toBin_((etx)->nf)));
(ety) = ((ety)->Cat(toBin_((etx)->ng)));
(ety) = ((ety)->Cat(toBin_((etx)->nh)));
(ety) = ((ety)->Cat(toBin_((etx)->ni)));
(ety) = ((ety)->Cat(toBin_((etx)->nj)));
(ety) = ((ety)->Cat(toBin_((etx)->nk)));
(ety) = ((ety)->Cat(toBin_((etx)->no)));
(ety) = ((ety)->Cat(toBin_((etx)->lw)));
return ety;
}
// _fromBin
static ckk* eum(ckk* eun, Array_<uint8_t>* euo, int64_t* eup){
ckk* euq = nullptr;
(euq) = (new ckk());
((euq)->eqt) = (fromBin_<gd*>((euo), (*eup)));
((euq)->eqx) = (fromBin_<List_<ckl*>*>((euo), (*eup)));
((euq)->err) = (fromBin_<buv*>((euo), (*eup)));
((euq)->bve) = (fromBin_<gb*>((euo), (*eup)));
((euq)->ne) = (fromBin_<ga*>((euo), (*eup)));
((euq)->nf) = (fromBin_<Array_<char16_t>*>((euo), (*eup)));
((euq)->ng) = (fromBin_<fx*>((euo), (*eup)));
((euq)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((euo), (*eup)));
((euq)->ni) = (fromBin_<Array_<char16_t>*>((euo), (*eup)));
((euq)->nj) = (fromBin_<fx*>((euo), (*eup)));
((euq)->nk) = (fromBin_<fy*>((euo), (*eup)));
((euq)->no) = (fromBin_<bool>((euo), (*eup)));
((euq)->lw) = (fromBin_<int64_t>((euo), (*eup)));
return euq;
}
// buildWhile
static void ckn(cko* eur /*ast*/, ge* eus /*breakStat*/, ge* eut /*skipStat*/){
bca* euu = nullptr; // infoMe
(euu) = ((bbz)((eur)));
if(eqAddr_(((eur)->euw), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u003B', u'\u003B', u'\u0029', u'\u007B', u'\u000A')));
(bez)(((eur)->euy), (eur), (eur));
if((!eqAddr_(((euu)->cab), (nullptr))) && ((euu)->caf)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((euu)->cab), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if((!eqAddr_(((euu)->bzy), (nullptr))) && ((euu)->cae)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((euu)->bzy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
return;
}
if((eur)->eve){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0064', u'\u006F', u'\u007B', u'\u000A')));
(bez)(((eur)->euy), (eur), (eur));
if((!eqAddr_(((euu)->cab), (nullptr))) && ((euu)->caf)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((euu)->cab), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(enx)(((eur)->euw));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')));
if((!eqAddr_(((euu)->bzy), (nullptr))) && ((euu)->cae)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((euu)->bzy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
return;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(enx)(((eur)->euw));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(bez)(((eur)->euy), (eur), (eur));
if((!eqAddr_(((euu)->cab), (nullptr))) && ((euu)->caf)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((euu)->cab), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if((!eqAddr_(((euu)->bzy), (nullptr))) && ((euu)->cae)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((euu)->bzy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void evo(ckp* evp){
((evp)->bve) = (nullptr);
((evp)->ne) = (nullptr);
((evp)->nf) = (nullptr);
((evp)->ng) = (nullptr);
((evp)->nh) = (nullptr);
((evp)->ni) = (nullptr);
((evp)->nj) = (nullptr);
((evp)->nk) = (nullptr);
}
// _copy
static ckp* evq(ckp* evr){
ckp* evs = nullptr;
(evs) = (new ckp());
((evs)->bve) = (copy_((evr)->bve));
((evs)->ne) = (copy_((evr)->ne));
((evs)->nf) = (copy_((evr)->nf));
((evs)->ng) = (copy_((evr)->ng));
((evs)->nh) = (copy_((evr)->nh));
((evs)->ni) = (copy_((evr)->ni));
((evs)->nj) = (copy_((evr)->nj));
((evs)->nk) = (copy_((evr)->nk));
((evs)->no) = ((evr)->no);
((evs)->lw) = ((evr)->lw);
return as_<ckp>(classTable_, (evs), 96);
}
// _toBin
static Array_<uint8_t>* evt(ckp* evu){
Array_<uint8_t>* evv = nullptr;
(evv) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(evv) = ((evv)->Cat(toBin_((evu)->bve)));
(evv) = ((evv)->Cat(toBin_((evu)->ne)));
(evv) = ((evv)->Cat(toBin_((evu)->nf)));
(evv) = ((evv)->Cat(toBin_((evu)->ng)));
(evv) = ((evv)->Cat(toBin_((evu)->nh)));
(evv) = ((evv)->Cat(toBin_((evu)->ni)));
(evv) = ((evv)->Cat(toBin_((evu)->nj)));
(evv) = ((evv)->Cat(toBin_((evu)->nk)));
(evv) = ((evv)->Cat(toBin_((evu)->no)));
(evv) = ((evv)->Cat(toBin_((evu)->lw)));
return evv;
}
// _fromBin
static ckp* ewg(ckp* ewh, Array_<uint8_t>* ewi, int64_t* ewj){
ckp* ewk = nullptr;
(ewk) = (new ckp());
((ewk)->bve) = (fromBin_<gb*>((ewi), (*ewj)));
((ewk)->ne) = (fromBin_<ga*>((ewi), (*ewj)));
((ewk)->nf) = (fromBin_<Array_<char16_t>*>((ewi), (*ewj)));
((ewk)->ng) = (fromBin_<fx*>((ewi), (*ewj)));
((ewk)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ewi), (*ewj)));
((ewk)->ni) = (fromBin_<Array_<char16_t>*>((ewi), (*ewj)));
((ewk)->nj) = (fromBin_<fx*>((ewi), (*ewj)));
((ewk)->nk) = (fromBin_<fy*>((ewi), (*ewj)));
((ewk)->no) = (fromBin_<bool>((ewi), (*ewj)));
((ewk)->lw) = (fromBin_<int64_t>((ewi), (*ewj)));
return ewk;
}
// _dtor
static void ewl(cko* ewm){
((ewm)->euw) = (nullptr);
((ewm)->euy) = (nullptr);
((ewm)->bve) = (nullptr);
((ewm)->ne) = (nullptr);
((ewm)->nf) = (nullptr);
((ewm)->ng) = (nullptr);
((ewm)->nh) = (nullptr);
((ewm)->ni) = (nullptr);
((ewm)->nj) = (nullptr);
((ewm)->nk) = (nullptr);
}
// _copy
static cko* ewn(cko* ewo){
cko* ewp = nullptr;
(ewp) = (new cko());
((ewp)->euw) = (copy_((ewo)->euw));
((ewp)->eve) = ((ewo)->eve);
((ewp)->euy) = (copy_((ewo)->euy));
((ewp)->bve) = (copy_((ewo)->bve));
((ewp)->ne) = (copy_((ewo)->ne));
((ewp)->nf) = (copy_((ewo)->nf));
((ewp)->ng) = (copy_((ewo)->ng));
((ewp)->nh) = (copy_((ewo)->nh));
((ewp)->ni) = (copy_((ewo)->ni));
((ewp)->nj) = (copy_((ewo)->nj));
((ewp)->nk) = (copy_((ewo)->nk));
((ewp)->no) = ((ewo)->no);
((ewp)->lw) = ((ewo)->lw);
return as_<cko>(classTable_, (ewp), 98);
}
// _toBin
static Array_<uint8_t>* ewq(cko* ewr){
Array_<uint8_t>* ews = nullptr;
(ews) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ews) = ((ews)->Cat(toBin_((ewr)->euw)));
(ews) = ((ews)->Cat(toBin_((ewr)->eve)));
(ews) = ((ews)->Cat(toBin_((ewr)->euy)));
(ews) = ((ews)->Cat(toBin_((ewr)->bve)));
(ews) = ((ews)->Cat(toBin_((ewr)->ne)));
(ews) = ((ews)->Cat(toBin_((ewr)->nf)));
(ews) = ((ews)->Cat(toBin_((ewr)->ng)));
(ews) = ((ews)->Cat(toBin_((ewr)->nh)));
(ews) = ((ews)->Cat(toBin_((ewr)->ni)));
(ews) = ((ews)->Cat(toBin_((ewr)->nj)));
(ews) = ((ews)->Cat(toBin_((ewr)->nk)));
(ews) = ((ews)->Cat(toBin_((ewr)->no)));
(ews) = ((ews)->Cat(toBin_((ewr)->lw)));
return ews;
}
// _fromBin
static cko* exg(cko* exh, Array_<uint8_t>* exi, int64_t* exj){
cko* exk = nullptr;
(exk) = (new cko());
((exk)->euw) = (fromBin_<gd*>((exi), (*exj)));
((exk)->eve) = (fromBin_<bool>((exi), (*exj)));
((exk)->euy) = (fromBin_<List_<ge*>*>((exi), (*exj)));
((exk)->bve) = (fromBin_<gb*>((exi), (*exj)));
((exk)->ne) = (fromBin_<ga*>((exi), (*exj)));
((exk)->nf) = (fromBin_<Array_<char16_t>*>((exi), (*exj)));
((exk)->ng) = (fromBin_<fx*>((exi), (*exj)));
((exk)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((exi), (*exj)));
((exk)->ni) = (fromBin_<Array_<char16_t>*>((exi), (*exj)));
((exk)->nj) = (fromBin_<fx*>((exi), (*exj)));
((exk)->nk) = (fromBin_<fy*>((exi), (*exj)));
((exk)->no) = (fromBin_<bool>((exi), (*exj)));
((exk)->lw) = (fromBin_<int64_t>((exi), (*exj)));
return exk;
}
// buildFor
static void ckr(cks* exl /*ast*/, ge* exm /*breakStat*/, ge* exn /*skipStat*/){
bca* exo = nullptr; // infoMe
bca* exp = nullptr; // info
Array_<char16_t>* exs = nullptr; // endId
int64_t exx = 0; // step
(exo) = ((bbz)((exl)));
(exp) = ((bbz)(((exl)->bve)));
if(!((exp)->bcc)){
((exp)->bcc) = (true);
uj<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), ((exl)->bve));
}
(exs) = ((ext)((((exl)->exu)->pf)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0066', u'\u006F', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((exp)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0020', u'\u003D', u'\u0020', u'\u0028'))));
(enx)(((exl)->exv));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>((exs), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0020', u'\u003D', u'\u0020', u'\u0028'))));
(enx)(((exl)->exu));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u0020'))->Cat(v<Array_<char16_t>*>(((exp)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0020'))));
if(!(((((exl)->exw)->lw) == (67585LL)) && ((bdi)((((exl)->exu)->pf))))){
throw 0xE9170000U;
}
(exx) = (static_cast<int64_t>((as_<bwo>(classTable_, ((exl)->exw), 70))->bwq));
if((exx) > (0LL)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003C', u'\u003D')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003E', u'\u003D')));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>((exs), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003B', u'\u0020'))->Cat(v<Array_<char16_t>*>(((exp)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0020')))));
if((exx) > (0LL)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u002B', u'\u003D', u'\u0020', u'\u0028')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u002D', u'\u003D', u'\u0020', u'\u0028')));
}
(enx)(((exl)->exw));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
(bez)(((exl)->eye), (exl), (exl));
if((!eqAddr_(((exo)->cab), (nullptr))) && ((exo)->caf)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((exo)->cab), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if((!eqAddr_(((exo)->bzy), (nullptr))) && ((exo)->cae)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((exo)->bzy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void eyj(cks* eyk){
((eyk)->exv) = (nullptr);
((eyk)->exu) = (nullptr);
((eyk)->exw) = (nullptr);
((eyk)->eye) = (nullptr);
((eyk)->bve) = (nullptr);
((eyk)->ne) = (nullptr);
((eyk)->nf) = (nullptr);
((eyk)->ng) = (nullptr);
((eyk)->nh) = (nullptr);
((eyk)->ni) = (nullptr);
((eyk)->nj) = (nullptr);
((eyk)->nk) = (nullptr);
}
// _copy
static cks* eyl(cks* eym){
cks* eyn = nullptr;
(eyn) = (new cks());
((eyn)->exv) = (copy_((eym)->exv));
((eyn)->exu) = (copy_((eym)->exu));
((eyn)->exw) = (copy_((eym)->exw));
((eyn)->eye) = (copy_((eym)->eye));
((eyn)->bve) = (copy_((eym)->bve));
((eyn)->ne) = (copy_((eym)->ne));
((eyn)->nf) = (copy_((eym)->nf));
((eyn)->ng) = (copy_((eym)->ng));
((eyn)->nh) = (copy_((eym)->nh));
((eyn)->ni) = (copy_((eym)->ni));
((eyn)->nj) = (copy_((eym)->nj));
((eyn)->nk) = (copy_((eym)->nk));
((eyn)->no) = ((eym)->no);
((eyn)->lw) = ((eym)->lw);
return as_<cks>(classTable_, (eyn), 100);
}
// _toBin
static Array_<uint8_t>* eyo(cks* eyp){
Array_<uint8_t>* eyq = nullptr;
(eyq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->exv)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->exu)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->exw)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->eye)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->bve)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->ne)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->nf)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->ng)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->nh)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->ni)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->nj)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->nk)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->no)));
(eyq) = ((eyq)->Cat(toBin_((eyp)->lw)));
return eyq;
}
// _fromBin
static cks* ezf(cks* ezg, Array_<uint8_t>* ezh, int64_t* ezi){
cks* ezj = nullptr;
(ezj) = (new cks());
((ezj)->exv) = (fromBin_<gd*>((ezh), (*ezi)));
((ezj)->exu) = (fromBin_<gd*>((ezh), (*ezi)));
((ezj)->exw) = (fromBin_<gd*>((ezh), (*ezi)));
((ezj)->eye) = (fromBin_<List_<ge*>*>((ezh), (*ezi)));
((ezj)->bve) = (fromBin_<gb*>((ezh), (*ezi)));
((ezj)->ne) = (fromBin_<ga*>((ezh), (*ezi)));
((ezj)->nf) = (fromBin_<Array_<char16_t>*>((ezh), (*ezi)));
((ezj)->ng) = (fromBin_<fx*>((ezh), (*ezi)));
((ezj)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ezh), (*ezi)));
((ezj)->ni) = (fromBin_<Array_<char16_t>*>((ezh), (*ezi)));
((ezj)->nj) = (fromBin_<fx*>((ezh), (*ezi)));
((ezj)->nk) = (fromBin_<fy*>((ezh), (*ezi)));
((ezj)->no) = (fromBin_<bool>((ezh), (*ezi)));
((ezj)->lw) = (fromBin_<int64_t>((ezh), (*ezi)));
return ezj;
}
// buildTry
static void cku(but* ezk /*ast*/, ge* ezl /*breakStat*/, ge* ezm /*skipStat*/){
bca* ezn = nullptr; // infoMe
bca* ezo = nullptr; // info
bool ezw = false; // first
List_<buw*>* ezx = nullptr; // items
buw* ezz = nullptr; // item
bool fad = false; // first2
List_<bux*>* fae = nullptr; // items2
bux* fag = nullptr; // exprs
(ezn) = ((bbz)((ezk)));
(ezo) = ((bbz)(((ezk)->bve)));
if(!((ezo)->bcc)){
((ezo)->bcc) = (true);
uj<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), ((ezk)->bve));
}
if(!eqAddr_(((ezk)->bvm), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
(ckz)(((ezk)->bvi), (ezl), (ezm));
if(!eqAddr_(((ezk)->bvm), (nullptr))){
(ckz)(((ezk)->bvm), (ezl), (ezm));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ezo)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
(ezw) = (true);
(ezx) = ((ezk)->bvj);
awg<List_<buw*>*>((ezx), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<buw*>*>((ezx), (new Array_<int64_t>(1, (0LL)))))){
(ezz) = (awk<List_<buw*>*, buw*>((ezx), (new Array_<int64_t>(1, (0LL)))));
if(ezw){
(ezw) = (false);
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(fad) = (true);
(fae) = ((ezz)->bwg);
awg<List_<bux*>*>((fae), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bux*>*>((fae), (new Array_<int64_t>(1, (0LL)))))){
(fag) = (awk<List_<bux*>*, bux*>((fae), (new Array_<int64_t>(1, (0LL)))));
if(fad){
(fad) = (false);
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0020', u'\u007C', u'\u007C', u'\u0020')));
}
if(eqAddr_(((fag)->bwy), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ezo)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0028'))));
(enx)(((fag)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((fag)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ezo)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0020', u'\u0026', u'\u0026', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ezo)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0028')))));
(enx)(((fag)->bwy));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ayu<List_<bux*>*>((fae), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(ckz)(((ezz)->bwj), (ezl), (ezm));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ayu<List_<buw*>*>((ezx), (new Array_<int64_t>(1, (0LL))));
}
if(ezw){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007B', u'\u000A')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u003B', u'\u000A', u'\u007D', u'\u000A')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if(!eqAddr_(((ezk)->bvm), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u007D', u'\u000A', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
(ckz)(((ezk)->bvm), (ezl), (ezm));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u003B', u'\u000A', u'\u007D', u'\u000A')));
}
if((!eqAddr_(((ezn)->bzy), (nullptr))) && ((ezn)->cae)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ezn)->bzy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// buildThrow
static void ckw(ckx* fau /*ast*/){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020')));
(enx)(((fau)->fav));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// _dtor
static void faw(ckx* fax){
((fax)->fav) = (nullptr);
((fax)->ne) = (nullptr);
((fax)->nf) = (nullptr);
((fax)->ng) = (nullptr);
((fax)->nh) = (nullptr);
((fax)->ni) = (nullptr);
((fax)->nj) = (nullptr);
((fax)->nk) = (nullptr);
}
// _copy
static ckx* fay(ckx* faz){
ckx* fba = nullptr;
(fba) = (new ckx());
((fba)->fav) = (copy_((faz)->fav));
((fba)->ne) = (copy_((faz)->ne));
((fba)->nf) = (copy_((faz)->nf));
((fba)->ng) = (copy_((faz)->ng));
((fba)->nh) = (copy_((faz)->nh));
((fba)->ni) = (copy_((faz)->ni));
((fba)->nj) = (copy_((faz)->nj));
((fba)->nk) = (copy_((faz)->nk));
((fba)->no) = ((faz)->no);
((fba)->lw) = ((faz)->lw);
return as_<ckx>(classTable_, (fba), 102);
}
// _toBin
static Array_<uint8_t>* fbb(ckx* fbc){
Array_<uint8_t>* fbd = nullptr;
(fbd) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fbd) = ((fbd)->Cat(toBin_((fbc)->fav)));
(fbd) = ((fbd)->Cat(toBin_((fbc)->ne)));
(fbd) = ((fbd)->Cat(toBin_((fbc)->nf)));
(fbd) = ((fbd)->Cat(toBin_((fbc)->ng)));
(fbd) = ((fbd)->Cat(toBin_((fbc)->nh)));
(fbd) = ((fbd)->Cat(toBin_((fbc)->ni)));
(fbd) = ((fbd)->Cat(toBin_((fbc)->nj)));
(fbd) = ((fbd)->Cat(toBin_((fbc)->nk)));
(fbd) = ((fbd)->Cat(toBin_((fbc)->no)));
(fbd) = ((fbd)->Cat(toBin_((fbc)->lw)));
return fbd;
}
// _fromBin
static ckx* fbo(ckx* fbp, Array_<uint8_t>* fbq, int64_t* fbr){
ckx* fbs = nullptr;
(fbs) = (new ckx());
((fbs)->fav) = (fromBin_<gd*>((fbq), (*fbr)));
((fbs)->ne) = (fromBin_<ga*>((fbq), (*fbr)));
((fbs)->nf) = (fromBin_<Array_<char16_t>*>((fbq), (*fbr)));
((fbs)->ng) = (fromBin_<fx*>((fbq), (*fbr)));
((fbs)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fbq), (*fbr)));
((fbs)->ni) = (fromBin_<Array_<char16_t>*>((fbq), (*fbr)));
((fbs)->nj) = (fromBin_<fx*>((fbq), (*fbr)));
((fbs)->nk) = (fromBin_<fy*>((fbq), (*fbr)));
((fbs)->no) = (fromBin_<bool>((fbq), (*fbr)));
((fbs)->lw) = (fromBin_<int64_t>((fbq), (*fbr)));
return fbs;
}
// buildBlock
static void ckz(buv* fbt /*ast*/, ge* fbu /*breakStat*/, ge* fbv /*skipStat*/){
bca* fbw = nullptr; // infoMe
(fbw) = ((bbz)((fbt)));
(bez)(((fbt)->bvh), (fbu), (fbv));
if((!eqAddr_(((fbw)->bzy), (nullptr))) && ((fbw)->cae)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fbw)->bzy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// buildRet
static void clb(clc* fbz /*ast*/){
if(eqAddr_(((fbz)->fcb), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u000A')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020')));
(enx)(((fbz)->fcb));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
}
// _dtor
static void fce(clc* fcf){
((fcf)->fcb) = (nullptr);
((fcf)->ne) = (nullptr);
((fcf)->nf) = (nullptr);
((fcf)->ng) = (nullptr);
((fcf)->nh) = (nullptr);
((fcf)->ni) = (nullptr);
((fcf)->nj) = (nullptr);
((fcf)->nk) = (nullptr);
}
// _copy
static clc* fcg(clc* fch){
clc* fci = nullptr;
(fci) = (new clc());
((fci)->fcb) = (copy_((fch)->fcb));
((fci)->ne) = (copy_((fch)->ne));
((fci)->nf) = (copy_((fch)->nf));
((fci)->ng) = (copy_((fch)->ng));
((fci)->nh) = (copy_((fch)->nh));
((fci)->ni) = (copy_((fch)->ni));
((fci)->nj) = (copy_((fch)->nj));
((fci)->nk) = (copy_((fch)->nk));
((fci)->no) = ((fch)->no);
((fci)->lw) = ((fch)->lw);
return as_<clc>(classTable_, (fci), 104);
}
// _toBin
static Array_<uint8_t>* fcj(clc* fck){
Array_<uint8_t>* fcl = nullptr;
(fcl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fcl) = ((fcl)->Cat(toBin_((fck)->fcb)));
(fcl) = ((fcl)->Cat(toBin_((fck)->ne)));
(fcl) = ((fcl)->Cat(toBin_((fck)->nf)));
(fcl) = ((fcl)->Cat(toBin_((fck)->ng)));
(fcl) = ((fcl)->Cat(toBin_((fck)->nh)));
(fcl) = ((fcl)->Cat(toBin_((fck)->ni)));
(fcl) = ((fcl)->Cat(toBin_((fck)->nj)));
(fcl) = ((fcl)->Cat(toBin_((fck)->nk)));
(fcl) = ((fcl)->Cat(toBin_((fck)->no)));
(fcl) = ((fcl)->Cat(toBin_((fck)->lw)));
return fcl;
}
// _fromBin
static clc* fcw(clc* fcx, Array_<uint8_t>* fcy, int64_t* fcz){
clc* fda = nullptr;
(fda) = (new clc());
((fda)->fcb) = (fromBin_<gd*>((fcy), (*fcz)));
((fda)->ne) = (fromBin_<ga*>((fcy), (*fcz)));
((fda)->nf) = (fromBin_<Array_<char16_t>*>((fcy), (*fcz)));
((fda)->ng) = (fromBin_<fx*>((fcy), (*fcz)));
((fda)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fcy), (*fcz)));
((fda)->ni) = (fromBin_<Array_<char16_t>*>((fcy), (*fcz)));
((fda)->nj) = (fromBin_<fx*>((fcy), (*fcz)));
((fda)->nk) = (fromBin_<fy*>((fcy), (*fcz)));
((fda)->no) = (fromBin_<bool>((fcy), (*fcz)));
((fda)->lw) = (fromBin_<int64_t>((fcy), (*fcz)));
return fda;
}
// buildDo
static void cle(bvt* fdb /*ast*/){
(enx)(((fdb)->bwd));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// buildBreak
static void clg(ge* fdc /*ast*/, ge* fdd /*breakStat*/){
bca* fdh = nullptr; // info
if(!((ayg<int64_t>((((fdc)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
throw 0xE9170000U;
}
if(eqAddr_(((fdc)->nj), (fdd))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
}
else{
(fdh) = ((bbz)(((fdc)->nj)));
((fdh)->cae) = (true);
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0067', u'\u006F', u'\u0074', u'\u006F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fdh)->bzy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
}
// buildSkip
static void cli(ge* fdi /*ast*/, ge* fdj /*skipStat*/){
bca* fdn = nullptr; // info
if(!((ayg<int64_t>((((fdi)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (16843264LL))) == (16843264LL))){
throw 0xE9170000U;
}
if(eqAddr_(((fdi)->nj), (fdj))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0069', u'\u006E', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else{
(fdn) = ((bbz)(((fdi)->nj)));
((fdn)->caf) = (true);
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0067', u'\u006F', u'\u0074', u'\u006F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fdn)->cab), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
}
// buildAssert
static void clk(cll* fdo /*ast*/){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u0028')));
(enx)(((fdo)->fdp));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u0029', u'\u0029', u'\u007B', u'\u000A', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020'))->Cat(v<uint32_t>((0xE9170000U), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0055', u'\u003B', u'\u000A', u'\u007D', u'\u000A'))));
}
// _dtor
static void fdq(cll* fdr){
((fdr)->fdp) = (nullptr);
((fdr)->ne) = (nullptr);
((fdr)->nf) = (nullptr);
((fdr)->ng) = (nullptr);
((fdr)->nh) = (nullptr);
((fdr)->ni) = (nullptr);
((fdr)->nj) = (nullptr);
((fdr)->nk) = (nullptr);
}
// _copy
static cll* fds(cll* fdt){
cll* fdu = nullptr;
(fdu) = (new cll());
((fdu)->fdp) = (copy_((fdt)->fdp));
((fdu)->ne) = (copy_((fdt)->ne));
((fdu)->nf) = (copy_((fdt)->nf));
((fdu)->ng) = (copy_((fdt)->ng));
((fdu)->nh) = (copy_((fdt)->nh));
((fdu)->ni) = (copy_((fdt)->ni));
((fdu)->nj) = (copy_((fdt)->nj));
((fdu)->nk) = (copy_((fdt)->nk));
((fdu)->no) = ((fdt)->no);
((fdu)->lw) = ((fdt)->lw);
return as_<cll>(classTable_, (fdu), 106);
}
// _toBin
static Array_<uint8_t>* fdv(cll* fdw){
Array_<uint8_t>* fdx = nullptr;
(fdx) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fdx) = ((fdx)->Cat(toBin_((fdw)->fdp)));
(fdx) = ((fdx)->Cat(toBin_((fdw)->ne)));
(fdx) = ((fdx)->Cat(toBin_((fdw)->nf)));
(fdx) = ((fdx)->Cat(toBin_((fdw)->ng)));
(fdx) = ((fdx)->Cat(toBin_((fdw)->nh)));
(fdx) = ((fdx)->Cat(toBin_((fdw)->ni)));
(fdx) = ((fdx)->Cat(toBin_((fdw)->nj)));
(fdx) = ((fdx)->Cat(toBin_((fdw)->nk)));
(fdx) = ((fdx)->Cat(toBin_((fdw)->no)));
(fdx) = ((fdx)->Cat(toBin_((fdw)->lw)));
return fdx;
}
// _fromBin
static cll* fei(cll* fej, Array_<uint8_t>* fek, int64_t* fel){
cll* fem = nullptr;
(fem) = (new cll());
((fem)->fdp) = (fromBin_<gd*>((fek), (*fel)));
((fem)->ne) = (fromBin_<ga*>((fek), (*fel)));
((fem)->nf) = (fromBin_<Array_<char16_t>*>((fek), (*fel)));
((fem)->ng) = (fromBin_<fx*>((fek), (*fel)));
((fem)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fek), (*fel)));
((fem)->ni) = (fromBin_<Array_<char16_t>*>((fek), (*fel)));
((fem)->nj) = (fromBin_<fx*>((fek), (*fel)));
((fem)->nk) = (fromBin_<fy*>((fek), (*fel)));
((fem)->no) = (fromBin_<bool>((fek), (*fel)));
((fem)->lw) = (fromBin_<int64_t>((fek), (*fel)));
return fem;
}
// isNullable
static bool clv(gc* fen /*type*/){
return ((ayg<int64_t>(((fen)->lw), (new Array_<int64_t>(1, (0LL))), (66560LL))) == (66560LL)) && (!((cma)((fen))));
}
// isEnum
static bool cma(gc* feo /*type*/){
return (((feo)->lw) == (66565LL)) && ((((feo)->nj)->lw) == (6LL));
}
// getId
static Array_<char16_t>* cqx(){
Array_<char16_t>* fep = nullptr; // curId
Array_<char16_t>* feq = nullptr; // newId
int64_t feu = 0; // idx
char16_t fez = 0;
int64_t ffj = 0;
Array_<char16_t>* ffm = nullptr;
Array_<char16_t>* ffq = nullptr;
Array_<char16_t>* ffu = nullptr;
(fep) = (bk);
(feq) = (copy_(bk));
while(true){
(feu) = (((feq)->Len()) - (1LL));
while(true){
switch((feq)->At(feu)){
case u'\u007A':
((feq)->At(feu)) = (((feu) == (0LL)) ? (u'\u0041') : (u'\u0030'));
break;
case u'\u0039':
((feq)->At(feu)) = (u'\u0041');
break;
case u'\u005A':
if((feu) == (0LL)){
(feq) = (newArray_<char16_t, Array_<char16_t>*>(1, (((feq)->Len()) + (1LL))));
egl<Array_<char16_t>*, char16_t>((feq), (new Array_<int64_t>(1, (0LL))), (u'\u0061'));
}
else{
((feq)->At(feu)) = (u'\u0061');
(feu) = ((feu) - (1LL));
continue;
}
break;
default:
((feq)->At(feu)) = ((egp)(((feq)->At(feu)), (1LL)));
break;
}
break;
}
switch((feq)->Len()){
case 2LL:
ffm = feq;
if(cmp_(ffm, (new Array_<char16_t>(2, u'\u0064', u'\u006F'))) == 0 || cmp_(ffm, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0 || cmp_(ffm, (new Array_<char16_t>(2, u'\u0069', u'\u006E'))) == 0){
continue;
}
break;
case 3LL:
ffq = feq;
if(cmp_(ffq, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0 || cmp_(ffq, (new Array_<char16_t>(3, u'\u006C', u'\u0065', u'\u0074'))) == 0 || cmp_(ffq, (new Array_<char16_t>(3, u'\u006E', u'\u0065', u'\u0077'))) == 0 || cmp_(ffq, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0 || cmp_(ffq, (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0 || cmp_(ffq, (new Array_<char16_t>(3, u'\u004D', u'\u0061', u'\u0070'))) == 0 || cmp_(ffq, (new Array_<char16_t>(3, u'\u004E', u'\u0061', u'\u004E'))) == 0 || cmp_(ffq, (new Array_<char16_t>(3, u'\u0053', u'\u0065', u'\u0074'))) == 0){
continue;
}
break;
case 4LL:
ffu = feq;
if(cmp_(ffu, (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u0065', u'\u0076', u'\u0061', u'\u006C'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u006E', u'\u0061', u'\u006D', u'\u0065'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u0074', u'\u0068', u'\u0069', u'\u0073'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u0076', u'\u006F', u'\u0069', u'\u0064'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u0077', u'\u0069', u'\u0074', u'\u0068'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u0044', u'\u0061', u'\u0074', u'\u0065'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u0049', u'\u006E', u'\u0074', u'\u006C'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u004A', u'\u0053', u'\u004F', u'\u004E'))) == 0 || cmp_(ffu, (new Array_<char16_t>(4, u'\u004D', u'\u0061', u'\u0074', u'\u0068'))) == 0){
continue;
}
break;
}
break;
}
(bk) = (feq);
return fep;
}
// search
static biz* cwg(List_<uo*>* ffw /*members*/, Array_<char16_t>* ffx /*name*/){
fx* ffz = nullptr; // def
awg<List_<uo*>*>((ffw), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((ffw), (new Array_<int64_t>(1, (0LL)))))){
(ffz) = ((awk<List_<uo*>*, uo*>((ffw), (new Array_<int64_t>(1, (0LL)))))->azn);
if(((((ffz)->lw) == (2LL)) && (!eqAddr_((((as_<bgk>(classTable_, (ffz), 38))->bgm)->nf), (nullptr)))) && (cmp_((((as_<bgk>(classTable_, (ffz), 38))->bgm)->nf), (ffx)) == 0)){
return (biy)(((as_<bgk>(classTable_, (ffz), 38))->bgm));
}
ayu<List_<uo*>*>((ffw), (new Array_<int64_t>(1, (0LL))));
}
if(!(false)){
throw 0xE9170000U;
}
return nullptr;
}
// buildIf
static void cyq(ckg* fgc /*ast*/){
biz* fgd = nullptr; // infoMe
List_<ckh*>* fgo = nullptr; // items
ckh* fgq = nullptr; // item
(fgd) = ((biy)((fgc)));
if(eqAddr_(((fgc)->ens), (nullptr))){
if(!eqAddr_(((fgd)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fgd)->cra), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u007B', u'\u000A'))));
}
(czc)(((fgc)->enu));
if(!eqAddr_(((fgd)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
return;
}
if(!eqAddr_(((fgd)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fgd)->cra), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
(fgm)(((fgc)->ens));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(czc)(((fgc)->enu));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(fgo) = ((fgc)->eoa);
awg<List_<ckh*>*>((fgo), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ckh*>*>((fgo), (new Array_<int64_t>(1, (0LL)))))){
(fgq) = (awk<List_<ckh*>*, ckh*>((fgo), (new Array_<int64_t>(1, (0LL)))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
(fgm)(((fgq)->eod));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(czc)(((fgq)->eoe));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ayu<List_<ckh*>*>((fgo), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((fgc)->eog), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
(czc)(((fgc)->eog));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
// buildSwitch
static void cys(ckk* fgt /*ast*/){
biz* fgu = nullptr; // infoMe
biz* fgv = nullptr; // info
bool fgy = false; // useSwitch
List_<ckl*>* fhc = nullptr; // items
ckl* fhe = nullptr; // item
List_<bux*>* fhf = nullptr; // items2
bux* fhh = nullptr; // exprs
List_<ckl*>* fhp = nullptr; // items
ckl* fhr = nullptr; // item
List_<bux*>* fhs = nullptr; // items2
bux* fhu = nullptr; // exprs
bool fib = false; // first
List_<ckl*>* fic = nullptr; // items
ckl* fie = nullptr; // item
bool fii = false; // first2
List_<bux*>* fij = nullptr; // items2
bux* fil = nullptr; // exprs
(fgu) = ((biy)((fgt)));
(fgv) = ((biy)(((fgt)->bve)));
if(!((fgv)->bjb)){
((fgv)->bjb) = (true);
uj<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), ((fgt)->bve));
}
(fgy) = (false);
if(((((bdi)((((fgt)->eqt)->pf))) || ((equ)((((fgt)->eqt)->pf)))) || ((cma)((((fgt)->eqt)->pf)))) || (((((fgt)->eqt)->pf)->lw) == (1025LL))){
(fgy) = (true);
(fhc) = ((fgt)->eqx);
awg<List_<ckl*>*>((fhc), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ckl*>*>((fhc), (new Array_<int64_t>(1, (0LL)))))){
(fhe) = (awk<List_<ckl*>*, ckl*>((fhc), (new Array_<int64_t>(1, (0LL)))));
(fhf) = ((fhe)->erb);
awg<List_<bux*>*>((fhf), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bux*>*>((fhf), (new Array_<int64_t>(1, (0LL)))))){
(fhh) = (awk<List_<bux*>*, bux*>((fhf), (new Array_<int64_t>(1, (0LL)))));
if(((ayg<int64_t>((((fhh)->bwt)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL)) || (!eqAddr_(((fhh)->bwy), (nullptr)))){
(fgy) = (false);
goto fha;
}
ayu<List_<bux*>*>((fhf), (new Array_<int64_t>(1, (0LL))));
}
ayu<List_<ckl*>*>((fhc), (new Array_<int64_t>(1, (0LL))));
}
}
fha:;
if(fgy){
if(!eqAddr_(((fgu)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fgu)->cra), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028')));
(fgm)(((fgt)->eqt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(fhp) = ((fgt)->eqx);
awg<List_<ckl*>*>((fhp), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ckl*>*>((fhp), (new Array_<int64_t>(1, (0LL)))))){
(fhr) = (awk<List_<ckl*>*, ckl*>((fhp), (new Array_<int64_t>(1, (0LL)))));
(fhs) = ((fhr)->erb);
awg<List_<bux*>*>((fhs), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bux*>*>((fhs), (new Array_<int64_t>(1, (0LL)))))){
(fhu) = (awk<List_<bux*>*, bux*>((fhs), (new Array_<int64_t>(1, (0LL)))));
if(!(eqAddr_(((fhu)->bwy), (nullptr)))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020')));
(fgm)(((fhu)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003A', u'\u000A')));
ayu<List_<bux*>*>((fhs), (new Array_<int64_t>(1, (0LL))));
}
(czc)(((fhr)->erp));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
ayu<List_<ckl*>*>((fhp), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((fgt)->err), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
(czc)(((fgt)->err));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else{
if(!eqAddr_(((fgu)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fgu)->cra), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u007B', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fgv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003D'))));
(fgm)(((fgt)->eqt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
(fib) = (true);
(fic) = ((fgt)->eqx);
awg<List_<ckl*>*>((fic), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ckl*>*>((fic), (new Array_<int64_t>(1, (0LL)))))){
(fie) = (awk<List_<ckl*>*, ckl*>((fic), (new Array_<int64_t>(1, (0LL)))));
if(fib){
(fib) = (false);
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(fii) = (true);
(fij) = ((fie)->erb);
awg<List_<bux*>*>((fij), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bux*>*>((fij), (new Array_<int64_t>(1, (0LL)))))){
(fil) = (awk<List_<bux*>*, bux*>((fij), (new Array_<int64_t>(1, (0LL)))));
if(fii){
(fii) = (false);
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007C', u'\u007C')));
}
if(eqAddr_(((fil)->bwy), (nullptr))){
if((fis)((((fgt)->eqt)->pf))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fgv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0053', u'\u003D', u'\u003D', u'\u003D', u'\u0028'))));
(fgm)(((fil)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((bzi)((((fgt)->eqt)->pf))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fgv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0028'))));
(fgm)(((fil)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003D', u'\u003D', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fgv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u003D', u'\u003D', u'\u003D', u'\u0028'))));
(fgm)(((fil)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((fil)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003C', u'\u003D'))->Cat(v<Array_<char16_t>*>(((fgv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((fgv)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003C', u'\u003D', u'\u0028')))));
(fgm)(((fil)->bwy));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ayu<List_<bux*>*>((fij), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(czc)(((fie)->erp));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ayu<List_<ckl*>*>((fic), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((fgt)->err), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B')));
(czc)(((fgt)->err));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
if(!eqAddr_(((fgu)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
}
// buildWhile
static void cyu(cko* fjb /*ast*/){
biz* fjc = nullptr; // infoMe
(fjc) = ((biy)((fjb)));
if(eqAddr_(((fjb)->euw), (nullptr))){
if(!eqAddr_(((fjc)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fjc)->cra), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u003B', u'\u003B', u'\u0029', u'\u007B', u'\u000A')));
(bkl)(((fjb)->euy));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
return;
}
if((fjb)->eve){
if(!eqAddr_(((fjc)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fjc)->cra), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0064', u'\u006F', u'\u007B', u'\u000A')));
(bkl)(((fjb)->euy));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(fgm)(((fjb)->euw));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')));
return;
}
if(!eqAddr_(((fjc)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fjc)->cra), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(fgm)(((fjb)->euw));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(bkl)(((fjb)->euy));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
// buildFor
static void cyw(cks* fjn /*ast*/){
biz* fjo = nullptr; // infoMe
biz* fjp = nullptr; // info
Array_<char16_t>* fjs = nullptr; // endId
int64_t fjw = 0; // step
(fjo) = ((biy)((fjn)));
(fjp) = ((biy)(((fjn)->bve)));
if(!((fjp)->bjb)){
((fjp)->bjb) = (true);
uj<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), ((fjn)->bve));
}
(fjs) = ((fjt)((((fjn)->exu)->pf)));
if(!eqAddr_(((fjo)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fjo)->cra), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0066', u'\u006F', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fjp)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(fgm)(((fjn)->exv));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u002C'))->Cat(v<Array_<char16_t>*>((fjs), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(fgm)(((fjn)->exu));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u003B'))->Cat(v<Array_<char16_t>*>(((fjp)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if(!(((((fjn)->exw)->lw) == (67585LL)) && ((bdi)((((fjn)->exu)->pf))))){
throw 0xE9170000U;
}
(fjw) = (static_cast<int64_t>((as_<bwo>(classTable_, ((fjn)->exw), 70))->bwq));
if((fjw) > (0LL)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003C', u'\u003D')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003E', u'\u003D')));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((fjs), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003B'))->Cat(v<Array_<char16_t>*>(((fjp)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0)))));
if((fjw) > (0LL)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002B', u'\u003D', u'\u0028')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002D', u'\u003D', u'\u0028')));
}
(fgm)(((fjn)->exw));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
(bkl)(((fjn)->eye));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
// buildTry
static void cyy(but* fkd /*ast*/){
biz* fke = nullptr; // infoMe
biz* fkf = nullptr; // info
bool fkl = false; // first
List_<buw*>* fkm = nullptr; // items
buw* fko = nullptr; // item
bool fks = false; // first2
List_<bux*>* fkt = nullptr; // items2
bux* fkv = nullptr; // exprs
(fke) = ((biy)((fkd)));
(fkf) = ((biy)(((fkd)->bve)));
if(!((fkf)->bjb)){
((fkf)->bjb) = (true);
uj<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), ((fkd)->bve));
}
if(!eqAddr_(((fke)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fke)->cra), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
(czc)(((fkd)->bvi));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fkf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
(fkl) = (true);
(fkm) = ((fkd)->bvj);
awg<List_<buw*>*>((fkm), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<buw*>*>((fkm), (new Array_<int64_t>(1, (0LL)))))){
(fko) = (awk<List_<buw*>*, buw*>((fkm), (new Array_<int64_t>(1, (0LL)))));
if(fkl){
(fkl) = (false);
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(fks) = (true);
(fkt) = ((fko)->bwg);
awg<List_<bux*>*>((fkt), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bux*>*>((fkt), (new Array_<int64_t>(1, (0LL)))))){
(fkv) = (awk<List_<bux*>*, bux*>((fkt), (new Array_<int64_t>(1, (0LL)))));
if(fks){
(fks) = (false);
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007C', u'\u007C')));
}
if(eqAddr_(((fkv)->bwy), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fkf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u003D', u'\u003D', u'\u003D', u'\u0028'))));
(fgm)(((fkv)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((fkv)->bwt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003C', u'\u003D'))->Cat(v<Array_<char16_t>*>(((fkf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((fkf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003C', u'\u003D', u'\u0028')))));
(fgm)(((fkv)->bwy));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ayu<List_<bux*>*>((fkt), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(czc)(((fko)->bwj));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ayu<List_<buw*>*>((fkm), (new Array_<int64_t>(1, (0LL))));
}
if(fkl){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007B', u'\u000A')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fkf)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u003B', u'\u000A', u'\u007D', u'\u000A'))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if(!eqAddr_(((fkd)->bvm), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u007B', u'\u000A')));
(czc)(((fkd)->bvm));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
// buildThrow
static void cza(ckx* flh /*ast*/){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020')));
(fgm)(((flh)->fav));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// buildBlock
static void czc(buv* fli /*ast*/){
biz* flj = nullptr; // infoMe
(flj) = ((biy)((fli)));
if(!eqAddr_(((flj)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((flj)->cra), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u007B', u'\u000A'))));
}
(bkl)(((fli)->bvh));
if(!eqAddr_(((flj)->cra), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
// buildRet
static void cze(clc* flo /*ast*/){
if(eqAddr_(((flo)->fcb), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u000A')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020')));
(fgm)(((flo)->fcb));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
}
// buildDo
static void czg(bvt* fls /*ast*/){
(fgm)(((fls)->bwd));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// buildBreak
static void czi(ge* flt /*ast*/){
biz* flu = nullptr; // info
if(!((ayg<int64_t>((((flt)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
throw 0xE9170000U;
}
(flu) = ((biy)(((flt)->nj)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u0020'))->Cat(v<Array_<char16_t>*>(((flu)->cra), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
// buildSkip
static void czk(ge* flv /*ast*/){
biz* flw = nullptr; // info
if(!((ayg<int64_t>((((flv)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (16843264LL))) == (16843264LL))){
throw 0xE9170000U;
}
(flw) = ((biy)(((flv)->nj)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0069', u'\u006E', u'\u0075', u'\u0065', u'\u0020'))->Cat(v<Array_<char16_t>*>(((flw)->cra), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
// buildAssert
static void czm(cll* flx /*ast*/){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u0028')));
(fgm)(((flx)->fdp));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0029', u'\u0029', u'\u007B', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020'))->Cat(v<uint32_t>((0xE9170000U), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003B', u'\u007D', u'\u000A'))));
}
// initAstImpl
static void dbd(fx* fly /*ast*/, int64_t flz /*typeId*/, ga* fma /*pos*/, Array_<char16_t>* fmb /*name*/, bool fmc /*setParent*/){
((fly)->lw) = (flz);
((fly)->ne) = (fma);
((fly)->nf) = (fmb);
((fly)->ng) = (nullptr);
((fly)->nh) = (nullptr);
((fly)->ni) = (nullptr);
((fly)->nj) = (nullptr);
((fly)->nk) = (nullptr);
((fly)->no) = (false);
if(!eqAddr_(((fly)->nf), (nullptr))){
(dfu)((fly), (true));
}
if(fmc){
((fly)->ng) = (fmh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))));
}
}
// readBuf
static char16_t dbw(){
char16_t fmn = 0; // c
if((avg) == (u'\u0000')){
if((avh) == (u'\u0000')){
do{
(fmn) = (((bmr)((be))) ? (u'\u0000') : ((bpd)((be))));
}while((fmn) == (u'\u000D'));
if((fmn) == (u'\u000A')){
(ave) = ((ave) + (1LL));
(avf) = (0LL);
}
else if((fmn) == (u'\u0000')){
if(!(avi)){
(avi) = (true);
(fmn) = (u'\u000A');
(ave) = ((ave) + (1LL));
(avf) = (0LL);
}
}
else{
(avf) = ((avf) + (1LL));
}
}
else{
(fmn) = (avh);
(avh) = (u'\u0000');
}
}
else{
(fmn) = (avg);
(avg) = (u'\u0000');
}
return fmn;
}
// makePos
static ga* dch(){
return (bql)((bf), (ave), (avf));
}
// charToStr
static Array_<char16_t>* dci(char16_t fmz /*c*/){
char16_t fnb = 0;
switch(fmz){
case u'\u0000':
return new Array_<char16_t>(1, u'\u0020');
break;
case u'\u000D':
if(!(false)){
throw 0xE9170000U;
}
break;
case u'\u000A':
return new Array_<char16_t>(8, u'\u0028', u'\u0052', u'\u0045', u'\u0054', u'\u0055', u'\u0052', u'\u004E', u'\u0029');
break;
case u'\u0009':
case u'\u0020':
return new Array_<char16_t>(7, u'\u0028', u'\u0053', u'\u0050', u'\u0041', u'\u0043', u'\u0045', u'\u0029');
break;
}
return v<char16_t>((fmz), (new Array_<int64_t>(1, (0LL))));
}
// addSrc
static void ddd(Array_<char16_t>* fng /*name*/){
bool fni = false;
if(eqAddr_((avq<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (fng), (&fni))), (nullptr))){
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (fng), (nullptr));
}
}
// readFuncAttr
static Array_<char16_t>* ddx(){
char16_t fnk = 0; // c
Array_<char16_t>* fnn = nullptr; // buf
int64_t fno = 0; // pos
(fnk) = ((bqn)());
if(!(((((((u'\u0061') <= (fnk)) && ((fnk) <= (u'\u007A'))) || (((u'\u0041') <= (fnk)) && ((fnk) <= (u'\u005A')))) || (((u'\u0030') <= (fnk)) && ((fnk) <= (u'\u0039')))) || ((fnk) == (u'\u005F'))) || ((fnk) == (u'\u002E')))){
(ad)((65548LL), ((dch)()), (new Array_<Array_<char16_t>*>(1, ((dci)((fnk))))));
return new Array_<char16_t>(0);
}
(fnn) = (newArray_<char16_t, Array_<char16_t>*>(1, (128LL)));
(fno) = (0LL);
do{
if((fno) == (128LL)){
(ad)((65549LL), ((dch)()), (new Array_<Array_<char16_t>*>(1, (fnn))));
return new Array_<char16_t>(0);
}
((fnn)->At(fno)) = (fnk);
(fno) = ((fno) + (1LL));
(fnk) = ((bsa)());
}while(((((((u'\u0061') <= (fnk)) && ((fnk) <= (u'\u007A'))) || (((u'\u0041') <= (fnk)) && ((fnk) <= (u'\u005A')))) || (((u'\u0030') <= (fnk)) && ((fnk) <= (u'\u0039')))) || ((fnk) == (u'\u005F'))) || ((fnk) == (u'\u002E')));
(avg) = (fnk);
return auy<Array_<char16_t>*>((fnn), (new Array_<int64_t>(1, (0LL))), (0LL), (fno));
}
// _or
template<typename T_> static T_ def(T_ fnt /*me_*/, Array_<int64_t>* fnu /*type*/, T_ fnv /*n*/){
return fnt | fnv;
}
// nextCharErr
static void dfl(char16_t fnw /*c*/, char16_t fnx /*c2*/){
(ad)((65550LL), ((dch)()), (new Array_<Array_<char16_t>*>(2, ((dci)((fnw))), ((dci)((fnx))))));
(brz)((fnx));
}
// addScopeRefeds
static void dfp(fx* fny /*ast*/, Array_<char16_t>* fnz /*name*/){
avn* foa = nullptr; // scopeRefedItem
((fny)->ni) = (fnz);
(foa) = (new avn());
((foa)->awm) = (fny);
((foa)->axh) = (fmh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))));
uj<List_<avn*>*, avn*>((bh), (new Array_<int64_t>(1, (0LL))), (foa));
}
// assertNextChar
static void dfq(char16_t fob /*c*/, bool foc /*skipSpaces*/){
char16_t fod = 0; // c2
(fod) = ((foc) ? ((bqn)()) : ((bsa)()));
if((fob) != (fod)){
(dfl)((fob), (fod));
(avg) = (fod);
}
}
// addScopeName
static void dfu(fx* fog /*ast*/, bool foh /*refuseReserved*/){
fx* fol = nullptr; // scope
bool fon = false;
fx* fop = nullptr; // parent
bool foq = false; // overFunc
fx* foz = nullptr; // child
bool fpa = false;
bool fpd = false; // flag
int64_t fpi = 0; // kind
if(!(!eqAddr_(((fog)->nf), (nullptr)))){
throw 0xE9170000U;
}
if((foh) && ((foj)(((fog)->nf)))){
(ad)((65537LL), ((dch)()), (new Array_<Array_<char16_t>*>(1, ((fog)->nf))));
return;
}
(fol) = (fmh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))));
if(!eqAddr_((avq<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fol)->nh), (new Array_<int64_t>(1, (0LL))), ((fog)->nf), (&fon))), (nullptr))){
(ad)((65537LL), ((dch)()), (new Array_<Array_<char16_t>*>(1, ((fog)->nf))));
}
(fop) = (fol);
(foq) = (false);
while(true){
if(eqAddr_(((fop)->ng), (nullptr))){
break;
}
if(((!eqAddr_(((fop)->nf), (nullptr))) && (cmp_(((fop)->nf), ((fog)->nf)) == 0)) && (!((((fop)->lw) == (256LL)) && (!eqAddr_(((fop)->ni), (nullptr)))))){
(ad)((65538LL), ((dch)()), (new Array_<Array_<char16_t>*>(1, ((fog)->nf))));
return;
}
(foz) = (avq<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fop)->nh), (new Array_<int64_t>(1, (0LL))), ((fog)->nf), (&fpa)));
if(!eqAddr_((foz), (nullptr))){
(fpd) = (false);
if(foq){
if(((foz)->lw) == (7LL)){
(fpi) = ((as_<gb>(classTable_, (foz), 10))->qk);
if((((fpi) == (5LL)) || ((fpi) == (3LL))) || ((fpi) == (2LL))){
(fpd) = (true);
}
}
if((!(fpd)) && ((ayg<int64_t>(((foz)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
(fpd) = (true);
}
}
if(((!(fpd)) && (((foz)->lw) == (256LL))) && (!eqAddr_(((foz)->ni), (nullptr)))){
(fpd) = (true);
}
if(!(fpd)){
(ad)((65538LL), ((dch)()), (new Array_<Array_<char16_t>*>(1, ((fog)->nf))));
return;
}
}
if(((fop)->lw) == (256LL)){
(foq) = (true);
}
(fop) = ((fop)->ng);
}
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fol)->nh), (new Array_<int64_t>(1, (0LL))), ((fog)->nf), (fog));
}
// _dtor
static void fpt(dfx* fpu){
((fpu)->ne) = (nullptr);
((fpu)->nf) = (nullptr);
((fpu)->ng) = (nullptr);
((fpu)->nh) = (nullptr);
((fpu)->ni) = (nullptr);
((fpu)->nj) = (nullptr);
((fpu)->nk) = (nullptr);
}
// _copy
static dfx* fpv(dfx* fpw){
dfx* fpx = nullptr;
(fpx) = (new dfx());
((fpx)->ne) = (copy_((fpw)->ne));
((fpx)->nf) = (copy_((fpw)->nf));
((fpx)->ng) = (copy_((fpw)->ng));
((fpx)->nh) = (copy_((fpw)->nh));
((fpx)->ni) = (copy_((fpw)->ni));
((fpx)->nj) = (copy_((fpw)->nj));
((fpx)->nk) = (copy_((fpw)->nk));
((fpx)->no) = ((fpw)->no);
((fpx)->lw) = ((fpw)->lw);
return as_<dfx>(classTable_, (fpx), 108);
}
// _toBin
static Array_<uint8_t>* fpy(dfx* fpz){
Array_<uint8_t>* fqa = nullptr;
(fqa) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fqa) = ((fqa)->Cat(toBin_((fpz)->ne)));
(fqa) = ((fqa)->Cat(toBin_((fpz)->nf)));
(fqa) = ((fqa)->Cat(toBin_((fpz)->ng)));
(fqa) = ((fqa)->Cat(toBin_((fpz)->nh)));
(fqa) = ((fqa)->Cat(toBin_((fpz)->ni)));
(fqa) = ((fqa)->Cat(toBin_((fpz)->nj)));
(fqa) = ((fqa)->Cat(toBin_((fpz)->nk)));
(fqa) = ((fqa)->Cat(toBin_((fpz)->no)));
(fqa) = ((fqa)->Cat(toBin_((fpz)->lw)));
return fqa;
}
// _fromBin
static dfx* fqk(dfx* fql, Array_<uint8_t>* fqm, int64_t* fqn){
dfx* fqo = nullptr;
(fqo) = (new dfx());
((fqo)->ne) = (fromBin_<ga*>((fqm), (*fqn)));
((fqo)->nf) = (fromBin_<Array_<char16_t>*>((fqm), (*fqn)));
((fqo)->ng) = (fromBin_<fx*>((fqm), (*fqn)));
((fqo)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fqm), (*fqn)));
((fqo)->ni) = (fromBin_<Array_<char16_t>*>((fqm), (*fqn)));
((fqo)->nj) = (fromBin_<fx*>((fqm), (*fqn)));
((fqo)->nk) = (fromBin_<fy*>((fqm), (*fqn)));
((fqo)->no) = (fromBin_<bool>((fqm), (*fqn)));
((fqo)->lw) = (fromBin_<int64_t>((fqm), (*fqn)));
return fqo;
}
// parseArg
static gb* dgf(int64_t fqp /*kind*/, Array_<char16_t>* fqq /*parentClass*/){
gb* fqr = nullptr; // ast
char16_t fqv = 0; // c
char16_t frd = 0; // c
int64_t frh = 0;
(fqr) = (new gb());
(bqk)((fqr), (7LL), ((dch)()), ((bre)((true), (false))), (false));
((fqr)->qk) = (fqp);
((fqr)->ql) = (false);
if(!eqAddr_((fqq), (nullptr))){
(dfp)((fqr), (fqq));
}
(dfq)((u'\u003A'), (true));
(fqv) = ((bqn)());
if((fqv) == (u'\u0026')){
if((fqp) != (2LL)){
(ad)((65556LL), ((dch)()), (nullptr));
}
else{
((fqr)->ql) = (true);
}
}
else{
(avg) = (fqv);
}
((fqr)->qf) = ((dgq)());
(frd) = ((bqn)());
if((frd) == (u'\u003A')){
(dfq)((u'\u003A'), (false));
if(!((fqp) != (0LL))){
throw 0xE9170000U;
}
switch(fqp){
case 2LL:
(ad)((65557LL), ((dch)()), (nullptr));
((fqr)->qg) = (nullptr);
break;
case 5LL:
(ad)((65558LL), ((dch)()), (nullptr));
((fqr)->qg) = (nullptr);
break;
default:
((fqr)->qg) = ((dlv)());
break;
}
}
else{
if((fqp) == (4LL)){
(ad)((65559LL), ((dch)()), (nullptr));
}
((fqr)->qg) = (nullptr);
(avg) = (frd);
}
return fqr;
}
// parseType
static gc* dgq(){
ga* fro = nullptr; // pos
gc* frp = nullptr; // ast
char16_t frq = 0; // c
cbh* frt = nullptr; // ast2
Array_<char16_t>* frv = nullptr; // id
Array_<char16_t>* fry = nullptr; // size
cbl* fsb = nullptr; // ast2
bool fsc = false;
Array_<char16_t>* fsg = nullptr;
cbp* fsi = nullptr; // ast2
cbq* fso = nullptr; // arg
ccm* ftd = nullptr; // ast2
ccm* ftf = nullptr; // ast2
ccm* fth = nullptr; // ast2
ccx* ftj = nullptr; // ast2
bvc* ftl = nullptr; // ast2
bvc* ftn = nullptr; // ast2
bvc* ftp = nullptr; // ast2
bvc* ftr = nullptr; // ast2
dfx* ftt = nullptr; // ast2
(fro) = ((dch)());
(frp) = (nullptr);
(frq) = ((bqn)());
if((frq) == (u'\u005B')){
(dfq)((u'\u005D'), (true));
(frt) = (new cbh());
(bqk)((frt), (66561LL), (fro), (nullptr), (false));
((frt)->cbj) = ((dgq)());
(frp) = (frt);
}
else{
(avg) = (frq);
(frv) = ((bre)((true), (true)));
if((((((frv)->Len()) >= (4LL)) && (((frv)->At(0LL)) == (u'\u0062'))) && (((frv)->At(1LL)) == (u'\u0069'))) && (((frv)->At(2LL)) == (u'\u0074'))){
(fry) = (auy<Array_<char16_t>*>((frv), (new Array_<int64_t>(1, (0LL))), (3LL), (((frv)->Len()) - (3LL))));
if((((cmp_((fry), (new Array_<char16_t>(1, u'\u0038'))) == 0) || (cmp_((fry), (new Array_<char16_t>(2, u'\u0031', u'\u0036'))) == 0)) || (cmp_((fry), (new Array_<char16_t>(2, u'\u0033', u'\u0032'))) == 0)) || (cmp_((fry), (new Array_<char16_t>(2, u'\u0036', u'\u0034'))) == 0)){
(fsb) = (new cbl());
(bqk)((fsb), (1025LL), (fro), (nullptr), (false));
((fsb)->cbm) = (((eq)((fry), (&fsc))) / (8LL));
(frp) = (fsb);
}
}
if(eqAddr_((frp), (nullptr))){
fsg = frv;
if(cmp_(fsg, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
(dfq)((u'\u003C'), (true));
(dfq)((u'\u0028'), (true));
(fsi) = (new cbp());
(bqk)((fsi), (66562LL), (fro), (nullptr), (false));
((fsi)->ekp) = (0LL);
((fsi)->ekl) = (new List_<Array_<char16_t>*>());
((fsi)->cbx) = (new List_<cbq*>());
((fsi)->cbs) = (nullptr);
(frq) = ((bqn)());
if((frq) != (u'\u0029')){
(avg) = (frq);
while(true){
(fso) = (new cbq());
(frq) = ((bqn)());
if((frq) == (u'\u0000')){
break;
}
if((frq) == (u'\u0026')){
((fso)->cch) = (true);
}
else{
((fso)->cch) = (false);
(avg) = (frq);
}
((fso)->ccf) = ((dgq)());
uj<List_<cbq*>*, cbq*>(((fsi)->cbx), (new Array_<int64_t>(1, (0LL))), (fso));
(frq) = ((bqn)());
if((frq) == (u'\u0029')){
break;
}
if((frq) != (u'\u002C')){
(dfl)((u'\u002C'), (frq));
break;
}
}
}
(frq) = ((bqn)());
if((frq) == (u'\u003A')){
((fsi)->cbs) = ((dgq)());
(frq) = ((bqn)());
}
if((frq) != (u'\u003E')){
(dfl)((u'\u003E'), (frq));
}
(frp) = (fsi);
}
else if(cmp_(fsg, (new Array_<char16_t>(4, u'\u006C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
(dfq)((u'\u003C'), (true));
(ftd) = (new ccm());
(bqk)((ftd), (66563LL), (fro), (nullptr), (false));
((ftd)->ccp) = (0LL);
((ftd)->ccr) = ((dgq)());
(dfq)((u'\u003E'), (true));
(frp) = (ftd);
}
else if(cmp_(fsg, (new Array_<char16_t>(5, u'\u0073', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
(dfq)((u'\u003C'), (true));
(ftf) = (new ccm());
(bqk)((ftf), (66563LL), (fro), (nullptr), (false));
((ftf)->ccp) = (1LL);
((ftf)->ccr) = ((dgq)());
(dfq)((u'\u003E'), (true));
(frp) = (ftf);
}
else if(cmp_(fsg, (new Array_<char16_t>(5, u'\u0071', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
(dfq)((u'\u003C'), (true));
(fth) = (new ccm());
(bqk)((fth), (66563LL), (fro), (nullptr), (false));
((fth)->ccp) = (2LL);
((fth)->ccr) = ((dgq)());
(dfq)((u'\u003E'), (true));
(frp) = (fth);
}
else if(cmp_(fsg, (new Array_<char16_t>(4, u'\u0064', u'\u0069', u'\u0063', u'\u0074'))) == 0){
(dfq)((u'\u003C'), (true));
(ftj) = (new ccx());
(bqk)((ftj), (66564LL), (fro), (nullptr), (false));
((ftj)->ccy) = ((dgq)());
(dfq)((u'\u002C'), (true));
((ftj)->ccz) = ((dgq)());
(dfq)((u'\u003E'), (true));
(frp) = (ftj);
}
else if(cmp_(fsg, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074'))) == 0){
(ftl) = (new bvc());
(bqk)((ftl), (1026LL), (fro), (nullptr), (false));
((ftl)->bvd) = (0LL);
(frp) = (ftl);
}
else if(cmp_(fsg, (new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
(ftn) = (new bvc());
(bqk)((ftn), (1026LL), (fro), (nullptr), (false));
((ftn)->bvd) = (1LL);
(frp) = (ftn);
}
else if(cmp_(fsg, (new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072'))) == 0){
(ftp) = (new bvc());
(bqk)((ftp), (1026LL), (fro), (nullptr), (false));
((ftp)->bvd) = (2LL);
(frp) = (ftp);
}
else if(cmp_(fsg, (new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C'))) == 0){
(ftr) = (new bvc());
(bqk)((ftr), (1026LL), (fro), (nullptr), (false));
((ftr)->bvd) = (3LL);
(frp) = (ftr);
}
else{(ftt) = (new dfx());
(bqk)((ftt), (66565LL), (fro), (nullptr), (false));
(dfp)((ftt), (frv));
(frp) = (ftt);
}
}
}
return frp;
}
// parseStat
static ge* dgx(fx* ftu /*block_*/){
char16_t ftx = 0; // c
int64_t fua = 0; // row
int64_t fub = 0; // col
Array_<char16_t>* fuc = nullptr; // id
Array_<char16_t>* fue = nullptr;
ge* fug = nullptr; // ast
do{
(ftx) = ((bqn)());
if((ftx) == (u'\u0000')){
(ad)((65560LL), ((dch)()), (nullptr));
return nullptr;
}
}while((ftx) == (u'\u000A'));
(avg) = (ftx);
(fua) = (ave);
(fub) = (avf);
(fuc) = ((bre)((true), (false)));
fue = fuc;
if(cmp_(fue, (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064'))) == 0){
(fug) = ((fuh)((fua), (fub), (ftu)));
}
else if(cmp_(fue, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
(fug) = ((fuj)());
}
else if(cmp_(fue, (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0){
(fug) = ((ful)());
}
else if(cmp_(fue, (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074'))) == 0){
(fug) = ((fun)());
}
else if(cmp_(fue, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073'))) == 0){
(fug) = ((fup)());
}
else if(cmp_(fue, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0){
(fug) = ((fur)());
}
else if(cmp_(fue, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0){
(fug) = ((fut)());
}
else if(cmp_(fue, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0){
(fug) = ((fuv)());
}
else if(cmp_(fue, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0069', u'\u0066'))) == 0){
(fug) = ((fux)((fua), (fub), (ftu)));
}
else if(cmp_(fue, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065'))) == 0){
(fug) = ((fuz)((fua), (fub), (ftu)));
}
else if(cmp_(fue, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068'))) == 0){
(fug) = ((fvb)((fua), (fub)));
}
else if(cmp_(fue, (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065'))) == 0){
(fug) = ((fvd)((fua), (fub), (ftu)));
}
else if(cmp_(fue, (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074'))) == 0){
(fug) = ((fvf)((fua), (fub), (ftu)));
}
else if(cmp_(fue, (new Array_<char16_t>(5, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065'))) == 0){
(fug) = ((fvh)());
}
else if(cmp_(fue, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0){
(fug) = ((fvj)((fua), (fub)));
}
else if(cmp_(fue, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0){
(fug) = ((fvl)((fua), (fub)));
}
else if(cmp_(fue, (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068'))) == 0){
(fug) = ((fvn)((fua), (fub), (ftu)));
}
else if(cmp_(fue, (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079'))) == 0){
(fug) = ((fvp)((fua), (fub), (ftu)));
}
else if(cmp_(fue, (new Array_<char16_t>(5, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077'))) == 0){
(fug) = ((fvr)());
}
else if(cmp_(fue, (new Array_<char16_t>(5, u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B'))) == 0){
(fug) = ((fvt)());
}
else if(cmp_(fue, (new Array_<char16_t>(3, u'\u0072', u'\u0065', u'\u0074'))) == 0){
(fug) = ((fvv)());
}
else if(cmp_(fue, (new Array_<char16_t>(2, u'\u0064', u'\u006F'))) == 0){
(fug) = ((fvx)());
}
else if(cmp_(fue, (new Array_<char16_t>(5, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B'))) == 0){
(fug) = ((fvz)());
}
else if(cmp_(fue, (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070'))) == 0){
(fug) = ((fwb)());
}
else if(cmp_(fue, (new Array_<char16_t>(6, u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074'))) == 0){
(fug) = ((fwd)());
}
else{(ad)((65547LL), ((bql)((bf), (fua), (fub))), (new Array_<Array_<char16_t>*>(1, (fuc))));
(brz)(((bsa)()));
return nullptr;
}
if(eqAddr_((fug), (nullptr))){
return nullptr;
}
((fug)->ne) = ((bql)((bf), (fua), (fub)));
return fug;
}
// parseExpr
static gd* dlv(){
gd* fwh = nullptr; // ast
int64_t fwj = 0; // row
int64_t fwk = 0; // col
char16_t fwl = 0; // c
bza* fwo = nullptr; // ast2
char16_t fwp = 0; // c2
char16_t fwr = 0;
(fwh) = ((fwi)());
(fwj) = (ave);
(fwk) = (avf);
(fwl) = ((bqn)());
if((fwl) == (u'\u003A')){
(fwo) = (new bza());
(dma)((fwo), (2050LL), ((bql)((bf), (fwj), (fwk))));
(fwp) = ((bsa)());
switch(fwp){
case u'\u003A':
((fwo)->bzb) = (0LL);
break;
case u'\u002B':
((fwo)->bzb) = (1LL);
break;
case u'\u002D':
((fwo)->bzb) = (2LL);
break;
case u'\u002A':
((fwo)->bzb) = (3LL);
break;
case u'\u002F':
((fwo)->bzb) = (4LL);
break;
case u'\u0025':
((fwo)->bzb) = (5LL);
break;
case u'\u005E':
((fwo)->bzb) = (6LL);
break;
case u'\u007E':
((fwo)->bzb) = (7LL);
break;
case u'\u0024':
((fwo)->bzb) = (25LL);
break;
default:
(ad)((65569LL), ((fwo)->ne), (new Array_<Array_<char16_t>*>(1, ((dci)((fwp))))));
(brz)((fwp));
return nullptr;
break;
}
((fwo)->bze) = (fwh);
((fwo)->bzf) = ((dlv)());
(fwh) = (fwo);
}
else{
(avg) = (fwl);
}
return fwh;
}
// initAstExpr
static void dma(gd* fxd /*ast*/, int64_t fxe /*typeId*/, ga* fxf /*pos*/){
if(!(is_(classTable_, (fxd), 14))){
throw 0xE9170000U;
}
(dbd)((fxd), (fxe), (fxf), (nullptr), (false));
((fxd)->pf) = (nullptr);
((fxd)->pj) = (0LL);
}
// readComment
static void dng(){
int64_t fxg = 0; // row
int64_t fxh = 0; // col
char16_t fxj = 0; // c
bool fxo = false; // esc
bool fye = false; // esc
(fxg) = (ave);
(fxh) = (avf);
do{
(fxj) = ((bsa)());
if((fxj) == (u'\u0000')){
(ad)((65539LL), ((bql)((bf), (fxg), (fxh))), (nullptr));
return;
}
if((fxj) == (u'\u0022')){
(fxo) = (false);
while(true){
(fxj) = ((fxs)());
if((fxj) == (u'\u0000')){
(ad)((65539LL), ((bql)((bf), (fxg), (fxh))), (nullptr));
return;
}
if(fxo){
if((fxj) == (u'\u007B')){
(dng)();
}
(fxo) = (false);
continue;
}
if((fxj) == (u'\u0022')){
break;
}
if((fxj) == (u'\u005C')){
(fxo) = (true);
}
}
}
else if((fxj) == (u'\u0027')){
(fye) = (false);
while(true){
(fxj) = ((fxs)());
if((fxj) == (u'\u0000')){
(ad)((65539LL), ((bql)((bf), (fxg), (fxh))), (nullptr));
return;
}
if(fye){
(fye) = (false);
continue;
}
if((fxj) == (u'\u0027')){
break;
}
if((fxj) == (u'\u005C')){
(fye) = (true);
}
}
}
else if((fxj) == (u'\u003B')){
while(true){
(fxj) = ((dbw)());
if((fxj) == (u'\u0000')){
(ad)((65539LL), ((bql)((bf), (fxg), (fxh))), (nullptr));
return;
}
if((fxj) == (u'\u000A')){
break;
}
}
}
}while((fxj) != (u'\u007D'));
}
// initAstImpl
static void dnn(fx* fyy /*ast*/, int64_t fyz /*typeId*/, ga* fza /*pos*/){
((fyy)->lw) = (fyz);
((fyy)->ne) = (fza);
((fyy)->nf) = (nullptr);
((fyy)->ng) = (nullptr);
((fyy)->nh) = (nullptr);
((fyy)->ni) = (nullptr);
((fyy)->nj) = (nullptr);
((fyy)->nk) = (nullptr);
((fyy)->no) = (false);
}
// rebuildExprRef
static gd* dth(gd* fzb /*ast*/){
fx* fze = nullptr; // refItem
int64_t fzi = 0;
fw* fzk = nullptr; // func_
cbp* fzm = nullptr; // type
List_<gb*>* fzo = nullptr; // items
gb* fzq = nullptr; // arg
cbq* fzr = nullptr; // arg2
gb* fzt = nullptr; // arg
int64_t fzv = 0;
if(!eqAddr_(((fzb)->nk), (nullptr))){
return as_<gd>(classTable_, ((fzb)->nk), 14);
}
((fzb)->nk) = (fzb);
if(!(((fzb)->lw) == (2062LL))){
throw 0xE9170000U;
}
(fze) = ((fzb)->nj);
if(eqAddr_((fze), (nullptr))){
return nullptr;
}
switch((fze)->lw){
case 256LL:
(fzk) = (as_<fw>(classTable_, ((fzb)->nj), 8));
(ayz)((fzk));
(fzm) = (new cbp());
(buq)((fzm), (66562LL), ((fzb)->ne));
((fzm)->ekp) = ((fzk)->sm);
((fzm)->ekl) = ((fzk)->sf);
((fzm)->cbx) = (new List_<cbq*>());
(fzo) = ((fzk)->sg);
awg<List_<gb*>*>((fzo), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gb*>*>((fzo), (new Array_<int64_t>(1, (0LL)))))){
(fzq) = (awk<List_<gb*>*, gb*>((fzo), (new Array_<int64_t>(1, (0LL)))));
(fzr) = (new cbq());
((fzr)->cch) = ((fzq)->ql);
((fzr)->ccf) = ((fzq)->qf);
uj<List_<cbq*>*, cbq*>(((fzm)->cbx), (new Array_<int64_t>(1, (0LL))), (fzr));
ayu<List_<gb*>*>((fzo), (new Array_<int64_t>(1, (0LL))));
}
((fzm)->cbs) = ((fzk)->sh);
((fzb)->pf) = (fzm);
((fzb)->pj) = (1LL);
break;
case 7LL:
(fzt) = (as_<gb>(classTable_, ((fzb)->nj), 10));
(bya)((fzt));
switch((fzt)->qk){
case 1LL:
((fzb)->pf) = ((fzt)->qf);
((fzb)->pj) = (3LL);
break;
case 2LL:
((fzb)->pf) = ((fzt)->qf);
((fzb)->pj) = (((fzt)->ql) ? (4LL) : (2LL));
break;
case 3LL:
((fzb)->pf) = ((fzt)->qf);
((fzb)->pj) = (2LL);
break;
case 4LL:
if(eqAddr_(((fzt)->qg), (nullptr))){
return nullptr;
}
if(!((ayg<int64_t>((((fzt)->qg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
throw 0xE9170000U;
}
((fzb)->nk) = ((fzt)->qg);
return as_<gd>(classTable_, ((fzb)->nk), 14);
break;
case 5LL:
(ad)((131075LL), ((fzb)->ne), (new Array_<Array_<char16_t>*>(1, ((fzb)->ni))));
return nullptr;
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66050LL:
case 16843266LL:
case 66051LL:
if(!(!eqAddr_(((fze)->nk), (nullptr)))){
throw 0xE9170000U;
}
((fzb)->nj) = ((as_<buu>(classTable_, (fze), 50))->bve);
((fzb)->pf) = (((as_<buu>(classTable_, (fze), 50))->bve)->qf);
((fzb)->pj) = (2LL);
break;
default:
if((((ayg<int64_t>(((fze)->lw), (new Array_<int64_t>(1, (0LL))), (2048LL))) == (2048LL)) && (!eqAddr_(((fze)->nk), (nullptr)))) && ((cma)(((as_<gd>(classTable_, ((fze)->nk), 14))->pf)))){
((fzb)->nk) = ((fze)->nk);
return as_<gd>(classTable_, ((fzb)->nk), 14);
}
(ad)((131136LL), ((fzb)->ne), (new Array_<Array_<char16_t>*>(1, ((fzb)->ni))));
return nullptr;
break;
}
return fzb;
}
// cmpType
static bool dyh(gc* gai /*type1*/, gc* gaj /*type2*/, bool gak /*strict*/){
int64_t gan = 0; // typeId1
int64_t gao = 0; // typeId2
bool gaq = false; // nullable1
bool gar = false; // nullable2
cbp* gba = nullptr; // func1
cbp* gbb = nullptr; // func2
List_<cbq*>* gbc = nullptr; // args1
List_<cbq*>* gbd = nullptr; // args2
cbq* gbf = nullptr; // arg1
cbq* gbg = nullptr; // arg2
ccx* gbv = nullptr; // dict1
ccx* gbw = nullptr; // dict2
un* gcg = nullptr; // class1
un* gch = nullptr; // class2
un* gci = nullptr; // ptr
if((eqAddr_((gai), (nullptr))) || (eqAddr_((gaj), (nullptr)))){
return false;
}
(gan) = ((gai)->lw);
(gao) = ((gaj)->lw);
(gaq) = ((((gan) == (66565LL)) && ((((gai)->nj)->lw) == (6LL))) ? (false) : ((ayg<int64_t>((gan), (new Array_<int64_t>(1, (0LL))), (66560LL))) == (66560LL)));
(gar) = ((((gao) == (66565LL)) && ((((gaj)->nj)->lw) == (6LL))) ? (false) : ((ayg<int64_t>((gao), (new Array_<int64_t>(1, (0LL))), (66560LL))) == (66560LL)));
if((((gaq) && ((gao) == (1027LL))) || (((gan) == (1027LL)) && (gar))) || (((gan) == (1027LL)) && ((gao) == (1027LL)))){
return true;
}
if(((gan) == (66561LL)) && ((gao) == (66561LL))){
return (dyh)(((as_<cbh>(classTable_, (gai), 76))->cbj), ((as_<cbh>(classTable_, (gaj), 76))->cbj), (true));
}
if(((gan) == (1025LL)) && ((gao) == (1025LL))){
return ((as_<cbl>(classTable_, (gai), 78))->cbm) == ((as_<cbl>(classTable_, (gaj), 78))->cbm);
}
if(((gan) == (66562LL)) && ((gao) == (66562LL))){
(gba) = (as_<cbp>(classTable_, (gai), 80));
(gbb) = (as_<cbp>(classTable_, (gaj), 80));
(gbc) = ((gba)->cbx);
(gbd) = ((gbb)->cbx);
awg<List_<cbq*>*>((gbc), (new Array_<int64_t>(1, (0LL))));
awg<List_<cbq*>*>((gbd), (new Array_<int64_t>(1, (0LL))));
while((!(awi<List_<cbq*>*>((gbc), (new Array_<int64_t>(1, (0LL)))))) && (!(awi<List_<cbq*>*>((gbd), (new Array_<int64_t>(1, (0LL))))))){
(gbf) = (awk<List_<cbq*>*, cbq*>((gbc), (new Array_<int64_t>(1, (0LL)))));
(gbg) = (awk<List_<cbq*>*, cbq*>((gbd), (new Array_<int64_t>(1, (0LL)))));
if((((gbf)->cch) != ((gbg)->cch)) || (!((dyh)(((gbf)->ccf), ((gbg)->ccf), (true))))){
return false;
}
ayu<List_<cbq*>*>((gbc), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>((gbd), (new Array_<int64_t>(1, (0LL))));
}
if(!((awi<List_<cbq*>*>((gbc), (new Array_<int64_t>(1, (0LL))))) && (awi<List_<cbq*>*>((gbd), (new Array_<int64_t>(1, (0LL))))))){
return false;
}
if((eqAddr_(((gba)->cbs), (nullptr))) && (eqAddr_(((gbb)->cbs), (nullptr)))){
return true;
}
if((eqAddr_(((gba)->cbs), (nullptr))) || (eqAddr_(((gbb)->cbs), (nullptr)))){
return false;
}
return (dyh)(((gba)->cbs), ((gbb)->cbs), (true));
}
if(((gan) == (66563LL)) && ((gao) == (66563LL))){
if(((as_<ccm>(classTable_, (gai), 84))->ccp) != ((as_<ccm>(classTable_, (gaj), 84))->ccp)){
return false;
}
return (dyh)(((as_<ccm>(classTable_, (gai), 84))->ccr), ((as_<ccm>(classTable_, (gaj), 84))->ccr), (true));
}
if(((gan) == (66564LL)) && ((gao) == (66564LL))){
(gbv) = (as_<ccx>(classTable_, (gai), 86));
(gbw) = (as_<ccx>(classTable_, (gaj), 86));
return ((dyh)(((gbv)->ccy), ((gbw)->ccy), (true))) && ((dyh)(((gbv)->ccz), ((gbw)->ccz), (true)));
}
if(((gan) == (1026LL)) && ((gao) == (1026LL))){
return ((as_<bvc>(classTable_, (gai), 60))->bvd) == ((as_<bvc>(classTable_, (gaj), 60))->bvd);
}
if(((gan) == (66565LL)) && ((gao) == (66565LL))){
if(!(((((gai)->nj)->lw) != (4LL)) && ((((gaj)->nj)->lw) != (4LL)))){
throw 0xE9170000U;
}
if(((((gai)->nj)->lw) == (5LL)) && ((((gaj)->nj)->lw) == (5LL))){
if(gak){
return eqAddr_((as_<un>(classTable_, ((gai)->nj), 22)), (as_<un>(classTable_, ((gaj)->nj), 22)));
}
else{
(gcg) = (as_<un>(classTable_, ((gai)->nj), 22));
(gch) = (as_<un>(classTable_, ((gaj)->nj), 22));
(gci) = (gcg);
while(!eqAddr_((gci), (nullptr))){
if(eqAddr_((gci), (gch))){
return true;
}
(gci) = (as_<un>(classTable_, ((gci)->nj), 22));
}
return false;
}
}
return eqAddr_(((gai)->nj), ((gaj)->nj));
}
if((((((gan) == (66565LL)) && ((((gai)->nj)->lw) == (6LL))) || ((gan) == (1028LL))) && ((((gao) == (66565LL)) && ((((gaj)->nj)->lw) == (6LL))) || ((gao) == (1028LL)))) && (!(((gan) == (1028LL)) && ((gao) == (1028LL))))){
return true;
}
return false;
}
// rebuildEnumElement
static bwo* dyk(gd* gco /*enumElement*/, gc* gcp /*type*/){
bwo* gcq = nullptr; // enumElement2
if(!(((gco)->lw) == (67587LL))){
throw 0xE9170000U;
}
if(!((cma)((gcp)))){
throw 0xE9170000U;
}
(gcq) = (new bwo());
(bvy)((gcq), (67585LL), ((gco)->ne));
((gcq)->bwq) = ((gcr)((as_<ebu>(classTable_, (gco), 130)), (as_<brx>(classTable_, ((gcp)->nj), 48))));
((gcq)->pf) = (gcp);
(gcq) = (as_<bwo>(classTable_, ((ebo)((gcq))), 70));
return gcq;
}
// rebuildClass
static void dyz(un* gcs /*ast*/){
fw* gcv = nullptr; // dtor
fw* gcw = nullptr; // copy
fw* gcx = nullptr; // toBin
fw* gcy = nullptr; // fromBin
if(!eqAddr_(((gcs)->nk), (nullptr))){
return;
}
((gcs)->nk) = (gcs);
(gcv) = (nullptr);
(gcw) = (nullptr);
(gcx) = (nullptr);
(gcy) = (nullptr);
(gcz)((gcs), (&gcv), (&gcw), (&gcx), (&gcy));
(gda)((gcs), (gcv), (gcw), (gcx), (gcy));
(ayz)((gcv));
(ayz)((gcw));
(ayz)((gcx));
(ayz)((gcy));
}
// rebuildEnum
static void dzb(brx* gdb /*ast*/){
dfx* gde = nullptr; // type
int64_t gdf = 0; // defaultNum
Dict_<int64_t, bool>* gdg = nullptr; // enumValues
List_<gd*>* gdh = nullptr; // items
gd* gdl = nullptr; // item
Array_<char16_t>* gdm = nullptr; // itemName
bwo* gdr = nullptr; // item2
int64_t gdz = 0; // value
bool geb = false;
if(!eqAddr_(((gdb)->nk), (nullptr))){
return;
}
((gdb)->nk) = (gdb);
(gde) = (new dfx());
(buq)((gde), (66565LL), ((gdb)->ne));
((gde)->nk) = (gde);
((gde)->nj) = (gdb);
(gdf) = (-1LL);
(gdg) = (new Dict_<int64_t, bool>());
(gdh) = ((gdb)->dld);
awg<List_<gd*>*>((gdh), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gd*>*>((gdh), (new Array_<int64_t>(1, (0LL)))))){
(gdl) = (awk<List_<gd*>*, gd*>((gdh), (new Array_<int64_t>(1, (0LL)))));
(gdm) = ((gdl)->nf);
(gdl) = ((byw)((gdl), (eqAddr_(((gdl)->pf), (nullptr)))));
if(eqAddr_((gdl), (nullptr))){
continue;
}
((gdl)->nf) = (gdm);
bfg<List_<gd*>*, gd*>((gdh), (new Array_<int64_t>(1, (0LL))), (gdl));
bfj<List_<gd*>*>((gdh), (new Array_<int64_t>(1, (0LL))));
if((((gdl)->lw) != (67585LL)) || ((!eqAddr_(((gdl)->pf), (nullptr))) && (!((bdi)(((gdl)->pf)))))){
(ad)((131087LL), ((gdb)->ne), (new Array_<Array_<char16_t>*>(2, ((gdb)->nf), ((gdl)->nf))));
return;
}
(gdr) = (as_<bwo>(classTable_, (gdl), 70));
if(eqAddr_(((gdl)->pf), (nullptr))){
if((gdf) == (9223372036854775807LL)){
(ad)((131088LL), ((gdb)->ne), (new Array_<Array_<char16_t>*>(2, ((gdb)->nf), ((gdl)->nf))));
return;
}
(gdf) = ((gdf) + (1LL));
((gdr)->bwq) = (static_cast<uint64_t>(gdf));
}
else{
(gdf) = (static_cast<int64_t>((gdr)->bwq));
}
(gdz) = (static_cast<int64_t>((gdr)->bwq));
if(avq<Dict_<int64_t, bool>*, int64_t, bool>((gdg), (new Array_<int64_t>(1, (0LL))), (gdz), (&geb))){
(ad)((131089LL), ((gdb)->ne), (new Array_<Array_<char16_t>*>(3, ((gdb)->nf), ((gdl)->nf), (v<int64_t>((gdz), (new Array_<int64_t>(1, (0LL))))))));
return;
}
dv<Dict_<int64_t, bool>*, int64_t, bool>((gdg), (new Array_<int64_t>(1, (0LL))), (gdz), (true));
((gdl)->pf) = (gde);
}
}
// rebuildAlias
static void dzd(brr* ged /*ast*/, brr* gee /*parent*/){
if(cmp_((ged), (gee)) == 0){
(ad)((131079LL), ((gee)->ne), (new Array_<Array_<char16_t>*>(1, ((gee)->nf))));
((ged)->dih) = (nullptr);
return;
}
if(!eqAddr_(((ged)->nk), (nullptr))){
return;
}
((ged)->nk) = (ged);
((ged)->dih) = ((byd)(((ged)->dih), (ged)));
}
// rebuildExpr1
static gd* eah(eai* gej /*ast*/){
gc* gep = nullptr; // childType
int64_t ger = 0;
bwo* gfg = nullptr; // expr
ebx* gfh = nullptr; // expr
bwo* gfp = nullptr; // expr
bvc* gfw = nullptr; // type
if(!eqAddr_(((gej)->nk), (nullptr))){
return as_<gd>(classTable_, ((gej)->nk), 14);
}
((gej)->nk) = (gej);
((gej)->gem) = ((byw)(((gej)->gem), (false)));
if(eqAddr_(((gej)->gem), (nullptr))){
return nullptr;
}
if(!(eqAddr_(((gej)->pf), (nullptr)))){
throw 0xE9170000U;
}
(gep) = (((gej)->gem)->pf);
switch((gej)->ges){
case 0LL:
if((((bdi)((gep))) || ((gev)((gep)))) || (((gep)->lw) == (1025LL))){
if((ayg<int64_t>((((gej)->gem)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)){
((gej)->nk) = ((gej)->gem);
return as_<gd>(classTable_, ((gej)->nk), 14);
}
((gej)->pf) = (gep);
}
break;
case 1LL:
if(((bdi)((gep))) || ((gev)((gep)))){
if((ayg<int64_t>((((gej)->gem)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)){
if((bdi)((gep))){
(gfg) = (new bwo());
(bvy)((gfg), (67585LL), ((gej)->ne));
((gfg)->pf) = (gep);
((gfg)->bwq) = (static_cast<uint64_t>(-(static_cast<int64_t>((as_<bwo>(classTable_, ((gej)->gem), 70))->bwq))));
(gfg) = (as_<bwo>(classTable_, ((ebo)((gfg))), 70));
((gej)->nk) = (gfg);
return as_<gd>(classTable_, ((gej)->nk), 14);
}
if(!((gev)((gep)))){
throw 0xE9170000U;
}
(gfh) = (new ebx());
(bvy)((gfh), (67588LL), ((gej)->ne));
((gfh)->pf) = (gep);
((gfh)->gfi) = (-((as_<ebx>(classTable_, ((gej)->gem), 132))->gfi));
(gfh) = (as_<ebx>(classTable_, ((ebw)((gfh))), 132));
((gej)->nk) = (gfh);
return as_<gd>(classTable_, ((gej)->nk), 14);
}
((gej)->pf) = (gep);
}
break;
case 2LL:
if((gfl)((gep))){
if((((gej)->gem)->lw) == (67585LL)){
(gfp) = (new bwo());
(bvy)((gfp), (67585LL), ((gej)->ne));
((gfp)->pf) = (gep);
((gfp)->bwq) = ((((as_<bwo>(classTable_, ((gej)->gem), 70))->bwq) != (0x0000000000000000ULL)) ? (0x0000000000000000ULL) : (0x0000000000000001ULL));
(gfp) = (as_<bwo>(classTable_, ((ebo)((gfp))), 70));
((gej)->nk) = (gfp);
return as_<gd>(classTable_, ((gej)->nk), 14);
}
((gej)->pf) = (gep);
}
break;
case 3LL:
if(((((efs)((gep))) || (((gep)->lw) == (66561LL))) || (((gep)->lw) == (66563LL))) || (((gep)->lw) == (66564LL))){
((gej)->pf) = (gep);
}
break;
case 4LL:
if(((((gep)->lw) == (66561LL)) || (((gep)->lw) == (66563LL))) || (((gep)->lw) == (66564LL))){
(gfw) = (new bvc());
(buq)((gfw), (1026LL), ((gej)->ne));
((gfw)->bvd) = (0LL);
((gej)->pf) = (gfw);
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(eqAddr_(((gej)->pf), (nullptr))){
(ad)((131113LL), ((gej)->ne), (nullptr));
return nullptr;
}
((gej)->pj) = (1LL);
return gej;
}
// _dtor
static void gga(eai* ggb){
((ggb)->gem) = (nullptr);
((ggb)->pf) = (nullptr);
((ggb)->ne) = (nullptr);
((ggb)->nf) = (nullptr);
((ggb)->ng) = (nullptr);
((ggb)->nh) = (nullptr);
((ggb)->ni) = (nullptr);
((ggb)->nj) = (nullptr);
((ggb)->nk) = (nullptr);
}
// _copy
static eai* ggc(eai* ggd){
eai* gge = nullptr;
(gge) = (new eai());
((gge)->ges) = ((ggd)->ges);
((gge)->gem) = (copy_((ggd)->gem));
((gge)->pf) = (copy_((ggd)->pf));
((gge)->pj) = ((ggd)->pj);
((gge)->ne) = (copy_((ggd)->ne));
((gge)->nf) = (copy_((ggd)->nf));
((gge)->ng) = (copy_((ggd)->ng));
((gge)->nh) = (copy_((ggd)->nh));
((gge)->ni) = (copy_((ggd)->ni));
((gge)->nj) = (copy_((ggd)->nj));
((gge)->nk) = (copy_((ggd)->nk));
((gge)->no) = ((ggd)->no);
((gge)->lw) = ((ggd)->lw);
return as_<eai>(classTable_, (gge), 110);
}
// _toBin
static Array_<uint8_t>* ggf(eai* ggg){
Array_<uint8_t>* ggh = nullptr;
(ggh) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->ges)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->gem)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->pf)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->pj)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->ne)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->nf)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->ng)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->nh)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->ni)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->nj)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->nk)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->no)));
(ggh) = ((ggh)->Cat(toBin_((ggg)->lw)));
return ggh;
}
// _fromBin
static eai* ggv(eai* ggw, Array_<uint8_t>* ggx, int64_t* ggy){
eai* ggz = nullptr;
(ggz) = (new eai());
((ggz)->ges) = (fromBin_<int64_t>((ggx), (*ggy)));
((ggz)->gem) = (fromBin_<gd*>((ggx), (*ggy)));
((ggz)->pf) = (fromBin_<gc*>((ggx), (*ggy)));
((ggz)->pj) = (fromBin_<int64_t>((ggx), (*ggy)));
((ggz)->ne) = (fromBin_<ga*>((ggx), (*ggy)));
((ggz)->nf) = (fromBin_<Array_<char16_t>*>((ggx), (*ggy)));
((ggz)->ng) = (fromBin_<fx*>((ggx), (*ggy)));
((ggz)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ggx), (*ggy)));
((ggz)->ni) = (fromBin_<Array_<char16_t>*>((ggx), (*ggy)));
((ggz)->nj) = (fromBin_<fx*>((ggx), (*ggy)));
((ggz)->nk) = (fromBin_<fy*>((ggx), (*ggy)));
((ggz)->no) = (fromBin_<bool>((ggx), (*ggy)));
((ggz)->lw) = (fromBin_<int64_t>((ggx), (*ggy)));
return ggz;
}
// rebuildExpr2
static gd* eak(bza* gha /*ast*/){
bool ghk = false; // correct
int64_t ghm = 0;
un* ghs = nullptr; // ptr
bool gid = false; // value
bvc* gin = nullptr; // type
bool giw = false; // value
gc* gix = nullptr; // children0Type
uint64_t gja = 0; // n1
uint64_t gjb = 0; // n2
int64_t gjd = 0;
int64_t gjk = 0; // n1
int64_t gjl = 0; // n2
int64_t gjn = 0;
double gju = 0.0; // n1
double gjv = 0.0; // n2
int64_t gjx = 0;
int64_t gke = 0; // cmp
int64_t gki = 0;
bwo* gko = nullptr; // expr
bvc* gku = nullptr; // type
bool glc = false; // value
gc* gld = nullptr; // children0Type
uint64_t glg = 0; // n1
uint64_t glh = 0; // n2
int64_t glj = 0;
int64_t glo = 0; // cmp
int64_t glq = 0;
bwo* glu = nullptr; // expr
bvc* gly = nullptr; // type
Array_<char16_t>* gmi = nullptr; // s1
Array_<char16_t>* gmj = nullptr; // s2
ebr* gmk = nullptr; // expr
uint64_t gms = 0; // n1
uint64_t gmt = 0; // n2
int64_t gmv = 0;
bwo* gnl = nullptr; // expr
int64_t gno = 0; // n1
int64_t gnp = 0; // n2
int64_t gnr = 0;
bwo* goh = nullptr; // expr
double goj = 0.0; // n1
double gok = 0.0; // n2
int64_t gom = 0;
ebx* gpc = nullptr; // expr
if(!eqAddr_(((gha)->nk), (nullptr))){
return as_<gd>(classTable_, ((gha)->nk), 14);
}
((gha)->nk) = (gha);
((gha)->bze) = ((byw)(((gha)->bze), (false)));
if(eqAddr_(((gha)->bze), (nullptr))){
return nullptr;
}
((gha)->bzf) = ((byw)(((gha)->bzf), (false)));
if(eqAddr_(((gha)->bzf), (nullptr))){
return nullptr;
}
if(!((dyh)((((gha)->bzf)->pf), (((gha)->bze)->pf), (false)))){
(ad)((131113LL), ((gha)->ne), (nullptr));
return nullptr;
}
(ghk) = (false);
switch((gha)->bzb){
case 0LL:
if((((gha)->bze)->pj) == (1LL)){
(ad)((131114LL), ((gha)->ne), (nullptr));
return nullptr;
}
if(((efs)((((gha)->bze)->pf))) && ((efs)((((gha)->bzf)->pf)))){
(ghs) = (as_<un>(classTable_, ((((gha)->bzf)->pf)->nj), 22));
while(!eqAddr_(((((gha)->bze)->pf)->nj), (ghs))){
(ghs) = (as_<un>(classTable_, ((ghs)->nj), 22));
if(eqAddr_((ghs), (nullptr))){
(ad)((131113LL), ((gha)->ne), (nullptr));
return nullptr;
}
}
}
if(((((gha)->bzf)->pf)->lw) == (1028LL)){
((gha)->bzf) = ((dyk)(((gha)->bzf), (((gha)->bze)->pf)));
}
((gha)->pf) = (nullptr);
(ghk) = (true);
break;
case 8LL:
case 9LL:
if((gfl)((((gha)->bze)->pf))){
if((((gha)->bze)->lw) == (67585LL)){
(gid) = (((as_<bwo>(classTable_, ((gha)->bze), 70))->bwq) != (0x0000000000000000ULL));
if(((gha)->bzb) == (8LL)){
((gha)->nk) = ((gid) ? ((gha)->bze) : ((gha)->bzf));
}
else{
if(!(((gha)->bzb) == (9LL))){
throw 0xE9170000U;
}
((gha)->nk) = ((!(gid)) ? ((gha)->bze) : ((gha)->bzf));
}
return as_<gd>(classTable_, ((gha)->nk), 14);
}
((gha)->pf) = (((gha)->bze)->pf);
(ghk) = (true);
}
break;
case 10LL:
case 11LL:
case 12LL:
case 13LL:
if((((((gha)->bze)->pf)->lw) == (1027LL)) || (((((gha)->bzf)->pf)->lw) == (1027LL))){
(ad)((131115LL), ((gha)->ne), (nullptr));
return nullptr;
}
if((gil)((((gha)->bze)->pf), (true))){
(gin) = (new bvc());
(buq)((gin), (1026LL), ((gha)->ne));
((gin)->bvd) = (3LL);
if(((((gha)->bze)->pf)->lw) == (1028LL)){
if(((((gha)->bzf)->pf)->lw) == (1028LL)){
if(!((((gha)->bze)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((gha)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<ebu>(classTable_, ((gha)->bze), 130))->gis))));
return nullptr;
}
((gha)->bze) = ((dyk)(((gha)->bze), (((gha)->bzf)->pf)));
}
else if(((((gha)->bzf)->pf)->lw) == (1028LL)){
((gha)->bzf) = ((dyk)(((gha)->bzf), (((gha)->bze)->pf)));
}
if(((ayg<int64_t>((((gha)->bze)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((ayg<int64_t>((((gha)->bzf)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
(giw) = (false);
(gix) = (((gha)->bze)->pf);
if((((gix)->lw) == (1025LL)) || ((equ)((gix)))){
(gja) = ((as_<bwo>(classTable_, ((gha)->bze), 70))->bwq);
(gjb) = ((as_<bwo>(classTable_, ((gha)->bzf), 70))->bwq);
switch((gha)->bzb){
case 10LL:
(giw) = ((gja) < (gjb));
break;
case 11LL:
(giw) = ((gja) > (gjb));
break;
case 12LL:
(giw) = ((gja) <= (gjb));
break;
case 13LL:
(giw) = ((gja) >= (gjb));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if(((bdi)((gix))) || ((cma)((gix)))){
(gjk) = (static_cast<int64_t>((as_<bwo>(classTable_, ((gha)->bze), 70))->bwq));
(gjl) = (static_cast<int64_t>((as_<bwo>(classTable_, ((gha)->bzf), 70))->bwq));
switch((gha)->bzb){
case 10LL:
(giw) = ((gjk) < (gjl));
break;
case 11LL:
(giw) = ((gjk) > (gjl));
break;
case 12LL:
(giw) = ((gjk) <= (gjl));
break;
case 13LL:
(giw) = ((gjk) >= (gjl));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if((gev)((gix))){
(gju) = ((as_<ebx>(classTable_, ((gha)->bze), 132))->gfi);
(gjv) = ((as_<ebx>(classTable_, ((gha)->bzf), 132))->gfi);
switch((gha)->bzb){
case 10LL:
(giw) = ((gju) < (gjv));
break;
case 11LL:
(giw) = ((gju) > (gjv));
break;
case 12LL:
(giw) = ((gju) <= (gjv));
break;
case 13LL:
(giw) = ((gju) >= (gjv));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((fis)((gix)))){
throw 0xE9170000U;
}
(gke) = ((gkf)(((as_<ebr>(classTable_, ((gha)->bze), 128))->gkg), ((as_<ebr>(classTable_, ((gha)->bzf), 128))->gkg)));
switch((gha)->bzb){
case 10LL:
(giw) = ((gke) < (0LL));
break;
case 11LL:
(giw) = ((gke) > (0LL));
break;
case 12LL:
(giw) = ((gke) <= (0LL));
break;
case 13LL:
(giw) = ((gke) >= (0LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
(gko) = (new bwo());
(bvy)((gko), (67585LL), ((gha)->ne));
((gko)->pf) = (gin);
((gko)->bwq) = ((giw) ? (0x0000000000000001ULL) : (0x0000000000000000ULL));
(gko) = (as_<bwo>(classTable_, ((ebo)((gko))), 70));
((gha)->nk) = (gko);
return as_<gd>(classTable_, ((gha)->nk), 14);
}
((gha)->pf) = (gin);
(ghk) = (true);
}
break;
case 14LL:
case 15LL:
if((((((gha)->bze)->pf)->lw) == (1027LL)) || (((((gha)->bzf)->pf)->lw) == (1027LL))){
(ad)((131115LL), ((gha)->ne), (nullptr));
return nullptr;
}
if((gil)((((gha)->bze)->pf), (false))){
(gku) = (new bvc());
(buq)((gku), (1026LL), ((gha)->ne));
((gku)->bvd) = (3LL);
if(((((gha)->bze)->pf)->lw) == (1028LL)){
if(((((gha)->bzf)->pf)->lw) == (1028LL)){
if(!((((gha)->bze)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((gha)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<ebu>(classTable_, ((gha)->bze), 130))->gis))));
return nullptr;
}
((gha)->bze) = ((dyk)(((gha)->bze), (((gha)->bzf)->pf)));
}
else if(((((gha)->bzf)->pf)->lw) == (1028LL)){
((gha)->bzf) = ((dyk)(((gha)->bzf), (((gha)->bze)->pf)));
}
if(((ayg<int64_t>((((gha)->bze)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((ayg<int64_t>((((gha)->bzf)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
(glc) = (false);
(gld) = (((gha)->bze)->pf);
if((((((((gld)->lw) == (1025LL)) || ((bdi)((gld)))) || ((gev)((gld)))) || ((equ)((gld)))) || ((gfl)((gld)))) || ((cma)((gld)))){
(glg) = ((as_<bwo>(classTable_, ((gha)->bze), 70))->bwq);
(glh) = ((as_<bwo>(classTable_, ((gha)->bzf), 70))->bwq);
switch((gha)->bzb){
case 14LL:
(glc) = ((glg) == (glh));
break;
case 15LL:
(glc) = ((glg) != (glh));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((fis)((gld)))){
throw 0xE9170000U;
}
(glo) = ((gkf)(((as_<ebr>(classTable_, ((gha)->bze), 128))->gkg), ((as_<ebr>(classTable_, ((gha)->bzf), 128))->gkg)));
switch((gha)->bzb){
case 14LL:
(glc) = ((glo) == (0LL));
break;
case 15LL:
(glc) = ((glo) != (0LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
(glu) = (new bwo());
(bvy)((glu), (67585LL), ((gha)->ne));
((glu)->pf) = (gku);
((glu)->bwq) = ((glc) ? (0x0000000000000001ULL) : (0x0000000000000000ULL));
(glu) = (as_<bwo>(classTable_, ((ebo)((glu))), 70));
((gha)->nk) = (glu);
return as_<gd>(classTable_, ((gha)->nk), 14);
}
((gha)->pf) = (gku);
(ghk) = (true);
}
break;
case 16LL:
case 17LL:
if(((clv)((((gha)->bze)->pf))) || (((((gha)->bze)->pf)->lw) == (1027LL))){
(gly) = (new bvc());
(buq)((gly), (1026LL), ((gha)->ne));
((gly)->bvd) = (3LL);
((gha)->pf) = (gly);
(ghk) = (true);
}
break;
case 18LL:
if((((((gha)->bze)->pf)->lw) == (1027LL)) || (((((gha)->bzf)->pf)->lw) == (1027LL))){
(ad)((131117LL), ((gha)->ne), (nullptr));
return nullptr;
}
if(((((gha)->bze)->pf)->lw) == (66561LL)){
if(((ayg<int64_t>((((gha)->bze)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((ayg<int64_t>((((gha)->bzf)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
if((fis)((((gha)->bze)->pf))){
(gmi) = ((as_<ebr>(classTable_, ((gha)->bze), 128))->gkg);
(gmj) = ((as_<ebr>(classTable_, ((gha)->bzf), 128))->gkg);
(gmk) = (new ebr());
(bvy)((gmk), (67586LL), ((gha)->ne));
((gmk)->pf) = (((gha)->bze)->pf);
((gmk)->gkg) = ((gmi)->Cat(gmj));
(gmk) = (as_<ebr>(classTable_, ((ebq)((gmk))), 128));
((gha)->nk) = (gmk);
return as_<gd>(classTable_, ((gha)->nk), 14);
}
}
((gha)->pf) = (((gha)->bze)->pf);
(ghk) = (true);
}
break;
case 19LL:
case 20LL:
case 21LL:
case 22LL:
case 23LL:
if(((((((gha)->bze)->pf)->lw) == (1025LL)) || ((bdi)((((gha)->bze)->pf)))) || ((gev)((((gha)->bze)->pf)))){
if(((ayg<int64_t>((((gha)->bze)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((ayg<int64_t>((((gha)->bzf)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
if(((((gha)->bze)->pf)->lw) == (1025LL)){
(gms) = ((as_<bwo>(classTable_, ((gha)->bze), 70))->bwq);
(gmt) = ((as_<bwo>(classTable_, ((gha)->bzf), 70))->bwq);
switch((gha)->bzb){
case 19LL:
(gms) = ((gms) + (gmt));
break;
case 20LL:
(gms) = ((gms) - (gmt));
break;
case 21LL:
(gms) = ((gms) * (gmt));
break;
case 22LL:
if((gmt) == (0x0000000000000000ULL)){
(ad)((131118LL), ((gha)->ne), (nullptr));
return nullptr;
}
(gms) = ((gms) / (gmt));
break;
case 23LL:
if((gmt) == (0x0000000000000000ULL)){
(ad)((131118LL), ((gha)->ne), (nullptr));
return nullptr;
}
(gms) = ((gms) % (gmt));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(gnl) = (new bwo());
(bvy)((gnl), (67585LL), ((gha)->ne));
((gnl)->pf) = (((gha)->bze)->pf);
((gnl)->bwq) = ((gnm)(((as_<cbl>(classTable_, (((gha)->bze)->pf), 78))->cbm), (gms)));
(gnl) = (as_<bwo>(classTable_, ((ebo)((gnl))), 70));
((gha)->nk) = (gnl);
return as_<gd>(classTable_, ((gha)->nk), 14);
}
else if((bdi)((((gha)->bze)->pf))){
(gno) = (static_cast<int64_t>((as_<bwo>(classTable_, ((gha)->bze), 70))->bwq));
(gnp) = (static_cast<int64_t>((as_<bwo>(classTable_, ((gha)->bzf), 70))->bwq));
switch((gha)->bzb){
case 19LL:
(gno) = ((gno) + (gnp));
break;
case 20LL:
(gno) = ((gno) - (gnp));
break;
case 21LL:
(gno) = ((gno) * (gnp));
break;
case 22LL:
if((gnp) == (0LL)){
(ad)((131118LL), ((gha)->ne), (nullptr));
return nullptr;
}
(gno) = ((gno) / (gnp));
break;
case 23LL:
if((gnp) == (0LL)){
(ad)((131118LL), ((gha)->ne), (nullptr));
return nullptr;
}
(gno) = ((gno) % (gnp));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(goh) = (new bwo());
(bvy)((goh), (67585LL), ((gha)->ne));
((goh)->pf) = (((gha)->bze)->pf);
((goh)->bwq) = (static_cast<uint64_t>(gno));
(goh) = (as_<bwo>(classTable_, ((ebo)((goh))), 70));
((gha)->nk) = (goh);
return as_<gd>(classTable_, ((gha)->nk), 14);
}
else{
if(!((gev)((((gha)->bze)->pf)))){
throw 0xE9170000U;
}
(goj) = ((as_<ebx>(classTable_, ((gha)->bze), 132))->gfi);
(gok) = ((as_<ebx>(classTable_, ((gha)->bzf), 132))->gfi);
switch((gha)->bzb){
case 19LL:
(goj) = ((goj) + (gok));
break;
case 20LL:
(goj) = ((goj) - (gok));
break;
case 21LL:
(goj) = ((goj) * (gok));
break;
case 22LL:
if(((goj) == (0.0)) && ((gok) == (0.0))){
(ad)((131118LL), ((gha)->ne), (nullptr));
return nullptr;
}
(goj) = ((goj) / (gok));
break;
case 23LL:
if(((goj) == (0.0)) && ((gok) == (0.0))){
(ad)((131118LL), ((gha)->ne), (nullptr));
return nullptr;
}
(goj) = (fmod((goj), (gok)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(gpc) = (new ebx());
(bvy)((gpc), (67588LL), ((gha)->ne));
((gpc)->pf) = (((gha)->bze)->pf);
((gpc)->gfi) = (goj);
(gpc) = (as_<ebx>(classTable_, ((ebw)((gpc))), 132));
((gha)->nk) = (gpc);
return as_<gd>(classTable_, ((gha)->nk), 14);
}
}
((gha)->pf) = (((gha)->bze)->pf);
(ghk) = (true);
}
break;
case 24LL:
if(((bdi)((((gha)->bze)->pf))) || ((gev)((((gha)->bze)->pf)))){
((gha)->pf) = (((gha)->bze)->pf);
(ghk) = (true);
}
break;
case 25LL:
if(((((gha)->bze)->pj) == (1LL)) || ((((gha)->bzf)->pj) == (1LL))){
(ad)((131119LL), ((gha)->ne), (nullptr));
return nullptr;
}
if((!((efs)((((gha)->bze)->pf)))) && (!eqAddr_(((((gha)->bze)->pf)->nj), ((((gha)->bzf)->pf)->nj)))){
((gha)->pf) = (((gha)->bze)->pf);
(ghk) = (true);
}
break;
}
if(!(ghk)){
(ad)((131113LL), ((gha)->ne), (nullptr));
return nullptr;
}
((gha)->pj) = (1LL);
return gha;
}
// rebuildExpr3
static gd* eam(ean* gpn /*ast*/){
if(!eqAddr_(((gpn)->nk), (nullptr))){
return as_<gd>(classTable_, ((gpn)->nk), 14);
}
((gpn)->nk) = (gpn);
((gpn)->gpq) = ((byw)(((gpn)->gpq), (false)));
if(eqAddr_(((gpn)->gpq), (nullptr))){
return nullptr;
}
((gpn)->gpt) = ((byw)(((gpn)->gpt), (false)));
if(eqAddr_(((gpn)->gpt), (nullptr))){
return nullptr;
}
((gpn)->gpw) = ((byw)(((gpn)->gpw), (false)));
if(eqAddr_(((gpn)->gpw), (nullptr))){
return nullptr;
}
if(!((gfl)((((gpn)->gpq)->pf)))){
(ad)((131120LL), ((gpn)->ne), (nullptr));
return nullptr;
}
if((!((dyh)((((gpn)->gpt)->pf), (((gpn)->gpw)->pf), (false)))) && (!((dyh)((((gpn)->gpw)->pf), (((gpn)->gpt)->pf), (false))))){
(ad)((131121LL), ((gpn)->ne), (nullptr));
return nullptr;
}
if((((gpn)->gpq)->lw) == (67585LL)){
((gpn)->nk) = ((((as_<bwo>(classTable_, ((gpn)->gpq), 70))->bwq) != (0x0000000000000000ULL)) ? ((gpn)->gpt) : ((gpn)->gpw));
return as_<gd>(classTable_, ((gpn)->nk), 14);
}
if(((((gpn)->gpt)->pf)->lw) == (1028LL)){
if(((((gpn)->gpw)->pf)->lw) == (1028LL)){
if(!((((gpn)->gpt)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((gpn)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<ebu>(classTable_, ((gpn)->gpt), 130))->gis))));
return nullptr;
}
((gpn)->gpt) = ((dyk)(((gpn)->gpt), (((gpn)->gpw)->pf)));
}
else if(((((gpn)->gpw)->pf)->lw) == (1028LL)){
((gpn)->gpw) = ((dyk)(((gpn)->gpw), (((gpn)->gpt)->pf)));
}
if((dyh)((((gpn)->gpt)->pf), (((gpn)->gpw)->pf), (false))){
((gpn)->pf) = ((((((gpn)->gpw)->pf)->lw) == (1027LL)) ? (((gpn)->gpt)->pf) : (((gpn)->gpw)->pf));
}
else{
((gpn)->pf) = ((((((gpn)->gpt)->pf)->lw) == (1027LL)) ? (((gpn)->gpw)->pf) : (((gpn)->gpt)->pf));
}
((gpn)->pj) = (1LL);
return gpn;
}
// _dtor
static void gqn(ean* gqo){
((gqo)->gpq) = (nullptr);
((gqo)->gpt) = (nullptr);
((gqo)->gpw) = (nullptr);
((gqo)->pf) = (nullptr);
((gqo)->ne) = (nullptr);
((gqo)->nf) = (nullptr);
((gqo)->ng) = (nullptr);
((gqo)->nh) = (nullptr);
((gqo)->ni) = (nullptr);
((gqo)->nj) = (nullptr);
((gqo)->nk) = (nullptr);
}
// _copy
static ean* gqp(ean* gqq){
ean* gqr = nullptr;
(gqr) = (new ean());
((gqr)->gpq) = (copy_((gqq)->gpq));
((gqr)->gpt) = (copy_((gqq)->gpt));
((gqr)->gpw) = (copy_((gqq)->gpw));
((gqr)->pf) = (copy_((gqq)->pf));
((gqr)->pj) = ((gqq)->pj);
((gqr)->ne) = (copy_((gqq)->ne));
((gqr)->nf) = (copy_((gqq)->nf));
((gqr)->ng) = (copy_((gqq)->ng));
((gqr)->nh) = (copy_((gqq)->nh));
((gqr)->ni) = (copy_((gqq)->ni));
((gqr)->nj) = (copy_((gqq)->nj));
((gqr)->nk) = (copy_((gqq)->nk));
((gqr)->no) = ((gqq)->no);
((gqr)->lw) = ((gqq)->lw);
return as_<ean>(classTable_, (gqr), 112);
}
// _toBin
static Array_<uint8_t>* gqs(ean* gqt){
Array_<uint8_t>* gqu = nullptr;
(gqu) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->gpq)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->gpt)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->gpw)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->pf)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->pj)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->ne)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->nf)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->ng)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->nh)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->ni)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->nj)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->nk)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->no)));
(gqu) = ((gqu)->Cat(toBin_((gqt)->lw)));
return gqu;
}
// _fromBin
static ean* grj(ean* grk, Array_<uint8_t>* grl, int64_t* grm){
ean* grn = nullptr;
(grn) = (new ean());
((grn)->gpq) = (fromBin_<gd*>((grl), (*grm)));
((grn)->gpt) = (fromBin_<gd*>((grl), (*grm)));
((grn)->gpw) = (fromBin_<gd*>((grl), (*grm)));
((grn)->pf) = (fromBin_<gc*>((grl), (*grm)));
((grn)->pj) = (fromBin_<int64_t>((grl), (*grm)));
((grn)->ne) = (fromBin_<ga*>((grl), (*grm)));
((grn)->nf) = (fromBin_<Array_<char16_t>*>((grl), (*grm)));
((grn)->ng) = (fromBin_<fx*>((grl), (*grm)));
((grn)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((grl), (*grm)));
((grn)->ni) = (fromBin_<Array_<char16_t>*>((grl), (*grm)));
((grn)->nj) = (fromBin_<fx*>((grl), (*grm)));
((grn)->nk) = (fromBin_<fy*>((grl), (*grm)));
((grn)->no) = (fromBin_<bool>((grl), (*grm)));
((grn)->lw) = (fromBin_<int64_t>((grl), (*grm)));
return grn;
}
// rebuildExprNew
static gd* eap(eaq* gro /*ast*/){
if(!eqAddr_(((gro)->nk), (nullptr))){
return as_<gd>(classTable_, ((gro)->nk), 14);
}
((gro)->nk) = (gro);
((gro)->grr) = ((byd)(((gro)->grr), (nullptr)));
if(eqAddr_(((gro)->grr), (nullptr))){
return nullptr;
}
if(((efs)(((gro)->grr))) && (eqAddr_((((gro)->grr)->nj), (nullptr)))){
return nullptr;
}
if(!((((efs)(((gro)->grr))) || ((((gro)->grr)->lw) == (66563LL))) || ((((gro)->grr)->lw) == (66564LL)))){
(ad)((131122LL), ((gro)->ne), (nullptr));
return nullptr;
}
((gro)->pf) = ((gro)->grr);
((gro)->pj) = (1LL);
return gro;
}
// _dtor
static void gry(eaq* grz){
((grz)->grr) = (nullptr);
((grz)->pf) = (nullptr);
((grz)->ne) = (nullptr);
((grz)->nf) = (nullptr);
((grz)->ng) = (nullptr);
((grz)->nh) = (nullptr);
((grz)->ni) = (nullptr);
((grz)->nj) = (nullptr);
((grz)->nk) = (nullptr);
}
// _copy
static eaq* gsa(eaq* gsb){
eaq* gsc = nullptr;
(gsc) = (new eaq());
((gsc)->grr) = (copy_((gsb)->grr));
((gsc)->pf) = (copy_((gsb)->pf));
((gsc)->pj) = ((gsb)->pj);
((gsc)->ne) = (copy_((gsb)->ne));
((gsc)->nf) = (copy_((gsb)->nf));
((gsc)->ng) = (copy_((gsb)->ng));
((gsc)->nh) = (copy_((gsb)->nh));
((gsc)->ni) = (copy_((gsb)->ni));
((gsc)->nj) = (copy_((gsb)->nj));
((gsc)->nk) = (copy_((gsb)->nk));
((gsc)->no) = ((gsb)->no);
((gsc)->lw) = ((gsb)->lw);
return as_<eaq>(classTable_, (gsc), 114);
}
// _toBin
static Array_<uint8_t>* gsd(eaq* gse){
Array_<uint8_t>* gsf = nullptr;
(gsf) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gsf) = ((gsf)->Cat(toBin_((gse)->grr)));
(gsf) = ((gsf)->Cat(toBin_((gse)->pf)));
(gsf) = ((gsf)->Cat(toBin_((gse)->pj)));
(gsf) = ((gsf)->Cat(toBin_((gse)->ne)));
(gsf) = ((gsf)->Cat(toBin_((gse)->nf)));
(gsf) = ((gsf)->Cat(toBin_((gse)->ng)));
(gsf) = ((gsf)->Cat(toBin_((gse)->nh)));
(gsf) = ((gsf)->Cat(toBin_((gse)->ni)));
(gsf) = ((gsf)->Cat(toBin_((gse)->nj)));
(gsf) = ((gsf)->Cat(toBin_((gse)->nk)));
(gsf) = ((gsf)->Cat(toBin_((gse)->no)));
(gsf) = ((gsf)->Cat(toBin_((gse)->lw)));
return gsf;
}
// _fromBin
static eaq* gss(eaq* gst, Array_<uint8_t>* gsu, int64_t* gsv){
eaq* gsw = nullptr;
(gsw) = (new eaq());
((gsw)->grr) = (fromBin_<gc*>((gsu), (*gsv)));
((gsw)->pf) = (fromBin_<gc*>((gsu), (*gsv)));
((gsw)->pj) = (fromBin_<int64_t>((gsu), (*gsv)));
((gsw)->ne) = (fromBin_<ga*>((gsu), (*gsv)));
((gsw)->nf) = (fromBin_<Array_<char16_t>*>((gsu), (*gsv)));
((gsw)->ng) = (fromBin_<fx*>((gsu), (*gsv)));
((gsw)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gsu), (*gsv)));
((gsw)->ni) = (fromBin_<Array_<char16_t>*>((gsu), (*gsv)));
((gsw)->nj) = (fromBin_<fx*>((gsu), (*gsv)));
((gsw)->nk) = (fromBin_<fy*>((gsu), (*gsv)));
((gsw)->no) = (fromBin_<bool>((gsu), (*gsv)));
((gsw)->lw) = (fromBin_<int64_t>((gsu), (*gsv)));
return gsw;
}
// rebuildExprNewArray
static gd* eas(eat* gsx /*ast*/){
List_<gd*>* gtb = nullptr; // items
gd* gtg = nullptr; // data
gc* gtp = nullptr; // type
int64_t gtt = 0;
cbh* gtv = nullptr; // type2
int64_t gtu = 0;
if(!eqAddr_(((gsx)->nk), (nullptr))){
return as_<gd>(classTable_, ((gsx)->nk), 14);
}
((gsx)->nk) = (gsx);
(gtb) = ((gsx)->gtc);
awg<List_<gd*>*>((gtb), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gd*>*>((gtb), (new Array_<int64_t>(1, (0LL)))))){
(gtg) = (awk<List_<gd*>*, gd*>((gtb), (new Array_<int64_t>(1, (0LL)))));
(gtg) = ((byw)((gtg), (false)));
if(eqAddr_((gtg), (nullptr))){
return nullptr;
}
if(!((bdi)(((gtg)->pf)))){
(ad)((131123LL), ((gtg)->ne), (nullptr));
return nullptr;
}
bfg<List_<gd*>*, gd*>((gtb), (new Array_<int64_t>(1, (0LL))), (gtg));
bfj<List_<gd*>*>((gtb), (new Array_<int64_t>(1, (0LL))));
}
((gsx)->gtl) = ((byd)(((gsx)->gtl), (nullptr)));
if(eqAddr_(((gsx)->gtl), (nullptr))){
return nullptr;
}
(gtp) = ((gsx)->gtl);
for(gtt = (0LL), gtu = ((((gsx)->gtc)->Len()) - (1LL)); gtt <= gtu; gtt += (1LL)){
(gtv) = (new cbh());
(buq)((gtv), (66561LL), ((gsx)->ne));
((gtv)->cbj) = (gtp);
(gtp) = (gtv);
}
((gsx)->pf) = (gtp);
((gsx)->pj) = (1LL);
return gsx;
}
// _dtor
static void gtw(eat* gtx){
((gtx)->gtc) = (nullptr);
((gtx)->gtl) = (nullptr);
((gtx)->pf) = (nullptr);
((gtx)->ne) = (nullptr);
((gtx)->nf) = (nullptr);
((gtx)->ng) = (nullptr);
((gtx)->nh) = (nullptr);
((gtx)->ni) = (nullptr);
((gtx)->nj) = (nullptr);
((gtx)->nk) = (nullptr);
}
// _copy
static eat* gty(eat* gtz){
eat* gua = nullptr;
(gua) = (new eat());
((gua)->gtc) = (copy_((gtz)->gtc));
((gua)->gtl) = (copy_((gtz)->gtl));
((gua)->pf) = (copy_((gtz)->pf));
((gua)->pj) = ((gtz)->pj);
((gua)->ne) = (copy_((gtz)->ne));
((gua)->nf) = (copy_((gtz)->nf));
((gua)->ng) = (copy_((gtz)->ng));
((gua)->nh) = (copy_((gtz)->nh));
((gua)->ni) = (copy_((gtz)->ni));
((gua)->nj) = (copy_((gtz)->nj));
((gua)->nk) = (copy_((gtz)->nk));
((gua)->no) = ((gtz)->no);
((gua)->lw) = ((gtz)->lw);
return as_<eat>(classTable_, (gua), 116);
}
// _toBin
static Array_<uint8_t>* gub(eat* guc){
Array_<uint8_t>* gud = nullptr;
(gud) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gud) = ((gud)->Cat(toBin_((guc)->gtc)));
(gud) = ((gud)->Cat(toBin_((guc)->gtl)));
(gud) = ((gud)->Cat(toBin_((guc)->pf)));
(gud) = ((gud)->Cat(toBin_((guc)->pj)));
(gud) = ((gud)->Cat(toBin_((guc)->ne)));
(gud) = ((gud)->Cat(toBin_((guc)->nf)));
(gud) = ((gud)->Cat(toBin_((guc)->ng)));
(gud) = ((gud)->Cat(toBin_((guc)->nh)));
(gud) = ((gud)->Cat(toBin_((guc)->ni)));
(gud) = ((gud)->Cat(toBin_((guc)->nj)));
(gud) = ((gud)->Cat(toBin_((guc)->nk)));
(gud) = ((gud)->Cat(toBin_((guc)->no)));
(gud) = ((gud)->Cat(toBin_((guc)->lw)));
return gud;
}
// _fromBin
static eat* gur(eat* gus, Array_<uint8_t>* gut, int64_t* guu){
eat* guv = nullptr;
(guv) = (new eat());
((guv)->gtc) = (fromBin_<List_<gd*>*>((gut), (*guu)));
((guv)->gtl) = (fromBin_<gc*>((gut), (*guu)));
((guv)->pf) = (fromBin_<gc*>((gut), (*guu)));
((guv)->pj) = (fromBin_<int64_t>((gut), (*guu)));
((guv)->ne) = (fromBin_<ga*>((gut), (*guu)));
((guv)->nf) = (fromBin_<Array_<char16_t>*>((gut), (*guu)));
((guv)->ng) = (fromBin_<fx*>((gut), (*guu)));
((guv)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gut), (*guu)));
((guv)->ni) = (fromBin_<Array_<char16_t>*>((gut), (*guu)));
((guv)->nj) = (fromBin_<fx*>((gut), (*guu)));
((guv)->nk) = (fromBin_<fy*>((gut), (*guu)));
((guv)->no) = (fromBin_<bool>((gut), (*guu)));
((guv)->lw) = (fromBin_<int64_t>((gut), (*guu)));
return guv;
}
// rebuildExprAs
static gd* eav(eaw* guw /*ast*/){
int64_t gvg = 0;
gc* gvj = nullptr; // t1
gc* gvk = nullptr; // t2
uint64_t gwx = 0; // n
bwo* gxa = nullptr; // expr
bwo* gxc = nullptr; // expr
ebx* gxe = nullptr; // expr
bwo* gxj = nullptr; // expr
bwo* gxl = nullptr; // expr
bwo* gxn = nullptr; // expr
double gxp = 0.0; // n
bwo* gxs = nullptr; // expr
bwo* gxu = nullptr; // expr
bvc* gxy = nullptr; // type
if(!eqAddr_(((guw)->nk), (nullptr))){
return as_<gd>(classTable_, ((guw)->nk), 14);
}
((guw)->nk) = (guw);
((guw)->guz) = ((byw)(((guw)->guz), (false)));
if(eqAddr_(((guw)->guz), (nullptr))){
return nullptr;
}
((guw)->gvc) = ((byd)(((guw)->gvc), (nullptr)));
if(eqAddr_(((guw)->gvc), (nullptr))){
return nullptr;
}
if(!(eqAddr_(((guw)->pf), (nullptr)))){
throw 0xE9170000U;
}
switch((guw)->gvh){
case 0LL:
(gvj) = (((guw)->guz)->pf);
(gvk) = ((guw)->gvc);
if((((gvj)->lw) == (1025LL)) || ((bdi)((gvj)))){
if((((((((gvk)->lw) == (1025LL)) || ((bdi)((gvk)))) || ((gev)((gvk)))) || ((equ)((gvk)))) || ((gfl)((gvk)))) || ((cma)((gvk)))){
if((dyh)((gvj), (gvk), (false))){
((guw)->nk) = ((guw)->guz);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
((guw)->pf) = (gvk);
}
}
else if((gev)((gvj))){
if(((((gvk)->lw) == (1025LL)) || ((bdi)((gvk)))) || ((gev)((gvk)))){
if((dyh)((gvj), (gvk), (false))){
((guw)->nk) = ((guw)->guz);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
((guw)->pf) = (gvk);
}
}
else if((equ)((gvj))){
if(((((gvk)->lw) == (1025LL)) || ((bdi)((gvk)))) || ((equ)((gvk)))){
if((dyh)((gvj), (gvk), (false))){
((guw)->nk) = ((guw)->guz);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
((guw)->pf) = (gvk);
}
}
else if((gfl)((gvj))){
if(((((gvk)->lw) == (1025LL)) || ((bdi)((gvk)))) || ((gfl)((gvk)))){
if((dyh)((gvj), (gvk), (false))){
((guw)->nk) = ((guw)->guz);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
((guw)->pf) = (gvk);
}
}
else if((efs)((gvj))){
if((efs)((gvk))){
((guw)->pf) = (gvk);
}
}
else if((cma)((gvj))){
if(((((gvk)->lw) == (1025LL)) || ((bdi)((gvk)))) || ((cma)((gvk)))){
if((dyh)((gvj), (gvk), (false))){
((guw)->nk) = ((guw)->guz);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
((guw)->pf) = (gvk);
}
}
else if(((gvj)->lw) == (1028LL)){
if((cma)((gvk))){
((guw)->pf) = (gvk);
}
}
if(!eqAddr_(((guw)->pf), (nullptr))){
if((ayg<int64_t>((((guw)->guz)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)){
if(((((((gvj)->lw) == (1025LL)) || ((equ)((gvj)))) || ((gfl)((gvj)))) || ((bdi)((gvj)))) || ((cma)((gvj)))){
(gwx) = ((as_<bwo>(classTable_, ((guw)->guz), 70))->bwq);
if(((gvk)->lw) == (1025LL)){
(gxa) = (new bwo());
(bvy)((gxa), (67585LL), ((guw)->ne));
((gxa)->pf) = ((guw)->pf);
((gxa)->bwq) = ((gnm)(((as_<cbl>(classTable_, (gvk), 78))->cbm), (gwx)));
(gxa) = (as_<bwo>(classTable_, ((ebo)((gxa))), 70));
((guw)->nk) = (gxa);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
else if(((bdi)((gvk))) || ((cma)((gvk)))){
(gxc) = (new bwo());
(bvy)((gxc), (67585LL), ((guw)->ne));
((gxc)->pf) = ((guw)->pf);
((gxc)->bwq) = (gwx);
(gxc) = (as_<bwo>(classTable_, ((ebo)((gxc))), 70));
((guw)->nk) = (gxc);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
else if((gev)((gvk))){
(gxe) = (new ebx());
(bvy)((gxe), (67588LL), ((guw)->ne));
((gxe)->pf) = ((guw)->pf);
if(((bdi)((gvj))) || ((cma)((gvj)))){
((gxe)->gfi) = (static_cast<double>(static_cast<int64_t>(gwx)));
}
else{
((gxe)->gfi) = (static_cast<double>(gwx));
}
(gxe) = (as_<ebx>(classTable_, ((ebw)((gxe))), 132));
((guw)->nk) = (gxe);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
else if((equ)((gvk))){
(gxj) = (new bwo());
(bvy)((gxj), (67585LL), ((guw)->ne));
((gxj)->pf) = ((guw)->pf);
((gxj)->bwq) = ((gnm)((2LL), (gwx)));
(gxj) = (as_<bwo>(classTable_, ((ebo)((gxj))), 70));
((guw)->nk) = (gxj);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
else{
if(!((gfl)((gvk)))){
throw 0xE9170000U;
}
(gxl) = (new bwo());
(bvy)((gxl), (67585LL), ((guw)->ne));
((gxl)->pf) = ((guw)->pf);
((gxl)->bwq) = (((gwx) != (0x0000000000000000ULL)) ? (0x0000000000000001ULL) : (0x0000000000000000ULL));
(gxl) = (as_<bwo>(classTable_, ((ebo)((gxl))), 70));
((guw)->nk) = (gxl);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
}
else if(((gvj)->lw) == (1028LL)){
if(!((((gvk)->nj)->lw) == (6LL))){
throw 0xE9170000U;
}
(gxn) = (new bwo());
(bvy)((gxn), (67585LL), ((guw)->ne));
((gxn)->pf) = ((guw)->pf);
((gxn)->bwq) = ((gcr)((as_<ebu>(classTable_, ((guw)->guz), 130)), (as_<brx>(classTable_, ((gvk)->nj), 48))));
(gxn) = (as_<bwo>(classTable_, ((ebo)((gxn))), 70));
((guw)->nk) = (gxn);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
else{
if(!((gev)((gvj)))){
throw 0xE9170000U;
}
(gxp) = ((as_<ebx>(classTable_, ((guw)->guz), 132))->gfi);
if(((gvk)->lw) == (1025LL)){
(gxs) = (new bwo());
(bvy)((gxs), (67585LL), ((guw)->ne));
((gxs)->pf) = ((guw)->pf);
((gxs)->bwq) = ((gnm)(((as_<cbl>(classTable_, (gvk), 78))->cbm), (static_cast<uint64_t>(gxp))));
(gxs) = (as_<bwo>(classTable_, ((ebo)((gxs))), 70));
((guw)->nk) = (gxs);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
else{
if(!((bdi)((gvk)))){
throw 0xE9170000U;
}
(gxu) = (new bwo());
(bvy)((gxu), (67585LL), ((guw)->ne));
((gxu)->pf) = ((guw)->pf);
((gxu)->bwq) = (static_cast<uint64_t>(gxp));
(gxu) = (as_<bwo>(classTable_, ((ebo)((gxu))), 70));
((guw)->nk) = (gxu);
return as_<gd>(classTable_, ((guw)->nk), 14);
}
}
}
}
break;
case 1LL:
case 2LL:
if(((efs)((((guw)->guz)->pf))) && ((efs)(((guw)->gvc)))){
(gxy) = (new bvc());
(buq)((gxy), (1026LL), ((guw)->ne));
((gxy)->bvd) = (3LL);
((guw)->pf) = (gxy);
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(eqAddr_(((guw)->pf), (nullptr))){
(ad)((131113LL), ((guw)->ne), (nullptr));
return nullptr;
}
((guw)->pj) = (1LL);
return guw;
}
// _dtor
static void gyc(eaw* gyd){
((gyd)->guz) = (nullptr);
((gyd)->gvc) = (nullptr);
((gyd)->pf) = (nullptr);
((gyd)->ne) = (nullptr);
((gyd)->nf) = (nullptr);
((gyd)->ng) = (nullptr);
((gyd)->nh) = (nullptr);
((gyd)->ni) = (nullptr);
((gyd)->nj) = (nullptr);
((gyd)->nk) = (nullptr);
}
// _copy
static eaw* gye(eaw* gyf){
eaw* gyg = nullptr;
(gyg) = (new eaw());
((gyg)->gvh) = ((gyf)->gvh);
((gyg)->guz) = (copy_((gyf)->guz));
((gyg)->gvc) = (copy_((gyf)->gvc));
((gyg)->pf) = (copy_((gyf)->pf));
((gyg)->pj) = ((gyf)->pj);
((gyg)->ne) = (copy_((gyf)->ne));
((gyg)->nf) = (copy_((gyf)->nf));
((gyg)->ng) = (copy_((gyf)->ng));
((gyg)->nh) = (copy_((gyf)->nh));
((gyg)->ni) = (copy_((gyf)->ni));
((gyg)->nj) = (copy_((gyf)->nj));
((gyg)->nk) = (copy_((gyf)->nk));
((gyg)->no) = ((gyf)->no);
((gyg)->lw) = ((gyf)->lw);
return as_<eaw>(classTable_, (gyg), 118);
}
// _toBin
static Array_<uint8_t>* gyh(eaw* gyi){
Array_<uint8_t>* gyj = nullptr;
(gyj) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->gvh)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->guz)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->gvc)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->pf)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->pj)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->ne)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->nf)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->ng)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->nh)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->ni)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->nj)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->nk)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->no)));
(gyj) = ((gyj)->Cat(toBin_((gyi)->lw)));
return gyj;
}
// _fromBin
static eaw* gyy(eaw* gyz, Array_<uint8_t>* gza, int64_t* gzb){
eaw* gzc = nullptr;
(gzc) = (new eaw());
((gzc)->gvh) = (fromBin_<int64_t>((gza), (*gzb)));
((gzc)->guz) = (fromBin_<gd*>((gza), (*gzb)));
((gzc)->gvc) = (fromBin_<gc*>((gza), (*gzb)));
((gzc)->pf) = (fromBin_<gc*>((gza), (*gzb)));
((gzc)->pj) = (fromBin_<int64_t>((gza), (*gzb)));
((gzc)->ne) = (fromBin_<ga*>((gza), (*gzb)));
((gzc)->nf) = (fromBin_<Array_<char16_t>*>((gza), (*gzb)));
((gzc)->ng) = (fromBin_<fx*>((gza), (*gzb)));
((gzc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gza), (*gzb)));
((gzc)->ni) = (fromBin_<Array_<char16_t>*>((gza), (*gzb)));
((gzc)->nj) = (fromBin_<fx*>((gza), (*gzb)));
((gzc)->nk) = (fromBin_<fy*>((gza), (*gzb)));
((gzc)->no) = (fromBin_<bool>((gza), (*gzb)));
((gzc)->lw) = (fromBin_<int64_t>((gza), (*gzb)));
return gzc;
}
// rebuildExprToBin
static gd* eay(eaz* gzd /*ast*/){
if(!eqAddr_(((gzd)->nk), (nullptr))){
return as_<gd>(classTable_, ((gzd)->nk), 14);
}
((gzd)->nk) = (gzd);
((gzd)->gzg) = ((byw)(((gzd)->gzg), (false)));
if(eqAddr_(((gzd)->gzg), (nullptr))){
return nullptr;
}
if((((((gzd)->gzg)->pf)->lw) == (1027LL)) || (((((gzd)->gzg)->pf)->lw) == (1028LL))){
(ad)((131113LL), ((gzd)->ne), (nullptr));
return nullptr;
}
if((((((gzd)->gzm)->lw) != (66561LL)) || ((((as_<cbh>(classTable_, ((gzd)->gzm), 76))->cbj)->lw) != (1025LL))) || (((as_<cbl>(classTable_, ((as_<cbh>(classTable_, ((gzd)->gzm), 76))->cbj), 78))->cbm) != (1LL))){
(ad)((131113LL), ((gzd)->ne), (nullptr));
return nullptr;
}
((gzd)->pf) = ((gzd)->gzm);
((gzd)->pj) = (1LL);
return gzd;
}
// _dtor
static void gzo(eaz* gzp){
((gzp)->gzg) = (nullptr);
((gzp)->gzm) = (nullptr);
((gzp)->pf) = (nullptr);
((gzp)->ne) = (nullptr);
((gzp)->nf) = (nullptr);
((gzp)->ng) = (nullptr);
((gzp)->nh) = (nullptr);
((gzp)->ni) = (nullptr);
((gzp)->nj) = (nullptr);
((gzp)->nk) = (nullptr);
}
// _copy
static eaz* gzq(eaz* gzr){
eaz* gzs = nullptr;
(gzs) = (new eaz());
((gzs)->gzg) = (copy_((gzr)->gzg));
((gzs)->gzm) = (copy_((gzr)->gzm));
((gzs)->pf) = (copy_((gzr)->pf));
((gzs)->pj) = ((gzr)->pj);
((gzs)->ne) = (copy_((gzr)->ne));
((gzs)->nf) = (copy_((gzr)->nf));
((gzs)->ng) = (copy_((gzr)->ng));
((gzs)->nh) = (copy_((gzr)->nh));
((gzs)->ni) = (copy_((gzr)->ni));
((gzs)->nj) = (copy_((gzr)->nj));
((gzs)->nk) = (copy_((gzr)->nk));
((gzs)->no) = ((gzr)->no);
((gzs)->lw) = ((gzr)->lw);
return as_<eaz>(classTable_, (gzs), 120);
}
// _toBin
static Array_<uint8_t>* gzt(eaz* gzu){
Array_<uint8_t>* gzv = nullptr;
(gzv) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->gzg)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->gzm)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->pf)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->pj)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->ne)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->nf)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->ng)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->nh)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->ni)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->nj)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->nk)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->no)));
(gzv) = ((gzv)->Cat(toBin_((gzu)->lw)));
return gzv;
}
// _fromBin
static eaz* haj(eaz* hak, Array_<uint8_t>* hal, int64_t* ham){
eaz* han = nullptr;
(han) = (new eaz());
((han)->gzg) = (fromBin_<gd*>((hal), (*ham)));
((han)->gzm) = (fromBin_<gc*>((hal), (*ham)));
((han)->pf) = (fromBin_<gc*>((hal), (*ham)));
((han)->pj) = (fromBin_<int64_t>((hal), (*ham)));
((han)->ne) = (fromBin_<ga*>((hal), (*ham)));
((han)->nf) = (fromBin_<Array_<char16_t>*>((hal), (*ham)));
((han)->ng) = (fromBin_<fx*>((hal), (*ham)));
((han)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hal), (*ham)));
((han)->ni) = (fromBin_<Array_<char16_t>*>((hal), (*ham)));
((han)->nj) = (fromBin_<fx*>((hal), (*ham)));
((han)->nk) = (fromBin_<fy*>((hal), (*ham)));
((han)->no) = (fromBin_<bool>((hal), (*ham)));
((han)->lw) = (fromBin_<int64_t>((hal), (*ham)));
return han;
}
// rebuildExprFromBin
static gd* ebb(ebc* hao /*ast*/){
if(!eqAddr_(((hao)->nk), (nullptr))){
return as_<gd>(classTable_, ((hao)->nk), 14);
}
((hao)->nk) = (hao);
((hao)->har) = ((byw)(((hao)->har), (false)));
if(eqAddr_(((hao)->har), (nullptr))){
return nullptr;
}
if(((((((hao)->har)->pf)->lw) != (66561LL)) || ((((as_<cbh>(classTable_, (((hao)->har)->pf), 76))->cbj)->lw) != (1025LL))) || (((as_<cbl>(classTable_, ((as_<cbh>(classTable_, (((hao)->har)->pf), 76))->cbj), 78))->cbm) != (1LL))){
(ad)((131113LL), ((hao)->ne), (nullptr));
return nullptr;
}
((hao)->pf) = ((hao)->haw);
((hao)->pj) = (1LL);
((hao)->hax) = ((byw)(((hao)->hax), (false)));
return hao;
}
// _dtor
static void hay(ebc* haz){
((haz)->har) = (nullptr);
((haz)->haw) = (nullptr);
((haz)->hax) = (nullptr);
((haz)->pf) = (nullptr);
((haz)->ne) = (nullptr);
((haz)->nf) = (nullptr);
((haz)->ng) = (nullptr);
((haz)->nh) = (nullptr);
((haz)->ni) = (nullptr);
((haz)->nj) = (nullptr);
((haz)->nk) = (nullptr);
}
// _copy
static ebc* hba(ebc* hbb){
ebc* hbc = nullptr;
(hbc) = (new ebc());
((hbc)->har) = (copy_((hbb)->har));
((hbc)->haw) = (copy_((hbb)->haw));
((hbc)->hax) = (copy_((hbb)->hax));
((hbc)->pf) = (copy_((hbb)->pf));
((hbc)->pj) = ((hbb)->pj);
((hbc)->ne) = (copy_((hbb)->ne));
((hbc)->nf) = (copy_((hbb)->nf));
((hbc)->ng) = (copy_((hbb)->ng));
((hbc)->nh) = (copy_((hbb)->nh));
((hbc)->ni) = (copy_((hbb)->ni));
((hbc)->nj) = (copy_((hbb)->nj));
((hbc)->nk) = (copy_((hbb)->nk));
((hbc)->no) = ((hbb)->no);
((hbc)->lw) = ((hbb)->lw);
return as_<ebc>(classTable_, (hbc), 122);
}
// _toBin
static Array_<uint8_t>* hbd(ebc* hbe){
Array_<uint8_t>* hbf = nullptr;
(hbf) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->har)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->haw)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->hax)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->pf)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->pj)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->ne)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->nf)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->ng)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->nh)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->ni)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->nj)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->nk)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->no)));
(hbf) = ((hbf)->Cat(toBin_((hbe)->lw)));
return hbf;
}
// _fromBin
static ebc* hbu(ebc* hbv, Array_<uint8_t>* hbw, int64_t* hbx){
ebc* hby = nullptr;
(hby) = (new ebc());
((hby)->har) = (fromBin_<gd*>((hbw), (*hbx)));
((hby)->haw) = (fromBin_<gc*>((hbw), (*hbx)));
((hby)->hax) = (fromBin_<gd*>((hbw), (*hbx)));
((hby)->pf) = (fromBin_<gc*>((hbw), (*hbx)));
((hby)->pj) = (fromBin_<int64_t>((hbw), (*hbx)));
((hby)->ne) = (fromBin_<ga*>((hbw), (*hbx)));
((hby)->nf) = (fromBin_<Array_<char16_t>*>((hbw), (*hbx)));
((hby)->ng) = (fromBin_<fx*>((hbw), (*hbx)));
((hby)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hbw), (*hbx)));
((hby)->ni) = (fromBin_<Array_<char16_t>*>((hbw), (*hbx)));
((hby)->nj) = (fromBin_<fx*>((hbw), (*hbx)));
((hby)->nk) = (fromBin_<fy*>((hbw), (*hbx)));
((hby)->no) = (fromBin_<bool>((hbw), (*hbx)));
((hby)->lw) = (fromBin_<int64_t>((hbw), (*hbx)));
return hby;
}
// rebuildExprCall
static gd* ebe(bvw* hbz /*ast*/){
cbp* hcf = nullptr; // type
bvx* hci = nullptr; // valueType
eaq* hck = nullptr; // expr
bvx* hcq = nullptr; // me_
bvx* hcx = nullptr; // meType
eca* hcz = nullptr; // expr
bwo* hdc = nullptr; // value
bvc* hde = nullptr; // prim
int64_t hdp = 0; // n
List_<bvx*>* hdq = nullptr; // itemsExpr
List_<cbq*>* hdr = nullptr; // itemsType
bvx* hdt = nullptr; // argExpr
cbq* hdu = nullptr; // argType
if(!eqAddr_(((hbz)->nk), (nullptr))){
return as_<gd>(classTable_, ((hbz)->nk), 14);
}
((hbz)->nk) = (hbz);
((hbz)->bwc) = ((byw)(((hbz)->bwc), (false)));
if(eqAddr_(((hbz)->bwc), (nullptr))){
return nullptr;
}
(hcf) = (as_<cbp>(classTable_, (((hbz)->bwc)->pf), 80));
if((ayg<int64_t>(((hcf)->ekp), (new Array_<int64_t>(1, (0LL))), (2048LL))) != (0LL)){
(hci) = (new bvx());
if(!(!eqAddr_(((hcf)->cbs), (nullptr)))){
throw 0xE9170000U;
}
(hck) = (new eaq());
(bvy)((hck), (2052LL), ((hbz)->ne));
((hck)->grr) = ((hcf)->cbs);
((hci)->bxl) = ((byw)((hck), (false)));
((hci)->bxh) = (false);
((hci)->bxi) = (false);
if((((hbz)->bvz)->Len()) == (0LL)){
uj<List_<bvx*>*, bvx*>(((hbz)->bvz), (new Array_<int64_t>(1, (0LL))), (hci));
}
else{
awg<List_<bvx*>*>(((hbz)->bvz), (new Array_<int64_t>(1, (0LL))));
bfg<List_<bvx*>*, bvx*>(((hbz)->bvz), (new Array_<int64_t>(1, (0LL))), (hci));
}
}
if(((((hbz)->bwc)->lw) == (2059LL)) && (((((hbz)->bwc)->pf)->lw) == (66562LL))){
(hcq) = (new bvx());
((hcq)->bxl) = ((as_<ebk>(classTable_, ((hbz)->bwc), 126))->hcr);
((hcq)->bxh) = (false);
((hcq)->bxi) = (false);
if((((hbz)->bvz)->Len()) == (0LL)){
uj<List_<bvx*>*, bvx*>(((hbz)->bvz), (new Array_<int64_t>(1, (0LL))), (hcq));
}
else{
awg<List_<bvx*>*>(((hbz)->bvz), (new Array_<int64_t>(1, (0LL))));
bfg<List_<bvx*>*, bvx*>(((hbz)->bvz), (new Array_<int64_t>(1, (0LL))), (hcq));
}
if((ayg<int64_t>(((hcf)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL)){
(hcx) = (new bvx());
(hcz) = (new eca());
(bvy)((hcz), (2060LL), ((hbz)->ne));
((hcz)->hda) = (new List_<gd*>());
(hdc) = (new bwo());
(bvy)((hdc), (67585LL), ((hbz)->ne));
((hdc)->bwq) = (0x0000000000000000ULL);
(hde) = (new bvc());
(buq)((hde), (1026LL), ((hbz)->ne));
((hde)->bvd) = (0LL);
((hdc)->pf) = (hde);
uj<List_<gd*>*, gd*>(((hcz)->hda), (new Array_<int64_t>(1, (0LL))), (hdc));
((hcx)->bxl) = ((byw)((hcz), (false)));
((hcx)->bxh) = (false);
((hcx)->bxi) = (false);
if((((hbz)->bvz)->Len()) == (1LL)){
uj<List_<bvx*>*, bvx*>(((hbz)->bvz), (new Array_<int64_t>(1, (0LL))), (hcx));
}
else{
if(!((((hbz)->bvz)->Len()) >= (2LL))){
throw 0xE9170000U;
}
awg<List_<bvx*>*>(((hbz)->bvz), (new Array_<int64_t>(1, (0LL))));
ayu<List_<bvx*>*>(((hbz)->bvz), (new Array_<int64_t>(1, (0LL))));
bfg<List_<bvx*>*, bvx*>(((hbz)->bvz), (new Array_<int64_t>(1, (0LL))), (hcx));
}
}
}
else{
if(((hcf)->lw) != (66562LL)){
(ad)((131124LL), ((hbz)->ne), (nullptr));
return nullptr;
}
(hcf) = (as_<cbp>(classTable_, (((hbz)->bwc)->pf), 80));
}
((hbz)->pf) = ((hcf)->cbs);
if((((hbz)->bvz)->Len()) != (((hcf)->cbx)->Len())){
(ad)((131125LL), ((hbz)->ne), (new Array_<Array_<char16_t>*>(3, (v<int64_t>((((hcf)->cbx)->Len()), (new Array_<int64_t>(1, (0LL))))), (v<int64_t>((((hbz)->bvz)->Len()), (new Array_<int64_t>(1, (0LL))))), ((hdn)((hcf))))));
return nullptr;
}
(hdp) = (0LL);
(hdq) = ((hbz)->bvz);
(hdr) = ((hcf)->cbx);
awg<List_<bvx*>*>((hdq), (new Array_<int64_t>(1, (0LL))));
awg<List_<cbq*>*>((hdr), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bvx*>*>((hdq), (new Array_<int64_t>(1, (0LL)))))){
(hdt) = (awk<List_<bvx*>*, bvx*>((hdq), (new Array_<int64_t>(1, (0LL)))));
(hdu) = (awk<List_<cbq*>*, cbq*>((hdr), (new Array_<int64_t>(1, (0LL)))));
if((hdt)->bxi){
((as_<gb>(classTable_, (((hdt)->bxl)->nj), 10))->qf) = ((hdu)->ccf);
}
((hdt)->bxl) = ((byw)(((hdt)->bxl), (false)));
if(!eqAddr_(((hdt)->bxl), (nullptr))){
if((((hdt)->bxh) && (!((hdt)->bxi))) && ((((hdt)->bxl)->pj) == (1LL))){
(ad)((131126LL), ((hbz)->ne), (new Array_<Array_<char16_t>*>(1, (v<int64_t>(((hdp) + (1LL)), (new Array_<int64_t>(1, (0LL))))))));
return nullptr;
}
if((((hdt)->bxh) != ((hdu)->cch)) || (!((dyh)((((hdt)->bxl)->pf), ((hdu)->ccf), (false))))){
(ad)((131127LL), ((hbz)->ne), (new Array_<Array_<char16_t>*>(3, (v<int64_t>(((hdp) + (1LL)), (new Array_<int64_t>(1, (0LL))))), ((((hdu)->cch) ? (new Array_<char16_t>(1, u'\u0026')) : (new Array_<char16_t>(0)))->Cat((hdn)(((hdu)->ccf)))), ((((hdt)->bxh) ? (new Array_<char16_t>(1, u'\u0026')) : (new Array_<char16_t>(0)))->Cat((hdn)((((hdt)->bxl)->pf)))))));
return nullptr;
}
if(((((hdt)->bxl)->pf)->lw) == (1028LL)){
((hdt)->bxl) = ((dyk)(((hdt)->bxl), ((hdu)->ccf)));
}
}
ayu<List_<bvx*>*>((hdq), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>((hdr), (new Array_<int64_t>(1, (0LL))));
(hdp) = ((hdp) + (1LL));
}
((hbz)->pj) = (1LL);
return hbz;
}
// rebuildExprArray
static gd* ebg(ebh* heg /*ast*/){
if(!eqAddr_(((heg)->nk), (nullptr))){
return as_<gd>(classTable_, ((heg)->nk), 14);
}
((heg)->nk) = (heg);
((heg)->hej) = ((byw)(((heg)->hej), (false)));
if(eqAddr_(((heg)->hej), (nullptr))){
return nullptr;
}
if(((((heg)->hej)->pf)->lw) != (66561LL)){
(ad)((131128LL), ((heg)->ne), (nullptr));
return nullptr;
}
((heg)->heo) = ((byw)(((heg)->heo), (false)));
if(eqAddr_(((heg)->heo), (nullptr))){
return nullptr;
}
if(!((bdi)((((heg)->heo)->pf)))){
(ad)((131129LL), (((heg)->heo)->ne), (nullptr));
return nullptr;
}
((heg)->pf) = ((as_<cbh>(classTable_, (((heg)->hej)->pf), 76))->cbj);
((heg)->pj) = (3LL);
return heg;
}
// _dtor
static void het(ebh* heu){
((heu)->hej) = (nullptr);
((heu)->heo) = (nullptr);
((heu)->pf) = (nullptr);
((heu)->ne) = (nullptr);
((heu)->nf) = (nullptr);
((heu)->ng) = (nullptr);
((heu)->nh) = (nullptr);
((heu)->ni) = (nullptr);
((heu)->nj) = (nullptr);
((heu)->nk) = (nullptr);
}
// _copy
static ebh* hev(ebh* hew){
ebh* hex = nullptr;
(hex) = (new ebh());
((hex)->hej) = (copy_((hew)->hej));
((hex)->heo) = (copy_((hew)->heo));
((hex)->pf) = (copy_((hew)->pf));
((hex)->pj) = ((hew)->pj);
((hex)->ne) = (copy_((hew)->ne));
((hex)->nf) = (copy_((hew)->nf));
((hex)->ng) = (copy_((hew)->ng));
((hex)->nh) = (copy_((hew)->nh));
((hex)->ni) = (copy_((hew)->ni));
((hex)->nj) = (copy_((hew)->nj));
((hex)->nk) = (copy_((hew)->nk));
((hex)->no) = ((hew)->no);
((hex)->lw) = ((hew)->lw);
return as_<ebh>(classTable_, (hex), 124);
}
// _toBin
static Array_<uint8_t>* hey(ebh* hez){
Array_<uint8_t>* hfa = nullptr;
(hfa) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hfa) = ((hfa)->Cat(toBin_((hez)->hej)));
(hfa) = ((hfa)->Cat(toBin_((hez)->heo)));
(hfa) = ((hfa)->Cat(toBin_((hez)->pf)));
(hfa) = ((hfa)->Cat(toBin_((hez)->pj)));
(hfa) = ((hfa)->Cat(toBin_((hez)->ne)));
(hfa) = ((hfa)->Cat(toBin_((hez)->nf)));
(hfa) = ((hfa)->Cat(toBin_((hez)->ng)));
(hfa) = ((hfa)->Cat(toBin_((hez)->nh)));
(hfa) = ((hfa)->Cat(toBin_((hez)->ni)));
(hfa) = ((hfa)->Cat(toBin_((hez)->nj)));
(hfa) = ((hfa)->Cat(toBin_((hez)->nk)));
(hfa) = ((hfa)->Cat(toBin_((hez)->no)));
(hfa) = ((hfa)->Cat(toBin_((hez)->lw)));
return hfa;
}
// _fromBin
static ebh* hfo(ebh* hfp, Array_<uint8_t>* hfq, int64_t* hfr){
ebh* hfs = nullptr;
(hfs) = (new ebh());
((hfs)->hej) = (fromBin_<gd*>((hfq), (*hfr)));
((hfs)->heo) = (fromBin_<gd*>((hfq), (*hfr)));
((hfs)->pf) = (fromBin_<gc*>((hfq), (*hfr)));
((hfs)->pj) = (fromBin_<int64_t>((hfq), (*hfr)));
((hfs)->ne) = (fromBin_<ga*>((hfq), (*hfr)));
((hfs)->nf) = (fromBin_<Array_<char16_t>*>((hfq), (*hfr)));
((hfs)->ng) = (fromBin_<fx*>((hfq), (*hfr)));
((hfs)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hfq), (*hfr)));
((hfs)->ni) = (fromBin_<Array_<char16_t>*>((hfq), (*hfr)));
((hfs)->nj) = (fromBin_<fx*>((hfq), (*hfr)));
((hfs)->nk) = (fromBin_<fy*>((hfq), (*hfr)));
((hfs)->no) = (fromBin_<bool>((hfq), (*hfr)));
((hfs)->lw) = (fromBin_<int64_t>((hfq), (*hfr)));
return hfs;
}
// rebuildExprDot
static gd* ebj(ebk* hft /*ast*/){
bool hga = false; // found
un* hgb = nullptr; // ptr
List_<uo*>* hgd = nullptr; // items
uo* hgf = nullptr; // item
cbp* hgk = nullptr; // type
List_<gb*>* hgm = nullptr; // items2
gb* hgo = nullptr; // arg
cbq* hgp = nullptr; // arg2
gc* hgw = nullptr; // varType
Array_<char16_t>* hgz = nullptr; // member
gd* hhd = nullptr; // expr
cbp* hhh = nullptr; // func_
gc* hhm = nullptr; // argType
cbp* hih = nullptr; // type
cbq* hij = nullptr; // item
cbq* hil = nullptr; // item
cbq* hin = nullptr; // item
cbh* hje = nullptr; // type
cbh* hjj = nullptr; // type
cbh* hjo = nullptr; // type
if(!eqAddr_(((hft)->nk), (nullptr))){
return as_<gd>(classTable_, ((hft)->nk), 14);
}
((hft)->nk) = (hft);
((hft)->hcr) = ((byw)(((hft)->hcr), (false)));
if(eqAddr_(((hft)->hcr), (nullptr))){
return nullptr;
}
if((efs)((((hft)->hcr)->pf))){
(hga) = (false);
(hgb) = (as_<un>(classTable_, ((((hft)->hcr)->pf)->nj), 22));
while(!eqAddr_((hgb), (nullptr))){
(hgd) = ((hgb)->bai);
awg<List_<uo*>*>((hgd), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((hgd), (new Array_<int64_t>(1, (0LL)))))){
(hgf) = (awk<List_<uo*>*, uo*>((hgd), (new Array_<int64_t>(1, (0LL)))));
if(((((hgf)->azn)->lw) == (2LL)) && (cmp_(((hft)->hgh), (((as_<bgk>(classTable_, ((hgf)->azn), 38))->bgm)->nf)) == 0)){
((hft)->pf) = (((as_<bgk>(classTable_, ((hgf)->azn), 38))->bgm)->qf);
((hft)->pj) = (3LL);
(hga) = (true);
}
else if(((((hgf)->azn)->lw) == (256LL)) && (cmp_(((hft)->hgh), (((hgf)->azn)->nf)) == 0)){
(hgk) = (new cbp());
(buq)((hgk), (66562LL), ((hft)->ne));
((hgk)->ekp) = ((as_<fw>(classTable_, ((hgf)->azn), 8))->sm);
((hgk)->ekl) = ((as_<fw>(classTable_, ((hgf)->azn), 8))->sf);
((hgk)->cbx) = (new List_<cbq*>());
(hgm) = ((as_<fw>(classTable_, ((hgf)->azn), 8))->sg);
awg<List_<gb*>*>((hgm), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gb*>*>((hgm), (new Array_<int64_t>(1, (0LL)))))){
(hgo) = (awk<List_<gb*>*, gb*>((hgm), (new Array_<int64_t>(1, (0LL)))));
(hgp) = (new cbq());
((hgp)->ccf) = ((hgo)->qf);
((hgp)->cch) = ((hgo)->ql);
uj<List_<cbq*>*, cbq*>(((hgk)->cbx), (new Array_<int64_t>(1, (0LL))), (hgp));
ayu<List_<gb*>*>((hgm), (new Array_<int64_t>(1, (0LL))));
}
((hgk)->cbs) = ((as_<fw>(classTable_, ((hgf)->azn), 8))->sh);
((hft)->pf) = (hgk);
((hft)->pj) = (1LL);
(hga) = (true);
}
if(hga){
if((!((hgf)->azs)) && ((eqAddr_((((hft)->hcr)->ni), (nullptr))) || (cmp_((((hft)->hcr)->ni), (new Array_<char16_t>(2, u'\u006D', u'\u0065'))) != 0))){
(ad)((131131LL), ((hft)->ne), (new Array_<Array_<char16_t>*>(1, ((hft)->hgh))));
return nullptr;
}
((hft)->hgu) = (hgf);
return hft;
}
ayu<List_<uo*>*>((hgd), (new Array_<int64_t>(1, (0LL))));
}
(hgb) = (as_<un>(classTable_, ((hgb)->nj), 22));
}
}
else{
(hgw) = (((hft)->hcr)->pf);
if(((hgw)->lw) == (1028LL)){
if(!((((hft)->hcr)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((hft)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<ebu>(classTable_, ((hft)->hcr), 130))->gis))));
return nullptr;
}
(hgz) = ((hft)->hgh);
if((hhb)((&hgz), (hgw))){
(hhd) = (as_<gd>(classTable_, ((bvp)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), ((new Array_<char16_t>(1, u'\u005F'))->Cat(hgz)), (true))), 14));
if(eqAddr_((hhd), (nullptr))){
if(!(false)){
throw 0xE9170000U;
}
return nullptr;
}
(hhh) = (as_<cbp>(classTable_, ((hhd)->pf), 80));
if((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL)){
if(!((((hhh)->cbx)->Len()) >= (2LL))){
throw 0xE9170000U;
}
awg<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
if(!((bdi)(((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf)))){
throw 0xE9170000U;
}
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
(hhm) = ((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf);
if(!((((hhm)->lw) == (66561LL)) && ((bdi)(((as_<cbh>(classTable_, (hhm), 76))->cbj))))){
throw 0xE9170000U;
}
awg<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf) = (hgw);
}
if((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (2LL))) != (0LL)){
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (8LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (32LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (256LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hhh)->cbx)->Len()) >= (3LL))){
throw 0xE9170000U;
}
awg<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
if(!((bdi)(((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf)))){
throw 0xE9170000U;
}
awg<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf) = (hgw);
}
if((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (8LL))) != (0LL)){
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (2LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (32LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (256LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hhh)->cbx)->Len()) >= (3LL))){
throw 0xE9170000U;
}
awg<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
if(!((bdi)(((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf)))){
throw 0xE9170000U;
}
awg<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
if(((hgw)->lw) == (66561LL)){
((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf) = ((as_<cbh>(classTable_, (hgw), 76))->cbj);
}
else if(((hgw)->lw) == (66563LL)){
((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf) = ((as_<ccm>(classTable_, (hgw), 84))->ccr);
}
else{
if(!(((hgw)->lw) == (66564LL))){
throw 0xE9170000U;
}
((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf) = ((as_<ccx>(classTable_, (hgw), 86))->ccy);
}
}
if((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (32LL))) != (0LL)){
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (2LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (8LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (256LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hhh)->cbx)->Len()) >= (4LL))){
throw 0xE9170000U;
}
awg<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
if(!((bdi)(((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf)))){
throw 0xE9170000U;
}
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
if(!((bdi)(((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf)))){
throw 0xE9170000U;
}
if(!(((hgw)->lw) == (66564LL))){
throw 0xE9170000U;
}
awg<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf) = ((as_<ccx>(classTable_, (hgw), 86))->ccy);
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf) = ((as_<ccx>(classTable_, (hgw), 86))->ccz);
}
if((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (256LL))) != (0LL)){
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (2LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (8LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (32LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hhh)->cbx)->Len()) >= (3LL))){
throw 0xE9170000U;
}
awg<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
if(!((bdi)(((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf)))){
throw 0xE9170000U;
}
if(!(((hgw)->lw) == (66564LL))){
throw 0xE9170000U;
}
(hih) = (new cbp());
(buq)((hih), (66562LL), ((hft)->ne));
((hih)->ekp) = (0LL);
((hih)->ekl) = (new List_<Array_<char16_t>*>());
((hih)->cbx) = (new List_<cbq*>());
(hij) = (new cbq());
((hij)->ccf) = ((as_<ccx>(classTable_, (hgw), 86))->ccy);
((hij)->cch) = (false);
uj<List_<cbq*>*, cbq*>(((hih)->cbx), (new Array_<int64_t>(1, (0LL))), (hij));
(hil) = (new cbq());
((hil)->ccf) = ((as_<ccx>(classTable_, (hgw), 86))->ccz);
((hil)->cch) = (false);
uj<List_<cbq*>*, cbq*>(((hih)->cbx), (new Array_<int64_t>(1, (0LL))), (hil));
(hin) = (new cbq());
awg<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
((hin)->ccf) = ((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf);
((hin)->cch) = (false);
uj<List_<cbq*>*, cbq*>(((hih)->cbx), (new Array_<int64_t>(1, (0LL))), (hin));
((hih)->cbs) = ((hhh)->cbs);
awg<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
ayu<List_<cbq*>*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL))));
((awk<List_<cbq*>*, cbq*>(((hhh)->cbx), (new Array_<int64_t>(1, (0LL)))))->ccf) = (hih);
}
if((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (4LL))) != (0LL)){
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdi)(((hhh)->cbs)))){
throw 0xE9170000U;
}
((hhh)->cbs) = (hgw);
}
if((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (16LL))) != (0LL)){
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdi)(((hhh)->cbs)))){
throw 0xE9170000U;
}
if(((hgw)->lw) == (66561LL)){
((hhh)->cbs) = ((as_<cbh>(classTable_, (hgw), 76))->cbj);
}
else if(((hgw)->lw) == (66563LL)){
((hhh)->cbs) = ((as_<ccm>(classTable_, (hgw), 84))->ccr);
}
else{
if(!(((hgw)->lw) == (66564LL))){
throw 0xE9170000U;
}
((hhh)->cbs) = ((as_<ccx>(classTable_, (hgw), 86))->ccz);
}
}
if((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (64LL))) != (0LL)){
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdi)(((hhh)->cbs)))){
throw 0xE9170000U;
}
if(!(((hgw)->lw) == (66563LL))){
throw 0xE9170000U;
}
if(!(((as_<ccm>(classTable_, (hgw), 84))->ccp) == (0LL))){
throw 0xE9170000U;
}
(hje) = (new cbh());
(buq)((hje), (66561LL), ((hft)->ne));
((hje)->cbj) = ((as_<ccm>(classTable_, (hgw), 84))->ccr);
((hhh)->cbs) = (hje);
}
if((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (512LL))) != (0LL)){
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdi)(((hhh)->cbs)))){
throw 0xE9170000U;
}
if(!(((hgw)->lw) == (66564LL))){
throw 0xE9170000U;
}
(hjj) = (new cbh());
(buq)((hjj), (66561LL), ((hft)->ne));
((hjj)->cbj) = ((as_<ccx>(classTable_, (hgw), 86))->ccy);
((hhh)->cbs) = (hjj);
}
if((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1024LL))) != (0LL)){
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((ayg<int64_t>(((hhh)->ekp), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdi)(((hhh)->cbs)))){
throw 0xE9170000U;
}
if(!(((hgw)->lw) == (66564LL))){
throw 0xE9170000U;
}
(hjo) = (new cbh());
(buq)((hjo), (66561LL), ((hft)->ne));
((hjo)->cbj) = ((as_<ccx>(classTable_, (hgw), 86))->ccz);
((hhh)->cbs) = (hjo);
}
((hft)->nj) = (hhd);
((hft)->pf) = ((hhd)->pf);
((hft)->pj) = (1LL);
return hft;
}
}
(ad)((131130LL), ((hft)->ne), (new Array_<Array_<char16_t>*>(1, ((hft)->hgh))));
return nullptr;
}
// _dtor
static void hjp(ebk* hjq){
((hjq)->hcr) = (nullptr);
((hjq)->hgh) = (nullptr);
((hjq)->hgu) = (nullptr);
((hjq)->pf) = (nullptr);
((hjq)->ne) = (nullptr);
((hjq)->nf) = (nullptr);
((hjq)->ng) = (nullptr);
((hjq)->nh) = (nullptr);
((hjq)->ni) = (nullptr);
((hjq)->nj) = (nullptr);
((hjq)->nk) = (nullptr);
}
// _copy
static ebk* hjr(ebk* hjs){
ebk* hjt = nullptr;
(hjt) = (new ebk());
((hjt)->hcr) = (copy_((hjs)->hcr));
((hjt)->hgh) = (copy_((hjs)->hgh));
((hjt)->hgu) = (copy_((hjs)->hgu));
((hjt)->pf) = (copy_((hjs)->pf));
((hjt)->pj) = ((hjs)->pj);
((hjt)->ne) = (copy_((hjs)->ne));
((hjt)->nf) = (copy_((hjs)->nf));
((hjt)->ng) = (copy_((hjs)->ng));
((hjt)->nh) = (copy_((hjs)->nh));
((hjt)->ni) = (copy_((hjs)->ni));
((hjt)->nj) = (copy_((hjs)->nj));
((hjt)->nk) = (copy_((hjs)->nk));
((hjt)->no) = ((hjs)->no);
((hjt)->lw) = ((hjs)->lw);
return as_<ebk>(classTable_, (hjt), 126);
}
// _toBin
static Array_<uint8_t>* hju(ebk* hjv){
Array_<uint8_t>* hjw = nullptr;
(hjw) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->hcr)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->hgh)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->hgu)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->pf)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->pj)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->ne)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->nf)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->ng)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->nh)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->ni)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->nj)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->nk)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->no)));
(hjw) = ((hjw)->Cat(toBin_((hjv)->lw)));
return hjw;
}
// _fromBin
static ebk* hkl(ebk* hkm, Array_<uint8_t>* hkn, int64_t* hko){
ebk* hkp = nullptr;
(hkp) = (new ebk());
((hkp)->hcr) = (fromBin_<gd*>((hkn), (*hko)));
((hkp)->hgh) = (fromBin_<Array_<char16_t>*>((hkn), (*hko)));
((hkp)->hgu) = (fromBin_<uo*>((hkn), (*hko)));
((hkp)->pf) = (fromBin_<gc*>((hkn), (*hko)));
((hkp)->pj) = (fromBin_<int64_t>((hkn), (*hko)));
((hkp)->ne) = (fromBin_<ga*>((hkn), (*hko)));
((hkp)->nf) = (fromBin_<Array_<char16_t>*>((hkn), (*hko)));
((hkp)->ng) = (fromBin_<fx*>((hkn), (*hko)));
((hkp)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hkn), (*hko)));
((hkp)->ni) = (fromBin_<Array_<char16_t>*>((hkn), (*hko)));
((hkp)->nj) = (fromBin_<fx*>((hkn), (*hko)));
((hkp)->nk) = (fromBin_<fy*>((hkn), (*hko)));
((hkp)->no) = (fromBin_<bool>((hkn), (*hko)));
((hkp)->lw) = (fromBin_<int64_t>((hkn), (*hko)));
return hkp;
}
// rebuildExprValue
static gd* ebm(bwp* hkq /*ast*/){
if(!eqAddr_(((hkq)->nk), (nullptr))){
return as_<gd>(classTable_, ((hkq)->nk), 14);
}
((hkq)->nk) = (hkq);
if(!(((hkq)->lw) == (67584LL))){
throw 0xE9170000U;
}
((hkq)->pj) = (1LL);
return hkq;
}
// rebuildExprValuePrim
static gd* ebo(bwo* hkt /*ast*/){
if(!eqAddr_(((hkt)->nk), (nullptr))){
return as_<gd>(classTable_, ((hkt)->nk), 14);
}
((hkt)->nk) = (hkt);
((hkt)->pj) = (1LL);
return hkt;
}
// rebuildExprValueStr
static gd* ebq(ebr* hkw /*ast*/){
if(!eqAddr_(((hkw)->nk), (nullptr))){
return as_<gd>(classTable_, ((hkw)->nk), 14);
}
((hkw)->nk) = (hkw);
((hkw)->pj) = (1LL);
return hkw;
}
// _dtor
static void hkz(ebr* hla){
((hla)->gkg) = (nullptr);
((hla)->pf) = (nullptr);
((hla)->ne) = (nullptr);
((hla)->nf) = (nullptr);
((hla)->ng) = (nullptr);
((hla)->nh) = (nullptr);
((hla)->ni) = (nullptr);
((hla)->nj) = (nullptr);
((hla)->nk) = (nullptr);
}
// _copy
static ebr* hlb(ebr* hlc){
ebr* hld = nullptr;
(hld) = (new ebr());
((hld)->gkg) = (copy_((hlc)->gkg));
((hld)->pf) = (copy_((hlc)->pf));
((hld)->pj) = ((hlc)->pj);
((hld)->ne) = (copy_((hlc)->ne));
((hld)->nf) = (copy_((hlc)->nf));
((hld)->ng) = (copy_((hlc)->ng));
((hld)->nh) = (copy_((hlc)->nh));
((hld)->ni) = (copy_((hlc)->ni));
((hld)->nj) = (copy_((hlc)->nj));
((hld)->nk) = (copy_((hlc)->nk));
((hld)->no) = ((hlc)->no);
((hld)->lw) = ((hlc)->lw);
return as_<ebr>(classTable_, (hld), 128);
}
// _toBin
static Array_<uint8_t>* hle(ebr* hlf){
Array_<uint8_t>* hlg = nullptr;
(hlg) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hlg) = ((hlg)->Cat(toBin_((hlf)->gkg)));
(hlg) = ((hlg)->Cat(toBin_((hlf)->pf)));
(hlg) = ((hlg)->Cat(toBin_((hlf)->pj)));
(hlg) = ((hlg)->Cat(toBin_((hlf)->ne)));
(hlg) = ((hlg)->Cat(toBin_((hlf)->nf)));
(hlg) = ((hlg)->Cat(toBin_((hlf)->ng)));
(hlg) = ((hlg)->Cat(toBin_((hlf)->nh)));
(hlg) = ((hlg)->Cat(toBin_((hlf)->ni)));
(hlg) = ((hlg)->Cat(toBin_((hlf)->nj)));
(hlg) = ((hlg)->Cat(toBin_((hlf)->nk)));
(hlg) = ((hlg)->Cat(toBin_((hlf)->no)));
(hlg) = ((hlg)->Cat(toBin_((hlf)->lw)));
return hlg;
}
// _fromBin
static ebr* hlt(ebr* hlu, Array_<uint8_t>* hlv, int64_t* hlw){
ebr* hlx = nullptr;
(hlx) = (new ebr());
((hlx)->gkg) = (fromBin_<Array_<char16_t>*>((hlv), (*hlw)));
((hlx)->pf) = (fromBin_<gc*>((hlv), (*hlw)));
((hlx)->pj) = (fromBin_<int64_t>((hlv), (*hlw)));
((hlx)->ne) = (fromBin_<ga*>((hlv), (*hlw)));
((hlx)->nf) = (fromBin_<Array_<char16_t>*>((hlv), (*hlw)));
((hlx)->ng) = (fromBin_<fx*>((hlv), (*hlw)));
((hlx)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hlv), (*hlw)));
((hlx)->ni) = (fromBin_<Array_<char16_t>*>((hlv), (*hlw)));
((hlx)->nj) = (fromBin_<fx*>((hlv), (*hlw)));
((hlx)->nk) = (fromBin_<fy*>((hlv), (*hlw)));
((hlx)->no) = (fromBin_<bool>((hlv), (*hlw)));
((hlx)->lw) = (fromBin_<int64_t>((hlv), (*hlw)));
return hlx;
}
// rebuildExprValueEnumElement
static gd* ebt(ebu* hly /*ast*/){
if(!eqAddr_(((hly)->nk), (nullptr))){
return as_<gd>(classTable_, ((hly)->nk), 14);
}
((hly)->nk) = (hly);
((hly)->pj) = (1LL);
return hly;
}
// _dtor
static void hmb(ebu* hmc){
((hmc)->gis) = (nullptr);
((hmc)->pf) = (nullptr);
((hmc)->ne) = (nullptr);
((hmc)->nf) = (nullptr);
((hmc)->ng) = (nullptr);
((hmc)->nh) = (nullptr);
((hmc)->ni) = (nullptr);
((hmc)->nj) = (nullptr);
((hmc)->nk) = (nullptr);
}
// _copy
static ebu* hmd(ebu* hme){
ebu* hmf = nullptr;
(hmf) = (new ebu());
((hmf)->gis) = (copy_((hme)->gis));
((hmf)->pf) = (copy_((hme)->pf));
((hmf)->pj) = ((hme)->pj);
((hmf)->ne) = (copy_((hme)->ne));
((hmf)->nf) = (copy_((hme)->nf));
((hmf)->ng) = (copy_((hme)->ng));
((hmf)->nh) = (copy_((hme)->nh));
((hmf)->ni) = (copy_((hme)->ni));
((hmf)->nj) = (copy_((hme)->nj));
((hmf)->nk) = (copy_((hme)->nk));
((hmf)->no) = ((hme)->no);
((hmf)->lw) = ((hme)->lw);
return as_<ebu>(classTable_, (hmf), 130);
}
// _toBin
static Array_<uint8_t>* hmg(ebu* hmh){
Array_<uint8_t>* hmi = nullptr;
(hmi) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hmi) = ((hmi)->Cat(toBin_((hmh)->gis)));
(hmi) = ((hmi)->Cat(toBin_((hmh)->pf)));
(hmi) = ((hmi)->Cat(toBin_((hmh)->pj)));
(hmi) = ((hmi)->Cat(toBin_((hmh)->ne)));
(hmi) = ((hmi)->Cat(toBin_((hmh)->nf)));
(hmi) = ((hmi)->Cat(toBin_((hmh)->ng)));
(hmi) = ((hmi)->Cat(toBin_((hmh)->nh)));
(hmi) = ((hmi)->Cat(toBin_((hmh)->ni)));
(hmi) = ((hmi)->Cat(toBin_((hmh)->nj)));
(hmi) = ((hmi)->Cat(toBin_((hmh)->nk)));
(hmi) = ((hmi)->Cat(toBin_((hmh)->no)));
(hmi) = ((hmi)->Cat(toBin_((hmh)->lw)));
return hmi;
}
// _fromBin
static ebu* hmv(ebu* hmw, Array_<uint8_t>* hmx, int64_t* hmy){
ebu* hmz = nullptr;
(hmz) = (new ebu());
((hmz)->gis) = (fromBin_<Array_<char16_t>*>((hmx), (*hmy)));
((hmz)->pf) = (fromBin_<gc*>((hmx), (*hmy)));
((hmz)->pj) = (fromBin_<int64_t>((hmx), (*hmy)));
((hmz)->ne) = (fromBin_<ga*>((hmx), (*hmy)));
((hmz)->nf) = (fromBin_<Array_<char16_t>*>((hmx), (*hmy)));
((hmz)->ng) = (fromBin_<fx*>((hmx), (*hmy)));
((hmz)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hmx), (*hmy)));
((hmz)->ni) = (fromBin_<Array_<char16_t>*>((hmx), (*hmy)));
((hmz)->nj) = (fromBin_<fx*>((hmx), (*hmy)));
((hmz)->nk) = (fromBin_<fy*>((hmx), (*hmy)));
((hmz)->no) = (fromBin_<bool>((hmx), (*hmy)));
((hmz)->lw) = (fromBin_<int64_t>((hmx), (*hmy)));
return hmz;
}
// rebuildExprValueFloat
static gd* ebw(ebx* hna /*ast*/){
if(!eqAddr_(((hna)->nk), (nullptr))){
return as_<gd>(classTable_, ((hna)->nk), 14);
}
((hna)->nk) = (hna);
((hna)->pj) = (1LL);
return hna;
}
// _dtor
static void hnd(ebx* hne){
((hne)->pf) = (nullptr);
((hne)->ne) = (nullptr);
((hne)->nf) = (nullptr);
((hne)->ng) = (nullptr);
((hne)->nh) = (nullptr);
((hne)->ni) = (nullptr);
((hne)->nj) = (nullptr);
((hne)->nk) = (nullptr);
}
// _copy
static ebx* hnf(ebx* hng){
ebx* hnh = nullptr;
(hnh) = (new ebx());
((hnh)->gfi) = ((hng)->gfi);
((hnh)->pf) = (copy_((hng)->pf));
((hnh)->pj) = ((hng)->pj);
((hnh)->ne) = (copy_((hng)->ne));
((hnh)->nf) = (copy_((hng)->nf));
((hnh)->ng) = (copy_((hng)->ng));
((hnh)->nh) = (copy_((hng)->nh));
((hnh)->ni) = (copy_((hng)->ni));
((hnh)->nj) = (copy_((hng)->nj));
((hnh)->nk) = (copy_((hng)->nk));
((hnh)->no) = ((hng)->no);
((hnh)->lw) = ((hng)->lw);
return as_<ebx>(classTable_, (hnh), 132);
}
// _toBin
static Array_<uint8_t>* hni(ebx* hnj){
Array_<uint8_t>* hnk = nullptr;
(hnk) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hnk) = ((hnk)->Cat(toBin_((hnj)->gfi)));
(hnk) = ((hnk)->Cat(toBin_((hnj)->pf)));
(hnk) = ((hnk)->Cat(toBin_((hnj)->pj)));
(hnk) = ((hnk)->Cat(toBin_((hnj)->ne)));
(hnk) = ((hnk)->Cat(toBin_((hnj)->nf)));
(hnk) = ((hnk)->Cat(toBin_((hnj)->ng)));
(hnk) = ((hnk)->Cat(toBin_((hnj)->nh)));
(hnk) = ((hnk)->Cat(toBin_((hnj)->ni)));
(hnk) = ((hnk)->Cat(toBin_((hnj)->nj)));
(hnk) = ((hnk)->Cat(toBin_((hnj)->nk)));
(hnk) = ((hnk)->Cat(toBin_((hnj)->no)));
(hnk) = ((hnk)->Cat(toBin_((hnj)->lw)));
return hnk;
}
// _fromBin
static ebx* hnx(ebx* hny, Array_<uint8_t>* hnz, int64_t* hoa){
ebx* hob = nullptr;
(hob) = (new ebx());
((hob)->gfi) = (fromBin_<double>((hnz), (*hoa)));
((hob)->pf) = (fromBin_<gc*>((hnz), (*hoa)));
((hob)->pj) = (fromBin_<int64_t>((hnz), (*hoa)));
((hob)->ne) = (fromBin_<ga*>((hnz), (*hoa)));
((hob)->nf) = (fromBin_<Array_<char16_t>*>((hnz), (*hoa)));
((hob)->ng) = (fromBin_<fx*>((hnz), (*hoa)));
((hob)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hnz), (*hoa)));
((hob)->ni) = (fromBin_<Array_<char16_t>*>((hnz), (*hoa)));
((hob)->nj) = (fromBin_<fx*>((hnz), (*hoa)));
((hob)->nk) = (fromBin_<fy*>((hnz), (*hoa)));
((hob)->no) = (fromBin_<bool>((hnz), (*hoa)));
((hob)->lw) = (fromBin_<int64_t>((hnz), (*hoa)));
return hob;
}
// rebuildExprValueArray
static gd* ebz(eca* hoc /*ast*/){
bool hog = false; // nullSet
bool hoh = false; // enumSet
List_<gd*>* hoi = nullptr; // items
gd* hok = nullptr; // data
gc* hoo = nullptr; // dataType
cbh* hpd = nullptr; // type
List_<gd*>* hpm = nullptr; // items
gd* hpo = nullptr; // item
bool hpu = false; // isConst
List_<gd*>* hpw = nullptr; // items
ebr* hqe = nullptr; // ast2
Array_<char16_t>* hqf = nullptr; // s
int64_t hqg = 0; // idx
List_<gd*>* hqh = nullptr; // items
if(!eqAddr_(((hoc)->nk), (nullptr))){
return as_<gd>(classTable_, ((hoc)->nk), 14);
}
((hoc)->nk) = (hoc);
if(!(eqAddr_(((hoc)->pf), (nullptr)))){
throw 0xE9170000U;
}
(hog) = (false);
(hoh) = (false);
(hoi) = ((hoc)->hda);
awg<List_<gd*>*>((hoi), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gd*>*>((hoi), (new Array_<int64_t>(1, (0LL)))))){
(hok) = (awk<List_<gd*>*, gd*>((hoi), (new Array_<int64_t>(1, (0LL)))));
(hok) = ((byw)((hok), (false)));
if(eqAddr_((hok), (nullptr))){
return nullptr;
}
(hoo) = ((hok)->pf);
if(eqAddr_(((hoc)->pf), (nullptr))){
if(((hoo)->lw) == (1027LL)){
if(hoh){
(ad)((131132LL), ((hoc)->ne), (nullptr));
return nullptr;
}
(hog) = (true);
}
else if(((hoo)->lw) == (1028LL)){
if(hog){
(ad)((131133LL), ((hoc)->ne), (nullptr));
return nullptr;
}
(hoh) = (true);
}
else{
if((hog) && (!((clv)((hoo))))){
(ad)((131133LL), ((hoc)->ne), (nullptr));
return nullptr;
}
if((hoh) && (!((cma)((hoo))))){
(ad)((131132LL), ((hoc)->ne), (nullptr));
return nullptr;
}
(hpd) = (new cbh());
(buq)((hpd), (66561LL), ((hoo)->ne));
((hpd)->cbj) = (hoo);
((hoc)->pf) = (hpd);
}
}
else if(!((dyh)(((as_<cbh>(classTable_, ((hoc)->pf), 76))->cbj), (hoo), (false)))){
(ad)((131132LL), ((hoc)->ne), (nullptr));
return nullptr;
}
bfg<List_<gd*>*, gd*>((hoi), (new Array_<int64_t>(1, (0LL))), (hok));
bfj<List_<gd*>*>((hoi), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_(((hoc)->pf), (nullptr))){
if(hoh){
(ad)((131134LL), ((hoc)->ne), (nullptr));
return nullptr;
}
else{
(ad)((131135LL), ((hoc)->ne), (nullptr));
return nullptr;
}
}
if((cma)(((as_<cbh>(classTable_, ((hoc)->pf), 76))->cbj))){
(hpm) = ((hoc)->hda);
awg<List_<gd*>*>((hpm), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gd*>*>((hpm), (new Array_<int64_t>(1, (0LL)))))){
(hpo) = (awk<List_<gd*>*, gd*>((hpm), (new Array_<int64_t>(1, (0LL)))));
if((((hpo)->pf)->lw) == (1028LL)){
(hpo) = ((dyk)((hpo), ((as_<cbh>(classTable_, ((hoc)->pf), 76))->cbj)));
bfg<List_<gd*>*, gd*>((hpm), (new Array_<int64_t>(1, (0LL))), (hpo));
bfj<List_<gd*>*>((hpm), (new Array_<int64_t>(1, (0LL))));
}
else{
ayu<List_<gd*>*>((hpm), (new Array_<int64_t>(1, (0LL))));
}
}
}
if((fis)(((hoc)->pf))){
(hpu) = (true);
(hpw) = ((hoc)->hda);
awg<List_<gd*>*>((hpw), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gd*>*>((hpw), (new Array_<int64_t>(1, (0LL)))))){
if(((awk<List_<gd*>*, gd*>((hpw), (new Array_<int64_t>(1, (0LL)))))->lw) != (67584LL)){
(hpu) = (false);
break;
}
ayu<List_<gd*>*>((hpw), (new Array_<int64_t>(1, (0LL))));
}
if(hpu){
(hqe) = (new ebr());
(bvy)((hqe), (67586LL), ((hoc)->ne));
((hqe)->pf) = ((hoc)->pf);
(hqf) = (newArray_<char16_t, Array_<char16_t>*>(1, (((hoc)->hda)->Len())));
(hqg) = (0LL);
(hqh) = ((hoc)->hda);
awg<List_<gd*>*>((hqh), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gd*>*>((hqh), (new Array_<int64_t>(1, (0LL)))))){
((hqf)->At(hqg)) = (static_cast<char16_t>((as_<bwo>(classTable_, (awk<List_<gd*>*, gd*>((hqh), (new Array_<int64_t>(1, (0LL))))), 70))->bwq));
ayu<List_<gd*>*>((hqh), (new Array_<int64_t>(1, (0LL))));
(hqg) = ((hqg) + (1LL));
}
((hqe)->gkg) = (hqf);
(hqe) = (as_<ebr>(classTable_, ((ebq)((hqe))), 128));
((hoc)->nk) = (hoc);
return as_<gd>(classTable_, ((hoc)->nk), 14);
}
}
((hoc)->pj) = (1LL);
return hoc;
}
// _dtor
static void hqk(eca* hql){
((hql)->hda) = (nullptr);
((hql)->pf) = (nullptr);
((hql)->ne) = (nullptr);
((hql)->nf) = (nullptr);
((hql)->ng) = (nullptr);
((hql)->nh) = (nullptr);
((hql)->ni) = (nullptr);
((hql)->nj) = (nullptr);
((hql)->nk) = (nullptr);
}
// _copy
static eca* hqm(eca* hqn){
eca* hqo = nullptr;
(hqo) = (new eca());
((hqo)->hda) = (copy_((hqn)->hda));
((hqo)->pf) = (copy_((hqn)->pf));
((hqo)->pj) = ((hqn)->pj);
((hqo)->ne) = (copy_((hqn)->ne));
((hqo)->nf) = (copy_((hqn)->nf));
((hqo)->ng) = (copy_((hqn)->ng));
((hqo)->nh) = (copy_((hqn)->nh));
((hqo)->ni) = (copy_((hqn)->ni));
((hqo)->nj) = (copy_((hqn)->nj));
((hqo)->nk) = (copy_((hqn)->nk));
((hqo)->no) = ((hqn)->no);
((hqo)->lw) = ((hqn)->lw);
return as_<eca>(classTable_, (hqo), 134);
}
// _toBin
static Array_<uint8_t>* hqp(eca* hqq){
Array_<uint8_t>* hqr = nullptr;
(hqr) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hqr) = ((hqr)->Cat(toBin_((hqq)->hda)));
(hqr) = ((hqr)->Cat(toBin_((hqq)->pf)));
(hqr) = ((hqr)->Cat(toBin_((hqq)->pj)));
(hqr) = ((hqr)->Cat(toBin_((hqq)->ne)));
(hqr) = ((hqr)->Cat(toBin_((hqq)->nf)));
(hqr) = ((hqr)->Cat(toBin_((hqq)->ng)));
(hqr) = ((hqr)->Cat(toBin_((hqq)->nh)));
(hqr) = ((hqr)->Cat(toBin_((hqq)->ni)));
(hqr) = ((hqr)->Cat(toBin_((hqq)->nj)));
(hqr) = ((hqr)->Cat(toBin_((hqq)->nk)));
(hqr) = ((hqr)->Cat(toBin_((hqq)->no)));
(hqr) = ((hqr)->Cat(toBin_((hqq)->lw)));
return hqr;
}
// _fromBin
static eca* hre(eca* hrf, Array_<uint8_t>* hrg, int64_t* hrh){
eca* hri = nullptr;
(hri) = (new eca());
((hri)->hda) = (fromBin_<List_<gd*>*>((hrg), (*hrh)));
((hri)->pf) = (fromBin_<gc*>((hrg), (*hrh)));
((hri)->pj) = (fromBin_<int64_t>((hrg), (*hrh)));
((hri)->ne) = (fromBin_<ga*>((hrg), (*hrh)));
((hri)->nf) = (fromBin_<Array_<char16_t>*>((hrg), (*hrh)));
((hri)->ng) = (fromBin_<fx*>((hrg), (*hrh)));
((hri)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hrg), (*hrh)));
((hri)->ni) = (fromBin_<Array_<char16_t>*>((hrg), (*hrh)));
((hri)->nj) = (fromBin_<fx*>((hrg), (*hrh)));
((hri)->nk) = (fromBin_<fy*>((hrg), (*hrh)));
((hri)->no) = (fromBin_<bool>((hrg), (*hrh)));
((hri)->lw) = (fromBin_<int64_t>((hrg), (*hrh)));
return hri;
}
// _dtor
static void hrj(edr* hrk){
((hrk)->edt) = (nullptr);
((hrk)->ne) = (nullptr);
((hrk)->nf) = (nullptr);
((hrk)->ng) = (nullptr);
((hrk)->nh) = (nullptr);
((hrk)->ni) = (nullptr);
((hrk)->nj) = (nullptr);
((hrk)->nk) = (nullptr);
}
// _copy
static edr* hrl(edr* hrm){
edr* hrn = nullptr;
(hrn) = (new edr());
((hrn)->edt) = (copy_((hrm)->edt));
((hrn)->ne) = (copy_((hrm)->ne));
((hrn)->nf) = (copy_((hrm)->nf));
((hrn)->ng) = (copy_((hrm)->ng));
((hrn)->nh) = (copy_((hrm)->nh));
((hrn)->ni) = (copy_((hrm)->ni));
((hrn)->nj) = (copy_((hrm)->nj));
((hrn)->nk) = (copy_((hrm)->nk));
((hrn)->no) = ((hrm)->no);
((hrn)->lw) = ((hrm)->lw);
return as_<edr>(classTable_, (hrn), 136);
}
// _toBin
static Array_<uint8_t>* hro(edr* hrp){
Array_<uint8_t>* hrq = nullptr;
(hrq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hrq) = ((hrq)->Cat(toBin_((hrp)->edt)));
(hrq) = ((hrq)->Cat(toBin_((hrp)->ne)));
(hrq) = ((hrq)->Cat(toBin_((hrp)->nf)));
(hrq) = ((hrq)->Cat(toBin_((hrp)->ng)));
(hrq) = ((hrq)->Cat(toBin_((hrp)->nh)));
(hrq) = ((hrq)->Cat(toBin_((hrp)->ni)));
(hrq) = ((hrq)->Cat(toBin_((hrp)->nj)));
(hrq) = ((hrq)->Cat(toBin_((hrp)->nk)));
(hrq) = ((hrq)->Cat(toBin_((hrp)->no)));
(hrq) = ((hrq)->Cat(toBin_((hrp)->lw)));
return hrq;
}
// _fromBin
static edr* hsb(edr* hsc, Array_<uint8_t>* hsd, int64_t* hse){
edr* hsf = nullptr;
(hsf) = (new edr());
((hsf)->edt) = (fromBin_<bgk*>((hsd), (*hse)));
((hsf)->ne) = (fromBin_<ga*>((hsd), (*hse)));
((hsf)->nf) = (fromBin_<Array_<char16_t>*>((hsd), (*hse)));
((hsf)->ng) = (fromBin_<fx*>((hsd), (*hse)));
((hsf)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hsd), (*hse)));
((hsf)->ni) = (fromBin_<Array_<char16_t>*>((hsd), (*hse)));
((hsf)->nj) = (fromBin_<fx*>((hsd), (*hse)));
((hsf)->nk) = (fromBin_<fy*>((hsd), (*hse)));
((hsf)->no) = (fromBin_<bool>((hsd), (*hse)));
((hsf)->lw) = (fromBin_<int64_t>((hsd), (*hse)));
return hsf;
}
// rebuildVar
static void eds(bgk* hsg /*ast*/){
if(!eqAddr_(((hsg)->nk), (nullptr))){
return;
}
((hsg)->nk) = (hsg);
(bya)(((hsg)->bgm));
}
// rebuildIf
static ge* eeq(ckg* hsj /*ast*/, gc* hsk /*retType*/, fw* hsl /*parentFunc*/){
List_<ckh*>* hsr = nullptr; // items
ckh* hst = nullptr; // elIf
buv* hta = nullptr; // stats
List_<ckh*>* hth = nullptr; // items
ckh* htl = nullptr; // elIf
buv* htu = nullptr; // block_
if(!eqAddr_(((hsj)->nk), (nullptr))){
return as_<ge>(classTable_, ((hsj)->nk), 16);
}
((hsj)->nk) = (hsj);
((hsj)->ens) = ((byw)(((hsj)->ens), (false)));
if((!eqAddr_(((hsj)->ens), (nullptr))) && (!((gfl)((((hsj)->ens)->pf))))){
(ad)((131094LL), (((hsj)->ens)->ne), (nullptr));
}
((hsj)->enu) = (as_<buv>(classTable_, ((efc)(((hsj)->enu), (hsk), (hsl))), 54));
(hsr) = ((hsj)->eoa);
awg<List_<ckh*>*>((hsr), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ckh*>*>((hsr), (new Array_<int64_t>(1, (0LL)))))){
(hst) = (awk<List_<ckh*>*, ckh*>((hsr), (new Array_<int64_t>(1, (0LL)))));
((hst)->eod) = ((byw)(((hst)->eod), (false)));
if((!eqAddr_(((hst)->eod), (nullptr))) && (!((gfl)((((hst)->eod)->pf))))){
(ad)((131095LL), (((hst)->eod)->ne), (nullptr));
}
((hst)->eoe) = (as_<buv>(classTable_, ((efc)(((hst)->eoe), (hsk), (hsl))), 54));
ayu<List_<ckh*>*>((hsr), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((hsj)->eog), (nullptr))){
((hsj)->eog) = (as_<buv>(classTable_, ((efc)(((hsj)->eog), (hsk), (hsl))), 54));
}
if(!eqAddr_(((hsj)->ens), (nullptr))){
(hta) = (nullptr);
if((((hsj)->ens)->lw) != (67585LL)){
return hsj;
}
if(((as_<bwo>(classTable_, ((hsj)->ens), 70))->bwq) != (0x0000000000000000ULL)){
(hta) = ((hsj)->enu);
}
if(!eqAddr_((hta), (nullptr))){
(hth) = ((hsj)->eoa);
awg<List_<ckh*>*>((hth), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ckh*>*>((hth), (new Array_<int64_t>(1, (0LL)))))){
(htl) = (awk<List_<ckh*>*, ckh*>((hth), (new Array_<int64_t>(1, (0LL)))));
if((((htl)->eod)->lw) != (67585LL)){
return hsj;
}
if(((as_<bwo>(classTable_, ((htl)->eod), 70))->bwq) != (0x0000000000000000ULL)){
(hta) = ((htl)->eoe);
break;
}
ayu<List_<ckh*>*>((hth), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_((hta), (nullptr))){
if(eqAddr_(((hsj)->eog), (nullptr))){
(htu) = (new buv());
(buq)((htu), (66052LL), ((hsj)->ne));
((htu)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((htu)->bvh) = (new List_<ge*>());
(hta) = (htu);
}
else{
(hta) = ((hsj)->eog);
}
}
}
((hsj)->ens) = (nullptr);
((hsj)->enu) = (hta);
}
return hsj;
}
// rebuildSwitch
static ge* ees(ckk* htw /*ast*/, gc* htx /*retType*/, fw* hty /*parentFunc*/){
List_<ckl*>* hug = nullptr; // items
ckl* hui = nullptr; // case_
List_<bux*>* huj = nullptr; // items2
bux* hul = nullptr; // exprs
if(!eqAddr_(((htw)->nk), (nullptr))){
return as_<ge>(classTable_, ((htw)->nk), 16);
}
((htw)->nk) = (htw);
((htw)->eqt) = ((byw)(((htw)->eqt), (false)));
if(!eqAddr_(((htw)->eqt), (nullptr))){
if(!((gil)((((htw)->eqt)->pf), (true)))){
(ad)((131096LL), (((htw)->eqt)->ne), (nullptr));
}
(((htw)->bve)->qf) = (((htw)->eqt)->pf);
}
(hug) = ((htw)->eqx);
awg<List_<ckl*>*>((hug), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<ckl*>*>((hug), (new Array_<int64_t>(1, (0LL)))))){
(hui) = (awk<List_<ckl*>*, ckl*>((hug), (new Array_<int64_t>(1, (0LL)))));
(huj) = ((hui)->erb);
awg<List_<bux*>*>((huj), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bux*>*>((huj), (new Array_<int64_t>(1, (0LL)))))){
(hul) = (awk<List_<bux*>*, bux*>((huj), (new Array_<int64_t>(1, (0LL)))));
((hul)->bwt) = ((byw)(((hul)->bwt), (false)));
if((!eqAddr_(((htw)->eqt), (nullptr))) && (!eqAddr_(((hul)->bwt), (nullptr)))){
if(!((dyh)((((htw)->eqt)->pf), (((hul)->bwt)->pf), (false)))){
(ad)((131097LL), (((hul)->bwt)->ne), (nullptr));
}
else if(((((hul)->bwt)->pf)->lw) == (1028LL)){
((hul)->bwt) = ((dyk)(((hul)->bwt), (((htw)->eqt)->pf)));
}
}
if(!eqAddr_(((hul)->bwy), (nullptr))){
((hul)->bwy) = ((byw)(((hul)->bwy), (false)));
if((!eqAddr_(((htw)->eqt), (nullptr))) && (!eqAddr_(((hul)->bwy), (nullptr)))){
if(!((dyh)((((htw)->eqt)->pf), (((hul)->bwy)->pf), (false)))){
(ad)((131097LL), (((hul)->bwy)->ne), (nullptr));
}
else if(((((hul)->bwy)->pf)->lw) == (1028LL)){
((hul)->bwy) = ((dyk)(((hul)->bwy), (((htw)->eqt)->pf)));
}
}
}
ayu<List_<bux*>*>((huj), (new Array_<int64_t>(1, (0LL))));
}
((hui)->erp) = (as_<buv>(classTable_, ((efc)(((hui)->erp), (htx), (hty))), 54));
ayu<List_<ckl*>*>((hug), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((htw)->err), (nullptr))){
((htw)->err) = (as_<buv>(classTable_, ((efc)(((htw)->err), (htx), (hty))), 54));
}
return htw;
}
// rebuildWhile
static ge* eeu(cko* hva /*ast*/, gc* hvb /*retType*/, fw* hvc /*parentFunc*/){
if(!eqAddr_(((hva)->nk), (nullptr))){
return as_<ge>(classTable_, ((hva)->nk), 16);
}
((hva)->nk) = (hva);
if(!eqAddr_(((hva)->euw), (nullptr))){
((hva)->euw) = ((byw)(((hva)->euw), (false)));
if((!eqAddr_(((hva)->euw), (nullptr))) && (!((gfl)((((hva)->euw)->pf))))){
(ad)((131098LL), (((hva)->euw)->ne), (nullptr));
}
}
((hva)->euy) = ((bye)(((hva)->euy), (hvb), (hvc)));
return hva;
}
// rebuildFor
static ge* eew(cks* hvj /*ast*/, gc* hvk /*retType*/, fw* hvl /*parentFunc*/){
if(!eqAddr_(((hvj)->nk), (nullptr))){
return as_<ge>(classTable_, ((hvj)->nk), 16);
}
((hvj)->nk) = (hvj);
((hvj)->exv) = ((byw)(((hvj)->exv), (false)));
if(!eqAddr_(((hvj)->exv), (nullptr))){
if(!((bdi)((((hvj)->exv)->pf)))){
(ad)((131099LL), (((hvj)->exv)->ne), (nullptr));
}
(((hvj)->bve)->qf) = (((hvj)->exv)->pf);
}
((hvj)->exu) = ((byw)(((hvj)->exu), (false)));
if((!eqAddr_(((hvj)->exu), (nullptr))) && (!((bdi)((((hvj)->exu)->pf))))){
(ad)((131100LL), (((hvj)->exu)->ne), (nullptr));
}
((hvj)->exw) = ((byw)(((hvj)->exw), (false)));
if(!eqAddr_(((hvj)->exw), (nullptr))){
if(!((bdi)((((hvj)->exw)->pf)))){
(ad)((131101LL), (((hvj)->exw)->ne), (nullptr));
}
if((((hvj)->exw)->lw) != (67585LL)){
(ad)((131102LL), (((hvj)->exw)->ne), (nullptr));
}
if(((as_<bwo>(classTable_, ((hvj)->exw), 70))->bwq) == (0x0000000000000000ULL)){
(ad)((131103LL), (((hvj)->exw)->ne), (nullptr));
}
}
((hvj)->eye) = ((bye)(((hvj)->eye), (hvk), (hvl)));
return hvj;
}
// rebuildTry
static ge* eey(but* hwc /*ast*/, gc* hwd /*retType*/, fw* hwe /*parentFunc*/){
List_<buw*>* hwj = nullptr; // items
buw* hwl = nullptr; // catch_
List_<bux*>* hwm = nullptr; // items2
bux* hwo = nullptr; // exprs
if(!eqAddr_(((hwc)->nk), (nullptr))){
return as_<ge>(classTable_, ((hwc)->nk), 16);
}
((hwc)->nk) = (hwc);
(bya)(((hwc)->bve));
((hwc)->bvi) = (as_<buv>(classTable_, ((efc)(((hwc)->bvi), (hwd), (hwe))), 54));
if((((hwc)->bvj)->Len()) != (0LL)){
(hwj) = ((hwc)->bvj);
awg<List_<buw*>*>((hwj), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<buw*>*>((hwj), (new Array_<int64_t>(1, (0LL)))))){
(hwl) = (awk<List_<buw*>*, buw*>((hwj), (new Array_<int64_t>(1, (0LL)))));
(hwm) = ((hwl)->bwg);
awg<List_<bux*>*>((hwm), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bux*>*>((hwm), (new Array_<int64_t>(1, (0LL)))))){
(hwo) = (awk<List_<bux*>*, bux*>((hwm), (new Array_<int64_t>(1, (0LL)))));
((hwo)->bwt) = ((byw)(((hwo)->bwt), (false)));
if((!eqAddr_(((hwo)->bwt), (nullptr))) && ((!((bdi)((((hwo)->bwt)->pf)))) || ((((hwo)->bwt)->lw) != (67585LL)))){
(ad)((131104LL), (((hwo)->bwt)->ne), (nullptr));
}
if(!eqAddr_(((hwo)->bwy), (nullptr))){
((hwo)->bwy) = ((byw)(((hwo)->bwy), (false)));
if((!eqAddr_(((hwo)->bwy), (nullptr))) && ((!((bdi)((((hwo)->bwy)->pf)))) || ((((hwo)->bwy)->lw) != (67585LL)))){
(ad)((131104LL), (((hwo)->bwy)->ne), (nullptr));
}
}
ayu<List_<bux*>*>((hwm), (new Array_<int64_t>(1, (0LL))));
}
((hwl)->bwj) = (as_<buv>(classTable_, ((efc)(((hwl)->bwj), (hwd), (hwe))), 54));
ayu<List_<buw*>*>((hwj), (new Array_<int64_t>(1, (0LL))));
}
}
if(!eqAddr_(((hwc)->bvm), (nullptr))){
((hwc)->bvm) = (as_<buv>(classTable_, ((efc)(((hwc)->bvm), (hwd), (hwe))), 54));
}
return hwc;
}
// rebuildThrow
static ge* efa(ckx* hwx /*ast*/){
if(!eqAddr_(((hwx)->nk), (nullptr))){
return as_<ge>(classTable_, ((hwx)->nk), 16);
}
((hwx)->nk) = (hwx);
((hwx)->fav) = ((byw)(((hwx)->fav), (false)));
if((!eqAddr_(((hwx)->fav), (nullptr))) && (!((bdi)((((hwx)->fav)->pf))))){
(ad)((131105LL), (((hwx)->fav)->ne), (nullptr));
}
return hwx;
}
// rebuildBlock
static ge* efc(buv* hxc /*ast*/, gc* hxd /*retType*/, fw* hxe /*parentFunc*/){
if(!eqAddr_(((hxc)->nk), (nullptr))){
return as_<ge>(classTable_, ((hxc)->nk), 16);
}
((hxc)->nk) = (hxc);
((hxc)->bvh) = ((bye)(((hxc)->bvh), (hxd), (hxe)));
return hxc;
}
// rebuildRet
static ge* efe(clc* hxh /*ast*/, gc* hxi /*retType*/){
if(!eqAddr_(((hxh)->nk), (nullptr))){
return as_<ge>(classTable_, ((hxh)->nk), 16);
}
((hxh)->nk) = (hxh);
if(eqAddr_(((hxh)->fcb), (nullptr))){
if(!eqAddr_((hxi), (nullptr))){
(ad)((131106LL), ((hxh)->ne), (nullptr));
}
}
else{
((hxh)->fcb) = ((byw)(((hxh)->fcb), (false)));
if(!eqAddr_(((hxh)->fcb), (nullptr))){
if((eqAddr_((hxi), (nullptr))) || (!((dyh)((((hxh)->fcb)->pf), (hxi), (false))))){
(ad)((131107LL), ((hxh)->ne), (nullptr));
}
else if(((((hxh)->fcb)->pf)->lw) == (1028LL)){
((hxh)->fcb) = ((dyk)(((hxh)->fcb), (hxi)));
}
}
}
return hxh;
}
// rebuildDo
static ge* efg(bvt* hxv /*ast*/){
bza* hya = nullptr; // expr
int64_t hyb = 0; // kind
int64_t hyd = 0;
buv* hyn = nullptr; // block_
gd* hyp = nullptr; // lhs
ebk* hyu = nullptr; // lhs2
ebh* hyx = nullptr; // lhs2
bza* hyy = nullptr; // exprAssign
bza* hza = nullptr; // exprOne
if(!eqAddr_(((hxv)->nk), (nullptr))){
return as_<ge>(classTable_, ((hxv)->nk), 16);
}
((hxv)->nk) = (hxv);
if((!eqAddr_(((hxv)->bwd), (nullptr))) && ((((hxv)->bwd)->lw) == (2050LL))){
(hya) = (as_<bza>(classTable_, ((hxv)->bwd), 72));
(hyb) = (0LL);
switch((hya)->bzb){
case 1LL:
(hyb) = (19LL);
break;
case 2LL:
(hyb) = (20LL);
break;
case 3LL:
(hyb) = (21LL);
break;
case 4LL:
(hyb) = (22LL);
break;
case 5LL:
(hyb) = (23LL);
break;
case 6LL:
(hyb) = (24LL);
break;
case 7LL:
(hyb) = (18LL);
break;
}
if((hyb) != (0LL)){
(hyn) = (new buv());
(buq)((hyn), (66052LL), ((hxv)->ne));
((hyn)->nk) = (hyn);
((hyn)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((hyn)->bve) = (nullptr);
((hyn)->bvh) = (new List_<ge*>());
(hyp) = ((byw)(((hya)->bze), (false)));
if(eqAddr_((hyp), (nullptr))){
return nullptr;
}
if(((hyp)->lw) == (2059LL)){
(hyu) = (as_<ebk>(classTable_, (hyp), 126));
((hyu)->hcr) = ((hyv)(((hyn)->bvh), ((hyu)->hcr), ((hxv)->ne)));
}
else if(((hyp)->lw) == (2058LL)){
(hyx) = (as_<ebh>(classTable_, (hyp), 124));
((hyx)->hej) = ((hyv)(((hyn)->bvh), ((hyx)->hej), ((hxv)->ne)));
((hyx)->heo) = ((hyv)(((hyn)->bvh), ((hyx)->heo), ((hxv)->ne)));
}
(hyy) = (new bza());
(bvy)((hyy), (2050LL), ((hxv)->ne));
((hyy)->bzb) = (0LL);
((hyy)->bze) = (hyp);
(hza) = (new bza());
(bvy)((hza), (2050LL), ((hxv)->ne));
((hza)->bzb) = (hyb);
((hza)->bze) = (hyp);
((hza)->bzf) = ((hya)->bzf);
((hyy)->bzf) = (hza);
((hxv)->bwd) = ((byw)((hyy), (true)));
uj<List_<ge*>*, ge*>(((hyn)->bvh), (new Array_<int64_t>(1, (0LL))), (hxv));
return hyn;
}
}
((hxv)->bwd) = ((byw)(((hxv)->bwd), (true)));
if(eqAddr_(((hxv)->bwd), (nullptr))){
return nullptr;
}
if(!((((((hxv)->bwd)->lw) == (2050LL)) && ((((as_<bza>(classTable_, ((hxv)->bwd), 72))->bzb) == (0LL)) || (((as_<bza>(classTable_, ((hxv)->bwd), 72))->bzb) == (25LL)))) || ((((hxv)->bwd)->lw) == (2057LL)))){
(ad)((131108LL), (((hxv)->bwd)->ne), (nullptr));
}
return hxv;
}
// rebuildBreak
static ge* efi(ge* hzf /*ast*/, gc* hzg /*retType*/, fw* hzh /*parentFunc*/){
if(!eqAddr_(((hzf)->nk), (nullptr))){
return as_<ge>(classTable_, ((hzf)->nk), 16);
}
((hzf)->nk) = (hzf);
if((eqAddr_(((hzf)->nj), (nullptr))) || ((ayg<int64_t>((((hzf)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) != (66048LL))){
(ad)((131109LL), ((hzf)->ne), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(5, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B')))));
return nullptr;
}
((hzf)->nj) = ((bzg)((as_<ge>(classTable_, ((hzf)->nj), 16)), (hzg), (hzh)));
return hzf;
}
// rebuildSkip
static ge* efk(ge* hzm /*ast*/, gc* hzn /*retType*/, fw* hzo /*parentFunc*/){
if(!eqAddr_(((hzm)->nk), (nullptr))){
return as_<ge>(classTable_, ((hzm)->nk), 16);
}
((hzm)->nk) = (hzm);
if((eqAddr_(((hzm)->nj), (nullptr))) || ((ayg<int64_t>((((hzm)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) != (66048LL))){
(ad)((131109LL), ((hzm)->ne), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070')))));
return nullptr;
}
((hzm)->nj) = ((bzg)((as_<ge>(classTable_, ((hzm)->nj), 16)), (hzn), (hzo)));
return hzm;
}
// rebuildAssert
static ge* efm(cll* hzt /*ast*/){
if(!eqAddr_(((hzt)->nk), (nullptr))){
return as_<ge>(classTable_, ((hzt)->nk), 16);
}
if(ct){
return nullptr;
}
((hzt)->nk) = (hzt);
((hzt)->fdp) = ((byw)(((hzt)->fdp), (false)));
if((!eqAddr_(((hzt)->fdp), (nullptr))) && (!((gfl)((((hzt)->fdp)->pf))))){
(ad)((131110LL), (((hzt)->fdp)->ne), (nullptr));
}
return hzt;
}
// isClass
static bool efs(gc* iaa /*type*/){
return (((iaa)->lw) == (66565LL)) && ((((iaa)->nj)->lw) == (5LL));
}
// _dtor
static void iab(efx* iac){
((iac)->ne) = (nullptr);
((iac)->nf) = (nullptr);
((iac)->ng) = (nullptr);
((iac)->nh) = (nullptr);
((iac)->ni) = (nullptr);
((iac)->nj) = (nullptr);
((iac)->nk) = (nullptr);
}
// _copy
static efx* iad(efx* iae){
efx* iaf = nullptr;
(iaf) = (new efx());
((iaf)->ne) = (copy_((iae)->ne));
((iaf)->nf) = (copy_((iae)->nf));
((iaf)->ng) = (copy_((iae)->ng));
((iaf)->nh) = (copy_((iae)->nh));
((iaf)->ni) = (copy_((iae)->ni));
((iaf)->nj) = (copy_((iae)->nj));
((iaf)->nk) = (copy_((iae)->nk));
((iaf)->no) = ((iae)->no);
((iaf)->lw) = ((iae)->lw);
return as_<efx>(classTable_, (iaf), 138);
}
// _toBin
static Array_<uint8_t>* iag(efx* iah){
Array_<uint8_t>* iai = nullptr;
(iai) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(iai) = ((iai)->Cat(toBin_((iah)->ne)));
(iai) = ((iai)->Cat(toBin_((iah)->nf)));
(iai) = ((iai)->Cat(toBin_((iah)->ng)));
(iai) = ((iai)->Cat(toBin_((iah)->nh)));
(iai) = ((iai)->Cat(toBin_((iah)->ni)));
(iai) = ((iai)->Cat(toBin_((iah)->nj)));
(iai) = ((iai)->Cat(toBin_((iah)->nk)));
(iai) = ((iai)->Cat(toBin_((iah)->no)));
(iai) = ((iai)->Cat(toBin_((iah)->lw)));
return iai;
}
// _fromBin
static efx* ias(efx* iat, Array_<uint8_t>* iau, int64_t* iav){
efx* iaw = nullptr;
(iaw) = (new efx());
((iaw)->ne) = (fromBin_<ga*>((iau), (*iav)));
((iaw)->nf) = (fromBin_<Array_<char16_t>*>((iau), (*iav)));
((iaw)->ng) = (fromBin_<fx*>((iau), (*iav)));
((iaw)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((iau), (*iav)));
((iaw)->ni) = (fromBin_<Array_<char16_t>*>((iau), (*iav)));
((iaw)->nj) = (fromBin_<fx*>((iau), (*iav)));
((iaw)->nk) = (fromBin_<fy*>((iau), (*iav)));
((iaw)->no) = (fromBin_<bool>((iau), (*iav)));
((iaw)->lw) = (fromBin_<int64_t>((iau), (*iav)));
return iaw;
}
// _fill
template<typename T_, typename C_> static void egl(T_ iax /*me_*/, Array_<int64_t>* iay /*type*/, C_ iaz /*value*/){
for(int64_t i_ = 0; i_ < iax->L; i_++) iax->B[i_] = iaz;
}
// _offset
static char16_t egp(char16_t iba /*me_*/, int64_t ibb /*n*/){
return static_cast<char16_t>((static_cast<uint64_t>(iba)) + (static_cast<uint64_t>(ibb)));
}
// buildExpr
static void enx(gd* ibc /*ast*/){
int64_t ibe = 0;
switch((ibc)->lw){
case 2049LL:
(ibg)((as_<eai>(classTable_, (ibc), 110)));
break;
case 2050LL:
(ibi)((as_<bza>(classTable_, (ibc), 72)));
break;
case 2051LL:
(ibk)((as_<ean>(classTable_, (ibc), 112)));
break;
case 2052LL:
(ibm)((as_<eaq>(classTable_, (ibc), 114)));
break;
case 2053LL:
(ibo)((as_<eat>(classTable_, (ibc), 116)));
break;
case 2054LL:
(ibq)((as_<eaw>(classTable_, (ibc), 118)));
break;
case 2055LL:
(ibs)((as_<eaz>(classTable_, (ibc), 120)));
break;
case 2056LL:
(ibu)((as_<ebc>(classTable_, (ibc), 122)));
break;
case 2057LL:
(ibw)((as_<bvw>(classTable_, (ibc), 64)));
break;
case 2058LL:
(iby)((as_<ebh>(classTable_, (ibc), 124)));
break;
case 2059LL:
(ica)((as_<ebk>(classTable_, (ibc), 126)));
break;
case 67584LL:
(icc)((as_<bwp>(classTable_, (ibc), 68)));
break;
case 67585LL:
(ice)((as_<bwo>(classTable_, (ibc), 70)));
break;
case 67586LL:
(icg)((as_<ebr>(classTable_, (ibc), 128)));
break;
case 67588LL:
(ici)((as_<ebx>(classTable_, (ibc), 132)));
break;
case 2060LL:
(ick)((as_<eca>(classTable_, (ibc), 134)));
break;
case 2062LL:
(icm)((as_<gd>(classTable_, (ibc), 14)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// isChar
static bool equ(gc* ico /*type*/){
return (((ico)->lw) == (1026LL)) && (((as_<bvc>(classTable_, (ico), 60))->bvd) == (2LL));
}
// addTmpVar
static Array_<char16_t>* ext(gc* icp /*type*/){
up* icq = nullptr; // tmpVar
(icq) = (new up());
((icq)->bbg) = ((bzv)());
((icq)->bbh) = (icp);
uj<List_<up*>*, up*>((aq), (new Array_<int64_t>(1, (0LL))), (icq));
return (icq)->bbg;
}
// buildExpr
static void fgm(gd* icr /*ast*/){
int64_t ict = 0;
switch((icr)->lw){
case 2049LL:
(icv)((as_<eai>(classTable_, (icr), 110)));
break;
case 2050LL:
(icx)((as_<bza>(classTable_, (icr), 72)));
break;
case 2051LL:
(icz)((as_<ean>(classTable_, (icr), 112)));
break;
case 2052LL:
(idb)((as_<eaq>(classTable_, (icr), 114)));
break;
case 2053LL:
(idd)((as_<eat>(classTable_, (icr), 116)));
break;
case 2054LL:
(idf)((as_<eaw>(classTable_, (icr), 118)));
break;
case 2055LL:
(idh)((as_<eaz>(classTable_, (icr), 120)));
break;
case 2056LL:
(idj)((as_<ebc>(classTable_, (icr), 122)));
break;
case 2057LL:
(idl)((as_<bvw>(classTable_, (icr), 64)));
break;
case 2058LL:
(idn)((as_<ebh>(classTable_, (icr), 124)));
break;
case 2059LL:
(idp)((as_<ebk>(classTable_, (icr), 126)));
break;
case 67584LL:
(idr)((as_<bwp>(classTable_, (icr), 68)));
break;
case 67585LL:
(idt)((as_<bwo>(classTable_, (icr), 70)));
break;
case 67586LL:
(idv)((as_<ebr>(classTable_, (icr), 128)));
break;
case 67588LL:
(idx)((as_<ebx>(classTable_, (icr), 132)));
break;
case 2060LL:
(idz)((as_<eca>(classTable_, (icr), 134)));
break;
case 2062LL:
(ieb)((as_<gd>(classTable_, (icr), 14)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// isStr
static bool fis(gc* ied /*type*/){
gc* ieg = nullptr; // itemType
if(((ied)->lw) == (66561LL)){
(ieg) = ((as_<cbh>(classTable_, (ied), 76))->cbj);
if((((ieg)->lw) == (1026LL)) && (((as_<bvc>(classTable_, (ieg), 60))->bvd) == (2LL))){
return true;
}
}
return false;
}
// addTmpVar
static Array_<char16_t>* fjt(gc* iej /*type*/){
vc* iek = nullptr; // tmpVar
(iek) = (new vc());
((iek)->bih) = ((cqx)());
((iek)->bii) = (iej);
uj<List_<vc*>*, vc*>((bm), (new Array_<int64_t>(1, (0LL))), (iek));
return (iek)->bih;
}
// _peekStack
template<typename T_, typename R_> static R_ fmh(T_ iel /*me_*/, Array_<int64_t>* iem /*type*/){
return iel->B.top();
}
// isReserved
static bool foj(Array_<char16_t>* ien /*name*/){
int64_t iev = 0;
int64_t iew = 0;
if(eqAddr_((bb), (nullptr))){
(bb) = (new Array_<Array_<char16_t>*>(47, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073')), (new Array_<char16_t>(6, u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074')), (new Array_<char16_t>(5, u'\u0062', u'\u0069', u'\u0074', u'\u0031', u'\u0036')), (new Array_<char16_t>(5, u'\u0062', u'\u0069', u'\u0074', u'\u0033', u'\u0032')), (new Array_<char16_t>(5, u'\u0062', u'\u0069', u'\u0074', u'\u0036', u'\u0034')), (new Array_<char16_t>(4, u'\u0062', u'\u0069', u'\u0074', u'\u0038')), (new Array_<char16_t>(5, u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B')), (new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C')), (new Array_<char16_t>(5, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B')), (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065')), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072')), (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073')), (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074')), (new Array_<char16_t>(3, u'\u0064', u'\u0062', u'\u0067')), (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074')), (new Array_<char16_t>(4, u'\u0064', u'\u0069', u'\u0063', u'\u0074')), (new Array_<char16_t>(2, u'\u0064', u'\u006F')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0069', u'\u0066')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065')), (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064')), (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D')), (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0076')), (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079')), (new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074')), (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072')), (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063')), (new Array_<char16_t>(2, u'\u0069', u'\u0066')), (new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0075', u'\u0064', u'\u0065')), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066')), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074')), (new Array_<char16_t>(4, u'\u006C', u'\u0069', u'\u0073', u'\u0074')), (new Array_<char16_t>(2, u'\u006D', u'\u0065')), (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C')), (new Array_<char16_t>(5, u'\u0071', u'\u0075', u'\u0065', u'\u0075', u'\u0065')), (new Array_<char16_t>(3, u'\u0072', u'\u0065', u'\u0074')), (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070')), (new Array_<char16_t>(5, u'\u0073', u'\u0074', u'\u0061', u'\u0063', u'\u006B')), (new Array_<char16_t>(5, u'\u0073', u'\u0075', u'\u0070', u'\u0065', u'\u0072')), (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(5, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077')), (new Array_<char16_t>(2, u'\u0074', u'\u006F')), (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065')), (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079')), (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072')), (new Array_<char16_t>(5, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065'))));
for(iev = (0LL), iew = (((bb)->Len()) - (2LL)); iev <= iew; iev += (1LL)){
if(!(cmp_(((bb)->At(iev)), ((bb)->At((iev) + (1LL)))) < 0)){
throw 0xE9170000U;
}
}
}
return (iex<Array_<Array_<char16_t>*>*, Array_<char16_t>*>((bb), (new Array_<int64_t>(1, (0LL))), (ien))) != (-1LL);
}
// parseStatEnd
static ge* fuh(int64_t iey /*row*/, int64_t iez /*col*/, fx* ifa /*block_*/){
ge* ifb = nullptr; // ast
Array_<char16_t>* ifc = nullptr; // id
bool ifd = false; // err
Array_<char16_t>* iff = nullptr;
(ifb) = (new ge());
(bqk)((ifb), (513LL), ((bql)((bf), (iey), (iez))), (nullptr), (false));
(ifc) = ((bre)((true), (false)));
(ifd) = (false);
(dfq)((u'\u000A'), (true));
iff = ifc;
if(cmp_(iff, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
if(((ifa)->lw) != (256LL)){
(ifd) = (true);
}
}
else if(cmp_(iff, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0){
if(((ifa)->lw) != (66049LL)){
(ifd) = (true);
}
}
else if(cmp_(iff, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068'))) == 0){
if(((ifa)->lw) != (66050LL)){
(ifd) = (true);
}
}
else if(cmp_(iff, (new Array_<char16_t>(5, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065'))) == 0){
if(((ifa)->lw) != (16843265LL)){
(ifd) = (true);
}
}
else if(cmp_(iff, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0){
if(((ifa)->lw) != (16843266LL)){
(ifd) = (true);
}
}
else if(cmp_(iff, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0){
if(((ifa)->lw) != (66051LL)){
(ifd) = (true);
}
}
else if(cmp_(iff, (new Array_<char16_t>(5, u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B'))) == 0){
if(((ifa)->lw) != (66052LL)){
(ifd) = (true);
}
}
else{(ad)((65561LL), ((bql)((bf), (iey), (iez))), (new Array_<Array_<char16_t>*>(1, (ifc))));
}
if(ifd){
(ad)((65562LL), ((bql)((bf), (iey), (iez))), (new Array_<Array_<char16_t>*>(1, (ifc))));
}
return ifb;
}
// parseStatFunc
static ge* fuj(){
igf* ige = nullptr; // ast
(ige) = (new igf());
(bqk)((ige), (514LL), (nullptr), (nullptr), (false));
((ige)->igg) = ((brj)((nullptr), (false)));
return ige;
}
// parseStatVar
static ge* ful(){
edr* igh = nullptr; // ast
(igh) = (new edr());
(bqk)((igh), (515LL), (nullptr), (nullptr), (false));
((igh)->edt) = ((brl)((3LL), (nullptr)));
return igh;
}
// parseStatConst
static ge* fun(){
igj* igi = nullptr; // ast
(igi) = (new igj());
(bqk)((igi), (516LL), (nullptr), (nullptr), (false));
((igi)->igk) = ((brn)());
return igi;
}
// parseStatAlias
static ge* fup(){
igm* igl = nullptr; // ast
(igl) = (new igm());
(bqk)((igl), (517LL), (nullptr), (nullptr), (false));
((igl)->ign) = ((brq)());
return igl;
}
// parseStatClass
static ge* fur(){
igp* igo = nullptr; // ast
(igo) = (new igp());
(bqk)((igo), (518LL), (nullptr), (nullptr), (false));
((igo)->igq) = ((bru)());
return igo;
}
// parseStatEnum
static ge* fut(){
igs* igr = nullptr; // ast
(igr) = (new igs());
(bqk)((igr), (519LL), (nullptr), (nullptr), (false));
((igr)->igt) = ((brw)());
return igr;
}
// parseStatIf
static ge* fuv(){
ckg* igu = nullptr; // ast
ge* igz = nullptr; // stat
int64_t iha = 0; // typeId
ckh* ihc = nullptr; // elIf
(igu) = (new ckg());
(bqk)((igu), (66049LL), ((dch)()), (nullptr), (false));
((igu)->bve) = (nullptr);
((igu)->eoa) = (new List_<ckh*>());
((igu)->eog) = (nullptr);
(igv)((igu));
(igw)((igu));
((igu)->ens) = ((dlv)());
(dfq)((u'\u0029'), (true));
(dfq)((u'\u000A'), (true));
((igu)->enu) = ((igy)((&igz), (&iha), (66049LL), (igu)));
while((iha) == (520LL)){
(ihc) = (as_<ckh>(classTable_, (igz), 90));
((ihc)->eoe) = ((igy)((&igz), (&iha), (520LL), (igu)));
uj<List_<ckh*>*, ckh*>(((igu)->eoa), (new Array_<int64_t>(1, (0LL))), (ihc));
}
while((iha) == (521LL)){
((igu)->eog) = ((igy)((&igz), (&iha), (521LL), (igu)));
}
if(!((iha) == (513LL))){
throw 0xE9170000U;
}
bsg<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return igu;
}
// parseStatElIf
static ge* fux(int64_t ihe /*row*/, int64_t ihf /*col*/, fx* ihg /*block_*/){
ckh* ihh = nullptr; // ast
(ihh) = (new ckh());
(bqk)((ihh), (520LL), (nullptr), (nullptr), (false));
((ihh)->eoe) = (nullptr);
if(((ihg)->lw) != (66049LL)){
(ad)((65566LL), ((bql)((bf), (ihe), (ihf))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0069', u'\u0066')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0069', u'\u0066')))));
(brz)(((bsa)()));
return nullptr;
}
(dfq)((u'\u0028'), (true));
((ihh)->eod) = ((dlv)());
(dfq)((u'\u0029'), (true));
(dfq)((u'\u000A'), (true));
return ihh;
}
// parseStatElse
static ge* fuz(int64_t ihk /*row*/, int64_t ihl /*col*/, fx* ihm /*block_*/){
ge* ihn = nullptr; // ast
(ihn) = (new ge());
(bqk)((ihn), (521LL), (nullptr), (nullptr), (false));
if(((ihm)->lw) != (66049LL)){
(ad)((65566LL), ((bql)((bf), (ihk), (ihl))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0069', u'\u0066')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065')))));
(brz)(((bsa)()));
return nullptr;
}
(dfq)((u'\u000A'), (true));
return ihn;
}
// parseStatSwitch
static ge* fvb(int64_t ihq /*row*/, int64_t ihr /*col*/){
ckk* ihs = nullptr; // ast
ge* ihy = nullptr; // stat
int64_t iie = 0; // typeId
ckl* iii = nullptr; // case_
(ihs) = (new ckk());
(bqk)((ihs), (66050LL), ((dch)()), (nullptr), (false));
((ihs)->bve) = ((iht)(((ihs)->ne)));
((ihs)->eqx) = (new List_<ckl*>());
((ihs)->err) = (nullptr);
(igv)((ihs));
(igw)((ihs));
((ihs)->eqt) = ((dlv)());
(dfq)((u'\u0029'), (true));
(dfq)((u'\u000A'), (true));
while(true){
(ihy) = ((dgx)((ihs)));
if(eqAddr_((ihy), (nullptr))){
if(avi){
return nullptr;
}
else{
continue;
}
}
break;
}
(iie) = ((ihy)->lw);
if(!((((iie) == (522LL)) || ((iie) == (523LL))) || ((iie) == (513LL)))){
(ad)((65567LL), ((dch)()), (nullptr));
}
while((iie) == (522LL)){
(iii) = (as_<ckl>(classTable_, (ihy), 94));
((iii)->erp) = ((igy)((&ihy), (&iie), (522LL), (ihs)));
uj<List_<ckl*>*, ckl*>(((ihs)->eqx), (new Array_<int64_t>(1, (0LL))), (iii));
}
while((iie) == (523LL)){
((ihs)->err) = ((igy)((&ihy), (&iie), (523LL), (ihs)));
}
if(!((iie) == (513LL))){
throw 0xE9170000U;
}
bsg<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ihs;
}
// parseStatCase
static ge* fvd(int64_t iik /*row*/, int64_t iil /*col*/, fx* iim /*block_*/){
ckl* iin = nullptr; // ast
bux* iit = nullptr; // exprs
char16_t iiu = 0; // c
Array_<char16_t>* ijb = nullptr; // id
(iin) = (new ckl());
(bqk)((iin), (522LL), (nullptr), (nullptr), (false));
((iin)->erb) = (new List_<bux*>());
((iin)->erp) = (nullptr);
if(((iim)->lw) != (66050LL)){
(ad)((65566LL), ((bql)((bf), (iik), (iil))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065')))));
(brz)(((bsa)()));
return nullptr;
}
while(true){
(iit) = (new bux());
((iit)->bwt) = ((dlv)());
((iit)->bwy) = (nullptr);
(iiu) = ((bqn)());
if((iiu) == (u'\u0000')){
break;
}
if((iiu) == (u'\u000A')){
uj<List_<bux*>*, bux*>(((iin)->erb), (new Array_<int64_t>(1, (0LL))), (iit));
break;
}
if((iiu) == (u'\u002C')){
uj<List_<bux*>*, bux*>(((iin)->erb), (new Array_<int64_t>(1, (0LL))), (iit));
continue;
}
(avg) = (iiu);
(ijb) = ((bre)((true), (false)));
if(cmp_((ijb), (new Array_<char16_t>(2, u'\u0074', u'\u006F'))) != 0){
(ad)((65568LL), ((dch)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0074', u'\u006F')), (ijb))));
(brz)(((bsa)()));
return nullptr;
}
((iit)->bwy) = ((dlv)());
(iiu) = ((bqn)());
if((iiu) == (u'\u0000')){
break;
}
uj<List_<bux*>*, bux*>(((iin)->erb), (new Array_<int64_t>(1, (0LL))), (iit));
if((iiu) == (u'\u000A')){
break;
}
if((iiu) != (u'\u002C')){
(dfl)((u'\u002C'), (iiu));
}
}
return iin;
}
// parseStatDefault
static ge* fvf(int64_t ijk /*row*/, int64_t ijl /*col*/, fx* ijm /*block_*/){
ge* ijn = nullptr; // ast
(ijn) = (new ge());
(bqk)((ijn), (523LL), (nullptr), (nullptr), (false));
if(((ijm)->lw) != (66050LL)){
(ad)((65566LL), ((bql)((bf), (ijk), (ijl))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074')))));
(brz)(((bsa)()));
return nullptr;
}
(dfq)((u'\u000A'), (true));
return ijn;
}
// parseStatWhile
static ge* fvh(){
cko* ijq = nullptr; // ast
char16_t ijs = 0; // c
Array_<char16_t>* ijv = nullptr; // id
ge* ikc = nullptr; // stat
(ijq) = (new cko());
(bqk)((ijq), (16843265LL), ((dch)()), (nullptr), (false));
((ijq)->bve) = (nullptr);
((ijq)->eve) = (false);
((ijq)->euy) = (new List_<ge*>());
(igv)((ijq));
(igw)((ijq));
((ijq)->euw) = ((dlv)());
(ijs) = ((bqn)());
if((ijs) == (u'\u002C')){
(ijv) = ((bre)((true), (false)));
if(cmp_((ijv), (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070'))) != 0){
(ad)((65568LL), ((dch)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070')), (ijv))));
}
((ijq)->eve) = (true);
}
else{
(avg) = (ijs);
}
(dfq)((u'\u0029'), (true));
(dfq)((u'\u000A'), (true));
while(true){
(ikc) = ((dgx)((ijq)));
if(eqAddr_((ikc), (nullptr))){
if(avi){
return nullptr;
}
else{
continue;
}
}
if(((ikc)->lw) == (513LL)){
break;
}
uj<List_<ge*>*, ge*>(((ijq)->euy), (new Array_<int64_t>(1, (0LL))), (ikc));
}
bsg<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ijq;
}
// parseStatFor
static ge* fvj(int64_t ikk /*row*/, int64_t ikl /*col*/){
cks* ikm = nullptr; // ast
char16_t iko = 0; // c
ge* ikw = nullptr; // stat
(ikm) = (new cks());
(bqk)((ikm), (16843266LL), ((dch)()), (nullptr), (false));
((ikm)->bve) = ((iht)(((ikm)->ne)));
((ikm)->eye) = (new List_<ge*>());
(igv)((ikm));
(igw)((ikm));
((ikm)->exv) = ((dlv)());
(dfq)((u'\u002C'), (true));
((ikm)->exu) = ((dlv)());
(iko) = ((bqn)());
if((iko) == (u'\u002C')){
((ikm)->exw) = ((dlv)());
(dfq)((u'\u0029'), (true));
(dfq)((u'\u000A'), (true));
}
else{
((ikm)->exw) = ((iks)(((dch)()), (0LL), (0x0000000000000001ULL)));
(avg) = (iko);
(dfq)((u'\u0029'), (true));
(dfq)((u'\u000A'), (true));
}
while(true){
(ikw) = ((dgx)((ikm)));
if(eqAddr_((ikw), (nullptr))){
if(avi){
return nullptr;
}
else{
continue;
}
}
if(((ikw)->lw) == (513LL)){
break;
}
uj<List_<ge*>*, ge*>(((ikm)->eye), (new Array_<int64_t>(1, (0LL))), (ikw));
}
bsg<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ikm;
}
// parseStatTry
static ge* fvl(int64_t ile /*row*/, int64_t ilf /*col*/){
but* ilg = nullptr; // ast
char16_t ili = 0; // c
bvc* iln = nullptr; // type
ge* ilp = nullptr; // stat
int64_t ilq = 0; // typeId
buw* ils = nullptr; // catch_
(ilg) = (new but());
(bqk)((ilg), (66051LL), ((dch)()), (nullptr), (false));
((ilg)->bve) = ((iht)(((ilg)->ne)));
((ilg)->bvj) = (new List_<buw*>());
((ilg)->bvm) = (nullptr);
(igv)((ilg));
(ili) = ((bqn)());
if((ili) != (u'\u000A')){
(avg) = (ili);
((ilg)->nf) = ((bre)((true), (false)));
(dfu)((ilg), (true));
(dfq)((u'\u000A'), (true));
}
else{
((ilg)->nf) = (new Array_<char16_t>(1, u'\u0024'));
}
(iln) = (new bvc());
(bqk)((iln), (1026LL), ((bql)((bf), (ile), (ilf))), (nullptr), (false));
((iln)->bvd) = (0LL);
(((ilg)->bve)->qf) = (iln);
((ilg)->bvi) = ((igy)((&ilp), (&ilq), (66051LL), (ilg)));
while((ilq) == (524LL)){
(ils) = (as_<buw>(classTable_, (ilp), 56));
((ils)->bwj) = ((igy)((&ilp), (&ilq), (524LL), (ilg)));
uj<List_<buw*>*, buw*>(((ilg)->bvj), (new Array_<int64_t>(1, (0LL))), (ils));
}
if((ilq) == (525LL)){
((ilg)->bvm) = ((igy)((&ilp), (&ilq), (525LL), (ilg)));
}
if(!((ilq) == (513LL))){
throw 0xE9170000U;
}
bsg<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ilg;
}
// parseStatCatch
static ge* fvn(int64_t ilv /*row*/, int64_t ilw /*col*/, fx* ilx /*block_*/){
buw* ily = nullptr; // ast
char16_t imc = 0; // c
bux* imf = nullptr; // exprs
ga* img = nullptr; // pos
bux* iml = nullptr; // exprs
Array_<char16_t>* ims = nullptr; // id
(ily) = (new buw());
(bqk)((ily), (524LL), (nullptr), (nullptr), (false));
((ily)->bwg) = (new List_<bux*>());
((ily)->bwj) = (nullptr);
if(((ilx)->lw) != (66051LL)){
(ad)((65566LL), ((bql)((bf), (ilv), (ilw))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079')), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068')))));
(brz)(((bsa)()));
return nullptr;
}
(imc) = ((bqn)());
if((imc) == (u'\u000A')){
(imf) = (new bux());
(img) = ((dch)());
((imf)->bwt) = ((iks)((img), (0LL), (0x0000000000000000ULL)));
((imf)->bwy) = ((iks)((img), (0LL), (0x00000000FFFFFFFFULL)));
uj<List_<bux*>*, bux*>(((ily)->bwg), (new Array_<int64_t>(1, (0LL))), (imf));
}
else{
(avg) = (imc);
while(true){
(iml) = (new bux());
((iml)->bwt) = ((dlv)());
((iml)->bwy) = (nullptr);
(imc) = ((bqn)());
if((imc) == (u'\u0000')){
break;
}
if((imc) == (u'\u000A')){
uj<List_<bux*>*, bux*>(((ily)->bwg), (new Array_<int64_t>(1, (0LL))), (iml));
break;
}
if((imc) == (u'\u002C')){
uj<List_<bux*>*, bux*>(((ily)->bwg), (new Array_<int64_t>(1, (0LL))), (iml));
continue;
}
(avg) = (imc);
(ims) = ((bre)((true), (false)));
if(cmp_((ims), (new Array_<char16_t>(2, u'\u0074', u'\u006F'))) != 0){
(ad)((65568LL), ((dch)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0074', u'\u006F')), (ims))));
}
((iml)->bwy) = ((dlv)());
(imc) = ((bqn)());
if((imc) == (u'\u0000')){
break;
}
uj<List_<bux*>*, bux*>(((ily)->bwg), (new Array_<int64_t>(1, (0LL))), (iml));
if((imc) == (u'\u000A')){
break;
}
if((imc) != (u'\u002C')){
(dfl)((u'\u002C'), (imc));
}
}
}
return ily;
}
// parseStatFinally
static ge* fvp(int64_t inb /*row*/, int64_t inc /*col*/, fx* ind /*block_*/){
ge* ine = nullptr; // ast
(ine) = (new ge());
(bqk)((ine), (525LL), (nullptr), (nullptr), (false));
if(((ind)->lw) != (66051LL)){
(ad)((65566LL), ((bql)((bf), (inb), (inc))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079')), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079')))));
(brz)(((bsa)()));
return nullptr;
}
(dfq)((u'\u000A'), (true));
return ine;
}
// parseStatThrow
static ge* fvr(){
ckx* inh = nullptr; // ast
(inh) = (new ckx());
(bqk)((inh), (526LL), ((dch)()), (nullptr), (false));
((inh)->fav) = ((dlv)());
(dfq)((u'\u000A'), (true));
return inh;
}
// parseStatBlock
static ge* fvt(){
buv* ini = nullptr; // ast
char16_t ink = 0; // c
ge* inr = nullptr; // stat
(ini) = (new buv());
(bqk)((ini), (66052LL), ((dch)()), (nullptr), (false));
((ini)->bve) = (nullptr);
((ini)->bvh) = (new List_<ge*>());
(igv)((ini));
(ink) = ((bqn)());
if((ink) != (u'\u000A')){
(avg) = (ink);
((ini)->nf) = ((bre)((true), (false)));
(dfu)((ini), (true));
(dfq)((u'\u000A'), (true));
}
else{
((ini)->nf) = (new Array_<char16_t>(1, u'\u0024'));
}
while(true){
(inr) = ((dgx)((ini)));
if(eqAddr_((inr), (nullptr))){
if(avi){
return nullptr;
}
else{
continue;
}
}
if(((inr)->lw) == (513LL)){
break;
}
uj<List_<ge*>*, ge*>(((ini)->bvh), (new Array_<int64_t>(1, (0LL))), (inr));
}
bsg<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ini;
}
// parseStatRet
static ge* fvv(){
clc* ioa = nullptr; // ast
char16_t ioc = 0; // c
(ioa) = (new clc());
(bqk)((ioa), (527LL), ((dch)()), (nullptr), (false));
(ioc) = ((bqn)());
if((ioc) != (u'\u000A')){
(avg) = (ioc);
((ioa)->fcb) = ((dlv)());
(dfq)((u'\u000A'), (true));
}
else{
((ioa)->fcb) = (nullptr);
}
return ioa;
}
// parseStatDo
static ge* fvx(){
bvt* iog = nullptr; // ast
(iog) = (new bvt());
(bqk)((iog), (528LL), ((dch)()), (nullptr), (false));
((iog)->bwd) = ((dlv)());
(dfq)((u'\u000A'), (true));
return iog;
}
// parseStatBreak
static ge* fvz(){
ge* ioh = nullptr; // ast
(ioh) = (new ge());
(bqk)((ioh), (529LL), ((dch)()), (nullptr), (false));
(dfp)((ioh), ((bre)((true), (false))));
(dfq)((u'\u000A'), (true));
return ioh;
}
// parseStatSkip
static ge* fwb(){
ge* ioi = nullptr; // ast
(ioi) = (new ge());
(bqk)((ioi), (530LL), ((dch)()), (nullptr), (false));
(dfp)((ioi), ((bre)((true), (false))));
(dfq)((u'\u000A'), (true));
return ioi;
}
// parseStatAssert
static ge* fwd(){
cll* ioj = nullptr; // ast
(ioj) = (new cll());
(bqk)((ioj), (531LL), ((dch)()), (nullptr), (false));
((ioj)->fdp) = ((dlv)());
(dfq)((u'\u000A'), (true));
return ioj;
}
// parseExprThree
static gd* fwi(){
gd* iok = nullptr; // ast
int64_t iop = 0; // row
int64_t ioq = 0; // col
char16_t ior = 0; // c
ean* iou = nullptr; // ast2
(iok) = ((iol)());
while(true){
(iop) = (ave);
(ioq) = (avf);
(ior) = ((bqn)());
if((ior) == (u'\u003F')){
(dfq)((u'\u0028'), (false));
(iou) = (new ean());
(dma)((iou), (2051LL), ((bql)((bf), (iop), (ioq))));
((iou)->gpq) = (iok);
((iou)->gpt) = ((dlv)());
(dfq)((u'\u002C'), (true));
((iou)->gpw) = ((dlv)());
(iok) = (iou);
(dfq)((u'\u0029'), (true));
}
else{
(avg) = (ior);
break;
}
}
return iok;
}
// readInStr
static char16_t fxs(){
char16_t ioz = 0; // c
char16_t ipb = 0;
while(true){
(ioz) = ((dbw)());
switch(ioz){
case u'\u0009':
(ad)((65540LL), ((dch)()), (nullptr));
continue;
break;
case u'\u000A':
(ad)((65541LL), ((dch)()), (nullptr));
break;
}
return ioz;
}
}
// searchEnumElementValue
static uint64_t gcr(ebu* ipe /*ast*/, brx* ipf /*enum_*/){
Array_<char16_t>* ipg = nullptr; // name
List_<gd*>* iph = nullptr; // items
gd* ipj = nullptr; // item
if(!((((ipe)->pf)->lw) == (1028LL))){
throw 0xE9170000U;
}
(dzb)((ipf));
(ipg) = ((ipe)->gis);
(iph) = ((ipf)->dld);
awg<List_<gd*>*>((iph), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gd*>*>((iph), (new Array_<int64_t>(1, (0LL)))))){
(ipj) = (awk<List_<gd*>*, gd*>((iph), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((ipg), ((ipj)->nf)) == 0){
if(((ipj)->lw) != (67585LL)){
return 0x0000000000000000ULL;
}
return (as_<bwo>(classTable_, (ipj), 70))->bwq;
}
ayu<List_<gd*>*>((iph), (new Array_<int64_t>(1, (0LL))));
}
(ad)((131090LL), ((ipe)->ne), (new Array_<Array_<char16_t>*>(1, (ipg))));
return 0x0000000000000000ULL;
}
// process1
static void gcz(un* ipo /*ast*/, fw** ipp /*dtor*/, fw** ipq /*copy*/, fw** ipr /*toBin*/, fw** ips /*fromBin*/){
fx* ipv = nullptr; // parent
un* iqa = nullptr; // parent
Dict_<un*, bool>* iqb = nullptr; // chk
bool iqe = false;
List_<uo*>* iqh = nullptr; // astItems
uo* iqj = nullptr; // item
fx* iql = nullptr; // def
Array_<char16_t>* iqo = nullptr; // memberName
uo* iqr = nullptr; // parentItem
un* iqt = nullptr; // parent
List_<uo*>* iqv = nullptr; // items
uo* iqx = nullptr; // item2
fx* iqy = nullptr; // def
Array_<char16_t>* irb = nullptr; // parentName
fw* irr = nullptr; // func1
fw* irs = nullptr; // func2
List_<gb*>* irv = nullptr; // items1
List_<gb*>* irw = nullptr; // items2
int64_t isa = 0;
gb* isc = nullptr; // arg1
gb* isd = nullptr; // arg2
Array_<char16_t>* ish = nullptr;
fw* isj = nullptr; // func_
char16_t isn = 0;
fx* isu = nullptr; // def
int64_t isx = 0; // idx
dfx* ite = nullptr; // type
cbh* ith = nullptr; // type
cbl* itj = nullptr; // type2
gb* itn = nullptr; // arg
cbh* itp = nullptr; // type
cbl* itr = nullptr; // type2
gb* itt = nullptr; // arg
bvc* itv = nullptr; // type
int64_t isb = 0;
if(!eqAddr_(((ipo)->nj), (nullptr))){
(ipv) = ((ipo)->nj);
if(((ipv)->lw) == (4LL)){
(dzd)((as_<brr>(classTable_, (ipv), 46)), (nullptr));
((ipo)->nj) = (((as_<brr>(classTable_, (ipv), 46))->dih)->nj);
if(!((((ipo)->nj)->lw) == (5LL))){
throw 0xE9170000U;
}
}
else{
if(!(((ipv)->lw) == (5LL))){
throw 0xE9170000U;
}
(dyz)((as_<un>(classTable_, (ipv), 22)));
}
}
(iqa) = (ipo);
(iqb) = (new Dict_<un*, bool>());
while(!eqAddr_((iqa), (nullptr))){
if(avq<Dict_<un*, bool>*, un*, bool>((iqb), (new Array_<int64_t>(1, (0LL))), (iqa), (&iqe))){
(ad)((131080LL), ((ipo)->ne), (new Array_<Array_<char16_t>*>(1, ((ipo)->nf))));
return;
}
dv<Dict_<un*, bool>*, un*, bool>((iqb), (new Array_<int64_t>(1, (0LL))), (iqa), (true));
(iqa) = (as_<un>(classTable_, ((iqa)->nj), 22));
}
(iqh) = ((ipo)->bai);
awg<List_<uo*>*>((iqh), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((iqh), (new Array_<int64_t>(1, (0LL)))))){
(iqj) = (awk<List_<uo*>*, uo*>((iqh), (new Array_<int64_t>(1, (0LL)))));
(iql) = ((iqj)->azn);
if(((iql)->lw) == (2LL)){
(iqo) = (((as_<bgk>(classTable_, (iql), 38))->bgm)->nf);
}
else if(((iql)->lw) == (3LL)){
(iqo) = (((as_<bro>(classTable_, (iql), 44))->bse)->nf);
}
else{
(iqo) = ((iql)->nf);
}
(iqr) = (nullptr);
(iqt) = (as_<un>(classTable_, ((ipo)->nj), 22));
while((eqAddr_((iqr), (nullptr))) && (!eqAddr_((iqt), (nullptr)))){
(iqv) = ((iqt)->bai);
awg<List_<uo*>*>((iqv), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((iqv), (new Array_<int64_t>(1, (0LL)))))){
(iqx) = (awk<List_<uo*>*, uo*>((iqv), (new Array_<int64_t>(1, (0LL)))));
(iqy) = ((iqx)->azn);
if(((iqy)->lw) == (2LL)){
(irb) = (((as_<bgk>(classTable_, (iqy), 38))->bgm)->nf);
}
else if(((iqy)->lw) == (3LL)){
(irb) = (((as_<bro>(classTable_, (iqy), 44))->bse)->nf);
}
else{
(irb) = ((iqy)->nf);
}
if(cmp_((iqo), (irb)) == 0){
(iqr) = (iqx);
}
ayu<List_<uo*>*>((iqv), (new Array_<int64_t>(1, (0LL))));
}
(iqt) = (as_<un>(classTable_, ((iqt)->nj), 22));
}
if(eqAddr_((iqr), (nullptr))){
if((iqj)->azt){
(ad)((131081LL), (((iqj)->azn)->ne), (new Array_<Array_<char16_t>*>(1, (iqo))));
return;
}
}
else{
if(!((iqj)->azt)){
(ad)((131082LL), (((iqj)->azn)->ne), (new Array_<Array_<char16_t>*>(1, (iqo))));
return;
}
if(!(((((iqj)->azn)->lw) == (256LL)) && ((((iqr)->azn)->lw) == (256LL)))){
(ad)((131083LL), (((iqj)->azn)->ne), (new Array_<Array_<char16_t>*>(1, (iqo))));
return;
}
if(((iqj)->azs) != ((iqr)->azs)){
(ad)((131084LL), (((iqj)->azn)->ne), (new Array_<Array_<char16_t>*>(1, (iqo))));
return;
}
(irr) = (as_<fw>(classTable_, ((iqj)->azn), 8));
(irs) = (as_<fw>(classTable_, ((iqr)->azn), 8));
if(((((eqAddr_(((irr)->sh), (nullptr))) && (!eqAddr_(((irs)->sh), (nullptr)))) || ((!eqAddr_(((irr)->sh), (nullptr))) && (eqAddr_(((irs)->sh), (nullptr))))) || (((!eqAddr_(((irr)->sh), (nullptr))) && (!eqAddr_(((irs)->sh), (nullptr)))) && (!((dyh)(((irr)->sh), ((irs)->sh), (false)))))) || ((((irr)->sg)->Len()) != (((irs)->sg)->Len()))){
(ad)((131085LL), (((iqj)->azn)->ne), (new Array_<Array_<char16_t>*>(1, (iqo))));
return;
}
(irv) = ((irr)->sg);
(irw) = ((irs)->sg);
awg<List_<gb*>*>((irv), (new Array_<int64_t>(1, (0LL))));
awg<List_<gb*>*>((irw), (new Array_<int64_t>(1, (0LL))));
for(isa = (0LL), isb = (((irv)->Len()) - (1LL)); isa <= isb; isa += (1LL)){
(isc) = (awk<List_<gb*>*, gb*>((irv), (new Array_<int64_t>(1, (0LL)))));
(isd) = (awk<List_<gb*>*, gb*>((irw), (new Array_<int64_t>(1, (0LL)))));
if(((((((((isc)->qf)->lw) == (66565LL)) && (eqAddr_((((isc)->qf)->nj), (nullptr)))) || (((((isd)->qf)->lw) == (66565LL)) && (eqAddr_((((isd)->qf)->nj), (nullptr))))) || (!((dyh)(((isc)->qf), ((isd)->qf), (false))))) || (((!eqAddr_(((isc)->nf), (nullptr))) && (!eqAddr_(((isd)->nf), (nullptr)))) && (cmp_(((isc)->nf), ((isd)->nf)) != 0))) || (((isc)->ql) != ((isd)->ql))){
(ad)((131085LL), (((iqj)->azn)->ne), (new Array_<Array_<char16_t>*>(1, (iqo))));
return;
}
ayu<List_<gb*>*>((irv), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>((irw), (new Array_<int64_t>(1, (0LL))));
}
((iqj)->azo) = (iqr);
}
ish = iqo;
if(cmp_(ish, (new Array_<char16_t>(5, u'\u005F', u'\u0064', u'\u0074', u'\u006F', u'\u0072'))) == 0 || cmp_(ish, (new Array_<char16_t>(5, u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079'))) == 0 || cmp_(ish, (new Array_<char16_t>(6, u'\u005F', u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E'))) == 0 || cmp_(ish, (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E'))) == 0){
if(!((((iqj)->azn)->lw) == (256LL))){
throw 0xE9170000U;
}
(isj) = (as_<fw>(classTable_, ((iqj)->azn), 8));
if(((iqj)->azt) && ((ayg<int64_t>(((as_<fw>(classTable_, ((iqj)->azn), 8))->sm), (new Array_<int64_t>(1, (0LL))), (128LL))) == (0LL))){
(ad)((131086LL), ((isj)->ne), (new Array_<Array_<char16_t>*>(1, (iqo))));
return;
}
switch((iqo)->At(1LL)){
case u'\u0064':
(*ipp) = (isj);
break;
case u'\u0063':
(*ipq) = (isj);
break;
case u'\u0074':
(*ipr) = (isj);
break;
case u'\u0066':
(*ips) = (isj);
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{(isu) = ((iqj)->azn);
if(((isu)->lw) == (256LL)){
(isx) = (bey<List_<uo*>*>((iqh), (new Array_<int64_t>(1, (0LL)))));
if(!((isx) != (-1LL))){
throw 0xE9170000U;
}
(ayz)((as_<fw>(classTable_, (isu), 8)));
awg<List_<uo*>*>((iqh), (new Array_<int64_t>(1, (0LL))));
bfa<List_<uo*>*>((iqh), (new Array_<int64_t>(1, (0LL))), (isx));
}
else if(((isu)->lw) == (2LL)){
(eds)((as_<bgk>(classTable_, (isu), 38)));
}
}
ayu<List_<uo*>*>((iqh), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_((*ipp), (nullptr))){
(*ipp) = ((itb)((ipo), (new Array_<char16_t>(5, u'\u005F', u'\u0064', u'\u0074', u'\u006F', u'\u0072'))));
}
if(eqAddr_((*ipq), (nullptr))){
(*ipq) = ((itb)((ipo), (new Array_<char16_t>(5, u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079'))));
(ite) = (new dfx());
(buq)((ite), (66565LL), ((ipo)->ne));
((ite)->nj) = (ipo);
((*ipq)->sh) = (ite);
}
if(eqAddr_((*ipr), (nullptr))){
(*ipr) = ((itb)((ipo), (new Array_<char16_t>(6, u'\u005F', u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E'))));
(ith) = (new cbh());
(buq)((ith), (66561LL), ((ipo)->ne));
(itj) = (new cbl());
(buq)((itj), (1025LL), ((ipo)->ne));
((itj)->cbm) = (1LL);
((ith)->cbj) = (itj);
((*ipr)->sh) = (ith);
}
if(eqAddr_((*ips), (nullptr))){
(*ips) = ((itb)((ipo), (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E'))));
(itn) = (new gb());
(buq)((itn), (7LL), ((ipo)->ne));
((itn)->qk) = (2LL);
((itn)->ql) = (false);
((itn)->qg) = (nullptr);
(itp) = (new cbh());
(buq)((itp), (66561LL), ((ipo)->ne));
(itr) = (new cbl());
(buq)((itr), (1025LL), ((ipo)->ne));
((itr)->cbm) = (1LL);
((itp)->cbj) = (itr);
((itn)->qf) = (itp);
uj<List_<gb*>*, gb*>(((*ips)->sg), (new Array_<int64_t>(1, (0LL))), (itn));
(itt) = (new gb());
(buq)((itt), (7LL), ((ipo)->ne));
((itt)->qk) = (2LL);
((itt)->ql) = (true);
((itt)->qg) = (nullptr);
(itv) = (new bvc());
(buq)((itv), (1026LL), ((ipo)->ne));
((itv)->bvd) = (0LL);
((itt)->qf) = (itv);
uj<List_<gb*>*, gb*>(((*ips)->sg), (new Array_<int64_t>(1, (0LL))), (itt));
awg<List_<gb*>*>(((*ips)->sg), (new Array_<int64_t>(1, (0LL))));
((*ips)->sh) = ((awk<List_<gb*>*, gb*>(((*ips)->sg), (new Array_<int64_t>(1, (0LL)))))->qf);
}
}
// process2
static void gda(un* itw /*ast*/, fw* itx /*dtor*/, fw* ity /*copy*/, fw* itz /*toBin*/, fw* iua /*fromBin*/){
un* iuc = nullptr; // ptr
List_<uo*>* iue = nullptr; // items
uo* iug = nullptr; // item
bvt* iuj = nullptr; // do_
bza* iul = nullptr; // assign
edr* iup = nullptr; // var_
bgk* iur = nullptr; // var2
gb* iut = nullptr; // arg
dfx* iuv = nullptr; // type
eaq* iux = nullptr; // new_
gd* iuz = nullptr; // result
dfx* ivb = nullptr; // type
un* ivd = nullptr; // ptr
List_<uo*>* ivf = nullptr; // items
uo* ivh = nullptr; // item
gb* ivk = nullptr; // member
bvt* ivm = nullptr; // do_
bza* ivo = nullptr; // assign
ebk* ivq = nullptr; // dot
eai* ivt = nullptr; // copy2
clc* ivw = nullptr; // ret_
eaw* ivy = nullptr; // as
edr* iwb = nullptr; // var_
bgk* iwd = nullptr; // var2
gb* iwf = nullptr; // arg
eat* iwh = nullptr; // new_
bwo* iwj = nullptr; // value
bvc* iwl = nullptr; // prim
cbl* iwn = nullptr; // type
cbh* iwp = nullptr; // type
cbl* iwr = nullptr; // type2
gd* iwt = nullptr; // result
dfx* iwv = nullptr; // type
un* iwx = nullptr; // ptr
List_<uo*>* iwz = nullptr; // items
uo* ixb = nullptr; // item
gb* ixe = nullptr; // member
bvt* ixg = nullptr; // do_
bza* ixi = nullptr; // assign
eaz* ixk = nullptr; // expr
cbh* ixm = nullptr; // array_
cbl* ixo = nullptr; // bit
clc* ixq = nullptr; // ret_
edr* ixt = nullptr; // var_
bgk* ixv = nullptr; // var2
gb* ixx = nullptr; // arg
eaq* ixz = nullptr; // new_
gd* iyb = nullptr; // result
dfx* iyd = nullptr; // type
un* iyf = nullptr; // ptr
List_<uo*>* iyh = nullptr; // items
uo* iyj = nullptr; // item
gb* iym = nullptr; // member
bvt* iyo = nullptr; // do_
bza* iyq = nullptr; // assign
ebk* iys = nullptr; // dot
ebc* iyu = nullptr; // expr
gd* iyw = nullptr; // ref
gd* iyy = nullptr; // ref
clc* iza = nullptr; // ret_
(iuc) = (itw);
while(!eqAddr_((iuc), (nullptr))){
(iue) = ((iuc)->bai);
awg<List_<uo*>*>((iue), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((iue), (new Array_<int64_t>(1, (0LL)))))){
(iug) = (awk<List_<uo*>*, uo*>((iue), (new Array_<int64_t>(1, (0LL)))));
if(((((iug)->azn)->lw) == (2LL)) && ((bzi)((((as_<bgk>(classTable_, ((iug)->azn), 38))->bgm)->qf)))){
(iuj) = (new bvt());
(buq)((iuj), (528LL), ((itw)->ne));
(iul) = (new bza());
(bvy)((iul), (2050LL), ((itw)->ne));
((iul)->bzb) = (0LL);
awg<List_<gb*>*>(((itx)->sg), (new Array_<int64_t>(1, (0LL))));
((iul)->bze) = ((ium)((itw), (awk<List_<gb*>*, gb*>(((itx)->sg), (new Array_<int64_t>(1, (0LL))))), (((as_<bgk>(classTable_, ((iug)->azn), 38))->bgm)->nf)));
((iul)->bzf) = ((bzp)(((itw)->ne)));
((iuj)->bwd) = (iul);
uj<List_<ge*>*, ge*>(((itx)->si), (new Array_<int64_t>(1, (0LL))), ((bzg)((iuj), ((itx)->sh), (itx))));
}
ayu<List_<uo*>*>((iue), (new Array_<int64_t>(1, (0LL))));
}
(iuc) = (as_<un>(classTable_, ((iuc)->nj), 22));
}
(iup) = (new edr());
(buq)((iup), (515LL), ((itw)->ne));
(iur) = (new bgk());
(buq)((iur), (2LL), ((itw)->ne));
(iut) = (new gb());
(buq)((iut), (7LL), ((itw)->ne));
((iut)->qk) = (3LL);
((iut)->ql) = (false);
(iuv) = (new dfx());
(buq)((iuv), (66565LL), ((itw)->ne));
((iuv)->nj) = (itw);
((iut)->qf) = (iuv);
(iux) = (new eaq());
(bvy)((iux), (2052LL), ((itw)->ne));
((iux)->grr) = ((iut)->qf);
((iut)->qg) = (iux);
((iur)->bgm) = (iut);
((iup)->edt) = (iur);
uj<List_<ge*>*, ge*>(((ity)->si), (new Array_<int64_t>(1, (0LL))), ((bzg)((iup), ((ity)->sh), (ity))));
(iuz) = (new gd());
(bvy)((iuz), (2062LL), ((itw)->ne));
((iuz)->ni) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
((iuz)->nj) = (((iup)->edt)->bgm);
(ivb) = (new dfx());
(buq)((ivb), (66565LL), ((itw)->ne));
((ivb)->nj) = (itw);
((iuz)->pf) = (ivb);
(ivd) = (itw);
while(!eqAddr_((ivd), (nullptr))){
(ivf) = ((ivd)->bai);
awg<List_<uo*>*>((ivf), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((ivf), (new Array_<int64_t>(1, (0LL)))))){
(ivh) = (awk<List_<uo*>*, uo*>((ivf), (new Array_<int64_t>(1, (0LL)))));
if((((ivh)->azn)->lw) == (2LL)){
(ivk) = ((as_<bgk>(classTable_, ((ivh)->azn), 38))->bgm);
(ivm) = (new bvt());
(buq)((ivm), (528LL), ((itw)->ne));
(ivo) = (new bza());
(bvy)((ivo), (2050LL), ((itw)->ne));
((ivo)->bzb) = (0LL);
(ivq) = (new ebk());
(bvy)((ivq), (2059LL), ((itw)->ne));
((ivq)->hcr) = (iuz);
((ivq)->hgh) = ((ivk)->nf);
((ivq)->hgu) = (nullptr);
((ivo)->bze) = (ivq);
if((bzi)(((ivk)->qf))){
(ivt) = (new eai());
(bvy)((ivt), (2049LL), ((itw)->ne));
((ivt)->ges) = (3LL);
awg<List_<gb*>*>(((ity)->sg), (new Array_<int64_t>(1, (0LL))));
((ivt)->gem) = ((ium)((itw), (awk<List_<gb*>*, gb*>(((ity)->sg), (new Array_<int64_t>(1, (0LL))))), ((ivk)->nf)));
((ivo)->bzf) = (ivt);
}
else{
awg<List_<gb*>*>(((ity)->sg), (new Array_<int64_t>(1, (0LL))));
((ivo)->bzf) = ((ium)((itw), (awk<List_<gb*>*, gb*>(((ity)->sg), (new Array_<int64_t>(1, (0LL))))), ((ivk)->nf)));
}
((ivm)->bwd) = (ivo);
uj<List_<ge*>*, ge*>(((ity)->si), (new Array_<int64_t>(1, (0LL))), ((bzg)((ivm), ((ity)->sh), (ity))));
}
ayu<List_<uo*>*>((ivf), (new Array_<int64_t>(1, (0LL))));
}
(ivd) = (as_<un>(classTable_, ((ivd)->nj), 22));
}
(ivw) = (new clc());
(buq)((ivw), (527LL), ((itw)->ne));
(ivy) = (new eaw());
(bvy)((ivy), (2054LL), ((itw)->ne));
((ivy)->gvh) = (0LL);
((ivy)->guz) = (iuz);
((ivy)->gvc) = ((ity)->sh);
((ivw)->fcb) = (ivy);
uj<List_<ge*>*, ge*>(((ity)->si), (new Array_<int64_t>(1, (0LL))), ((bzg)((ivw), ((ity)->sh), (ity))));
(iwb) = (new edr());
(buq)((iwb), (515LL), ((itw)->ne));
(iwd) = (new bgk());
(buq)((iwd), (2LL), ((itw)->ne));
(iwf) = (new gb());
(buq)((iwf), (7LL), ((itw)->ne));
((iwf)->qk) = (3LL);
((iwf)->ql) = (false);
(iwh) = (new eat());
(bvy)((iwh), (2053LL), ((itw)->ne));
((iwh)->gtc) = (new List_<gd*>());
(iwj) = (new bwo());
(bvy)((iwj), (67585LL), ((itw)->ne));
((iwj)->bwq) = (0x0000000000000008ULL);
(iwl) = (new bvc());
(buq)((iwl), (1026LL), ((itw)->ne));
((iwl)->bvd) = (0LL);
((iwj)->pf) = (iwl);
uj<List_<gd*>*, gd*>(((iwh)->gtc), (new Array_<int64_t>(1, (0LL))), (iwj));
(iwn) = (new cbl());
(buq)((iwn), (1025LL), ((itw)->ne));
((iwn)->cbm) = (1LL);
((iwh)->gtl) = (iwn);
((iwf)->qg) = (iwh);
(iwp) = (new cbh());
(buq)((iwp), (66561LL), ((itw)->ne));
(iwr) = (new cbl());
(buq)((iwr), (1025LL), ((itw)->ne));
((iwr)->cbm) = (1LL);
((iwp)->cbj) = (iwr);
((iwf)->qf) = (iwp);
((iwd)->bgm) = (iwf);
((iwb)->edt) = (iwd);
uj<List_<ge*>*, ge*>(((itz)->si), (new Array_<int64_t>(1, (0LL))), ((bzg)((iwb), ((itz)->sh), (itz))));
(iwt) = (new gd());
(bvy)((iwt), (2062LL), ((itw)->ne));
((iwt)->nj) = (((iwb)->edt)->bgm);
(iwv) = (new dfx());
(buq)((iwv), (66565LL), ((itw)->ne));
((iwv)->nj) = (itw);
((iwt)->pf) = (iwv);
(iwx) = (itw);
while(!eqAddr_((iwx), (nullptr))){
(iwz) = ((iwx)->bai);
awg<List_<uo*>*>((iwz), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((iwz), (new Array_<int64_t>(1, (0LL)))))){
(ixb) = (awk<List_<uo*>*, uo*>((iwz), (new Array_<int64_t>(1, (0LL)))));
if((((ixb)->azn)->lw) == (2LL)){
(ixe) = ((as_<bgk>(classTable_, ((ixb)->azn), 38))->bgm);
(ixg) = (new bvt());
(buq)((ixg), (528LL), ((itw)->ne));
(ixi) = (new bza());
(bvy)((ixi), (2050LL), ((itw)->ne));
((ixi)->bzb) = (7LL);
((ixi)->bze) = (iwt);
(ixk) = (new eaz());
(bvy)((ixk), (2055LL), ((itw)->ne));
awg<List_<gb*>*>(((itz)->sg), (new Array_<int64_t>(1, (0LL))));
((ixk)->gzg) = ((ium)((itw), (awk<List_<gb*>*, gb*>(((itz)->sg), (new Array_<int64_t>(1, (0LL))))), ((ixe)->nf)));
(ixm) = (new cbh());
(buq)((ixm), (66561LL), ((itw)->ne));
(ixo) = (new cbl());
(buq)((ixo), (1025LL), ((itw)->ne));
((ixo)->cbm) = (1LL);
((ixm)->cbj) = (ixo);
((ixk)->gzm) = (ixm);
((ixi)->bzf) = (ixk);
((ixg)->bwd) = (ixi);
uj<List_<ge*>*, ge*>(((itz)->si), (new Array_<int64_t>(1, (0LL))), ((bzg)((ixg), ((itz)->sh), (itz))));
}
ayu<List_<uo*>*>((iwz), (new Array_<int64_t>(1, (0LL))));
}
(iwx) = (as_<un>(classTable_, ((iwx)->nj), 22));
}
(ixq) = (new clc());
(buq)((ixq), (527LL), ((itw)->ne));
((ixq)->fcb) = (iwt);
uj<List_<ge*>*, ge*>(((itz)->si), (new Array_<int64_t>(1, (0LL))), ((bzg)((ixq), ((itz)->sh), (itz))));
(ixt) = (new edr());
(buq)((ixt), (515LL), ((itw)->ne));
(ixv) = (new bgk());
(buq)((ixv), (2LL), ((itw)->ne));
(ixx) = (new gb());
(buq)((ixx), (7LL), ((itw)->ne));
((ixx)->qk) = (3LL);
((ixx)->ql) = (false);
awg<List_<gb*>*>(((iua)->sg), (new Array_<int64_t>(1, (0LL))));
((ixx)->qf) = ((awk<List_<gb*>*, gb*>(((iua)->sg), (new Array_<int64_t>(1, (0LL)))))->qf);
(ixz) = (new eaq());
(bvy)((ixz), (2052LL), ((itw)->ne));
((ixz)->grr) = ((ixx)->qf);
((ixx)->qg) = (ixz);
((ixv)->bgm) = (ixx);
((ixt)->edt) = (ixv);
uj<List_<ge*>*, ge*>(((iua)->si), (new Array_<int64_t>(1, (0LL))), ((bzg)((ixt), ((iua)->sh), (iua))));
(iyb) = (new gd());
(bvy)((iyb), (2062LL), ((itw)->ne));
((iyb)->nj) = (((ixt)->edt)->bgm);
((iyb)->ni) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
(iyd) = (new dfx());
(buq)((iyd), (66565LL), ((itw)->ne));
((iyd)->nj) = (itw);
((iyb)->pf) = (iyd);
(iyf) = (itw);
while(!eqAddr_((iyf), (nullptr))){
(iyh) = ((iyf)->bai);
awg<List_<uo*>*>((iyh), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((iyh), (new Array_<int64_t>(1, (0LL)))))){
(iyj) = (awk<List_<uo*>*, uo*>((iyh), (new Array_<int64_t>(1, (0LL)))));
if((((iyj)->azn)->lw) == (2LL)){
(iym) = ((as_<bgk>(classTable_, ((iyj)->azn), 38))->bgm);
(iyo) = (new bvt());
(buq)((iyo), (528LL), ((itw)->ne));
(iyq) = (new bza());
(bvy)((iyq), (2050LL), ((itw)->ne));
((iyq)->bzb) = (0LL);
(iys) = (new ebk());
(bvy)((iys), (2059LL), ((itw)->ne));
((iys)->hgu) = (nullptr);
((iys)->hcr) = (iyb);
((iys)->hgh) = ((iym)->nf);
((iyq)->bze) = (iys);
(iyu) = (new ebc());
(bvy)((iyu), (2056LL), ((itw)->ne));
(iyw) = (new gd());
(bvy)((iyw), (2062LL), ((itw)->ne));
awg<List_<gb*>*>(((iua)->sg), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>(((iua)->sg), (new Array_<int64_t>(1, (0LL))));
((iyw)->nj) = (awk<List_<gb*>*, gb*>(((iua)->sg), (new Array_<int64_t>(1, (0LL)))));
if(!(!eqAddr_(((iyw)->nj), (nullptr)))){
throw 0xE9170000U;
}
((iyu)->har) = (iyw);
((iyu)->haw) = ((iym)->qf);
(iyy) = (new gd());
(bvy)((iyy), (2062LL), ((itw)->ne));
awg<List_<gb*>*>(((iua)->sg), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>(((iua)->sg), (new Array_<int64_t>(1, (0LL))));
ayu<List_<gb*>*>(((iua)->sg), (new Array_<int64_t>(1, (0LL))));
((iyy)->nj) = (awk<List_<gb*>*, gb*>(((iua)->sg), (new Array_<int64_t>(1, (0LL)))));
if(!(!eqAddr_(((iyy)->nj), (nullptr)))){
throw 0xE9170000U;
}
((iyu)->hax) = (iyy);
((iyq)->bzf) = (iyu);
((iyo)->bwd) = (iyq);
uj<List_<ge*>*, ge*>(((iua)->si), (new Array_<int64_t>(1, (0LL))), ((bzg)((iyo), ((iua)->sh), (iua))));
}
ayu<List_<uo*>*>((iyh), (new Array_<int64_t>(1, (0LL))));
}
(iyf) = (as_<un>(classTable_, ((iyf)->nj), 22));
}
(iza) = (new clc());
(buq)((iza), (527LL), ((itw)->ne));
((iza)->fcb) = (iyb);
uj<List_<ge*>*, ge*>(((iua)->si), (new Array_<int64_t>(1, (0LL))), ((bzg)((iza), ((iua)->sh), (iua))));
}
// isFloat
static bool gev(gc* izb /*type*/){
return (((izb)->lw) == (1026LL)) && (((as_<bvc>(classTable_, (izb), 60))->bvd) == (1LL));
}
// isBool
static bool gfl(gc* izc /*type*/){
return (((izc)->lw) == (1026LL)) && (((as_<bvc>(classTable_, (izc), 60))->bvd) == (3LL));
}
// isComparable
static bool gil(gc* izd /*type*/, bool ize /*lessOrGreater*/){
if((((((((((izd)->lw) == (1025LL)) || ((bdi)((izd)))) || ((gev)((izd)))) || ((equ)((izd)))) || ((cma)((izd)))) || ((efs)((izd)))) || ((fis)((izd)))) || (((izd)->lw) == (1028LL))){
return true;
}
if((!(ize)) && ((gfl)((izd)))){
return true;
}
return false;
}
// cmp
static int64_t gkf(Array_<char16_t>* izj /*s1*/, Array_<char16_t>* izk /*s2*/){
int64_t izl = 0; // p
(izl) = (0LL);
while(((izl) < ((izj)->Len())) && ((izl) < ((izk)->Len()))){
if(((izj)->At(izl)) != ((izk)->At(izl))){
return (((izj)->At(izl)) > ((izk)->At(izl))) ? (1LL) : ((((izj)->At(izl)) < ((izk)->At(izl))) ? (-1LL) : (0LL));
}
(izl) = ((izl) + (1LL));
}
return (((izj)->Len()) > ((izk)->Len())) ? (1LL) : ((((izj)->Len()) < ((izk)->Len())) ? (-1LL) : (0LL));
}
// bitCast
static uint64_t gnm(int64_t izq /*size*/, uint64_t izr /*n*/){
int64_t izt = 0;
switch(izq){
case 1LL:
return static_cast<uint64_t>(static_cast<uint8_t>(izr));
break;
case 2LL:
return static_cast<uint64_t>(static_cast<uint16_t>(izr));
break;
case 4LL:
return static_cast<uint64_t>(static_cast<uint32_t>(izr));
break;
case 8LL:
return izr;
if(!(false)){
throw 0xE9170000U;
}
break;
}
return 0x0000000000000000ULL;
}
// getTypeName
static Array_<char16_t>* hdn(gc* izy /*type*/){
int64_t jac = 0;
cbp* jag = nullptr; // type2
Array_<char16_t>* jah = nullptr; // s
bool jai = false; // first
List_<cbq*>* jaj = nullptr; // items
cbq* jal = nullptr; // arg
ccm* jba = nullptr; // type2
int64_t jbc = 0;
Array_<char16_t>* jbe = nullptr; // s
ccx* jbj = nullptr; // type2
bvc* jbl = nullptr; // type2
int64_t jbn = 0;
if(eqAddr_((izy), (nullptr))){
return new Array_<char16_t>(0);
}
switch((izy)->lw){
case 66561LL:
return (new Array_<char16_t>(2, u'\u005B', u'\u005D'))->Cat((hdn)(((as_<cbh>(classTable_, (izy), 76))->cbj)));
break;
case 1025LL:
return (new Array_<char16_t>(3, u'\u0062', u'\u0069', u'\u0074'))->Cat(v<int64_t>((((as_<cbl>(classTable_, (izy), 78))->cbm) * (8LL)), (new Array_<int64_t>(1, (0LL)))));
break;
case 66562LL:
(jag) = (as_<cbp>(classTable_, (izy), 80));
(jah) = (new Array_<char16_t>(6, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u003C', u'\u0028'));
(jai) = (true);
(jaj) = ((jag)->cbx);
awg<List_<cbq*>*>((jaj), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<cbq*>*>((jaj), (new Array_<int64_t>(1, (0LL)))))){
(jal) = (awk<List_<cbq*>*, cbq*>((jaj), (new Array_<int64_t>(1, (0LL)))));
if(jai){
(jai) = (false);
}
else{
(jah) = ((jah)->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
}
if((jal)->cch){
(jah) = ((jah)->Cat(new Array_<char16_t>(1, u'\u0026')));
}
(jah) = ((jah)->Cat((hdn)(((jal)->ccf))));
ayu<List_<cbq*>*>((jaj), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_(((jag)->cbs), (nullptr))){
(jah) = ((jah)->Cat(new Array_<char16_t>(2, u'\u0029', u'\u003E')));
}
else{
(jah) = ((jah)->Cat(((new Array_<char16_t>(3, u'\u0029', u'\u003A', u'\u0020'))->Cat((hdn)(((jag)->cbs))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
return jah;
break;
case 66563LL:
(jba) = (as_<ccm>(classTable_, (izy), 84));
switch((jba)->ccp){
case 0LL:
(jbe) = (new Array_<char16_t>(5, u'\u006C', u'\u0069', u'\u0073', u'\u0074', u'\u003C'));
break;
case 1LL:
(jbe) = (new Array_<char16_t>(6, u'\u0073', u'\u0074', u'\u0061', u'\u0063', u'\u006B', u'\u003C'));
break;
case 2LL:
(jbe) = (new Array_<char16_t>(6, u'\u0071', u'\u0075', u'\u0065', u'\u0075', u'\u0065', u'\u003C'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return ((jbe)->Cat((hdn)(((jba)->ccr))))->Cat(new Array_<char16_t>(1, u'\u003E'));
break;
case 66564LL:
(jbj) = (as_<ccx>(classTable_, (izy), 86));
return ((((new Array_<char16_t>(5, u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u003C'))->Cat((hdn)(((jbj)->ccy))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')))->Cat((hdn)(((jbj)->ccz))))->Cat(new Array_<char16_t>(1, u'\u003E'));
break;
case 1026LL:
(jbl) = (as_<bvc>(classTable_, (izy), 60));
switch((jbl)->bvd){
case 0LL:
return new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074');
break;
case 1LL:
return new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074');
break;
case 2LL:
return new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072');
break;
case 3LL:
return new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66565LL:
return ((cmp_(((izy)->ni), (new Array_<char16_t>(1, u'\u0040'))) == 0) ? (((izy)->ne)->hk) : (new Array_<char16_t>(0)))->Cat((izy)->ni);
break;
case 1028LL:
return new Array_<char16_t>(9, u'\u0028', u'\u0055', u'\u004E', u'\u004B', u'\u004E', u'\u004F', u'\u0057', u'\u004E', u'\u0029');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
return new Array_<char16_t>(0);
break;
}
}
// chkBuiltinFuncType
static bool hhb(Array_<char16_t>** jbw /*member*/, gc* jbx /*type*/){
int64_t jca = 0; // kind
bool jcb = false; // found
int64_t jcf = 0;
int64_t jdc = 0;
int64_t jdn = 0;
Array_<char16_t>* jeh = nullptr;
Array_<char16_t>* jes = nullptr;
Array_<char16_t>* jfk = nullptr;
Array_<char16_t>* jft = nullptr;
if(eqAddr_((ai), (nullptr))){
(ai) = (new Dict_<Array_<char16_t>*, int64_t>());
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0061', u'\u0062', u'\u0073')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0061', u'\u0064', u'\u0064')), (6LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064')), (1LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0064', u'\u0065', u'\u006C')), (14LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u006C', u'\u004E', u'\u0065', u'\u0078', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006E', u'\u0064', u'\u0069', u'\u0061', u'\u006E')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006C', u'\u006C')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006E', u'\u0064')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0042', u'\u0069', u'\u006E')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0053', u'\u0074', u'\u0072')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0053', u'\u0074', u'\u0072', u'\u0045', u'\u0078')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0053', u'\u0074', u'\u0072', u'\u004C', u'\u0061', u'\u0073', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0067', u'\u0065', u'\u0074')), (7LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0067', u'\u0065', u'\u0074', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0068', u'\u0065', u'\u0061', u'\u0064')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0064', u'\u0078')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0073')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006A', u'\u006F', u'\u0069', u'\u006E')), (11LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0072')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u006D', u'\u0061', u'\u0078')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u006D', u'\u0069', u'\u006E')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0078', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u006E', u'\u006F', u'\u0074')), (1LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u006F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (2LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u006F', u'\u0072')), (1LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0070', u'\u0065', u'\u0065', u'\u006B')), (9LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0070', u'\u0072', u'\u0065', u'\u0076')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0070', u'\u006C', u'\u0061', u'\u0063', u'\u0065')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0076', u'\u0065', u'\u0072', u'\u0073', u'\u0065')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0061', u'\u0072')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0068', u'\u006C')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0068', u'\u0072')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0073', u'\u0068', u'\u0075', u'\u0066', u'\u0066', u'\u006C', u'\u0065')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u0067', u'\u006E')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0073', u'\u006F', u'\u0072', u'\u0074')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0073', u'\u0070', u'\u006C', u'\u0069', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0075', u'\u0062')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u0069', u'\u006C')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0074', u'\u0065', u'\u0072', u'\u006D')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0074', u'\u0065', u'\u0072', u'\u006D', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u004B', u'\u0065', u'\u0079')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(12, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0056', u'\u0061', u'\u006C', u'\u0075', u'\u0065')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u0074', u'\u0036', u'\u0034')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0049', u'\u006E', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072')), (0LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0069', u'\u006D')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0074', u'\u0072', u'\u0069', u'\u006D', u'\u004C', u'\u0065', u'\u0066', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0074', u'\u0072', u'\u0069', u'\u006D', u'\u0052', u'\u0069', u'\u0067', u'\u0068', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0075', u'\u0070', u'\u0070', u'\u0065', u'\u0072')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0078', u'\u006F', u'\u0072')), (1LL));
}
(jca) = (avq<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (*jbw), (&jcb)));
if(!(jcb)){
return false;
}
switch(jca){
case 0LL:
if(((((((bdi)((jbx))) || ((gev)((jbx)))) || ((equ)((jbx)))) || ((gfl)((jbx)))) || (((jbx)->lw) == (1025LL))) || ((fis)((jbx)))){
return true;
}
break;
case 1LL:
if((((jbx)->lw) == (1025LL)) || ((cma)((jbx)))){
return true;
}
break;
case 2LL:
if((equ)((jbx))){
return true;
}
break;
case 3LL:
if(((jbx)->lw) == (1025LL)){
return true;
}
break;
case 4LL:
if(((jbx)->lw) == (66561LL)){
return true;
}
break;
case 5LL:
if((fis)((jbx))){
return true;
}
break;
case 6LL:
if(((jbx)->lw) == (66563LL)){
switch((as_<ccm>(classTable_, (jbx), 84))->ccp){
case 0LL:
(*jbw) = (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
break;
case 1LL:
(*jbw) = (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'));
break;
case 2LL:
(*jbw) = (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return true;
}
if(((jbx)->lw) == (66564LL)){
(*jbw) = (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u0044', u'\u0069', u'\u0063', u'\u0074'));
return true;
}
break;
case 7LL:
if(((jbx)->lw) == (66563LL)){
switch((as_<ccm>(classTable_, (jbx), 84))->ccp){
case 0LL:
(*jbw) = (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
break;
case 1LL:
(*jbw) = (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'));
break;
case 2LL:
(*jbw) = (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return true;
}
if(((jbx)->lw) == (66564LL)){
(*jbw) = (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u0044', u'\u0069', u'\u0063', u'\u0074'));
return true;
}
break;
case 8LL:
if((((jbx)->lw) == (66563LL)) && (((as_<ccm>(classTable_, (jbx), 84))->ccp) == (0LL))){
return true;
}
break;
case 9LL:
if(((jbx)->lw) == (66563LL)){
if(((as_<ccm>(classTable_, (jbx), 84))->ccp) == (1LL)){
(*jbw) = (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'));
return true;
}
else if(((as_<ccm>(classTable_, (jbx), 84))->ccp) == (2LL)){
(*jbw) = (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'));
return true;
}
}
break;
case 10LL:
if((bdi)((jbx))){
jeh = *jbw;
if(cmp_(jeh, (new Array_<char16_t>(3, u'\u0061', u'\u0062', u'\u0073'))) == 0){
(*jbw) = (new Array_<char16_t>(6, u'\u0061', u'\u0062', u'\u0073', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jeh, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070'))) == 0){
(*jbw) = (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jeh, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E'))) == 0){
(*jbw) = (new Array_<char16_t>(11, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jeh, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078'))) == 0){
(*jbw) = (new Array_<char16_t>(11, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jeh, (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u0067', u'\u006E'))) == 0){
(*jbw) = (new Array_<char16_t>(7, u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jeh, (new Array_<char16_t>(8, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074'))) == 0){
(*jbw) = (new Array_<char16_t>(11, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074', u'\u0049', u'\u006E', u'\u0074'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
if((gev)((jbx))){
jes = *jbw;
if(cmp_(jes, (new Array_<char16_t>(3, u'\u0061', u'\u0062', u'\u0073'))) == 0){
(*jbw) = (new Array_<char16_t>(8, u'\u0061', u'\u0062', u'\u0073', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jes, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070'))) == 0){
(*jbw) = (new Array_<char16_t>(10, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jes, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E'))) == 0){
(*jbw) = (new Array_<char16_t>(13, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jes, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078'))) == 0){
(*jbw) = (new Array_<char16_t>(13, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jes, (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u0067', u'\u006E'))) == 0){
(*jbw) = (new Array_<char16_t>(9, u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jes, (new Array_<char16_t>(8, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074'))) == 0){
(*jbw) = (new Array_<char16_t>(13, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
break;
case 11LL:
if((((jbx)->lw) == (66561LL)) && ((fis)(((as_<cbh>(classTable_, (jbx), 76))->cbj)))){
return true;
}
break;
case 12LL:
if(((jbx)->lw) == (66564LL)){
return true;
}
break;
case 13LL:
if(((jbx)->lw) == (66561LL)){
jfk = *jbw;
if(cmp_(jfk, (new Array_<char16_t>(4, u'\u0073', u'\u006F', u'\u0072', u'\u0074'))) == 0){
(*jbw) = (new Array_<char16_t>(9, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else if(cmp_(jfk, (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063'))) == 0){
(*jbw) = (new Array_<char16_t>(13, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else if(cmp_(jfk, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006E', u'\u0064'))) == 0){
(*jbw) = (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else if(cmp_(jfk, (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074'))) == 0){
(*jbw) = (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
if((((jbx)->lw) == (66563LL)) && (((as_<ccm>(classTable_, (jbx), 84))->ccp) == (0LL))){
jft = *jbw;
if(cmp_(jft, (new Array_<char16_t>(4, u'\u0073', u'\u006F', u'\u0072', u'\u0074'))) == 0){
(*jbw) = (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else if(cmp_(jft, (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063'))) == 0){
(*jbw) = (new Array_<char16_t>(12, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else if(cmp_(jft, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006E', u'\u0064'))) == 0){
(*jbw) = (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else if(cmp_(jft, (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074'))) == 0){
(*jbw) = (new Array_<char16_t>(12, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
break;
case 14LL:
if((((jbx)->lw) == (66563LL)) && (((as_<ccm>(classTable_, (jbx), 84))->ccp) == (0LL))){
return true;
}
if(((jbx)->lw) == (66564LL)){
(*jbw) = (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u006C', u'\u0044', u'\u0069', u'\u0063', u'\u0074'));
return true;
}
break;
}
return false;
}
// cacheSubExpr
static gd* hyv(List_<ge*>* jge /*stats*/, gd* jgf /*ast*/, ga* jgg /*pos*/){
gd* jgl = nullptr; // ref
gb* jgn = nullptr; // arg
bvt* jgp = nullptr; // do_
bza* jgr = nullptr; // exprAssign
if(eqAddr_((jgf), (nullptr))){
return nullptr;
}
if((((jgf)->lw) == (2062LL)) || ((ayg<int64_t>(((jgf)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
return jgf;
}
(jgl) = (new gd());
(bvy)((jgl), (2062LL), (jgg));
((jgl)->ni) = (new Array_<char16_t>(1, u'\u0024'));
((jgl)->pj) = (2LL);
((jgl)->nk) = (jgl);
(jgn) = (new gb());
(buq)((jgn), (7LL), (jgg));
((jgn)->qk) = (3LL);
((jgn)->ql) = (false);
((jgn)->qf) = ((jgf)->pf);
((jgn)->qg) = (nullptr);
((jgn)->nk) = (jgn);
((jgl)->nj) = (jgn);
((jgl)->pf) = ((jgn)->qf);
(jgp) = (new bvt());
(buq)((jgp), (528LL), (jgg));
(jgr) = (new bza());
(bvy)((jgr), (2050LL), (jgg));
((jgr)->bzb) = (0LL);
((jgr)->bze) = (jgl);
((jgr)->bzf) = (jgf);
((jgp)->bwd) = (jgr);
uj<List_<ge*>*, ge*>((jge), (new Array_<int64_t>(1, (0LL))), ((efg)((jgp))));
return jgl;
}
// buildExpr1
static void ibg(eai* jgs /*ast*/){
int64_t jgu = 0;
if(!(((jgs)->pj) != (0LL))){
throw 0xE9170000U;
}
switch((jgs)->ges){
case 0LL:
(enx)(((jgs)->gem));
break;
case 1LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002D', u'\u0028')));
(enx)(((jgs)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 2LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0021', u'\u0028')));
(enx)(((jgs)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 3LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u005F', u'\u0028')));
(enx)(((jgs)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 4LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jgs)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002D', u'\u003E', u'\u004C', u'\u0065', u'\u006E', u'\u0028', u'\u0029')));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr2
static void ibi(bza* jhb /*ast*/){
gc* jhc = nullptr; // type
int64_t jhe = 0;
Array_<char16_t>* jiw = nullptr; // tmpVar
if(!(((jhb)->pj) != (0LL))){
throw 0xE9170000U;
}
(jhc) = (((jhb)->bze)->pf);
switch((jhb)->bzb){
case 0LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003D', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 8LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u007C', u'\u007C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 9LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 10LL:
if((bzi)((jhc))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0029', u'\u0020', u'\u003C', u'\u0020', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 11LL:
if((bzi)((jhc))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 12LL:
if((bzi)((jhc))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 13LL:
if((bzi)((jhc))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 14LL:
if((bzi)((jhc))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 15LL:
if((bzi)((jhc))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u0021', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u0021', u'\u003D', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 16LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0065', u'\u0071', u'\u0041', u'\u0064', u'\u0064', u'\u0072', u'\u005F', u'\u0028', u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 17LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0021', u'\u0065', u'\u0071', u'\u0041', u'\u0064', u'\u0064', u'\u0072', u'\u005F', u'\u0028', u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 18LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u002D', u'\u003E', u'\u0043', u'\u0061', u'\u0074', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 19LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002B', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 20LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002D', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 21LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002A', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 22LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002F', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 23LL:
if(((bdi)((jhc))) || ((ayg<int64_t>(((jhc)->lw), (new Array_<int64_t>(1, (0LL))), (1025LL))) == (1025LL))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u0025', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
if(!((gev)((jhc)))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0066', u'\u006D', u'\u006F', u'\u0064', u'\u0028', u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
break;
case 24LL:
if(((bdi)((jhc))) || ((ayg<int64_t>(((jhc)->lw), (new Array_<int64_t>(1, (0LL))), (1025LL))) == (1025LL))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0050', u'\u006F', u'\u0077', u'\u0049', u'\u005F', u'\u0028', u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
else{
if(!((gev)((jhc)))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0070', u'\u006F', u'\u0077', u'\u0028', u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
break;
case 25LL:
(jiw) = ((ext)((jhc)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((jiw), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0020', u'\u003D', u'\u0020', u'\u0028'))));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003D', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jhb)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003D', u'\u0020', u'\u0028'))->Cat(v<Array_<char16_t>*>((jiw), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr3
static void ibk(ean* jiy /*ast*/){
if(!(((jiy)->pj) != (0LL))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jiy)->gpq));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003F', u'\u0020', u'\u0028')));
(enx)(((jiy)->gpt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003A', u'\u0020', u'\u0028')));
(enx)(((jiy)->gpw));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprNew
static void ibm(eaq* jiz /*ast*/){
un* jjc = nullptr; // class_
Array_<char16_t>* jjd = nullptr; // id
ccm* jjh = nullptr; // gen
int64_t jjj = 0;
ccx* jjp = nullptr; // dict_
if(!(((jiz)->pj) != (0LL))){
throw 0xE9170000U;
}
if((efs)(((jiz)->grr))){
(jjc) = (as_<un>(classTable_, (((jiz)->grr)->nj), 22));
(jjd) = ((bfq)((jjc)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0077', u'\u0020'))->Cat(v<Array_<char16_t>*>((jjd), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))));
}
else{
if((((jiz)->grr)->lw) == (66563LL)){
(jjh) = (as_<ccm>(classTable_, ((jiz)->grr), 84));
switch((jjh)->ccp){
case 0LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((jjh)->ccr))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029'))));
break;
case 1LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((jjh)->ccr))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029'))));
break;
case 2LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((jjh)->ccr))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((((jiz)->grr)->lw) == (66564LL))){
throw 0xE9170000U;
}
(jjp) = (as_<ccx>(classTable_, ((jiz)->grr), 86));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0044', u'\u0069', u'\u0063', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((jjp)->ccy))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcv)(((jjp)->ccz))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029')))));
}
}
}
// buildExprNewArray
static void ibo(eat* jjq /*ast*/){
List_<gd*>* jjs = nullptr; // items
if(!(((jjq)->pj) != (0LL))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((jjq)->gtl))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcv)(((jjq)->pf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003E', u'\u0028'))->Cat(v<int64_t>((((jjq)->gtc)->Len()), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
(jjs) = ((jjq)->gtc);
awg<List_<gd*>*>((jjs), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gd*>*>((jjs), (new Array_<int64_t>(1, (0LL)))))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028')));
(enx)((awk<List_<gd*>*, gd*>((jjs), (new Array_<int64_t>(1, (0LL))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ayu<List_<gd*>*>((jjs), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprAs
static void ibq(eaw* jju /*ast*/){
int64_t jjw = 0;
gc* jjy = nullptr; // t1
gc* jjz = nullptr; // t2
Array_<char16_t>* jkc = nullptr; // id
bca* jkd = nullptr; // info
bca* jkg = nullptr; // info
bca* jki = nullptr; // info
if(!(((jju)->pj) != (0LL))){
throw 0xE9170000U;
}
switch((jju)->gvh){
case 0LL:
(jjy) = (((jju)->guz)->pf);
(jjz) = ((jju)->gvc);
if((efs)((jjy))){
if(!((efs)((jjz)))){
throw 0xE9170000U;
}
(jkc) = ((bfq)((as_<un>(classTable_, ((jjz)->nj), 22))));
(jkd) = ((bbz)(((jjz)->nj)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0061', u'\u0073', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>((jkc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u003E', u'\u0028', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u002C', u'\u0020', u'\u0028'))));
(enx)(((jju)->guz));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<int64_t>((((jkd)->bfv) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((jju)->gvc))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u0028'))));
(enx)(((jju)->guz));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 1LL:
(bfq)((as_<un>(classTable_, (((jju)->gvc)->nj), 22)));
(jkg) = ((bbz)((((jju)->gvc)->nj)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(18, u'\u0069', u'\u0073', u'\u005F', u'\u0028', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jju)->guz));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<int64_t>((((jkg)->bfv) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
case 2LL:
(bfq)((as_<un>(classTable_, (((jju)->gvc)->nj), 22)));
(jki) = ((bbz)((((jju)->gvc)->nj)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(19, u'\u0021', u'\u0069', u'\u0073', u'\u005F', u'\u0028', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jju)->guz));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<int64_t>((((jki)->bfv) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExprToBin
static void ibs(eaz* jkk /*ast*/){
if(!(((jkk)->pj) != (0LL))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u0028')));
(enx)(((jkk)->gzg));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprFromBin
static void ibu(ebc* jkl /*ast*/){
if(!(((jkl)->pj) != (0LL))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((jkl)->haw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0028'))));
(enx)(((jkl)->har));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(enx)(((jkl)->hax));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
// buildExprCall
static void ibw(bvw* jkm /*ast*/){
cbp* jkn = nullptr; // funcType
Array_<char16_t>* jko = nullptr; // template
List_<bvx*>* jkr = nullptr; // items
gc* jks = nullptr; // meType
bool jlt = false; // first
List_<bvx*>* jlu = nullptr; // items
bvx* jlw = nullptr; // item
gc* jmd = nullptr; // type
if(!(((jkm)->pj) != (0LL))){
throw 0xE9170000U;
}
(jkn) = (as_<cbp>(classTable_, (((jkm)->bwc)->pf), 80));
(jko) = (nullptr);
if((!eqAddr_((jkn), (nullptr))) && ((ayg<int64_t>(((jkn)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL))){
(jkr) = ((jkm)->bvz);
awg<List_<bvx*>*>((jkr), (new Array_<int64_t>(1, (0LL))));
(jks) = (((awk<List_<bvx*>*, bvx*>((jkr), (new Array_<int64_t>(1, (0LL)))))->bxl)->pf);
if((ayg<int64_t>(((jkn)->ekp), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)){
(jko) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)((jks))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcv)(((as_<ccx>(classTable_, (jks), 86))->ccy))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcv)(((as_<ccx>(classTable_, (jks), 86))->ccz))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E')))));
}
else if((ayg<int64_t>(((jkn)->ekp), (new Array_<int64_t>(1, (0LL))), (8LL))) == (8LL)){
if((ayg<int64_t>(((jkn)->ekp), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(jko) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)((jks))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
if(((jks)->lw) == (66563LL)){
(jko) = ((jko)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)(((as_<ccm>(classTable_, (jks), 84))->ccr))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020'))));
}
else{
if(!(((jks)->lw) == (66564LL))){
throw 0xE9170000U;
}
(jko) = ((jko)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)(((as_<ccx>(classTable_, (jks), 86))->ccy))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020'))));
}
(jko) = ((jko)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)(((jkn)->cbs))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else{
(jko) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)((jks))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
if(((jks)->lw) == (66561LL)){
(jko) = ((jko)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)(((as_<cbh>(classTable_, (jks), 76))->cbj))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else if(((jks)->lw) == (66563LL)){
(jko) = ((jko)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)(((as_<ccm>(classTable_, (jks), 84))->ccr))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else{
if(!(((jks)->lw) == (66564LL))){
throw 0xE9170000U;
}
(jko) = ((jko)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcv)(((as_<ccx>(classTable_, (jks), 86))->ccy))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
}
}
else if((ayg<int64_t>(((jkn)->ekp), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(jko) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)((jks))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcv)(((jkn)->cbs))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else if((ayg<int64_t>(((jkn)->ekp), (new Array_<int64_t>(1, (0LL))), (256LL))) == (256LL)){
(jko) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)((jks))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcv)(((as_<ccx>(classTable_, (jks), 86))->ccy))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcv)(((as_<ccx>(classTable_, (jks), 86))->ccz))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E')))));
}
else{
(jko) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)((jks))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E')));
}
}
if(eqAddr_((jko), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jkm)->bwc));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
(enx)(((jkm)->bwc));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (jko));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(jlt) = (true);
(jlu) = ((jkm)->bvz);
awg<List_<bvx*>*>((jlu), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bvx*>*>((jlu), (new Array_<int64_t>(1, (0LL)))))){
(jlw) = (awk<List_<bvx*>*, bvx*>((jlu), (new Array_<int64_t>(1, (0LL)))));
if(jlt){
(jlt) = (false);
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028')));
}
if((jlw)->bxh){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0026')));
}
(enx)(((jlw)->bxl));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ayu<List_<bvx*>*>((jlu), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
(jmd) = ((jkm)->pf);
if(!eqAddr_((jmd), (nullptr))){
if((efs)((jmd))){
(bfq)((as_<un>(classTable_, ((jmd)->nj), 22)));
}
}
}
// buildExprArray
static void iby(ebh* jmi /*ast*/){
if(!(((jmi)->pj) != (0LL))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jmi)->hej));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002D', u'\u003E', u'\u0041', u'\u0074', u'\u0028')));
(enx)(((jmi)->heo));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprDot
static void ica(ebk* jmj /*ast*/){
uo* jmm = nullptr; // classItem
bca* jmp = nullptr; // info
if(!(((jmj)->pj) != (0LL))){
throw 0xE9170000U;
}
if((efs)((((jmj)->hcr)->pf))){
(jmm) = ((jmj)->hgu);
if(!(!eqAddr_((jmm), (nullptr)))){
throw 0xE9170000U;
}
(bfq)((as_<un>(classTable_, ((((jmj)->hcr)->pf)->nj), 22)));
if((((jmm)->azn)->lw) == (2LL)){
(jmp) = ((bbz)(((as_<bgk>(classTable_, ((jmm)->azn), 38))->bgm)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(enx)(((jmj)->hcr));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((jmp)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
else{
if(!((((jmm)->azn)->lw) == (256LL))){
throw 0xE9170000U;
}
(jmp) = ((bbz)(((jmm)->azn)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((jmp)->bea), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
}
else{
if(!((((jmj)->nj)->lw) == (2062LL))){
throw 0xE9170000U;
}
(icm)((as_<gd>(classTable_, ((jmj)->nj), 14)));
}
}
// buildExprValue
static void icc(bwp* jms /*ast*/){
if(!((((jms)->pf)->lw) == (1027LL))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072')));
}
// buildExprValuePrim
static void ice(bwo* jmt /*ast*/){
gc* jmu = nullptr; // type
int64_t jnb = 0;
(jmu) = ((jmt)->pf);
if(((bdi)((jmu))) || ((cma)((jmu)))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((v<int64_t>((static_cast<int64_t>((jmt)->bwq)), (new Array_<int64_t>(1, (0LL)))))->Cat(new Array_<char16_t>(2, u'\u004C', u'\u004C'))));
}
else if((equ)((jmu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0075', u'\u0027', u'\u005C', u'\u0075'))->Cat(v<Array_<char16_t>*>((auy<Array_<char16_t>*>((v<uint16_t>((static_cast<uint16_t>((jmt)->bwq)), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))), (2LL), (-1LL))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0027'))));
}
else if((gfl)((jmu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((((jmt)->bwq) == (0x0000000000000000ULL)) ? (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')) : (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))));
}
else if(((jmu)->lw) == (1025LL)){
switch((as_<cbl>(classTable_, (jmu), 78))->cbm){
case 1LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(21, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0038', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<uint8_t>((static_cast<uint8_t>((jmt)->bwq)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0055', u'\u0029'))));
break;
case 2LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<uint16_t>((static_cast<uint16_t>((jmt)->bwq)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0055', u'\u0029'))));
break;
case 4LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<uint32_t>((static_cast<uint32_t>((jmt)->bwq)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0055'))));
break;
case 8LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<uint64_t>(((jmt)->bwq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0055', u'\u004C', u'\u004C'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!(false)){
throw 0xE9170000U;
}
}
}
// buildExprValueStr
static void icg(ebr* jni /*ast*/){
Array_<char16_t>* jnj = nullptr; // value
Array_<char16_t>* jnk = nullptr; // s
int64_t jno = 0;
int64_t jnp = 0;
(jnj) = ((jni)->gkg);
(jnk) = (((new Array_<char16_t>(21, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<int64_t>(((jnj)->Len()), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0)));
for(jno = (0LL), jnp = (((jnj)->Len()) - (1LL)); jno <= jnp; jno += (1LL)){
(jnk) = ((jnk)->Cat(((new Array_<char16_t>(6, u'\u002C', u'\u0020', u'\u0075', u'\u0027', u'\u005C', u'\u0075'))->Cat(v<Array_<char16_t>*>((auy<Array_<char16_t>*>((v<uint16_t>((static_cast<uint16_t>((jnj)->At(jno))), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))), (2LL), (-1LL))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0027'))));
}
(jnk) = ((jnk)->Cat(new Array_<char16_t>(1, u'\u0029')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (jnk));
}
// buildExprValueFloat
static void ici(ebx* jns /*ast*/){
Array_<char16_t>* jnt = nullptr; // value
(jnt) = (v<double>(((jns)->gfi), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((jnt), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066'))) == 0){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(39, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0069', u'\u0063', u'\u005F', u'\u006C', u'\u0069', u'\u006D', u'\u0069', u'\u0074', u'\u0073', u'\u003C', u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065', u'\u003E', u'\u003A', u'\u003A', u'\u0069', u'\u006E', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0079', u'\u0028', u'\u0029')));
}
else if((awp<Array_<char16_t>*, char16_t>((jnt), (new Array_<int64_t>(1, (0LL))), (u'\u002E'), (-1LL))) == (-1LL)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((jnt)->Cat(new Array_<char16_t>(2, u'\u002E', u'\u0030'))));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (jnt));
}
}
// buildExprValueArray
static void ick(eca* jny /*ast*/){
List_<gd*>* jnz = nullptr; // items
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcv)(((as_<cbh>(classTable_, ((jny)->pf), 76))->cbj))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003E', u'\u0028'))->Cat(v<int64_t>((((jny)->hda)->Len()), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0)))));
(jnz) = ((jny)->hda);
awg<List_<gd*>*>((jnz), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gd*>*>((jnz), (new Array_<int64_t>(1, (0LL)))))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028')));
(enx)((awk<List_<gd*>*, gd*>((jnz), (new Array_<int64_t>(1, (0LL))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ayu<List_<gd*>*>((jnz), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprRef
static void icm(gd* job /*ast*/){
fx* joc = nullptr; // ast2
bca* jod = nullptr; // info
gb* joh = nullptr; // arg
int64_t joj = 0;
(joc) = ((job)->nj);
(jod) = ((bbz)((joc)));
if(((joc)->lw) == (256LL)){
um<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL))), (as_<fw>(classTable_, (joc), 8)));
}
else{
if(!(((joc)->lw) == (7LL))){
throw 0xE9170000U;
}
(joh) = (as_<gb>(classTable_, (joc), 10));
switch((joh)->qk){
case 1LL:
if(!((jod)->bcc)){
((jod)->bcc) = (true);
uj<List_<gb*>*, gb*>((ar), (new Array_<int64_t>(1, (0LL))), (joh));
}
break;
case 2LL:
break;
case 3LL:
if(!((jod)->bcc)){
((jod)->bcc) = (true);
uj<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), (joh));
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if((joh)->ql){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u002A')));
}
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((jod)->bea));
}
// buildExpr1
static void icv(eai* jou /*ast*/){
int64_t jow = 0;
Array_<char16_t>* jpb = nullptr; // typeId
gc* jpe = nullptr; // type
int64_t jpi = 0;
if(!(((jou)->pj) != (0LL))){
throw 0xE9170000U;
}
switch((jou)->ges){
case 0LL:
(fgm)(((jou)->gem));
break;
case 1LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002D', u'\u0028')));
(fgm)(((jou)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 2LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0021', u'\u0028')));
(fgm)(((jou)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 3LL:
(jpb) = ((jpc)((((jou)->gem)->pf)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0043', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>((jpb), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0028'))));
(fgm)(((jou)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 4LL:
(jpe) = (((jou)->gem)->pf);
if(((jpe)->lw) == (66563LL)){
switch((as_<ccm>(classTable_, (jpe), 84))->ccp){
case 0LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jou)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u004C')));
break;
case 1LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jou)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
break;
case 2LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jou)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if(((jpe)->lw) == (66564LL)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jou)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065')));
}
else{
if(!(((jpe)->lw) == (66561LL))){
throw 0xE9170000U;
}
if((equ)(((as_<cbh>(classTable_, (jpe), 76))->cbj))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jou)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jou)->gem));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
}
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr2
static void icx(bza* jpt /*ast*/){
gc* jpu = nullptr; // type
int64_t jpw = 0;
ebh* jqa = nullptr; // ast2
Array_<char16_t>* jqb = nullptr; // tmpIdx
Array_<char16_t>* jqc = nullptr; // tmpChar
Array_<char16_t>* jsc = nullptr; // tmpVar
if(!(((jpt)->pj) != (0LL))){
throw 0xE9170000U;
}
(jpu) = (((jpt)->bze)->pf);
switch((jpt)->bzb){
case 0LL:
if(((((jpt)->bze)->lw) == (2058LL)) && ((equ)(((as_<ebh>(classTable_, ((jpt)->bze), 124))->pf)))){
(jqa) = (as_<ebh>(classTable_, ((jpt)->bze), 124));
(jqb) = ((fjt)((((jqa)->heo)->pf)));
(jqc) = ((fjt)(((jqa)->pf)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jqa)->hej));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u003D', u'\u0028'))->Cat(v<Array_<char16_t>*>((jqb), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(fgm)(((jqa)->heo));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fgm)(((jqa)->hej));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0030', u'\u002C'))->Cat(v<Array_<char16_t>*>((jqb), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u0029', u'\u002B', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002B', u'\u0028')));
(fgm)(((jqa)->hej));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>((jqb), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002B', u'\u0031', u'\u0029', u'\u0029'))));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 8LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u007C', u'\u007C', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 9LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0026', u'\u0026', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 10LL:
if((fis)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u003C', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((bzi)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u003C', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003C', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 11LL:
if((fis)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u003E', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((bzi)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u003E', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003E', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 12LL:
if((fis)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002E', u'\u0053', u'\u003C', u'\u003D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((bzi)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003C', u'\u003D', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u003C', u'\u003D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 13LL:
if((fis)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002E', u'\u0053', u'\u003E', u'\u003D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((bzi)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003E', u'\u003D', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u003E', u'\u003D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 14LL:
if((fis)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u002E', u'\u0053', u'\u003D', u'\u003D', u'\u003D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((bzi)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003D', u'\u003D', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 15LL:
if((fis)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u002E', u'\u0053', u'\u0021', u'\u003D', u'\u003D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((bzi)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u0021', u'\u003D', u'\u0030')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0021', u'\u003D', u'\u003D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 16LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 17LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0021', u'\u003D', u'\u003D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 18LL:
if((fis)((jpu))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u007B', u'\u0053', u'\u003A', u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u002B', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002E', u'\u0053', u'\u007D')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0029', u'\u002E', u'\u0063', u'\u006F', u'\u006E', u'\u0063', u'\u0061', u'\u0074', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 19LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002B', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 20LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 21LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002A', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 22LL:
if(!((gev)((jpu)))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u007E', u'\u007E', u'\u0028')));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002F', u'\u0028')));
(fgm)(((jpt)->bzf));
if(!((gev)((jpu)))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 23LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u0025', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 24LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002A', u'\u002A', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 25LL:
(jsc) = ((fjt)((jpu)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((jsc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fgm)(((jpt)->bze));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003D', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fgm)(((jpt)->bzf));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003D', u'\u0028'))->Cat(v<Array_<char16_t>*>((jsc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr3
static void icz(ean* jse /*ast*/){
if(!(((jse)->pj) != (0LL))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jse)->gpq));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003F', u'\u0028')));
(fgm)(((jse)->gpt));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003A', u'\u0028')));
(fgm)(((jse)->gpw));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprNew
static void idb(eaq* jsf /*ast*/){
un* jsi = nullptr; // class_
Array_<char16_t>* jsj = nullptr; // id
ccm* jsn = nullptr; // gen
int64_t jsp = 0;
if(!(((jsf)->pj) != (0LL))){
throw 0xE9170000U;
}
if((efs)(((jsf)->grr))){
(jsi) = (as_<un>(classTable_, (((jsf)->grr)->nj), 22));
(jsj) = ((bkz)((jsi)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0077', u'\u0020'))->Cat(v<Array_<char16_t>*>((jsj), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))));
}
else{
if((((jsf)->grr)->lw) == (66563LL)){
(jsn) = (as_<ccm>(classTable_, ((jsf)->grr), 84));
switch((jsn)->ccp){
case 0LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(26, u'\u007B', u'\u004C', u'\u003A', u'\u0030', u'\u002C', u'\u0048', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0054', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0050', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u007D')));
break;
case 1LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005B', u'\u005D')));
break;
case 2LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005B', u'\u005D')));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((((jsf)->grr)->lw) == (66564LL))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u004D', u'\u0061', u'\u0070', u'\u0028', u'\u0029')));
}
}
}
// buildExprNewArray
static void idd(eat* jsv /*ast*/){
List_<gd*>* jsx = nullptr; // items
bool jtd = false; // first
bool jtm = false; // first
if(!(((jsv)->pj) != (0LL))){
throw 0xE9170000U;
}
(jsx) = ((jsv)->gtc);
awg<List_<gd*>*>((jsx), (new Array_<int64_t>(1, (0LL))));
if((equ)(((jsv)->gtl))){
if(((jsx)->Len()) == (1LL)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u005C', u'\u0030', u'\u0022', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074', u'\u0028')));
(fgm)((awk<List_<gd*>*, gd*>((jsx), (new Array_<int64_t>(1, (0LL))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u007D')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(53, u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0041', u'\u005F', u'\u0028', u'\u006E', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u006E', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003D', u'\u003D', u'\u003D', u'\u0031', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u005C', u'\u0030', u'\u0022', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((bkr)(((jsv)->gtl))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(86, u'\u0029', u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u002C', u'\u006D', u'\u003D', u'\u006E', u'\u002E', u'\u0073', u'\u0068', u'\u0069', u'\u0066', u'\u0074', u'\u0028', u'\u0029', u'\u002C', u'\u0069', u'\u003B', u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0061', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0041', u'\u005F', u'\u0028', u'\u006D', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u007D', u'\u007D', u'\u0029', u'\u0028', u'\u005B'))));
(jtd) = (true);
while(!(awi<List_<gd*>*>((jsx), (new Array_<int64_t>(1, (0LL)))))){
if(jtd){
(jtd) = (false);
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(fgm)((awk<List_<gd*>*, gd*>((jsx), (new Array_<int64_t>(1, (0LL))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ayu<List_<gd*>*>((jsx), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005D', u'\u0029')));
}
}
else{
if(((jsx)->Len()) == (1LL)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028')));
(fgm)((awk<List_<gd*>*, gd*>((jsx), (new Array_<int64_t>(1, (0LL))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0029', u'\u002E', u'\u0066', u'\u0069', u'\u006C', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((bkr)(((jsv)->gtl))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(60, u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0041', u'\u005F', u'\u0028', u'\u006E', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u006E', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003D', u'\u003D', u'\u003D', u'\u0031', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u002E', u'\u0066', u'\u0069', u'\u006C', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((bkr)(((jsv)->gtl))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(85, u'\u0029', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u002C', u'\u006D', u'\u003D', u'\u006E', u'\u002E', u'\u0073', u'\u0068', u'\u0069', u'\u0066', u'\u0074', u'\u0028', u'\u0029', u'\u002C', u'\u0069', u'\u003B', u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0061', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0041', u'\u005F', u'\u0028', u'\u006D', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u007D', u'\u007D', u'\u0029', u'\u0028', u'\u005B'))));
(jtm) = (true);
while(!(awi<List_<gd*>*>((jsx), (new Array_<int64_t>(1, (0LL)))))){
if(jtm){
(jtm) = (false);
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(fgm)((awk<List_<gd*>*, gd*>((jsx), (new Array_<int64_t>(1, (0LL))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ayu<List_<gd*>*>((jsx), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005D', u'\u0029')));
}
}
}
// buildExprAs
static void idf(eaw* jtr /*ast*/){
int64_t jtt = 0;
gc* jtv = nullptr; // t1
gc* jtw = nullptr; // t2
biz* juo = nullptr; // info
biz* juq = nullptr; // info
if(!(((jtr)->pj) != (0LL))){
throw 0xE9170000U;
}
switch((jtr)->gvh){
case 0LL:
(jtv) = (((jtr)->guz)->pf);
(jtw) = ((jtr)->gvc);
if((efs)((jtv))){
if(!((efs)((jtw)))){
throw 0xE9170000U;
}
(bkz)((as_<un>(classTable_, ((jtw)->nj), 22)));
(fgm)(((jtr)->guz));
}
else{
if((((((jtv)->lw) == (1025LL)) || ((bdi)((jtv)))) || ((equ)((jtv)))) || ((cma)((jtv)))){
if(((((((jtw)->lw) == (1025LL)) || ((bdi)((jtw)))) || ((equ)((jtw)))) || ((cma)((jtw)))) || ((gev)((jtw)))){
(fgm)(((jtr)->guz));
}
else{
if(!((gfl)((jtw)))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jtr)->guz));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0021', u'\u003D', u'\u0030')));
}
}
else if((gev)((jtv))){
if((((jtw)->lw) == (1025LL)) || ((bdi)((jtw)))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u007E', u'\u007E', u'\u0028')));
(fgm)(((jtr)->guz));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
if(!((gev)((jtw)))){
throw 0xE9170000U;
}
(fgm)(((jtr)->guz));
}
}
else{
if(!((gfl)((jtv)))){
throw 0xE9170000U;
}
if((((jtw)->lw) == (1025LL)) || ((bdi)((jtw)))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jtr)->guz));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u003F', u'\u0031', u'\u003A', u'\u0030')));
}
else{
if(!((gfl)((jtw)))){
throw 0xE9170000U;
}
(fgm)(((jtr)->guz));
}
}
}
break;
case 1LL:
(bkz)((as_<un>(classTable_, (((jtr)->gvc)->nj), 22)));
(juo) = ((biy)((((jtr)->gvc)->nj)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jtr)->guz));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0029', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0063', u'\u0065', u'\u006F', u'\u0066', u'\u0020'))->Cat(v<Array_<char16_t>*>(((juo)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
break;
case 2LL:
(bkz)((as_<un>(classTable_, (((jtr)->gvc)->nj), 22)));
(juq) = ((biy)((((jtr)->gvc)->nj)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0021', u'\u0028', u'\u0028')));
(fgm)(((jtr)->guz));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0029', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0063', u'\u0065', u'\u006F', u'\u0066', u'\u0020'))->Cat(v<Array_<char16_t>*>(((juq)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExprToBin
static void idh(eaz* jus /*ast*/){
if(!(((jus)->pj) != (0LL))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u0028')));
(fgm)(((jus)->gzg));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprFromBin
static void idj(ebc* jut /*ast*/){
if(!(((jut)->pj) != (0LL))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u0028', u'\u0028')));
(fgm)(((jut)->har));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fgm)(((jut)->hax));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
// buildExprCall
static void idl(bvw* juu /*ast*/){
cbp* juv = nullptr; // funcType
Array_<char16_t>* juw = nullptr; // meTypeId
List_<bvx*>* juz = nullptr; // items
int64_t jva = 0; // refNum
List_<bvx*>* jvc = nullptr; // items
Array_<char16_t>* jvh = nullptr; // resultVar
Array_<Array_<char16_t>*>* jvi = nullptr; // refVar
int64_t jvo = 0; // idx
int64_t jvp = 0; // refCnt
bool jvq = false; // first
List_<bvx*>* jvr = nullptr; // items
bvx* jvt = nullptr; // item
int64_t jwg = 0; // idx
int64_t jwh = 0; // refCnt
List_<bvx*>* jwi = nullptr; // items
bvx* jwk = nullptr; // item
gc* jwt = nullptr; // type
if(!(((juu)->pj) != (0LL))){
throw 0xE9170000U;
}
(juv) = (as_<cbp>(classTable_, (((juu)->bwc)->pf), 80));
(juw) = (nullptr);
if((!eqAddr_((juv), (nullptr))) && ((ayg<int64_t>(((juv)->ekp), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL))){
(juz) = ((juu)->bvz);
awg<List_<bvx*>*>((juz), (new Array_<int64_t>(1, (0LL))));
(juw) = ((jpc)((((awk<List_<bvx*>*, bvx*>((juz), (new Array_<int64_t>(1, (0LL)))))->bxl)->pf)));
}
(jva) = (0LL);
(jvc) = ((juu)->bvz);
awg<List_<bvx*>*>((jvc), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bvx*>*>((jvc), (new Array_<int64_t>(1, (0LL)))))){
if((awk<List_<bvx*>*, bvx*>((jvc), (new Array_<int64_t>(1, (0LL)))))->bxh){
(jva) = ((jva) + (1LL));
}
ayu<List_<bvx*>*>((jvc), (new Array_<int64_t>(1, (0LL))));
}
(jvh) = (nullptr);
(jvi) = (nullptr);
if((jva) > (0LL)){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
if(!eqAddr_(((juu)->pf), (nullptr))){
(jvh) = ((fjt)(((juu)->pf)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((jvh), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003D'))));
}
(jvi) = (newArray_<Array_<char16_t>*, Array_<Array_<char16_t>*>*>(1, (jva)));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((juu)->bwc));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0028')));
(jvo) = (0LL);
(jvp) = (0LL);
(jvq) = (true);
(jvr) = ((juu)->bvz);
awg<List_<bvx*>*>((jvr), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bvx*>*>((jvr), (new Array_<int64_t>(1, (0LL)))))){
(jvt) = (awk<List_<bvx*>*, bvx*>((jvr), (new Array_<int64_t>(1, (0LL)))));
if(jvq){
(jvq) = (false);
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
if((!eqAddr_((juw), (nullptr))) && ((jvo) == (1LL))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (juw));
}
else if((jvt)->bxh){
((jvi)->At(jvp)) = ((fjt)((((jvt)->bxl)->pf)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((jvi)->At(jvp)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u003D', u'\u007B', u'\u0024', u'\u003A', u'\u0028'))));
(fgm)(((jvt)->bxl));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u007D', u'\u002C'))->Cat(v<Array_<char16_t>*>(((jvi)->At(jvp)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
(jvp) = ((jvp) + (1LL));
}
else{
(fgm)(((jvt)->bxl));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
(jvo) = ((jvo) + (1LL));
ayu<List_<bvx*>*>((jvr), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
if((jva) > (0LL)){
(jwg) = (0LL);
(jwh) = (0LL);
(jwi) = ((juu)->bvz);
awg<List_<bvx*>*>((jwi), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<bvx*>*>((jwi), (new Array_<int64_t>(1, (0LL)))))){
(jwk) = (awk<List_<bvx*>*, bvx*>((jwi), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((juw), (nullptr))) && ((jwg) == (1LL))){
}
else if((jwk)->bxh){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
(fgm)(((jwk)->bxl));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u003D'))->Cat(v<Array_<char16_t>*>(((jvi)->At(jwh)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002E', u'\u0024'))));
(jwh) = ((jwh) + (1LL));
}
(jwg) = ((jwg) + (1LL));
ayu<List_<bvx*>*>((jwi), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((juu)->pf), (nullptr))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>((jvh), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
(jwt) = ((juu)->pf);
if(!eqAddr_((jwt), (nullptr))){
if((efs)((jwt))){
(bkz)((as_<un>(classTable_, ((jwt)->nj), 22)));
}
}
}
// buildExprArray
static void idn(ebh* jwy /*ast*/){
if(!(((jwy)->pj) != (0LL))){
throw 0xE9170000U;
}
if((equ)(((jwy)->pf))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jwy)->hej));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0041', u'\u0074', u'\u0028')));
(fgm)(((jwy)->heo));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jwy)->hej));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u005B')));
(fgm)(((jwy)->heo));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u005D')));
}
}
// buildExprDot
static void idp(ebk* jxc /*ast*/){
uo* jxf = nullptr; // classItem
biz* jxi = nullptr; // info
if(!(((jxc)->pj) != (0LL))){
throw 0xE9170000U;
}
if((efs)((((jxc)->hcr)->pf))){
(jxf) = ((jxc)->hgu);
if(!(!eqAddr_((jxf), (nullptr)))){
throw 0xE9170000U;
}
(bkz)((as_<un>(classTable_, ((((jxc)->hcr)->pf)->nj), 22)));
if((((jxf)->azn)->lw) == (2LL)){
(jxi) = ((biy)(((as_<bgk>(classTable_, ((jxf)->azn), 38))->bgm)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fgm)(((jxc)->hcr));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u002E'))->Cat(v<Array_<char16_t>*>(((jxi)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
else{
if(!((((jxf)->azn)->lw) == (256LL))){
throw 0xE9170000U;
}
(jxi) = ((biy)(((jxf)->azn)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((jxi)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
}
else{
if(!((((jxc)->nj)->lw) == (2062LL))){
throw 0xE9170000U;
}
(ieb)((as_<gd>(classTable_, ((jxc)->nj), 14)));
}
}
// buildExprValue
static void idr(bwp* jxl /*ast*/){
if(!((((jxl)->pf)->lw) == (1027LL))){
throw 0xE9170000U;
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C')));
}
// buildExprValuePrim
static void idt(bwo* jxm /*ast*/){
gc* jxn = nullptr; // type
int64_t jxu = 0;
(jxn) = ((jxm)->pf);
if(((bdi)((jxn))) || ((cma)((jxn)))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<int64_t>((static_cast<int64_t>((jxm)->bwq)), (new Array_<int64_t>(1, (0LL))))));
}
else if((equ)((jxn))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint16_t>((static_cast<uint16_t>((jxm)->bwq)), (new Array_<int64_t>(1, (0LL))))));
}
else if((gfl)((jxn))){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), ((((jxm)->bwq) == (0x0000000000000000ULL)) ? (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')) : (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))));
}
else if(((jxn)->lw) == (1025LL)){
switch((as_<cbl>(classTable_, (jxn), 78))->cbm){
case 1LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint8_t>((static_cast<uint8_t>((jxm)->bwq)), (new Array_<int64_t>(1, (0LL))))));
break;
case 2LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint16_t>((static_cast<uint16_t>((jxm)->bwq)), (new Array_<int64_t>(1, (0LL))))));
break;
case 4LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint32_t>((static_cast<uint32_t>((jxm)->bwq)), (new Array_<int64_t>(1, (0LL))))));
break;
case 8LL:
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint64_t>(((jxm)->bwq), (new Array_<int64_t>(1, (0LL))))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!(false)){
throw 0xE9170000U;
}
}
}
// buildExprValueStr
static void idv(ebr* jyb /*ast*/){
Array_<char16_t>* jyc = nullptr; // value
Array_<char16_t>* jyd = nullptr; // s
int64_t jyh = 0;
int64_t jyi = 0;
(jyc) = ((jyb)->gkg);
(jyd) = (new Array_<char16_t>(4, u'\u007B', u'\u0053', u'\u003A', u'\u0022'));
for(jyh = (0LL), jyi = (((jyc)->Len()) - (1LL)); jyh <= jyi; jyh += (1LL)){
(jyd) = ((jyd)->Cat((bmp)(((jyc)->At(jyh)))));
}
(jyd) = ((jyd)->Cat(new Array_<char16_t>(2, u'\u0022', u'\u007D')));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (jyd));
}
// buildExprValueFloat
static void idx(ebx* jyl /*ast*/){
Array_<char16_t>* jym = nullptr; // value
(jym) = (v<double>(((jyl)->gfi), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((jym), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066'))) == 0){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0049', u'\u006E', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0079')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (jym));
}
}
// buildExprValueArray
static void idz(eca* jyq /*ast*/){
bool jyr = false; // first
List_<gd*>* jys = nullptr; // items
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u005B')));
(jyr) = (true);
(jys) = ((jyq)->hda);
awg<List_<gd*>*>((jys), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<gd*>*>((jys), (new Array_<int64_t>(1, (0LL)))))){
if(jyr){
(jyr) = (false);
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(fgm)((awk<List_<gd*>*, gd*>((jys), (new Array_<int64_t>(1, (0LL))))));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ayu<List_<gd*>*>((jys), (new Array_<int64_t>(1, (0LL))));
}
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u005D')));
}
// buildExprRef
static void ieb(gd* jyx /*ast*/){
fx* jyy = nullptr; // ast2
biz* jyz = nullptr; // info
gb* jzd = nullptr; // arg
int64_t jzf = 0;
(jyy) = ((jyx)->nj);
(jyz) = ((biy)((jyy)));
if(((jyy)->lw) == (256LL)){
um<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL))), (as_<fw>(classTable_, (jyy), 8)));
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), ((jyz)->bjp));
}
else{
if(!(((jyy)->lw) == (7LL))){
throw 0xE9170000U;
}
(jzd) = (as_<gb>(classTable_, (jyy), 10));
switch((jzd)->qk){
case 1LL:
if(!((jyz)->bjb)){
((jyz)->bjb) = (true);
uj<List_<gb*>*, gb*>((bn), (new Array_<int64_t>(1, (0LL))), (jzd));
}
break;
case 2LL:
break;
case 3LL:
if(!((jyz)->bjb)){
((jyz)->bjb) = (true);
uj<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), (jzd));
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if((jzd)->ql){
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((jyz)->bjp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002E', u'\u0024'))));
}
else{
uj<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), ((jyz)->bjp));
}
}
}
// _findBin
template<typename T_, typename C_> static int64_t iex(T_ jzr /*me_*/, Array_<int64_t>* jzs /*type*/, C_ jzt /*item*/){
int64_t a_ = 0, b_ = jzr->L - 1;
while (a_ <= b_) {
int64_t c_ = (a_ + b_) / 2;
int64_t m_ = cmp_(jzt, jzr->B[c_]);
if(m_ < 0) b_ = c_ - 1;
else if(m_ > 0) a_ = c_ + 1;
else return c_;
}
return -1;
}
// _dtor
static void jzu(igf* jzv){
((jzv)->igg) = (nullptr);
((jzv)->ne) = (nullptr);
((jzv)->nf) = (nullptr);
((jzv)->ng) = (nullptr);
((jzv)->nh) = (nullptr);
((jzv)->ni) = (nullptr);
((jzv)->nj) = (nullptr);
((jzv)->nk) = (nullptr);
}
// _copy
static igf* jzw(igf* jzx){
igf* jzy = nullptr;
(jzy) = (new igf());
((jzy)->igg) = (copy_((jzx)->igg));
((jzy)->ne) = (copy_((jzx)->ne));
((jzy)->nf) = (copy_((jzx)->nf));
((jzy)->ng) = (copy_((jzx)->ng));
((jzy)->nh) = (copy_((jzx)->nh));
((jzy)->ni) = (copy_((jzx)->ni));
((jzy)->nj) = (copy_((jzx)->nj));
((jzy)->nk) = (copy_((jzx)->nk));
((jzy)->no) = ((jzx)->no);
((jzy)->lw) = ((jzx)->lw);
return as_<igf>(classTable_, (jzy), 140);
}
// _toBin
static Array_<uint8_t>* jzz(igf* kaa){
Array_<uint8_t>* kab = nullptr;
(kab) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kab) = ((kab)->Cat(toBin_((kaa)->igg)));
(kab) = ((kab)->Cat(toBin_((kaa)->ne)));
(kab) = ((kab)->Cat(toBin_((kaa)->nf)));
(kab) = ((kab)->Cat(toBin_((kaa)->ng)));
(kab) = ((kab)->Cat(toBin_((kaa)->nh)));
(kab) = ((kab)->Cat(toBin_((kaa)->ni)));
(kab) = ((kab)->Cat(toBin_((kaa)->nj)));
(kab) = ((kab)->Cat(toBin_((kaa)->nk)));
(kab) = ((kab)->Cat(toBin_((kaa)->no)));
(kab) = ((kab)->Cat(toBin_((kaa)->lw)));
return kab;
}
// _fromBin
static igf* kam(igf* kan, Array_<uint8_t>* kao, int64_t* kap){
igf* kaq = nullptr;
(kaq) = (new igf());
((kaq)->igg) = (fromBin_<fw*>((kao), (*kap)));
((kaq)->ne) = (fromBin_<ga*>((kao), (*kap)));
((kaq)->nf) = (fromBin_<Array_<char16_t>*>((kao), (*kap)));
((kaq)->ng) = (fromBin_<fx*>((kao), (*kap)));
((kaq)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kao), (*kap)));
((kaq)->ni) = (fromBin_<Array_<char16_t>*>((kao), (*kap)));
((kaq)->nj) = (fromBin_<fx*>((kao), (*kap)));
((kaq)->nk) = (fromBin_<fy*>((kao), (*kap)));
((kaq)->no) = (fromBin_<bool>((kao), (*kap)));
((kaq)->lw) = (fromBin_<int64_t>((kao), (*kap)));
return kaq;
}
// _dtor
static void kar(igj* kas){
((kas)->igk) = (nullptr);
((kas)->ne) = (nullptr);
((kas)->nf) = (nullptr);
((kas)->ng) = (nullptr);
((kas)->nh) = (nullptr);
((kas)->ni) = (nullptr);
((kas)->nj) = (nullptr);
((kas)->nk) = (nullptr);
}
// _copy
static igj* kat(igj* kau){
igj* kav = nullptr;
(kav) = (new igj());
((kav)->igk) = (copy_((kau)->igk));
((kav)->ne) = (copy_((kau)->ne));
((kav)->nf) = (copy_((kau)->nf));
((kav)->ng) = (copy_((kau)->ng));
((kav)->nh) = (copy_((kau)->nh));
((kav)->ni) = (copy_((kau)->ni));
((kav)->nj) = (copy_((kau)->nj));
((kav)->nk) = (copy_((kau)->nk));
((kav)->no) = ((kau)->no);
((kav)->lw) = ((kau)->lw);
return as_<igj>(classTable_, (kav), 142);
}
// _toBin
static Array_<uint8_t>* kaw(igj* kax){
Array_<uint8_t>* kay = nullptr;
(kay) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kay) = ((kay)->Cat(toBin_((kax)->igk)));
(kay) = ((kay)->Cat(toBin_((kax)->ne)));
(kay) = ((kay)->Cat(toBin_((kax)->nf)));
(kay) = ((kay)->Cat(toBin_((kax)->ng)));
(kay) = ((kay)->Cat(toBin_((kax)->nh)));
(kay) = ((kay)->Cat(toBin_((kax)->ni)));
(kay) = ((kay)->Cat(toBin_((kax)->nj)));
(kay) = ((kay)->Cat(toBin_((kax)->nk)));
(kay) = ((kay)->Cat(toBin_((kax)->no)));
(kay) = ((kay)->Cat(toBin_((kax)->lw)));
return kay;
}
// _fromBin
static igj* kbj(igj* kbk, Array_<uint8_t>* kbl, int64_t* kbm){
igj* kbn = nullptr;
(kbn) = (new igj());
((kbn)->igk) = (fromBin_<bro*>((kbl), (*kbm)));
((kbn)->ne) = (fromBin_<ga*>((kbl), (*kbm)));
((kbn)->nf) = (fromBin_<Array_<char16_t>*>((kbl), (*kbm)));
((kbn)->ng) = (fromBin_<fx*>((kbl), (*kbm)));
((kbn)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kbl), (*kbm)));
((kbn)->ni) = (fromBin_<Array_<char16_t>*>((kbl), (*kbm)));
((kbn)->nj) = (fromBin_<fx*>((kbl), (*kbm)));
((kbn)->nk) = (fromBin_<fy*>((kbl), (*kbm)));
((kbn)->no) = (fromBin_<bool>((kbl), (*kbm)));
((kbn)->lw) = (fromBin_<int64_t>((kbl), (*kbm)));
return kbn;
}
// _dtor
static void kbo(igm* kbp){
((kbp)->ign) = (nullptr);
((kbp)->ne) = (nullptr);
((kbp)->nf) = (nullptr);
((kbp)->ng) = (nullptr);
((kbp)->nh) = (nullptr);
((kbp)->ni) = (nullptr);
((kbp)->nj) = (nullptr);
((kbp)->nk) = (nullptr);
}
// _copy
static igm* kbq(igm* kbr){
igm* kbs = nullptr;
(kbs) = (new igm());
((kbs)->ign) = (copy_((kbr)->ign));
((kbs)->ne) = (copy_((kbr)->ne));
((kbs)->nf) = (copy_((kbr)->nf));
((kbs)->ng) = (copy_((kbr)->ng));
((kbs)->nh) = (copy_((kbr)->nh));
((kbs)->ni) = (copy_((kbr)->ni));
((kbs)->nj) = (copy_((kbr)->nj));
((kbs)->nk) = (copy_((kbr)->nk));
((kbs)->no) = ((kbr)->no);
((kbs)->lw) = ((kbr)->lw);
return as_<igm>(classTable_, (kbs), 144);
}
// _toBin
static Array_<uint8_t>* kbt(igm* kbu){
Array_<uint8_t>* kbv = nullptr;
(kbv) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->ign)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->ne)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->nf)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->ng)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->nh)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->ni)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->nj)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->nk)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->no)));
(kbv) = ((kbv)->Cat(toBin_((kbu)->lw)));
return kbv;
}
// _fromBin
static igm* kcg(igm* kch, Array_<uint8_t>* kci, int64_t* kcj){
igm* kck = nullptr;
(kck) = (new igm());
((kck)->ign) = (fromBin_<brr*>((kci), (*kcj)));
((kck)->ne) = (fromBin_<ga*>((kci), (*kcj)));
((kck)->nf) = (fromBin_<Array_<char16_t>*>((kci), (*kcj)));
((kck)->ng) = (fromBin_<fx*>((kci), (*kcj)));
((kck)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kci), (*kcj)));
((kck)->ni) = (fromBin_<Array_<char16_t>*>((kci), (*kcj)));
((kck)->nj) = (fromBin_<fx*>((kci), (*kcj)));
((kck)->nk) = (fromBin_<fy*>((kci), (*kcj)));
((kck)->no) = (fromBin_<bool>((kci), (*kcj)));
((kck)->lw) = (fromBin_<int64_t>((kci), (*kcj)));
return kck;
}
// _dtor
static void kcl(igp* kcm){
((kcm)->igq) = (nullptr);
((kcm)->ne) = (nullptr);
((kcm)->nf) = (nullptr);
((kcm)->ng) = (nullptr);
((kcm)->nh) = (nullptr);
((kcm)->ni) = (nullptr);
((kcm)->nj) = (nullptr);
((kcm)->nk) = (nullptr);
}
// _copy
static igp* kcn(igp* kco){
igp* kcp = nullptr;
(kcp) = (new igp());
((kcp)->igq) = (copy_((kco)->igq));
((kcp)->ne) = (copy_((kco)->ne));
((kcp)->nf) = (copy_((kco)->nf));
((kcp)->ng) = (copy_((kco)->ng));
((kcp)->nh) = (copy_((kco)->nh));
((kcp)->ni) = (copy_((kco)->ni));
((kcp)->nj) = (copy_((kco)->nj));
((kcp)->nk) = (copy_((kco)->nk));
((kcp)->no) = ((kco)->no);
((kcp)->lw) = ((kco)->lw);
return as_<igp>(classTable_, (kcp), 146);
}
// _toBin
static Array_<uint8_t>* kcq(igp* kcr){
Array_<uint8_t>* kcs = nullptr;
(kcs) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->igq)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->ne)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->nf)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->ng)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->nh)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->ni)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->nj)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->nk)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->no)));
(kcs) = ((kcs)->Cat(toBin_((kcr)->lw)));
return kcs;
}
// _fromBin
static igp* kdd(igp* kde, Array_<uint8_t>* kdf, int64_t* kdg){
igp* kdh = nullptr;
(kdh) = (new igp());
((kdh)->igq) = (fromBin_<un*>((kdf), (*kdg)));
((kdh)->ne) = (fromBin_<ga*>((kdf), (*kdg)));
((kdh)->nf) = (fromBin_<Array_<char16_t>*>((kdf), (*kdg)));
((kdh)->ng) = (fromBin_<fx*>((kdf), (*kdg)));
((kdh)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kdf), (*kdg)));
((kdh)->ni) = (fromBin_<Array_<char16_t>*>((kdf), (*kdg)));
((kdh)->nj) = (fromBin_<fx*>((kdf), (*kdg)));
((kdh)->nk) = (fromBin_<fy*>((kdf), (*kdg)));
((kdh)->no) = (fromBin_<bool>((kdf), (*kdg)));
((kdh)->lw) = (fromBin_<int64_t>((kdf), (*kdg)));
return kdh;
}
// _dtor
static void kdi(igs* kdj){
((kdj)->igt) = (nullptr);
((kdj)->ne) = (nullptr);
((kdj)->nf) = (nullptr);
((kdj)->ng) = (nullptr);
((kdj)->nh) = (nullptr);
((kdj)->ni) = (nullptr);
((kdj)->nj) = (nullptr);
((kdj)->nk) = (nullptr);
}
// _copy
static igs* kdk(igs* kdl){
igs* kdm = nullptr;
(kdm) = (new igs());
((kdm)->igt) = (copy_((kdl)->igt));
((kdm)->ne) = (copy_((kdl)->ne));
((kdm)->nf) = (copy_((kdl)->nf));
((kdm)->ng) = (copy_((kdl)->ng));
((kdm)->nh) = (copy_((kdl)->nh));
((kdm)->ni) = (copy_((kdl)->ni));
((kdm)->nj) = (copy_((kdl)->nj));
((kdm)->nk) = (copy_((kdl)->nk));
((kdm)->no) = ((kdl)->no);
((kdm)->lw) = ((kdl)->lw);
return as_<igs>(classTable_, (kdm), 148);
}
// _toBin
static Array_<uint8_t>* kdn(igs* kdo){
Array_<uint8_t>* kdp = nullptr;
(kdp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->igt)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->ne)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->nf)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->ng)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->nh)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->ni)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->nj)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->nk)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->no)));
(kdp) = ((kdp)->Cat(toBin_((kdo)->lw)));
return kdp;
}
// _fromBin
static igs* kea(igs* keb, Array_<uint8_t>* kec, int64_t* ked){
igs* kee = nullptr;
(kee) = (new igs());
((kee)->igt) = (fromBin_<brx*>((kec), (*ked)));
((kee)->ne) = (fromBin_<ga*>((kec), (*ked)));
((kee)->nf) = (fromBin_<Array_<char16_t>*>((kec), (*ked)));
((kee)->ng) = (fromBin_<fx*>((kec), (*ked)));
((kee)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kec), (*ked)));
((kee)->ni) = (fromBin_<Array_<char16_t>*>((kec), (*ked)));
((kee)->nj) = (fromBin_<fx*>((kec), (*ked)));
((kee)->nk) = (fromBin_<fy*>((kec), (*ked)));
((kee)->no) = (fromBin_<bool>((kec), (*ked)));
((kee)->lw) = (fromBin_<int64_t>((kec), (*ked)));
return kee;
}
// pushDummyScope
static void igv(fx* kef /*ast*/){
fx* keg = nullptr; // dummy
(keg) = (new fx());
(bqk)((keg), (0LL), (nullptr), (nullptr), (true));
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fmh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))))->nh), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u0024'))->Cat(v<int64_t>((avj), (new Array_<int64_t>(1, (0LL)))))), (keg));
(avj) = ((avj) + (1LL));
((keg)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bqm<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (keg));
((kef)->ng) = (keg);
}
// obtainBlockName
static void igw(fx* kei /*ast*/){
char16_t kej = 0; // c
(kej) = ((bqn)());
if((kej) != (u'\u0028')){
(avg) = (kej);
((kei)->nf) = ((bre)((true), (false)));
(dfu)((kei), (true));
(dfq)((u'\u0028'), (true));
}
else{
((kei)->nf) = (new Array_<char16_t>(1, u'\u0024'));
}
}
// parseDummyBlock
static buv* igy(ge** ken /*outStat*/, int64_t* keo /*outTypeId*/, int64_t kep /*typeId*/, fx* keq /*block_*/){
buv* ker = nullptr; // ast
ge* kev = nullptr; // stat
bool kfb = false; // endFlag
int64_t kfd = 0;
int64_t kfg = 0;
int64_t kfk = 0;
int64_t kfo = 0;
int64_t kft = 0;
int64_t kfx = 0;
int64_t kgc = 0;
int64_t kgg = 0;
int64_t kgk = 0;
(ker) = (new buv());
(bqk)((ker), (66052LL), ((dch)()), (nullptr), (false));
((ker)->bve) = (nullptr);
((ker)->bvh) = (new List_<ge*>());
(igv)((ker));
((ker)->nf) = (new Array_<char16_t>(1, u'\u0024'));
while(true){
(kev) = ((dgx)((keq)));
if(eqAddr_((kev), (nullptr))){
if(avi){
(*ken) = (nullptr);
(*keo) = (513LL);
break;
}
else{
continue;
}
}
(kfb) = (false);
switch(kep){
case 66049LL:
switch((kev)->lw){
case 520LL:
case 521LL:
case 513LL:
(kfb) = (true);
break;
}
break;
case 520LL:
switch((kev)->lw){
case 520LL:
case 521LL:
case 513LL:
(kfb) = (true);
break;
}
break;
case 521LL:
switch((kev)->lw){
case 520LL:
case 521LL:
(ad)((65563LL), ((dch)()), (nullptr));
continue;
break;
case 513LL:
(kfb) = (true);
break;
}
break;
case 522LL:
switch((kev)->lw){
case 522LL:
case 523LL:
case 513LL:
(kfb) = (true);
break;
}
break;
case 523LL:
switch((kev)->lw){
case 522LL:
case 523LL:
(ad)((65564LL), ((dch)()), (nullptr));
continue;
break;
case 513LL:
(kfb) = (true);
break;
}
break;
case 66051LL:
switch((kev)->lw){
case 524LL:
case 525LL:
(kfb) = (true);
break;
}
break;
case 524LL:
switch((kev)->lw){
case 524LL:
case 525LL:
case 520LL:
(kfb) = (true);
break;
}
break;
case 525LL:
switch((kev)->lw){
case 524LL:
case 525LL:
(ad)((65565LL), ((dch)()), (nullptr));
continue;
break;
case 513LL:
(kfb) = (true);
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(kfb){
(*ken) = (kev);
(*keo) = ((kev)->lw);
break;
}
uj<List_<ge*>*, ge*>(((ker)->bvh), (new Array_<int64_t>(1, (0LL))), (kev));
}
bsg<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ker;
}
// makeBlockVar
static gb* iht(ga* kgq /*pos*/){
gb* kgr = nullptr; // arg
(kgr) = (new gb());
(bqk)((kgr), (7LL), (kgq), (nullptr), (false));
((kgr)->qk) = (3LL);
((kgr)->ql) = (false);
((kgr)->qf) = (nullptr);
((kgr)->qg) = (nullptr);
return kgr;
}
// makePrimValue
static bwo* iks(ga* kgs /*pos*/, int64_t kgt /*kind*/, uint64_t kgu /*value*/){
bwo* kgv = nullptr; // expr
bvc* kgx = nullptr; // type
(kgv) = (new bwo());
(dma)((kgv), (67585LL), (kgs));
(kgx) = (new bvc());
(bqk)((kgx), (1026LL), (kgs), (nullptr), (false));
((kgx)->bvd) = (kgt);
((kgv)->pf) = (kgx);
((kgv)->bwq) = (kgu);
return kgv;
}
// parseExprOr
static gd* iol(){
gd* kgy = nullptr; // ast
int64_t khd = 0; // row
int64_t khe = 0; // col
char16_t khf = 0; // c
bza* khi = nullptr; // ast2
(kgy) = ((kgz)());
while(true){
(khd) = (ave);
(khe) = (avf);
(khf) = ((bqn)());
if((khf) == (u'\u007C')){
(khi) = (new bza());
(dma)((khi), (2050LL), ((bql)((bf), (khd), (khe))));
((khi)->bzb) = (8LL);
((khi)->bze) = (kgy);
((khi)->bzf) = ((kgz)());
(kgy) = (khi);
}
else{
(avg) = (khf);
break;
}
}
return kgy;
}
// addSpecialFunc
static fw* itb(un* khk /*class_*/, Array_<char16_t>* khl /*name*/){
fw* khm = nullptr; // ast
gb* kho = nullptr; // me_
dfx* khq = nullptr; // type
uo* khs = nullptr; // item
un* kht = nullptr; // ptr
List_<uo*>* khv = nullptr; // items
uo* khz = nullptr; // item2
(khm) = (new fw());
(buq)((khm), (256LL), ((khk)->ne));
((khm)->nf) = (khl);
((khm)->sm) = (0LL);
((khm)->sf) = (new List_<Array_<char16_t>*>());
((khm)->sg) = (new List_<gb*>());
((khm)->sh) = (nullptr);
((khm)->si) = (new List_<ge*>());
(kho) = (new gb());
(buq)((kho), (7LL), ((khk)->ne));
((kho)->qk) = (2LL);
((kho)->ql) = (false);
((kho)->qg) = (nullptr);
(khq) = (new dfx());
(buq)((khq), (66565LL), ((khk)->ne));
((khq)->nj) = (khk);
((kho)->qf) = (khq);
uj<List_<gb*>*, gb*>(((khm)->sg), (new Array_<int64_t>(1, (0LL))), (kho));
(khs) = (new uo());
((khs)->azt) = (true);
((khs)->azn) = (khm);
((khs)->azo) = (nullptr);
(kht) = (as_<un>(classTable_, ((khk)->nj), 22));
while(!eqAddr_(((kht)->nj), (nullptr))){
(kht) = (as_<un>(classTable_, ((kht)->nj), 22));
}
(khv) = ((kht)->bai);
awg<List_<uo*>*>((khv), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<uo*>*>((khv), (new Array_<int64_t>(1, (0LL)))))){
(khz) = (awk<List_<uo*>*, uo*>((khv), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((((khz)->azn)->nf), (khl)) == 0){
((khs)->azo) = (khz);
break;
}
ayu<List_<uo*>*>((khv), (new Array_<int64_t>(1, (0LL))));
}
if(!(!eqAddr_(((khs)->azo), (nullptr)))){
throw 0xE9170000U;
}
((khs)->azs) = (((khs)->azo)->azs);
uj<List_<uo*>*, uo*>(((khk)->bai), (new Array_<int64_t>(1, (0LL))), (khs));
return khm;
}
// makeMeDot
static ebk* ium(un* kic /*class_*/, gb* kid /*arg*/, Array_<char16_t>* kie /*name*/){
ebk* kif = nullptr; // ast
gd* kih = nullptr; // me_
dfx* kij = nullptr; // type
(kif) = (new ebk());
(bvy)((kif), (2059LL), ((kic)->ne));
((kif)->hgh) = (kie);
((kif)->hgu) = (nullptr);
(kih) = (new gd());
(bvy)((kih), (2062LL), ((kic)->ne));
((kih)->ni) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
((kih)->nj) = (kid);
(kij) = (new dfx());
(buq)((kij), (66565LL), ((kic)->ne));
((kij)->nj) = (kic);
((kih)->pf) = (kij);
((kif)->hcr) = (kih);
return kif;
}
// makeTypeId
static Array_<char16_t>* jpc(gc* kik /*type*/){
Array_<char16_t>* kil = nullptr; // result
bool kim = false; // first
List_<int64_t>* kin = nullptr; // items
(kil) = (new Array_<char16_t>(1, u'\u005B'));
(kim) = (true);
(kin) = ((kio)((kik)));
awg<List_<int64_t>*>((kin), (new Array_<int64_t>(1, (0LL))));
while(!(awi<List_<int64_t>*>((kin), (new Array_<int64_t>(1, (0LL)))))){
if(kim){
(kim) = (false);
}
else{
(kil) = ((kil)->Cat(new Array_<char16_t>(1, u'\u002C')));
}
(kil) = ((kil)->Cat(v<int64_t>((awk<List_<int64_t>*, int64_t>((kin), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))))));
ayu<List_<int64_t>*>((kin), (new Array_<int64_t>(1, (0LL))));
}
(kil) = ((kil)->Cat(new Array_<char16_t>(1, u'\u005D')));
return kil;
}
// parseExprAnd
static gd* kgz(){
gd* kiw = nullptr; // ast
int64_t kjb = 0; // row
int64_t kjc = 0; // col
char16_t kjd = 0; // c
bza* kjg = nullptr; // ast2
(kiw) = ((kix)());
while(true){
(kjb) = (ave);
(kjc) = (avf);
(kjd) = ((bqn)());
if((kjd) == (u'\u0026')){
(kjg) = (new bza());
(dma)((kjg), (2050LL), ((bql)((bf), (kjb), (kjc))));
((kjg)->bzb) = (9LL);
((kjg)->bze) = (kiw);
((kjg)->bzf) = ((kix)());
(kiw) = (kjg);
}
else{
(avg) = (kjd);
break;
}
}
return kiw;
}
// getTypeId
static List_<int64_t>* kio(gc* kji /*type*/){
List_<int64_t>* kjj = nullptr; // result
(kjj) = (new List_<int64_t>());
(kjk)((kji), (kjj));
return kjj;
}
// parseExprCmp
static gd* kix(){
gd* kjl = nullptr; // ast
int64_t kjq = 0; // row
int64_t kjr = 0; // col
char16_t kjs = 0; // c
char16_t kju = 0;
char16_t kjx = 0;
bza* kjz = nullptr; // ast2
char16_t kkc = 0;
bza* kke = nullptr; // ast2
eaw* kkg = nullptr; // ast2
bza* kki = nullptr; // ast2
bza* kkk = nullptr; // ast2
bza* kkm = nullptr; // ast2
char16_t kks = 0;
bza* kku = nullptr; // ast2
eaw* kkw = nullptr; // ast2
bza* kky = nullptr; // ast2
(kjl) = ((kjm)());
while(true){
(kjq) = (ave);
(kjr) = (avf);
(kjs) = ((bqn)());
switch(kjs){
case u'\u003C':
(kjs) = ((bsa)());
switch(kjs){
case u'\u003D':
(kjz) = (new bza());
(dma)((kjz), (2050LL), ((bql)((bf), (kjq), (kjr))));
((kjz)->bzb) = (12LL);
((kjz)->bze) = (kjl);
((kjz)->bzf) = ((kjm)());
(kjl) = (kjz);
break;
case u'\u003E':
(kjs) = ((bsa)());
switch(kjs){
case u'\u0026':
(kke) = (new bza());
(dma)((kke), (2050LL), ((bql)((bf), (kjq), (kjr))));
((kke)->bzb) = (17LL);
((kke)->bze) = (kjl);
((kke)->bzf) = ((kjm)());
(kjl) = (kke);
break;
case u'\u0024':
(kkg) = (new eaw());
(dma)((kkg), (2054LL), ((bql)((bf), (kjq), (kjr))));
((kkg)->gvh) = (2LL);
((kkg)->guz) = (kjl);
((kkg)->gvc) = ((dgq)());
(kjl) = (kkg);
break;
default:
(avg) = (kjs);
(kki) = (new bza());
(dma)((kki), (2050LL), ((bql)((bf), (kjq), (kjr))));
((kki)->bzb) = (15LL);
((kki)->bze) = (kjl);
((kki)->bzf) = ((kjm)());
(kjl) = (kki);
break;
}
break;
default:
(avg) = (kjs);
(kkk) = (new bza());
(dma)((kkk), (2050LL), ((bql)((bf), (kjq), (kjr))));
((kkk)->bzb) = (10LL);
((kkk)->bze) = (kjl);
((kkk)->bzf) = ((kjm)());
(kjl) = (kkk);
break;
}
break;
case u'\u003E':
(kkm) = (new bza());
(dma)((kkm), (2050LL), ((bql)((bf), (kjq), (kjr))));
(kjs) = ((bsa)());
if((kjs) == (u'\u003D')){
((kkm)->bzb) = (13LL);
}
else{
(avg) = (kjs);
((kkm)->bzb) = (11LL);
}
((kkm)->bze) = (kjl);
((kkm)->bzf) = ((kjm)());
(kjl) = (kkm);
break;
case u'\u003D':
(kjs) = ((bsa)());
switch(kjs){
case u'\u0026':
(kku) = (new bza());
(dma)((kku), (2050LL), ((bql)((bf), (kjq), (kjr))));
((kku)->bzb) = (16LL);
((kku)->bze) = (kjl);
((kku)->bzf) = ((kjm)());
(kjl) = (kku);
break;
case u'\u0024':
(kkw) = (new eaw());
(dma)((kkw), (2054LL), ((bql)((bf), (kjq), (kjr))));
((kkw)->gvh) = (1LL);
((kkw)->guz) = (kjl);
((kkw)->gvc) = ((dgq)());
(kjl) = (kkw);
break;
default:
(avg) = (kjs);
(kky) = (new bza());
(dma)((kky), (2050LL), ((bql)((bf), (kjq), (kjr))));
((kky)->bzb) = (14LL);
((kky)->bze) = (kjl);
((kky)->bzf) = ((kjm)());
(kjl) = (kky);
break;
}
break;
default:
(avg) = (kjs);
goto kjo;
break;
}
}
kjo:;
return kjl;
}
// makeTypeIdRecursion
static void kjk(gc* kla /*type*/, List_<int64_t>* klb /*output*/){
int64_t kln = 0;
int64_t kmc = 0;
if((bdi)((kla))){
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (0LL));
return;
}
if((gev)((kla))){
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (1LL));
return;
}
if((equ)((kla))){
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (2LL));
return;
}
if((gfl)((kla))){
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (3LL));
return;
}
if(((kla)->lw) == (1025LL)){
switch((as_<cbl>(classTable_, (kla), 78))->cbm){
case 1LL:
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (4LL));
break;
case 2LL:
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (5LL));
break;
case 4LL:
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (6LL));
break;
case 8LL:
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (7LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return;
}
if(((kla)->lw) == (66562LL)){
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (8LL));
return;
}
if((cma)((kla))){
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (9LL));
return;
}
if(((kla)->lw) == (66561LL)){
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (129LL));
(kjk)(((as_<cbh>(classTable_, (kla), 76))->cbj), (klb));
return;
}
if(((kla)->lw) == (66563LL)){
switch((as_<ccm>(classTable_, (kla), 84))->ccp){
case 0LL:
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (130LL));
break;
case 1LL:
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (131LL));
break;
case 2LL:
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (132LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(kjk)(((as_<ccm>(classTable_, (kla), 84))->ccr), (klb));
return;
}
if(((kla)->lw) == (66564LL)){
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (133LL));
(kjk)(((as_<ccx>(classTable_, (kla), 86))->ccy), (klb));
(kjk)(((as_<ccx>(classTable_, (kla), 86))->ccz), (klb));
return;
}
if(!((efs)((kla)))){
throw 0xE9170000U;
}
uj<List_<int64_t>*, int64_t>((klb), (new Array_<int64_t>(1, (0LL))), (134LL));
}
// parseExprCat
static gd* kjm(){
gd* kmj = nullptr; // ast
int64_t kmo = 0; // row
int64_t kmp = 0; // col
char16_t kmq = 0; // c
bza* kmt = nullptr; // ast2
(kmj) = ((kmk)());
while(true){
(kmo) = (ave);
(kmp) = (avf);
(kmq) = ((bqn)());
if((kmq) == (u'\u007E')){
(kmt) = (new bza());
(dma)((kmt), (2050LL), ((bql)((bf), (kmo), (kmp))));
((kmt)->bzb) = (18LL);
((kmt)->bze) = (kmj);
((kmt)->bzf) = ((kmk)());
(kmj) = (kmt);
}
else{
(avg) = (kmq);
break;
}
}
return kmj;
}
// parseExprAdd
static gd* kmk(){
gd* kmv = nullptr; // ast
int64_t kna = 0; // row
int64_t knb = 0; // col
char16_t knc = 0; // c
char16_t kne = 0;
bza* kng = nullptr; // ast2
bza* kni = nullptr; // ast2
(kmv) = ((kmw)());
while(true){
(kna) = (ave);
(knb) = (avf);
(knc) = ((bqn)());
switch(knc){
case u'\u002B':
(kng) = (new bza());
(dma)((kng), (2050LL), ((bql)((bf), (kna), (knb))));
((kng)->bzb) = (19LL);
((kng)->bze) = (kmv);
((kng)->bzf) = ((kmw)());
(kmv) = (kng);
break;
case u'\u002D':
(kni) = (new bza());
(dma)((kni), (2050LL), ((bql)((bf), (kna), (knb))));
((kni)->bzb) = (20LL);
((kni)->bze) = (kmv);
((kni)->bzf) = ((kmw)());
(kmv) = (kni);
break;
default:
(avg) = (knc);
goto kmy;
break;
}
}
kmy:;
return kmv;
}
// parseExprMul
static gd* kmw(){
gd* knk = nullptr; // ast
int64_t knp = 0; // row
int64_t knq = 0; // col
char16_t knr = 0; // c
char16_t knt = 0;
bza* knv = nullptr; // ast2
bza* knx = nullptr; // ast2
bza* knz = nullptr; // ast2
(knk) = ((knl)());
while(true){
(knp) = (ave);
(knq) = (avf);
(knr) = ((bqn)());
switch(knr){
case u'\u002A':
(knv) = (new bza());
(dma)((knv), (2050LL), ((bql)((bf), (knp), (knq))));
((knv)->bzb) = (21LL);
((knv)->bze) = (knk);
((knv)->bzf) = ((knl)());
(knk) = (knv);
break;
case u'\u002F':
(knx) = (new bza());
(dma)((knx), (2050LL), ((bql)((bf), (knp), (knq))));
((knx)->bzb) = (22LL);
((knx)->bze) = (knk);
((knx)->bzf) = ((knl)());
(knk) = (knx);
break;
case u'\u0025':
(knz) = (new bza());
(dma)((knz), (2050LL), ((bql)((bf), (knp), (knq))));
((knz)->bzb) = (23LL);
((knz)->bze) = (knk);
((knz)->bzf) = ((knl)());
(knk) = (knz);
break;
default:
(avg) = (knr);
goto knn;
break;
}
}
knn:;
return knk;
}
// parseExprPlus
static gd* knl(){
gd* kob = nullptr; // ast
int64_t kof = 0; // row
int64_t kog = 0; // col
char16_t koh = 0; // c
char16_t kol = 0;
eat* kon = nullptr; // ast2
eai* koy = nullptr; // ast2
eaq* kpa = nullptr; // ast2
eai* kpc = nullptr; // ast2
char16_t kpe = 0;
(kob) = ((koc)());
if(!eqAddr_((kob), (nullptr))){
return kob;
}
(kof) = (ave);
(kog) = (avf);
(koh) = ((bqn)());
if((koh) == (u'\u0023')){
(koh) = ((bsa)());
switch(koh){
case u'\u005B':
(kon) = (new eat());
(dma)((kon), (2053LL), ((bql)((bf), (kof), (kog))));
((kon)->gtc) = (new List_<gd*>());
while(true){
uj<List_<gd*>*, gd*>(((kon)->gtc), (new Array_<int64_t>(1, (0LL))), ((dlv)()));
(koh) = ((bqn)());
if((koh) == (u'\u0000')){
break;
}
if((koh) == (u'\u005D')){
break;
}
if((koh) != (u'\u002C')){
(dfl)((u'\u002C'), (koh));
return nullptr;
}
}
((kon)->gtl) = ((dgq)());
(kob) = (kon);
break;
case u'\u0023':
(koy) = (new eai());
(dma)((koy), (2049LL), ((bql)((bf), (kof), (kog))));
((koy)->ges) = (3LL);
((koy)->gem) = ((knl)());
(kob) = (koy);
break;
default:
(avg) = (koh);
(kpa) = (new eaq());
(dma)((kpa), (2052LL), ((bql)((bf), (kof), (kog))));
((kpa)->grr) = ((dgq)());
(kob) = (kpa);
break;
}
}
else{
(kpc) = (new eai());
(dma)((kpc), (2049LL), ((bql)((bf), (kof), (kog))));
switch(koh){
case u'\u002B':
((kpc)->ges) = (0LL);
break;
case u'\u002D':
((kpc)->ges) = (1LL);
break;
case u'\u0021':
((kpc)->ges) = (2LL);
break;
case u'\u005E':
((kpc)->ges) = (4LL);
break;
default:
(ad)((65569LL), ((kpc)->ne), (new Array_<Array_<char16_t>*>(1, ((dci)((koh))))));
(brz)((koh));
return nullptr;
break;
}
((kpc)->gem) = ((knl)());
(kob) = (kpc);
}
return kob;
}
// parseExprPow
static gd* koc(){
gd* kpk = nullptr; // ast
int64_t kpo = 0; // row
int64_t kpp = 0; // col
char16_t kpq = 0; // c
bza* kpt = nullptr; // ast2
(kpk) = ((kpl)());
if(eqAddr_((kpk), (nullptr))){
return kpk;
}
(kpo) = (ave);
(kpp) = (avf);
(kpq) = ((bqn)());
if((kpq) == (u'\u005E')){
(kpt) = (new bza());
(dma)((kpt), (2050LL), ((bql)((bf), (kpo), (kpp))));
((kpt)->bzb) = (24LL);
((kpt)->bze) = (kpk);
((kpt)->bzf) = ((knl)());
(kpk) = (kpt);
}
else{
(avg) = (kpq);
}
return kpk;
}
// parseExprCall
static gd* kpl(){
gd* kpv = nullptr; // ast
int64_t kqc = 0; // row
int64_t kqd = 0; // col
char16_t kqe = 0; // c
char16_t kqg = 0;
bvw* kqi = nullptr; // ast2
bvx* kqo = nullptr; // arg
gd* kqw = nullptr; // ast3
ebh* krf = nullptr; // ast2
ebk* krh = nullptr; // ast2
char16_t krk = 0;
eaz* krm = nullptr; // ast2
ebc* kro = nullptr; // ast2
eaw* krq = nullptr; // ast2
(kpv) = ((kpw)());
if(eqAddr_((kpv), (nullptr))){
return kpv;
}
while(true){
(kqc) = (ave);
(kqd) = (avf);
(kqe) = ((bqn)());
switch(kqe){
case u'\u0028':
if(!(!eqAddr_((kpv), (nullptr)))){
throw 0xE9170000U;
}
(kqi) = (new bvw());
(dma)((kqi), (2057LL), ((bql)((bf), (kqc), (kqd))));
((kqi)->bwc) = (kpv);
((kqi)->bvz) = (new List_<bvx*>());
(kqe) = ((bqn)());
if((kqe) != (u'\u0029')){
(avg) = (kqe);
while(true){
(kqo) = (new bvx());
((kqo)->bxi) = (false);
(kqe) = ((bqn)());
if((kqe) == (u'\u0026')){
((kqo)->bxh) = (true);
(kqe) = ((bqn)());
if(((kqe) == (u'\u002C')) || ((kqe) == (u'\u0029'))){
((kqo)->bxi) = (true);
}
}
else{
((kqo)->bxh) = (false);
}
(avg) = (kqe);
if((kqo)->bxi){
(kqw) = (new gd());
(dma)((kqw), (2062LL), ((kqi)->ne));
((kqw)->ni) = (new Array_<char16_t>(1, u'\u0024'));
((kqw)->nj) = ((iht)(((kqw)->ne)));
((kqo)->bxl) = (kqw);
}
else{
((kqo)->bxl) = ((dlv)());
}
uj<List_<bvx*>*, bvx*>(((kqi)->bvz), (new Array_<int64_t>(1, (0LL))), (kqo));
(kqe) = ((bqn)());
if((kqe) == (u'\u0000')){
break;
}
if((kqe) == (u'\u0029')){
break;
}
if((kqe) != (u'\u002C')){
(dfl)((u'\u002C'), (kqe));
return nullptr;
}
}
}
(kpv) = (kqi);
break;
case u'\u005B':
if(!(!eqAddr_((kpv), (nullptr)))){
throw 0xE9170000U;
}
(krf) = (new ebh());
(dma)((krf), (2058LL), ((bql)((bf), (kqc), (kqd))));
((krf)->hej) = (kpv);
((krf)->heo) = ((dlv)());
(dfq)((u'\u005D'), (true));
(kpv) = (krf);
break;
case u'\u002E':
if(!(!eqAddr_((kpv), (nullptr)))){
throw 0xE9170000U;
}
(krh) = (new ebk());
(dma)((krh), (2059LL), ((bql)((bf), (kqc), (kqd))));
((krh)->hcr) = (kpv);
((krh)->hgh) = ((bre)((true), (false)));
((krh)->hgu) = (nullptr);
(kpv) = (krh);
break;
case u'\u0024':
if(!(!eqAddr_((kpv), (nullptr)))){
throw 0xE9170000U;
}
(kqe) = ((bsa)());
switch(kqe){
case u'\u003E':
(krm) = (new eaz());
(dma)((krm), (2055LL), ((bql)((bf), (kqc), (kqd))));
((krm)->gzg) = (kpv);
((krm)->gzm) = ((dgq)());
(kpv) = (krm);
break;
case u'\u003C':
(kro) = (new ebc());
(dma)((kro), (2056LL), ((bql)((bf), (kqc), (kqd))));
((kro)->har) = (kpv);
((kro)->haw) = ((dgq)());
((kro)->hax) = ((iks)(((kro)->ne), (0LL), (0x0000000000000000ULL)));
(kpv) = (kro);
break;
default:
(avg) = (kqe);
(krq) = (new eaw());
(dma)((krq), (2054LL), ((bql)((bf), (kqc), (kqd))));
((krq)->gvh) = (0LL);
((krq)->guz) = (kpv);
((krq)->gvc) = ((dgq)());
(kpv) = (krq);
break;
}
break;
default:
(avg) = (kqe);
goto kqa;
break;
}
}
kqa:;
return kpv;
}
// parseExprValue
static gd* kpw(){
int64_t krs = 0; // row
int64_t krt = 0; // col
char16_t kru = 0; // c
ga* krv = nullptr; // pos
char16_t krx = 0;
Array_<char16_t>* krz = nullptr; // buf
int64_t ksa = 0; // len
bool ksb = false; // esc
bza* ksl = nullptr; // cat
bza* ksn = nullptr; // cat2
bvw* ksq = nullptr; // call
ebk* kss = nullptr; // dot
char16_t ktf = 0; // buf
bool ktg = false; // set
bool kth = false; // esc
gd* kua = nullptr; // ast
eca* kue = nullptr; // ast
gd* kuk = nullptr; // expr
Array_<char16_t>* kuu = nullptr; // id
ebu* kuv = nullptr; // expr
kuy* kux = nullptr; // type
Array_<char16_t>* kvf = nullptr; // id
Array_<char16_t>* kvh = nullptr;
bwp* kvn = nullptr; // ast
efx* kvp = nullptr; // type
gd* kvt = nullptr; // ast
(krs) = (ave);
(krt) = (avf);
(kru) = ((bqn)());
(krv) = ((bql)((bf), (krs), (krt)));
switch(kru){
case u'\u0022':
(krz) = (newArray_<char16_t, Array_<char16_t>*>(1, (1024LL)));
(ksa) = (0LL);
(ksb) = (false);
while(true){
(kru) = ((fxs)());
if((kru) == (u'\u0000')){
(ad)((65573LL), (krv), (nullptr));
return nullptr;
}
if(ksb){
if((kru) == (u'\u007B')){
(ksl) = (new bza());
(dma)((ksl), (2050LL), (krv));
((ksl)->bzb) = (18LL);
(ksn) = (new bza());
(dma)((ksn), (2050LL), (krv));
((ksn)->bzb) = (18LL);
((ksn)->bze) = ((kso)((krv), (auy<Array_<char16_t>*>((krz), (new Array_<int64_t>(1, (0LL))), (0LL), (ksa)))));
(ksq) = (new bvw());
(dma)((ksq), (2057LL), (krv));
((ksq)->bvz) = (new List_<bvx*>());
(kss) = (new ebk());
(dma)((kss), (2059LL), (krv));
((kss)->hcr) = ((dlv)());
((kss)->hgh) = (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072'));
((kss)->hgu) = (nullptr);
((ksq)->bwc) = (kss);
((ksn)->bzf) = (ksq);
(dfq)((u'\u007D'), (false));
((ksl)->bze) = (ksn);
(avg) = (u'\u0022');
((ksl)->bzf) = ((kpw)());
return ksl;
}
if((ksa) == (1024LL)){
(ad)((65570LL), (krv), (new Array_<Array_<char16_t>*>(1, (krz))));
(brz)((kru));
return nullptr;
}
((krz)->At(ksa)) = ((ksv)((kru)));
(ksa) = ((ksa) + (1LL));
(ksb) = (false);
continue;
}
if((kru) == (u'\u0022')){
break;
}
if((kru) == (u'\u005C')){
(ksb) = (true);
continue;
}
if((ksa) == (1024LL)){
(ad)((65570LL), (krv), (new Array_<Array_<char16_t>*>(1, (krz))));
(brz)((kru));
return nullptr;
}
((krz)->At(ksa)) = (kru);
(ksa) = ((ksa) + (1LL));
}
return (kso)((krv), (auy<Array_<char16_t>*>((krz), (new Array_<int64_t>(1, (0LL))), (0LL), (ksa))));
break;
case u'\u0027':
(ktf) = (u'\u0000');
(ktg) = (false);
(kth) = (false);
while(true){
(kru) = ((fxs)());
if((kru) == (u'\u0000')){
(ad)((65573LL), (krv), (nullptr));
return nullptr;
}
if(kth){
if(ktg){
(ad)((65574LL), (krv), (new Array_<Array_<char16_t>*>(1, ((dci)((ktf))))));
(brz)((kru));
return nullptr;
}
(ktf) = ((ksv)((kru)));
(ktg) = (true);
(kth) = (false);
continue;
}
if((kru) == (u'\u0027')){
break;
}
if((kru) == (u'\u005C')){
(kth) = (true);
continue;
}
if(ktg){
(ad)((65574LL), (krv), (new Array_<Array_<char16_t>*>(1, ((dci)((ktf))))));
(brz)((kru));
return nullptr;
}
(ktf) = (kru);
(ktg) = (true);
}
if(!(ktg)){
(ad)((65575LL), (krv), (nullptr));
(brz)((kru));
return nullptr;
}
return (iks)((krv), (2LL), (static_cast<uint64_t>(ktf)));
break;
case u'\u0028':
(kua) = ((dlv)());
(kru) = ((bqn)());
if((kru) != (u'\u0029')){
(ad)((65576LL), (krv), (nullptr));
(brz)((kru));
return nullptr;
}
return kua;
break;
case u'\u005B':
(kue) = (new eca());
(dma)((kue), (2060LL), (krv));
((kue)->hda) = (new List_<gd*>());
(kru) = ((bqn)());
if((kru) != (u'\u005D')){
(avg) = (kru);
while(true){
(kuk) = ((dlv)());
if(!eqAddr_((kuk), (nullptr))){
uj<List_<gd*>*, gd*>(((kue)->hda), (new Array_<int64_t>(1, (0LL))), (kuk));
}
(kru) = ((bqn)());
if((kru) == (u'\u0000')){
break;
}
if((kru) == (u'\u005D')){
break;
}
if((kru) != (u'\u002C')){
(dfl)((u'\u002C'), (kru));
return nullptr;
}
}
}
return kue;
break;
case u'\u0025':
(kuu) = ((bre)((false), (false)));
(kuv) = (new ebu());
(dma)((kuv), (67587LL), (krv));
(kux) = (new kuy());
(bqk)((kux), (1028LL), (krv), (nullptr), (false));
((kuv)->pf) = (kux);
((kuv)->gis) = (kuu);
return kuv;
break;
default:
if(((u'\u0030') <= (kru)) && ((kru) <= (u'\u0039'))){
return (kvc)((krs), (krt), (kru));
}
if(((((((u'\u0061') <= (kru)) && ((kru) <= (u'\u007A'))) || (((u'\u0041') <= (kru)) && ((kru) <= (u'\u005A')))) || ((kru) == (u'\u005F'))) || ((kru) == (u'\u0040'))) || ((kru) == (u'\u005C'))){
(avg) = (kru);
(kvf) = ((bre)((true), (true)));
kvh = kvf;
if(cmp_(kvh, (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065'))) == 0){
return (iks)((krv), (3LL), (0x0000000000000000ULL));
}
else if(cmp_(kvh, (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))) == 0){
return (iks)((krv), (3LL), (0x0000000000000001ULL));
}
else if(cmp_(kvh, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066'))) == 0){
return (kvl)((krv), (std::numeric_limits<double>::infinity()));
}
else if(cmp_(kvh, (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C'))) == 0){
(kvn) = (new bwp());
(dma)((kvn), (67584LL), (krv));
(kvp) = (new efx());
(bqk)((kvp), (1027LL), (krv), (nullptr), (false));
((kvn)->pf) = (kvp);
return kvn;
}
else if(cmp_(kvh, (new Array_<char16_t>(3, u'\u0064', u'\u0062', u'\u0067'))) == 0){
return (iks)((krv), (3LL), ((ct) ? (0x0000000000000000ULL) : (0x0000000000000001ULL)));
}
else if(cmp_(kvh, (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0076'))) == 0){
return (iks)((krv), (0LL), (static_cast<uint64_t>(ec)));
}
else{(kvt) = (new gd());
(dma)((kvt), (2062LL), (krv));
(dfp)((kvt), (kvf));
return kvt;
}
}
break;
}
(avg) = (kru);
return nullptr;
}
// makeStrValue
static ebr* kso(ga* kvu /*pos*/, Array_<char16_t>* kvv /*value*/){
ebr* kvw = nullptr; // expr
cbh* kvy = nullptr; // type
bvc* kwa = nullptr; // type2
(kvw) = (new ebr());
(dma)((kvw), (67586LL), (kvu));
(kvy) = (new cbh());
(bqk)((kvy), (66561LL), (kvu), (nullptr), (false));
(kwa) = (new bvc());
(bqk)((kwa), (1026LL), (kvu), (nullptr), (false));
((kwa)->bvd) = (2LL);
((kvy)->cbj) = (kwa);
((kvw)->pf) = (kvy);
((kvw)->gkg) = (kvv);
return kvw;
}
// escChar
static char16_t ksv(char16_t kwb /*c*/){
char16_t kwd = 0;
Array_<char16_t>* kwj = nullptr; // buf
int64_t kwn = 0;
bool kwr = false;
int64_t kwo = 0;
switch(kwb){
case u'\u0022':
case u'\u0027':
case u'\u005C':
return kwb;
break;
case u'\u0030':
return u'\u0000';
break;
case u'\u006E':
return u'\u000A';
break;
case u'\u0074':
return u'\u0009';
break;
case u'\u0075':
(kwj) = (newArray_<char16_t, Array_<char16_t>*>(1, (6LL)));
((kwj)->At(0LL)) = (u'\u0030');
((kwj)->At(1LL)) = (u'\u0078');
for(kwn = (0LL), kwo = (3LL); kwn <= kwo; kwn += (1LL)){
(kwb) = ((fxs)());
if(!((((u'\u0030') <= (kwb)) && ((kwb) <= (u'\u0039'))) || (((u'\u0041') <= (kwb)) && ((kwb) <= (u'\u0046'))))){
(ad)((65572LL), ((dch)()), (nullptr));
return u'\u0075';
}
((kwj)->At((2LL) + (kwn))) = (kwb);
}
return static_cast<char16_t>((eq)((kwj), (&kwr)));
break;
default:
(ad)((65571LL), ((dch)()), (new Array_<Array_<char16_t>*>(1, ((dci)((kwb))))));
return kwb;
break;
}
}
// _dtor
static void kwt(kuy* kwu){
((kwu)->ne) = (nullptr);
((kwu)->nf) = (nullptr);
((kwu)->ng) = (nullptr);
((kwu)->nh) = (nullptr);
((kwu)->ni) = (nullptr);
((kwu)->nj) = (nullptr);
((kwu)->nk) = (nullptr);
}
// _copy
static kuy* kwv(kuy* kww){
kuy* kwx = nullptr;
(kwx) = (new kuy());
((kwx)->ne) = (copy_((kww)->ne));
((kwx)->nf) = (copy_((kww)->nf));
((kwx)->ng) = (copy_((kww)->ng));
((kwx)->nh) = (copy_((kww)->nh));
((kwx)->ni) = (copy_((kww)->ni));
((kwx)->nj) = (copy_((kww)->nj));
((kwx)->nk) = (copy_((kww)->nk));
((kwx)->no) = ((kww)->no);
((kwx)->lw) = ((kww)->lw);
return as_<kuy>(classTable_, (kwx), 150);
}
// _toBin
static Array_<uint8_t>* kwy(kuy* kwz){
Array_<uint8_t>* kxa = nullptr;
(kxa) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kxa) = ((kxa)->Cat(toBin_((kwz)->ne)));
(kxa) = ((kxa)->Cat(toBin_((kwz)->nf)));
(kxa) = ((kxa)->Cat(toBin_((kwz)->ng)));
(kxa) = ((kxa)->Cat(toBin_((kwz)->nh)));
(kxa) = ((kxa)->Cat(toBin_((kwz)->ni)));
(kxa) = ((kxa)->Cat(toBin_((kwz)->nj)));
(kxa) = ((kxa)->Cat(toBin_((kwz)->nk)));
(kxa) = ((kxa)->Cat(toBin_((kwz)->no)));
(kxa) = ((kxa)->Cat(toBin_((kwz)->lw)));
return kxa;
}
// _fromBin
static kuy* kxk(kuy* kxl, Array_<uint8_t>* kxm, int64_t* kxn){
kuy* kxo = nullptr;
(kxo) = (new kuy());
((kxo)->ne) = (fromBin_<ga*>((kxm), (*kxn)));
((kxo)->nf) = (fromBin_<Array_<char16_t>*>((kxm), (*kxn)));
((kxo)->ng) = (fromBin_<fx*>((kxm), (*kxn)));
((kxo)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kxm), (*kxn)));
((kxo)->ni) = (fromBin_<Array_<char16_t>*>((kxm), (*kxn)));
((kxo)->nj) = (fromBin_<fx*>((kxm), (*kxn)));
((kxo)->nk) = (fromBin_<fy*>((kxm), (*kxn)));
((kxo)->no) = (fromBin_<bool>((kxm), (*kxn)));
((kxo)->lw) = (fromBin_<int64_t>((kxm), (*kxn)));
return kxo;
}
// parseExprNumber
static gd* kvc(int64_t kxp /*row*/, int64_t kxq /*col*/, char16_t kxr /*c*/){
ga* kxs = nullptr; // pos
Array_<char16_t>* kxt = nullptr; // buf
int64_t kxu = 0; // len
int64_t kxv = 0; // base
bool kxw = false; // changeBase
bool kxx = false; // floatType
int64_t kxy = 0; // byteSize
char16_t kyd = 0;
double kzp = 0.0; // value
bool kzr = false; // success
ebx* kzu = nullptr; // ast2
bwp* kzv = nullptr; // ast
char16_t laa = 0;
uint64_t lak = 0; // value
bool lam = false; // success
bwo* las = nullptr; // ast2
bvc* lav = nullptr; // type
cbl* lba = nullptr; // type
(kxs) = ((bql)((bf), (kxp), (kxq)));
(kxt) = (newArray_<char16_t, Array_<char16_t>*>(1, (1024LL)));
(kxu) = (0LL);
(kxv) = (10LL);
(kxw) = (false);
(kxx) = (false);
(kxy) = (0LL);
while(true){
kyd = kxr;
if(kyd == (u'\u0078')){
if((kxw) || (kxx)){
(ad)((65577LL), (kxs), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(1, u'\u0078')))));
(brz)((kxr));
return nullptr;
}
if(((kxu) != (1LL)) || (((kxt)->At(0LL)) != (u'\u0030'))){
(ad)((65579LL), (kxs), (nullptr));
(brz)((kxr));
return nullptr;
}
(kxu) = (0LL);
(kxv) = (16LL);
(kxw) = (true);
}
else if(kyd == (u'\u002E')){
if((kxw) || (kxx)){
(ad)((65577LL), (kxs), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(1, u'\u002E')))));
(brz)((kxr));
return nullptr;
}
if((kxu) == (1024LL)){
(ad)((65578LL), (kxs), (new Array_<Array_<char16_t>*>(1, (auy<Array_<char16_t>*>((kxt), (new Array_<int64_t>(1, (0LL))), (0LL), (kxu))))));
(brz)((kxr));
return nullptr;
}
((kxt)->At(kxu)) = (kxr);
(kxu) = ((kxu) + (1LL));
(kxx) = (true);
}
else if((u'\u0030') <= kyd && kyd <= (u'\u0039') || (u'\u0041') <= kyd && kyd <= (u'\u0046')){
if((kxu) == (1024LL)){
(ad)((65578LL), (kxs), (new Array_<Array_<char16_t>*>(1, (auy<Array_<char16_t>*>((kxt), (new Array_<int64_t>(1, (0LL))), (0LL), (kxu))))));
(brz)((kxr));
return nullptr;
}
((kxt)->At(kxu)) = (kxr);
(kxu) = ((kxu) + (1LL));
}
else{(avg) = (kxr);
break;
}
(kxr) = ((bsa)());
}
if(((kxu) == (0LL)) || (((kxt)->At((kxu) - (1LL))) == (u'\u002E'))){
(ad)((65577LL), (kxs), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(1, u'\u002E')))));
(brz)(((bsa)()));
return nullptr;
}
if(kxx){
(kxr) = ((bsa)());
if((kxr) == (u'\u0065')){
if((kxu) == (1024LL)){
(ad)((65578LL), (kxs), (new Array_<Array_<char16_t>*>(1, (auy<Array_<char16_t>*>((kxt), (new Array_<int64_t>(1, (0LL))), (0LL), (kxu))))));
(brz)((kxr));
return nullptr;
}
((kxt)->At(kxu)) = (kxr);
(kxu) = ((kxu) + (1LL));
(kxr) = ((bsa)());
if(((kxr) != (u'\u002B')) && ((kxr) != (u'\u002D'))){
(ad)((65580LL), (kxs), (nullptr));
(brz)((kxr));
return nullptr;
}
if((kxu) == (1024LL)){
(ad)((65578LL), (kxs), (new Array_<Array_<char16_t>*>(1, (auy<Array_<char16_t>*>((kxt), (new Array_<int64_t>(1, (0LL))), (0LL), (kxu))))));
(brz)((kxr));
return nullptr;
}
((kxt)->At(kxu)) = (kxr);
(kxu) = ((kxu) + (1LL));
(kxr) = ((bsa)());
if(!(((u'\u0030') <= (kxr)) && ((kxr) <= (u'\u0039')))){
(ad)((65580LL), (kxs), (nullptr));
(brz)((kxr));
return nullptr;
}
do{
if((kxu) == (1024LL)){
(ad)((65578LL), (kxs), (new Array_<Array_<char16_t>*>(1, (auy<Array_<char16_t>*>((kxt), (new Array_<int64_t>(1, (0LL))), (0LL), (kxu))))));
(brz)((kxr));
return nullptr;
}
((kxt)->At(kxu)) = (kxr);
(kxu) = ((kxu) + (1LL));
(kxr) = ((bsa)());
}while(((u'\u0030') <= (kxr)) && ((kxr) <= (u'\u0039')));
}
(avg) = (kxr);
(kzp) = ((kzq)((auy<Array_<char16_t>*>((kxt), (new Array_<int64_t>(1, (0LL))), (0LL), (kxu))), (&kzr)));
if(!(kzr)){
(ad)((65581LL), (kxs), (new Array_<Array_<char16_t>*>(1, (auy<Array_<char16_t>*>((kxt), (new Array_<int64_t>(1, (0LL))), (0LL), (kxu))))));
(brz)(((bsa)()));
return nullptr;
}
(kzu) = (new ebx());
(dma)((kzu), (67588LL), (kxs));
((kzu)->gfi) = (kzp);
(kzv) = (kzu);
}
else{
(kxr) = ((bsa)());
if((kxr) == (u'\u0062')){
(kxr) = ((bsa)());
switch(kxr){
case u'\u0038':
(kxy) = (1LL);
break;
case u'\u0031':
(dfq)((u'\u0036'), (false));
(kxy) = (2LL);
break;
case u'\u0033':
(dfq)((u'\u0032'), (false));
(kxy) = (4LL);
break;
case u'\u0036':
(dfq)((u'\u0034'), (false));
(kxy) = (8LL);
break;
default:
(ad)((65582LL), (kxs), (new Array_<Array_<char16_t>*>(1, (auy<Array_<char16_t>*>((kxt), (new Array_<int64_t>(1, (0LL))), (0LL), (kxu))))));
(brz)((kxr));
break;
}
}
else{
(avg) = (kxr);
}
if((kxv) == (10LL)){
(lak) = ((lal)((auy<Array_<char16_t>*>((kxt), (new Array_<int64_t>(1, (0LL))), (0LL), (kxu))), (&lam)));
}
else{
if(!((kxv) == (16LL))){
throw 0xE9170000U;
}
(lak) = ((lal)(((new Array_<char16_t>(2, u'\u0030', u'\u0078'))->Cat(auy<Array_<char16_t>*>((kxt), (new Array_<int64_t>(1, (0LL))), (0LL), (kxu)))), (&lam)));
}
if(!(lam)){
(ad)((65583LL), (kxs), (new Array_<Array_<char16_t>*>(1, (auy<Array_<char16_t>*>((kxt), (new Array_<int64_t>(1, (0LL))), (0LL), (kxu))))));
(brz)(((bsa)()));
return nullptr;
}
if((((((kxy) == (1LL)) && ((lak) > (0x00000000000000FFULL))) || (((kxy) == (2LL)) && ((lak) > (0x000000000000FFFFULL)))) || (((kxy) == (4LL)) && ((lak) > (0x00000000FFFFFFFFULL)))) || (((kxy) == (0LL)) && ((lak) > (0x7FFFFFFFFFFFFFFFULL)))){
(ad)((65583LL), (kxs), (new Array_<Array_<char16_t>*>(1, (auy<Array_<char16_t>*>((kxt), (new Array_<int64_t>(1, (0LL))), (0LL), (kxu))))));
(brz)(((bsa)()));
return nullptr;
}
(las) = (new bwo());
(dma)((las), (67585LL), (kxs));
((las)->bwq) = (lak);
(kzv) = (las);
}
if((kxy) == (0LL)){
(lav) = (new bvc());
(bqk)((lav), (1026LL), (kxs), (nullptr), (false));
if(kxx){
((lav)->bvd) = (1LL);
}
else{
((lav)->bvd) = (0LL);
}
((kzv)->pf) = (lav);
}
else{
(lba) = (new cbl());
(bqk)((lba), (1025LL), (kxs), (nullptr), (false));
((lba)->cbm) = (kxy);
((kzv)->pf) = (lba);
}
return kzv;
}
// makeFloatValue
static ebx* kvl(ga* lbb /*pos*/, double lbc /*value*/){
ebx* lbd = nullptr; // expr
bvc* lbf = nullptr; // type
(lbd) = (new ebx());
(dma)((lbd), (67588LL), (lbb));
(lbf) = (new bvc());
(bqk)((lbf), (1026LL), (lbb), (nullptr), (false));
((lbf)->bvd) = (1LL);
((lbd)->pf) = (lbf);
((lbd)->gfi) = (lbc);
return lbd;
}
// _toFloat
static double kzq(Array_<char16_t>* lbg /*me_*/, bool* lbh /*success*/){
std::u16string s_ = lbg->B;
const std::string& t_ = utf16ToUtf8_(s_);
try{
size_t s_;
double v_ = std::stod(t_, &s_);
if(s_ == t_.size()){
*lbh = true;
return v_;
}else{
*lbh = false;
return 0;
}
}catch(...){
*lbh = false;
return 0;
}
}
// _toBit64
static uint64_t lal(Array_<char16_t>* lbi /*me_*/, bool* lbj /*success*/){
std::u16string s_ = lbi->B;
const std::string& t_ = utf16ToUtf8_(s_);
try{
size_t s_;
uint64_t v_ = t_.size() > 2 && t_[0] == '0' && t_[1] == 'x' ? std::stoull(t_, &s_, 16) : std::stoull(t_, &s_);
if(s_ == t_.size()){
*lbj = true;
return v_;
}else{
*lbj = false;
return 0;
}
}catch(...){
*lbj = false;
return 0;
}
}
}
int main(int c_, char** v_){
argc_ = c_ - 1;
argv_ = v_ + 1;
classTable_[0] = 0;
classTable_[2] = 0;
classTable_[6] = 0;
classTable_[4] = 2;
classTable_[12] = 4;
classTable_[14] = 4;
classTable_[10] = 4;
classTable_[16] = 4;
classTable_[8] = 4;
classTable_[18] = 0;
classTable_[20] = 0;
classTable_[24] = 0;
classTable_[22] = 4;
classTable_[26] = 0;
classTable_[28] = 0;
classTable_[30] = 0;
classTable_[34] = 0;
classTable_[32] = 4;
classTable_[36] = 2;
classTable_[38] = 4;
classTable_[40] = 0;
classTable_[42] = 2;
classTable_[44] = 4;
classTable_[46] = 4;
classTable_[48] = 4;
classTable_[50] = 16;
classTable_[54] = 50;
classTable_[58] = 0;
classTable_[56] = 16;
classTable_[52] = 50;
classTable_[60] = 12;
classTable_[62] = 16;
classTable_[66] = 0;
classTable_[64] = 14;
classTable_[68] = 14;
classTable_[70] = 68;
classTable_[72] = 14;
classTable_[74] = 12;
classTable_[76] = 74;
classTable_[78] = 12;
classTable_[82] = 0;
classTable_[80] = 74;
classTable_[84] = 74;
classTable_[86] = 74;
classTable_[90] = 16;
classTable_[88] = 50;
classTable_[94] = 16;
classTable_[92] = 50;
classTable_[96] = 50;
classTable_[98] = 96;
classTable_[100] = 96;
classTable_[102] = 16;
classTable_[104] = 16;
classTable_[106] = 16;
classTable_[108] = 74;
classTable_[110] = 14;
classTable_[112] = 14;
classTable_[114] = 14;
classTable_[116] = 14;
classTable_[118] = 14;
classTable_[120] = 14;
classTable_[122] = 14;
classTable_[124] = 14;
classTable_[126] = 14;
classTable_[128] = 68;
classTable_[130] = 68;
classTable_[132] = 68;
classTable_[134] = 14;
classTable_[136] = 16;
classTable_[138] = 12;
classTable_[140] = 16;
classTable_[142] = 16;
classTable_[144] = 16;
classTable_[146] = 16;
classTable_[148] = 16;
classTable_[150] = 12;
init_();
a();
return 0;
}
