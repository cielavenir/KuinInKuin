#include "common.h"
namespace {
// Class
class fz : public Class_{
public:
fz();
virtual int64_t cmp_(Class_* t) override;
virtual Class_* copy_(Class_* t) override;
};
// HasType
class fy : public fz{
public:
fy();
virtual Class_* copy_(Class_* t) override;
int64_t lw; // typeId
};
// Pos
class ga : public fz{
public:
ga();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* hk; // srcName
int64_t hl; // row
int64_t hm; // col
};
// Ast
class fx : public fy{
public:
fx();
virtual int64_t cmp_(Class_* t) override;
virtual Class_* copy_(Class_* t) override;
ga* ne; // pos
Array_<char16_t>* nf; // name
fx* ng; // scopeParent
Dict_<Array_<char16_t>*, fx*>* nh; // scopeChildren
Array_<char16_t>* ni; // refName
fx* nj; // refItem
fy* nk; // extra
bool no; // publicInSrc
};
// AstType
class gc : public fx{
public:
gc();
virtual Class_* copy_(Class_* t) override;
};
// AstExpr
class gd : public fx{
public:
gd();
virtual Class_* copy_(Class_* t) override;
gc* pf; // type
int64_t pj; // varKind
};
// AstArg
class gb : public fx{
public:
gb();
virtual Class_* copy_(Class_* t) override;
int64_t qk; // kind
bool ql; // refVar
gc* qf; // type
gd* qg; // expr
};
// AstStat
class ge : public fx{
public:
ge();
virtual Class_* copy_(Class_* t) override;
};
// AstFunc
class fw : public fx{
public:
fw();
virtual Class_* copy_(Class_* t) override;
int64_t sm; // funcOption
List_<Array_<char16_t>*>* sf; // funcAttr
List_<gb*>* sg; // args
gc* sh; // ret_
List_<ge*>* si; // stats
};
// ResFiles
class gj : public fz{
public:
gj();
virtual Class_* copy_(Class_* t) override;
List_<Array_<char16_t>*>* gk; // files
};
// Bool
class kl : public fz{
public:
kl();
virtual int64_t cmp_(Class_* t) override;
virtual Class_* copy_(Class_* t) override;
bool km; // value
};
// AstClassItem
class um : public fz{
public:
um();
virtual Class_* copy_(Class_* t) override;
bool azq; // public
bool azr; // override
fx* azl; // def
um* azm; // parentItem
};
// AstClass
class ul : public fx{
public:
ul();
virtual Class_* copy_(Class_* t) override;
List_<um*>* bag; // items
};
// TmpVar
class un : public fz{
public:
un();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bbe; // identifier
gc* bbf; // type
};
// TmpVar
class va : public fz{
public:
va();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bie; // identifier
gc* bif; // type
};
// Reader
class auz : public fz{
public:
auz();
virtual Class_* copy_(Class_* t) override;
int64_t bne; // handle
int64_t bov; // delimiterNum
int64_t bow; // delimiters
int64_t box; // fileSize_
};
// ScopeRefedItem
class avl : public fz{
public:
avl();
virtual Class_* copy_(Class_* t) override;
fx* awk; // def
fx* axf; // scope
};
// AstRoot
class avk : public fx{
public:
avk();
virtual Class_* copy_(Class_* t) override;
List_<fx*>* aza; // items
List_<avl*>* awd; // scopeRefedItems
};
// CppInfo
class bby : public fy{
public:
bby();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bdy; // id
Array_<char16_t>* byz; // breakLabel
Array_<char16_t>* bzc; // skipLabel
int64_t bft; // classTableOffset
bool bca; // alreadyWritten
bool bzf; // breakLabelUsed
bool bzg; // skipLabelUsed
};
// AstVar
class bgi : public fx{
public:
bgi();
virtual Class_* copy_(Class_* t) override;
gb* bgk; // arg
};
// Writer
class bhq : public fz{
public:
bhq();
virtual Class_* copy_(Class_* t) override;
int64_t cnr; // handle
};
// WebInfo
class biw : public fy{
public:
biw();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bjm; // id
Array_<char16_t>* cqp; // breakSkipLabel
bool biy; // alreadyWritten
};
// AstConst
class bqp : public fx{
public:
bqp();
virtual Class_* copy_(Class_* t) override;
gb* brf; // arg
};
// AstAlias
class bqs : public fx{
public:
bqs();
virtual Class_* copy_(Class_* t) override;
gc* djp; // type
};
// AstEnum
class bqy : public fx{
public:
bqy();
virtual Class_* copy_(Class_* t) override;
List_<gd*>* dml; // items
};
// AstStatBreakable
class btv : public ge{
public:
btv();
virtual Class_* copy_(Class_* t) override;
gb* buf; // blockVar
};
// AstStatBlock
class btw : public btv{
public:
btw();
virtual Class_* copy_(Class_* t) override;
List_<ge*>* bui; // stats
};
// ExprPair
class bty : public fz{
public:
bty();
virtual Class_* copy_(Class_* t) override;
gd* bvu; // expr0
gd* bvz; // expr1
};
// AstStatCatch
class btx : public ge{
public:
btx();
virtual Class_* copy_(Class_* t) override;
List_<bty*>* bvh; // conds
btw* bvk; // statBlock
};
// AstStatTry
class btu : public btv{
public:
btu();
virtual Class_* copy_(Class_* t) override;
btw* buj; // statBlock
List_<btx*>* buk; // catches
btw* bun; // finallyStatBlock
};
// AstTypePrim
class bud : public gc{
public:
bud();
virtual Class_* copy_(Class_* t) override;
int64_t bue; // kind
};
// AstStatDo
class buu : public ge{
public:
buu();
virtual Class_* copy_(Class_* t) override;
gd* bve; // expr
};
// AstExprCallArg
class buy : public fz{
public:
buy();
virtual Class_* copy_(Class_* t) override;
gd* bwm; // arg
bool bwi; // refVar
bool bwj; // skipVar
};
// AstExprCall
class bux : public gd{
public:
bux();
virtual Class_* copy_(Class_* t) override;
gd* bvd; // func_
List_<buy*>* bva; // args
};
// AstExprValue
class bvq : public gd{
public:
bvq();
virtual Class_* copy_(Class_* t) override;
};
// AstExprValuePrim
class bvp : public bvq{
public:
bvp();
virtual Class_* copy_(Class_* t) override;
uint64_t bvr; // value
};
// AstExpr2
class byb : public gd{
public:
byb();
virtual Class_* copy_(Class_* t) override;
int64_t byc; // kind
gd* byf; // children0
gd* byg; // children1
};
// AstTypeNullable
class caj : public gc{
public:
caj();
virtual Class_* copy_(Class_* t) override;
};
// AstTypeArray
class cai : public caj{
public:
cai();
virtual Class_* copy_(Class_* t) override;
gc* cak; // itemType
};
// AstTypeBit
class cam : public gc{
public:
cam();
virtual Class_* copy_(Class_* t) override;
int64_t can; // size
};
// AstTypeFuncArg
class car : public fz{
public:
car();
virtual Class_* copy_(Class_* t) override;
gc* cbg; // arg
bool cbi; // refVar
};
// AstTypeFunc
class caq : public caj{
public:
caq();
virtual Class_* copy_(Class_* t) override;
int64_t elx; // funcOption
List_<Array_<char16_t>*>* elt; // funcAttr
List_<car*>* cay; // args
gc* cat; // ret_
};
// AstTypeGen
class cbn : public caj{
public:
cbn();
virtual Class_* copy_(Class_* t) override;
int64_t cbq; // kind
gc* cbs; // itemType
};
// AstTypeDict
class cby : public caj{
public:
cby();
virtual Class_* copy_(Class_* t) override;
gc* cbz; // itemTypeKey
gc* cca; // itemTypeValue
};
// AstStatElIf
class cji : public ge{
public:
cji();
virtual Class_* copy_(Class_* t) override;
gd* epl; // cond
btw* epm; // statBlock
};
// AstStatIf
class cjh : public btv{
public:
cjh();
virtual Class_* copy_(Class_* t) override;
gd* epa; // cond
btw* epc; // statBlock
List_<cji*>* epi; // elIfs
btw* epo; // elseStatBlock
};
// AstStatCase
class cjm : public ge{
public:
cjm();
virtual Class_* copy_(Class_* t) override;
List_<bty*>* esj; // conds
btw* esx; // statBlock
};
// AstStatSwitch
class cjl : public btv{
public:
cjl();
virtual Class_* copy_(Class_* t) override;
gd* esb; // cond
List_<cjm*>* esf; // cases
btw* esz; // defaultStatBlock
};
// AstStatSkipable
class cjq : public btv{
public:
cjq();
virtual Class_* copy_(Class_* t) override;
};
// AstStatWhile
class cjp : public cjq{
public:
cjp();
virtual Class_* copy_(Class_* t) override;
gd* ewe; // cond
bool ewm; // skip_
List_<ge*>* ewg; // stats
};
// AstStatFor
class cjt : public cjq{
public:
cjt();
virtual Class_* copy_(Class_* t) override;
gd* ezd; // start
gd* ezc; // cond
gd* eze; // step
List_<ge*>* ezm; // stats
};
// AstStatThrow
class cjy : public ge{
public:
cjy();
virtual Class_* copy_(Class_* t) override;
gd* fcd; // code
};
// AstStatRet
class ckd : public ge{
public:
ckd();
virtual Class_* copy_(Class_* t) override;
gd* fdj; // value
};
// AstStatAssert
class ckm : public ge{
public:
ckm();
virtual Class_* copy_(Class_* t) override;
gd* fex; // cond
};
// AstTypeUser
class dhf : public caj{
public:
dhf();
virtual Class_* copy_(Class_* t) override;
};
// AstExpr1
class ebq : public gd{
public:
ebq();
virtual Class_* copy_(Class_* t) override;
int64_t ggi; // kind
gd* ggc; // child
};
// AstExpr3
class ebv : public gd{
public:
ebv();
virtual Class_* copy_(Class_* t) override;
gd* grg; // children0
gd* grj; // children1
gd* grm; // children2
};
// AstExprNew
class eby : public gd{
public:
eby();
virtual Class_* copy_(Class_* t) override;
gc* gth; // itemType
};
// AstExprNewArray
class ecb : public gd{
public:
ecb();
virtual Class_* copy_(Class_* t) override;
List_<gd*>* gus; // idces
gc* gvb; // itemType
};
// AstExprAs
class ece : public gd{
public:
ece();
virtual Class_* copy_(Class_* t) override;
int64_t gwx; // kind
gd* gwp; // child
gc* gws; // childType
};
// AstExprToBin
class ech : public gd{
public:
ech();
virtual Class_* copy_(Class_* t) override;
gd* haw; // child
gc* hbc; // childType
};
// AstExprFromBin
class eck : public gd{
public:
eck();
virtual Class_* copy_(Class_* t) override;
gd* hch; // child
gc* hcm; // childType
gd* hcn; // offset
};
// AstExprArray
class ecp : public gd{
public:
ecp();
virtual Class_* copy_(Class_* t) override;
gd* hfz; // var_
gd* hge; // idx
};
// AstExprDot
class ecs : public gd{
public:
ecs();
virtual Class_* copy_(Class_* t) override;
gd* heh; // var_
Array_<char16_t>* hhx; // member
um* hik; // classItem
};
// AstExprValueStr
class ecz : public bvq{
public:
ecz();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* glw; // value
};
// AstExprValueEnumElement
class edc : public bvq{
public:
edc();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* gki; // identifier
};
// AstExprValueFloat
class edf : public bvq{
public:
edf();
virtual Class_* copy_(Class_* t) override;
double ggy; // value
};
// AstExprValueArray
class edi : public gd{
public:
edi();
virtual Class_* copy_(Class_* t) override;
List_<gd*>* heq; // values
};
// AstStatVar
class eez : public ge{
public:
eez();
virtual Class_* copy_(Class_* t) override;
bgi* efb; // def
};
// AstTypeNull
class ehf : public gc{
public:
ehf();
virtual Class_* copy_(Class_* t) override;
};
// AstStatFunc
class ihv : public ge{
public:
ihv();
virtual Class_* copy_(Class_* t) override;
fw* ihw; // def
};
// AstStatConst
class ihz : public ge{
public:
ihz();
virtual Class_* copy_(Class_* t) override;
bqp* iia; // def
};
// AstStatAlias
class iic : public ge{
public:
iic();
virtual Class_* copy_(Class_* t) override;
bqs* iid; // def
};
// AstStatClass
class iif : public ge{
public:
iif();
virtual Class_* copy_(Class_* t) override;
ul* iig; // def
};
// AstStatEnum
class iii : public ge{
public:
iii();
virtual Class_* copy_(Class_* t) override;
bqy* iij; // def
};
// AstTypeEnumElement
class kwo : public gc{
public:
kwo();
virtual Class_* copy_(Class_* t) override;
};
static void a();
static void e();
static void f();
static void g();
static void i();
static void j();
static void l(int64_t bp /*excpt*/);
static bool o();
static void q(int64_t fh /*code*/);
static void u(Array_<char16_t>* fm /*str*/);
template<typename T_> static Array_<char16_t>* v(T_ fn /*me_*/, Array_<int64_t>* fo /*type*/);
static bool ab();
static void ad(int64_t hb /*id*/, ga* hc /*pos*/, Array_<Array_<char16_t>*>* hd /*args*/);
static Array_<Array_<char16_t>*>* br();
static bool cf(Array_<char16_t>** hq /*out*/, Array_<Array_<char16_t>*>* hr /*cmdLines*/, int64_t* hs /*idx*/, char16_t ht /*option*/);
static bool cs(bool* hx /*out*/, char16_t hy /*option*/);
template<typename T_, typename K_, typename V_> static void dv(T_ ib /*me_*/, Array_<int64_t>* ic /*type*/, K_ id /*key*/, V_ ie /*item*/);
static int64_t eo(int64_t ig /*min*/, int64_t ih /*max*/);
static int64_t eq(Array_<char16_t>* ii /*me_*/, bool* ij /*success*/);
static Array_<char16_t>* ew(Array_<char16_t>* ik /*path*/);
static Array_<char16_t>* ey(Array_<char16_t>* ix /*path*/);
static Array_<char16_t>* fd(Array_<char16_t>* jj /*path*/);
static Array_<char16_t>* ff(Array_<char16_t>* jw /*path*/);
static int64_t fr();
static Dict_<Array_<char16_t>*, fx*>* ft();
static fw* fv(Dict_<Array_<char16_t>*, fx*>* kq /*asts*/);
static void kx(fz* ky /*me*/);
static void kz(fz* la /*me*/);
static int64_t lb(fz* lc /*me*/, fz* ld /*t*/);
static fz* le(fz* lf /*me*/);
static Array_<uint8_t>* lh(fz* li /*me*/);
static fz* lk(fz* ll /*me*/, Array_<uint8_t>* lm /*bin*/, int64_t* ln /*idx*/);
static Array_<char16_t>* lp(fz* lq /*me*/);
static void lr(fy* ls);
static fy* lt(fy* lu);
static Array_<uint8_t>* lx(fy* ly);
static fy* mb(fy* mc, Array_<uint8_t>* md, int64_t* me);
static int64_t mg(fx* mh /*me*/, fx* mi /*t*/);
static void mm(ga* mn);
static ga* mo(ga* mp);
static Array_<uint8_t>* mr(ga* ms);
static ga* mx(ga* my, Array_<uint8_t>* mz, int64_t* na);
static void nc(fx* nd);
static fx* nl(fx* nm);
static Array_<uint8_t>* np(fx* nq);
static fx* ob(fx* oc, Array_<uint8_t>* od, int64_t* oe);
static void og(gc* oh);
static gc* oi(gc* oj);
static Array_<uint8_t>* ol(gc* om);
static gc* oy(gc* oz, Array_<uint8_t>* pa, int64_t* pb);
static void pd(gd* pe);
static gd* pg(gd* ph);
static Array_<uint8_t>* pk(gd* pl);
static gd* py(gd* pz, Array_<uint8_t>* qa, int64_t* qb);
static void qd(gb* qe);
static gb* qh(gb* qi);
static Array_<uint8_t>* qm(gb* qn);
static gb* rc(gb* rd, Array_<uint8_t>* re, int64_t* rf);
static void rh(ge* ri);
static ge* rj(ge* rk);
static Array_<uint8_t>* rm(ge* rn);
static ge* ry(ge* rz, Array_<uint8_t>* sa, int64_t* sb);
static void sd(fw* se);
static fw* sj(fw* sk);
static Array_<uint8_t>* sn(fw* so);
static fw* te(fw* tf, Array_<uint8_t>* tg, int64_t* th);
static void tj(gj* tk);
static gj* tl(gj* tm);
static Array_<uint8_t>* to(gj* tp);
static gj* ts(gj* tt, Array_<uint8_t>* tu, int64_t* tv);
static bool gm(Array_<char16_t>* tx /*path*/);
typedef bool(*ub)(Array_<char16_t>*, bool, fz*);
static bool go(Array_<char16_t>* ty /*path*/, bool tz /*recursion*/, ub ua /*callback*/, fz* uc /*data*/);
static bool gp(Array_<char16_t>* ud /*path*/, bool ue /*isDir*/, fz* uf /*data*/);
static bool gu(fw* ui /*entry*/, List_<Array_<char16_t>*>* uj /*resFiles*/);
static bool gy(fw* uy /*entry*/, List_<Array_<char16_t>*>* uz /*resFiles*/);
static Array_<char16_t>* hh(int64_t vj /*id*/, Array_<Array_<char16_t>*>* vk /*args*/);
static int64_t atm(kl* atn /*me*/, kl* ato /*t*/);
static Array_<char16_t>* atq(kl* atr /*me*/);
static void ats(kl* att);
static kl* atu(kl* atv);
static Array_<uint8_t>* atx(kl* aty);
static kl* aub(kl* auc, Array_<uint8_t>* aud, int64_t* aue);
template<typename T_, typename K_, typename V_> static bool ko(T_ aug /*me_*/, Array_<int64_t>* auh /*type*/, const void* aui /*callback*/, fz* auj /*data*/);
static bool kp(Array_<char16_t>* auk /*key*/, fx* aul /*value*/, fz* aum /*data*/);
static fw* ks();
static bool kv(Array_<char16_t>* avz /*key*/, fx* awa /*value*/, fz* awb /*data*/);
static fw* kw(fw* ayt /*mainFunc*/);
static uint64_t mk(fz* azc /*class_*/);
template<typename T_, typename C_> static void uh(T_ azd /*me_*/, Array_<int64_t>* aze /*type*/, C_ azf /*item*/);
template<typename T_, typename C_> static void uk(T_ azg /*me_*/, Array_<int64_t>* azh /*type*/, C_ azi /*item*/);
static void azj(um* azk);
static um* azn(um* azo);
static Array_<uint8_t>* azs(um* azt);
static um* azz(um* baa, Array_<uint8_t>* bab, int64_t* bac);
static void bae(ul* baf);
static ul* bah(ul* bai);
static Array_<uint8_t>* bak(ul* bal);
static ul* bax(ul* bay, Array_<uint8_t>* baz, int64_t* bba);
static void bbc(un* bbd);
static un* bbg(un* bbh);
static Array_<uint8_t>* bbj(un* bbk);
static un* bbo(un* bbp, Array_<uint8_t>* bbq, int64_t* bbr);
template<typename T_, typename R_> static R_ us(T_ bbt /*me_*/, Array_<int64_t>* bbu /*type*/);
static void ut(fw* bbv /*ast*/);
static void uw(ul* bfk /*ast*/);
static void ux(List_<Array_<char16_t>*>* bhk /*resFiles*/);
static void bic(va* bid);
static va* big(va* bih);
static Array_<uint8_t>* bij(va* bik);
static va* bio(va* bip, Array_<uint8_t>* biq, int64_t* bir);
static void ve(fw* bit /*ast*/);
static void vh(ul* bks /*ast*/);
static void vi(List_<Array_<char16_t>*>* blo /*resFiles*/);
static int64_t atp(int64_t blx /*me_*/);
static bool auq(Array_<char16_t>* bly /*name*/);
static Array_<char16_t>* auv(Array_<char16_t>* bmr /*path*/);
template<typename T_> static T_ auw(T_ bmy /*me_*/, Array_<int64_t>* bmz /*type*/, int64_t bna /*start*/, int64_t bnb /*len*/);
static auz* auy(auz* bnc /*me2*/, Array_<char16_t>* bnd /*path*/);
static void bnf(auz* bng /*me*/);
static void avm(auz* bnh /*me*/);
static void bni(auz* bnj /*me*/, int64_t bnk /*origin*/, int64_t bnl /*pos*/);
static int64_t bnm(auz* bnn /*me*/);
static void bno(auz* bnp /*me*/, Array_<char16_t>* bnq /*delimiters*/);
static Array_<uint8_t>* bnr(auz* bns /*me*/, int64_t bnt /*size*/);
static char16_t bnu(auz* bnv /*me*/);
static int64_t bnw(auz* bnx /*me*/);
static double bny(auz* bnz /*me*/);
static char16_t boa(auz* bob /*me*/);
static Array_<char16_t>* boc(auz* bod /*me*/);
static Array_<char16_t>* bhv(auz* boe /*me*/);
static int64_t bop(auz* boq /*me*/);
static bool bht(auz* bor /*me*/);
static auz* bos(auz* bot);
static Array_<uint8_t>* boy(auz* boz);
static auz* bpf(auz* bpg, Array_<uint8_t>* bph, int64_t* bpi);
static avk* avj();
static void bri(avl* brj);
static avl* brk(avl* brl);
static Array_<uint8_t>* brn(avl* bro);
static avl* brs(avl* brt, Array_<uint8_t>* bru, int64_t* brv);
static void brx(avk* bry);
static avk* brz(avk* bsa);
static Array_<uint8_t>* bsc(avk* bsd);
static avk* bsq(avk* bsr, Array_<uint8_t>* bss, int64_t* bst);
template<typename T_, typename C_, typename R_> static R_ avo(T_ bsv /*me_*/, Array_<int64_t>* bsw /*type*/, C_ bsx /*key*/, bool* bsy /*existed*/);
template<typename T_> static void awe(T_ bsz /*me_*/, Array_<int64_t>* bta /*type*/);
template<typename T_> static bool awg(T_ btb /*me_*/, Array_<int64_t>* btc /*type*/);
template<typename T_, typename R_> static R_ awi(T_ btd /*me_*/, Array_<int64_t>* bte /*type*/);
template<typename T_, typename C_> static int64_t awn(T_ btf /*me_*/, Array_<int64_t>* btg /*type*/, C_ bth /*item*/, int64_t bti /*start*/);
template<typename T_> static T_ aye(T_ btj /*me_*/, Array_<int64_t>* btk /*type*/, T_ btl /*n*/);
template<typename T_> static void ays(T_ btm /*me_*/, Array_<int64_t>* btn /*type*/);
static fw* ayw(fw* bto /*mainFunc*/);
static void ayx(fw* bww /*ast*/);
static bool azb(Array_<char16_t>* bxg /*key*/, fx* bxh /*value*/, fz* bxi /*data*/);
static bby* bbx(fx* bys /*ast*/);
static void bzh(bby* bzi);
static bby* bzj(bby* bzk);
static Array_<uint8_t>* bzm(bby* bzn);
static bby* bzx(bby* bzy, Array_<uint8_t>* bzz, int64_t* caa);
static Array_<char16_t>* bct(gc* cac /*type*/);
static bool bdg(gc* ccs /*type*/);
static void beq(List_<Array_<char16_t>*>* cct /*codes*/, Array_<char16_t>* ccu /*attr*/, List_<gb*>* ccv /*args*/, List_<um*>* ccw /*members*/);
template<typename T_> static void beu(T_ ciu /*me_*/, Array_<int64_t>* civ /*type*/);
template<typename T_> static int64_t bew(T_ ciw /*me_*/, Array_<int64_t>* cix /*type*/);
static void bex(List_<ge*>* ciy /*stats*/, ge* ciz /*breakStat*/, ge* cja /*skipStat*/);
template<typename T_> static void bey(T_ cko /*me_*/, Array_<int64_t>* ckp /*type*/, int64_t ckq /*offset*/);
template<typename T_, typename C_> static void bfe(T_ ckr /*me_*/, Array_<int64_t>* cks /*type*/, C_ ckt /*item*/);
static Array_<char16_t>* bff(gc* cku /*type*/);
template<typename T_> static void bfh(T_ cll /*me_*/, Array_<int64_t>* clm /*type*/);
static Array_<char16_t>* bfo(ul* cln /*ast*/);
static void cmk(bgi* cml);
static bgi* cmm(bgi* cmn);
static Array_<uint8_t>* cmp(bgi* cmq);
static bgi* cnc(bgi* cnd, Array_<uint8_t>* cne, int64_t* cnf);
static fw* bgn(ul* cnh /*ast*/, Array_<char16_t>* cni /*name*/);
static bhq* bhp(bhq* cno /*me2*/, Array_<char16_t>* cnp /*path*/, bool cnq /*append*/);
static void cns(bhq* cnt /*me*/);
static void bhy(bhq* cnu /*me*/);
static void cnv(bhq* cnw /*me*/, int64_t cnx /*origin*/, int64_t cny /*pos*/);
static int64_t cnz(bhq* coa /*me*/);
static void cob(bhq* coc /*me*/, Array_<uint8_t>* cod /*bin*/);
static void coe(bhq* cof /*me*/, int64_t cog /*n*/);
static void coo(bhq* cop /*me*/, double coq /*n*/);
static void con(bhq* cox /*me*/, char16_t coy /*n*/);
static void bhw(bhq* coz /*me*/, Array_<char16_t>* cpa /*n*/);
static bhq* cpg(bhq* cph);
static Array_<uint8_t>* cpj(bhq* cpk);
static bhq* cpn(bhq* cpo, Array_<uint8_t>* cpp, int64_t* cpq);
static void bhx(bhq* cps /*writer*/, List_<Array_<char16_t>*>* cpt /*resFiles*/);
static bool bia(Array_<char16_t>* cqg /*dst*/, Array_<char16_t>* cqh /*src*/);
static biw* biv(fx* cqi /*ast*/);
static void cqr(biw* cqs);
static biw* cqt(biw* cqu);
static Array_<uint8_t>* cqw(biw* cqx);
static biw* crd(biw* cre, Array_<uint8_t>* crf, int64_t* crg);
static void bkd(List_<Array_<char16_t>*>* cri /*codes*/, Array_<char16_t>* crj /*attr*/, List_<gb*>* crk /*args*/, List_<um*>* crl /*members*/);
static void bki(List_<ge*>* cxz /*stats*/);
static Array_<char16_t>* bko(gc* czd /*type*/);
static Array_<char16_t>* bkw(ul* czs /*ast*/);
static fw* ble(ul* czy /*ast*/, Array_<char16_t>* czz /*name*/);
static void blu(bhq* daf /*writer*/, List_<Array_<char16_t>*>* dag /*resFiles*/);
static void bpl(fx* dcg /*ast*/, int64_t dch /*typeId*/, ga* dci /*pos*/, Array_<char16_t>* dcj /*name*/, bool dck /*setParent*/);
static ga* bpm(Array_<char16_t>* dcm /*srcName*/, int64_t dcn /*row*/, int64_t dco /*col*/);
template<typename T_, typename C_> static void bpn(T_ dcq /*me_*/, Array_<int64_t>* dcr /*type*/, C_ dcs /*item*/);
static char16_t bpo();
static Array_<char16_t>* bqf(bool ddk /*skipSpaces*/, bool ddl /*refName*/);
static fw* bqk(Array_<char16_t>* des /*parentClass*/, bool det /*overritten*/);
static bgi* bqm(int64_t din /*kind*/, Array_<char16_t>* dio /*parentClass*/);
static bqp* bqo();
static void dir(bqp* dis);
static bqp* dit(bqp* diu);
static Array_<uint8_t>* diw(bqp* dix);
static bqp* djj(bqp* djk, Array_<uint8_t>* djl, int64_t* djm);
static bqs* bqr();
static void djq(bqs* djr);
static bqs* djs(bqs* djt);
static Array_<uint8_t>* djv(bqs* djw);
static bqs* dki(bqs* dkj, Array_<uint8_t>* dkk, int64_t* dkl);
static ul* bqv();
static bqy* bqx();
static void dnl(bqy* dnm);
static bqy* dnn(bqy* dno);
static Array_<uint8_t>* dnq(bqy* dnr);
static bqy* dod(bqy* doe, Array_<uint8_t>* dof, int64_t* dog);
static void bra(char16_t doi /*c*/);
static char16_t brb();
template<typename T_, typename R_> static R_ brh(T_ doq /*me_*/, Array_<int64_t>* dor /*type*/);
static void btr(fx* dos /*ast*/, int64_t dot /*typeId*/, ga* dou /*pos*/);
static void dow(btv* dox);
static btv* doy(btv* doz);
static Array_<uint8_t>* dpb(btv* dpc);
static btv* dpo(btv* dpp, Array_<uint8_t>* dpq, int64_t* dpr);
static void dpt(btw* dpu);
static btw* dpv(btw* dpw);
static Array_<uint8_t>* dpy(btw* dpz);
static btw* dqm(btw* dqn, Array_<uint8_t>* dqo, int64_t* dqp);
static void dqr(bty* dqs);
static bty* dqt(bty* dqu);
static Array_<uint8_t>* dqw(bty* dqx);
static bty* drb(bty* drc, Array_<uint8_t>* drd, int64_t* dre);
static void drg(btx* drh);
static btx* dri(btx* drj);
static Array_<uint8_t>* drl(btx* drm);
static btx* drz(btx* dsa, Array_<uint8_t>* dsb, int64_t* dsc);
static void dse(btu* dsf);
static btu* dsg(btu* dsh);
static Array_<uint8_t>* dsj(btu* dsk);
static btu* dsz(btu* dta, Array_<uint8_t>* dtb, int64_t* dtc);
static void dte(bud* dtf);
static bud* dtg(bud* dth);
static Array_<uint8_t>* dtj(bud* dtk);
static bud* dtw(bud* dtx, Array_<uint8_t>* dty, int64_t* dtz);
static fx* buq(Array_<char16_t>* dub /*src*/, Array_<char16_t>* duc /*identifier*/, bool dud /*makeExprRef*/);
static void duq(buu* dur);
static buu* dus(buu* dut);
static Array_<uint8_t>* duv(buu* duw);
static buu* dvi(buu* dvj, Array_<uint8_t>* dvk, int64_t* dvl);
static void dvn(buy* dvo);
static buy* dvp(buy* dvq);
static Array_<uint8_t>* dvs(buy* dvt);
static buy* dvy(buy* dvz, Array_<uint8_t>* dwa, int64_t* dwb);
static void dwd(bux* dwe);
static bux* dwf(bux* dwg);
static Array_<uint8_t>* dwi(bux* dwj);
static bux* dwy(bux* dwz, Array_<uint8_t>* dxa, int64_t* dxb);
static void buz(gd* dxd /*ast*/, int64_t dxe /*typeId*/, ga* dxf /*pos*/);
static void dxg(bvq* dxh);
static bvq* dxi(bvq* dxj);
static Array_<uint8_t>* dxl(bvq* dxm);
static bvq* dxz(bvq* dya, Array_<uint8_t>* dyb, int64_t* dyc);
static void dye(bvp* dyf);
static bvp* dyg(bvp* dyh);
static Array_<uint8_t>* dyj(bvp* dyk);
static bvp* dyy(bvp* dyz, Array_<uint8_t>* dza, int64_t* dzb);
static void bxb(gb* dzd /*ast*/);
static gc* bxe(gc* dzt /*ast*/, bqs* dzu /*parentAlias*/);
static List_<ge*>* bxf(List_<ge*>* eaz /*stats*/, gc* eba /*retType*/, fw* ebb /*parentFunc*/);
static gd* bxx(gd* ebh /*ast*/, bool ebi /*nullable*/);
static void edo(byb* edp);
static byb* edq(byb* edr);
static Array_<uint8_t>* edt(byb* edu);
static byb* eek(byb* eel, Array_<uint8_t>* eem, int64_t* een);
static ge* byh(ge* eep /*ast*/, gc* eeq /*retType*/, fw* eer /*parentFunc*/);
static bool byj(gc* egy /*type*/);
static bvq* byq(ga* ehb /*pos*/);
static Array_<char16_t>* byw();
static void eim(caj* ein);
static caj* eio(caj* eip);
static Array_<uint8_t>* eir(caj* eis);
static caj* ejd(caj* eje, Array_<uint8_t>* ejf, int64_t* ejg);
static void eji(cai* ejj);
static cai* ejk(cai* ejl);
static Array_<uint8_t>* ejn(cai* ejo);
static cai* eka(cai* ekb, Array_<uint8_t>* ekc, int64_t* ekd);
static void ekf(cam* ekg);
static cam* ekh(cam* eki);
static Array_<uint8_t>* ekk(cam* ekl);
static cam* ekx(cam* eky, Array_<uint8_t>* ekz, int64_t* ela);
static void elc(car* eld);
static car* ele(car* elf);
static Array_<uint8_t>* elh(car* eli);
static car* elm(car* eln, Array_<uint8_t>* elo, int64_t* elp);
static void elr(caq* els);
static caq* elu(caq* elv);
static Array_<uint8_t>* ely(caq* elz);
static caq* emo(caq* emp, Array_<uint8_t>* emq, int64_t* emr);
static void emt(cbn* emu);
static cbn* emv(cbn* emw);
static Array_<uint8_t>* emy(cbn* emz);
static cbn* enm(cbn* enn, Array_<uint8_t>* eno, int64_t* enp);
static void enr(cby* ens);
static cby* ent(cby* enu);
static Array_<uint8_t>* enw(cby* enx);
static cby* eok(cby* eol, Array_<uint8_t>* eom, int64_t* eon);
static bby* chb(List_<um*>* eop /*members*/, Array_<char16_t>* eoq /*name*/);
static void cjg(cjh* eov /*ast*/, ge* eow /*breakStat*/, ge* eox /*skipStat*/);
static void eps(cji* ept);
static cji* epu(cji* epv);
static Array_<uint8_t>* epx(cji* epy);
static cji* eql(cji* eqm, Array_<uint8_t>* eqn, int64_t* eqo);
static void eqq(cjh* eqr);
static cjh* eqs(cjh* eqt);
static Array_<uint8_t>* eqv(cjh* eqw);
static cjh* erm(cjh* ern, Array_<uint8_t>* ero, int64_t* erp);
static void cjk(cjl* err /*ast*/, ge* ers /*breakStat*/, ge* ert /*skipStat*/);
static void eub(cjm* euc);
static cjm* eud(cjm* eue);
static Array_<uint8_t>* eug(cjm* euh);
static cjm* euu(cjm* euv, Array_<uint8_t>* euw, int64_t* eux);
static void euz(cjl* eva);
static cjl* evb(cjl* evc);
static Array_<uint8_t>* eve(cjl* evf);
static cjl* evu(cjl* evv, Array_<uint8_t>* evw, int64_t* evx);
static void cjo(cjp* evz /*ast*/, ge* ewa /*breakStat*/, ge* ewb /*skipStat*/);
static void eww(cjq* ewx);
static cjq* ewy(cjq* ewz);
static Array_<uint8_t>* exb(cjq* exc);
static cjq* exo(cjq* exp, Array_<uint8_t>* exq, int64_t* exr);
static void ext(cjp* exu);
static cjp* exv(cjp* exw);
static Array_<uint8_t>* exy(cjp* exz);
static cjp* eyo(cjp* eyp, Array_<uint8_t>* eyq, int64_t* eyr);
static void cjs(cjt* eyt /*ast*/, ge* eyu /*breakStat*/, ge* eyv /*skipStat*/);
static void ezr(cjt* ezs);
static cjt* ezt(cjt* ezu);
static Array_<uint8_t>* ezw(cjt* ezx);
static cjt* fan(cjt* fao, Array_<uint8_t>* fap, int64_t* faq);
static void cjv(btu* fas /*ast*/, ge* fat /*breakStat*/, ge* fau /*skipStat*/);
static void cjx(cjy* fcc /*ast*/);
static void fce(cjy* fcf);
static cjy* fcg(cjy* fch);
static Array_<uint8_t>* fcj(cjy* fck);
static cjy* fcw(cjy* fcx, Array_<uint8_t>* fcy, int64_t* fcz);
static void cka(btw* fdb /*ast*/, ge* fdc /*breakStat*/, ge* fdd /*skipStat*/);
static void ckc(ckd* fdh /*ast*/);
static void fdm(ckd* fdn);
static ckd* fdo(ckd* fdp);
static Array_<uint8_t>* fdr(ckd* fds);
static ckd* fee(ckd* fef, Array_<uint8_t>* feg, int64_t* feh);
static void ckf(buu* fej /*ast*/);
static void ckh(ge* fek /*ast*/, ge* fel /*breakStat*/);
static void ckj(ge* feq /*ast*/, ge* fer /*skipStat*/);
static void ckl(ckm* few /*ast*/);
static void fey(ckm* fez);
static ckm* ffa(ckm* ffb);
static Array_<uint8_t>* ffd(ckm* ffe);
static ckm* ffq(ckm* ffr, Array_<uint8_t>* ffs, int64_t* fft);
static bool ckw(gc* ffv /*type*/);
static bool clb(gc* ffw /*type*/);
static Array_<char16_t>* cqm();
static biw* cvv(List_<um*>* fhe /*members*/, Array_<char16_t>* fhf /*name*/);
static void cyf(cjh* fhk /*ast*/);
static void cyh(cjl* fib /*ast*/);
static void cyj(cjp* fkj /*ast*/);
static void cyl(cjt* fkv /*ast*/);
static void cyn(btu* fll /*ast*/);
static void cyp(cjy* fmp /*ast*/);
static void cyr(btw* fmq /*ast*/);
static void cyt(ckd* fmw /*ast*/);
static void cyv(buu* fna /*ast*/);
static void cyx(ge* fnb /*ast*/);
static void cyz(ge* fnd /*ast*/);
static void czb(ckm* fnf /*ast*/);
static Array_<char16_t>* dbc(char16_t fng /*c*/);
static void dcl(fx* fno /*ast*/, int64_t fnp /*typeId*/, ga* fnq /*pos*/, Array_<char16_t>* fnr /*name*/, bool fns /*setParent*/);
static char16_t dde();
static ga* ddp();
static Array_<char16_t>* ddq(char16_t fop /*c*/);
static void del(Array_<char16_t>* fox /*name*/);
static Array_<char16_t>* dff();
template<typename T_> static T_ dfn(T_ fpk /*me_*/, Array_<int64_t>* fpl /*type*/, T_ fpm /*n*/);
static void dgt(char16_t fpn /*c*/, char16_t fpo /*c2*/);
static void dgx(fx* fpp /*ast*/, Array_<char16_t>* fpq /*name*/);
static void dgy(char16_t fps /*c*/, bool fpt /*skipSpaces*/);
static void dhc(fx* fpx /*ast*/, bool fpy /*refuseReserved*/);
static void frj(dhf* frk);
static dhf* frl(dhf* frm);
static Array_<uint8_t>* fro(dhf* frp);
static dhf* fsa(dhf* fsb, Array_<uint8_t>* fsc, int64_t* fsd);
static gb* dhn(int64_t fsf /*kind*/, Array_<char16_t>* fsg /*parentClass*/);
static gc* dhy();
static ge* dif(fx* fvk /*block_*/);
static gd* dnd();
static void dni(gd* fyt /*ast*/, int64_t fyu /*typeId*/, ga* fyv /*pos*/);
static void doo();
static void dov(fx* gao /*ast*/, int64_t gap /*typeId*/, ga* gaq /*pos*/);
static gd* dup(gd* gar /*ast*/);
static bool dzp(gc* gby /*type1*/, gc* gbz /*type2*/, bool gca /*strict*/);
static bvp* dzs(gd* gee /*enumElement*/, gc* gef /*type*/);
static void eah(ul* gei /*ast*/);
static void eaj(bqy* ger /*ast*/);
static void eal(bqs* gft /*ast*/, bqs* gfu /*parent*/);
static gd* ebp(ebq* gfz /*ast*/);
static void ghq(ebq* ghr);
static ebq* ghs(ebq* ght);
static Array_<uint8_t>* ghv(ebq* ghw);
static ebq* gil(ebq* gim, Array_<uint8_t>* gin, int64_t* gio);
static gd* ebs(byb* giq /*ast*/);
static gd* ebu(ebv* grd /*ast*/);
static void gsd(ebv* gse);
static ebv* gsf(ebv* gsg);
static Array_<uint8_t>* gsi(ebv* gsj);
static ebv* gsz(ebv* gta, Array_<uint8_t>* gtb, int64_t* gtc);
static gd* ebx(eby* gte /*ast*/);
static void gto(eby* gtp);
static eby* gtq(eby* gtr);
static Array_<uint8_t>* gtt(eby* gtu);
static eby* gui(eby* guj, Array_<uint8_t>* guk, int64_t* gul);
static gd* eca(ecb* gun /*ast*/);
static void gvm(ecb* gvn);
static ecb* gvo(ecb* gvp);
static Array_<uint8_t>* gvr(ecb* gvs);
static ecb* gwh(ecb* gwi, Array_<uint8_t>* gwj, int64_t* gwk);
static gd* ecd(ece* gwm /*ast*/);
static void gzs(ece* gzt);
static ece* gzu(ece* gzv);
static Array_<uint8_t>* gzx(ece* gzy);
static ece* hao(ece* hap, Array_<uint8_t>* haq, int64_t* har);
static gd* ecg(ech* hat /*ast*/);
static void hbe(ech* hbf);
static ech* hbg(ech* hbh);
static Array_<uint8_t>* hbj(ech* hbk);
static ech* hbz(ech* hca, Array_<uint8_t>* hcb, int64_t* hcc);
static gd* ecj(eck* hce /*ast*/);
static void hco(eck* hcp);
static eck* hcq(eck* hcr);
static Array_<uint8_t>* hct(eck* hcu);
static eck* hdk(eck* hdl, Array_<uint8_t>* hdm, int64_t* hdn);
static gd* ecm(bux* hdp /*ast*/);
static gd* eco(ecp* hfw /*ast*/);
static void hgj(ecp* hgk);
static ecp* hgl(ecp* hgm);
static Array_<uint8_t>* hgo(ecp* hgp);
static ecp* hhe(ecp* hhf, Array_<uint8_t>* hhg, int64_t* hhh);
static gd* ecr(ecs* hhj /*ast*/);
static void hlf(ecs* hlg);
static ecs* hlh(ecs* hli);
static Array_<uint8_t>* hlk(ecs* hll);
static ecs* hmb(ecs* hmc, Array_<uint8_t>* hmd, int64_t* hme);
static gd* ecu(bvq* hmg /*ast*/);
static gd* ecw(bvp* hmj /*ast*/);
static gd* ecy(ecz* hmm /*ast*/);
static void hmp(ecz* hmq);
static ecz* hmr(ecz* hms);
static Array_<uint8_t>* hmu(ecz* hmv);
static ecz* hnj(ecz* hnk, Array_<uint8_t>* hnl, int64_t* hnm);
static gd* edb(edc* hno /*ast*/);
static void hnr(edc* hns);
static edc* hnt(edc* hnu);
static Array_<uint8_t>* hnw(edc* hnx);
static edc* hol(edc* hom, Array_<uint8_t>* hon, int64_t* hoo);
static gd* ede(edf* hoq /*ast*/);
static void hot(edf* hou);
static edf* hov(edf* how);
static Array_<uint8_t>* hoy(edf* hoz);
static edf* hpn(edf* hpo, Array_<uint8_t>* hpp, int64_t* hpq);
static gd* edh(edi* hps /*ast*/);
static void hsa(edi* hsb);
static edi* hsc(edi* hsd);
static Array_<uint8_t>* hsf(edi* hsg);
static edi* hsu(edi* hsv, Array_<uint8_t>* hsw, int64_t* hsx);
static void hsz(eez* hta);
static eez* htb(eez* htc);
static Array_<uint8_t>* hte(eez* htf);
static eez* htr(eez* hts, Array_<uint8_t>* htt, int64_t* htu);
static void efa(bgi* htw /*ast*/);
static ge* efy(cjh* htz /*ast*/, gc* hua /*retType*/, fw* hub /*parentFunc*/);
static ge* ega(cjl* hvm /*ast*/, gc* hvn /*retType*/, fw* hvo /*parentFunc*/);
static ge* egc(cjp* hwq /*ast*/, gc* hwr /*retType*/, fw* hws /*parentFunc*/);
static ge* ege(cjt* hwz /*ast*/, gc* hxa /*retType*/, fw* hxb /*parentFunc*/);
static ge* egg(btu* hxs /*ast*/, gc* hxt /*retType*/, fw* hxu /*parentFunc*/);
static ge* egi(cjy* hyn /*ast*/);
static ge* egk(btw* hys /*ast*/, gc* hyt /*retType*/, fw* hyu /*parentFunc*/);
static ge* egm(ckd* hyx /*ast*/, gc* hyy /*retType*/);
static ge* ego(buu* hzl /*ast*/);
static ge* egq(ge* iav /*ast*/, gc* iaw /*retType*/, fw* iax /*parentFunc*/);
static ge* egs(ge* ibc /*ast*/, gc* ibd /*retType*/, fw* ibe /*parentFunc*/);
static ge* egu(ckm* ibj /*ast*/);
static bool eha(gc* ibq /*type*/);
static void ibr(ehf* ibs);
static ehf* ibt(ehf* ibu);
static Array_<uint8_t>* ibw(ehf* ibx);
static ehf* ici(ehf* icj, Array_<uint8_t>* ick, int64_t* icl);
template<typename T_, typename C_> static void eht(T_ icn /*me_*/, Array_<int64_t>* ico /*type*/, C_ icp /*value*/);
static char16_t ehx(char16_t icq /*me_*/, int64_t icr /*n*/);
static void epf(gd* ics /*ast*/);
static bool esc(gc* iee /*type*/);
static Array_<char16_t>* ezb(gc* ief /*type*/);
static void fhu(gd* ieh /*ast*/);
static bool fka(gc* ift /*type*/);
static Array_<char16_t>* flb(gc* ifz /*type*/);
template<typename T_, typename R_> static R_ fnx(T_ igb /*me_*/, Array_<int64_t>* igc /*type*/);
static bool fqa(Array_<char16_t>* igd /*name*/);
static ge* fvx(int64_t igo /*row*/, int64_t igp /*col*/, fx* igq /*block_*/);
static ge* fvz();
static ge* fwb();
static ge* fwd();
static ge* fwf();
static ge* fwh();
static ge* fwj();
static ge* fwl();
static ge* fwn(int64_t iiu /*row*/, int64_t iiv /*col*/, fx* iiw /*block_*/);
static ge* fwp(int64_t ija /*row*/, int64_t ijb /*col*/, fx* ijc /*block_*/);
static ge* fwr(int64_t ijg /*row*/, int64_t ijh /*col*/);
static ge* fwt(int64_t ika /*row*/, int64_t ikb /*col*/, fx* ikc /*block_*/);
static ge* fwv(int64_t ila /*row*/, int64_t ilb /*col*/, fx* ilc /*block_*/);
static ge* fwx();
static ge* fwz(int64_t ima /*row*/, int64_t imb /*col*/);
static ge* fxb(int64_t imu /*row*/, int64_t imv /*col*/);
static ge* fxd(int64_t inl /*row*/, int64_t inm /*col*/, fx* inn /*block_*/);
static ge* fxf(int64_t ios /*row*/, int64_t iot /*col*/, fx* iou /*block_*/);
static ge* fxh();
static ge* fxj();
static ge* fxl();
static ge* fxn();
static ge* fxp();
static ge* fxr();
static ge* fxt();
static gd* fxy();
static char16_t fzi();
static uint64_t geh(edc* iqu /*ast*/, bqy* iqv /*enum_*/);
static void gep(ul* ire /*ast*/, fw** irf /*dtor*/, fw** irg /*copy*/, fw** irh /*toBin*/, fw** iri /*fromBin*/);
static void geq(ul* ivm /*ast*/, fw* ivn /*dtor*/, fw* ivo /*copy*/, fw* ivp /*toBin*/, fw* ivq /*fromBin*/);
static bool ggl(gc* jar /*type*/);
static bool ghb(gc* jas /*type*/);
static bool gkb(gc* jat /*type*/, bool jau /*lessOrGreater*/);
static int64_t glv(Array_<char16_t>* jaz /*s1*/, Array_<char16_t>* jba /*s2*/);
static uint64_t gpc(int64_t jbg /*size*/, uint64_t jbh /*n*/);
static Array_<char16_t>* hfd(gc* jbo /*type*/);
static bool hir(Array_<char16_t>** jdm /*member*/, gc* jdn /*type*/);
static gd* ial(List_<ge*>* jhu /*stats*/, gd* jhv /*ast*/, ga* jhw /*pos*/);
static void icw(ebq* jii /*ast*/);
static void icy(byb* jir /*ast*/);
static void ida(ebv* jko /*ast*/);
static void idc(eby* jkp /*ast*/);
static void ide(ecb* jlg /*ast*/);
static void idg(ece* jlk /*ast*/);
static void idi(ech* jma /*ast*/);
static void idk(eck* jmb /*ast*/);
static void idm(bux* jmc /*ast*/);
static void ido(ecp* jny /*ast*/);
static void idq(ecs* jnz /*ast*/);
static void ids(bvq* joi /*ast*/);
static void idu(bvp* joj /*ast*/);
static void idw(ecz* joy /*ast*/);
static void idy(edf* jpi /*ast*/);
static void iea(edi* jpo /*ast*/);
static void iec(gd* jpr /*ast*/);
static void iel(ebq* jqk /*ast*/);
static void ien(byb* jrj /*ast*/);
static void iep(ebv* jtu /*ast*/);
static void ier(eby* jtv /*ast*/);
static void iet(ecb* jul /*ast*/);
static void iev(ece* jvh /*ast*/);
static void iex(ech* jwi /*ast*/);
static void iez(eck* jwj /*ast*/);
static void ifb(bux* jwk /*ast*/);
static void ifd(ecp* jyo /*ast*/);
static void iff(ecs* jys /*ast*/);
static void ifh(bvq* jzb /*ast*/);
static void ifj(bvp* jzc /*ast*/);
static void ifl(ecz* jzr /*ast*/);
static void ifn(edf* kab /*ast*/);
static void ifp(edi* kag /*ast*/);
static void ifr(gd* kan /*ast*/);
template<typename T_, typename C_> static int64_t ign(T_ kbh /*me_*/, Array_<int64_t>* kbi /*type*/, C_ kbj /*item*/);
static void kbk(ihv* kbl);
static ihv* kbm(ihv* kbn);
static Array_<uint8_t>* kbp(ihv* kbq);
static ihv* kcc(ihv* kcd, Array_<uint8_t>* kce, int64_t* kcf);
static void kch(ihz* kci);
static ihz* kcj(ihz* kck);
static Array_<uint8_t>* kcm(ihz* kcn);
static ihz* kcz(ihz* kda, Array_<uint8_t>* kdb, int64_t* kdc);
static void kde(iic* kdf);
static iic* kdg(iic* kdh);
static Array_<uint8_t>* kdj(iic* kdk);
static iic* kdw(iic* kdx, Array_<uint8_t>* kdy, int64_t* kdz);
static void keb(iif* kec);
static iif* ked(iif* kee);
static Array_<uint8_t>* keg(iif* keh);
static iif* ket(iif* keu, Array_<uint8_t>* kev, int64_t* kew);
static void key(iii* kez);
static iii* kfa(iii* kfb);
static Array_<uint8_t>* kfd(iii* kfe);
static iii* kfq(iii* kfr, Array_<uint8_t>* kfs, int64_t* kft);
static void iil(fx* kfv /*ast*/);
static void iim(fx* kfy /*ast*/);
static btw* iio(ge** kgd /*outStat*/, int64_t* kge /*outTypeId*/, int64_t kgf /*typeId*/, fx* kgg /*block_*/);
static gb* ijj(ga* kig /*pos*/);
static bvp* imi(ga* kii /*pos*/, int64_t kij /*kind*/, uint64_t kik /*value*/);
static gd* iqb();
static fw* iur(ul* kja /*class_*/, Array_<char16_t>* kjb /*name*/);
static ecs* iwc(ul* kjs /*class_*/, gb* kjt /*arg*/, Array_<char16_t>* kju /*name*/);
static Array_<char16_t>* jqs(gc* kka /*type*/);
static gd* kip();
static List_<int64_t>* kke(gc* kky /*type*/);
static gd* kkn();
static void kla(gc* kmq /*type*/, List_<int64_t>* kmr /*output*/);
static gd* klc();
static gd* koa();
static gd* kom();
static gd* kpb();
static gd* kps();
static gd* krb();
static gd* krm();
static ecz* kue(ga* kxk /*pos*/, Array_<char16_t>* kxl /*value*/);
static char16_t kul(char16_t kxr /*c*/);
static void kyj(kwo* kyk);
static kwo* kyl(kwo* kym);
static Array_<uint8_t>* kyo(kwo* kyp);
static kwo* kza(kwo* kzb, Array_<uint8_t>* kzc, int64_t* kzd);
static gd* kws(int64_t kzf /*row*/, int64_t kzg /*col*/, char16_t kzh /*c*/);
static edf* kxb(ga* lcr /*pos*/, double lcs /*value*/);
static double lbg(Array_<char16_t>* lcw /*me_*/, bool* lcx /*success*/);
static uint64_t lcb(Array_<char16_t>* lcy /*me_*/, bool* lcz /*success*/);
static int64_t classTable_[152];
static int64_t argc_;
static char** argv_;
static int64_t m;
static bool s;
static bool x;
static Array_<char16_t>* y;
static bool af;
static Dict_<Array_<char16_t>*, fx*>* ah;
static Dict_<Array_<char16_t>*, int64_t>* ai;
static Queue_<fw*>* aj;
static Queue_<ul*>* ak;
static Array_<char16_t>* al;
static List_<Array_<char16_t>*>* am;
static List_<Array_<char16_t>*>* an;
static List_<Array_<char16_t>*>* ao;
static List_<Array_<char16_t>*>* ap;
static List_<un*>* aq;
static List_<gb*>* ar;
static List_<gb*>* as;
static List_<Array_<char16_t>*>* at;
static Array_<char16_t>* au;
static Array_<char16_t>* av;
static Array_<char16_t>* aw;
static Dict_<Array_<char16_t>*, bool>* ax;
static Array_<char16_t>* ay;
static Array_<char16_t>* az;
static Array_<char16_t>* ba;
static Array_<Array_<char16_t>*>* bb;
static Dict_<Array_<char16_t>*, fx*>* bc;
static Dict_<Array_<char16_t>*, fx*>* bd;
static auz* be;
static Array_<char16_t>* bf;
static Stack_<fx*>* bg;
static List_<avl*>* bh;
static Queue_<fw*>* bi;
static Queue_<ul*>* bj;
static Array_<char16_t>* bk;
static List_<Array_<char16_t>*>* bl;
static List_<va*>* bm;
static List_<gb*>* bn;
static List_<gb*>* bo;
static bool ct;
static bool dp;
static int64_t ec;
static int64_t en;
static int64_t fp;
static int64_t uo;
static int64_t avc;
static int64_t avd;
static char16_t ave;
static char16_t avf;
static bool avg;
static int64_t avh;
fz::fz(): Class_(){
Y = 0;
kx(this);
}
int64_t fz::cmp_(Class_* t){
fz* u = reinterpret_cast<fz*>(t);
return lb(this, u);
}
Class_* fz::copy_(Class_* t){
return le(this);
}
fy::fy(): fz(), lw(){
Y = 2;
}
Class_* fy::copy_(Class_* t){
return lt(this);
}
ga::ga(): fz(), hk(), hl(), hm(){
Y = 6;
}
Class_* ga::copy_(Class_* t){
return mo(this);
}
fx::fx(): fy(), ne(), nf(), ng(), nh(), ni(), nj(), nk(), no(){
Y = 4;
}
int64_t fx::cmp_(Class_* t){
fx* u = reinterpret_cast<fx*>(t);
return mg(this, u);
}
Class_* fx::copy_(Class_* t){
return nl(this);
}
gc::gc(): fx(){
Y = 12;
}
Class_* gc::copy_(Class_* t){
return oi(this);
}
gd::gd(): fx(), pf(), pj(){
Y = 14;
}
Class_* gd::copy_(Class_* t){
return pg(this);
}
gb::gb(): fx(), qk(), ql(), qf(), qg(){
Y = 10;
}
Class_* gb::copy_(Class_* t){
return qh(this);
}
ge::ge(): fx(){
Y = 16;
}
Class_* ge::copy_(Class_* t){
return rj(this);
}
fw::fw(): fx(), sm(), sf(), sg(), sh(), si(){
Y = 8;
}
Class_* fw::copy_(Class_* t){
return sj(this);
}
gj::gj(): fz(), gk(){
Y = 18;
}
Class_* gj::copy_(Class_* t){
return tl(this);
}
kl::kl(): fz(), km(){
Y = 20;
}
int64_t kl::cmp_(Class_* t){
kl* u = reinterpret_cast<kl*>(t);
return atm(this, u);
}
Class_* kl::copy_(Class_* t){
return atu(this);
}
um::um(): fz(), azq(), azr(), azl(), azm(){
Y = 24;
}
Class_* um::copy_(Class_* t){
return azn(this);
}
ul::ul(): fx(), bag(){
Y = 22;
}
Class_* ul::copy_(Class_* t){
return bah(this);
}
un::un(): fz(), bbe(), bbf(){
Y = 26;
}
Class_* un::copy_(Class_* t){
return bbg(this);
}
va::va(): fz(), bie(), bif(){
Y = 28;
}
Class_* va::copy_(Class_* t){
return big(this);
}
auz::auz(): fz(), bne(), bov(), bow(), box(){
Y = 30;
}
Class_* auz::copy_(Class_* t){
return bos(this);
}
avl::avl(): fz(), awk(), axf(){
Y = 34;
}
Class_* avl::copy_(Class_* t){
return brk(this);
}
avk::avk(): fx(), aza(), awd(){
Y = 32;
}
Class_* avk::copy_(Class_* t){
return brz(this);
}
bby::bby(): fy(), bdy(), byz(), bzc(), bft(), bca(), bzf(), bzg(){
Y = 36;
}
Class_* bby::copy_(Class_* t){
return bzj(this);
}
bgi::bgi(): fx(), bgk(){
Y = 38;
}
Class_* bgi::copy_(Class_* t){
return cmm(this);
}
bhq::bhq(): fz(), cnr(){
Y = 40;
}
Class_* bhq::copy_(Class_* t){
return cpg(this);
}
biw::biw(): fy(), bjm(), cqp(), biy(){
Y = 42;
}
Class_* biw::copy_(Class_* t){
return cqt(this);
}
bqp::bqp(): fx(), brf(){
Y = 44;
}
Class_* bqp::copy_(Class_* t){
return dit(this);
}
bqs::bqs(): fx(), djp(){
Y = 46;
}
Class_* bqs::copy_(Class_* t){
return djs(this);
}
bqy::bqy(): fx(), dml(){
Y = 48;
}
Class_* bqy::copy_(Class_* t){
return dnn(this);
}
btv::btv(): ge(), buf(){
Y = 50;
}
Class_* btv::copy_(Class_* t){
return doy(this);
}
btw::btw(): btv(), bui(){
Y = 54;
}
Class_* btw::copy_(Class_* t){
return dpv(this);
}
bty::bty(): fz(), bvu(), bvz(){
Y = 58;
}
Class_* bty::copy_(Class_* t){
return dqt(this);
}
btx::btx(): ge(), bvh(), bvk(){
Y = 56;
}
Class_* btx::copy_(Class_* t){
return dri(this);
}
btu::btu(): btv(), buj(), buk(), bun(){
Y = 52;
}
Class_* btu::copy_(Class_* t){
return dsg(this);
}
bud::bud(): gc(), bue(){
Y = 60;
}
Class_* bud::copy_(Class_* t){
return dtg(this);
}
buu::buu(): ge(), bve(){
Y = 62;
}
Class_* buu::copy_(Class_* t){
return dus(this);
}
buy::buy(): fz(), bwm(), bwi(), bwj(){
Y = 66;
}
Class_* buy::copy_(Class_* t){
return dvp(this);
}
bux::bux(): gd(), bvd(), bva(){
Y = 64;
}
Class_* bux::copy_(Class_* t){
return dwf(this);
}
bvq::bvq(): gd(){
Y = 68;
}
Class_* bvq::copy_(Class_* t){
return dxi(this);
}
bvp::bvp(): bvq(), bvr(){
Y = 70;
}
Class_* bvp::copy_(Class_* t){
return dyg(this);
}
byb::byb(): gd(), byc(), byf(), byg(){
Y = 72;
}
Class_* byb::copy_(Class_* t){
return edq(this);
}
caj::caj(): gc(){
Y = 74;
}
Class_* caj::copy_(Class_* t){
return eio(this);
}
cai::cai(): caj(), cak(){
Y = 76;
}
Class_* cai::copy_(Class_* t){
return ejk(this);
}
cam::cam(): gc(), can(){
Y = 78;
}
Class_* cam::copy_(Class_* t){
return ekh(this);
}
car::car(): fz(), cbg(), cbi(){
Y = 82;
}
Class_* car::copy_(Class_* t){
return ele(this);
}
caq::caq(): caj(), elx(), elt(), cay(), cat(){
Y = 80;
}
Class_* caq::copy_(Class_* t){
return elu(this);
}
cbn::cbn(): caj(), cbq(), cbs(){
Y = 84;
}
Class_* cbn::copy_(Class_* t){
return emv(this);
}
cby::cby(): caj(), cbz(), cca(){
Y = 86;
}
Class_* cby::copy_(Class_* t){
return ent(this);
}
cji::cji(): ge(), epl(), epm(){
Y = 90;
}
Class_* cji::copy_(Class_* t){
return epu(this);
}
cjh::cjh(): btv(), epa(), epc(), epi(), epo(){
Y = 88;
}
Class_* cjh::copy_(Class_* t){
return eqs(this);
}
cjm::cjm(): ge(), esj(), esx(){
Y = 94;
}
Class_* cjm::copy_(Class_* t){
return eud(this);
}
cjl::cjl(): btv(), esb(), esf(), esz(){
Y = 92;
}
Class_* cjl::copy_(Class_* t){
return evb(this);
}
cjq::cjq(): btv(){
Y = 96;
}
Class_* cjq::copy_(Class_* t){
return ewy(this);
}
cjp::cjp(): cjq(), ewe(), ewm(), ewg(){
Y = 98;
}
Class_* cjp::copy_(Class_* t){
return exv(this);
}
cjt::cjt(): cjq(), ezd(), ezc(), eze(), ezm(){
Y = 100;
}
Class_* cjt::copy_(Class_* t){
return ezt(this);
}
cjy::cjy(): ge(), fcd(){
Y = 102;
}
Class_* cjy::copy_(Class_* t){
return fcg(this);
}
ckd::ckd(): ge(), fdj(){
Y = 104;
}
Class_* ckd::copy_(Class_* t){
return fdo(this);
}
ckm::ckm(): ge(), fex(){
Y = 106;
}
Class_* ckm::copy_(Class_* t){
return ffa(this);
}
dhf::dhf(): caj(){
Y = 108;
}
Class_* dhf::copy_(Class_* t){
return frl(this);
}
ebq::ebq(): gd(), ggi(), ggc(){
Y = 110;
}
Class_* ebq::copy_(Class_* t){
return ghs(this);
}
ebv::ebv(): gd(), grg(), grj(), grm(){
Y = 112;
}
Class_* ebv::copy_(Class_* t){
return gsf(this);
}
eby::eby(): gd(), gth(){
Y = 114;
}
Class_* eby::copy_(Class_* t){
return gtq(this);
}
ecb::ecb(): gd(), gus(), gvb(){
Y = 116;
}
Class_* ecb::copy_(Class_* t){
return gvo(this);
}
ece::ece(): gd(), gwx(), gwp(), gws(){
Y = 118;
}
Class_* ece::copy_(Class_* t){
return gzu(this);
}
ech::ech(): gd(), haw(), hbc(){
Y = 120;
}
Class_* ech::copy_(Class_* t){
return hbg(this);
}
eck::eck(): gd(), hch(), hcm(), hcn(){
Y = 122;
}
Class_* eck::copy_(Class_* t){
return hcq(this);
}
ecp::ecp(): gd(), hfz(), hge(){
Y = 124;
}
Class_* ecp::copy_(Class_* t){
return hgl(this);
}
ecs::ecs(): gd(), heh(), hhx(), hik(){
Y = 126;
}
Class_* ecs::copy_(Class_* t){
return hlh(this);
}
ecz::ecz(): bvq(), glw(){
Y = 128;
}
Class_* ecz::copy_(Class_* t){
return hmr(this);
}
edc::edc(): bvq(), gki(){
Y = 130;
}
Class_* edc::copy_(Class_* t){
return hnt(this);
}
edf::edf(): bvq(), ggy(){
Y = 132;
}
Class_* edf::copy_(Class_* t){
return hov(this);
}
edi::edi(): gd(), heq(){
Y = 134;
}
Class_* edi::copy_(Class_* t){
return hsc(this);
}
eez::eez(): ge(), efb(){
Y = 136;
}
Class_* eez::copy_(Class_* t){
return htb(this);
}
ehf::ehf(): gc(){
Y = 138;
}
Class_* ehf::copy_(Class_* t){
return ibt(this);
}
ihv::ihv(): ge(), ihw(){
Y = 140;
}
Class_* ihv::copy_(Class_* t){
return kbm(this);
}
ihz::ihz(): ge(), iia(){
Y = 142;
}
Class_* ihz::copy_(Class_* t){
return kcj(this);
}
iic::iic(): ge(), iid(){
Y = 144;
}
Class_* iic::copy_(Class_* t){
return kdg(this);
}
iif::iif(): ge(), iig(){
Y = 146;
}
Class_* iif::copy_(Class_* t){
return ked(this);
}
iii::iii(): ge(), iij(){
Y = 148;
}
Class_* iii::copy_(Class_* t){
return kfa(this);
}
kwo::kwo(): gc(){
Y = 150;
}
Class_* kwo::copy_(Class_* t){
return kyl(this);
}
// $
static void a(){
int64_t c = 0; // $
try{
try{
(e)();
(f)();
(g)();
(i)();
(j)();
}catch(int64_t c){
if((0LL) <= c && c <= (4294967295LL)){
(l)((c));
}
else{
throw;
}
}
}
catch(...){
(i)();
(j)();
throw;
}
}
// _init
static void e(){
}
// _initVars
static void f(){
(m) = (0LL);
}
// main
static void g(){
if(!((o)())){
(q)((1LL));
return;
}
if(s){
(u)((((new Array_<char16_t>(28, u'\u004B', u'\u0075', u'\u0069', u'\u006E', u'\u0020', u'\u0050', u'\u0072', u'\u006F', u'\u0067', u'\u0072', u'\u0061', u'\u006D', u'\u006D', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u004C', u'\u0061', u'\u006E', u'\u0067', u'\u0075', u'\u0061', u'\u0067', u'\u0065', u'\u0020', u'\u0076', u'\u002E'))->Cat(v<int64_t>((2019LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<int64_t>((10LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<int64_t>((17LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))))));
(u)((new Array_<char16_t>(14, u'\u0028', u'\u0043', u'\u0029', u'\u004B', u'\u0075', u'\u0069', u'\u006E', u'\u0061', u'\u002D', u'\u0063', u'\u0068', u'\u0061', u'\u006E', u'\u000A')));
(q)((0LL));
return;
}
if((x) || (eqAddr_((y), (nullptr)))){
(u)((new Array_<char16_t>(128, u'\u0055', u'\u0073', u'\u0061', u'\u0067', u'\u0065', u'\u003A', u'\u0020', u'\u006B', u'\u0075', u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0020', u'\u005B', u'\u002D', u'\u0069', u'\u0020', u'\u0069', u'\u006E', u'\u0070', u'\u0075', u'\u0074', u'\u002E', u'\u006B', u'\u006E', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u006F', u'\u0020', u'\u006F', u'\u0075', u'\u0074', u'\u0070', u'\u0075', u'\u0074', u'\u002E', u'\u006B', u'\u006E', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0073', u'\u0020', u'\u0027', u'\u0073', u'\u0079', u'\u0073', u'\u0027', u'\u0020', u'\u0064', u'\u0069', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006F', u'\u0072', u'\u0079', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0063', u'\u0020', u'\u0069', u'\u0063', u'\u006F', u'\u006E', u'\u002E', u'\u0069', u'\u0063', u'\u006F', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0065', u'\u0020', u'\u0065', u'\u006E', u'\u0076', u'\u0069', u'\u0072', u'\u006F', u'\u006E', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0061', u'\u0020', u'\u0061', u'\u0070', u'\u0070', u'\u0063', u'\u006F', u'\u0064', u'\u0065', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0072', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0068', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0076', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0071', u'\u005D', u'\u000A')));
(q)((0LL));
return;
}
if((ab)()){
(ad)((196609LL), (nullptr), (nullptr));
(q)((0LL));
return;
}
if(!(af)){
(ad)((196610LL), (nullptr), (nullptr));
}
(q)((1LL));
}
// _finVars
static void i(){
(ah) = (nullptr);
(ai) = (nullptr);
(aj) = (nullptr);
(ak) = (nullptr);
(al) = (nullptr);
(am) = (nullptr);
(an) = (nullptr);
(ao) = (nullptr);
(ap) = (nullptr);
(aq) = (nullptr);
(ar) = (nullptr);
(as) = (nullptr);
(at) = (nullptr);
(y) = (nullptr);
(au) = (nullptr);
(av) = (nullptr);
(aw) = (nullptr);
(ax) = (nullptr);
(ay) = (nullptr);
(az) = (nullptr);
(ba) = (nullptr);
(bb) = (nullptr);
(bc) = (nullptr);
(bd) = (nullptr);
(be) = (nullptr);
(bf) = (nullptr);
(bg) = (nullptr);
(bh) = (nullptr);
(bi) = (nullptr);
(bj) = (nullptr);
(bk) = (nullptr);
(bl) = (nullptr);
(bm) = (nullptr);
(bn) = (nullptr);
(bo) = (nullptr);
}
// _fin
static void j(){
}
// _err
static void l(int64_t bp /*excpt*/){
}
// acquireOption
static bool o(){
Array_<Array_<char16_t>*>* bq = nullptr; // cmdLines
int64_t bv = 0;
Array_<char16_t>* bx = nullptr; // cmdLine
char16_t cc = 0;
Array_<char16_t>* cx = nullptr; // envStr
Array_<char16_t>* dk = nullptr; // appCodeStr
Array_<char16_t>* ds = nullptr; // extra
Array_<char16_t>* ef = nullptr;
bool er = false; // success
int64_t bw = 0;
(bq) = ((br)());
(ax) = (new Dict_<Array_<char16_t>*, bool>());
for(bv = (0LL), bw = (((bq)->Len()) - (1LL)); bv <= bw; bv += (1LL)){
(bx) = ((bq)->At(bv));
if((((bx)->Len()) == (2LL)) && (((bx)->At(0LL)) == (u'\u002D'))){
switch((bx)->At(1LL)){
case u'\u0069':
if(!((cf)((&y), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u006F':
if(!((cf)((&au), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0073':
if(!((cf)((&av), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0063':
if(!((cf)((&aw), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0072':
if(!((cs)((&ct), (cc)))){
return false;
}
break;
case u'\u0065':
if(!((cf)((&cx), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0068':
if(!((cs)((&x), (cc)))){
return false;
}
break;
case u'\u0076':
if(!((cs)((&s), (cc)))){
return false;
}
break;
case u'\u0071':
if(!((cs)((&af), (cc)))){
return false;
}
break;
case u'\u0061':
if(!((cf)((&dk), (bq), (&bv), (cc)))){
return false;
}
break;
case u'\u0064':
if(!((cs)((&dp), (cc)))){
return false;
}
break;
case u'\u0078':
(ds) = (nullptr);
if(!((cf)((&ds), (bq), (&bv), (cc)))){
return false;
}
dv<Dict_<Array_<char16_t>*, bool>*, Array_<char16_t>*, bool>((ax), (new Array_<int64_t>(1, (0LL))), (ds), (true));
break;
default:
(ad)((2LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(1, u'\u002D'))->Cat(v<char16_t>((cc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
break;
}
}
else{
(ad)((2LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
}
}
if(eqAddr_((y), (nullptr))){
return true;
}
if(eqAddr_((cx), (nullptr))){
(ec) = (0LL);
}
else{
ef = cx;
if(cmp_(ef, (new Array_<char16_t>(3, u'\u0063', u'\u0075', u'\u0069'))) == 0){
(ec) = (0LL);
}
else if(cmp_(ef, (new Array_<char16_t>(3, u'\u0077', u'\u006E', u'\u0064'))) == 0){
(ec) = (1LL);
}
else if(cmp_(ef, (new Array_<char16_t>(3, u'\u0077', u'\u0065', u'\u0062'))) == 0){
(ec) = (2LL);
}
else if(cmp_(ef, (new Array_<char16_t>(3, u'\u0063', u'\u0070', u'\u0070'))) == 0){
(ec) = (3LL);
}
else{(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(2, u'\u002D', u'\u0065')))));
}
}
if(eqAddr_((dk), (nullptr))){
(en) = ((eo)((1LL), (4294967295LL)));
}
else{
(en) = ((eq)((dk), (&er)));
if(!(er)){
(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(2, u'\u002D', u'\u0061')))));
return false;
}
}
if(eqAddr_((au), (nullptr))){
(au) = (((ew)((y)))->Cat(new Array_<char16_t>(3, u'\u006F', u'\u0075', u'\u0074')));
}
else{
(au) = ((ey)((au)));
}
if(eqAddr_((av), (nullptr))){
(av) = (new Array_<char16_t>(4, u'\u0073', u'\u0079', u'\u0073', u'\u002F'));
}
if(eqAddr_((aw), (nullptr))){
(aw) = ((av)->Cat(new Array_<char16_t>(11, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u002E', u'\u0069', u'\u0063', u'\u006F')));
}
(ay) = ((ew)((y)));
(az) = ((ey)(((fd)((y)))));
(ba) = ((ew)((au)));
if(cmp_(((ff)((y))), (new Array_<char16_t>(2, u'\u006B', u'\u006E'))) != 0){
(ad)((3LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (az))));
}
return true;
}
// exitCode
static void q(int64_t fh /*code*/){
if(((fh) < (0LL)) || ((4294967295LL) < (fh))){
throw 3910598662LL;
}
}
// print
static void u(Array_<char16_t>* fm /*str*/){
std::u16string s_ = fm->B;
const std::string& t_ = utf16ToUtf8_(s_);
std::cout << t_ << std::flush;
}
// _toStr
template<typename T_> static Array_<char16_t>* v(T_ fn /*me_*/, Array_<int64_t>* fo /*type*/){
return toStr_(fn);
}
// build
static bool ab(){
int64_t fq = 0; // beginTime
Dict_<Array_<char16_t>*, fx*>* fs = nullptr; // asts
fw* fu = nullptr; // entry
Array_<char16_t>* gh = nullptr; // resDir
gj* gi = nullptr; // resFiles
int64_t gr = 0;
(fp) = (0LL);
(fq) = ((fr)());
(ad)((196611LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((fr)()) - (fq))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
(fs) = ((ft)());
(ad)((196612LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((fr)()) - (fq))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
(fu) = ((fv)((fs)));
(ad)((196613LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((fr)()) - (fq))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
if((fp) > (0LL)){
return false;
}
(gh) = ((ay)->Cat(new Array_<char16_t>(4, u'\u0072', u'\u0065', u'\u0073', u'\u002F')));
(gi) = (new gj());
((gi)->gk) = (new List_<Array_<char16_t>*>());
if((gm)((gh))){
(go)((gh), (true), (gp), (gi));
}
switch(ec){
case 3LL:
if(!((gu)((fu), ((gi)->gk)))){
return false;
}
break;
case 2LL:
if(!((gy)((fu), ((gi)->gk)))){
return false;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(ad)((196614LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((fr)()) - (fq))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
return true;
}
// err
static void ad(int64_t hb /*id*/, ga* hc /*pos*/, Array_<Array_<char16_t>*>* hd /*args*/){
Array_<char16_t>* hg = nullptr; // msg
if(((hb) < (196608LL)) && ((fp) >= (100LL))){
return;
}
(hg) = ((hh)((hb), (hd)));
(u)(((v<uint32_t>((static_cast<uint32_t>(hb)), (new Array_<int64_t>(1, (0LL)))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u0020'))));
if(!eqAddr_((hc), (nullptr))){
(u)((((new Array_<char16_t>(1, u'\u005B'))->Cat(v<Array_<char16_t>*>(((hc)->hk), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003A', u'\u0020'))->Cat(v<int64_t>(((hc)->hl), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<int64_t>(((hc)->hm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u005D'))))));
}
(u)(((hg)->Cat(new Array_<char16_t>(1, u'\u000A'))));
if((hb) < (196608LL)){
(fp) = ((fp) + (1LL));
}
}
// cmdLine
static Array_<Array_<char16_t>*>* br(){
Array_<Array_<char16_t>*>* a_ = new Array_<Array_<char16_t>*>();
a_->L = argc_;
a_->B = new Array_<char16_t>*[static_cast<size_t>(argc_)];
for (int64_t i_ = 0; i_ < argc_; i_++){
std::string s_ = argv_[i_];
const std::u16string t_ = utf8ToUtf16_(s_);
a_->B[i_] = new Array_<char16_t>();
a_->B[i_]->L = static_cast<int64_t>(t_.size());
a_->B[i_]->B = new char16_t[t_.size() + 1];
std::memcpy(a_->B[i_]->B, t_.c_str(), sizeof(char16_t) * (t_.size() + 1));
}
return a_;
}
// getArg1
static bool cf(Array_<char16_t>** hq /*out*/, Array_<Array_<char16_t>*>* hr /*cmdLines*/, int64_t* hs /*idx*/, char16_t ht /*option*/){
if((!eqAddr_((*hq), (nullptr))) || (((*hs) + (1LL)) >= ((hr)->Len()))){
(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(1, u'\u002D'))->Cat(v<char16_t>((ht), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
}
(*hq) = ((hr)->At((*hs) + (1LL)));
(*hs) = ((*hs) + (1LL));
return true;
}
// getArg0
static bool cs(bool* hx /*out*/, char16_t hy /*option*/){
if((*hx) != (false)){
(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(1, u'\u002D'))->Cat(v<char16_t>((hy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
}
(*hx) = (true);
return true;
}
// _addDict
template<typename T_, typename K_, typename V_> static void dv(T_ ib /*me_*/, Array_<int64_t>* ic /*type*/, K_ id /*key*/, V_ ie /*item*/){
ib->Add(id, ie);
}
// rnd
static int64_t eo(int64_t ig /*min*/, int64_t ih /*max*/){
return rnd_(ig, ih);
}
// _toInt
static int64_t eq(Array_<char16_t>* ii /*me_*/, bool* ij /*success*/){
std::u16string s_ = ii->B;
const std::string& t_ = utf16ToUtf8_(s_);
try{
size_t s_;
int64_t v_ = t_.size() > 2 && t_[0] == '0' && t_[1] == 'x' ? std::stoll(t_, &s_, 16) : std::stoull(t_, &s_);
if(s_ == t_.size()){
*ij = true;
return v_;
}else{
*ij = false;
return 0;
}
}catch(...){
*ij = false;
return 0;
}
}
// dir
static Array_<char16_t>* ew(Array_<char16_t>* ik /*path*/){
int64_t il = 0; // p
Array_<char16_t>* ir = nullptr; // r
int64_t iv = 0;
int64_t iw = 0;
if(!(!eqAddr_((ik), (nullptr)))){
throw 0xE9170000U;
}
(il) = (((ik)->Len()) - (1LL));
while((((il) >= (0LL)) && (((ik)->At(il)) != (u'\u002F'))) && (((ik)->At(il)) != (u'\u005C'))){
(il) = ((il) - (1LL));
}
if((il) < (0LL)){
return new Array_<char16_t>(2, u'\u002E', u'\u002F');
}
else{
(ir) = (newArray_<char16_t, Array_<char16_t>*>(1, ((il) + (1LL))));
for(iv = (0LL), iw = (il); iv <= iw; iv += (1LL)){
((ir)->At(iv)) = ((((ik)->At(iv)) == (u'\u005C')) ? (u'\u002F') : ((ik)->At(iv)));
}
return ir;
}
}
// delExt
static Array_<char16_t>* ey(Array_<char16_t>* ix /*path*/){
int64_t iy = 0; // p
Array_<char16_t>* jd = nullptr; // r
int64_t jh = 0;
int64_t ji = 0;
if(!(!eqAddr_((ix), (nullptr)))){
throw 0xE9170000U;
}
(iy) = (((ix)->Len()) - (1LL));
while(((((iy) >= (0LL)) && (((ix)->At(iy)) != (u'\u002F'))) && (((ix)->At(iy)) != (u'\u005C'))) && (((ix)->At(iy)) != (u'\u002E'))){
(iy) = ((iy) - (1LL));
}
if(((iy) < (0LL)) || (((ix)->At(iy)) != (u'\u002E'))){
return ix;
}
(jd) = (newArray_<char16_t, Array_<char16_t>*>(1, (iy)));
for(jh = (0LL), ji = ((iy) - (1LL)); jh <= ji; jh += (1LL)){
((jd)->At(jh)) = ((((ix)->At(jh)) == (u'\u005C')) ? (u'\u002F') : ((ix)->At(jh)));
}
return jd;
}
// fileName
static Array_<char16_t>* fd(Array_<char16_t>* jj /*path*/){
int64_t jk = 0; // p
Array_<char16_t>* jq = nullptr; // r
int64_t ju = 0;
int64_t jv = 0;
if(!(!eqAddr_((jj), (nullptr)))){
throw 0xE9170000U;
}
(jk) = (((jj)->Len()) - (1LL));
while((((jk) >= (0LL)) && (((jj)->At(jk)) != (u'\u002F'))) && (((jj)->At(jk)) != (u'\u005C'))){
(jk) = ((jk) - (1LL));
}
if((jk) < (0LL)){
return jj;
}
(jk) = ((jk) + (1LL));
(jq) = (newArray_<char16_t, Array_<char16_t>*>(1, (((jj)->Len()) - (jk))));
for(ju = (0LL), jv = ((((jj)->Len()) - (jk)) - (1LL)); ju <= jv; ju += (1LL)){
((jq)->At(ju)) = ((jj)->At((jk) + (ju)));
}
return jq;
}
// ext
static Array_<char16_t>* ff(Array_<char16_t>* jw /*path*/){
int64_t jx = 0; // p
Array_<char16_t>* ke = nullptr; // r
int64_t ki = 0;
int64_t kj = 0;
if(!(!eqAddr_((jw), (nullptr)))){
throw 0xE9170000U;
}
(jx) = (((jw)->Len()) - (1LL));
while(((((jx) >= (0LL)) && (((jw)->At(jx)) != (u'\u002F'))) && (((jw)->At(jx)) != (u'\u005C'))) && (((jw)->At(jx)) != (u'\u002E'))){
(jx) = ((jx) - (1LL));
}
if(((jw)->At(jx)) != (u'\u002E')){
return new Array_<char16_t>(0);
}
else{
(jx) = ((jx) + (1LL));
(ke) = (newArray_<char16_t, Array_<char16_t>*>(1, (((jw)->Len()) - (jx))));
for(ki = (0LL), kj = ((((jw)->Len()) - (jx)) - (1LL)); ki <= kj; ki += (1LL)){
((ke)->At(ki)) = ((jw)->At((jx) + (ki)));
}
return ke;
}
}
// sysTime
static int64_t fr(){
return static_cast<int64_t>(std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::system_clock::now().time_since_epoch()).count());
}
// parse
static Dict_<Array_<char16_t>*, fx*>* ft(){
kl* kk = nullptr; // endFlag
(bc) = (new Dict_<Array_<char16_t>*, fx*>());
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bc), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u005C'))->Cat(az)), (nullptr));
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bc), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (nullptr));
(kk) = (new kl());
((kk)->km) = (false);
while(!((kk)->km)){
((kk)->km) = (true);
(bd) = (new Dict_<Array_<char16_t>*, fx*>());
ko<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bc), (new Array_<int64_t>(1, (0LL))), (kp), (kk));
(bc) = (bd);
}
return bc;
}
// analyze
static fw* fv(Dict_<Array_<char16_t>*, fx*>* kq /*asts*/){
fw* kr = nullptr; // mainFunc
(ah) = (kq);
(kr) = ((ks)());
if(eqAddr_((kr), (nullptr))){
return nullptr;
}
ko<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((kq), (new Array_<int64_t>(1, (0LL))), (kv), (nullptr));
return (kw)((kr));
}
// ctor
static void kx(fz* ky /*me*/){
}
// _dtor
static void kz(fz* la /*me*/){
}
// cmp
static int64_t lb(fz* lc /*me*/, fz* ld /*t*/){
throw 3910598660LL;
}
// _copy
static fz* le(fz* lf /*me*/){
fz* lg = nullptr;
(lg) = (new fz());
return as_<fz>(classTable_, (lg), 0);
}
// _toBin
static Array_<uint8_t>* lh(fz* li /*me*/){
Array_<uint8_t>* lj = nullptr;
(lj) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
return lj;
}
// _fromBin
static fz* lk(fz* ll /*me*/, Array_<uint8_t>* lm /*bin*/, int64_t* ln /*idx*/){
fz* lo = nullptr;
(lo) = (new fz());
return lo;
}
// toStr
static Array_<char16_t>* lp(fz* lq /*me*/){
return new Array_<char16_t>(0);
}
// _dtor
static void lr(fy* ls){
}
// _copy
static fy* lt(fy* lu){
fy* lv = nullptr;
(lv) = (new fy());
((lv)->lw) = ((lu)->lw);
return as_<fy>(classTable_, (lv), 2);
}
// _toBin
static Array_<uint8_t>* lx(fy* ly){
Array_<uint8_t>* lz = nullptr;
(lz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(lz) = ((lz)->Cat(toBin_((ly)->lw)));
return lz;
}
// _fromBin
static fy* mb(fy* mc, Array_<uint8_t>* md, int64_t* me){
fy* mf = nullptr;
(mf) = (new fy());
((mf)->lw) = (fromBin_<int64_t>((md), (*me)));
return mf;
}
// cmp
static int64_t mg(fx* mh /*me*/, fx* mi /*t*/){
uint64_t mj = 0; // meAddr
uint64_t ml = 0; // tAddr
(mj) = ((mk)((mh)));
(ml) = ((mk)((mi)));
return ((mj) > (ml)) ? (1LL) : (((mj) < (ml)) ? (-1LL) : (0LL));
}
// _dtor
static void mm(ga* mn){
((mn)->hk) = (nullptr);
}
// _copy
static ga* mo(ga* mp){
ga* mq = nullptr;
(mq) = (new ga());
((mq)->hk) = (copy_((mp)->hk));
((mq)->hl) = ((mp)->hl);
((mq)->hm) = ((mp)->hm);
return as_<ga>(classTable_, (mq), 6);
}
// _toBin
static Array_<uint8_t>* mr(ga* ms){
Array_<uint8_t>* mt = nullptr;
(mt) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(mt) = ((mt)->Cat(toBin_((ms)->hk)));
(mt) = ((mt)->Cat(toBin_((ms)->hl)));
(mt) = ((mt)->Cat(toBin_((ms)->hm)));
return mt;
}
// _fromBin
static ga* mx(ga* my, Array_<uint8_t>* mz, int64_t* na){
ga* nb = nullptr;
(nb) = (new ga());
((nb)->hk) = (fromBin_<Array_<char16_t>*>((mz), (*na)));
((nb)->hl) = (fromBin_<int64_t>((mz), (*na)));
((nb)->hm) = (fromBin_<int64_t>((mz), (*na)));
return nb;
}
// _dtor
static void nc(fx* nd){
((nd)->ne) = (nullptr);
((nd)->nf) = (nullptr);
((nd)->ng) = (nullptr);
((nd)->nh) = (nullptr);
((nd)->ni) = (nullptr);
((nd)->nj) = (nullptr);
((nd)->nk) = (nullptr);
}
// _copy
static fx* nl(fx* nm){
fx* nn = nullptr;
(nn) = (new fx());
((nn)->ne) = (copy_((nm)->ne));
((nn)->nf) = (copy_((nm)->nf));
((nn)->ng) = (copy_((nm)->ng));
((nn)->nh) = (copy_((nm)->nh));
((nn)->ni) = (copy_((nm)->ni));
((nn)->nj) = (copy_((nm)->nj));
((nn)->nk) = (copy_((nm)->nk));
((nn)->no) = ((nm)->no);
((nn)->lw) = ((nm)->lw);
return as_<fx>(classTable_, (nn), 4);
}
// _toBin
static Array_<uint8_t>* np(fx* nq){
Array_<uint8_t>* nr = nullptr;
(nr) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(nr) = ((nr)->Cat(toBin_((nq)->ne)));
(nr) = ((nr)->Cat(toBin_((nq)->nf)));
(nr) = ((nr)->Cat(toBin_((nq)->ng)));
(nr) = ((nr)->Cat(toBin_((nq)->nh)));
(nr) = ((nr)->Cat(toBin_((nq)->ni)));
(nr) = ((nr)->Cat(toBin_((nq)->nj)));
(nr) = ((nr)->Cat(toBin_((nq)->nk)));
(nr) = ((nr)->Cat(toBin_((nq)->no)));
(nr) = ((nr)->Cat(toBin_((nq)->lw)));
return nr;
}
// _fromBin
static fx* ob(fx* oc, Array_<uint8_t>* od, int64_t* oe){
fx* of = nullptr;
(of) = (new fx());
((of)->ne) = (fromBin_<ga*>((od), (*oe)));
((of)->nf) = (fromBin_<Array_<char16_t>*>((od), (*oe)));
((of)->ng) = (fromBin_<fx*>((od), (*oe)));
((of)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((od), (*oe)));
((of)->ni) = (fromBin_<Array_<char16_t>*>((od), (*oe)));
((of)->nj) = (fromBin_<fx*>((od), (*oe)));
((of)->nk) = (fromBin_<fy*>((od), (*oe)));
((of)->no) = (fromBin_<bool>((od), (*oe)));
((of)->lw) = (fromBin_<int64_t>((od), (*oe)));
return of;
}
// _dtor
static void og(gc* oh){
((oh)->ne) = (nullptr);
((oh)->nf) = (nullptr);
((oh)->ng) = (nullptr);
((oh)->nh) = (nullptr);
((oh)->ni) = (nullptr);
((oh)->nj) = (nullptr);
((oh)->nk) = (nullptr);
}
// _copy
static gc* oi(gc* oj){
gc* ok = nullptr;
(ok) = (new gc());
((ok)->ne) = (copy_((oj)->ne));
((ok)->nf) = (copy_((oj)->nf));
((ok)->ng) = (copy_((oj)->ng));
((ok)->nh) = (copy_((oj)->nh));
((ok)->ni) = (copy_((oj)->ni));
((ok)->nj) = (copy_((oj)->nj));
((ok)->nk) = (copy_((oj)->nk));
((ok)->no) = ((oj)->no);
((ok)->lw) = ((oj)->lw);
return as_<gc>(classTable_, (ok), 12);
}
// _toBin
static Array_<uint8_t>* ol(gc* om){
Array_<uint8_t>* on = nullptr;
(on) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(on) = ((on)->Cat(toBin_((om)->ne)));
(on) = ((on)->Cat(toBin_((om)->nf)));
(on) = ((on)->Cat(toBin_((om)->ng)));
(on) = ((on)->Cat(toBin_((om)->nh)));
(on) = ((on)->Cat(toBin_((om)->ni)));
(on) = ((on)->Cat(toBin_((om)->nj)));
(on) = ((on)->Cat(toBin_((om)->nk)));
(on) = ((on)->Cat(toBin_((om)->no)));
(on) = ((on)->Cat(toBin_((om)->lw)));
return on;
}
// _fromBin
static gc* oy(gc* oz, Array_<uint8_t>* pa, int64_t* pb){
gc* pc = nullptr;
(pc) = (new gc());
((pc)->ne) = (fromBin_<ga*>((pa), (*pb)));
((pc)->nf) = (fromBin_<Array_<char16_t>*>((pa), (*pb)));
((pc)->ng) = (fromBin_<fx*>((pa), (*pb)));
((pc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((pa), (*pb)));
((pc)->ni) = (fromBin_<Array_<char16_t>*>((pa), (*pb)));
((pc)->nj) = (fromBin_<fx*>((pa), (*pb)));
((pc)->nk) = (fromBin_<fy*>((pa), (*pb)));
((pc)->no) = (fromBin_<bool>((pa), (*pb)));
((pc)->lw) = (fromBin_<int64_t>((pa), (*pb)));
return pc;
}
// _dtor
static void pd(gd* pe){
((pe)->pf) = (nullptr);
((pe)->ne) = (nullptr);
((pe)->nf) = (nullptr);
((pe)->ng) = (nullptr);
((pe)->nh) = (nullptr);
((pe)->ni) = (nullptr);
((pe)->nj) = (nullptr);
((pe)->nk) = (nullptr);
}
// _copy
static gd* pg(gd* ph){
gd* pi = nullptr;
(pi) = (new gd());
((pi)->pf) = (copy_((ph)->pf));
((pi)->pj) = ((ph)->pj);
((pi)->ne) = (copy_((ph)->ne));
((pi)->nf) = (copy_((ph)->nf));
((pi)->ng) = (copy_((ph)->ng));
((pi)->nh) = (copy_((ph)->nh));
((pi)->ni) = (copy_((ph)->ni));
((pi)->nj) = (copy_((ph)->nj));
((pi)->nk) = (copy_((ph)->nk));
((pi)->no) = ((ph)->no);
((pi)->lw) = ((ph)->lw);
return as_<gd>(classTable_, (pi), 14);
}
// _toBin
static Array_<uint8_t>* pk(gd* pl){
Array_<uint8_t>* pm = nullptr;
(pm) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(pm) = ((pm)->Cat(toBin_((pl)->pf)));
(pm) = ((pm)->Cat(toBin_((pl)->pj)));
(pm) = ((pm)->Cat(toBin_((pl)->ne)));
(pm) = ((pm)->Cat(toBin_((pl)->nf)));
(pm) = ((pm)->Cat(toBin_((pl)->ng)));
(pm) = ((pm)->Cat(toBin_((pl)->nh)));
(pm) = ((pm)->Cat(toBin_((pl)->ni)));
(pm) = ((pm)->Cat(toBin_((pl)->nj)));
(pm) = ((pm)->Cat(toBin_((pl)->nk)));
(pm) = ((pm)->Cat(toBin_((pl)->no)));
(pm) = ((pm)->Cat(toBin_((pl)->lw)));
return pm;
}
// _fromBin
static gd* py(gd* pz, Array_<uint8_t>* qa, int64_t* qb){
gd* qc = nullptr;
(qc) = (new gd());
((qc)->pf) = (fromBin_<gc*>((qa), (*qb)));
((qc)->pj) = (fromBin_<int64_t>((qa), (*qb)));
((qc)->ne) = (fromBin_<ga*>((qa), (*qb)));
((qc)->nf) = (fromBin_<Array_<char16_t>*>((qa), (*qb)));
((qc)->ng) = (fromBin_<fx*>((qa), (*qb)));
((qc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((qa), (*qb)));
((qc)->ni) = (fromBin_<Array_<char16_t>*>((qa), (*qb)));
((qc)->nj) = (fromBin_<fx*>((qa), (*qb)));
((qc)->nk) = (fromBin_<fy*>((qa), (*qb)));
((qc)->no) = (fromBin_<bool>((qa), (*qb)));
((qc)->lw) = (fromBin_<int64_t>((qa), (*qb)));
return qc;
}
// _dtor
static void qd(gb* qe){
((qe)->qf) = (nullptr);
((qe)->qg) = (nullptr);
((qe)->ne) = (nullptr);
((qe)->nf) = (nullptr);
((qe)->ng) = (nullptr);
((qe)->nh) = (nullptr);
((qe)->ni) = (nullptr);
((qe)->nj) = (nullptr);
((qe)->nk) = (nullptr);
}
// _copy
static gb* qh(gb* qi){
gb* qj = nullptr;
(qj) = (new gb());
((qj)->qk) = ((qi)->qk);
((qj)->ql) = ((qi)->ql);
((qj)->qf) = (copy_((qi)->qf));
((qj)->qg) = (copy_((qi)->qg));
((qj)->ne) = (copy_((qi)->ne));
((qj)->nf) = (copy_((qi)->nf));
((qj)->ng) = (copy_((qi)->ng));
((qj)->nh) = (copy_((qi)->nh));
((qj)->ni) = (copy_((qi)->ni));
((qj)->nj) = (copy_((qi)->nj));
((qj)->nk) = (copy_((qi)->nk));
((qj)->no) = ((qi)->no);
((qj)->lw) = ((qi)->lw);
return as_<gb>(classTable_, (qj), 10);
}
// _toBin
static Array_<uint8_t>* qm(gb* qn){
Array_<uint8_t>* qo = nullptr;
(qo) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(qo) = ((qo)->Cat(toBin_((qn)->qk)));
(qo) = ((qo)->Cat(toBin_((qn)->ql)));
(qo) = ((qo)->Cat(toBin_((qn)->qf)));
(qo) = ((qo)->Cat(toBin_((qn)->qg)));
(qo) = ((qo)->Cat(toBin_((qn)->ne)));
(qo) = ((qo)->Cat(toBin_((qn)->nf)));
(qo) = ((qo)->Cat(toBin_((qn)->ng)));
(qo) = ((qo)->Cat(toBin_((qn)->nh)));
(qo) = ((qo)->Cat(toBin_((qn)->ni)));
(qo) = ((qo)->Cat(toBin_((qn)->nj)));
(qo) = ((qo)->Cat(toBin_((qn)->nk)));
(qo) = ((qo)->Cat(toBin_((qn)->no)));
(qo) = ((qo)->Cat(toBin_((qn)->lw)));
return qo;
}
// _fromBin
static gb* rc(gb* rd, Array_<uint8_t>* re, int64_t* rf){
gb* rg = nullptr;
(rg) = (new gb());
((rg)->qk) = (fromBin_<int64_t>((re), (*rf)));
((rg)->ql) = (fromBin_<bool>((re), (*rf)));
((rg)->qf) = (fromBin_<gc*>((re), (*rf)));
((rg)->qg) = (fromBin_<gd*>((re), (*rf)));
((rg)->ne) = (fromBin_<ga*>((re), (*rf)));
((rg)->nf) = (fromBin_<Array_<char16_t>*>((re), (*rf)));
((rg)->ng) = (fromBin_<fx*>((re), (*rf)));
((rg)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((re), (*rf)));
((rg)->ni) = (fromBin_<Array_<char16_t>*>((re), (*rf)));
((rg)->nj) = (fromBin_<fx*>((re), (*rf)));
((rg)->nk) = (fromBin_<fy*>((re), (*rf)));
((rg)->no) = (fromBin_<bool>((re), (*rf)));
((rg)->lw) = (fromBin_<int64_t>((re), (*rf)));
return rg;
}
// _dtor
static void rh(ge* ri){
((ri)->ne) = (nullptr);
((ri)->nf) = (nullptr);
((ri)->ng) = (nullptr);
((ri)->nh) = (nullptr);
((ri)->ni) = (nullptr);
((ri)->nj) = (nullptr);
((ri)->nk) = (nullptr);
}
// _copy
static ge* rj(ge* rk){
ge* rl = nullptr;
(rl) = (new ge());
((rl)->ne) = (copy_((rk)->ne));
((rl)->nf) = (copy_((rk)->nf));
((rl)->ng) = (copy_((rk)->ng));
((rl)->nh) = (copy_((rk)->nh));
((rl)->ni) = (copy_((rk)->ni));
((rl)->nj) = (copy_((rk)->nj));
((rl)->nk) = (copy_((rk)->nk));
((rl)->no) = ((rk)->no);
((rl)->lw) = ((rk)->lw);
return as_<ge>(classTable_, (rl), 16);
}
// _toBin
static Array_<uint8_t>* rm(ge* rn){
Array_<uint8_t>* ro = nullptr;
(ro) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ro) = ((ro)->Cat(toBin_((rn)->ne)));
(ro) = ((ro)->Cat(toBin_((rn)->nf)));
(ro) = ((ro)->Cat(toBin_((rn)->ng)));
(ro) = ((ro)->Cat(toBin_((rn)->nh)));
(ro) = ((ro)->Cat(toBin_((rn)->ni)));
(ro) = ((ro)->Cat(toBin_((rn)->nj)));
(ro) = ((ro)->Cat(toBin_((rn)->nk)));
(ro) = ((ro)->Cat(toBin_((rn)->no)));
(ro) = ((ro)->Cat(toBin_((rn)->lw)));
return ro;
}
// _fromBin
static ge* ry(ge* rz, Array_<uint8_t>* sa, int64_t* sb){
ge* sc = nullptr;
(sc) = (new ge());
((sc)->ne) = (fromBin_<ga*>((sa), (*sb)));
((sc)->nf) = (fromBin_<Array_<char16_t>*>((sa), (*sb)));
((sc)->ng) = (fromBin_<fx*>((sa), (*sb)));
((sc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((sa), (*sb)));
((sc)->ni) = (fromBin_<Array_<char16_t>*>((sa), (*sb)));
((sc)->nj) = (fromBin_<fx*>((sa), (*sb)));
((sc)->nk) = (fromBin_<fy*>((sa), (*sb)));
((sc)->no) = (fromBin_<bool>((sa), (*sb)));
((sc)->lw) = (fromBin_<int64_t>((sa), (*sb)));
return sc;
}
// _dtor
static void sd(fw* se){
((se)->sf) = (nullptr);
((se)->sg) = (nullptr);
((se)->sh) = (nullptr);
((se)->si) = (nullptr);
((se)->ne) = (nullptr);
((se)->nf) = (nullptr);
((se)->ng) = (nullptr);
((se)->nh) = (nullptr);
((se)->ni) = (nullptr);
((se)->nj) = (nullptr);
((se)->nk) = (nullptr);
}
// _copy
static fw* sj(fw* sk){
fw* sl = nullptr;
(sl) = (new fw());
((sl)->sm) = ((sk)->sm);
((sl)->sf) = (copy_((sk)->sf));
((sl)->sg) = (copy_((sk)->sg));
((sl)->sh) = (copy_((sk)->sh));
((sl)->si) = (copy_((sk)->si));
((sl)->ne) = (copy_((sk)->ne));
((sl)->nf) = (copy_((sk)->nf));
((sl)->ng) = (copy_((sk)->ng));
((sl)->nh) = (copy_((sk)->nh));
((sl)->ni) = (copy_((sk)->ni));
((sl)->nj) = (copy_((sk)->nj));
((sl)->nk) = (copy_((sk)->nk));
((sl)->no) = ((sk)->no);
((sl)->lw) = ((sk)->lw);
return as_<fw>(classTable_, (sl), 8);
}
// _toBin
static Array_<uint8_t>* sn(fw* so){
Array_<uint8_t>* sp = nullptr;
(sp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(sp) = ((sp)->Cat(toBin_((so)->sm)));
(sp) = ((sp)->Cat(toBin_((so)->sf)));
(sp) = ((sp)->Cat(toBin_((so)->sg)));
(sp) = ((sp)->Cat(toBin_((so)->sh)));
(sp) = ((sp)->Cat(toBin_((so)->si)));
(sp) = ((sp)->Cat(toBin_((so)->ne)));
(sp) = ((sp)->Cat(toBin_((so)->nf)));
(sp) = ((sp)->Cat(toBin_((so)->ng)));
(sp) = ((sp)->Cat(toBin_((so)->nh)));
(sp) = ((sp)->Cat(toBin_((so)->ni)));
(sp) = ((sp)->Cat(toBin_((so)->nj)));
(sp) = ((sp)->Cat(toBin_((so)->nk)));
(sp) = ((sp)->Cat(toBin_((so)->no)));
(sp) = ((sp)->Cat(toBin_((so)->lw)));
return sp;
}
// _fromBin
static fw* te(fw* tf, Array_<uint8_t>* tg, int64_t* th){
fw* ti = nullptr;
(ti) = (new fw());
((ti)->sm) = (fromBin_<int64_t>((tg), (*th)));
((ti)->sf) = (fromBin_<List_<Array_<char16_t>*>*>((tg), (*th)));
((ti)->sg) = (fromBin_<List_<gb*>*>((tg), (*th)));
((ti)->sh) = (fromBin_<gc*>((tg), (*th)));
((ti)->si) = (fromBin_<List_<ge*>*>((tg), (*th)));
((ti)->ne) = (fromBin_<ga*>((tg), (*th)));
((ti)->nf) = (fromBin_<Array_<char16_t>*>((tg), (*th)));
((ti)->ng) = (fromBin_<fx*>((tg), (*th)));
((ti)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((tg), (*th)));
((ti)->ni) = (fromBin_<Array_<char16_t>*>((tg), (*th)));
((ti)->nj) = (fromBin_<fx*>((tg), (*th)));
((ti)->nk) = (fromBin_<fy*>((tg), (*th)));
((ti)->no) = (fromBin_<bool>((tg), (*th)));
((ti)->lw) = (fromBin_<int64_t>((tg), (*th)));
return ti;
}
// _dtor
static void tj(gj* tk){
((tk)->gk) = (nullptr);
}
// _copy
static gj* tl(gj* tm){
gj* tn = nullptr;
(tn) = (new gj());
((tn)->gk) = (copy_((tm)->gk));
return as_<gj>(classTable_, (tn), 18);
}
// _toBin
static Array_<uint8_t>* to(gj* tp){
Array_<uint8_t>* tq = nullptr;
(tq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(tq) = ((tq)->Cat(toBin_((tp)->gk)));
return tq;
}
// _fromBin
static gj* ts(gj* tt, Array_<uint8_t>* tu, int64_t* tv){
gj* tw = nullptr;
(tw) = (new gj());
((tw)->gk) = (fromBin_<List_<Array_<char16_t>*>*>((tu), (*tv)));
return tw;
}
// exist
static bool gm(Array_<char16_t>* tx /*path*/){
return false;
}
// forEach
static bool go(Array_<char16_t>* ty /*path*/, bool tz /*recursion*/, ub ua /*callback*/, fz* uc /*data*/){
return false;
}
// searchResFiles
static bool gp(Array_<char16_t>* ud /*path*/, bool ue /*isDir*/, fz* uf /*data*/){
gj* ug = nullptr; // data2
(ug) = (as_<gj>(classTable_, (uf), 18));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((ug)->gk), (new Array_<int64_t>(1, (0LL))), (ud));
return true;
}
// output
static bool gu(fw* ui /*entry*/, List_<Array_<char16_t>*>* uj /*resFiles*/){
fw* ur = nullptr; // func_
ul* uv = nullptr; // class_
(aj) = (new Queue_<fw*>());
uk<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL))), (ui));
(ak) = (new Queue_<ul*>());
(al) = (new Array_<char16_t>(1, u'\u0061'));
(am) = (new List_<Array_<char16_t>*>());
(an) = (new List_<Array_<char16_t>*>());
(ao) = (new List_<Array_<char16_t>*>());
(ap) = (new List_<Array_<char16_t>*>());
(aq) = (new List_<un*>());
(ar) = (new List_<gb*>());
(as) = (new List_<gb*>());
(uo) = (0LL);
(at) = (new List_<Array_<char16_t>*>());
while((((aj)->Len()) > (0LL)) || (((ak)->Len()) > (0LL))){
while(((aj)->Len()) > (0LL)){
(ur) = (us<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL)))));
(ut)((ur));
}
while(((ak)->Len()) > (0LL)){
(uv) = (us<Queue_<ul*>*, ul*>((ak), (new Array_<int64_t>(1, (0LL)))));
(uw)((uv));
}
}
(ux)((uj));
return true;
}
// output
static bool gy(fw* uy /*entry*/, List_<Array_<char16_t>*>* uz /*resFiles*/){
fw* vd = nullptr; // func_
ul* vg = nullptr; // class_
(bi) = (new Queue_<fw*>());
uk<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL))), (uy));
(bj) = (new Queue_<ul*>());
(bk) = (new Array_<char16_t>(1, u'\u0061'));
(bl) = (new List_<Array_<char16_t>*>());
(bm) = (new List_<va*>());
(bn) = (new List_<gb*>());
(bo) = (new List_<gb*>());
while((((bi)->Len()) > (0LL)) || (((bj)->Len()) > (0LL))){
while(((bi)->Len()) > (0LL)){
(vd) = (us<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL)))));
(ve)((vd));
}
while(((bj)->Len()) > (0LL)){
(vg) = (us<Queue_<ul*>*, ul*>((bj), (new Array_<int64_t>(1, (0LL)))));
(vh)((vg));
}
}
(vi)((uz));
return true;
}
// get
static Array_<char16_t>* hh(int64_t vj /*id*/, Array_<Array_<char16_t>*>* vk /*args*/){
int64_t vm = 0;
int64_t vp = 0;
int64_t vu = 0;
int64_t vz = 0;
int64_t we = 0;
int64_t wj = 0;
int64_t wo = 0;
int64_t wt = 0;
int64_t wy = 0;
int64_t xd = 0;
int64_t xi = 0;
int64_t xn = 0;
int64_t xs = 0;
int64_t xx = 0;
int64_t yc = 0;
int64_t yh = 0;
int64_t ym = 0;
int64_t yr = 0;
int64_t yw = 0;
int64_t zb = 0;
int64_t zg = 0;
int64_t zl = 0;
int64_t zq = 0;
int64_t zv = 0;
int64_t aaa = 0;
int64_t aaf = 0;
int64_t aak = 0;
int64_t aap = 0;
int64_t aau = 0;
int64_t aaz = 0;
int64_t abe = 0;
int64_t abj = 0;
int64_t abo = 0;
int64_t abt = 0;
int64_t aby = 0;
int64_t acd = 0;
int64_t aci = 0;
int64_t acn = 0;
int64_t acs = 0;
int64_t acx = 0;
int64_t adc = 0;
int64_t adh = 0;
int64_t adm = 0;
int64_t adr = 0;
int64_t adw = 0;
int64_t aeb = 0;
int64_t aeg = 0;
int64_t ael = 0;
int64_t aeq = 0;
int64_t aev = 0;
int64_t afa = 0;
int64_t aff = 0;
int64_t afk = 0;
int64_t afp = 0;
int64_t afu = 0;
int64_t afz = 0;
int64_t age = 0;
int64_t agj = 0;
int64_t ago = 0;
int64_t agt = 0;
int64_t agy = 0;
int64_t ahd = 0;
int64_t ahi = 0;
int64_t ahn = 0;
int64_t ahs = 0;
int64_t ahx = 0;
int64_t aic = 0;
int64_t aih = 0;
int64_t aim = 0;
int64_t air = 0;
int64_t aiw = 0;
int64_t ajb = 0;
int64_t ajg = 0;
int64_t ajl = 0;
int64_t ajq = 0;
int64_t ajv = 0;
int64_t aka = 0;
int64_t akf = 0;
int64_t akk = 0;
int64_t akp = 0;
int64_t aku = 0;
int64_t akz = 0;
int64_t ale = 0;
int64_t alj = 0;
int64_t alo = 0;
int64_t alt = 0;
int64_t aly = 0;
int64_t amd = 0;
int64_t ami = 0;
int64_t amn = 0;
int64_t ams = 0;
int64_t amx = 0;
int64_t anc = 0;
int64_t ani = 0;
int64_t ann = 0;
int64_t ans = 0;
int64_t anx = 0;
int64_t aoc = 0;
int64_t aoh = 0;
int64_t aom = 0;
int64_t aor = 0;
int64_t aow = 0;
int64_t apb = 0;
int64_t apg = 0;
int64_t apl = 0;
int64_t apq = 0;
int64_t apv = 0;
int64_t aqa = 0;
int64_t aqf = 0;
int64_t aqk = 0;
int64_t aqp = 0;
int64_t aqu = 0;
int64_t aqz = 0;
int64_t are = 0;
int64_t arj = 0;
int64_t aro = 0;
int64_t art = 0;
int64_t ary = 0;
int64_t asd = 0;
int64_t asi = 0;
int64_t aso = 0;
int64_t ast = 0;
int64_t asy = 0;
int64_t atd = 0;
int64_t ati = 0;
switch(vj){
case 1LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(6, u'\u30AA', u'\u30D7', u'\u30B7', u'\u30E7', u'\u30F3', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u300D', u'\u306E', u'\u4F7F', u'\u308F', u'\u308C', u'\u65B9', u'\u304C', u'\u6B63', u'\u3057', u'\u304F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006F', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u002E'));
break;
}
break;
case 2LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u4E0D', u'\u660E', u'\u306A', u'\u30AA', u'\u30D7', u'\u30B7', u'\u30E7', u'\u30F3', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u6307', u'\u5B9A', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(20, u'\u0055', u'\u006E', u'\u0065', u'\u0078', u'\u0070', u'\u0065', u'\u0063', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u006F', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u003A', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 3LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u5165', u'\u529B', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u300D', u'\u306E', u'\u62E1', u'\u5F35', u'\u5B50', u'\u306F', u'\u300C', u'\u002E', u'\u006B', u'\u006E', u'\u300D', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(33, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0078', u'\u0074', u'\u0065', u'\u006E', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0070', u'\u0075', u'\u0074', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u002E', u'\u006B', u'\u006E', u'\u0027', u'\u002E'));
break;
}
break;
case 4LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u540D', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u300D', u'\u306B', u'\u4F7F', u'\u3048', u'\u306A', u'\u3044', u'\u6587', u'\u5B57', u'\u304C', u'\u542B', u'\u307E', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(22, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(42, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0073', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 5LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u958B', u'\u3051', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(25, u'\u0043', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u006E', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 6LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30B7', u'\u30B9', u'\u30C6', u'\u30E0', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u958B', u'\u3051', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0079', u'\u0073', u'\u0074', u'\u0065', u'\u006D', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u006E', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 7LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30B7', u'\u30B9', u'\u30C6', u'\u30E0', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u58CA', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0079', u'\u0073', u'\u0074', u'\u0065', u'\u006D', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0062', u'\u0072', u'\u006F', u'\u006B', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65537LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(16, u'\u540C', u'\u3058', u'\u30B9', u'\u30B3', u'\u30FC', u'\u30D7', u'\u5185', u'\u306B', u'\u65E2', u'\u306B', u'\u540C', u'\u3058', u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(35, u'\u0027', u'\u0020', u'\u0061', u'\u006C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0073', u'\u0063', u'\u006F', u'\u0070', u'\u0065', u'\u002E'));
break;
}
break;
case 65538LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(17, u'\u4E0A', u'\u4F4D', u'\u306E', u'\u30B9', u'\u30B3', u'\u30FC', u'\u30D7', u'\u5185', u'\u306B', u'\u65E2', u'\u306B', u'\u540C', u'\u3058', u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(36, u'\u0027', u'\u0020', u'\u0061', u'\u006C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0075', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0020', u'\u0073', u'\u0063', u'\u006F', u'\u0070', u'\u0065', u'\u002E'));
break;
}
break;
case 65539LL:
switch(m){
case 0LL:
return new Array_<char16_t>(24, u'\u30B3', u'\u30E1', u'\u30F3', u'\u30C8', u'\u306E', u'\u300C', u'\u007B', u'\u300D', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u007D', u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(49, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0020', u'\u0027', u'\u007D', u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0027', u'\u007B', u'\u0027', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E');
break;
}
break;
case 65540LL:
switch(m){
case 0LL:
return new Array_<char16_t>(54, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u3084', u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u4E2D', u'\u306B', u'\u30BF', u'\u30D6', u'\u6587', u'\u5B57', u'\u306F', u'\u8A18', u'\u8FF0', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u0020', u'\u30A8', u'\u30B9', u'\u30B1', u'\u30FC', u'\u30D7', u'\u30B7', u'\u30FC', u'\u30B1', u'\u30F3', u'\u30B9', u'\u300C', u'\u005C', u'\u0074', u'\u300D', u'\u3092', u'\u4EE3', u'\u7528', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(113, u'\u0054', u'\u0061', u'\u0062', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u002E', u'\u0020', u'\u0055', u'\u0073', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0073', u'\u0063', u'\u0061', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0071', u'\u0075', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027', u'\u005C', u'\u0074', u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0065', u'\u0061', u'\u0064', u'\u002E');
break;
}
break;
case 65541LL:
switch(m){
case 0LL:
return new Array_<char16_t>(50, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u3084', u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u4E2D', u'\u3067', u'\u306F', u'\u6539', u'\u884C', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u0020', u'\u30A8', u'\u30B9', u'\u30B1', u'\u30FC', u'\u30D7', u'\u30B7', u'\u30FC', u'\u30B1', u'\u30F3', u'\u30B9', u'\u300C', u'\u005C', u'\u006E', u'\u300D', u'\u3092', u'\u4EE3', u'\u7528', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(108, u'\u004C', u'\u0069', u'\u006E', u'\u0065', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u0073', u'\u0020', u'\u0061', u'\u0072', u'\u0065', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u002E', u'\u0020', u'\u0055', u'\u0073', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0073', u'\u0063', u'\u0061', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0071', u'\u0075', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027', u'\u005C', u'\u006E', u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0065', u'\u0061', u'\u0064', u'\u002E');
break;
}
break;
case 65542LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(12, u'\u8B58', u'\u5225', u'\u5B50', u'\u306B', u'\u306F', u'\u4F7F', u'\u3048', u'\u306A', u'\u3044', u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(15, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(49, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65543LL:
switch(m){
case 0LL:
return new Array_<char16_t>(24, u'\u8B58', u'\u5225', u'\u5B50', u'\u306B', u'\u6B63', u'\u3057', u'\u304F', u'\u306A', u'\u3044', u'\u5F62', u'\u5F0F', u'\u3067', u'\u300C', u'\u0040', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(43, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0027', u'\u0040', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u002E');
break;
}
break;
case 65544LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(12, u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u540D', u'\u306E', u'\u6307', u'\u5B9A', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u300D', u'\u306B', u'\u5927', u'\u6587', u'\u5B57', u'\u304C', u'\u542B', u'\u307E', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0041', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(29, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0073', u'\u0020', u'\u0075', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u006C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u002E'));
break;
}
break;
case 65545LL:
switch(m){
case 0LL:
return new Array_<char16_t>(24, u'\u8B58', u'\u5225', u'\u5B50', u'\u306B', u'\u6B63', u'\u3057', u'\u304F', u'\u306A', u'\u3044', u'\u5F62', u'\u5F0F', u'\u3067', u'\u300C', u'\u005C', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(43, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0027', u'\u005C', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u002E');
break;
}
break;
case 65546LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(16, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(49, u'\u002E', u'\u002E', u'\u002E', u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65547LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(16, u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u6587', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0073', u'\u0065', u'\u006E', u'\u0074', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65548LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(13, u'\u95A2', u'\u6570', u'\u5C5E', u'\u6027', u'\u306B', u'\u306F', u'\u4F7F', u'\u3048', u'\u306A', u'\u3044', u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(15, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(57, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0061', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0073', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65549LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(5, u'\u95A2', u'\u6570', u'\u5C5E', u'\u6027', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(24, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0061', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(49, u'\u002E', u'\u002E', u'\u002E', u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65550LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(3, u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(19, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u7B87', u'\u6240', u'\u306B', u'\u3001', u'\u4E0D', u'\u6B63', u'\u306A', u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(22, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(46, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0070', u'\u006C', u'\u0061', u'\u0063', u'\u0065', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u0027', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E')));
break;
}
break;
case 65551LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u300D', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(20, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E')));
break;
}
break;
case 65552LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u95A2', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3092', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u004F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 65553LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(14, u'\u95A2', u'\u6570', u'\u304A', u'\u3088', u'\u3073', u'\u5909', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u300D', u'\u3092', u'\u516C', u'\u958B', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(55, u'\u0027', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0073', u'\u0020', u'\u0068', u'\u0061', u'\u0073', u'\u0020', u'\u0062', u'\u0065', u'\u0065', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u006C', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 65554LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u300D', u'\u304C', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u300D', u'\u3067', u'\u306F', u'\u306A', u'\u304F', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u3067', u'\u9589', u'\u3058', u'\u3089', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(1, u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(31, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(18, u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0065', u'\u0061', u'\u0064', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'))));
break;
}
break;
case 65555LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(12, u'\u6B63', u'\u3057', u'\u304F', u'\u306A', u'\u3044', u'\u5F62', u'\u5F0F', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(30, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u006D', u'\u0061', u'\u0074', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65556LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u5F15', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u5909', u'\u6570', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0026', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(53, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0026', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E');
break;
}
break;
case 65557LL:
switch(m){
case 0LL:
return new Array_<char16_t>(25, u'\u5F15', u'\u6570', u'\u306B', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3059', u'\u308B', u'\u3053', u'\u3068', u'\u306F', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u002E');
break;
}
break;
case 65558LL:
switch(m){
case 0LL:
return new Array_<char16_t>(26, u'\u30E1', u'\u30F3', u'\u30D0', u'\u306B', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3059', u'\u308B', u'\u3053', u'\u3068', u'\u306F', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(50, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0073', u'\u002E');
break;
}
break;
case 65559LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u6587', u'\u306B', u'\u306F', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(57, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u002E');
break;
}
break;
case 65560LL:
switch(m){
case 0LL:
return new Array_<char16_t>(22, u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(43, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0061', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002E');
break;
}
break;
case 65561LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(5, u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u306F', u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u3067', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(5, u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(27, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u006D', u'\u0061', u'\u0074', u'\u0074', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 65562LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(18, u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3068', u'\u5BFE', u'\u5FDC', u'\u3057', u'\u306A', u'\u3044', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u3067', u'\u9589', u'\u3058', u'\u3089', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(25, u'\u0043', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(40, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002E'));
break;
}
break;
case 65563LL:
switch(m){
case 0LL:
return new Array_<char16_t>(46, u'\u300C', u'\u0069', u'\u0066', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u306E', u'\u5F8C', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u300D', u'\u7BC0', u'\u3084', u'\u300C', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(88, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0061', u'\u0066', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u002E');
break;
}
break;
case 65564LL:
switch(m){
case 0LL:
return new Array_<char16_t>(56, u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u300D', u'\u7BC0', u'\u306E', u'\u5F8C', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u3084', u'\u300C', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(96, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0061', u'\u0066', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u002E');
break;
}
break;
case 65565LL:
switch(m){
case 0LL:
return new Array_<char16_t>(54, u'\u300C', u'\u0074', u'\u0072', u'\u0079', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u300D', u'\u7BC0', u'\u306E', u'\u5F8C', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u7BC0', u'\u3084', u'\u300C', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(94, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0074', u'\u0072', u'\u0079', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0061', u'\u0066', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u002E');
break;
}
break;
case 65566LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(12, u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u4EE5', u'\u5916', u'\u3067', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(11, u'\u0041', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(30, u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u006F', u'\u0075', u'\u0074', u'\u0073', u'\u0069', u'\u0064', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0073', u'\u002E')));
break;
}
break;
case 65567LL:
switch(m){
case 0LL:
return new Array_<char16_t>(69, u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u300D', u'\u300C', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u300D', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u306E', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u7B87', u'\u6240', u'\u306B', u'\u305D', u'\u308C', u'\u4EE5', u'\u5916', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(88, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0027', u'\u002C', u'\u0020', u'\u0027', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u0027', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0077', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E');
break;
}
break;
case 65568LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(16, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u7B87', u'\u6240', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(12, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(21, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u0027', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E')));
break;
}
break;
case 65569LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(11, u'\u300C', u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u6F14', u'\u7B97', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65570LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(31, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(20, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(47, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65571LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(18, u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u30A8', u'\u30B9', u'\u30B1', u'\u30FC', u'\u30D7', u'\u30B7', u'\u30FC', u'\u30B1', u'\u30F3', u'\u30B9', u'\u300C', u'\u005C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(28, u'\u0041', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0065', u'\u0073', u'\u0063', u'\u0061', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0071', u'\u0075', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027', u'\u005C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65572LL:
switch(m){
case 0LL:
return new Array_<char16_t>(54, u'\u6587', u'\u5B57', u'\u30B3', u'\u30FC', u'\u30C9', u'\u8868', u'\u8A18', u'\u306F', u'\u300C', u'\u005C', u'\u0075', u'\u300D', u'\u306B', u'\u7D9A', u'\u3044', u'\u3066', u'\u3001', u'\u6570', u'\u5B57', u'\u307E', u'\u305F', u'\u306F', u'\u5927', u'\u6587', u'\u5B57', u'\u30A2', u'\u30EB', u'\u30D5', u'\u30A1', u'\u30D9', u'\u30C3', u'\u30C8', u'\u3067', u'\u0034', u'\u6841', u'\u306E', u'\u0031', u'\u0036', u'\u9032', u'\u6570', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(115, u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0063', u'\u006F', u'\u0064', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0065', u'\u006E', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u005C', u'\u0075', u'\u0027', u'\u0020', u'\u0066', u'\u006F', u'\u006C', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0079', u'\u0020', u'\u0061', u'\u0020', u'\u0034', u'\u002D', u'\u0064', u'\u0069', u'\u0067', u'\u0069', u'\u0074', u'\u0020', u'\u0068', u'\u0065', u'\u0078', u'\u0061', u'\u0064', u'\u0065', u'\u0063', u'\u0069', u'\u006D', u'\u0061', u'\u006C', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0063', u'\u0061', u'\u0070', u'\u0069', u'\u0074', u'\u0061', u'\u006C', u'\u0020', u'\u006C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u002E');
break;
}
break;
case 65573LL:
switch(m){
case 0LL:
return new Array_<char16_t>(28, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u304C', u'\u9589', u'\u3058', u'\u3089', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0041', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0064', u'\u002E');
break;
}
break;
case 65574LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u6587', u'\u5B57', u'\u5206', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(65, u'\u002E', u'\u002E', u'\u002E', u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u0041', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u002E'));
break;
}
break;
case 65575LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u304C', u'\u7A7A', u'\u3067', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u6587', u'\u5B57', u'\u5206', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(84, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0065', u'\u006D', u'\u0070', u'\u0074', u'\u0079', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u002E', u'\u0020', u'\u0041', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u002E');
break;
}
break;
case 65576LL:
switch(m){
case 0LL:
return new Array_<char16_t>(29, u'\u62EC', u'\u5F27', u'\u300C', u'\u0028', u'\u300D', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u0029', u'\u300D', u'\u304C', u'\u3001', u'\u3042', u'\u308B', u'\u3079', u'\u304D', u'\u5834', u'\u6240', u'\u306B', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(79, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0029', u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0068', u'\u0065', u'\u0073', u'\u0069', u'\u0073', u'\u0020', u'\u0027', u'\u0028', u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0074', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u002E');
break;
}
break;
case 65577LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(14, u'\u6570', u'\u5024', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(35, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0069', u'\u0063', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u002E'));
break;
}
break;
case 65578LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u6570', u'\u5024', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(31, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0069', u'\u0063', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(47, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65579LL:
switch(m){
case 0LL:
return new Array_<char16_t>(27, u'\u0031', u'\u0036', u'\u9032', u'\u6570', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u306F', u'\u300C', u'\u0030', u'\u0078', u'\u300D', u'\u304B', u'\u3089', u'\u59CB', u'\u3081', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(42, u'\u0048', u'\u0065', u'\u0078', u'\u0061', u'\u0064', u'\u0065', u'\u0063', u'\u0069', u'\u006D', u'\u0061', u'\u006C', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0027', u'\u0030', u'\u0078', u'\u0027', u'\u002E');
break;
}
break;
case 65580LL:
switch(m){
case 0LL:
return new Array_<char16_t>(43, u'\u6307', u'\u6570', u'\u8868', u'\u8A18', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u306F', u'\u300C', u'\u0065', u'\u002B', u'\u300D', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u300C', u'\u0065', u'\u002D', u'\u300D', u'\u304B', u'\u3089', u'\u59CB', u'\u3081', u'\u3066', u'\u6307', u'\u6570', u'\u90E8', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(87, u'\u0045', u'\u0078', u'\u0070', u'\u006F', u'\u006E', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0027', u'\u0065', u'\u002B', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0065', u'\u002D', u'\u0027', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u006F', u'\u006E', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0074', u'\u002E');
break;
}
break;
case 65581LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(10, u'\u6D6E', u'\u52D5', u'\u5C0F', u'\u6570', u'\u70B9', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u300D', u'\u304C', u'\u89E3', u'\u91C8', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u5024', u'\u304C', u'\u5927', u'\u304D', u'\u3059', u'\u304E', u'\u308B', u'\u53EF', u'\u80FD', u'\u6027', u'\u304C', u'\u3042', u'\u308A', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(28, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0070', u'\u006F', u'\u0069', u'\u006E', u'\u0074', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(55, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u0065', u'\u0064', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006D', u'\u0061', u'\u0079', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u0061', u'\u0072', u'\u0067', u'\u0065', u'\u002E'));
break;
}
break;
case 65582LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30D3', u'\u30C3', u'\u30C8', u'\u578B', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(41, u'\u300D', u'\u306E', u'\u63A5', u'\u5C3E', u'\u8F9E', u'\u306F', u'\u300C', u'\u0062', u'\u0038', u'\u300D', u'\u300C', u'\u0062', u'\u0031', u'\u0036', u'\u300D', u'\u300C', u'\u0062', u'\u0033', u'\u0032', u'\u300D', u'\u300C', u'\u0062', u'\u0036', u'\u0034', u'\u300D', u'\u306E', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0075', u'\u0066', u'\u0066', u'\u0069', u'\u0078', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0062', u'\u0069', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(45, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0065', u'\u0069', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u0062', u'\u0038', u'\u0027', u'\u002C', u'\u0020', u'\u0027', u'\u0062', u'\u0031', u'\u0036', u'\u0027', u'\u002C', u'\u0020', u'\u0027', u'\u0062', u'\u0033', u'\u0032', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0062', u'\u0036', u'\u0034', u'\u0027', u'\u002E'));
break;
}
break;
case 65583LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u6574', u'\u6570', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u300D', u'\u304C', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30D5', u'\u30ED', u'\u30FC', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0067', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0068', u'\u0061', u'\u0073', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0066', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 131073LL:
switch(m){
case 0LL:
return new Array_<char16_t>(55, u'\u300C', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u300D', u'\u95A2', u'\u6570', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u0020', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u3059', u'\u308B', u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u306B', u'\u300C', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u300D', u'\u3092', u'\u5B9A', u'\u7FA9', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(88, u'\u0027', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0027', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u002E', u'\u0020', u'\u0044', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0064', u'\u002E');
break;
}
break;
case 131074LL:
switch(m){
case 0LL:
return new Array_<char16_t>(37, u'\u300C', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u300D', u'\u95A2', u'\u6570', u'\u306E', u'\u5B9A', u'\u7FA9', u'\u306F', u'\u300C', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u300D', u'\u3068', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(60, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0027', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u0027', u'\u002E');
break;
}
break;
case 131075LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(10, u'\u30E1', u'\u30F3', u'\u30D0', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u5909', u'\u6570', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(36, u'\u300D', u'\u306B', u'\u3001', u'\u300C', u'\u006D', u'\u0065', u'\u300D', u'\u3092', u'\u4ECB', u'\u3055', u'\u305A', u'\u76F4', u'\u63A5', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u305F', u'\u304B', u'\u3001', u'\u95A2', u'\u6570', u'\u3092', u'\u8D85', u'\u3048', u'\u3066', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(24, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(70, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0064', u'\u0069', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u0027', u'\u006D', u'\u0065', u'\u0027', u'\u002C', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0079', u'\u006F', u'\u006E', u'\u0064', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E'));
break;
}
break;
case 131076LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(58, u'\u0040', u'\u300D', u'\u306B', u'\u3064', u'\u3044', u'\u3066', u'\u3001', u'\u81EA', u'\u8EAB', u'\u306E', u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u306E', u'\u30B0', u'\u30ED', u'\u30FC', u'\u30D0', u'\u30EB', u'\u8981', u'\u7D20', u'\u3092', u'\u53C2', u'\u7167', u'\u3059', u'\u308B', u'\u3068', u'\u304D', u'\u306F', u'\u3001', u'\u300C', u'\u0040', u'\u300D', u'\u306E', u'\u524D', u'\u306E', u'\u30BD', u'\u30FC', u'\u30B9', u'\u540D', u'\u3092', u'\u7701', u'\u7565', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(5, u'\u0046', u'\u006F', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(109, u'\u0040', u'\u0027', u'\u002C', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0067', u'\u006C', u'\u006F', u'\u0062', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0069', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0077', u'\u006E', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u002C', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0062', u'\u0065', u'\u0066', u'\u006F', u'\u0072', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0040', u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u006D', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 131077LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(21, u'\u4ED6', u'\u306E', u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u306E', u'\u516C', u'\u958B', u'\u3055', u'\u308C', u'\u3066', u'\u3044', u'\u306A', u'\u3044', u'\u8981', u'\u7D20', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(32, u'\u300D', u'\u3092', u'\u53C2', u'\u7167', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002', u'\u8981', u'\u7D20', u'\u306E', u'\u5148', u'\u982D', u'\u306B', u'\u300C', u'\u002B', u'\u300D', u'\u304C', u'\u4ED8', u'\u3044', u'\u3066', u'\u3044', u'\u308B', u'\u5FC5', u'\u8981', u'\u304C', u'\u3042', u'\u308A', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(22, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0063', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(74, u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u002B', u'\u0027', u'\u002E'));
break;
}
break;
case 131078LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(31, u'\u300D', u'\u306E', u'\u5B9A', u'\u7FA9', u'\u304C', u'\u898B', u'\u3064', u'\u304B', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u540D', u'\u524D', u'\u3092', u'\u9593', u'\u9055', u'\u3048', u'\u3066', u'\u3044', u'\u308B', u'\u53EF', u'\u80FD', u'\u6027', u'\u304C', u'\u3042', u'\u308A', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(30, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(63, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0075', u'\u006E', u'\u0064', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u006D', u'\u0061', u'\u0079', u'\u0020', u'\u0068', u'\u0061', u'\u0076', u'\u0065', u'\u0020', u'\u0062', u'\u0065', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u002E'));
break;
}
break;
case 131079LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u300C', u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u300D', u'\u306E', u'\u5B9A', u'\u7FA9', u'\u304C', u'\u5FAA', u'\u74B0', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(25, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u0069', u'\u0072', u'\u0063', u'\u0075', u'\u006C', u'\u0061', u'\u0074', u'\u0069', u'\u006E', u'\u0067', u'\u002E'));
break;
}
break;
case 131080LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u300C', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u300D', u'\u306E', u'\u7D99', u'\u627F', u'\u304C', u'\u5FAA', u'\u74B0', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(26, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0068', u'\u0065', u'\u0072', u'\u0069', u'\u0074', u'\u0061', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u0069', u'\u0072', u'\u0063', u'\u0075', u'\u006C', u'\u0061', u'\u0074', u'\u0069', u'\u006E', u'\u0067', u'\u002E'));
break;
}
break;
case 131081LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(18, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3059', u'\u308B', u'\u89AA', u'\u30AF', u'\u30E9', u'\u30B9', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u898B', u'\u3064', u'\u304B', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(50, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0065', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0075', u'\u006E', u'\u0064', u'\u002E'));
break;
}
break;
case 131082LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(5, u'\u30E1', u'\u30F3', u'\u30D0', u'\u540D', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(43, u'\u300D', u'\u304C', u'\u89AA', u'\u30AF', u'\u30E9', u'\u30B9', u'\u306E', u'\u3082', u'\u306E', u'\u3068', u'\u91CD', u'\u8907', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3059', u'\u308B', u'\u5834', u'\u5408', u'\u306F', u'\u300C', u'\u002A', u'\u300D', u'\u3092', u'\u4ED8', u'\u3051', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(71, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0064', u'\u0075', u'\u0070', u'\u006C', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u002E', u'\u0020', u'\u0041', u'\u0064', u'\u0064', u'\u0020', u'\u0027', u'\u002A', u'\u0027', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u006E', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u002E'));
break;
}
break;
case 131083LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u95A2', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3092', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u004F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 131084LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(13, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u305F', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u300D', u'\u3068', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u4FEE', u'\u98FE', u'\u5B50', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(66, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0020', u'\u006D', u'\u006F', u'\u0064', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 131085LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(13, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u305F', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3068', u'\u578B', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u5F15', u'\u6570', u'\u540D', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(72, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0020', u'\u0064', u'\u006F', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 131086LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(20, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u304C', u'\u8A31', u'\u53EF', u'\u3055', u'\u308C', u'\u3066', u'\u3044', u'\u306A', u'\u3044', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3092', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(54, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 131087LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u5217', u'\u6319', u'\u578B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(36, u'\u300D', u'\u306E', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u306E', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(27, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(69, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006D', u'\u0061', u'\u0064', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E')));
break;
}
break;
case 131088LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u5217', u'\u6319', u'\u578B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u300D', u'\u306E', u'\u5024', u'\u304C', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u306E', u'\u6709', u'\u52B9', u'\u7BC4', u'\u56F2', u'\u3092', u'\u8D85', u'\u3048', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(27, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(40, u'\u0027', u'\u0020', u'\u0065', u'\u0078', u'\u0063', u'\u0065', u'\u0065', u'\u0064', u'\u0073', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0072', u'\u0061', u'\u006E', u'\u0067', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E')));
break;
}
break;
case 131089LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(4, u'\u5217', u'\u6319', u'\u578B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u300D', u'\u306E', u'\u5024', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u300D', u'\u304C', u'\u5225', u'\u306E', u'\u8981', u'\u7D20', u'\u306E', u'\u5024', u'\u3068', u'\u91CD', u'\u8907', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(11, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(19, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(50, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0064', u'\u0075', u'\u0070', u'\u006C', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0061', u'\u006E', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E'))));
break;
}
break;
case 131090LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(15, u'\u5217', u'\u6319', u'\u578B', u'\u5185', u'\u306B', u'\u5B58', u'\u5728', u'\u3057', u'\u306A', u'\u3044', u'\u8981', u'\u7D20', u'\u540D', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(19, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(58, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 131091LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u30B0', u'\u30ED', u'\u30FC', u'\u30D0', u'\u30EB', u'\u5909', u'\u6570', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(29, u'\u300D', u'\u306E', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(30, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0067', u'\u006C', u'\u006F', u'\u0062', u'\u0061', u'\u006C', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(37, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E'));
break;
}
break;
case 131092LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u300C', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u300D', u'\u6587', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(29, u'\u300D', u'\u306E', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(37, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E'));
break;
}
break;
case 131093LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(3, u'\u5909', u'\u6570', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u300D', u'\u306E', u'\u578B', u'\u3068', u'\u5024', u'\u306E', u'\u578B', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(26, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(32, u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E'));
break;
}
break;
case 131094LL:
switch(m){
case 0LL:
return new Array_<char16_t>(31, u'\u300C', u'\u0069', u'\u0066', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(65, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131095LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u300C', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u300D', u'\u7BC0', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(68, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131096LL:
switch(m){
case 0LL:
return new Array_<char16_t>(34, u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u6BD4', u'\u8F03', u'\u53EF', u'\u80FD', u'\u306A', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(75, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0061', u'\u0072', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131097LL:
switch(m){
case 0LL:
return new Array_<char16_t>(36, u'\u300C', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u306E', u'\u578B', u'\u304C', u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306E', u'\u578B', u'\u3068', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(106, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002E');
break;
}
break;
case 131098LL:
switch(m){
case 0LL:
return new Array_<char16_t>(34, u'\u300C', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(68, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131099LL:
switch(m){
case 0LL:
return new Array_<char16_t>(31, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u521D', u'\u671F', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(54, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131100LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u7D42', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006E', u'\u0064', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131101LL:
switch(m){
case 0LL:
return new Array_<char16_t>(31, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u5897', u'\u6E1B', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(68, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u002F', u'\u0020', u'\u0064', u'\u0065', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131102LL:
switch(m){
case 0LL:
return new Array_<char16_t>(39, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u5897', u'\u6E1B', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(84, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u002F', u'\u0020', u'\u0064', u'\u0065', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E');
break;
}
break;
case 131103LL:
switch(m){
case 0LL:
return new Array_<char16_t>(30, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u5897', u'\u6E1B', u'\u5024', u'\u306F', u'\u300C', u'\u0030', u'\u300D', u'\u4EE5', u'\u5916', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(72, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u002F', u'\u0020', u'\u0064', u'\u0065', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0030', u'\u0027', u'\u002E');
break;
}
break;
case 131104LL:
switch(m){
case 0LL:
return new Array_<char16_t>(45, u'\u300C', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u7BC0', u'\u306E', u'\u6761', u'\u4EF6', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u306E', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(104, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E');
break;
}
break;
case 131105LL:
switch(m){
case 0LL:
return new Array_<char16_t>(32, u'\u300C', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u300D', u'\u6587', u'\u306E', u'\u4F8B', u'\u5916', u'\u30B3', u'\u30FC', u'\u30C9', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(59, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0078', u'\u0063', u'\u0065', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u006F', u'\u0064', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131106LL:
switch(m){
case 0LL:
return new Array_<char16_t>(31, u'\u623B', u'\u308A', u'\u5024', u'\u3092', u'\u8FD4', u'\u3059', u'\u95A2', u'\u6570', u'\u3067', u'\u306F', u'\u300C', u'\u0072', u'\u0065', u'\u0074', u'\u300D', u'\u6587', u'\u306F', u'\u5024', u'\u3092', u'\u8FD4', u'\u3055', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(72, u'\u0046', u'\u006F', u'\u0072', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0073', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u002C', u'\u0020', u'\u0027', u'\u0072', u'\u0065', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u002E');
break;
}
break;
case 131107LL:
switch(m){
case 0LL:
return new Array_<char16_t>(27, u'\u300C', u'\u0072', u'\u0065', u'\u0074', u'\u300D', u'\u6587', u'\u306E', u'\u5024', u'\u306E', u'\u578B', u'\u304C', u'\u95A2', u'\u6570', u'\u306E', u'\u623B', u'\u308A', u'\u5024', u'\u306E', u'\u578B', u'\u3068', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(79, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0072', u'\u0065', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E');
break;
}
break;
case 131108LL:
switch(m){
case 0LL:
return new Array_<char16_t>(50, u'\u300C', u'\u0064', u'\u006F', u'\u300D', u'\u6587', u'\u3067', u'\u6700', u'\u5F8C', u'\u306B', u'\u884C', u'\u3046', u'\u6F14', u'\u7B97', u'\u306F', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u3084', u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306A', u'\u3069', u'\u306E', u'\u526F', u'\u4F5C', u'\u7528', u'\u306E', u'\u3042', u'\u308B', u'\u6F14', u'\u7B97', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(104, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006C', u'\u0061', u'\u0073', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0027', u'\u0064', u'\u006F', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0073', u'\u0069', u'\u0064', u'\u0065', u'\u0020', u'\u0065', u'\u0066', u'\u0066', u'\u0065', u'\u0063', u'\u0074', u'\u0073', u'\u0020', u'\u0073', u'\u0075', u'\u0063', u'\u0068', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0073', u'\u002E');
break;
}
break;
case 131109LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(23, u'\u300D', u'\u6587', u'\u306B', u'\u306F', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u540D', u'\u3092', u'\u6307', u'\u5B9A', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(1, u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(39, u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0067', u'\u0069', u'\u0076', u'\u0065', u'\u006E', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u002E'));
break;
}
break;
case 131110LL:
switch(m){
case 0LL:
return new Array_<char16_t>(32, u'\u300C', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074', u'\u300D', u'\u6587', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(73, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131111LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u578B', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3059', u'\u3079', u'\u304D', u'\u3068', u'\u3053', u'\u308D', u'\u306B', u'\u578B', u'\u4EE5', u'\u5916', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(54, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E');
break;
}
break;
case 131112LL:
switch(m){
case 0LL:
return new Array_<char16_t>(24, u'\u5024', u'\u304C', u'\u8A2D', u'\u5B9A', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u5834', u'\u6240', u'\u306B', u'\u5024', u'\u304C', u'\u6E21', u'\u3055', u'\u308C', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(51, u'\u004E', u'\u006F', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0070', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u006D', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0074', u'\u002E');
break;
}
break;
case 131113LL:
switch(m){
case 0LL:
return new Array_<char16_t>(15, u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u578B', u'\u304C', u'\u6B63', u'\u3057', u'\u304F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(28, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u002E');
break;
}
break;
case 131114LL:
switch(m){
case 0LL:
return new Array_<char16_t>(25, u'\u4EE3', u'\u5165', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u5DE6', u'\u8FBA', u'\u5024', u'\u304C', u'\u4EE3', u'\u5165', u'\u53EF', u'\u80FD', u'\u306A', u'\u5909', u'\u6570', u'\u3067', u'\u306F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(72, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006C', u'\u0065', u'\u0066', u'\u0074', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0073', u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0073', u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u002E');
break;
}
break;
case 131115LL:
switch(m){
case 0LL:
return new Array_<char16_t>(17, u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u306F', u'\u5024', u'\u6BD4', u'\u8F03', u'\u304C', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(35, u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0079', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u002E');
break;
}
break;
case 131116LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(11, u'\u300C', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u540D', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u300D', u'\u304B', u'\u3089', u'\u578B', u'\u304C', u'\u63A8', u'\u6E2C', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(54, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0066', u'\u0065', u'\u0072', u'\u0072', u'\u0065', u'\u0064', u'\u0020', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0027', u'\u002E'));
break;
}
break;
case 131117LL:
switch(m){
case 0LL:
return new Array_<char16_t>(22, u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u306F', u'\u300C', u'\u007E', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u3067', u'\u9023', u'\u7D50', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u006E', u'\u0061', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u007E', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u002E');
break;
}
break;
case 131118LL:
switch(m){
case 0LL:
return new Array_<char16_t>(9, u'\u0030', u'\u3067', u'\u9664', u'\u7B97', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(13, u'\u0044', u'\u0069', u'\u0076', u'\u0069', u'\u0064', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0079', u'\u0020', u'\u0030', u'\u002E');
break;
}
break;
case 131119LL:
switch(m){
case 0LL:
return new Array_<char16_t>(34, u'\u300C', u'\u003A', u'\u0024', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u5DE6', u'\u8FBA', u'\u5024', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u53F3', u'\u8FBA', u'\u5024', u'\u304C', u'\u4EE3', u'\u5165', u'\u53EF', u'\u80FD', u'\u306A', u'\u5909', u'\u6570', u'\u3067', u'\u306F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(75, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006C', u'\u0065', u'\u0066', u'\u0074', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0072', u'\u0069', u'\u0067', u'\u0068', u'\u0074', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u003A', u'\u0024', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0073', u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u002E');
break;
}
break;
case 131120LL:
switch(m){
case 0LL:
return new Array_<char16_t>(32, u'\u300C', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(66, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u002E');
break;
}
break;
case 131121LL:
switch(m){
case 0LL:
return new Array_<char16_t>(33, u'\u300C', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u62EC', u'\u5F27', u'\u5185', u'\u306E', u'\u0032', u'\u3064', u'\u306E', u'\u5024', u'\u306F', u'\u540C', u'\u3058', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(80, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0077', u'\u006F', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0068', u'\u0065', u'\u0073', u'\u0069', u'\u0073', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131122LL:
switch(m){
case 0LL:
return new Array_<char16_t>(38, u'\u300C', u'\u0023', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306F', u'\u30AF', u'\u30E9', u'\u30B9', u'\u3084', u'\u300C', u'\u006C', u'\u0069', u'\u0073', u'\u0074', u'\u300D', u'\u300C', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u300D', u'\u306A', u'\u3069', u'\u306E', u'\u53C2', u'\u7167', u'\u578B', u'\u306B', u'\u3057', u'\u304B', u'\u4F7F', u'\u3048', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(89, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0023', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u0020', u'\u006F', u'\u006E', u'\u006C', u'\u0079', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0073', u'\u0020', u'\u0073', u'\u0075', u'\u0063', u'\u0068', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0073', u'\u002C', u'\u0020', u'\u0027', u'\u006C', u'\u0069', u'\u0073', u'\u0074', u'\u0027', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0027', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131123LL:
switch(m){
case 0LL:
return new Array_<char16_t>(37, u'\u300C', u'\u0023', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306B', u'\u8A18', u'\u8FF0', u'\u3059', u'\u308B', u'\u914D', u'\u5217', u'\u306E', u'\u8981', u'\u7D20', u'\u6570', u'\u306E', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(71, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0023', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131124LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u95A2', u'\u6570', u'\u3067', u'\u306A', u'\u3044', u'\u3082', u'\u306E', u'\u3092', u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(51, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0065', u'\u0064', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0069', u'\u0066', u'\u0020', u'\u0069', u'\u0074', u'\u0020', u'\u0077', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E');
break;
}
break;
case 131125LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(16, u'\u500B', u'\u306E', u'\u5F15', u'\u6570', u'\u3092', u'\u53D7', u'\u3051', u'\u53D6', u'\u308B', u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306B'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(20, u'\u500B', u'\u306E', u'\u5F15', u'\u6570', u'\u304C', u'\u6307', u'\u5B9A', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u95A2', u'\u6570', u'\u306E', u'\u578B', u'\u306F', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u300D', u'\u3067', u'\u3059', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(59, u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u0077', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0072', u'\u0065', u'\u0063', u'\u0065', u'\u0069', u'\u0076', u'\u0065', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(34, u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0027'))));
break;
}
break;
case 131126LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(7, u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306E'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(28, u'\u756A', u'\u76EE', u'\u306E', u'\u53C2', u'\u7167', u'\u6E21', u'\u3057', u'\u306E', u'\u5F15', u'\u6570', u'\u306B', u'\u3001', u'\u53C2', u'\u7167', u'\u3092', u'\u53D6', u'\u308C', u'\u306A', u'\u3044', u'\u5024', u'\u304C', u'\u6E21', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(52, u'\u0041', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0070', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(74, u'\u0074', u'\u0068', u'\u002F', u'\u0073', u'\u0074', u'\u002F', u'\u006E', u'\u0064', u'\u002F', u'\u0072', u'\u0064', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002C', u'\u0020', u'\u0077', u'\u0068', u'\u0069', u'\u0063', u'\u0068', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0061', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002C', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u002E'));
break;
}
break;
case 131127LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(19, u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306E', u'\u5F15', u'\u6570', u'\u306E', u'\u578B', u'\u304C', u'\u7570', u'\u306A', u'\u308A', u'\u307E', u'\u3059', u'\u3002', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u756A', u'\u76EE', u'\u306E', u'\u5F15', u'\u6570', u'\u3067', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(12, u'\u300D', u'\u3092', u'\u6307', u'\u5B9A', u'\u3059', u'\u3079', u'\u304D', u'\u3068', u'\u3053', u'\u308D', u'\u306B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u6E21', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(58, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0064', u'\u0069', u'\u0066', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(25, u'\u0027', u'\u0020', u'\u0068', u'\u0061', u'\u0073', u'\u0020', u'\u0062', u'\u0065', u'\u0065', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(27, u'\u0027', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(21, u'\u0074', u'\u0068', u'\u002F', u'\u0073', u'\u0074', u'\u002F', u'\u006E', u'\u0064', u'\u002F', u'\u0072', u'\u0064', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E'))));
break;
}
break;
case 131128LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u914D', u'\u5217', u'\u3067', u'\u306A', u'\u3044', u'\u3082', u'\u306E', u'\u306B', u'\u914D', u'\u5217', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(37, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u002E');
break;
}
break;
case 131129LL:
switch(m){
case 0LL:
return new Array_<char16_t>(23, u'\u914D', u'\u5217', u'\u306E', u'\u6DFB', u'\u5B57', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(28, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0064', u'\u0069', u'\u0063', u'\u0065', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131130LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u53C2', u'\u7167', u'\u5148', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u002E'));
break;
}
break;
case 131131LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(12, u'\u516C', u'\u958B', u'\u3055', u'\u308C', u'\u3066', u'\u3044', u'\u306A', u'\u3044', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u3092', u'\u53C2', u'\u7167', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0041', u'\u006E', u'\u0020', u'\u0075', u'\u006E', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0073', u'\u0068', u'\u0065', u'\u0064', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 131132LL:
switch(m){
case 0LL:
return new Array_<char16_t>(25, u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u306E', u'\u578B', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(61, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u002E');
break;
}
break;
case 131133LL:
switch(m){
case 0LL:
return new Array_<char16_t>(29, u'\u5024', u'\u578B', u'\u306E', u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306B', u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(60, u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u002E');
break;
}
break;
case 131134LL:
switch(m){
case 0LL:
return new Array_<char16_t>(71, u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306E', u'\u3059', u'\u3079', u'\u3066', u'\u306E', u'\u8981', u'\u7D20', u'\u304C', u'\u300C', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u540D', u'\u306E', u'\u305F', u'\u3081', u'\u3001', u'\u578B', u'\u304C', u'\u6C7A', u'\u5B9A', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u306E', u'\u8981', u'\u7D20', u'\u540D', u'\u3092', u'\u30AD', u'\u30E3', u'\u30B9', u'\u30C8', u'\u3057', u'\u3066', u'\u578B', u'\u3092', u'\u793A', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(164, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0074', u'\u0065', u'\u0072', u'\u006D', u'\u0069', u'\u006E', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0063', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u0020', u'\u0061', u'\u0072', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0027', u'\u002E', u'\u0020', u'\u0043', u'\u0061', u'\u0073', u'\u0074', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0069', u'\u006E', u'\u0064', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131135LL:
switch(m){
case 0LL:
return new Array_<char16_t>(70, u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306E', u'\u3059', u'\u3079', u'\u3066', u'\u306E', u'\u8981', u'\u7D20', u'\u304C', u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u306E', u'\u305F', u'\u3081', u'\u3001', u'\u578B', u'\u304C', u'\u6C7A', u'\u5B9A', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u306E', u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u3092', u'\u30AD', u'\u30E3', u'\u30B9', u'\u30C8', u'\u3057', u'\u3066', u'\u578B', u'\u3092', u'\u793A', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(136, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0074', u'\u0065', u'\u0072', u'\u006D', u'\u0069', u'\u006E', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0063', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u0020', u'\u0061', u'\u0072', u'\u0065', u'\u0020', u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u002E', u'\u0020', u'\u0043', u'\u0061', u'\u0073', u'\u0074', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0069', u'\u006E', u'\u0064', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131136LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(11, u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3067', u'\u304D', u'\u306A', u'\u3044', u'\u8981', u'\u7D20', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u300D', u'\u306B', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(31, u'\u0041', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 196609LL:
switch(m){
case 0LL:
return new Array_<char16_t>(3, u'\u6210', u'\u529F', u'\u3002');
break;
default:
return new Array_<char16_t>(8, u'\u0053', u'\u0075', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u002E');
break;
}
break;
case 196610LL:
switch(m){
case 0LL:
return new Array_<char16_t>(3, u'\u5931', u'\u6557', u'\u3002');
break;
default:
return new Array_<char16_t>(8, u'\u0046', u'\u0061', u'\u0069', u'\u006C', u'\u0075', u'\u0072', u'\u0065', u'\u002E');
break;
}
break;
case 196611LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u958B', u'\u59CB', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u79D2', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0043', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0065', u'\u0064', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0073', u'\u002E'));
break;
}
break;
case 196612LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(10, u'\u5B57', u'\u53E5', u'\u69CB', u'\u6587', u'\u89E3', u'\u6790', u'\u5B8C', u'\u4E86', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u79D2', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0050', u'\u0061', u'\u0072', u'\u0073', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0073', u'\u002E'));
break;
}
break;
case 196613LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u610F', u'\u5473', u'\u89E3', u'\u6790', u'\u5B8C', u'\u4E86', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u79D2', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(31, u'\u0053', u'\u0065', u'\u006D', u'\u0061', u'\u006E', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0061', u'\u006E', u'\u0061', u'\u006C', u'\u0079', u'\u0073', u'\u0069', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0073', u'\u002E'));
break;
}
break;
case 196614LL:
switch(m){
case 0LL:
return ((new Array_<char16_t>(8, u'\u751F', u'\u6210', u'\u51E6', u'\u7406', u'\u5B8C', u'\u4E86', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u79D2', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0047', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0070', u'\u0072', u'\u006F', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0073', u'\u002E'));
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// cmp
static int64_t atm(kl* atn /*me*/, kl* ato /*t*/){
return (atp)(((static_cast<int64_t>((atn)->km)) - (static_cast<int64_t>((ato)->km))));
}
// toStr
static Array_<char16_t>* atq(kl* atr /*me*/){
return v<bool>(((atr)->km), (new Array_<int64_t>(1, (0LL))));
}
// _dtor
static void ats(kl* att){
}
// _copy
static kl* atu(kl* atv){
kl* atw = nullptr;
(atw) = (new kl());
((atw)->km) = ((atv)->km);
return as_<kl>(classTable_, (atw), 20);
}
// _toBin
static Array_<uint8_t>* atx(kl* aty){
Array_<uint8_t>* atz = nullptr;
(atz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(atz) = ((atz)->Cat(toBin_((aty)->km)));
return atz;
}
// _fromBin
static kl* aub(kl* auc, Array_<uint8_t>* aud, int64_t* aue){
kl* auf = nullptr;
(auf) = (new kl());
((auf)->km) = (fromBin_<bool>((aud), (*aue)));
return auf;
}
// _forEach
template<typename T_, typename K_, typename V_> static bool ko(T_ aug /*me_*/, Array_<int64_t>* auh /*type*/, const void* aui /*callback*/, fz* auj /*data*/){
return dictForEach_(aug->B, static_cast<bool(*)(K_, V_, Class_*)>(aui), auj);
}
// parseSrc
static bool kp(Array_<char16_t>* auk /*key*/, fx* aul /*value*/, fz* aum /*data*/){
Array_<char16_t>* auu = nullptr; // truePath
avk* avi = nullptr; // ast
if(!eqAddr_((aul), (nullptr))){
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (auk), (aul));
return true;
}
if(!((auq)((auk)))){
(ad)((4LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (auk))));
return true;
}
((as_<kl>(classTable_, (aum), 20))->km) = (false);
if(((auk)->At(0LL)) == (u'\u005C')){
(auu) = (((ay)->Cat((auv)((auw<Array_<char16_t>*>((auk), (new Array_<int64_t>(1, (0LL))), (1LL), (-1LL))))))->Cat(new Array_<char16_t>(3, u'\u002E', u'\u006B', u'\u006E')));
}
else{
(auu) = (((av)->Cat((auv)((auk))))->Cat(new Array_<char16_t>(3, u'\u002E', u'\u006B', u'\u006E')));
}
(be) = ((auy)((new auz()), (auu)));
if(eqAddr_((be), (nullptr))){
(ad)((5LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (auu))));
return true;
}
(bf) = (auk);
(avc) = (1LL);
(avd) = (0LL);
(ave) = (u'\u0000');
(avf) = (u'\u0000');
(avg) = (false);
(bg) = (new Stack_<fx*>());
(avh) = (0LL);
(bh) = (nullptr);
(avi) = ((avj)());
(avm)((be));
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (auk), (avi));
return true;
}
// searchMain
static fw* ks(){
fx* avn = nullptr; // ast
bool avp = false;
fx* avs = nullptr; // mainFunc
bool avt = false;
fw* avw = nullptr; // mainFunc2
(avn) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u005C'))->Cat(az)), (&avp)));
if(eqAddr_((avn), (nullptr))){
(ad)((131073LL), (nullptr), (nullptr));
return nullptr;
}
(avs) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((avn)->nh), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006D', u'\u0061', u'\u0069', u'\u006E')), (&avt)));
if((eqAddr_((avs), (nullptr))) || (((avs)->lw) != (256LL))){
(ad)((131073LL), (nullptr), (nullptr));
return nullptr;
}
(avw) = (as_<fw>(classTable_, (avs), 8));
if(((((((avw)->sg)->Len()) != (0LL)) || (!eqAddr_(((avw)->sh), (nullptr)))) || (((avw)->sm) != (0LL))) || ((((avw)->sf)->Len()) != (0LL))){
(ad)((131074LL), ((avw)->ne), (nullptr));
}
return avw;
}
// resolveIdentifier
static bool kv(Array_<char16_t>* avz /*key*/, fx* awa /*value*/, fz* awb /*data*/){
List_<avl*>* awc = nullptr; // scopeRefedItems
avl* awh = nullptr; // item
fx* awj = nullptr; // ast
bool awl = false; // otherFile
int64_t awm = 0; // ptrAt
Array_<char16_t>* awo = nullptr; // ptrName
fx* awp = nullptr; // foundAst
Array_<char16_t>* awu = nullptr; // ptrSrc
fx* awy = nullptr; // ast2
bool awz = false;
bool axc = false;
fx* axe = nullptr; // scope
bool axg = false; // overFunc
fx* axr = nullptr; // ast2
bool axs = false;
bool axv = false; // err
int64_t aya = 0; // kind
if(!(is_(classTable_, (awa), 32))){
throw 0xE9170000U;
}
(awc) = ((as_<avk>(classTable_, (awa), 32))->awd);
awe<List_<avl*>*>((awc), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<avl*>*>((awc), (new Array_<int64_t>(1, (0LL)))))){
(awh) = (awi<List_<avl*>*, avl*>((awc), (new Array_<int64_t>(1, (0LL)))));
(awj) = ((awh)->awk);
if(!(eqAddr_(((awj)->nj), (nullptr)))){
throw 0xE9170000U;
}
if(!(!eqAddr_(((awj)->ni), (nullptr)))){
throw 0xE9170000U;
}
(awl) = (false);
(awm) = (awn<Array_<char16_t>*, char16_t>(((awj)->ni), (new Array_<int64_t>(1, (0LL))), (u'\u0040'), (-1LL)));
(awo) = (((awm) == (-1LL)) ? ((awj)->ni) : (auw<Array_<char16_t>*>(((awj)->ni), (new Array_<int64_t>(1, (0LL))), ((awm) + (1LL)), (-1LL))));
(awp) = (nullptr);
if((awm) != (-1LL)){
if((awm) == (0LL)){
(awu) = (avz);
}
else{
(awu) = (auw<Array_<char16_t>*>(((awj)->ni), (new Array_<int64_t>(1, (0LL))), (0LL), (awm)));
if(cmp_((awu), (avz)) == 0){
(ad)((131076LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, (awu))));
}
(awl) = (true);
}
(awy) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), (awu), (&awz)));
if(!eqAddr_((awy), (nullptr))){
(awp) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((awy)->nh), (new Array_<int64_t>(1, (0LL))), (awo), (&axc)));
}
}
else{
(axe) = ((awh)->axf);
(axg) = (false);
while(true){
if(eqAddr_(((axe)->ng), (nullptr))){
break;
}
if((!eqAddr_(((axe)->nf), (nullptr))) && (cmp_(((axe)->nf), (awo)) == 0)){
if((((axe)->lw) == (256LL)) && (!eqAddr_(((axe)->ni), (nullptr)))){
(ad)((131075LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, (awo))));
}
else{
(awp) = (axe);
break;
}
}
(axr) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((axe)->nh), (new Array_<int64_t>(1, (0LL))), (awo), (&axs)));
if(!eqAddr_((axr), (nullptr))){
(axv) = (false);
if(axg){
if(((axr)->lw) == (7LL)){
(aya) = ((as_<gb>(classTable_, (axr), 10))->qk);
if((((aya) == (5LL)) || ((aya) == (3LL))) || ((aya) == (2LL))){
(axv) = (true);
}
}
if((!(axv)) && ((aye<int64_t>(((axr)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
(axv) = (true);
}
}
if(((!(axv)) && (((axr)->lw) == (256LL))) && (!eqAddr_(((axr)->ni), (nullptr)))){
(axv) = (true);
}
if(axv){
(ad)((131075LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, (awo))));
}
else{
(awp) = (axr);
break;
}
}
if(((axe)->lw) == (256LL)){
(axg) = (true);
}
(axe) = ((axe)->ng);
}
}
if(!eqAddr_((awp), (nullptr))){
if((awl) && (!((awp)->no))){
(ad)((131077LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, ((awj)->ni))));
}
((awj)->nj) = (awp);
}
else{
(ad)((131078LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, ((awj)->ni))));
((awj)->nj) = (nullptr);
}
ays<List_<avl*>*>((awc), (new Array_<int64_t>(1, (0LL))));
}
return true;
}
// rebuild
static fw* kw(fw* ayt /*mainFunc*/){
fw* ayv = nullptr; // entry
fx* ayy = nullptr; // root
bool ayz = false;
(ayv) = ((ayw)((ayt)));
(ayx)((ayv));
(ayy) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u005C'))->Cat(az)), (&ayz)));
if(!(is_(classTable_, (ayy), 32))){
throw 0xE9170000U;
}
uh<List_<fx*>*, fx*>(((as_<avk>(classTable_, (ayy), 32))->aza), (new Array_<int64_t>(1, (0LL))), (ayv));
ko<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), (azb), (nullptr));
return ayv;
}
// addr
static uint64_t mk(fz* azc /*class_*/){
return reinterpret_cast<uint64_t>(azc);
}
// _addList
template<typename T_, typename C_> static void uh(T_ azd /*me_*/, Array_<int64_t>* aze /*type*/, C_ azf /*item*/){
azd->B.push_back(azf);
}
// _addQueue
template<typename T_, typename C_> static void uk(T_ azg /*me_*/, Array_<int64_t>* azh /*type*/, C_ azi /*item*/){
azg->B.push(azi);
}
// _dtor
static void azj(um* azk){
((azk)->azl) = (nullptr);
((azk)->azm) = (nullptr);
}
// _copy
static um* azn(um* azo){
um* azp = nullptr;
(azp) = (new um());
((azp)->azq) = ((azo)->azq);
((azp)->azr) = ((azo)->azr);
((azp)->azl) = (copy_((azo)->azl));
((azp)->azm) = (copy_((azo)->azm));
return as_<um>(classTable_, (azp), 24);
}
// _toBin
static Array_<uint8_t>* azs(um* azt){
Array_<uint8_t>* azu = nullptr;
(azu) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(azu) = ((azu)->Cat(toBin_((azt)->azq)));
(azu) = ((azu)->Cat(toBin_((azt)->azr)));
(azu) = ((azu)->Cat(toBin_((azt)->azl)));
(azu) = ((azu)->Cat(toBin_((azt)->azm)));
return azu;
}
// _fromBin
static um* azz(um* baa, Array_<uint8_t>* bab, int64_t* bac){
um* bad = nullptr;
(bad) = (new um());
((bad)->azq) = (fromBin_<bool>((bab), (*bac)));
((bad)->azr) = (fromBin_<bool>((bab), (*bac)));
((bad)->azl) = (fromBin_<fx*>((bab), (*bac)));
((bad)->azm) = (fromBin_<um*>((bab), (*bac)));
return bad;
}
// _dtor
static void bae(ul* baf){
((baf)->bag) = (nullptr);
((baf)->ne) = (nullptr);
((baf)->nf) = (nullptr);
((baf)->ng) = (nullptr);
((baf)->nh) = (nullptr);
((baf)->ni) = (nullptr);
((baf)->nj) = (nullptr);
((baf)->nk) = (nullptr);
}
// _copy
static ul* bah(ul* bai){
ul* baj = nullptr;
(baj) = (new ul());
((baj)->bag) = (copy_((bai)->bag));
((baj)->ne) = (copy_((bai)->ne));
((baj)->nf) = (copy_((bai)->nf));
((baj)->ng) = (copy_((bai)->ng));
((baj)->nh) = (copy_((bai)->nh));
((baj)->ni) = (copy_((bai)->ni));
((baj)->nj) = (copy_((bai)->nj));
((baj)->nk) = (copy_((bai)->nk));
((baj)->no) = ((bai)->no);
((baj)->lw) = ((bai)->lw);
return as_<ul>(classTable_, (baj), 22);
}
// _toBin
static Array_<uint8_t>* bak(ul* bal){
Array_<uint8_t>* bam = nullptr;
(bam) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bam) = ((bam)->Cat(toBin_((bal)->bag)));
(bam) = ((bam)->Cat(toBin_((bal)->ne)));
(bam) = ((bam)->Cat(toBin_((bal)->nf)));
(bam) = ((bam)->Cat(toBin_((bal)->ng)));
(bam) = ((bam)->Cat(toBin_((bal)->nh)));
(bam) = ((bam)->Cat(toBin_((bal)->ni)));
(bam) = ((bam)->Cat(toBin_((bal)->nj)));
(bam) = ((bam)->Cat(toBin_((bal)->nk)));
(bam) = ((bam)->Cat(toBin_((bal)->no)));
(bam) = ((bam)->Cat(toBin_((bal)->lw)));
return bam;
}
// _fromBin
static ul* bax(ul* bay, Array_<uint8_t>* baz, int64_t* bba){
ul* bbb = nullptr;
(bbb) = (new ul());
((bbb)->bag) = (fromBin_<List_<um*>*>((baz), (*bba)));
((bbb)->ne) = (fromBin_<ga*>((baz), (*bba)));
((bbb)->nf) = (fromBin_<Array_<char16_t>*>((baz), (*bba)));
((bbb)->ng) = (fromBin_<fx*>((baz), (*bba)));
((bbb)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((baz), (*bba)));
((bbb)->ni) = (fromBin_<Array_<char16_t>*>((baz), (*bba)));
((bbb)->nj) = (fromBin_<fx*>((baz), (*bba)));
((bbb)->nk) = (fromBin_<fy*>((baz), (*bba)));
((bbb)->no) = (fromBin_<bool>((baz), (*bba)));
((bbb)->lw) = (fromBin_<int64_t>((baz), (*bba)));
return bbb;
}
// _dtor
static void bbc(un* bbd){
((bbd)->bbe) = (nullptr);
((bbd)->bbf) = (nullptr);
}
// _copy
static un* bbg(un* bbh){
un* bbi = nullptr;
(bbi) = (new un());
((bbi)->bbe) = (copy_((bbh)->bbe));
((bbi)->bbf) = (copy_((bbh)->bbf));
return as_<un>(classTable_, (bbi), 26);
}
// _toBin
static Array_<uint8_t>* bbj(un* bbk){
Array_<uint8_t>* bbl = nullptr;
(bbl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bbl) = ((bbl)->Cat(toBin_((bbk)->bbe)));
(bbl) = ((bbl)->Cat(toBin_((bbk)->bbf)));
return bbl;
}
// _fromBin
static un* bbo(un* bbp, Array_<uint8_t>* bbq, int64_t* bbr){
un* bbs = nullptr;
(bbs) = (new un());
((bbs)->bbe) = (fromBin_<Array_<char16_t>*>((bbq), (*bbr)));
((bbs)->bbf) = (fromBin_<gc*>((bbq), (*bbr)));
return bbs;
}
// _getQueue
template<typename T_, typename R_> static R_ us(T_ bbt /*me_*/, Array_<int64_t>* bbu /*type*/){
R_ r_ = bbt->B.front();
bbt->B.pop();
return r_;
}
// buildFunc
static void ut(fw* bbv /*ast*/){
bby* bbw = nullptr; // info
Array_<char16_t>* bcc = nullptr; // template
Array_<char16_t>* bcq = nullptr; // retType
Array_<char16_t>* bcu = nullptr; // arg
int64_t bcw = 0; // idx
List_<gb*>* bcx = nullptr; // items
gb* bcz = nullptr; // item
bby* bdd = nullptr; // info2
bool bej = false; // hasMembers
gb* bem = nullptr; // arg2
List_<um*>* bep = nullptr; // members
int64_t bev = 0; // localVarPos
gb* bfa = nullptr; // localVar
bby* bfb = nullptr; // info2
un* bfj = nullptr; // tmpVar
(bbw) = ((bbx)((bbv)));
if((bbw)->bca){
return;
}
((bbw)->bca) = (true);
(bcc) = (new Array_<char16_t>(0));
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL)){
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)){
(bcc) = (new Array_<char16_t>(48, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u004B', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0056', u'\u005F', u'\u003E', u'\u0020'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (8LL))) == (8LL)){
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(bcc) = (new Array_<char16_t>(48, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0043', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0052', u'\u005F', u'\u003E', u'\u0020'));
}
else{
(bcc) = (new Array_<char16_t>(35, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0043', u'\u005F', u'\u003E', u'\u0020'));
}
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(bcc) = (new Array_<char16_t>(35, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0052', u'\u005F', u'\u003E', u'\u0020'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (256LL))) == (256LL)){
(bcc) = (new Array_<char16_t>(48, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u004B', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0056', u'\u005F', u'\u003E', u'\u0020'));
}
else{
(bcc) = (new Array_<char16_t>(22, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u003E', u'\u0020'));
}
}
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(bcq) = (new Array_<char16_t>(2, u'\u0052', u'\u005F'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (4LL))) == (4LL)){
(bcq) = (new Array_<char16_t>(2, u'\u0054', u'\u005F'));
}
else{
(bcq) = ((bct)(((bbv)->sh)));
}
(bcu) = (new Array_<char16_t>(0));
(bcw) = (0LL);
(bcx) = ((bbv)->sg);
awe<List_<gb*>*>((bcx), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bcx), (new Array_<int64_t>(1, (0LL)))))){
(bcz) = (awi<List_<gb*>*, gb*>((bcx), (new Array_<int64_t>(1, (0LL)))));
if((bcw) != (0LL)){
(bcu) = ((bcu)->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
}
(bdd) = ((bbx)((bcz)));
if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL)) && ((bcw) == (0LL))){
if(!((bdg)(((bcz)->qf)))){
throw 0xE9170000U;
}
(bcu) = ((bcu)->Cat(new Array_<char16_t>(2, u'\u0054', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)) && ((bcw) == (2LL))){
if(!((bdg)(((bcz)->qf)))){
throw 0xE9170000U;
}
(bcu) = ((bcu)->Cat(new Array_<char16_t>(2, u'\u004B', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)) && ((bcw) == (3LL))){
if(!((bdg)(((bcz)->qf)))){
throw 0xE9170000U;
}
(bcu) = ((bcu)->Cat(new Array_<char16_t>(2, u'\u0056', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (8LL))) == (8LL)) && ((bcw) == (2LL))){
if(!((bdg)(((bcz)->qf)))){
throw 0xE9170000U;
}
(bcu) = ((bcu)->Cat(new Array_<char16_t>(2, u'\u0043', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (2LL))) == (2LL)) && ((bcw) == (2LL))){
if(!((bdg)(((bcz)->qf)))){
throw 0xE9170000U;
}
(bcu) = ((bcu)->Cat(new Array_<char16_t>(2, u'\u0054', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (256LL))) == (256LL)) && ((bcw) == (2LL))){
if(!((bdg)(((bcz)->qf)))){
throw 0xE9170000U;
}
(bcu) = ((bcu)->Cat(new Array_<char16_t>(11, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0076', u'\u006F', u'\u0069', u'\u0064', u'\u002A')));
}
else{
(bcu) = ((bcu)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((bcz)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
if((bcz)->ql){
(bcu) = ((bcu)->Cat(new Array_<char16_t>(1, u'\u002A')));
}
(bcu) = ((bcu)->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bdd)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if(!eqAddr_(((bcz)->nf), (nullptr))){
(bcu) = ((bcu)->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u002F', u'\u002A'))->Cat(v<Array_<char16_t>*>(((bcz)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002A', u'\u002F'))));
}
ays<List_<gb*>*>((bcx), (new Array_<int64_t>(1, (0LL))));
(bcw) = ((bcw) + (1LL));
}
if(!eqAddr_(((bbv)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bbv)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bcc), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>((bcq), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bbw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0028'))->Cat(v<Array_<char16_t>*>((bcu), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bcc), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>((bcq), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bbw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0028'))->Cat(v<Array_<char16_t>*>((bcu), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')))))));
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (4096LL))) == (4096LL)){
if((((bbv)->sf)->Len()) == (1LL)){
awe<List_<Array_<char16_t>*>*>(((bbv)->sf), (new Array_<int64_t>(1, (0LL))));
(bej) = (false);
if((((bbv)->sg)->Len()) > (0LL)){
awe<List_<gb*>*>(((bbv)->sg), (new Array_<int64_t>(1, (0LL))));
(bem) = (awi<List_<gb*>*, gb*>(((bbv)->sg), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((((bem)->qf)->nj), (nullptr))) && (((((bem)->qf)->nj)->lw) == (5LL))){
(bep) = ((as_<ul>(classTable_, (((bem)->qf)->nj), 22))->bag);
(beq)((ao), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((bbv)->sf), (new Array_<int64_t>(1, (0LL))))), ((bbv)->sg), (bep));
(bej) = (true);
}
}
if(!(bej)){
(beq)((ao), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((bbv)->sf), (new Array_<int64_t>(1, (0LL))))), ((bbv)->sg), (nullptr));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
else{
beu<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
(bev) = (bew<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL)))));
(bex)(((bbv)->si), (nullptr), (nullptr));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
awe<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
bey<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))), (bev));
ays<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
awe<List_<gb*>*>((as), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((as), (new Array_<int64_t>(1, (0LL)))))){
(bfa) = (awi<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL)))));
(bfb) = ((bbx)((bfa)));
if(eqAddr_(((bfa)->nf), (nullptr))){
bfe<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((bfa)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfb)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bff)(((bfa)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else{
bfe<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((bfa)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfb)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bff)(((bfa)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u003B', u'\u0020', u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfa)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A')))))));
}
bfh<List_<gb*>*>((as), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<un*>*>((aq), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<un*>*>((aq), (new Array_<int64_t>(1, (0LL)))))){
(bfj) = (awi<List_<un*>*, un*>((aq), (new Array_<int64_t>(1, (0LL)))));
bfe<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((bfj)->bbf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfj)->bbe), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bff)(((bfj)->bbf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
bfh<List_<un*>*>((aq), (new Array_<int64_t>(1, (0LL))));
}
}
}
// buildClass
static void uw(ul* bfk /*ast*/){
Array_<char16_t>* bfl = nullptr; // parentId
bby* bfr = nullptr; // info
int64_t bfw = 0; // parentOffset
bby* bfy = nullptr; // parentInfo
List_<um*>* bgc = nullptr; // items
um* bge = nullptr; // item
bgi* bgh = nullptr; // var_
bby* bgj = nullptr; // info2
fw* bgm = nullptr; // ctor
bby* bgq = nullptr; // ctorInfo
fw* bgs = nullptr; // cmp
bby* bgv = nullptr; // cmpInfo
fw* bgw = nullptr; // copy
bby* bgy = nullptr; // copyInfo
List_<um*>* bha = nullptr; // items
um* bhc = nullptr; // item
bgi* bhf = nullptr; // var_
bby* bhg = nullptr; // info2
(bfl) = (nullptr);
if(!eqAddr_(((bfk)->nj), (nullptr))){
(bfl) = ((bfo)((as_<ul>(classTable_, ((bfk)->nj), 22))));
}
if(eqAddr_((bfl), (nullptr))){
(bfl) = (new Array_<char16_t>(6, u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F'));
}
(bfr) = ((bbx)((bfk)));
if(!(((bfr)->bft) != (-1LL))){
throw 0xE9170000U;
}
if(eqAddr_(((bfk)->nj), (nullptr))){
(bfw) = (0LL);
}
else{
(bfy) = ((bbx)(((bfk)->nj)));
if(!(((bfy)->bft) != (-1LL))){
throw 0xE9170000U;
}
(bfw) = ((bfy)->bft);
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((at), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u005B'))->Cat(v<int64_t>((((bfr)->bft) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u005D', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<int64_t>(((bfw) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
if(!eqAddr_(((bfk)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfk)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(10, u'\u0020', u'\u003A', u'\u0020', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>((bfl), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u007B', u'\u000A', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0063', u'\u003A', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003A', u'\u003A'))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0028', u'\u0029', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>((bfl), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))))));
(bgc) = ((bfk)->bag);
awe<List_<um*>*>((bgc), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((bgc), (new Array_<int64_t>(1, (0LL)))))){
(bge) = (awi<List_<um*>*, um*>((bgc), (new Array_<int64_t>(1, (0LL)))));
if((((bge)->azl)->lw) == (2LL)){
(bgh) = (as_<bgi>(classTable_, ((bge)->azl), 38));
(bgj) = ((bbx)(((bgh)->bgk)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bgj)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))));
}
ays<List_<um*>*>((bgc), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0059', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<int64_t>((((bfr)->bft) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
(bgm) = ((bgn)((bfk), (new Array_<char16_t>(4, u'\u0063', u'\u0074', u'\u006F', u'\u0072'))));
if(!eqAddr_((bgm), (nullptr))){
(bgq) = ((bbx)((bgm)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bgq)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bgs) = ((bgn)((bfk), (new Array_<char16_t>(3, u'\u0063', u'\u006D', u'\u0070'))));
if(!eqAddr_((bgs), (nullptr))){
(bgv) = ((bbx)((bgs)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0076', u'\u0069', u'\u0072', u'\u0074', u'\u0075', u'\u0061', u'\u006C', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0065', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(19, u'\u003A', u'\u003A', u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u002A', u'\u0020', u'\u0075', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002A', u'\u003E', u'\u0028', u'\u0074', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bgv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002C', u'\u0020', u'\u0075', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
(bgw) = ((bgn)((bfk), (new Array_<char16_t>(5, u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079'))));
if(!(!eqAddr_((bgw), (nullptr)))){
throw 0xE9170000U;
}
(bgy) = ((bbx)((bgw)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(43, u'\u0076', u'\u0069', u'\u0072', u'\u0074', u'\u0075', u'\u0061', u'\u006C', u'\u0020', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0065', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u003A', u'\u003A', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bgy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bha) = ((bfk)->bag);
awe<List_<um*>*>((bha), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((bha), (new Array_<int64_t>(1, (0LL)))))){
(bhc) = (awi<List_<um*>*, um*>((bha), (new Array_<int64_t>(1, (0LL)))));
if((((bhc)->azl)->lw) == (2LL)){
(bhf) = (as_<bgi>(classTable_, ((bhc)->azl), 38));
(bhg) = ((bbx)(((bhf)->bgk)));
if(eqAddr_((((bhf)->bgk)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)((((bhf)->bgk)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bhg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)((((bhf)->bgk)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bhg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u003B', u'\u0020', u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>((((bhf)->bgk)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))))));
}
}
ays<List_<um*>*>((bha), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u007D', u'\u003B', u'\u000A')));
}
// write
static void ux(List_<Array_<char16_t>*>* bhk /*resFiles*/){
bool bhm = false;
bhq* bho = nullptr; // writer
auz* bhr = nullptr; // reader
Array_<char16_t>* bhu = nullptr; // s
bhq* bib = nullptr; // writer
if(avo<Dict_<Array_<char16_t>*, bool>*, Array_<char16_t>*, bool>((ax), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u006D', u'\u0065', u'\u0072', u'\u0067', u'\u0065')), (&bhm))){
(bho) = ((bhp)((new bhq()), ((au)->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0063', u'\u0070', u'\u0070'))), (false)));
(bhr) = ((auy)((new auz()), ((av)->Cat(new Array_<char16_t>(8, u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068')))));
while(!((bht)((bhr)))){
(bhu) = ((bhv)((bhr)));
(bhw)((bho), ((bhu)->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
(avm)((bhr));
(bhx)((bho), (bhk));
(bhy)((bho));
}
else{
(bia)(((ba)->Cat(new Array_<char16_t>(8, u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068'))), ((av)->Cat(new Array_<char16_t>(8, u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068'))));
(bib) = ((bhp)((new bhq()), ((au)->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0063', u'\u0070', u'\u0070'))), (false)));
(bhw)((bib), (new Array_<char16_t>(20, u'\u0023', u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0075', u'\u0064', u'\u0065', u'\u0020', u'\u0022', u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068', u'\u0022', u'\u000A')));
(bhx)((bib), (bhk));
(bhy)((bib));
}
}
// _dtor
static void bic(va* bid){
((bid)->bie) = (nullptr);
((bid)->bif) = (nullptr);
}
// _copy
static va* big(va* bih){
va* bii = nullptr;
(bii) = (new va());
((bii)->bie) = (copy_((bih)->bie));
((bii)->bif) = (copy_((bih)->bif));
return as_<va>(classTable_, (bii), 28);
}
// _toBin
static Array_<uint8_t>* bij(va* bik){
Array_<uint8_t>* bil = nullptr;
(bil) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bil) = ((bil)->Cat(toBin_((bik)->bie)));
(bil) = ((bil)->Cat(toBin_((bik)->bif)));
return bil;
}
// _fromBin
static va* bio(va* bip, Array_<uint8_t>* biq, int64_t* bir){
va* bis = nullptr;
(bis) = (new va());
((bis)->bie) = (fromBin_<Array_<char16_t>*>((biq), (*bir)));
((bis)->bif) = (fromBin_<gc*>((biq), (*bir)));
return bis;
}
// buildFunc
static void ve(fw* bit /*ast*/){
biw* biu = nullptr; // info
Array_<char16_t>* bja = nullptr; // arg
bool bjc = false; // first
List_<gb*>* bjd = nullptr; // items
gb* bjf = nullptr; // item
biw* bjg = nullptr; // info2
bool bjw = false; // hasMembers
gb* bjz = nullptr; // arg2
List_<um*>* bkc = nullptr; // members
int64_t bkh = 0; // localVarPos
gb* bkk = nullptr; // localVar
biw* bkl = nullptr; // info2
va* bkr = nullptr; // tmpVar
(biu) = ((biv)((bit)));
if((biu)->biy){
return;
}
((biu)->biy) = (true);
(bja) = (new Array_<char16_t>(0));
(bjc) = (true);
(bjd) = ((bit)->sg);
awe<List_<gb*>*>((bjd), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bjd), (new Array_<int64_t>(1, (0LL)))))){
(bjf) = (awi<List_<gb*>*, gb*>((bjd), (new Array_<int64_t>(1, (0LL)))));
(bjg) = ((biv)((bjf)));
if(bjc){
(bjc) = (false);
}
else{
(bja) = ((bja)->Cat(new Array_<char16_t>(1, u'\u002C')));
}
(bja) = ((bja)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bjg)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if(!eqAddr_(((bjf)->nf), (nullptr))){
(bja) = ((bja)->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u002F', u'\u002A'))->Cat(v<Array_<char16_t>*>(((bjf)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002A', u'\u002F'))));
}
ays<List_<gb*>*>((bjd), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((bit)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bit)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((biu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0028'))->Cat(v<Array_<char16_t>*>((bja), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')))));
if((aye<int64_t>(((bit)->sm), (new Array_<int64_t>(1, (0LL))), (4096LL))) == (4096LL)){
if((((bit)->sf)->Len()) == (1LL)){
awe<List_<Array_<char16_t>*>*>(((bit)->sf), (new Array_<int64_t>(1, (0LL))));
(bjw) = (false);
if((((bit)->sg)->Len()) > (0LL)){
awe<List_<gb*>*>(((bit)->sg), (new Array_<int64_t>(1, (0LL))));
(bjz) = (awi<List_<gb*>*, gb*>(((bit)->sg), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((((bjz)->qf)->nj), (nullptr))) && (((((bjz)->qf)->nj)->lw) == (5LL))){
(bkc) = ((as_<ul>(classTable_, (((bjz)->qf)->nj), 22))->bag);
(bkd)((bl), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((bit)->sf), (new Array_<int64_t>(1, (0LL))))), ((bit)->sg), (bkc));
(bjw) = (true);
}
}
if(!(bjw)){
(bkd)((bl), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((bit)->sf), (new Array_<int64_t>(1, (0LL))))), ((bit)->sg), (nullptr));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
else{
beu<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
(bkh) = (bew<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL)))));
(bki)(((bit)->si));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
awe<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
bey<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))), (bkh));
ays<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
awe<List_<gb*>*>((bo), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bo), (new Array_<int64_t>(1, (0LL)))))){
(bkk) = (awi<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL)))));
(bkl) = ((biv)((bkk)));
if(eqAddr_(((bkk)->nf), (nullptr))){
bfe<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkl)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((bko)(((bkk)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else{
bfe<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkl)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((bko)(((bkk)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u003B', u'\u0020', u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkk)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))))));
}
bfh<List_<gb*>*>((bo), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<va*>*>((bm), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<va*>*>((bm), (new Array_<int64_t>(1, (0LL)))))){
(bkr) = (awi<List_<va*>*, va*>((bm), (new Array_<int64_t>(1, (0LL)))));
bfe<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkr)->bie), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((bko)(((bkr)->bif))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
bfh<List_<va*>*>((bm), (new Array_<int64_t>(1, (0LL))));
}
}
}
// buildClass
static void vh(ul* bks /*ast*/){
Array_<char16_t>* bkt = nullptr; // parentId
biw* bkz = nullptr; // info
fw* bld = nullptr; // ctor
biw* blh = nullptr; // ctorInfo
List_<um*>* blj = nullptr; // items
um* bll = nullptr; // item
(bkt) = (nullptr);
if(!eqAddr_(((bks)->nj), (nullptr))){
(bkt) = ((bkw)((as_<ul>(classTable_, ((bks)->nj), 22))));
}
if(eqAddr_((bkt), (nullptr))){
(bkt) = (new Array_<char16_t>(6, u'\u004F', u'\u0062', u'\u006A', u'\u0065', u'\u0063', u'\u0074'));
}
(bkz) = ((biv)((bks)));
if(!eqAddr_(((bks)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bks)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
(bld) = ((ble)((bks), (new Array_<char16_t>(4, u'\u0063', u'\u0074', u'\u006F', u'\u0072'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkz)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0028', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bkt), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
if(!eqAddr_((bld), (nullptr))){
(blh) = ((biv)((bld)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((blh)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bkz)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(27, u'\u002E', u'\u0070', u'\u0072', u'\u006F', u'\u0074', u'\u006F', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u003D', u'\u0020', u'\u004F', u'\u0062', u'\u006A', u'\u0065', u'\u0063', u'\u0074', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>((bkt), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0070', u'\u0072', u'\u006F', u'\u0074', u'\u006F', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0029', u'\u003B', u'\u000A')))));
(blj) = ((bks)->bag);
awe<List_<um*>*>((blj), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((blj), (new Array_<int64_t>(1, (0LL)))))){
(bll) = (awi<List_<um*>*, um*>((blj), (new Array_<int64_t>(1, (0LL)))));
if((((bll)->azl)->lw) == (256LL)){
uk<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL))), (as_<fw>(classTable_, ((bll)->azl), 8)));
}
ays<List_<um*>*>((blj), (new Array_<int64_t>(1, (0LL))));
}
}
// write
static void vi(List_<Array_<char16_t>*>* blo /*resFiles*/){
bool blq = false;
Array_<char16_t>* bls = nullptr; // fileName
bhq* blt = nullptr; // writer
Array_<char16_t>* blw = nullptr; // fileName
if(avo<Dict_<Array_<char16_t>*, bool>*, Array_<char16_t>*, bool>((ax), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u006D', u'\u0065', u'\u0072', u'\u0067', u'\u0065')), (&blq))){
(bls) = ((fd)((au)));
(blt) = ((bhp)((new bhq()), ((au)->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0068', u'\u0074', u'\u006D', u'\u006C'))), (false)));
(bhw)((blt), (new Array_<char16_t>(16, u'\u003C', u'\u0021', u'\u0044', u'\u004F', u'\u0043', u'\u0054', u'\u0059', u'\u0050', u'\u0045', u'\u0020', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(7, u'\u003C', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(8, u'\u0009', u'\u003C', u'\u0068', u'\u0065', u'\u0061', u'\u0064', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(27, u'\u0009', u'\u0009', u'\u003C', u'\u006D', u'\u0065', u'\u0074', u'\u0061', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0074', u'\u003D', u'\u0022', u'\u0075', u'\u0074', u'\u0066', u'\u002D', u'\u0038', u'\u0022', u'\u0020', u'\u002F', u'\u003E', u'\u000A')));
(bhw)((blt), (((new Array_<char16_t>(9, u'\u0009', u'\u0009', u'\u003C', u'\u0074', u'\u0069', u'\u0074', u'\u006C', u'\u0065', u'\u003E'))->Cat(v<Array_<char16_t>*>((bls), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003C', u'\u002F', u'\u0074', u'\u0069', u'\u0074', u'\u006C', u'\u0065', u'\u003E', u'\u000A'))));
(bhw)((blt), (new Array_<char16_t>(34, u'\u0009', u'\u0009', u'\u003C', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u003D', u'\u0022', u'\u0074', u'\u0065', u'\u0078', u'\u0074', u'\u002F', u'\u006A', u'\u0061', u'\u0076', u'\u0061', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0022', u'\u003E', u'\u000A')));
(blu)((blt), (blo));
(bhw)((blt), (new Array_<char16_t>(12, u'\u0009', u'\u0009', u'\u003C', u'\u002F', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(9, u'\u0009', u'\u003C', u'\u002F', u'\u0068', u'\u0065', u'\u0061', u'\u0064', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(8, u'\u0009', u'\u003C', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(9, u'\u0009', u'\u003C', u'\u002F', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(8, u'\u003C', u'\u002F', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bhy)((blt));
}
else{
(blt) = ((bhp)((new bhq()), ((au)->Cat(new Array_<char16_t>(3, u'\u002E', u'\u006A', u'\u0073'))), (false)));
(blu)((blt), (blo));
(bhy)((blt));
(blw) = ((fd)((au)));
(blt) = ((bhp)((new bhq()), ((au)->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0068', u'\u0074', u'\u006D', u'\u006C'))), (false)));
(bhw)((blt), (new Array_<char16_t>(16, u'\u003C', u'\u0021', u'\u0044', u'\u004F', u'\u0043', u'\u0054', u'\u0059', u'\u0050', u'\u0045', u'\u0020', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(7, u'\u003C', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(8, u'\u0009', u'\u003C', u'\u0068', u'\u0065', u'\u0061', u'\u0064', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(27, u'\u0009', u'\u0009', u'\u003C', u'\u006D', u'\u0065', u'\u0074', u'\u0061', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0074', u'\u003D', u'\u0022', u'\u0075', u'\u0074', u'\u0066', u'\u002D', u'\u0038', u'\u0022', u'\u0020', u'\u002F', u'\u003E', u'\u000A')));
(bhw)((blt), (((new Array_<char16_t>(15, u'\u0009', u'\u0009', u'\u003C', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0020', u'\u0073', u'\u0072', u'\u0063', u'\u003D', u'\u0022'))->Cat(v<Array_<char16_t>*>((blw), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(38, u'\u002E', u'\u006A', u'\u0073', u'\u0022', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u003D', u'\u0022', u'\u0074', u'\u0065', u'\u0078', u'\u0074', u'\u002F', u'\u006A', u'\u0061', u'\u0076', u'\u0061', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0022', u'\u003E', u'\u003C', u'\u002F', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u003E', u'\u000A'))));
(bhw)((blt), (((new Array_<char16_t>(9, u'\u0009', u'\u0009', u'\u003C', u'\u0074', u'\u0069', u'\u0074', u'\u006C', u'\u0065', u'\u003E'))->Cat(v<Array_<char16_t>*>((blw), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003C', u'\u002F', u'\u0074', u'\u0069', u'\u0074', u'\u006C', u'\u0065', u'\u003E', u'\u000A'))));
(bhw)((blt), (new Array_<char16_t>(9, u'\u0009', u'\u003C', u'\u002F', u'\u0068', u'\u0065', u'\u0061', u'\u0064', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(8, u'\u0009', u'\u003C', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(9, u'\u0009', u'\u003C', u'\u002F', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u003E', u'\u000A')));
(bhw)((blt), (new Array_<char16_t>(8, u'\u003C', u'\u002F', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bhy)((blt));
}
}
// _signInt
static int64_t atp(int64_t blx /*me_*/){
return ((blx) > (0LL)) ? (1LL) : (((blx) < (0LL)) ? (-1LL) : (0LL));
}
// isCorrectSrcName
static bool auq(Array_<char16_t>* bly /*name*/){
int64_t blz = 0; // idx
(blz) = (0LL);
if(((blz) < ((bly)->Len())) && (((bly)->At(blz)) == (u'\u005C'))){
(blz) = ((blz) + (1LL));
}
while(true){
if(((blz) >= ((bly)->Len())) || (!((((u'\u0061') <= ((bly)->At(blz))) && (((bly)->At(blz)) <= (u'\u007A'))) || (((bly)->At(blz)) == (u'\u005F'))))){
return false;
}
while(true){
(blz) = ((blz) + (1LL));
if((blz) >= ((bly)->Len())){
return true;
}
if(((((u'\u0061') <= ((bly)->At(blz))) && (((bly)->At(blz)) <= (u'\u007A'))) || (((bly)->At(blz)) == (u'\u005F'))) || (((u'\u0030') <= ((bly)->At(blz))) && (((bly)->At(blz)) <= (u'\u0039')))){
continue;
}
if(((bly)->At(blz)) == (u'\u005C')){
(blz) = ((blz) + (1LL));
break;
}
return false;
}
}
}
// replacePath
static Array_<char16_t>* auv(Array_<char16_t>* bmr /*path*/){
Array_<char16_t>* bms = nullptr; // r
int64_t bmw = 0;
int64_t bmx = 0;
(bms) = (newArray_<char16_t, Array_<char16_t>*>(1, ((bmr)->Len())));
for(bmw = (0LL), bmx = (((bmr)->Len()) - (1LL)); bmw <= bmx; bmw += (1LL)){
((bms)->At(bmw)) = ((((bmr)->At(bmw)) == (u'\u005C')) ? (u'\u002F') : ((bmr)->At(bmw)));
}
return bms;
}
// _sub
template<typename T_> static T_ auw(T_ bmy /*me_*/, Array_<int64_t>* bmz /*type*/, int64_t bna /*start*/, int64_t bnb /*len*/){
return sub_(bmy, bna, bnb);
}
// makeReader
static auz* auy(auz* bnc /*me2*/, Array_<char16_t>* bnd /*path*/){
bnc->bne = reinterpret_cast<int64_t>(new reader_());
std::u16string s_ = bnd->B;
const std::string& t_ = utf16ToUtf8_(s_);
reader_* r_ = reinterpret_cast<reader_*>(bnc->bne);
r_->F = new std::ifstream(t_.c_str(), std::ios::in | std::ios::binary);
if(!*r_->F) return nullptr;
return bnc;
}
// _dtor
static void bnf(auz* bng /*me*/){
}
// fin
static void avm(auz* bnh /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bnh->bne);
r_->F->close();
}
// setPos
static void bni(auz* bnj /*me*/, int64_t bnk /*origin*/, int64_t bnl /*pos*/){
reader_* r_ = reinterpret_cast<reader_*>(bnj->bne);
std::ios_base::seekdir o_ = std::ios_base::beg;
switch(bnk){
case 0: o_ = std::ios_base::beg; break;
case 1: o_ = std::ios_base::cur; break;
case 2: o_ = std::ios_base::end; break;
}
r_->F->seekg(bnl, o_);
}
// getPos
static int64_t bnm(auz* bnn /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bnn->bne);
return static_cast<int64_t>(r_->F->tellg());
}
// delimiter
static void bno(auz* bnp /*me*/, Array_<char16_t>* bnq /*delimiters*/){
}
// read
static Array_<uint8_t>* bnr(auz* bns /*me*/, int64_t bnt /*size*/){
}
// readLetter
static char16_t bnu(auz* bnv /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bnv->bne);
return readUtf8_(r_->F);
}
// readInt
static int64_t bnw(auz* bnx /*me*/){
}
// readFloat
static double bny(auz* bnz /*me*/){
}
// readChar
static char16_t boa(auz* bob /*me*/){
}
// readStr
static Array_<char16_t>* boc(auz* bod /*me*/){
}
// readLine
static Array_<char16_t>* bhv(auz* boe /*me*/){
Array_<char16_t>* bof = nullptr; // buf
char16_t boj = 0; // c
(bof) = (new Array_<char16_t>(0));
while(!((bht)((boe)))){
(boj) = ((bnu)((boe)));
if((boj) == (u'\u000D')){
continue;
}
if((boj) == (u'\u000A')){
break;
}
(bof) = ((bof)->Cat(v<char16_t>((boj), (new Array_<int64_t>(1, (0LL))))));
}
return bof;
}
// fileSize
static int64_t bop(auz* boq /*me*/){
}
// term
static bool bht(auz* bor /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bor->bne);
char c_;
if(r_->F->get(c_)) {
r_->F->seekg(-1, std::ios_base::cur);
return false;
}
return true;
}
// _copy
static auz* bos(auz* bot){
auz* bou = nullptr;
(bou) = (new auz());
((bou)->bne) = ((bot)->bne);
((bou)->bov) = ((bot)->bov);
((bou)->bow) = ((bot)->bow);
((bou)->box) = ((bot)->box);
return as_<auz>(classTable_, (bou), 30);
}
// _toBin
static Array_<uint8_t>* boy(auz* boz){
Array_<uint8_t>* bpa = nullptr;
(bpa) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bpa) = ((bpa)->Cat(toBin_((boz)->bne)));
(bpa) = ((bpa)->Cat(toBin_((boz)->bov)));
(bpa) = ((bpa)->Cat(toBin_((boz)->bow)));
(bpa) = ((bpa)->Cat(toBin_((boz)->box)));
return bpa;
}
// _fromBin
static auz* bpf(auz* bpg, Array_<uint8_t>* bph, int64_t* bpi){
auz* bpj = nullptr;
(bpj) = (new auz());
((bpj)->bne) = (fromBin_<int64_t>((bph), (*bpi)));
((bpj)->bov) = (fromBin_<int64_t>((bph), (*bpi)));
((bpj)->bow) = (fromBin_<int64_t>((bph), (*bpi)));
((bpj)->box) = (fromBin_<int64_t>((bph), (*bpi)));
return bpj;
}
// parseRoot
static avk* avj(){
avk* bpk = nullptr; // ast
char16_t bps = 0; // c
bool bpx = false; // itemPublic
int64_t bqc = 0; // row
int64_t bqd = 0; // col
Array_<char16_t>* bqe = nullptr; // id
Array_<char16_t>* bqh = nullptr;
fx* bqj = nullptr; // item
(bpk) = (new avk());
(bpl)((bpk), (1LL), ((bpm)((bf), (1LL), (1LL))), (nullptr), (false));
((bpk)->awd) = (new List_<avl*>());
((bpk)->aza) = (new List_<fx*>());
(bh) = ((bpk)->awd);
((bpk)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bpn<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (bpk));
(ave) = (u'\u000A');
(ave) = ((bpo)());
while(true){
(bps) = ((bpo)());
if((bps) == (u'\u0000')){
break;
}
if((bps) == (u'\u000A')){
continue;
}
(bpx) = (false);
if((bps) == (u'\u002B')){
(bpx) = (true);
}
else{
(ave) = (bps);
}
(bqc) = (avc);
(bqd) = (avd);
(bqe) = ((bqf)((true), (false)));
bqh = bqe;
if(cmp_(bqh, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
(bqj) = ((bqk)((nullptr), (false)));
}
else if(cmp_(bqh, (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0){
(bqj) = ((bqm)((1LL), (nullptr)));
}
else if(cmp_(bqh, (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074'))) == 0){
(bqj) = ((bqo)());
}
else if(cmp_(bqh, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073'))) == 0){
(bqj) = ((bqr)());
}
else if(cmp_(bqh, (new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0075', u'\u0064', u'\u0065'))) == 0){
}
else if(cmp_(bqh, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0){
(bqj) = ((bqv)());
}
else if(cmp_(bqh, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0){
(bqj) = ((bqx)());
}
else{(ad)((65547LL), ((bpm)((bf), (bqc), (bqd))), (new Array_<Array_<char16_t>*>(1, (bqe))));
(bra)(((brb)()));
continue;
}
if(((bqj)->lw) == (2LL)){
(((as_<bgi>(classTable_, (bqj), 38))->bgk)->no) = (bpx);
}
else if(((bqj)->lw) == (3LL)){
(((as_<bqp>(classTable_, (bqj), 44))->brf)->no) = (bpx);
}
else{
((bqj)->no) = (bpx);
}
uh<List_<fx*>*, fx*>(((bpk)->aza), (new Array_<int64_t>(1, (0LL))), (bqj));
}
brh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return bpk;
}
// _dtor
static void bri(avl* brj){
((brj)->awk) = (nullptr);
((brj)->axf) = (nullptr);
}
// _copy
static avl* brk(avl* brl){
avl* brm = nullptr;
(brm) = (new avl());
((brm)->awk) = (copy_((brl)->awk));
((brm)->axf) = (copy_((brl)->axf));
return as_<avl>(classTable_, (brm), 34);
}
// _toBin
static Array_<uint8_t>* brn(avl* bro){
Array_<uint8_t>* brp = nullptr;
(brp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(brp) = ((brp)->Cat(toBin_((bro)->awk)));
(brp) = ((brp)->Cat(toBin_((bro)->axf)));
return brp;
}
// _fromBin
static avl* brs(avl* brt, Array_<uint8_t>* bru, int64_t* brv){
avl* brw = nullptr;
(brw) = (new avl());
((brw)->awk) = (fromBin_<fx*>((bru), (*brv)));
((brw)->axf) = (fromBin_<fx*>((bru), (*brv)));
return brw;
}
// _dtor
static void brx(avk* bry){
((bry)->aza) = (nullptr);
((bry)->awd) = (nullptr);
((bry)->ne) = (nullptr);
((bry)->nf) = (nullptr);
((bry)->ng) = (nullptr);
((bry)->nh) = (nullptr);
((bry)->ni) = (nullptr);
((bry)->nj) = (nullptr);
((bry)->nk) = (nullptr);
}
// _copy
static avk* brz(avk* bsa){
avk* bsb = nullptr;
(bsb) = (new avk());
((bsb)->aza) = (copy_((bsa)->aza));
((bsb)->awd) = (copy_((bsa)->awd));
((bsb)->ne) = (copy_((bsa)->ne));
((bsb)->nf) = (copy_((bsa)->nf));
((bsb)->ng) = (copy_((bsa)->ng));
((bsb)->nh) = (copy_((bsa)->nh));
((bsb)->ni) = (copy_((bsa)->ni));
((bsb)->nj) = (copy_((bsa)->nj));
((bsb)->nk) = (copy_((bsa)->nk));
((bsb)->no) = ((bsa)->no);
((bsb)->lw) = ((bsa)->lw);
return as_<avk>(classTable_, (bsb), 32);
}
// _toBin
static Array_<uint8_t>* bsc(avk* bsd){
Array_<uint8_t>* bse = nullptr;
(bse) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bse) = ((bse)->Cat(toBin_((bsd)->aza)));
(bse) = ((bse)->Cat(toBin_((bsd)->awd)));
(bse) = ((bse)->Cat(toBin_((bsd)->ne)));
(bse) = ((bse)->Cat(toBin_((bsd)->nf)));
(bse) = ((bse)->Cat(toBin_((bsd)->ng)));
(bse) = ((bse)->Cat(toBin_((bsd)->nh)));
(bse) = ((bse)->Cat(toBin_((bsd)->ni)));
(bse) = ((bse)->Cat(toBin_((bsd)->nj)));
(bse) = ((bse)->Cat(toBin_((bsd)->nk)));
(bse) = ((bse)->Cat(toBin_((bsd)->no)));
(bse) = ((bse)->Cat(toBin_((bsd)->lw)));
return bse;
}
// _fromBin
static avk* bsq(avk* bsr, Array_<uint8_t>* bss, int64_t* bst){
avk* bsu = nullptr;
(bsu) = (new avk());
((bsu)->aza) = (fromBin_<List_<fx*>*>((bss), (*bst)));
((bsu)->awd) = (fromBin_<List_<avl*>*>((bss), (*bst)));
((bsu)->ne) = (fromBin_<ga*>((bss), (*bst)));
((bsu)->nf) = (fromBin_<Array_<char16_t>*>((bss), (*bst)));
((bsu)->ng) = (fromBin_<fx*>((bss), (*bst)));
((bsu)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((bss), (*bst)));
((bsu)->ni) = (fromBin_<Array_<char16_t>*>((bss), (*bst)));
((bsu)->nj) = (fromBin_<fx*>((bss), (*bst)));
((bsu)->nk) = (fromBin_<fy*>((bss), (*bst)));
((bsu)->no) = (fromBin_<bool>((bss), (*bst)));
((bsu)->lw) = (fromBin_<int64_t>((bss), (*bst)));
return bsu;
}
// _getDict
template<typename T_, typename C_, typename R_> static R_ avo(T_ bsv /*me_*/, Array_<int64_t>* bsw /*type*/, C_ bsx /*key*/, bool* bsy /*existed*/){
return dictSearch_(bsv->B, bsx, bsy);
}
// _head
template<typename T_> static void awe(T_ bsz /*me_*/, Array_<int64_t>* bta /*type*/){
bsz->I = bsz->B.begin();
}
// _term
template<typename T_> static bool awg(T_ btb /*me_*/, Array_<int64_t>* btc /*type*/){
return btb->I == btb->B.end();
}
// _getList
template<typename T_, typename R_> static R_ awi(T_ btd /*me_*/, Array_<int64_t>* bte /*type*/){
return *btd->I;
}
// _findArray
template<typename T_, typename C_> static int64_t awn(T_ btf /*me_*/, Array_<int64_t>* btg /*type*/, C_ bth /*item*/, int64_t bti /*start*/){
if(bti == -1) bti = 0;
if(bti < 0) return -1;
for(int64_t i_ = bti; i_ < btf->L; i_++){
if(btf->B[i_] == bth) return i_;
}
return -1;
}
// _and
template<typename T_> static T_ aye(T_ btj /*me_*/, Array_<int64_t>* btk /*type*/, T_ btl /*n*/){
return btj & btl;
}
// _next
template<typename T_> static void ays(T_ btm /*me_*/, Array_<int64_t>* btn /*type*/){
++btm->I;
}
// makeEntryPoint
static fw* ayw(fw* bto /*mainFunc*/){
ga* btp = nullptr; // pos
fw* btq = nullptr; // entry
btu* btt = nullptr; // try_
gb* bua = nullptr; // var_
bud* buc = nullptr; // type
btw* buh = nullptr; // block_
btw* bum = nullptr; // block_
List_<fx*>* bup = nullptr; // funcs
buu* but = nullptr; // do_
bux* buw = nullptr; // call
gd* bvc = nullptr; // ref
btx* bvg = nullptr; // catch_
btw* bvj = nullptr; // block_
bty* bvm = nullptr; // exprs
bvp* bvo = nullptr; // expr
bud* bvt = nullptr; // type
bvp* bvw = nullptr; // expr
bud* bvy = nullptr; // type
buu* bwb = nullptr; // do_
bux* bwd = nullptr; // call
gd* bwf = nullptr; // ref_
buy* bwh = nullptr; // excpt
gd* bwl = nullptr; // ref_
List_<fx*>* bwo = nullptr; // funcs
buu* bwr = nullptr; // do_
bux* bwt = nullptr; // call
gd* bwv = nullptr; // ref
(btp) = ((bpm)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (1LL), (1LL)));
(btq) = (new fw());
(btr)((btq), (256LL), (btp));
((btq)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((btq)->sm) = (0LL);
((btq)->sf) = (new List_<Array_<char16_t>*>());
((btq)->sg) = (new List_<gb*>());
((btq)->sh) = (nullptr);
((btq)->si) = (new List_<ge*>());
(btt) = (new btu());
(btr)((btt), (66051LL), (btp));
(bua) = (new gb());
(btr)((bua), (7LL), (btp));
((bua)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bua)->qk) = (3LL);
((bua)->ql) = (false);
(buc) = (new bud());
(btr)((buc), (1026LL), (btp));
((buc)->bue) = (0LL);
((bua)->qf) = (buc);
((bua)->qg) = (nullptr);
((btt)->buf) = (bua);
(buh) = (new btw());
(btr)((buh), (66052LL), (btp));
((buh)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((buh)->buf) = (nullptr);
((buh)->bui) = (new List_<ge*>());
((btt)->buj) = (buh);
((btt)->buk) = (new List_<btx*>());
(bum) = (new btw());
(btr)((bum), (66052LL), (btp));
((bum)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bum)->buf) = (nullptr);
((bum)->bui) = (new List_<ge*>());
((btt)->bun) = (bum);
(bup) = (new List_<fx*>());
uh<List_<fx*>*, fx*>((bup), (new Array_<int64_t>(1, (0LL))), ((buq)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(5, u'\u005F', u'\u0069', u'\u006E', u'\u0069', u'\u0074')), (false))));
uh<List_<fx*>*, fx*>((bup), (new Array_<int64_t>(1, (0LL))), ((buq)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(9, u'\u005F', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))));
uh<List_<fx*>*, fx*>((bup), (new Array_<int64_t>(1, (0LL))), (bto));
awe<List_<fx*>*>((bup), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<fx*>*>((bup), (new Array_<int64_t>(1, (0LL)))))){
(but) = (new buu());
(btr)((but), (528LL), (btp));
(buw) = (new bux());
(buz)((buw), (2057LL), (btp));
((buw)->bva) = (new List_<buy*>());
(bvc) = (new gd());
(buz)((bvc), (2062LL), (btp));
((bvc)->nj) = (awi<List_<fx*>*, fx*>((bup), (new Array_<int64_t>(1, (0LL)))));
((buw)->bvd) = (bvc);
((but)->bve) = (buw);
uh<List_<ge*>*, ge*>((((btt)->buj)->bui), (new Array_<int64_t>(1, (0LL))), (but));
ays<List_<fx*>*>((bup), (new Array_<int64_t>(1, (0LL))));
}
(bvg) = (new btx());
(btr)((bvg), (524LL), (btp));
((bvg)->bvh) = (new List_<bty*>());
(bvj) = (new btw());
(btr)((bvj), (66052LL), (btp));
((bvj)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bvj)->buf) = (nullptr);
((bvj)->bui) = (new List_<ge*>());
((bvg)->bvk) = (bvj);
(bvm) = (new bty());
(bvo) = (new bvp());
(buz)((bvo), (67585LL), (btp));
((bvo)->pj) = (1LL);
((bvo)->bvr) = (0x0000000000000000ULL);
(bvt) = (new bud());
(btr)((bvt), (1026LL), (btp));
((bvt)->bue) = (0LL);
((bvo)->pf) = (bvt);
((bvm)->bvu) = (bvo);
(bvw) = (new bvp());
(buz)((bvw), (67585LL), (btp));
((bvw)->pj) = (1LL);
((bvw)->bvr) = (0x00000000FFFFFFFFULL);
(bvy) = (new bud());
(btr)((bvy), (1026LL), (btp));
((bvy)->bue) = (0LL);
((bvw)->pf) = (bvy);
((bvm)->bvz) = (bvw);
uh<List_<bty*>*, bty*>(((bvg)->bvh), (new Array_<int64_t>(1, (0LL))), (bvm));
(bwb) = (new buu());
(btr)((bwb), (528LL), (btp));
(bwd) = (new bux());
(buz)((bwd), (2057LL), (btp));
((bwd)->bva) = (new List_<buy*>());
(bwf) = (new gd());
(buz)((bwf), (2062LL), (btp));
((bwf)->nj) = ((buq)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(4, u'\u005F', u'\u0065', u'\u0072', u'\u0072')), (false)));
((bwd)->bvd) = (bwf);
(bwh) = (new buy());
((bwh)->bwi) = (false);
((bwh)->bwj) = (false);
(bwl) = (new gd());
(buz)((bwl), (2062LL), (btp));
((bwl)->nj) = ((btt)->buf);
((bwh)->bwm) = (bwl);
uh<List_<buy*>*, buy*>(((bwd)->bva), (new Array_<int64_t>(1, (0LL))), (bwh));
((bwb)->bve) = (bwd);
uh<List_<ge*>*, ge*>((((bvg)->bvk)->bui), (new Array_<int64_t>(1, (0LL))), (bwb));
uh<List_<btx*>*, btx*>(((btt)->buk), (new Array_<int64_t>(1, (0LL))), (bvg));
(bwo) = (new List_<fx*>());
uh<List_<fx*>*, fx*>((bwo), (new Array_<int64_t>(1, (0LL))), ((buq)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0069', u'\u006E', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))));
uh<List_<fx*>*, fx*>((bwo), (new Array_<int64_t>(1, (0LL))), ((buq)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(4, u'\u005F', u'\u0066', u'\u0069', u'\u006E')), (false))));
awe<List_<fx*>*>((bwo), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<fx*>*>((bwo), (new Array_<int64_t>(1, (0LL)))))){
(bwr) = (new buu());
(btr)((bwr), (528LL), (btp));
(bwt) = (new bux());
(buz)((bwt), (2057LL), (btp));
((bwt)->bva) = (new List_<buy*>());
(bwv) = (new gd());
(buz)((bwv), (2062LL), (btp));
((bwv)->nj) = (awi<List_<fx*>*, fx*>((bwo), (new Array_<int64_t>(1, (0LL)))));
((bwt)->bvd) = (bwv);
((bwr)->bve) = (bwt);
uh<List_<ge*>*, ge*>((((btt)->bun)->bui), (new Array_<int64_t>(1, (0LL))), (bwr));
ays<List_<fx*>*>((bwo), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<ge*>*, ge*>(((btq)->si), (new Array_<int64_t>(1, (0LL))), (btt));
return btq;
}
// rebuildFunc
static void ayx(fw* bww /*ast*/){
List_<gb*>* bwz = nullptr; // items
if(!eqAddr_(((bww)->nk), (nullptr))){
return;
}
((bww)->nk) = (bww);
(bwz) = ((bww)->sg);
awe<List_<gb*>*>((bwz), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bwz), (new Array_<int64_t>(1, (0LL)))))){
(bxb)((awi<List_<gb*>*, gb*>((bwz), (new Array_<int64_t>(1, (0LL))))));
ays<List_<gb*>*>((bwz), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((bww)->sh), (nullptr))){
((bww)->sh) = ((bxe)(((bww)->sh), (nullptr)));
}
((bww)->si) = ((bxf)(((bww)->si), ((bww)->sh), (bww)));
}
// rebuildRoot
static bool azb(Array_<char16_t>* bxg /*key*/, fx* bxh /*value*/, fz* bxi /*data*/){
avk* bxj = nullptr; // ast
fw* bxm = nullptr; // initVarsFunc
fw* bxn = nullptr; // finVarsFunc
List_<fx*>* bxo = nullptr; // items
fx* bxq = nullptr; // item
bgi* bxu = nullptr; // var_
buu* bxy = nullptr; // do_
byb* bya = nullptr; // assign
gd* bye = nullptr; // ref
buu* byl = nullptr; // do_
byb* byn = nullptr; // assign
gd* byp = nullptr; // ref
(bxj) = (as_<avk>(classTable_, (bxh), 32));
if(!eqAddr_(((bxj)->nk), (nullptr))){
return true;
}
((bxj)->nk) = (bxj);
(bxm) = (as_<fw>(classTable_, ((buq)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(9, u'\u005F', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))), 8));
(bxn) = (as_<fw>(classTable_, ((buq)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0069', u'\u006E', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))), 8));
(bxo) = ((bxj)->aza);
awe<List_<fx*>*>((bxo), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<fx*>*>((bxo), (new Array_<int64_t>(1, (0LL)))))){
(bxq) = (awi<List_<fx*>*, fx*>((bxo), (new Array_<int64_t>(1, (0LL)))));
if(((bxq)->lw) == (256LL)){
(ayx)((as_<fw>(classTable_, (bxq), 8)));
}
else if(((bxq)->lw) == (2LL)){
(bxu) = (as_<bgi>(classTable_, (bxq), 38));
if(!((((bxu)->bgk)->qk) == (1LL))){
throw 0xE9170000U;
}
if(!eqAddr_((((bxu)->bgk)->qg), (nullptr))){
(((bxu)->bgk)->qg) = ((bxx)((((bxu)->bgk)->qg), (false)));
(bxy) = (new buu());
(btr)((bxy), (528LL), ((bxj)->ne));
(bya) = (new byb());
(buz)((bya), (2050LL), ((bxj)->ne));
((bya)->byc) = (0LL);
(bye) = (new gd());
(buz)((bye), (2062LL), ((bxj)->ne));
((bye)->pf) = (((bxu)->bgk)->qf);
((bye)->nj) = ((bxu)->bgk);
((bya)->byf) = (bye);
((bya)->byg) = (((bxu)->bgk)->qg);
((bxy)->bve) = (bya);
uh<List_<ge*>*, ge*>(((bxm)->si), (new Array_<int64_t>(1, (0LL))), ((byh)((bxy), (nullptr), (nullptr))));
}
if((!eqAddr_((((bxu)->bgk)->qf), (nullptr))) && ((byj)((((bxu)->bgk)->qf)))){
(byl) = (new buu());
(btr)((byl), (528LL), ((bxj)->ne));
(byn) = (new byb());
(buz)((byn), (2050LL), ((bxj)->ne));
((byn)->byc) = (0LL);
(byp) = (new gd());
(buz)((byp), (2062LL), ((bxj)->ne));
((byp)->pf) = (((bxu)->bgk)->qf);
((byp)->nj) = ((bxu)->bgk);
((byn)->byf) = (byp);
((byn)->byg) = ((byq)(((bxj)->ne)));
((byl)->bve) = (byn);
uh<List_<ge*>*, ge*>(((bxn)->si), (new Array_<int64_t>(1, (0LL))), ((byh)((byl), (nullptr), (nullptr))));
}
}
else{
if(!((((((bxq)->lw) == (3LL)) || (((bxq)->lw) == (4LL))) || (((bxq)->lw) == (5LL))) || (((bxq)->lw) == (6LL)))){
throw 0xE9170000U;
}
}
ays<List_<fx*>*>((bxo), (new Array_<int64_t>(1, (0LL))));
}
return true;
}
// getInfo
static bby* bbx(fx* bys /*ast*/){
bby* byv = nullptr; // info
if((eqAddr_(((bys)->nk), (nullptr))) || ((((bys)->nk)->lw) != (268435456LL))){
(byv) = (new bby());
((byv)->lw) = (268435456LL);
((byv)->bdy) = ((byw)());
if((((aye<int64_t>(((bys)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL)) && (!eqAddr_(((bys)->nf), (nullptr)))) && (cmp_(((bys)->nf), (new Array_<char16_t>(1, u'\u0024'))) != 0)){
((byv)->byz) = ((byw)());
if((aye<int64_t>(((bys)->lw), (new Array_<int64_t>(1, (0LL))), (16843264LL))) == (16843264LL)){
((byv)->bzc) = ((byw)());
}
else{
((byv)->bzc) = (nullptr);
}
}
else{
((byv)->byz) = (nullptr);
((byv)->bzc) = (nullptr);
}
((byv)->bft) = (-1LL);
((byv)->bca) = (false);
((byv)->bzf) = (false);
((byv)->bzg) = (false);
((bys)->nk) = (byv);
}
return as_<bby>(classTable_, ((bys)->nk), 36);
}
// _dtor
static void bzh(bby* bzi){
((bzi)->bdy) = (nullptr);
((bzi)->byz) = (nullptr);
((bzi)->bzc) = (nullptr);
}
// _copy
static bby* bzj(bby* bzk){
bby* bzl = nullptr;
(bzl) = (new bby());
((bzl)->bdy) = (copy_((bzk)->bdy));
((bzl)->byz) = (copy_((bzk)->byz));
((bzl)->bzc) = (copy_((bzk)->bzc));
((bzl)->bft) = ((bzk)->bft);
((bzl)->bca) = ((bzk)->bca);
((bzl)->bzf) = ((bzk)->bzf);
((bzl)->bzg) = ((bzk)->bzg);
((bzl)->lw) = ((bzk)->lw);
return as_<bby>(classTable_, (bzl), 36);
}
// _toBin
static Array_<uint8_t>* bzm(bby* bzn){
Array_<uint8_t>* bzo = nullptr;
(bzo) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bzo) = ((bzo)->Cat(toBin_((bzn)->bdy)));
(bzo) = ((bzo)->Cat(toBin_((bzn)->byz)));
(bzo) = ((bzo)->Cat(toBin_((bzn)->bzc)));
(bzo) = ((bzo)->Cat(toBin_((bzn)->bft)));
(bzo) = ((bzo)->Cat(toBin_((bzn)->bca)));
(bzo) = ((bzo)->Cat(toBin_((bzn)->bzf)));
(bzo) = ((bzo)->Cat(toBin_((bzn)->bzg)));
(bzo) = ((bzo)->Cat(toBin_((bzn)->lw)));
return bzo;
}
// _fromBin
static bby* bzx(bby* bzy, Array_<uint8_t>* bzz, int64_t* caa){
bby* cab = nullptr;
(cab) = (new bby());
((cab)->bdy) = (fromBin_<Array_<char16_t>*>((bzz), (*caa)));
((cab)->byz) = (fromBin_<Array_<char16_t>*>((bzz), (*caa)));
((cab)->bzc) = (fromBin_<Array_<char16_t>*>((bzz), (*caa)));
((cab)->bft) = (fromBin_<int64_t>((bzz), (*caa)));
((cab)->bca) = (fromBin_<bool>((bzz), (*caa)));
((cab)->bzf) = (fromBin_<bool>((bzz), (*caa)));
((cab)->bzg) = (fromBin_<bool>((bzz), (*caa)));
((cab)->lw) = (fromBin_<int64_t>((bzz), (*caa)));
return cab;
}
// getType
static Array_<char16_t>* bct(gc* cac /*type*/){
int64_t cag = 0;
caq* cap = nullptr; // func_
Array_<char16_t>* cas = nullptr; // id
Array_<char16_t>* cav = nullptr; // arg
bool caw = false; // first
List_<car*>* cax = nullptr; // items
car* cba = nullptr; // item
cbn* cbm = nullptr; // gen
int64_t cbp = 0;
cby* cbx = nullptr; // dict_
bud* ccc = nullptr; // prim
int64_t cce = 0;
fx* ccl = nullptr; // ref
bby* cco = nullptr; // info
if(eqAddr_((cac), (nullptr))){
return new Array_<char16_t>(4, u'\u0076', u'\u006F', u'\u0069', u'\u0064');
}
switch((cac)->lw){
case 66561LL:
return ((new Array_<char16_t>(7, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cai>(classTable_, (cac), 76))->cak))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
case 1025LL:
return ((new Array_<char16_t>(4, u'\u0075', u'\u0069', u'\u006E', u'\u0074'))->Cat(v<int64_t>((((as_<cam>(classTable_, (cac), 78))->can) * (8LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u005F', u'\u0074'));
break;
case 66562LL:
(cap) = (as_<caq>(classTable_, (cac), 80));
(cas) = ((byw)());
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0064', u'\u0065', u'\u0066', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((cap)->cat))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0028', u'\u002A'))->Cat(v<Array_<char16_t>*>((cas), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u0028')))));
(cav) = (new Array_<char16_t>(0));
(caw) = (true);
(cax) = ((cap)->cay);
awe<List_<car*>*>((cax), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<car*>*>((cax), (new Array_<int64_t>(1, (0LL)))))){
(cba) = (awi<List_<car*>*, car*>((cax), (new Array_<int64_t>(1, (0LL)))));
if(caw){
(caw) = (false);
}
else{
(cav) = ((cav)->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
}
(cav) = ((cav)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((cba)->cbg))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if((cba)->cbi){
(cav) = ((cav)->Cat(new Array_<char16_t>(1, u'\u002A')));
}
ays<List_<car*>*>((cax), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((cav), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
return cas;
break;
case 66563LL:
(cbm) = (as_<cbn>(classTable_, (cac), 84));
switch((cbm)->cbq){
case 0LL:
return ((new Array_<char16_t>(6, u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((cbm)->cbs))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
case 1LL:
return ((new Array_<char16_t>(7, u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((cbm)->cbs))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
case 2LL:
return ((new Array_<char16_t>(7, u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((cbm)->cbs))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66564LL:
(cbx) = (as_<cby>(classTable_, (cac), 86));
return ((new Array_<char16_t>(6, u'\u0044', u'\u0069', u'\u0063', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((cbx)->cbz))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((cbx)->cca))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A')));
break;
case 1026LL:
(ccc) = (as_<bud>(classTable_, (cac), 60));
switch((ccc)->bue){
case 0LL:
return new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074');
break;
case 1LL:
return new Array_<char16_t>(6, u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065');
break;
case 2LL:
return new Array_<char16_t>(8, u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074');
break;
case 3LL:
return new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66565LL:
(ccl) = ((cac)->nj);
if(((ccl)->lw) == (5LL)){
(bfo)((as_<ul>(classTable_, (ccl), 22)));
(cco) = ((bbx)((ccl)));
return ((cco)->bdy)->Cat(new Array_<char16_t>(1, u'\u002A'));
}
else{
if(!(((ccl)->lw) == (6LL))){
throw 0xE9170000U;
}
return new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074');
}
break;
case 1027LL:
if(!(false)){
throw 0xE9170000U;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// isInt
static bool bdg(gc* ccs /*type*/){
return (((ccs)->lw) == (1026LL)) && (((as_<bud>(classTable_, (ccs), 60))->bue) == (0LL));
}
// write
static void beq(List_<Array_<char16_t>*>* cct /*codes*/, Array_<char16_t>* ccu /*attr*/, List_<gb*>* ccv /*args*/, List_<um*>* ccw /*members*/){
Array_<char16_t>* ccy = nullptr;
bby* cda = nullptr; // class_
bby* cdc = nullptr; // me_
bby* cdd = nullptr; // key
bby* cde = nullptr; // item
bby* cdg = nullptr; // me_
bby* cdh = nullptr; // item
bby* cdj = nullptr; // me_
bby* cdk = nullptr; // item
bby* cdm = nullptr; // me_
bby* cdn = nullptr; // item
bby* cdp = nullptr; // me_
bby* cdq = nullptr; // n
bby* cdt = nullptr; // me_
bby* cdv = nullptr; // me_
bby* cdw = nullptr; // value
bby* cdy = nullptr; // me_
bby* cdz = nullptr; // item
bby* cea = nullptr; // start
bby* cec = nullptr; // me_
bby* ced = nullptr; // item
bby* cef = nullptr; // me_
bby* ceg = nullptr; // callback
bby* ceh = nullptr; // data
bby* cej = nullptr; // me_
bby* cek = nullptr; // key
bby* cel = nullptr; // existed
bby* cen = nullptr; // me_
bby* cep = nullptr; // me_
bby* cer = nullptr; // me_
bby* cet = nullptr; // me_
bby* cev = nullptr; // me_
bby* cex = nullptr; // me_
bby* cey = nullptr; // item
bby* cfa = nullptr; // me_
bby* cfb = nullptr; // offset
bby* cfd = nullptr; // me_
bby* cff = nullptr; // me_
bby* cfg = nullptr; // n
bby* cfi = nullptr; // me_
bby* cfk = nullptr; // me_
bby* cfm = nullptr; // min
bby* cfn = nullptr; // max
bby* cfp = nullptr; // min
bby* cfq = nullptr; // max
bby* cfs = nullptr; // me_
bby* cft = nullptr; // start
bby* cfu = nullptr; // len
bby* cfx = nullptr; // me_
bby* cfz = nullptr; // me_
bby* cgb = nullptr; // me_
bby* cgc = nullptr; // success
bby* cge = nullptr; // me_
bby* cgf = nullptr; // success
bby* cgh = nullptr; // me_
bby* cgi = nullptr; // success
bby* cgk = nullptr; // me_
bby* cgm = nullptr; // str
bby* cgo = nullptr; // dst
bby* cgp = nullptr; // src
bby* cgr = nullptr; // path
bby* cgt = nullptr; // path
bby* cgu = nullptr; // recursion
bby* cgv = nullptr; // callback
bby* cgw = nullptr; // data
bby* cgy = nullptr; // me_
bby* cgz = nullptr; // path
bby* cha = nullptr; // handle
bby* chd = nullptr; // me_
bby* che = nullptr; // path
bby* chf = nullptr; // append
bby* chg = nullptr; // handle
bby* chi = nullptr; // me_
bby* chj = nullptr; // handle
bby* chl = nullptr; // me_
bby* chm = nullptr; // handle
bby* cho = nullptr; // me_
bby* chp = nullptr; // handle
bby* chr = nullptr; // me_
bby* chs = nullptr; // origin
bby* cht = nullptr; // pos
bby* chu = nullptr; // handle
bby* chw = nullptr; // me_
bby* chx = nullptr; // handle
bby* chz = nullptr; // me_
bby* cia = nullptr; // handle
bby* cic = nullptr; // me_
bby* cid = nullptr; // handle
bby* cif = nullptr; // me_
bby* cig = nullptr; // origin
bby* cih = nullptr; // pos
bby* cii = nullptr; // handle
bby* cik = nullptr; // me_
bby* cil = nullptr; // n
bby* cim = nullptr; // handle
bby* cio = nullptr; // me_
bby* cip = nullptr; // n
bby* ciq = nullptr; // handle
ccy = ccu;
if(cmp_(ccy, (new Array_<char16_t>(4, u'\u0061', u'\u0064', u'\u0064', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cda) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(34, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cda)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdc) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdd) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cde) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cdc)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0041', u'\u0064', u'\u0064', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cdd)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cde)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(ccy, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdg) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdh) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cdg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u005F', u'\u0062', u'\u0061', u'\u0063', u'\u006B', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cdh)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ccy, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdj) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdk) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cdj)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cdk)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ccy, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdm) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdn) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cdm)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cdn)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ccy, (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdp) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdq) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cdp)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u0026', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cdq)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(ccy, (new Array_<char16_t>(7, u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(65, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u002A', u'\u003E', u'\u002A', u'\u0020', u'\u0061', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u002A', u'\u003E', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u003D', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(59, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u002A', u'\u005B', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u0029', u'\u005D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0076', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(44, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0038', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(36, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(48, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(44, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002D', u'\u003E', u'\u0042', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u005B', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u005D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(75, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006D', u'\u0065', u'\u006D', u'\u0063', u'\u0070', u'\u0079', u'\u0028', u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0063', u'\u005F', u'\u0073', u'\u0074', u'\u0072', u'\u0028', u'\u0029', u'\u002C', u'\u0020', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u006F', u'\u0066', u'\u0028', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u0029', u'\u0020', u'\u002A', u'\u0020', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(3, u'\u0064', u'\u0065', u'\u006C'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdt) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u0061', u'\u0075', u'\u0074', u'\u006F', u'\u0026', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cdt)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u002B', u'\u002B', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cdt)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u0072', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0069', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006C', u'\u006C'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdv) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdw) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cdv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u004C', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cdv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(10, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cdw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(ccy, (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdy) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cdz) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cea) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cea)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u002D', u'\u0031', u'\u0029', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cea)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cea)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0020', u'\u003C', u'\u0020', u'\u0030', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cea)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cdy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u002D', u'\u003E', u'\u004C', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cdy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cdz)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0042', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cec) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(ced) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(21, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0061', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u002C', u'\u0020', u'\u0062', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cec)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(19, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0028', u'\u0061', u'\u005F', u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0062', u'\u005F', u'\u0029', u'\u0020', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0028', u'\u0061', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0062', u'\u005F', u'\u0029', u'\u0020', u'\u002F', u'\u0020', u'\u0032', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u006D', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ced)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cec)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0063', u'\u005F', u'\u005D', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(24, u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u0020', u'\u003C', u'\u0020', u'\u0030', u'\u0029', u'\u0020', u'\u0062', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(29, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u0020', u'\u003E', u'\u0020', u'\u0030', u'\u0029', u'\u0020', u'\u0061', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(7, u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cef) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(ceg) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(ceh) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u0046', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cef)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(43, u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0028', u'\u002A', u'\u0029', u'\u0028', u'\u004B', u'\u005F', u'\u002C', u'\u0020', u'\u0056', u'\u005F', u'\u002C', u'\u0020', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0029', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ceg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ceh)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(ccy, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cej) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cek) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cel) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(19, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u0053', u'\u0065', u'\u0061', u'\u0072', u'\u0063', u'\u0068', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cej)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cek)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cel)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(ccy, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cen) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002A'))->Cat(v<Array_<char16_t>*>(((cen)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cep) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0052', u'\u005F', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cep)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006E', u'\u0074', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cep)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cer) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0052', u'\u005F', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cer)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0074', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cer)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(4, u'\u0068', u'\u0065', u'\u0061', u'\u0064'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cet) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cet)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cet)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ccy, (new Array_<char16_t>(3, u'\u0069', u'\u0064', u'\u0078'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cev) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0061', u'\u0075', u'\u0074', u'\u006F', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cev)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(19, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u003B', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u0021', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cev)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u0020', u'\u002B', u'\u002B', u'\u0074', u'\u005F', u'\u0029', u'\u007B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cev)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002D', u'\u003E', u'\u0049', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0073'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cex) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cey) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cex)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0069', u'\u006E', u'\u0073', u'\u0065', u'\u0072', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cex)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cey)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(ccy, (new Array_<char16_t>(10, u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfa) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfb) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfb)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0030', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfb)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfa)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfa)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u0029', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002B', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cfa)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfb)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002D', u'\u002D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfa)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfa)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u0029', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002D', u'\u002D'))->Cat(v<Array_<char16_t>*>(((cfa)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0078', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfd) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002B', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cfd)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(2, u'\u006F', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cff) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfg) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cff)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u007C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(ccy, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfi) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfi)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006E', u'\u0074', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfk) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfk)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0074', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(3, u'\u0072', u'\u006E', u'\u0064'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfm) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfn) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u006E', u'\u0064', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfm)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfn)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ccy, (new Array_<char16_t>(8, u'\u0072', u'\u006E', u'\u0064', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfp) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfq) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u006E', u'\u0064', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfp)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfq)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ccy, (new Array_<char16_t>(3, u'\u0073', u'\u0075', u'\u0062'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfs) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cft) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfu) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0075', u'\u0062', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfs)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cft)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfu)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(ccy, (new Array_<char16_t>(7, u'\u0073', u'\u0079', u'\u0073', u'\u0054', u'\u0069', u'\u006D', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(145, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0068', u'\u0072', u'\u006F', u'\u006E', u'\u006F', u'\u003A', u'\u003A', u'\u0064', u'\u0075', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0068', u'\u0072', u'\u006F', u'\u006E', u'\u006F', u'\u003A', u'\u003A', u'\u006D', u'\u0069', u'\u006C', u'\u006C', u'\u0069', u'\u0073', u'\u0065', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0073', u'\u003E', u'\u0028', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0068', u'\u0072', u'\u006F', u'\u006E', u'\u006F', u'\u003A', u'\u003A', u'\u0073', u'\u0079', u'\u0073', u'\u0074', u'\u0065', u'\u006D', u'\u005F', u'\u0063', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u003A', u'\u003A', u'\u006E', u'\u006F', u'\u0077', u'\u0028', u'\u0029', u'\u002E', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u005F', u'\u0073', u'\u0069', u'\u006E', u'\u0063', u'\u0065', u'\u005F', u'\u0065', u'\u0070', u'\u006F', u'\u0063', u'\u0068', u'\u0028', u'\u0029', u'\u0029', u'\u002E', u'\u0063', u'\u006F', u'\u0075', u'\u006E', u'\u0074', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u0069', u'\u006C'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfx) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cfx)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfx)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002D', u'\u002D'))->Cat(v<Array_<char16_t>*>(((cfx)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(4, u'\u0074', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cfz) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfz)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfz)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ccy, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u0074', u'\u0036', u'\u0034'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgb) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgc) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgb)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(111, u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0032', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0030', u'\u0027', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0078', u'\u0027', u'\u0020', u'\u003F', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0075', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u002C', u'\u0020', u'\u0031', u'\u0036', u'\u0029', u'\u0020', u'\u003A', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0075', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cgc)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cgc)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cgc)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cge) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgf) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cge)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(32, u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0064', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cgf)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cgf)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cgf)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0049', u'\u006E', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgh) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgi) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgh)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(109, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0032', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0030', u'\u0027', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0078', u'\u0027', u'\u0020', u'\u003F', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u002C', u'\u0020', u'\u0031', u'\u0036', u'\u0029', u'\u0020', u'\u003A', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0075', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cgi)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cgi)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cgi)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgk) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgk)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(9, u'\u0063', u'\u0075', u'\u0069', u'\u005F', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgm) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgm)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u003C', u'\u003C', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003C', u'\u003C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0066', u'\u006C', u'\u0075', u'\u0073', u'\u0068', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u0046', u'\u0069', u'\u006C', u'\u0065'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgo) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgp) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgo)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgp)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0042', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ccy, (new Array_<char16_t>(10, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgr) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(12, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgt) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgu) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgv) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgw) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgy) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cgz) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
(cha) = ((chb)((ccw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cgy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cha)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(45, u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgz)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cha)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(72, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u0066', u'\u0073', u'\u0074', u'\u0072', u'\u0065', u'\u0061', u'\u006D', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0063', u'\u005F', u'\u0073', u'\u0074', u'\u0072', u'\u0028', u'\u0029', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0069', u'\u006E', u'\u0020', u'\u007C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0062', u'\u0069', u'\u006E', u'\u0061', u'\u0072', u'\u0079', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u002A', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgy)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(chd) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(che) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(chf) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
(chg) = ((chb)((ccw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((chd)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((chg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(45, u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((che)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chd)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((chg)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(74, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006F', u'\u0066', u'\u0073', u'\u0074', u'\u0072', u'\u0065', u'\u0061', u'\u006D', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0063', u'\u005F', u'\u0073', u'\u0074', u'\u0072', u'\u0028', u'\u0029', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u007C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0062', u'\u0069', u'\u006E', u'\u0061', u'\u0072', u'\u0079', u'\u0020', u'\u007C', u'\u0020', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chf)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(38, u'\u0020', u'\u003F', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0061', u'\u0070', u'\u0070', u'\u0020', u'\u003A', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u006E', u'\u0063', u'\u0029', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u002A', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chd)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(chi) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
(chj) = ((chb)((ccw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chi)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((chj)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(chl) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
(chm) = ((chb)((ccw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chl)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((chm)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(45, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0074', u'\u0065', u'\u006C', u'\u006C', u'\u0067', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(21, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u004C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cho) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
(chp) = ((chb)((ccw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cho)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((chp)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(25, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(chr) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(chs) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cht) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
(chu) = ((chb)((ccw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chr)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((chu)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(48, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0064', u'\u0069', u'\u0072', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chs)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0030', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0031', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0063', u'\u0075', u'\u0072', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0032', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0065', u'\u006E', u'\u0064', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(13, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0067', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cht)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002C', u'\u0020', u'\u006F', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0054', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(chw) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
(chx) = ((chb)((ccw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((chx)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0020', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0067', u'\u0065', u'\u0074', u'\u0028', u'\u0063', u'\u005F', u'\u0029', u'\u0029', u'\u0020', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(38, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0067', u'\u0028', u'\u002D', u'\u0031', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0063', u'\u0075', u'\u0072', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(chz) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
(cia) = ((chb)((ccw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chz)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cia)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cic) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
(cid) = ((chb)((ccw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cic)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cid)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(45, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0074', u'\u0065', u'\u006C', u'\u006C', u'\u0070', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(ccy, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cif) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cig) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cih) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
(cii) = ((chb)((ccw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cif)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cii)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(48, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0064', u'\u0069', u'\u0072', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cig)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0030', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0031', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0063', u'\u0075', u'\u0072', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0032', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0065', u'\u006E', u'\u0064', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(13, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0070', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cih)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002C', u'\u0020', u'\u006F', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(16, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cik) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cil) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
(cim) = ((chb)((ccw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cik)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cim)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(37, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0028', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cil)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0042', u'\u0029', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cil)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u004C', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(ccy, (new Array_<char16_t>(20, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0043', u'\u0068', u'\u0061', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cio) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccv), (new Array_<int64_t>(1, (0LL))));
(cip) = ((bbx)((awi<List_<gb*>*, gb*>((ccv), (new Array_<int64_t>(1, (0LL)))))));
(ciq) = ((chb)((ccw), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cio)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((ciq)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cct), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cip)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(ccy, (new Array_<char16_t>(19, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u0065', u'\u0064', u'\u0069', u'\u0074', u'\u0042', u'\u0061', u'\u0073', u'\u0065', u'\u0047', u'\u0065', u'\u0074', u'\u0054', u'\u0065', u'\u0078', u'\u0074'))) == 0){
}
else if(cmp_(ccy, (new Array_<char16_t>(17, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0045', u'\u0064', u'\u0069', u'\u0074', u'\u004D', u'\u0075', u'\u006C', u'\u0074', u'\u0069'))) == 0){
}
else{if(!(false)){
throw 0xE9170000U;
}
}
}
// _tail
template<typename T_> static void beu(T_ ciu /*me_*/, Array_<int64_t>* civ /*type*/){
ciu->I = ciu->B.end();
--ciu->I;
}
// _idx
template<typename T_> static int64_t bew(T_ ciw /*me_*/, Array_<int64_t>* cix /*type*/){
int64_t i_ = 0;
for(auto& t_ = ciw->B.begin(); t_ != ciw->B.end(); ++t_){
if(t_ == ciw->I) return i_;
i_++;
}
return -1;
}
// buildStats
static void bex(List_<ge*>* ciy /*stats*/, ge* ciz /*breakStat*/, ge* cja /*skipStat*/){
ge* cjc = nullptr; // stat
int64_t cje = 0;
awe<List_<ge*>*>((ciy), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<ge*>*>((ciy), (new Array_<int64_t>(1, (0LL)))))){
(cjc) = (awi<List_<ge*>*, ge*>((ciy), (new Array_<int64_t>(1, (0LL)))));
switch((cjc)->lw){
case 66049LL:
(cjg)((as_<cjh>(classTable_, (cjc), 88)), (ciz), (cja));
break;
case 66050LL:
(cjk)((as_<cjl>(classTable_, (cjc), 92)), (ciz), (cja));
break;
case 16843265LL:
(cjo)((as_<cjp>(classTable_, (cjc), 98)), (ciz), (cja));
break;
case 16843266LL:
(cjs)((as_<cjt>(classTable_, (cjc), 100)), (ciz), (cja));
break;
case 66051LL:
(cjv)((as_<btu>(classTable_, (cjc), 52)), (ciz), (cja));
break;
case 526LL:
(cjx)((as_<cjy>(classTable_, (cjc), 102)));
break;
case 66052LL:
(cka)((as_<btw>(classTable_, (cjc), 54)), (ciz), (cja));
break;
case 527LL:
(ckc)((as_<ckd>(classTable_, (cjc), 104)));
break;
case 528LL:
(ckf)((as_<buu>(classTable_, (cjc), 62)));
break;
case 529LL:
(ckh)((as_<ge>(classTable_, (cjc), 16)), (ciz));
break;
case 530LL:
(ckj)((as_<ge>(classTable_, (cjc), 16)), (cja));
break;
case 531LL:
(ckl)((as_<ckm>(classTable_, (cjc), 106)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
ays<List_<ge*>*>((ciy), (new Array_<int64_t>(1, (0LL))));
}
}
// _moveOffset
template<typename T_> static void bey(T_ cko /*me_*/, Array_<int64_t>* ckp /*type*/, int64_t ckq /*offset*/){
if(ckq >= 0){
for(int64_t i_ = 0; i_ < ckq; i_++){
if(cko->I == cko->B.end()) break;
++cko->I;
}
}else{
for(int64_t i_ = 0; i_ > ckq; i_--){
if(cko->I == cko->B.end()) break;
--cko->I;
}
}
}
// _ins
template<typename T_, typename C_> static void bfe(T_ ckr /*me_*/, Array_<int64_t>* cks /*type*/, C_ ckt /*item*/){
ckr->B.insert(ckr->I, ckt);
}
// getDefaultValue
static Array_<char16_t>* bff(gc* cku /*type*/){
int64_t ckz = 0;
int64_t clf = 0;
if((ckw)((cku))){
return new Array_<char16_t>(7, u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072');
}
switch((cku)->lw){
case 66565LL:
if(!((clb)((cku)))){
throw 0xE9170000U;
}
return new Array_<char16_t>(1, u'\u0030');
break;
case 1025LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1026LL:
switch((as_<bud>(classTable_, (cku), 60))->bue){
case 0LL:
case 2LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1LL:
return new Array_<char16_t>(3, u'\u0030', u'\u002E', u'\u0030');
break;
case 3LL:
return new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// _del
template<typename T_> static void bfh(T_ cll /*me_*/, Array_<int64_t>* clm /*type*/){
auto& i_ = cll->I++;
cll->B.erase(i_);
}
// refClass
static Array_<char16_t>* bfo(ul* cln /*ast*/){
bby* clo = nullptr; // info
List_<um*>* clx = nullptr; // items
um* clz = nullptr; // item
fw* cmc = nullptr; // func_
List_<gb*>* cmf = nullptr; // items2
gb* cmh = nullptr; // arg
bgi* cmj = nullptr; // var_
(clo) = ((bbx)((cln)));
if((clo)->bca){
return (clo)->bdy;
}
((clo)->bca) = (true);
if(!eqAddr_(((cln)->nj), (nullptr))){
(bfo)((as_<ul>(classTable_, ((cln)->nj), 22)));
}
if(((clo)->bft) == (-1LL)){
((clo)->bft) = (uo);
(uo) = ((uo) + (1LL));
}
(clx) = ((cln)->bag);
awe<List_<um*>*>((clx), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((clx), (new Array_<int64_t>(1, (0LL)))))){
(clz) = (awi<List_<um*>*, um*>((clx), (new Array_<int64_t>(1, (0LL)))));
if((((clz)->azl)->lw) == (256LL)){
(cmc) = (as_<fw>(classTable_, ((clz)->azl), 8));
if(!eqAddr_(((cmc)->sh), (nullptr))){
(bct)(((cmc)->sh));
}
(cmf) = ((cmc)->sg);
awe<List_<gb*>*>((cmf), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((cmf), (new Array_<int64_t>(1, (0LL)))))){
(cmh) = (awi<List_<gb*>*, gb*>((cmf), (new Array_<int64_t>(1, (0LL)))));
(bct)(((cmh)->qf));
ays<List_<gb*>*>((cmf), (new Array_<int64_t>(1, (0LL))));
}
uk<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL))), (cmc));
}
else if((((clz)->azl)->lw) == (2LL)){
(cmj) = (as_<bgi>(classTable_, ((clz)->azl), 38));
(bct)((((cmj)->bgk)->qf));
}
ays<List_<um*>*>((clx), (new Array_<int64_t>(1, (0LL))));
}
uk<Queue_<ul*>*, ul*>((ak), (new Array_<int64_t>(1, (0LL))), (cln));
return (clo)->bdy;
}
// _dtor
static void cmk(bgi* cml){
((cml)->bgk) = (nullptr);
((cml)->ne) = (nullptr);
((cml)->nf) = (nullptr);
((cml)->ng) = (nullptr);
((cml)->nh) = (nullptr);
((cml)->ni) = (nullptr);
((cml)->nj) = (nullptr);
((cml)->nk) = (nullptr);
}
// _copy
static bgi* cmm(bgi* cmn){
bgi* cmo = nullptr;
(cmo) = (new bgi());
((cmo)->bgk) = (copy_((cmn)->bgk));
((cmo)->ne) = (copy_((cmn)->ne));
((cmo)->nf) = (copy_((cmn)->nf));
((cmo)->ng) = (copy_((cmn)->ng));
((cmo)->nh) = (copy_((cmn)->nh));
((cmo)->ni) = (copy_((cmn)->ni));
((cmo)->nj) = (copy_((cmn)->nj));
((cmo)->nk) = (copy_((cmn)->nk));
((cmo)->no) = ((cmn)->no);
((cmo)->lw) = ((cmn)->lw);
return as_<bgi>(classTable_, (cmo), 38);
}
// _toBin
static Array_<uint8_t>* cmp(bgi* cmq){
Array_<uint8_t>* cmr = nullptr;
(cmr) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(cmr) = ((cmr)->Cat(toBin_((cmq)->bgk)));
(cmr) = ((cmr)->Cat(toBin_((cmq)->ne)));
(cmr) = ((cmr)->Cat(toBin_((cmq)->nf)));
(cmr) = ((cmr)->Cat(toBin_((cmq)->ng)));
(cmr) = ((cmr)->Cat(toBin_((cmq)->nh)));
(cmr) = ((cmr)->Cat(toBin_((cmq)->ni)));
(cmr) = ((cmr)->Cat(toBin_((cmq)->nj)));
(cmr) = ((cmr)->Cat(toBin_((cmq)->nk)));
(cmr) = ((cmr)->Cat(toBin_((cmq)->no)));
(cmr) = ((cmr)->Cat(toBin_((cmq)->lw)));
return cmr;
}
// _fromBin
static bgi* cnc(bgi* cnd, Array_<uint8_t>* cne, int64_t* cnf){
bgi* cng = nullptr;
(cng) = (new bgi());
((cng)->bgk) = (fromBin_<gb*>((cne), (*cnf)));
((cng)->ne) = (fromBin_<ga*>((cne), (*cnf)));
((cng)->nf) = (fromBin_<Array_<char16_t>*>((cne), (*cnf)));
((cng)->ng) = (fromBin_<fx*>((cne), (*cnf)));
((cng)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((cne), (*cnf)));
((cng)->ni) = (fromBin_<Array_<char16_t>*>((cne), (*cnf)));
((cng)->nj) = (fromBin_<fx*>((cne), (*cnf)));
((cng)->nk) = (fromBin_<fy*>((cne), (*cnf)));
((cng)->no) = (fromBin_<bool>((cne), (*cnf)));
((cng)->lw) = (fromBin_<int64_t>((cne), (*cnf)));
return cng;
}
// findFunc
static fw* bgn(ul* cnh /*ast*/, Array_<char16_t>* cni /*name*/){
List_<um*>* cnj = nullptr; // items
um* cnl = nullptr; // item
(cnj) = ((cnh)->bag);
awe<List_<um*>*>((cnj), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((cnj), (new Array_<int64_t>(1, (0LL)))))){
(cnl) = (awi<List_<um*>*, um*>((cnj), (new Array_<int64_t>(1, (0LL)))));
if(((((cnl)->azl)->lw) == (256LL)) && (cmp_((((cnl)->azl)->nf), (cni)) == 0)){
return as_<fw>(classTable_, ((cnl)->azl), 8);
}
ays<List_<um*>*>((cnj), (new Array_<int64_t>(1, (0LL))));
}
return nullptr;
}
// makeWriter
static bhq* bhp(bhq* cno /*me2*/, Array_<char16_t>* cnp /*path*/, bool cnq /*append*/){
cno->cnr = reinterpret_cast<int64_t>(new writer_());
std::u16string s_ = cnp->B;
const std::string& t_ = utf16ToUtf8_(s_);
writer_* r_ = reinterpret_cast<writer_*>(cno->cnr);
r_->F = new std::ofstream(t_.c_str(), std::ios::out | std::ios::binary | (cnq ? std::ios::app : std::ios::trunc));
if(!*r_->F) return nullptr;
return cno;
}
// _dtor
static void cns(bhq* cnt /*me*/){
}
// fin
static void bhy(bhq* cnu /*me*/){
writer_* r_ = reinterpret_cast<writer_*>(cnu->cnr);
r_->F->close();
}
// setPos
static void cnv(bhq* cnw /*me*/, int64_t cnx /*origin*/, int64_t cny /*pos*/){
writer_* r_ = reinterpret_cast<writer_*>(cnw->cnr);
std::ios_base::seekdir o_ = std::ios_base::beg;
switch(cnx){
case 0: o_ = std::ios_base::beg; break;
case 1: o_ = std::ios_base::cur; break;
case 2: o_ = std::ios_base::end; break;
}
r_->F->seekp(cny, o_);
}
// getPos
static int64_t cnz(bhq* coa /*me*/){
writer_* r_ = reinterpret_cast<writer_*>(coa->cnr);
return static_cast<int64_t>(r_->F->tellp());
}
// write
static void cob(bhq* coc /*me*/, Array_<uint8_t>* cod /*bin*/){
writer_* r_ = reinterpret_cast<writer_*>(coc->cnr);
r_->F->write(reinterpret_cast<char*>(cod->B), cod->L);
}
// writeInt
static void coe(bhq* cof /*me*/, int64_t cog /*n*/){
Array_<char16_t>* coh = nullptr; // s
int64_t col = 0;
int64_t com = 0;
(coh) = (v<int64_t>((cog), (new Array_<int64_t>(1, (0LL)))));
for(col = (0LL), com = (((coh)->Len()) - (1LL)); col <= com; col += (1LL)){
(con)((cof), ((coh)->At(col)));
}
}
// writeFloat
static void coo(bhq* cop /*me*/, double coq /*n*/){
Array_<char16_t>* cor = nullptr; // s
int64_t cov = 0;
int64_t cow = 0;
(cor) = (v<double>((coq), (new Array_<int64_t>(1, (0LL)))));
for(cov = (0LL), cow = (((cor)->Len()) - (1LL)); cov <= cow; cov += (1LL)){
(con)((cop), ((cor)->At(cov)));
}
}
// writeChar
static void con(bhq* cox /*me*/, char16_t coy /*n*/){
writer_* r_ = reinterpret_cast<writer_*>(cox->cnr);
writeUtf8_(r_->F, coy);
}
// writeStr
static void bhw(bhq* coz /*me*/, Array_<char16_t>* cpa /*n*/){
int64_t cpe = 0;
int64_t cpf = 0;
for(cpe = (0LL), cpf = (((cpa)->Len()) - (1LL)); cpe <= cpf; cpe += (1LL)){
(con)((coz), ((cpa)->At(cpe)));
}
}
// _copy
static bhq* cpg(bhq* cph){
bhq* cpi = nullptr;
(cpi) = (new bhq());
((cpi)->cnr) = ((cph)->cnr);
return as_<bhq>(classTable_, (cpi), 40);
}
// _toBin
static Array_<uint8_t>* cpj(bhq* cpk){
Array_<uint8_t>* cpl = nullptr;
(cpl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(cpl) = ((cpl)->Cat(toBin_((cpk)->cnr)));
return cpl;
}
// _fromBin
static bhq* cpn(bhq* cpo, Array_<uint8_t>* cpp, int64_t* cpq){
bhq* cpr = nullptr;
(cpr) = (new bhq());
((cpr)->cnr) = (fromBin_<int64_t>((cpp), (*cpq)));
return cpr;
}
// writeCpp
static void bhx(bhq* cps /*writer*/, List_<Array_<char16_t>*>* cpt /*resFiles*/){
gb* cpz = nullptr; // globalVar
bby* cqa = nullptr; // info
Array_<char16_t>* cqf = nullptr; // item
(bhw)((cps), (new Array_<char16_t>(12, u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0070', u'\u0061', u'\u0063', u'\u0065', u'\u0020', u'\u007B', u'\u000A')));
awe<List_<Array_<char16_t>*>*>((am), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((am), (new Array_<int64_t>(1, (0LL)))))){
(bhw)((cps), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((am), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<Array_<char16_t>*>*>((an), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((an), (new Array_<int64_t>(1, (0LL)))))){
(bhw)((cps), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((an), (new Array_<int64_t>(1, (0LL))));
}
if((uo) != (0LL)){
(bhw)((cps), (((new Array_<char16_t>(27, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u005B'))->Cat(v<int64_t>(((uo) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u005D', u'\u003B', u'\u000A'))));
}
(bhw)((cps), (new Array_<char16_t>(22, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
(bhw)((cps), (new Array_<char16_t>(21, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u002A', u'\u002A', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
awe<List_<gb*>*>((ar), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((ar), (new Array_<int64_t>(1, (0LL)))))){
(cpz) = (awi<List_<gb*>*, gb*>((ar), (new Array_<int64_t>(1, (0LL)))));
(cqa) = ((bbx)((cpz)));
(bhw)((cps), (((new Array_<char16_t>(7, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((cpz)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((cqa)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
ays<List_<gb*>*>((ar), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<Array_<char16_t>*>*>((ap), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((ap), (new Array_<int64_t>(1, (0LL)))))){
(bhw)((cps), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((ap), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL)))))){
(bhw)((cps), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
}
(bhw)((cps), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhw)((cps), (new Array_<char16_t>(29, u'\u0069', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0020', u'\u0063', u'\u005F', u'\u002C', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u002A', u'\u002A', u'\u0020', u'\u0076', u'\u005F', u'\u0029', u'\u007B', u'\u000A')));
(bhw)((cps), (new Array_<char16_t>(16, u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
(bhw)((cps), (new Array_<char16_t>(16, u'\u0061', u'\u0072', u'\u0067', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
awe<List_<Array_<char16_t>*>*>((at), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((at), (new Array_<int64_t>(1, (0LL)))))){
(cqf) = (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((at), (new Array_<int64_t>(1, (0LL)))));
(bhw)((cps), (cqf));
ays<List_<Array_<char16_t>*>*>((at), (new Array_<int64_t>(1, (0LL))));
}
(bhw)((cps), (new Array_<char16_t>(9, u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u005F', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
(bhw)((cps), (new Array_<char16_t>(5, u'\u0061', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
(bhw)((cps), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
(bhw)((cps), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
// copyFile
static bool bia(Array_<char16_t>* cqg /*dst*/, Array_<char16_t>* cqh /*src*/){
return copyFile_(cqg->B, cqh->B);
}
// getInfo
static biw* biv(fx* cqi /*ast*/){
biw* cql = nullptr; // info
if((eqAddr_(((cqi)->nk), (nullptr))) || ((((cqi)->nk)->lw) != (268435456LL))){
(cql) = (new biw());
((cql)->lw) = (268435456LL);
((cql)->bjm) = ((cqm)());
if((((aye<int64_t>(((cqi)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL)) && (!eqAddr_(((cqi)->nf), (nullptr)))) && (cmp_(((cqi)->nf), (new Array_<char16_t>(1, u'\u0024'))) != 0)){
((cql)->cqp) = ((cqm)());
}
else{
((cql)->cqp) = (nullptr);
}
((cql)->biy) = (false);
((cqi)->nk) = (cql);
}
return as_<biw>(classTable_, ((cqi)->nk), 42);
}
// _dtor
static void cqr(biw* cqs){
((cqs)->bjm) = (nullptr);
((cqs)->cqp) = (nullptr);
}
// _copy
static biw* cqt(biw* cqu){
biw* cqv = nullptr;
(cqv) = (new biw());
((cqv)->bjm) = (copy_((cqu)->bjm));
((cqv)->cqp) = (copy_((cqu)->cqp));
((cqv)->biy) = ((cqu)->biy);
((cqv)->lw) = ((cqu)->lw);
return as_<biw>(classTable_, (cqv), 42);
}
// _toBin
static Array_<uint8_t>* cqw(biw* cqx){
Array_<uint8_t>* cqy = nullptr;
(cqy) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(cqy) = ((cqy)->Cat(toBin_((cqx)->bjm)));
(cqy) = ((cqy)->Cat(toBin_((cqx)->cqp)));
(cqy) = ((cqy)->Cat(toBin_((cqx)->biy)));
(cqy) = ((cqy)->Cat(toBin_((cqx)->lw)));
return cqy;
}
// _fromBin
static biw* crd(biw* cre, Array_<uint8_t>* crf, int64_t* crg){
biw* crh = nullptr;
(crh) = (new biw());
((crh)->bjm) = (fromBin_<Array_<char16_t>*>((crf), (*crg)));
((crh)->cqp) = (fromBin_<Array_<char16_t>*>((crf), (*crg)));
((crh)->biy) = (fromBin_<bool>((crf), (*crg)));
((crh)->lw) = (fromBin_<int64_t>((crf), (*crg)));
return crh;
}
// write
static void bkd(List_<Array_<char16_t>*>* cri /*codes*/, Array_<char16_t>* crj /*attr*/, List_<gb*>* crk /*args*/, List_<um*>* crl /*members*/){
Array_<char16_t>* crn = nullptr;
biw* crq = nullptr; // me_
biw* crr = nullptr; // meType
biw* crs = nullptr; // key
biw* crt = nullptr; // item
biw* crv = nullptr; // me_
biw* crw = nullptr; // item
biw* cry = nullptr; // me_
biw* crz = nullptr; // item
biw* csb = nullptr; // me_
biw* csc = nullptr; // item
biw* cse = nullptr; // me_
biw* csf = nullptr; // n
biw* csi = nullptr; // me_
biw* csk = nullptr; // me_
biw* csl = nullptr; // meType
biw* csm = nullptr; // value
biw* cso = nullptr; // me_
biw* csp = nullptr; // meType
biw* csq = nullptr; // item
biw* csr = nullptr; // start
biw* cst = nullptr; // me_
biw* csu = nullptr; // meType
biw* csv = nullptr; // item
biw* csx = nullptr; // me_
biw* csy = nullptr; // meType
biw* csz = nullptr; // callback
biw* cta = nullptr; // data
biw* ctc = nullptr; // me_
biw* ctd = nullptr; // meType
biw* cte = nullptr; // key
biw* ctf = nullptr; // existed
biw* cth = nullptr; // me_
biw* ctj = nullptr; // me_
biw* ctl = nullptr; // me_
biw* ctn = nullptr; // me_
biw* ctp = nullptr; // me_
biw* ctr = nullptr; // me_
biw* cts = nullptr; // item
biw* ctu = nullptr; // me_
biw* ctv = nullptr; // offset
biw* ctx = nullptr; // me_
biw* ctz = nullptr; // me_
biw* cua = nullptr; // n
biw* cuc = nullptr; // me_
biw* cue = nullptr; // me_
biw* cug = nullptr; // min
biw* cuh = nullptr; // max
biw* cuj = nullptr; // min
biw* cuk = nullptr; // max
biw* cum = nullptr; // me_
biw* cun = nullptr; // meType
biw* cuo = nullptr; // start
biw* cup = nullptr; // len
biw* cus = nullptr; // me_
biw* cuu = nullptr; // me_
biw* cuw = nullptr; // me_
biw* cux = nullptr; // success
biw* cuz = nullptr; // me_
biw* cva = nullptr; // success
biw* cvc = nullptr; // me_
biw* cvd = nullptr; // success
biw* cvf = nullptr; // me_
biw* cvg = nullptr; // type
biw* cvi = nullptr; // str
biw* cvl = nullptr; // path
biw* cvn = nullptr; // path
biw* cvo = nullptr; // recursion
biw* cvp = nullptr; // callback
biw* cvq = nullptr; // data
biw* cvs = nullptr; // me_
biw* cvt = nullptr; // path
biw* cvu = nullptr; // handle
biw* cvx = nullptr; // me_
biw* cvy = nullptr; // path
biw* cvz = nullptr; // append
biw* cwa = nullptr; // handle
biw* cwc = nullptr; // me_
biw* cwd = nullptr; // handle
biw* cwf = nullptr; // me_
biw* cwg = nullptr; // handle
biw* cwi = nullptr; // me_
biw* cwj = nullptr; // handle
biw* cwl = nullptr; // me_
biw* cwm = nullptr; // origin
biw* cwn = nullptr; // pos
biw* cwo = nullptr; // handle
biw* cwq = nullptr; // me_
biw* cwr = nullptr; // handle
biw* cwt = nullptr; // me_
biw* cwu = nullptr; // handle
biw* cww = nullptr; // me_
biw* cwx = nullptr; // handle
biw* cwz = nullptr; // me_
biw* cxa = nullptr; // origin
biw* cxb = nullptr; // pos
biw* cxc = nullptr; // handle
biw* cxe = nullptr; // me_
biw* cxf = nullptr; // n
biw* cxg = nullptr; // handle
biw* cxi = nullptr; // me_
biw* cxj = nullptr; // n
biw* cxk = nullptr; // handle
biw* cxm = nullptr; // me_
biw* cxn = nullptr; // handle
biw* cxp = nullptr; // me_
biw* cxq = nullptr; // parent
biw* cxr = nullptr; // x
biw* cxs = nullptr; // y
biw* cxt = nullptr; // width
biw* cxu = nullptr; // height
biw* cxv = nullptr; // anchorX
biw* cxw = nullptr; // anchorY
biw* cxx = nullptr; // handle
crn = crj;
if(cmp_(crn, (new Array_<char16_t>(4, u'\u0061', u'\u0064', u'\u0064', u'\u0072'))) == 0){
}
else if(cmp_(crn, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(crq) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(crr) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(crs) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(crt) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((crr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((crr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((crq)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((crs)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((crt)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((crq)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((crs)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((crt)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(crn, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(crv) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(crw) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(24, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006E', u'\u005F', u'\u003D', u'\u007B', u'\u0050', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u004E', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0049', u'\u003A'))->Cat(v<Array_<char16_t>*>(((crw)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((crv)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002E', u'\u0048', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u007B'))->Cat(v<Array_<char16_t>*>(((crv)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0048', u'\u003D', u'\u006E', u'\u005F', u'\u003B'))->Cat(v<Array_<char16_t>*>(((crv)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(16, u'\u002E', u'\u0054', u'\u003D', u'\u006E', u'\u005F', u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u006E', u'\u005F', u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((crv)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0054', u'\u003B'))->Cat(v<Array_<char16_t>*>(((crv)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u002E', u'\u0054', u'\u002E', u'\u004E', u'\u003D', u'\u006E', u'\u005F', u'\u003B'))->Cat(v<Array_<char16_t>*>(((crv)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0054', u'\u003D', u'\u006E', u'\u005F', u'\u007D', u'\u000A')))))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((crv)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u004C', u'\u002B', u'\u002B', u'\u003B', u'\u000A'))));
}
else if(cmp_(crn, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cry) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(crz) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cry)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((crz)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csb) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csc) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csb)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cse) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csf) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cse)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0026'))->Cat(v<Array_<char16_t>*>(((csf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(7, u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(72, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065', u'\u0029', u'\u003F', u'\u004F', u'\u005F', u'\u002E', u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065', u'\u003A', u'\u006C', u'\u006F', u'\u0063', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E', u'\u0073', u'\u0065', u'\u0061', u'\u0072', u'\u0063', u'\u0068', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0031', u'\u0029', u'\u002E', u'\u0073', u'\u0070', u'\u006C', u'\u0069', u'\u0074', u'\u0028', u'\u0022', u'\u0026', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(39, u'\u0069', u'\u0066', u'\u0028', u'\u0072', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003D', u'\u003D', u'\u003D', u'\u0031', u'\u0026', u'\u0026', u'\u0072', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0022', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u005B', u'\u005D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(32, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003C', u'\u0072', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(19, u'\u0072', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u003D', u'\u007B', u'\u0053', u'\u003A', u'\u0072', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(3, u'\u0064', u'\u0065', u'\u006C'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csi) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((csi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0050', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((csi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(26, u'\u002E', u'\u0048', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((csi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(26, u'\u002E', u'\u0054', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u002E', u'\u0050', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0050', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u004C', u'\u002D', u'\u002D', u'\u003B', u'\u000A'))));
}
else if(cmp_(crn, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006C', u'\u006C'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csk) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csl) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csm) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csl)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((csl)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u002E', u'\u0053', u'\u003D', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csm)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u0029', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0066', u'\u0069', u'\u006C', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csm)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cso) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csp) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csq) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csr) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csp)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((csp)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cso)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(31, u'\u002E', u'\u0053', u'\u002E', u'\u0069', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csq)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002C'))->Cat(v<Array_<char16_t>*>(((csr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F', u'\u0030', u'\u003A'))->Cat(v<Array_<char16_t>*>(((csr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cso)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0069', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csq)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((csr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F', u'\u0030', u'\u003A'))->Cat(v<Array_<char16_t>*>(((csr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
}
else if(cmp_(crn, (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0042', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cst) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csu) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csv) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u005F', u'\u003D', u'\u0030', u'\u002C', u'\u0062', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cst)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u002C', u'\u0063', u'\u005F', u'\u002C', u'\u006D', u'\u005F', u'\u002C', u'\u0066', u'\u005F', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(41, u'\u0066', u'\u005F', u'\u003D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0061', u'\u002C', u'\u0062', u'\u0029', u'\u007B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u003E', u'\u0062', u'\u003F', u'\u0031', u'\u003A', u'\u0061', u'\u003C', u'\u0062', u'\u003F', u'\u002D', u'\u0031', u'\u003A', u'\u0030', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(49, u'\u0066', u'\u005F', u'\u003D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0061', u'\u002C', u'\u0062', u'\u0029', u'\u007B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u002E', u'\u0053', u'\u003E', u'\u0062', u'\u002E', u'\u0053', u'\u003F', u'\u0031', u'\u003A', u'\u0061', u'\u002E', u'\u0053', u'\u003C', u'\u0062', u'\u002E', u'\u0053', u'\u003F', u'\u002D', u'\u0031', u'\u003A', u'\u0030', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0028', u'\u0061', u'\u005F', u'\u003C', u'\u003D', u'\u0062', u'\u005F', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(18, u'\u0063', u'\u005F', u'\u003D', u'\u007E', u'\u007E', u'\u0028', u'\u0028', u'\u0061', u'\u005F', u'\u002B', u'\u0062', u'\u005F', u'\u0029', u'\u002F', u'\u0032', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u006D', u'\u005F', u'\u003D', u'\u0066', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csv)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cst)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u005B', u'\u0063', u'\u005F', u'\u005D', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(17, u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u003C', u'\u0030', u'\u0029', u'\u0062', u'\u005F', u'\u003D', u'\u0063', u'\u005F', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(22, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u003E', u'\u0030', u'\u0029', u'\u0061', u'\u005F', u'\u003D', u'\u0063', u'\u005F', u'\u002B', u'\u0031', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(7, u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csx) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csy) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(csz) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cta) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0044', u'\u005F', u'\u003D', u'\u007B', u'\u0046', u'\u003A'))->Cat(v<Array_<char16_t>*>(((csz)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002C', u'\u0044', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cta)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002C', u'\u0043', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u007D', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((csy)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((csy)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csx)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(73, u'\u002E', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068', u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0056', u'\u005F', u'\u002C', u'\u004B', u'\u005F', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u0029', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u003D', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0046', u'\u0028', u'\u007B', u'\u0053', u'\u003A', u'\u004B', u'\u005F', u'\u007D', u'\u002C', u'\u0056', u'\u005F', u'\u002C', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0044', u'\u0029', u'\u007D', u'\u002C', u'\u0044', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((csx)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(69, u'\u002E', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068', u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0056', u'\u005F', u'\u002C', u'\u004B', u'\u005F', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u0029', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u003D', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0046', u'\u0028', u'\u004B', u'\u005F', u'\u002C', u'\u0056', u'\u005F', u'\u002C', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0044', u'\u0029', u'\u007D', u'\u002C', u'\u0044', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0044', u'\u005F', u'\u002E', u'\u0043', u'\u003B', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(ctc) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(ctd) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cte) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(ctf) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctd)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((ctd)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0072', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0067', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cte)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0072', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0067', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cte)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(21, u'\u002E', u'\u0024', u'\u003D', u'\u0072', u'\u005F', u'\u0021', u'\u003D', u'\u003D', u'\u0075', u'\u006E', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0065', u'\u0064', u'\u0029', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctd)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((3LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cth) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cth)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(crn, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(ctj) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ctj)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002E', u'\u0073', u'\u0068', u'\u0069', u'\u0066', u'\u0074', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(crn, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(ctl) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ctl)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u002E', u'\u0070', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(crn, (new Array_<char16_t>(4, u'\u0068', u'\u0065', u'\u0061', u'\u0064'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(ctn) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ctn)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctn)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0048', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(3, u'\u0069', u'\u0064', u'\u0078'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(ctp) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctp)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0048', u'\u002C', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctp)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(21, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(18, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u0021', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctp)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0050', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0070', u'\u005F', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0073'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(ctr) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cts) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0050', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006E', u'\u005F', u'\u003D', u'\u007B', u'\u0050', u'\u003A', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u002C', u'\u004E', u'\u003A', u'\u0070', u'\u005F', u'\u002C', u'\u0049', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cts)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u007D', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((ctr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u002E', u'\u0048', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(10, u'\u002E', u'\u0054', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((ctr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0054', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ctr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u004C', u'\u002B', u'\u002B', u'\u003B', u'\u000A'))));
}
else if(cmp_(crn, (new Array_<char16_t>(10, u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(ctu) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(ctv) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctv)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u003E', u'\u003D', u'\u0030', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((ctv)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u003B', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ctu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003E'))->Cat(v<Array_<char16_t>*>(((ctv)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u003B', u'\u0069', u'\u005F', u'\u002D', u'\u002D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ctu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u0050', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0078', u'\u0074'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(ctx) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ctx)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((ctx)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(2, u'\u006F', u'\u0072'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(ctz) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cua) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ctz)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u007C'))->Cat(v<Array_<char16_t>*>(((cua)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cuc) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cuc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u005B', u'\u0030', u'\u005D', u'\u003B', u'\u000A'))));
}
else if(cmp_(crn, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cue) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cue)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u005B'))->Cat(v<Array_<char16_t>*>(((cue)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u005D', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(3, u'\u0072', u'\u006E', u'\u0064'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cug) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cuh) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u007E', u'\u007E', u'\u0028', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0072', u'\u0061', u'\u006E', u'\u0064', u'\u006F', u'\u006D', u'\u0028', u'\u0029', u'\u002A', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuh)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002D'))->Cat(v<Array_<char16_t>*>(((cug)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002B', u'\u0031', u'\u0029', u'\u0029', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cug)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(crn, (new Array_<char16_t>(8, u'\u0072', u'\u006E', u'\u0064', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cuj) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cuk) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0072', u'\u0061', u'\u006E', u'\u0064', u'\u006F', u'\u006D', u'\u0028', u'\u0029', u'\u002A', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002D'))->Cat(v<Array_<char16_t>*>(((cuj)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cuj)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(crn, (new Array_<char16_t>(3, u'\u0073', u'\u0075', u'\u0062'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cum) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cun) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cuo) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cup) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cun)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cun)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u007B', u'\u0053', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cup)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F'))->Cat(v<Array_<char16_t>*>(((cum)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuo)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cum)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuo)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cuo)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002B'))->Cat(v<Array_<char16_t>*>(((cup)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0029', u'\u007D', u'\u003B', u'\u000A'))))))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cup)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F'))->Cat(v<Array_<char16_t>*>(((cum)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuo)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cum)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuo)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cuo)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002B'))->Cat(v<Array_<char16_t>*>(((cup)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))))))));
}
else if(cmp_(crn, (new Array_<char16_t>(7, u'\u0073', u'\u0079', u'\u0073', u'\u0054', u'\u0069', u'\u006D', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(29, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0044', u'\u0061', u'\u0074', u'\u0065', u'\u0028', u'\u0029', u'\u002E', u'\u0067', u'\u0065', u'\u0074', u'\u0054', u'\u0069', u'\u006D', u'\u0065', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u0069', u'\u006C'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cus) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cus)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cus)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0054', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(4, u'\u0074', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cuu) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cuu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A'))));
}
else if(cmp_(crn, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u0074', u'\u0036', u'\u0034'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cuw) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cux) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuw)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0032', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cuw)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u002E', u'\u0053', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0030', u'\u0022', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cuw)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0078', u'\u0022', u'\u0029', u'\u007B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cuw)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(22, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0032', u'\u0029', u'\u002C', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuw)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cux)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(24, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028', u'\u0073', u'\u005F', u'\u002C', u'\u0031', u'\u0036', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuw)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cux)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuw)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u002E', u'\u0053', u'\u002C', u'\u0031', u'\u0030', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cuz) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cva) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuz)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cva)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0049', u'\u006E', u'\u0074'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvc) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvd) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0032', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cvc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u002E', u'\u0053', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0030', u'\u0022', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cvc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0078', u'\u0022', u'\u0029', u'\u007B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(22, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0032', u'\u0029', u'\u002C', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvd)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(24, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028', u'\u0073', u'\u005F', u'\u002C', u'\u0031', u'\u0036', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvd)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u002E', u'\u0053', u'\u002C', u'\u0031', u'\u0030', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvf) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvg) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006E', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvg)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0030', u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(29, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((3LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u003F', u'\u0022', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u0022', u'\u003A', u'\u0022', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u0022', u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u006E', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003E', u'\u003D', u'\u0030', u'\u003F', u'\u007E', u'\u007E'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u0026', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u003A', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u002D', u'\u0028', u'\u007E'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0026', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(63, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0022', u'\u002B', u'\u006E', u'\u005F', u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0032', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u006E', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003E', u'\u003D', u'\u0030', u'\u003F', u'\u007E', u'\u007E'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(17, u'\u0026', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u003A', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u002D', u'\u0028', u'\u007E'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0026', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(65, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0022', u'\u002B', u'\u006E', u'\u005F', u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0034', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u006E', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u003E', u'\u003E', u'\u003E', u'\u0030', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0022', u'\u002B', u'\u006E', u'\u005F', u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0038', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u006E', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u003E', u'\u003E', u'\u003E', u'\u0030', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(87, u'\u003E', u'\u003D', u'\u0030', u'\u003F', u'\u0022', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0022', u'\u003A', u'\u0022', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0022', u'\u0029', u'\u002B', u'\u006E', u'\u005F', u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0031', u'\u0036', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvg)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(9, u'\u0063', u'\u0075', u'\u0069', u'\u005F', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvi) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(26, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074', u'\u0029', u'\u007B', u'\u004F', u'\u005F', u'\u002E', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u007D', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u006F', u'\u006C', u'\u0065', u'\u002E', u'\u006C', u'\u006F', u'\u0067', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(crn, (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u0046', u'\u0069', u'\u006C', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(10, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvl) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0066', u'\u005F', u'\u003D', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u002C', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvl)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(46, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0029', u'\u0066', u'\u005F', u'\u003D', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u0029', u'\u0021', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u003D', u'\u003D', u'\u003D', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0034', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0072', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0065', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0073', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0033', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(17, u'\u0066', u'\u005F', u'\u003D', u'\u0046', u'\u005F', u'\u0028', u'\u0070', u'\u005F', u'\u002C', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(12, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvn) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvo) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvp) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvq) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0066', u'\u005F', u'\u002C', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvn)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0034', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0072', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0065', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0073', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0033', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0066', u'\u005F', u'\u003D', u'\u0046', u'\u0046', u'\u005F', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(33, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003C', u'\u0066', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(36, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0030', u'\u002C', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u0070', u'\u005F', u'\u0026', u'\u0026', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvo)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(47, u'\u007C', u'\u007C', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u002E', u'\u0069', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u0029', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0069', u'\u0066', u'\u0028', u'\u0021'))->Cat(v<Array_<char16_t>*>(((cvp)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(42, u'\u0028', u'\u007B', u'\u0053', u'\u003A', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u007D', u'\u002C', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u005B', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0027', u'\u002F', u'\u0027', u'\u002C'))->Cat(v<Array_<char16_t>*>(((cvq)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0029', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(crn, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvs) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvt) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cvu) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0066', u'\u005F', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvt)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(39, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0029', u'\u0066', u'\u005F', u'\u003D', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0034', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0072', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0065', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0073', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0033', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0066', u'\u005F', u'\u003D', u'\u0046', u'\u005F', u'\u0028', u'\u0070', u'\u005F', u'\u002C', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(26, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvs)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cvu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u003D', u'\u007B', u'\u0046', u'\u003A', u'\u0066', u'\u005F', u'\u002C', u'\u0049', u'\u003A', u'\u0030', u'\u007D', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvs)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(crn, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvx) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvy) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cvz) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cwa) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvx)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwa)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u003D', u'\u007B', u'\u0046', u'\u003A', u'\u0022', u'\u0022', u'\u002C', u'\u0049', u'\u003A', u'\u0030', u'\u002C', u'\u0050', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cvy)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u007D', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvx)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(crn, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cwc) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cwd) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwd)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0046', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cwf) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cwg) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cwf)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwg)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0049', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(21, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u004C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cwi) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cwj) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cwi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwj)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002E', u'\u0046', u'\u002E', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0041', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwj)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0049', u'\u002B', u'\u002B', u'\u0029', u'\u003B', u'\u000A')))))));
}
else if(cmp_(crn, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cwl) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cwm) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cwn) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cwo) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwl)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwo)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0049', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwn)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(crn, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0054', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cwq) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cwr) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cwq)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u002E', u'\u0049', u'\u003E', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwq)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwr)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002E', u'\u0046', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u000A')))))));
}
else if(cmp_(crn, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cwt) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cwu) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0076', u'\u0061', u'\u0072', u'\u0020', u'\u0064', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwt)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u0046', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u006C', u'\u0061', u'\u0063', u'\u0065', u'\u0028', u'\u0022', u'\u005C', u'\u006E', u'\u0022', u'\u002C', u'\u0020', u'\u0022', u'\u005C', u'\u0075', u'\u0030', u'\u0030', u'\u0030', u'\u0044', u'\u005C', u'\u006E', u'\u0022', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(34, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0029', u'\u007B', u'\u004F', u'\u005F', u'\u002E', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwt)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002E', u'\u0050', u'\u002C', u'\u0064', u'\u005F', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u007D', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(23, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0062', u'\u005F', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0042', u'\u006C', u'\u006F', u'\u0062', u'\u0028', u'\u005B', u'\u0064', u'\u005F', u'\u005D', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(36, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006C', u'\u005F', u'\u003D', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u0045', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0028', u'\u0022', u'\u0061', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u006C', u'\u005F', u'\u002E', u'\u0064', u'\u006F', u'\u0077', u'\u006E', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwt)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0050', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(46, u'\u006C', u'\u005F', u'\u002E', u'\u0068', u'\u0072', u'\u0065', u'\u0066', u'\u003D', u'\u0028', u'\u0055', u'\u0052', u'\u004C', u'\u007C', u'\u007C', u'\u0077', u'\u0065', u'\u0062', u'\u006B', u'\u0069', u'\u0074', u'\u0055', u'\u0052', u'\u004C', u'\u0029', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u004F', u'\u0062', u'\u006A', u'\u0065', u'\u0063', u'\u0074', u'\u0055', u'\u0052', u'\u004C', u'\u0028', u'\u0062', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(41, u'\u006C', u'\u005F', u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0041', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0028', u'\u0022', u'\u0073', u'\u0074', u'\u0079', u'\u006C', u'\u0065', u'\u0022', u'\u002C', u'\u0022', u'\u0064', u'\u0069', u'\u0073', u'\u0070', u'\u006C', u'\u0061', u'\u0079', u'\u003A', u'\u006E', u'\u006F', u'\u006E', u'\u0065', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u002E', u'\u0061', u'\u0070', u'\u0070', u'\u0065', u'\u006E', u'\u0064', u'\u0043', u'\u0068', u'\u0069', u'\u006C', u'\u0064', u'\u0028', u'\u006C', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(12, u'\u006C', u'\u005F', u'\u002E', u'\u0063', u'\u006C', u'\u0069', u'\u0063', u'\u006B', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u002E', u'\u0072', u'\u0065', u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u0043', u'\u0068', u'\u0069', u'\u006C', u'\u0064', u'\u0028', u'\u006C', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwt)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0046', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cww) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cwx) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cww)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cwx)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0049', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cwz) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxa) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxb) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cxc) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwz)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxc)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0049', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxb)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(crn, (new Array_<char16_t>(16, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxe) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxf) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cxg) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
}
else if(cmp_(crn, (new Array_<char16_t>(20, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0043', u'\u0068', u'\u0061', u'\u0072'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxi) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxj) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cxk) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0049', u'\u003C'))->Cat(v<Array_<char16_t>*>(((cxi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002E', u'\u0046', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0046', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002E', u'\u0046', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0030', u'\u002C'))->Cat(v<Array_<char16_t>*>(((cxi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(24, u'\u002E', u'\u0049', u'\u0029', u'\u002B', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxj)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cxi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0046', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0049', u'\u002B', u'\u0031', u'\u0029', u'\u003B', u'\u000A'))))))))))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(24, u'\u002E', u'\u0046', u'\u002B', u'\u003D', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxj)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxi)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxk)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0049', u'\u002B', u'\u002B', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(19, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u0065', u'\u0064', u'\u0069', u'\u0074', u'\u0042', u'\u0061', u'\u0073', u'\u0065', u'\u0047', u'\u0065', u'\u0074', u'\u0054', u'\u0065', u'\u0078', u'\u0074'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxm) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cxn) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxm)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxn)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002E', u'\u0048', u'\u002E', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u003B', u'\u000A')))));
}
else if(cmp_(crn, (new Array_<char16_t>(17, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0045', u'\u0064', u'\u0069', u'\u0074', u'\u004D', u'\u0075', u'\u006C', u'\u0074', u'\u0069'))) == 0){
awe<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxp) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxq) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxr) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxs) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxt) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxu) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxv) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((crk), (new Array_<int64_t>(1, (0LL))));
(cxw) = ((biv)((awi<List_<gb*>*, gb*>((crk), (new Array_<int64_t>(1, (0LL)))))));
(cxx) = ((cvv)((crl), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(43, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0068', u'\u005F', u'\u003D', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u0045', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0028', u'\u0022', u'\u0074', u'\u0065', u'\u0078', u'\u0074', u'\u0061', u'\u0072', u'\u0065', u'\u0061', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(24, u'\u0068', u'\u005F', u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0041', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0028', u'\u0022', u'\u0063', u'\u006F', u'\u006C', u'\u0073', u'\u0022', u'\u002C', u'\u0022'))->Cat(v<Array_<char16_t>*>(((cxt)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0022', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(24, u'\u0068', u'\u005F', u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0041', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0028', u'\u0022', u'\u0072', u'\u006F', u'\u0077', u'\u0073', u'\u0022', u'\u002C', u'\u0022'))->Cat(v<Array_<char16_t>*>(((cxu)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0022', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u002E', u'\u0061', u'\u0070', u'\u0070', u'\u0065', u'\u006E', u'\u0064', u'\u0043', u'\u0068', u'\u0069', u'\u006C', u'\u0064', u'\u0028', u'\u0063', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxp)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((cxx)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003D', u'\u007B', u'\u0043', u'\u003A', u'\u0063', u'\u005F', u'\u007D', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((cri), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxp)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
}
// buildStats
static void bki(List_<ge*>* cxz /*stats*/){
ge* cyb = nullptr; // stat
int64_t cyd = 0;
awe<List_<ge*>*>((cxz), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<ge*>*>((cxz), (new Array_<int64_t>(1, (0LL)))))){
(cyb) = (awi<List_<ge*>*, ge*>((cxz), (new Array_<int64_t>(1, (0LL)))));
switch((cyb)->lw){
case 66049LL:
(cyf)((as_<cjh>(classTable_, (cyb), 88)));
break;
case 66050LL:
(cyh)((as_<cjl>(classTable_, (cyb), 92)));
break;
case 16843265LL:
(cyj)((as_<cjp>(classTable_, (cyb), 98)));
break;
case 16843266LL:
(cyl)((as_<cjt>(classTable_, (cyb), 100)));
break;
case 66051LL:
(cyn)((as_<btu>(classTable_, (cyb), 52)));
break;
case 526LL:
(cyp)((as_<cjy>(classTable_, (cyb), 102)));
break;
case 66052LL:
(cyr)((as_<btw>(classTable_, (cyb), 54)));
break;
case 527LL:
(cyt)((as_<ckd>(classTable_, (cyb), 104)));
break;
case 528LL:
(cyv)((as_<buu>(classTable_, (cyb), 62)));
break;
case 529LL:
(cyx)((as_<ge>(classTable_, (cyb), 16)));
break;
case 530LL:
(cyz)((as_<ge>(classTable_, (cyb), 16)));
break;
case 531LL:
(czb)((as_<ckm>(classTable_, (cyb), 106)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
ays<List_<ge*>*>((cxz), (new Array_<int64_t>(1, (0LL))));
}
}
// getDefaultValue
static Array_<char16_t>* bko(gc* czd /*type*/){
int64_t czh = 0;
int64_t czm = 0;
if((ckw)((czd))){
return new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C');
}
switch((czd)->lw){
case 66565LL:
if(!((clb)((czd)))){
throw 0xE9170000U;
}
return new Array_<char16_t>(1, u'\u0030');
break;
case 1025LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1026LL:
switch((as_<bud>(classTable_, (czd), 60))->bue){
case 0LL:
case 2LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 3LL:
return new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// refClass
static Array_<char16_t>* bkw(ul* czs /*ast*/){
biw* czt = nullptr; // info
(czt) = ((biv)((czs)));
if((czt)->biy){
return (czt)->bjm;
}
((czt)->biy) = (true);
if(!eqAddr_(((czs)->nj), (nullptr))){
(bkw)((as_<ul>(classTable_, ((czs)->nj), 22)));
}
uk<Queue_<ul*>*, ul*>((bj), (new Array_<int64_t>(1, (0LL))), (czs));
return (czt)->bjm;
}
// findFunc
static fw* ble(ul* czy /*ast*/, Array_<char16_t>* czz /*name*/){
List_<um*>* daa = nullptr; // items
um* dac = nullptr; // item
(daa) = ((czy)->bag);
awe<List_<um*>*>((daa), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((daa), (new Array_<int64_t>(1, (0LL)))))){
(dac) = (awi<List_<um*>*, um*>((daa), (new Array_<int64_t>(1, (0LL)))));
if(((((dac)->azl)->lw) == (256LL)) && (cmp_((((dac)->azl)->nf), (czz)) == 0)){
return as_<fw>(classTable_, ((dac)->azl), 8);
}
ays<List_<um*>*>((daa), (new Array_<int64_t>(1, (0LL))));
}
return nullptr;
}
// writeJs
static void blu(bhq* daf /*writer*/, List_<Array_<char16_t>*>* dag /*resFiles*/){
bool dah = false; // static
bool dai = false;
gb* dan = nullptr; // globalVar
biw* dao = nullptr; // info
bool dar = false; // first
Array_<char16_t>* dat = nullptr; // resFile
int64_t dba = 0;
auz* dbg = nullptr; // reader
Array_<char16_t>* dbi = nullptr; // line
int64_t dbm = 0;
bool dbs = false; // first
Array_<char16_t>* dbu = nullptr; // resFile
int64_t dcb = 0;
int64_t dbb = 0;
int64_t dbn = 0;
int64_t dcc = 0;
(dah) = (avo<Dict_<Array_<char16_t>*, bool>*, Array_<char16_t>*, bool>((ax), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063')), (&dai)));
if(dah){
(bhw)((daf), (((new Array_<char16_t>(22, u'\u0022', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u0063', u'\u0074', u'\u0022', u'\u003B', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fd)((au))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u0028', u'\u004F', u'\u005F', u'\u0029', u'\u007B', u'\u000A'))));
}
else{
(bhw)((daf), (new Array_<char16_t>(310, u'\u0022', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u0063', u'\u0074', u'\u0022', u'\u003B', u'\u0021', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0066', u'\u0029', u'\u007B', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0064', u'\u003D', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u003B', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0068', u'\u0028', u'\u0029', u'\u007B', u'\u0064', u'\u002E', u'\u0072', u'\u0065', u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u0044', u'\u004F', u'\u004D', u'\u0043', u'\u006F', u'\u006E', u'\u0074', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u006F', u'\u0061', u'\u0064', u'\u0065', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u003B', u'\u0066', u'\u0028', u'\u0029', u'\u007D', u'\u0022', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u0022', u'\u003D', u'\u003D', u'\u003D', u'\u0064', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0053', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u007C', u'\u007C', u'\u0022', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0022', u'\u0021', u'\u003D', u'\u003D', u'\u0064', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0053', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u0026', u'\u0026', u'\u0021', u'\u0064', u'\u002E', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0045', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0064', u'\u006F', u'\u0053', u'\u0063', u'\u0072', u'\u006F', u'\u006C', u'\u006C', u'\u003F', u'\u0073', u'\u0065', u'\u0074', u'\u0054', u'\u0069', u'\u006D', u'\u0065', u'\u006F', u'\u0075', u'\u0074', u'\u0028', u'\u0066', u'\u0029', u'\u003A', u'\u0028', u'\u0064', u'\u002E', u'\u0061', u'\u0064', u'\u0064', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u0044', u'\u004F', u'\u004D', u'\u0043', u'\u006F', u'\u006E', u'\u0074', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u006F', u'\u0061', u'\u0064', u'\u0065', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u002C', u'\u0061', u'\u0064', u'\u0064', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u0029', u'\u007D', u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0029', u'\u007B', u'\u000A')));
(bhw)((daf), (new Array_<char16_t>(8, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u004F', u'\u005F', u'\u003B', u'\u000A')));
}
awe<List_<gb*>*>((bn), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bn), (new Array_<int64_t>(1, (0LL)))))){
(dan) = (awi<List_<gb*>*, gb*>((bn), (new Array_<int64_t>(1, (0LL)))));
(dao) = ((biv)((dan)));
(bhw)((daf), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((dao)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((bko)(((dan)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
ays<List_<gb*>*>((bn), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL)))))){
(bhw)((daf), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
}
(bhw)((daf), (new Array_<char16_t>(18, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0043', u'\u005F', u'\u0028', u'\u0074', u'\u002C', u'\u0076', u'\u0029', u'\u007B', u'\u000A')));
(bhw)((daf), (new Array_<char16_t>(14, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u0074', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u007B', u'\u000A')));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((3LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((8LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u003B', u'\u000A')));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(10, u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A'))));
(bhw)((daf), (new Array_<char16_t>(30, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u007B', u'\u0053', u'\u003A', u'\u0076', u'\u002E', u'\u0053', u'\u007D', u'\u003B', u'\u000A')));
(bhw)((daf), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
(bhw)((daf), (new Array_<char16_t>(27, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u0076', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003B', u'\u000A')));
(bhw)((daf), (new Array_<char16_t>(53, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u0076', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0061', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0043', u'\u005F', u'\u0028', u'\u0074', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0031', u'\u0029', u'\u002C', u'\u0076', u'\u005B', u'\u0069', u'\u005D', u'\u0029', u'\u003B', u'\u000A')));
(bhw)((daf), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u003B', u'\u000A')));
(bhw)((daf), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((130LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((131LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((132LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((133LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((134LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bhw)((daf), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhw)((daf), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhw)((daf), (new Array_<char16_t>(18, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0046', u'\u005F', u'\u0028', u'\u0070', u'\u002C', u'\u0066', u'\u0029', u'\u007B', u'\u000A')));
(dar) = (true);
awe<List_<Array_<char16_t>*>*>((dag), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((dag), (new Array_<int64_t>(1, (0LL)))))){
(dat) = (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((dag), (new Array_<int64_t>(1, (0LL)))));
if(dar){
(dar) = (false);
(bhw)((daf), (new Array_<char16_t>(8, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u003D', u'\u003D', u'\u003D', u'\u0022')));
}
else{
(bhw)((daf), (new Array_<char16_t>(13, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u003D', u'\u003D', u'\u003D', u'\u0022')));
}
for(dba = ((ay)->Len()), dbb = (((dat)->Len()) - (1LL)); dba <= dbb; dba += (1LL)){
(bhw)((daf), ((dbc)(((dat)->At(dba)))));
}
(bhw)((daf), (new Array_<char16_t>(3, u'\u0022', u'\u0029', u'\u000A')));
if(((dat)->At(((dat)->Len()) - (1LL))) == (u'\u002F')){
(bhw)((daf), (new Array_<char16_t>(20, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else{
(bhw)((daf), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u003F', u'\u0022')));
(dbg) = ((auy)((new auz()), (dat)));
while(!((bht)((dbg)))){
(dbi) = ((bhv)((dbg)));
for(dbm = (0LL), dbn = (((dbi)->Len()) - (1LL)); dbm <= dbn; dbm += (1LL)){
(bhw)((daf), ((dbc)(((dbi)->At(dbm)))));
}
(bhw)((daf), (new Array_<char16_t>(2, u'\u005C', u'\u006E')));
}
(avm)((dbg));
(bhw)((daf), (new Array_<char16_t>(8, u'\u0022', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
ays<List_<Array_<char16_t>*>*>((dag), (new Array_<int64_t>(1, (0LL))));
}
if(((dag)->Len()) > (0LL)){
(bhw)((daf), (new Array_<char16_t>(26, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else{
(bhw)((daf), (new Array_<char16_t>(21, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
(bhw)((daf), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhw)((daf), (new Array_<char16_t>(22, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0046', u'\u0046', u'\u005F', u'\u0028', u'\u0029', u'\u007B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u005B')));
(dbs) = (true);
awe<List_<Array_<char16_t>*>*>((dag), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((dag), (new Array_<int64_t>(1, (0LL)))))){
(dbu) = (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((dag), (new Array_<int64_t>(1, (0LL)))));
if(dbs){
(dbs) = (false);
(bhw)((daf), (new Array_<char16_t>(1, u'\u0022')));
}
else{
(bhw)((daf), (new Array_<char16_t>(2, u'\u002C', u'\u0022')));
}
for(dcb = ((ay)->Len()), dcc = (((dbu)->Len()) - (1LL)); dcb <= dcc; dcb += (1LL)){
(bhw)((daf), ((dbc)(((dbu)->At(dcb)))));
}
(bhw)((daf), (new Array_<char16_t>(1, u'\u0022')));
ays<List_<Array_<char16_t>*>*>((dag), (new Array_<int64_t>(1, (0LL))));
}
(bhw)((daf), (new Array_<char16_t>(4, u'\u005D', u'\u003B', u'\u007D', u'\u000A')));
(bhw)((daf), (new Array_<char16_t>(5, u'\u0061', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
if(dah){
(bhw)((daf), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else{
(bhw)((daf), (new Array_<char16_t>(3, u'\u007D', u'\u0029', u'\u000A')));
}
}
// initAst
static void bpl(fx* dcg /*ast*/, int64_t dch /*typeId*/, ga* dci /*pos*/, Array_<char16_t>* dcj /*name*/, bool dck /*setParent*/){
if(!(!is_(classTable_, (dcg), 14))){
throw 0xE9170000U;
}
(dcl)((dcg), (dch), (dci), (dcj), (dck));
}
// make
static ga* bpm(Array_<char16_t>* dcm /*srcName*/, int64_t dcn /*row*/, int64_t dco /*col*/){
ga* dcp = nullptr; // pos
(dcp) = (new ga());
((dcp)->hk) = (dcm);
((dcp)->hl) = (dcn);
((dcp)->hm) = (dco);
return dcp;
}
// _addStack
template<typename T_, typename C_> static void bpn(T_ dcq /*me_*/, Array_<int64_t>* dcr /*type*/, C_ dcs /*item*/){
dcq->B.push(dcs);
}
// readChar
static char16_t bpo(){
char16_t dcw = 0; // c
char16_t dda = 0;
while(true){
(dcw) = ((brb)());
if((dcw) == (u'\u000A')){
(dcw) = ((bpo)());
switch(dcw){
case u'\u000A':
return u'\u000A';
break;
case u'\u003B':
do{
(dcw) = ((dde)());
if((dcw) == (u'\u0000')){
return u'\u0000';
}
}while((dcw) != (u'\u000A'));
(ave) = (dcw);
continue;
break;
case u'\u007C':
return (bpo)();
break;
}
(avf) = (dcw);
return u'\u000A';
}
if((dcw) != (u'\u0020')){
return dcw;
}
}
}
// readIdentifier
static Array_<char16_t>* bqf(bool ddk /*skipSpaces*/, bool ddl /*refName*/){
char16_t ddm = 0; // c
Array_<char16_t>* ddr = nullptr; // buf
int64_t dds = 0; // pos
bool ddt = false; // at
char16_t ddw = 0;
Array_<char16_t>* dec = nullptr; // srcName
int64_t deg = 0;
char16_t dei = 0; // c2
int64_t deh = 0;
(ddm) = ((ddk) ? ((bpo)()) : ((brb)()));
if(!((((((u'\u0061') <= (ddm)) && ((ddm) <= (u'\u007A'))) || (((u'\u0041') <= (ddm)) && ((ddm) <= (u'\u005A')))) || ((ddm) == (u'\u005F'))) || ((ddl) && (((ddm) == (u'\u0040')) || ((ddm) == (u'\u005C')))))){
(ave) = (ddm);
(ad)((65542LL), ((ddp)()), (new Array_<Array_<char16_t>*>(1, ((ddq)((ddm))))));
return new Array_<char16_t>(0);
}
(ddr) = (newArray_<char16_t, Array_<char16_t>*>(1, (128LL)));
(dds) = (0LL);
(ddt) = (false);
do{
switch(ddm){
case u'\u0040':
if(ddt){
(ave) = (ddm);
(ad)((65543LL), ((ddp)()), (nullptr));
return new Array_<char16_t>(0);
}
if((dds) != (0LL)){
(dec) = (auw<Array_<char16_t>*>((ddr), (new Array_<int64_t>(1, (0LL))), (0LL), (dds)));
for(deg = (0LL), deh = (((dec)->Len()) - (1LL)); deg <= deh; deg += (1LL)){
(dei) = ((dec)->At(deg));
if(((u'\u0041') <= (dei)) && ((dei) <= (u'\u005A'))){
(ave) = (ddm);
(ad)((65544LL), ((ddp)()), (new Array_<Array_<char16_t>*>(1, (dec))));
return new Array_<char16_t>(0);
}
}
(del)((dec));
}
(ddt) = (true);
break;
case u'\u005C':
if(ddt){
(ave) = (ddm);
(ad)((65545LL), ((ddp)()), (nullptr));
return new Array_<char16_t>(0);
}
break;
}
if((dds) == (128LL)){
(ave) = (ddm);
(ad)((65546LL), ((ddp)()), (new Array_<Array_<char16_t>*>(1, (ddr))));
return new Array_<char16_t>(0);
}
((ddr)->At(dds)) = (ddm);
(dds) = ((dds) + (1LL));
(ddm) = ((brb)());
}while(((((((u'\u0061') <= (ddm)) && ((ddm) <= (u'\u007A'))) || (((u'\u0041') <= (ddm)) && ((ddm) <= (u'\u005A')))) || ((ddm) == (u'\u005F'))) || (((u'\u0030') <= (ddm)) && ((ddm) <= (u'\u0039')))) || ((ddl) && (((ddm) == (u'\u0040')) || ((ddm) == (u'\u005C')))));
(ave) = (ddm);
return auw<Array_<char16_t>*>((ddr), (new Array_<int64_t>(1, (0LL))), (0LL), (dds));
}
// parseFunc
static fw* bqk(Array_<char16_t>* des /*parentClass*/, bool det /*overritten*/){
fw* deu = nullptr; // ast
char16_t dew = 0; // c
int64_t dfc = 0; // row
int64_t dfd = 0; // col
Array_<char16_t>* dfe = nullptr; // s
char16_t dfj = 0;
gb* dhb = nullptr; // arg
dhf* dhe = nullptr; // type
char16_t dhh = 0; // c
char16_t dhv = 0; // c
ge* die = nullptr; // stat
(deu) = (new fw());
((deu)->sm) = (0LL);
((deu)->sf) = (new List_<Array_<char16_t>*>());
(dew) = ((bpo)());
if((dew) == (u'\u005B')){
while(true){
(dfc) = (avc);
(dfd) = (avd);
(dfe) = ((dff)());
if(((((dfe)->Len()) == (5LL)) && (((dfe)->At(0LL)) == (u'\u005F'))) && (((dfe)->At(1LL)) == (u'\u005F'))){
switch((dfe)->At(2LL)){
case u'\u0061':
if((((dfe)->At(3LL)) == (u'\u006E')) && (((dfe)->At(4LL)) == (u'\u0079'))){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (1LL)));
}
break;
case u'\u0066':
if((((dfe)->At(3LL)) == (u'\u0072')) && (((dfe)->At(4LL)) == (u'\u0063'))){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (128LL)));
}
break;
case u'\u006B':
if((((dfe)->At(3LL)) == (u'\u0076')) && (((dfe)->At(4LL)) == (u'\u0066'))){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (256LL)));
}
break;
case u'\u006D':
if((((dfe)->At(3LL)) == (u'\u006B')) && (((dfe)->At(4LL)) == (u'\u0069'))){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (2048LL)));
}
break;
case u'\u0072':
if((((dfe)->At(3LL)) == (u'\u0061')) && (((dfe)->At(4LL)) == (u'\u0077'))){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (4096LL)));
}
else if((((dfe)->At(3LL)) == (u'\u006D')) && (((dfe)->At(4LL)) == (u'\u0065'))){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (4LL)));
}
else if((((dfe)->At(3LL)) == (u'\u0063')) && (((dfe)->At(4LL)) == (u'\u0068'))){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (16LL)));
}
else if(((dfe)->At(3LL)) == (u'\u0061')){
if(((dfe)->At(4LL)) == (u'\u0063')){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (64LL)));
}
else if(((dfe)->At(4LL)) == (u'\u006B')){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (512LL)));
}
else if(((dfe)->At(4LL)) == (u'\u0076')){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (1024LL)));
}
}
break;
case u'\u0074':
if((((dfe)->At(3LL)) == (u'\u006D')) && (((dfe)->At(4LL)) == (u'\u0065'))){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (2LL)));
}
else if((((dfe)->At(3LL)) == (u'\u0063')) && (((dfe)->At(4LL)) == (u'\u0068'))){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (8LL)));
}
else if((((dfe)->At(3LL)) == (u'\u006B')) && (((dfe)->At(4LL)) == (u'\u0076'))){
((deu)->sm) = (dfn<int64_t>(((deu)->sm), (new Array_<int64_t>(1, (0LL))), (32LL)));
}
break;
}
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((deu)->sf), (new Array_<int64_t>(1, (0LL))), (dfe));
}
(dew) = ((bpo)());
if((dew) == (u'\u0000')){
break;
}
if((dew) == (u'\u005D')){
break;
}
if((dew) != (u'\u002C')){
(dgt)((u'\u002C'), (dew));
break;
}
}
}
else{
(ave) = (dew);
}
(bpl)((deu), (256LL), ((ddp)()), ((bqf)((true), (false))), (true));
((deu)->sg) = (new List_<gb*>());
((deu)->sh) = (nullptr);
((deu)->si) = (new List_<ge*>());
((deu)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bpn<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (deu));
if(!eqAddr_((des), (nullptr))){
(dgx)((deu), (des));
}
(dgy)((u'\u0028'), (true));
if(!eqAddr_((des), (nullptr))){
(dhb) = (new gb());
(bpl)((dhb), (7LL), ((deu)->ne), (nullptr), (false));
((dhb)->nf) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
((dhb)->qk) = (2LL);
((dhb)->ql) = (false);
((dhb)->qg) = (nullptr);
(dhc)((dhb), (false));
(dhe) = (new dhf());
(bpl)((dhe), (66565LL), ((deu)->ne), (nullptr), (false));
(dgx)((dhe), (des));
((dhb)->qf) = (dhe);
uh<List_<gb*>*, gb*>(((deu)->sg), (new Array_<int64_t>(1, (0LL))), (dhb));
}
(dhh) = ((bpo)());
if((dhh) != (u'\u0029')){
(ave) = (dhh);
while(true){
uh<List_<gb*>*, gb*>(((deu)->sg), (new Array_<int64_t>(1, (0LL))), ((dhn)((2LL), (nullptr))));
(dhh) = ((bpo)());
if((dhh) == (u'\u0000')){
break;
}
if((dhh) == (u'\u0029')){
break;
}
if((dhh) != (u'\u002C')){
(dgt)((u'\u002C'), (dhh));
break;
}
}
}
(dhv) = ((bpo)());
if((dhv) == (u'\u003A')){
((deu)->sh) = ((dhy)());
(dhv) = ((bpo)());
}
if((dhv) != (u'\u000A')){
(dgt)((u'\u000A'), (dhv));
}
while(true){
(die) = ((dif)((deu)));
if(eqAddr_((die), (nullptr))){
if(avg){
break;
}
else{
continue;
}
}
if(((die)->lw) == (513LL)){
break;
}
uh<List_<ge*>*, ge*>(((deu)->si), (new Array_<int64_t>(1, (0LL))), (die));
}
brh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return deu;
}
// parseVar
static bgi* bqm(int64_t din /*kind*/, Array_<char16_t>* dio /*parentClass*/){
bgi* dip = nullptr; // ast
(dip) = (new bgi());
(bpl)((dip), (2LL), ((ddp)()), (nullptr), (false));
((dip)->bgk) = ((dhn)((din), (dio)));
(dgy)((u'\u000A'), (true));
return dip;
}
// parseConst
static bqp* bqo(){
bqp* diq = nullptr; // ast
(diq) = (new bqp());
(bpl)((diq), (3LL), ((ddp)()), (nullptr), (false));
((diq)->brf) = ((dhn)((4LL), (nullptr)));
(dgy)((u'\u000A'), (true));
return diq;
}
// _dtor
static void dir(bqp* dis){
((dis)->brf) = (nullptr);
((dis)->ne) = (nullptr);
((dis)->nf) = (nullptr);
((dis)->ng) = (nullptr);
((dis)->nh) = (nullptr);
((dis)->ni) = (nullptr);
((dis)->nj) = (nullptr);
((dis)->nk) = (nullptr);
}
// _copy
static bqp* dit(bqp* diu){
bqp* div = nullptr;
(div) = (new bqp());
((div)->brf) = (copy_((diu)->brf));
((div)->ne) = (copy_((diu)->ne));
((div)->nf) = (copy_((diu)->nf));
((div)->ng) = (copy_((diu)->ng));
((div)->nh) = (copy_((diu)->nh));
((div)->ni) = (copy_((diu)->ni));
((div)->nj) = (copy_((diu)->nj));
((div)->nk) = (copy_((diu)->nk));
((div)->no) = ((diu)->no);
((div)->lw) = ((diu)->lw);
return as_<bqp>(classTable_, (div), 44);
}
// _toBin
static Array_<uint8_t>* diw(bqp* dix){
Array_<uint8_t>* diy = nullptr;
(diy) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(diy) = ((diy)->Cat(toBin_((dix)->brf)));
(diy) = ((diy)->Cat(toBin_((dix)->ne)));
(diy) = ((diy)->Cat(toBin_((dix)->nf)));
(diy) = ((diy)->Cat(toBin_((dix)->ng)));
(diy) = ((diy)->Cat(toBin_((dix)->nh)));
(diy) = ((diy)->Cat(toBin_((dix)->ni)));
(diy) = ((diy)->Cat(toBin_((dix)->nj)));
(diy) = ((diy)->Cat(toBin_((dix)->nk)));
(diy) = ((diy)->Cat(toBin_((dix)->no)));
(diy) = ((diy)->Cat(toBin_((dix)->lw)));
return diy;
}
// _fromBin
static bqp* djj(bqp* djk, Array_<uint8_t>* djl, int64_t* djm){
bqp* djn = nullptr;
(djn) = (new bqp());
((djn)->brf) = (fromBin_<gb*>((djl), (*djm)));
((djn)->ne) = (fromBin_<ga*>((djl), (*djm)));
((djn)->nf) = (fromBin_<Array_<char16_t>*>((djl), (*djm)));
((djn)->ng) = (fromBin_<fx*>((djl), (*djm)));
((djn)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((djl), (*djm)));
((djn)->ni) = (fromBin_<Array_<char16_t>*>((djl), (*djm)));
((djn)->nj) = (fromBin_<fx*>((djl), (*djm)));
((djn)->nk) = (fromBin_<fy*>((djl), (*djm)));
((djn)->no) = (fromBin_<bool>((djl), (*djm)));
((djn)->lw) = (fromBin_<int64_t>((djl), (*djm)));
return djn;
}
// parseAlias
static bqs* bqr(){
bqs* djo = nullptr; // ast
(djo) = (new bqs());
(bpl)((djo), (4LL), ((ddp)()), ((bqf)((true), (false))), (true));
(dgy)((u'\u003A'), (true));
((djo)->djp) = ((dhy)());
(dgy)((u'\u000A'), (true));
return djo;
}
// _dtor
static void djq(bqs* djr){
((djr)->djp) = (nullptr);
((djr)->ne) = (nullptr);
((djr)->nf) = (nullptr);
((djr)->ng) = (nullptr);
((djr)->nh) = (nullptr);
((djr)->ni) = (nullptr);
((djr)->nj) = (nullptr);
((djr)->nk) = (nullptr);
}
// _copy
static bqs* djs(bqs* djt){
bqs* dju = nullptr;
(dju) = (new bqs());
((dju)->djp) = (copy_((djt)->djp));
((dju)->ne) = (copy_((djt)->ne));
((dju)->nf) = (copy_((djt)->nf));
((dju)->ng) = (copy_((djt)->ng));
((dju)->nh) = (copy_((djt)->nh));
((dju)->ni) = (copy_((djt)->ni));
((dju)->nj) = (copy_((djt)->nj));
((dju)->nk) = (copy_((djt)->nk));
((dju)->no) = ((djt)->no);
((dju)->lw) = ((djt)->lw);
return as_<bqs>(classTable_, (dju), 46);
}
// _toBin
static Array_<uint8_t>* djv(bqs* djw){
Array_<uint8_t>* djx = nullptr;
(djx) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(djx) = ((djx)->Cat(toBin_((djw)->djp)));
(djx) = ((djx)->Cat(toBin_((djw)->ne)));
(djx) = ((djx)->Cat(toBin_((djw)->nf)));
(djx) = ((djx)->Cat(toBin_((djw)->ng)));
(djx) = ((djx)->Cat(toBin_((djw)->nh)));
(djx) = ((djx)->Cat(toBin_((djw)->ni)));
(djx) = ((djx)->Cat(toBin_((djw)->nj)));
(djx) = ((djx)->Cat(toBin_((djw)->nk)));
(djx) = ((djx)->Cat(toBin_((djw)->no)));
(djx) = ((djx)->Cat(toBin_((djw)->lw)));
return djx;
}
// _fromBin
static bqs* dki(bqs* dkj, Array_<uint8_t>* dkk, int64_t* dkl){
bqs* dkm = nullptr;
(dkm) = (new bqs());
((dkm)->djp) = (fromBin_<gc*>((dkk), (*dkl)));
((dkm)->ne) = (fromBin_<ga*>((dkk), (*dkl)));
((dkm)->nf) = (fromBin_<Array_<char16_t>*>((dkk), (*dkl)));
((dkm)->ng) = (fromBin_<fx*>((dkk), (*dkl)));
((dkm)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dkk), (*dkl)));
((dkm)->ni) = (fromBin_<Array_<char16_t>*>((dkk), (*dkl)));
((dkm)->nj) = (fromBin_<fx*>((dkk), (*dkl)));
((dkm)->nk) = (fromBin_<fy*>((dkk), (*dkl)));
((dkm)->no) = (fromBin_<bool>((dkk), (*dkl)));
((dkm)->lw) = (fromBin_<int64_t>((dkk), (*dkl)));
return dkm;
}
// parseClass
static ul* bqv(){
ul* dkn = nullptr; // ast
char16_t dkp = 0; // c
bool dkt = false; // kuinSrc
char16_t dkz = 0; // c
int64_t dle = 0; // row
int64_t dlf = 0; // col
um* dlg = nullptr; // item
Array_<char16_t>* dln = nullptr; // id
Array_<char16_t>* dlo = nullptr; // className
Array_<char16_t>* dma = nullptr;
Array_<char16_t>* dmc = nullptr; // id2
fx* dmf = nullptr; // astEndClass
(dkn) = (new ul());
(bpl)((dkn), (5LL), ((ddp)()), ((bqf)((true), (false))), (true));
((dkn)->bag) = (new List_<um*>());
(dgy)((u'\u0028'), (true));
(dkp) = ((bpo)());
if((dkp) != (u'\u0029')){
(ave) = (dkp);
(dgx)((dkn), ((bqf)((true), (true))));
(dgy)((u'\u0029'), (true));
}
else{
(dkt) = (cmp_((bf), (new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E'))) == 0);
if(!((dkt) && (cmp_(((dkn)->nf), (new Array_<char16_t>(5, u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0))){
(dgx)((dkn), ((dkt) ? (new Array_<char16_t>(6, u'\u0040', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073')) : (new Array_<char16_t>(10, u'\u006B', u'\u0075', u'\u0069', u'\u006E', u'\u0040', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))));
}
}
(dgy)((u'\u000A'), (true));
((dkn)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bpn<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (dkn));
while(true){
(dkz) = ((bpo)());
if((dkz) == (u'\u0000')){
(ad)((65551LL), ((ddp)()), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073')))));
break;
}
if((dkz) == (u'\u000A')){
continue;
}
(dle) = (avc);
(dlf) = (avd);
(dlg) = (new um());
((dlg)->azq) = (false);
((dlg)->azr) = (false);
((dlg)->azm) = (nullptr);
if((dkz) == (u'\u002B')){
((dlg)->azq) = (true);
}
else{
(ave) = (dkz);
}
(dkz) = ((bpo)());
if((dkz) == (u'\u002A')){
((dlg)->azr) = (true);
}
else{
(ave) = (dkz);
}
(dln) = ((bqf)((true), (false)));
(dlo) = (((((dkn)->ng)->lw) == (1LL)) ? ((new Array_<char16_t>(1, u'\u0040'))->Cat((dkn)->nf)) : ((dkn)->nf));
if(cmp_((dln), (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
((dlg)->azl) = ((bqk)((dlo), ((dlg)->azr)));
}
else if(cmp_((dln), (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0){
if((dlg)->azr){
(ad)((65552LL), ((bpm)((bf), (dle), (dlf))), (new Array_<Array_<char16_t>*>(1, (dln))));
}
((dlg)->azl) = ((bqm)((5LL), (dlo)));
}
else{
if((dlg)->azq){
(ad)((65553LL), ((bpm)((bf), (dle), (dlf))), (new Array_<Array_<char16_t>*>(1, (dln))));
}
if((dlg)->azr){
(ad)((65552LL), ((bpm)((bf), (dle), (dlf))), (new Array_<Array_<char16_t>*>(1, (dln))));
}
dma = dln;
if(cmp_(dma, (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064'))) == 0){
(dmc) = ((bqf)((true), (false)));
if(cmp_((dmc), (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) != 0){
(ad)((65554LL), ((bpm)((bf), (dle), (dlf))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073')), (dmc))));
}
(dmf) = (new fx());
(bpl)((dmf), (0LL), ((bpm)((bf), (dle), (dlf))), (nullptr), (false));
(dgy)((u'\u000A'), (true));
break;
}
else if(cmp_(dma, (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074'))) == 0){
((dlg)->azl) = ((bqo)());
}
else if(cmp_(dma, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073'))) == 0){
((dlg)->azl) = ((bqr)());
}
else if(cmp_(dma, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0){
((dlg)->azl) = ((bqv)());
}
else{(ad)((65555LL), ((bpm)((bf), (dle), (dlf))), (new Array_<Array_<char16_t>*>(1, (dln))));
(bra)(((brb)()));
continue;
}
}
uh<List_<um*>*, um*>(((dkn)->bag), (new Array_<int64_t>(1, (0LL))), (dlg));
}
brh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return dkn;
}
// parseEnum
static bqy* bqx(){
bqy* dmk = nullptr; // ast
char16_t dmp = 0; // c
Array_<char16_t>* dmu = nullptr; // id
Array_<char16_t>* dmx = nullptr; // id2
gd* dnc = nullptr; // item
bvp* dnh = nullptr; // expr
(dmk) = (new bqy());
(bpl)((dmk), (6LL), ((ddp)()), ((bqf)((true), (false))), (true));
((dmk)->dml) = (new List_<gd*>());
(dgy)((u'\u000A'), (true));
((dmk)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bpn<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (dmk));
while(true){
(dmp) = ((bpo)());
if((dmp) == (u'\u0000')){
(ad)((65551LL), ((ddp)()), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D')))));
break;
}
if((dmp) == (u'\u000A')){
continue;
}
(ave) = (dmp);
(dmu) = ((bqf)((true), (false)));
if(cmp_((dmu), (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064'))) == 0){
(dmx) = ((bqf)((true), (false)));
if(cmp_((dmx), (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) != 0){
(ad)((65554LL), ((ddp)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D')), (dmx))));
}
(dgy)((u'\u000A'), (true));
break;
}
(dmp) = ((bpo)());
if((dmp) == (u'\u003A')){
(dgy)((u'\u003A'), (false));
(dnc) = ((dnd)());
if(eqAddr_((dnc), (nullptr))){
(bra)(((brb)()));
continue;
}
(dmp) = ((bpo)());
}
else{
(dnh) = (new bvp());
(dni)((dnh), (67585LL), ((dmk)->ne));
((dnh)->pf) = (nullptr);
((dnh)->bvr) = (0x0000000000000000ULL);
(dnc) = (dnh);
}
((dnc)->nf) = (dmu);
if((dmp) != (u'\u000A')){
(dgt)((u'\u000A'), (dmp));
}
uh<List_<gd*>*, gd*>(((dmk)->dml), (new Array_<int64_t>(1, (0LL))), (dnc));
(dhc)((dnc), (true));
}
brh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return dmk;
}
// _dtor
static void dnl(bqy* dnm){
((dnm)->dml) = (nullptr);
((dnm)->ne) = (nullptr);
((dnm)->nf) = (nullptr);
((dnm)->ng) = (nullptr);
((dnm)->nh) = (nullptr);
((dnm)->ni) = (nullptr);
((dnm)->nj) = (nullptr);
((dnm)->nk) = (nullptr);
}
// _copy
static bqy* dnn(bqy* dno){
bqy* dnp = nullptr;
(dnp) = (new bqy());
((dnp)->dml) = (copy_((dno)->dml));
((dnp)->ne) = (copy_((dno)->ne));
((dnp)->nf) = (copy_((dno)->nf));
((dnp)->ng) = (copy_((dno)->ng));
((dnp)->nh) = (copy_((dno)->nh));
((dnp)->ni) = (copy_((dno)->ni));
((dnp)->nj) = (copy_((dno)->nj));
((dnp)->nk) = (copy_((dno)->nk));
((dnp)->no) = ((dno)->no);
((dnp)->lw) = ((dno)->lw);
return as_<bqy>(classTable_, (dnp), 48);
}
// _toBin
static Array_<uint8_t>* dnq(bqy* dnr){
Array_<uint8_t>* dns = nullptr;
(dns) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dns) = ((dns)->Cat(toBin_((dnr)->dml)));
(dns) = ((dns)->Cat(toBin_((dnr)->ne)));
(dns) = ((dns)->Cat(toBin_((dnr)->nf)));
(dns) = ((dns)->Cat(toBin_((dnr)->ng)));
(dns) = ((dns)->Cat(toBin_((dnr)->nh)));
(dns) = ((dns)->Cat(toBin_((dnr)->ni)));
(dns) = ((dns)->Cat(toBin_((dnr)->nj)));
(dns) = ((dns)->Cat(toBin_((dnr)->nk)));
(dns) = ((dns)->Cat(toBin_((dnr)->no)));
(dns) = ((dns)->Cat(toBin_((dnr)->lw)));
return dns;
}
// _fromBin
static bqy* dod(bqy* doe, Array_<uint8_t>* dof, int64_t* dog){
bqy* doh = nullptr;
(doh) = (new bqy());
((doh)->dml) = (fromBin_<List_<gd*>*>((dof), (*dog)));
((doh)->ne) = (fromBin_<ga*>((dof), (*dog)));
((doh)->nf) = (fromBin_<Array_<char16_t>*>((dof), (*dog)));
((doh)->ng) = (fromBin_<fx*>((dof), (*dog)));
((doh)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dof), (*dog)));
((doh)->ni) = (fromBin_<Array_<char16_t>*>((dof), (*dog)));
((doh)->nj) = (fromBin_<fx*>((dof), (*dog)));
((doh)->nk) = (fromBin_<fy*>((dof), (*dog)));
((doh)->no) = (fromBin_<bool>((dof), (*dog)));
((doh)->lw) = (fromBin_<int64_t>((dof), (*dog)));
return doh;
}
// readUntilRet
static void bra(char16_t doi /*c*/){
while(((doi) != (u'\u000A')) && ((doi) != (u'\u0000'))){
(doi) = ((brb)());
}
(ave) = (doi);
}
// read
static char16_t brb(){
char16_t dok = 0; // c
char16_t dom = 0;
(dok) = ((dde)());
switch(dok){
case u'\u007B':
(doo)();
return u'\u0020';
break;
case u'\u0009':
return u'\u0020';
break;
}
return dok;
}
// _getStack
template<typename T_, typename R_> static R_ brh(T_ doq /*me_*/, Array_<int64_t>* dor /*type*/){
R_ r_ = doq->B.top();
doq->B.pop();
return r_;
}
// initAst
static void btr(fx* dos /*ast*/, int64_t dot /*typeId*/, ga* dou /*pos*/){
if(!(!is_(classTable_, (dos), 14))){
throw 0xE9170000U;
}
(dov)((dos), (dot), (dou));
}
// _dtor
static void dow(btv* dox){
((dox)->buf) = (nullptr);
((dox)->ne) = (nullptr);
((dox)->nf) = (nullptr);
((dox)->ng) = (nullptr);
((dox)->nh) = (nullptr);
((dox)->ni) = (nullptr);
((dox)->nj) = (nullptr);
((dox)->nk) = (nullptr);
}
// _copy
static btv* doy(btv* doz){
btv* dpa = nullptr;
(dpa) = (new btv());
((dpa)->buf) = (copy_((doz)->buf));
((dpa)->ne) = (copy_((doz)->ne));
((dpa)->nf) = (copy_((doz)->nf));
((dpa)->ng) = (copy_((doz)->ng));
((dpa)->nh) = (copy_((doz)->nh));
((dpa)->ni) = (copy_((doz)->ni));
((dpa)->nj) = (copy_((doz)->nj));
((dpa)->nk) = (copy_((doz)->nk));
((dpa)->no) = ((doz)->no);
((dpa)->lw) = ((doz)->lw);
return as_<btv>(classTable_, (dpa), 50);
}
// _toBin
static Array_<uint8_t>* dpb(btv* dpc){
Array_<uint8_t>* dpd = nullptr;
(dpd) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dpd) = ((dpd)->Cat(toBin_((dpc)->buf)));
(dpd) = ((dpd)->Cat(toBin_((dpc)->ne)));
(dpd) = ((dpd)->Cat(toBin_((dpc)->nf)));
(dpd) = ((dpd)->Cat(toBin_((dpc)->ng)));
(dpd) = ((dpd)->Cat(toBin_((dpc)->nh)));
(dpd) = ((dpd)->Cat(toBin_((dpc)->ni)));
(dpd) = ((dpd)->Cat(toBin_((dpc)->nj)));
(dpd) = ((dpd)->Cat(toBin_((dpc)->nk)));
(dpd) = ((dpd)->Cat(toBin_((dpc)->no)));
(dpd) = ((dpd)->Cat(toBin_((dpc)->lw)));
return dpd;
}
// _fromBin
static btv* dpo(btv* dpp, Array_<uint8_t>* dpq, int64_t* dpr){
btv* dps = nullptr;
(dps) = (new btv());
((dps)->buf) = (fromBin_<gb*>((dpq), (*dpr)));
((dps)->ne) = (fromBin_<ga*>((dpq), (*dpr)));
((dps)->nf) = (fromBin_<Array_<char16_t>*>((dpq), (*dpr)));
((dps)->ng) = (fromBin_<fx*>((dpq), (*dpr)));
((dps)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dpq), (*dpr)));
((dps)->ni) = (fromBin_<Array_<char16_t>*>((dpq), (*dpr)));
((dps)->nj) = (fromBin_<fx*>((dpq), (*dpr)));
((dps)->nk) = (fromBin_<fy*>((dpq), (*dpr)));
((dps)->no) = (fromBin_<bool>((dpq), (*dpr)));
((dps)->lw) = (fromBin_<int64_t>((dpq), (*dpr)));
return dps;
}
// _dtor
static void dpt(btw* dpu){
((dpu)->bui) = (nullptr);
((dpu)->buf) = (nullptr);
((dpu)->ne) = (nullptr);
((dpu)->nf) = (nullptr);
((dpu)->ng) = (nullptr);
((dpu)->nh) = (nullptr);
((dpu)->ni) = (nullptr);
((dpu)->nj) = (nullptr);
((dpu)->nk) = (nullptr);
}
// _copy
static btw* dpv(btw* dpw){
btw* dpx = nullptr;
(dpx) = (new btw());
((dpx)->bui) = (copy_((dpw)->bui));
((dpx)->buf) = (copy_((dpw)->buf));
((dpx)->ne) = (copy_((dpw)->ne));
((dpx)->nf) = (copy_((dpw)->nf));
((dpx)->ng) = (copy_((dpw)->ng));
((dpx)->nh) = (copy_((dpw)->nh));
((dpx)->ni) = (copy_((dpw)->ni));
((dpx)->nj) = (copy_((dpw)->nj));
((dpx)->nk) = (copy_((dpw)->nk));
((dpx)->no) = ((dpw)->no);
((dpx)->lw) = ((dpw)->lw);
return as_<btw>(classTable_, (dpx), 54);
}
// _toBin
static Array_<uint8_t>* dpy(btw* dpz){
Array_<uint8_t>* dqa = nullptr;
(dqa) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dqa) = ((dqa)->Cat(toBin_((dpz)->bui)));
(dqa) = ((dqa)->Cat(toBin_((dpz)->buf)));
(dqa) = ((dqa)->Cat(toBin_((dpz)->ne)));
(dqa) = ((dqa)->Cat(toBin_((dpz)->nf)));
(dqa) = ((dqa)->Cat(toBin_((dpz)->ng)));
(dqa) = ((dqa)->Cat(toBin_((dpz)->nh)));
(dqa) = ((dqa)->Cat(toBin_((dpz)->ni)));
(dqa) = ((dqa)->Cat(toBin_((dpz)->nj)));
(dqa) = ((dqa)->Cat(toBin_((dpz)->nk)));
(dqa) = ((dqa)->Cat(toBin_((dpz)->no)));
(dqa) = ((dqa)->Cat(toBin_((dpz)->lw)));
return dqa;
}
// _fromBin
static btw* dqm(btw* dqn, Array_<uint8_t>* dqo, int64_t* dqp){
btw* dqq = nullptr;
(dqq) = (new btw());
((dqq)->bui) = (fromBin_<List_<ge*>*>((dqo), (*dqp)));
((dqq)->buf) = (fromBin_<gb*>((dqo), (*dqp)));
((dqq)->ne) = (fromBin_<ga*>((dqo), (*dqp)));
((dqq)->nf) = (fromBin_<Array_<char16_t>*>((dqo), (*dqp)));
((dqq)->ng) = (fromBin_<fx*>((dqo), (*dqp)));
((dqq)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dqo), (*dqp)));
((dqq)->ni) = (fromBin_<Array_<char16_t>*>((dqo), (*dqp)));
((dqq)->nj) = (fromBin_<fx*>((dqo), (*dqp)));
((dqq)->nk) = (fromBin_<fy*>((dqo), (*dqp)));
((dqq)->no) = (fromBin_<bool>((dqo), (*dqp)));
((dqq)->lw) = (fromBin_<int64_t>((dqo), (*dqp)));
return dqq;
}
// _dtor
static void dqr(bty* dqs){
((dqs)->bvu) = (nullptr);
((dqs)->bvz) = (nullptr);
}
// _copy
static bty* dqt(bty* dqu){
bty* dqv = nullptr;
(dqv) = (new bty());
((dqv)->bvu) = (copy_((dqu)->bvu));
((dqv)->bvz) = (copy_((dqu)->bvz));
return as_<bty>(classTable_, (dqv), 58);
}
// _toBin
static Array_<uint8_t>* dqw(bty* dqx){
Array_<uint8_t>* dqy = nullptr;
(dqy) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dqy) = ((dqy)->Cat(toBin_((dqx)->bvu)));
(dqy) = ((dqy)->Cat(toBin_((dqx)->bvz)));
return dqy;
}
// _fromBin
static bty* drb(bty* drc, Array_<uint8_t>* drd, int64_t* dre){
bty* drf = nullptr;
(drf) = (new bty());
((drf)->bvu) = (fromBin_<gd*>((drd), (*dre)));
((drf)->bvz) = (fromBin_<gd*>((drd), (*dre)));
return drf;
}
// _dtor
static void drg(btx* drh){
((drh)->bvh) = (nullptr);
((drh)->bvk) = (nullptr);
((drh)->ne) = (nullptr);
((drh)->nf) = (nullptr);
((drh)->ng) = (nullptr);
((drh)->nh) = (nullptr);
((drh)->ni) = (nullptr);
((drh)->nj) = (nullptr);
((drh)->nk) = (nullptr);
}
// _copy
static btx* dri(btx* drj){
btx* drk = nullptr;
(drk) = (new btx());
((drk)->bvh) = (copy_((drj)->bvh));
((drk)->bvk) = (copy_((drj)->bvk));
((drk)->ne) = (copy_((drj)->ne));
((drk)->nf) = (copy_((drj)->nf));
((drk)->ng) = (copy_((drj)->ng));
((drk)->nh) = (copy_((drj)->nh));
((drk)->ni) = (copy_((drj)->ni));
((drk)->nj) = (copy_((drj)->nj));
((drk)->nk) = (copy_((drj)->nk));
((drk)->no) = ((drj)->no);
((drk)->lw) = ((drj)->lw);
return as_<btx>(classTable_, (drk), 56);
}
// _toBin
static Array_<uint8_t>* drl(btx* drm){
Array_<uint8_t>* drn = nullptr;
(drn) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(drn) = ((drn)->Cat(toBin_((drm)->bvh)));
(drn) = ((drn)->Cat(toBin_((drm)->bvk)));
(drn) = ((drn)->Cat(toBin_((drm)->ne)));
(drn) = ((drn)->Cat(toBin_((drm)->nf)));
(drn) = ((drn)->Cat(toBin_((drm)->ng)));
(drn) = ((drn)->Cat(toBin_((drm)->nh)));
(drn) = ((drn)->Cat(toBin_((drm)->ni)));
(drn) = ((drn)->Cat(toBin_((drm)->nj)));
(drn) = ((drn)->Cat(toBin_((drm)->nk)));
(drn) = ((drn)->Cat(toBin_((drm)->no)));
(drn) = ((drn)->Cat(toBin_((drm)->lw)));
return drn;
}
// _fromBin
static btx* drz(btx* dsa, Array_<uint8_t>* dsb, int64_t* dsc){
btx* dsd = nullptr;
(dsd) = (new btx());
((dsd)->bvh) = (fromBin_<List_<bty*>*>((dsb), (*dsc)));
((dsd)->bvk) = (fromBin_<btw*>((dsb), (*dsc)));
((dsd)->ne) = (fromBin_<ga*>((dsb), (*dsc)));
((dsd)->nf) = (fromBin_<Array_<char16_t>*>((dsb), (*dsc)));
((dsd)->ng) = (fromBin_<fx*>((dsb), (*dsc)));
((dsd)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dsb), (*dsc)));
((dsd)->ni) = (fromBin_<Array_<char16_t>*>((dsb), (*dsc)));
((dsd)->nj) = (fromBin_<fx*>((dsb), (*dsc)));
((dsd)->nk) = (fromBin_<fy*>((dsb), (*dsc)));
((dsd)->no) = (fromBin_<bool>((dsb), (*dsc)));
((dsd)->lw) = (fromBin_<int64_t>((dsb), (*dsc)));
return dsd;
}
// _dtor
static void dse(btu* dsf){
((dsf)->buj) = (nullptr);
((dsf)->buk) = (nullptr);
((dsf)->bun) = (nullptr);
((dsf)->buf) = (nullptr);
((dsf)->ne) = (nullptr);
((dsf)->nf) = (nullptr);
((dsf)->ng) = (nullptr);
((dsf)->nh) = (nullptr);
((dsf)->ni) = (nullptr);
((dsf)->nj) = (nullptr);
((dsf)->nk) = (nullptr);
}
// _copy
static btu* dsg(btu* dsh){
btu* dsi = nullptr;
(dsi) = (new btu());
((dsi)->buj) = (copy_((dsh)->buj));
((dsi)->buk) = (copy_((dsh)->buk));
((dsi)->bun) = (copy_((dsh)->bun));
((dsi)->buf) = (copy_((dsh)->buf));
((dsi)->ne) = (copy_((dsh)->ne));
((dsi)->nf) = (copy_((dsh)->nf));
((dsi)->ng) = (copy_((dsh)->ng));
((dsi)->nh) = (copy_((dsh)->nh));
((dsi)->ni) = (copy_((dsh)->ni));
((dsi)->nj) = (copy_((dsh)->nj));
((dsi)->nk) = (copy_((dsh)->nk));
((dsi)->no) = ((dsh)->no);
((dsi)->lw) = ((dsh)->lw);
return as_<btu>(classTable_, (dsi), 52);
}
// _toBin
static Array_<uint8_t>* dsj(btu* dsk){
Array_<uint8_t>* dsl = nullptr;
(dsl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->buj)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->buk)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->bun)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->buf)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->ne)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->nf)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->ng)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->nh)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->ni)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->nj)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->nk)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->no)));
(dsl) = ((dsl)->Cat(toBin_((dsk)->lw)));
return dsl;
}
// _fromBin
static btu* dsz(btu* dta, Array_<uint8_t>* dtb, int64_t* dtc){
btu* dtd = nullptr;
(dtd) = (new btu());
((dtd)->buj) = (fromBin_<btw*>((dtb), (*dtc)));
((dtd)->buk) = (fromBin_<List_<btx*>*>((dtb), (*dtc)));
((dtd)->bun) = (fromBin_<btw*>((dtb), (*dtc)));
((dtd)->buf) = (fromBin_<gb*>((dtb), (*dtc)));
((dtd)->ne) = (fromBin_<ga*>((dtb), (*dtc)));
((dtd)->nf) = (fromBin_<Array_<char16_t>*>((dtb), (*dtc)));
((dtd)->ng) = (fromBin_<fx*>((dtb), (*dtc)));
((dtd)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dtb), (*dtc)));
((dtd)->ni) = (fromBin_<Array_<char16_t>*>((dtb), (*dtc)));
((dtd)->nj) = (fromBin_<fx*>((dtb), (*dtc)));
((dtd)->nk) = (fromBin_<fy*>((dtb), (*dtc)));
((dtd)->no) = (fromBin_<bool>((dtb), (*dtc)));
((dtd)->lw) = (fromBin_<int64_t>((dtb), (*dtc)));
return dtd;
}
// _dtor
static void dte(bud* dtf){
((dtf)->ne) = (nullptr);
((dtf)->nf) = (nullptr);
((dtf)->ng) = (nullptr);
((dtf)->nh) = (nullptr);
((dtf)->ni) = (nullptr);
((dtf)->nj) = (nullptr);
((dtf)->nk) = (nullptr);
}
// _copy
static bud* dtg(bud* dth){
bud* dti = nullptr;
(dti) = (new bud());
((dti)->bue) = ((dth)->bue);
((dti)->ne) = (copy_((dth)->ne));
((dti)->nf) = (copy_((dth)->nf));
((dti)->ng) = (copy_((dth)->ng));
((dti)->nh) = (copy_((dth)->nh));
((dti)->ni) = (copy_((dth)->ni));
((dti)->nj) = (copy_((dth)->nj));
((dti)->nk) = (copy_((dth)->nk));
((dti)->no) = ((dth)->no);
((dti)->lw) = ((dth)->lw);
return as_<bud>(classTable_, (dti), 60);
}
// _toBin
static Array_<uint8_t>* dtj(bud* dtk){
Array_<uint8_t>* dtl = nullptr;
(dtl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dtl) = ((dtl)->Cat(toBin_((dtk)->bue)));
(dtl) = ((dtl)->Cat(toBin_((dtk)->ne)));
(dtl) = ((dtl)->Cat(toBin_((dtk)->nf)));
(dtl) = ((dtl)->Cat(toBin_((dtk)->ng)));
(dtl) = ((dtl)->Cat(toBin_((dtk)->nh)));
(dtl) = ((dtl)->Cat(toBin_((dtk)->ni)));
(dtl) = ((dtl)->Cat(toBin_((dtk)->nj)));
(dtl) = ((dtl)->Cat(toBin_((dtk)->nk)));
(dtl) = ((dtl)->Cat(toBin_((dtk)->no)));
(dtl) = ((dtl)->Cat(toBin_((dtk)->lw)));
return dtl;
}
// _fromBin
static bud* dtw(bud* dtx, Array_<uint8_t>* dty, int64_t* dtz){
bud* dua = nullptr;
(dua) = (new bud());
((dua)->bue) = (fromBin_<int64_t>((dty), (*dtz)));
((dua)->ne) = (fromBin_<ga*>((dty), (*dtz)));
((dua)->nf) = (fromBin_<Array_<char16_t>*>((dty), (*dtz)));
((dua)->ng) = (fromBin_<fx*>((dty), (*dtz)));
((dua)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dty), (*dtz)));
((dua)->ni) = (fromBin_<Array_<char16_t>*>((dty), (*dtz)));
((dua)->nj) = (fromBin_<fx*>((dty), (*dtz)));
((dua)->nk) = (fromBin_<fy*>((dty), (*dtz)));
((dua)->no) = (fromBin_<bool>((dty), (*dtz)));
((dua)->lw) = (fromBin_<int64_t>((dty), (*dtz)));
return dua;
}
// searchStdItem
static fx* buq(Array_<char16_t>* dub /*src*/, Array_<char16_t>* duc /*identifier*/, bool dud /*makeExprRef*/){
fx* due = nullptr; // ast
bool duf = false;
fx* dui = nullptr; // ast2
bool duj = false;
gd* duo = nullptr; // expr
(due) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), (dub), (&duf)));
if(eqAddr_((due), (nullptr))){
(ad)((6LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (dub))));
return nullptr;
}
(dui) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((due)->nh), (new Array_<int64_t>(1, (0LL))), (duc), (&duj)));
if(eqAddr_((due), (nullptr))){
(ad)((7LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (dub))));
return nullptr;
}
if(dud){
(duo) = (new gd());
(buz)((duo), (2062LL), ((bpm)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (1LL), (1LL))));
((duo)->nj) = (dui);
return (dup)((duo));
}
return dui;
}
// _dtor
static void duq(buu* dur){
((dur)->bve) = (nullptr);
((dur)->ne) = (nullptr);
((dur)->nf) = (nullptr);
((dur)->ng) = (nullptr);
((dur)->nh) = (nullptr);
((dur)->ni) = (nullptr);
((dur)->nj) = (nullptr);
((dur)->nk) = (nullptr);
}
// _copy
static buu* dus(buu* dut){
buu* duu = nullptr;
(duu) = (new buu());
((duu)->bve) = (copy_((dut)->bve));
((duu)->ne) = (copy_((dut)->ne));
((duu)->nf) = (copy_((dut)->nf));
((duu)->ng) = (copy_((dut)->ng));
((duu)->nh) = (copy_((dut)->nh));
((duu)->ni) = (copy_((dut)->ni));
((duu)->nj) = (copy_((dut)->nj));
((duu)->nk) = (copy_((dut)->nk));
((duu)->no) = ((dut)->no);
((duu)->lw) = ((dut)->lw);
return as_<buu>(classTable_, (duu), 62);
}
// _toBin
static Array_<uint8_t>* duv(buu* duw){
Array_<uint8_t>* dux = nullptr;
(dux) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dux) = ((dux)->Cat(toBin_((duw)->bve)));
(dux) = ((dux)->Cat(toBin_((duw)->ne)));
(dux) = ((dux)->Cat(toBin_((duw)->nf)));
(dux) = ((dux)->Cat(toBin_((duw)->ng)));
(dux) = ((dux)->Cat(toBin_((duw)->nh)));
(dux) = ((dux)->Cat(toBin_((duw)->ni)));
(dux) = ((dux)->Cat(toBin_((duw)->nj)));
(dux) = ((dux)->Cat(toBin_((duw)->nk)));
(dux) = ((dux)->Cat(toBin_((duw)->no)));
(dux) = ((dux)->Cat(toBin_((duw)->lw)));
return dux;
}
// _fromBin
static buu* dvi(buu* dvj, Array_<uint8_t>* dvk, int64_t* dvl){
buu* dvm = nullptr;
(dvm) = (new buu());
((dvm)->bve) = (fromBin_<gd*>((dvk), (*dvl)));
((dvm)->ne) = (fromBin_<ga*>((dvk), (*dvl)));
((dvm)->nf) = (fromBin_<Array_<char16_t>*>((dvk), (*dvl)));
((dvm)->ng) = (fromBin_<fx*>((dvk), (*dvl)));
((dvm)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dvk), (*dvl)));
((dvm)->ni) = (fromBin_<Array_<char16_t>*>((dvk), (*dvl)));
((dvm)->nj) = (fromBin_<fx*>((dvk), (*dvl)));
((dvm)->nk) = (fromBin_<fy*>((dvk), (*dvl)));
((dvm)->no) = (fromBin_<bool>((dvk), (*dvl)));
((dvm)->lw) = (fromBin_<int64_t>((dvk), (*dvl)));
return dvm;
}
// _dtor
static void dvn(buy* dvo){
((dvo)->bwm) = (nullptr);
}
// _copy
static buy* dvp(buy* dvq){
buy* dvr = nullptr;
(dvr) = (new buy());
((dvr)->bwm) = (copy_((dvq)->bwm));
((dvr)->bwi) = ((dvq)->bwi);
((dvr)->bwj) = ((dvq)->bwj);
return as_<buy>(classTable_, (dvr), 66);
}
// _toBin
static Array_<uint8_t>* dvs(buy* dvt){
Array_<uint8_t>* dvu = nullptr;
(dvu) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dvu) = ((dvu)->Cat(toBin_((dvt)->bwm)));
(dvu) = ((dvu)->Cat(toBin_((dvt)->bwi)));
(dvu) = ((dvu)->Cat(toBin_((dvt)->bwj)));
return dvu;
}
// _fromBin
static buy* dvy(buy* dvz, Array_<uint8_t>* dwa, int64_t* dwb){
buy* dwc = nullptr;
(dwc) = (new buy());
((dwc)->bwm) = (fromBin_<gd*>((dwa), (*dwb)));
((dwc)->bwi) = (fromBin_<bool>((dwa), (*dwb)));
((dwc)->bwj) = (fromBin_<bool>((dwa), (*dwb)));
return dwc;
}
// _dtor
static void dwd(bux* dwe){
((dwe)->bvd) = (nullptr);
((dwe)->bva) = (nullptr);
((dwe)->pf) = (nullptr);
((dwe)->ne) = (nullptr);
((dwe)->nf) = (nullptr);
((dwe)->ng) = (nullptr);
((dwe)->nh) = (nullptr);
((dwe)->ni) = (nullptr);
((dwe)->nj) = (nullptr);
((dwe)->nk) = (nullptr);
}
// _copy
static bux* dwf(bux* dwg){
bux* dwh = nullptr;
(dwh) = (new bux());
((dwh)->bvd) = (copy_((dwg)->bvd));
((dwh)->bva) = (copy_((dwg)->bva));
((dwh)->pf) = (copy_((dwg)->pf));
((dwh)->pj) = ((dwg)->pj);
((dwh)->ne) = (copy_((dwg)->ne));
((dwh)->nf) = (copy_((dwg)->nf));
((dwh)->ng) = (copy_((dwg)->ng));
((dwh)->nh) = (copy_((dwg)->nh));
((dwh)->ni) = (copy_((dwg)->ni));
((dwh)->nj) = (copy_((dwg)->nj));
((dwh)->nk) = (copy_((dwg)->nk));
((dwh)->no) = ((dwg)->no);
((dwh)->lw) = ((dwg)->lw);
return as_<bux>(classTable_, (dwh), 64);
}
// _toBin
static Array_<uint8_t>* dwi(bux* dwj){
Array_<uint8_t>* dwk = nullptr;
(dwk) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->bvd)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->bva)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->pf)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->pj)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->ne)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->nf)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->ng)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->nh)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->ni)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->nj)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->nk)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->no)));
(dwk) = ((dwk)->Cat(toBin_((dwj)->lw)));
return dwk;
}
// _fromBin
static bux* dwy(bux* dwz, Array_<uint8_t>* dxa, int64_t* dxb){
bux* dxc = nullptr;
(dxc) = (new bux());
((dxc)->bvd) = (fromBin_<gd*>((dxa), (*dxb)));
((dxc)->bva) = (fromBin_<List_<buy*>*>((dxa), (*dxb)));
((dxc)->pf) = (fromBin_<gc*>((dxa), (*dxb)));
((dxc)->pj) = (fromBin_<int64_t>((dxa), (*dxb)));
((dxc)->ne) = (fromBin_<ga*>((dxa), (*dxb)));
((dxc)->nf) = (fromBin_<Array_<char16_t>*>((dxa), (*dxb)));
((dxc)->ng) = (fromBin_<fx*>((dxa), (*dxb)));
((dxc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dxa), (*dxb)));
((dxc)->ni) = (fromBin_<Array_<char16_t>*>((dxa), (*dxb)));
((dxc)->nj) = (fromBin_<fx*>((dxa), (*dxb)));
((dxc)->nk) = (fromBin_<fy*>((dxa), (*dxb)));
((dxc)->no) = (fromBin_<bool>((dxa), (*dxb)));
((dxc)->lw) = (fromBin_<int64_t>((dxa), (*dxb)));
return dxc;
}
// initAstExpr
static void buz(gd* dxd /*ast*/, int64_t dxe /*typeId*/, ga* dxf /*pos*/){
if(!(is_(classTable_, (dxd), 14))){
throw 0xE9170000U;
}
(dov)((dxd), (dxe), (dxf));
((dxd)->pf) = (nullptr);
((dxd)->pj) = (0LL);
}
// _dtor
static void dxg(bvq* dxh){
((dxh)->pf) = (nullptr);
((dxh)->ne) = (nullptr);
((dxh)->nf) = (nullptr);
((dxh)->ng) = (nullptr);
((dxh)->nh) = (nullptr);
((dxh)->ni) = (nullptr);
((dxh)->nj) = (nullptr);
((dxh)->nk) = (nullptr);
}
// _copy
static bvq* dxi(bvq* dxj){
bvq* dxk = nullptr;
(dxk) = (new bvq());
((dxk)->pf) = (copy_((dxj)->pf));
((dxk)->pj) = ((dxj)->pj);
((dxk)->ne) = (copy_((dxj)->ne));
((dxk)->nf) = (copy_((dxj)->nf));
((dxk)->ng) = (copy_((dxj)->ng));
((dxk)->nh) = (copy_((dxj)->nh));
((dxk)->ni) = (copy_((dxj)->ni));
((dxk)->nj) = (copy_((dxj)->nj));
((dxk)->nk) = (copy_((dxj)->nk));
((dxk)->no) = ((dxj)->no);
((dxk)->lw) = ((dxj)->lw);
return as_<bvq>(classTable_, (dxk), 68);
}
// _toBin
static Array_<uint8_t>* dxl(bvq* dxm){
Array_<uint8_t>* dxn = nullptr;
(dxn) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dxn) = ((dxn)->Cat(toBin_((dxm)->pf)));
(dxn) = ((dxn)->Cat(toBin_((dxm)->pj)));
(dxn) = ((dxn)->Cat(toBin_((dxm)->ne)));
(dxn) = ((dxn)->Cat(toBin_((dxm)->nf)));
(dxn) = ((dxn)->Cat(toBin_((dxm)->ng)));
(dxn) = ((dxn)->Cat(toBin_((dxm)->nh)));
(dxn) = ((dxn)->Cat(toBin_((dxm)->ni)));
(dxn) = ((dxn)->Cat(toBin_((dxm)->nj)));
(dxn) = ((dxn)->Cat(toBin_((dxm)->nk)));
(dxn) = ((dxn)->Cat(toBin_((dxm)->no)));
(dxn) = ((dxn)->Cat(toBin_((dxm)->lw)));
return dxn;
}
// _fromBin
static bvq* dxz(bvq* dya, Array_<uint8_t>* dyb, int64_t* dyc){
bvq* dyd = nullptr;
(dyd) = (new bvq());
((dyd)->pf) = (fromBin_<gc*>((dyb), (*dyc)));
((dyd)->pj) = (fromBin_<int64_t>((dyb), (*dyc)));
((dyd)->ne) = (fromBin_<ga*>((dyb), (*dyc)));
((dyd)->nf) = (fromBin_<Array_<char16_t>*>((dyb), (*dyc)));
((dyd)->ng) = (fromBin_<fx*>((dyb), (*dyc)));
((dyd)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dyb), (*dyc)));
((dyd)->ni) = (fromBin_<Array_<char16_t>*>((dyb), (*dyc)));
((dyd)->nj) = (fromBin_<fx*>((dyb), (*dyc)));
((dyd)->nk) = (fromBin_<fy*>((dyb), (*dyc)));
((dyd)->no) = (fromBin_<bool>((dyb), (*dyc)));
((dyd)->lw) = (fromBin_<int64_t>((dyb), (*dyc)));
return dyd;
}
// _dtor
static void dye(bvp* dyf){
((dyf)->pf) = (nullptr);
((dyf)->ne) = (nullptr);
((dyf)->nf) = (nullptr);
((dyf)->ng) = (nullptr);
((dyf)->nh) = (nullptr);
((dyf)->ni) = (nullptr);
((dyf)->nj) = (nullptr);
((dyf)->nk) = (nullptr);
}
// _copy
static bvp* dyg(bvp* dyh){
bvp* dyi = nullptr;
(dyi) = (new bvp());
((dyi)->bvr) = ((dyh)->bvr);
((dyi)->pf) = (copy_((dyh)->pf));
((dyi)->pj) = ((dyh)->pj);
((dyi)->ne) = (copy_((dyh)->ne));
((dyi)->nf) = (copy_((dyh)->nf));
((dyi)->ng) = (copy_((dyh)->ng));
((dyi)->nh) = (copy_((dyh)->nh));
((dyi)->ni) = (copy_((dyh)->ni));
((dyi)->nj) = (copy_((dyh)->nj));
((dyi)->nk) = (copy_((dyh)->nk));
((dyi)->no) = ((dyh)->no);
((dyi)->lw) = ((dyh)->lw);
return as_<bvp>(classTable_, (dyi), 70);
}
// _toBin
static Array_<uint8_t>* dyj(bvp* dyk){
Array_<uint8_t>* dyl = nullptr;
(dyl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dyl) = ((dyl)->Cat(toBin_((dyk)->bvr)));
(dyl) = ((dyl)->Cat(toBin_((dyk)->pf)));
(dyl) = ((dyl)->Cat(toBin_((dyk)->pj)));
(dyl) = ((dyl)->Cat(toBin_((dyk)->ne)));
(dyl) = ((dyl)->Cat(toBin_((dyk)->nf)));
(dyl) = ((dyl)->Cat(toBin_((dyk)->ng)));
(dyl) = ((dyl)->Cat(toBin_((dyk)->nh)));
(dyl) = ((dyl)->Cat(toBin_((dyk)->ni)));
(dyl) = ((dyl)->Cat(toBin_((dyk)->nj)));
(dyl) = ((dyl)->Cat(toBin_((dyk)->nk)));
(dyl) = ((dyl)->Cat(toBin_((dyk)->no)));
(dyl) = ((dyl)->Cat(toBin_((dyk)->lw)));
return dyl;
}
// _fromBin
static bvp* dyy(bvp* dyz, Array_<uint8_t>* dza, int64_t* dzb){
bvp* dzc = nullptr;
(dzc) = (new bvp());
((dzc)->bvr) = (fromBin_<uint64_t>((dza), (*dzb)));
((dzc)->pf) = (fromBin_<gc*>((dza), (*dzb)));
((dzc)->pj) = (fromBin_<int64_t>((dza), (*dzb)));
((dzc)->ne) = (fromBin_<ga*>((dza), (*dzb)));
((dzc)->nf) = (fromBin_<Array_<char16_t>*>((dza), (*dzb)));
((dzc)->ng) = (fromBin_<fx*>((dza), (*dzb)));
((dzc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dza), (*dzb)));
((dzc)->ni) = (fromBin_<Array_<char16_t>*>((dza), (*dzb)));
((dzc)->nj) = (fromBin_<fx*>((dza), (*dzb)));
((dzc)->nk) = (fromBin_<fy*>((dza), (*dzb)));
((dzc)->no) = (fromBin_<bool>((dza), (*dzb)));
((dzc)->lw) = (fromBin_<int64_t>((dza), (*dzb)));
return dzc;
}
// rebuildArg
static void bxb(gb* dzd /*ast*/){
if(!eqAddr_(((dzd)->nk), (nullptr))){
return;
}
((dzd)->nk) = (dzd);
((dzd)->qf) = ((bxe)(((dzd)->qf), (nullptr)));
if(!eqAddr_(((dzd)->qg), (nullptr))){
((dzd)->qg) = ((bxx)(((dzd)->qg), (false)));
if(eqAddr_(((dzd)->qg), (nullptr))){
return;
}
if((((dzd)->qk) == (1LL)) && ((aye<int64_t>((((dzd)->qg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL))){
(ad)((131091LL), ((dzd)->ne), (new Array_<Array_<char16_t>*>(1, ((dzd)->nf))));
}
if((((dzd)->qk) == (4LL)) && ((aye<int64_t>((((dzd)->qg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL))){
(ad)((131092LL), ((dzd)->ne), (new Array_<Array_<char16_t>*>(1, ((dzd)->nf))));
}
if(!((dzp)((((dzd)->qg)->pf), ((dzd)->qf), (false)))){
(ad)((131093LL), ((dzd)->ne), (new Array_<Array_<char16_t>*>(1, ((dzd)->nf))));
}
else if(((((dzd)->qg)->pf)->lw) == (1028LL)){
((dzd)->qg) = ((dzs)(((dzd)->qg), ((dzd)->qf)));
}
}
}
// rebuildType
static gc* bxe(gc* dzt /*ast*/, bqs* dzu /*parentAlias*/){
int64_t dzx = 0; // type
int64_t dzz = 0;
fx* eab = nullptr; // refItem
int64_t eaf = 0;
caq* eap = nullptr; // ast2
List_<car*>* eaq = nullptr; // items
car* eas = nullptr; // arg
cby* eax = nullptr; // ast2
if(!eqAddr_(((dzt)->nk), (nullptr))){
return as_<gc>(classTable_, ((dzt)->nk), 12);
}
((dzt)->nk) = (dzt);
(dzx) = ((dzt)->lw);
switch(dzx){
case 66565LL:
(eab) = ((dzt)->nj);
if(eqAddr_((eab), (nullptr))){
return nullptr;
}
switch((eab)->lw){
case 5LL:
(eah)((as_<ul>(classTable_, (eab), 22)));
break;
case 6LL:
(eaj)((as_<bqy>(classTable_, (eab), 48)));
break;
case 4LL:
(eal)((as_<bqs>(classTable_, (eab), 46)), (dzu));
((dzt)->nk) = ((as_<bqs>(classTable_, (eab), 46))->djp);
(dzt) = ((as_<bqs>(classTable_, (eab), 46))->djp);
break;
default:
(ad)((131111LL), ((dzt)->ne), (nullptr));
return nullptr;
break;
}
break;
case 66561LL:
((as_<cai>(classTable_, (dzt), 76))->cak) = ((bxe)(((as_<cai>(classTable_, (dzt), 76))->cak), (dzu)));
break;
case 66562LL:
(eap) = (as_<caq>(classTable_, (dzt), 80));
(eaq) = ((eap)->cay);
awe<List_<car*>*>((eaq), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<car*>*>((eaq), (new Array_<int64_t>(1, (0LL)))))){
(eas) = (awi<List_<car*>*, car*>((eaq), (new Array_<int64_t>(1, (0LL)))));
((eas)->cbg) = ((bxe)(((eas)->cbg), (dzu)));
ays<List_<car*>*>((eaq), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((eap)->cat), (nullptr))){
((eap)->cat) = ((bxe)(((eap)->cat), (dzu)));
}
break;
case 66563LL:
((as_<cbn>(classTable_, (dzt), 84))->cbs) = ((bxe)(((as_<cbn>(classTable_, (dzt), 84))->cbs), (dzu)));
break;
case 66564LL:
(eax) = (as_<cby>(classTable_, (dzt), 86));
((eax)->cbz) = ((bxe)(((eax)->cbz), (dzu)));
((eax)->cca) = ((bxe)(((eax)->cca), (dzu)));
break;
default:
if(!(((((dzx) == (0LL)) || ((dzx) == (1025LL))) || ((dzx) == (1026LL))) || ((dzx) == (1027LL)))){
throw 0xE9170000U;
}
break;
}
return dzt;
}
// refreshStats
static List_<ge*>* bxf(List_<ge*>* eaz /*stats*/, gc* eba /*retType*/, fw* ebb /*parentFunc*/){
List_<ge*>* ebc = nullptr; // stats2
ge* ebe = nullptr; // stat
(ebc) = (new List_<ge*>());
awe<List_<ge*>*>((eaz), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<ge*>*>((eaz), (new Array_<int64_t>(1, (0LL)))))){
(ebe) = ((byh)((awi<List_<ge*>*, ge*>((eaz), (new Array_<int64_t>(1, (0LL))))), (eba), (ebb)));
if(!eqAddr_((ebe), (nullptr))){
uh<List_<ge*>*, ge*>((ebc), (new Array_<int64_t>(1, (0LL))), (ebe));
}
ays<List_<ge*>*>((eaz), (new Array_<int64_t>(1, (0LL))));
}
return ebc;
}
// rebuildExpr
static gd* bxx(gd* ebh /*ast*/, bool ebi /*nullable*/){
int64_t ebm = 0;
if(eqAddr_((ebh), (nullptr))){
return nullptr;
}
switch((ebh)->lw){
case 0LL:
return nullptr;
break;
case 2049LL:
(ebh) = ((ebp)((as_<ebq>(classTable_, (ebh), 110))));
break;
case 2050LL:
(ebh) = ((ebs)((as_<byb>(classTable_, (ebh), 72))));
break;
case 2051LL:
(ebh) = ((ebu)((as_<ebv>(classTable_, (ebh), 112))));
break;
case 2052LL:
(ebh) = ((ebx)((as_<eby>(classTable_, (ebh), 114))));
break;
case 2053LL:
(ebh) = ((eca)((as_<ecb>(classTable_, (ebh), 116))));
break;
case 2054LL:
(ebh) = ((ecd)((as_<ece>(classTable_, (ebh), 118))));
break;
case 2055LL:
(ebh) = ((ecg)((as_<ech>(classTable_, (ebh), 120))));
break;
case 2056LL:
(ebh) = ((ecj)((as_<eck>(classTable_, (ebh), 122))));
break;
case 2057LL:
(ebh) = ((ecm)((as_<bux>(classTable_, (ebh), 64))));
break;
case 2058LL:
(ebh) = ((eco)((as_<ecp>(classTable_, (ebh), 124))));
break;
case 2059LL:
(ebh) = ((ecr)((as_<ecs>(classTable_, (ebh), 126))));
break;
case 67584LL:
(ebh) = ((ecu)((as_<bvq>(classTable_, (ebh), 68))));
break;
case 67585LL:
(ebh) = ((ecw)((as_<bvp>(classTable_, (ebh), 70))));
break;
case 67586LL:
(ebh) = ((ecy)((as_<ecz>(classTable_, (ebh), 128))));
break;
case 67587LL:
(ebh) = ((edb)((as_<edc>(classTable_, (ebh), 130))));
break;
case 67588LL:
(ebh) = ((ede)((as_<edf>(classTable_, (ebh), 132))));
break;
case 2060LL:
(ebh) = ((edh)((as_<edi>(classTable_, (ebh), 134))));
break;
case 2062LL:
(ebh) = ((dup)((ebh)));
break;
}
if(eqAddr_((ebh), (nullptr))){
return nullptr;
}
if((!(ebi)) && (eqAddr_(((ebh)->pf), (nullptr)))){
(ad)((131112LL), ((ebh)->ne), (nullptr));
return nullptr;
}
return ebh;
}
// _dtor
static void edo(byb* edp){
((edp)->byf) = (nullptr);
((edp)->byg) = (nullptr);
((edp)->pf) = (nullptr);
((edp)->ne) = (nullptr);
((edp)->nf) = (nullptr);
((edp)->ng) = (nullptr);
((edp)->nh) = (nullptr);
((edp)->ni) = (nullptr);
((edp)->nj) = (nullptr);
((edp)->nk) = (nullptr);
}
// _copy
static byb* edq(byb* edr){
byb* eds = nullptr;
(eds) = (new byb());
((eds)->byc) = ((edr)->byc);
((eds)->byf) = (copy_((edr)->byf));
((eds)->byg) = (copy_((edr)->byg));
((eds)->pf) = (copy_((edr)->pf));
((eds)->pj) = ((edr)->pj);
((eds)->ne) = (copy_((edr)->ne));
((eds)->nf) = (copy_((edr)->nf));
((eds)->ng) = (copy_((edr)->ng));
((eds)->nh) = (copy_((edr)->nh));
((eds)->ni) = (copy_((edr)->ni));
((eds)->nj) = (copy_((edr)->nj));
((eds)->nk) = (copy_((edr)->nk));
((eds)->no) = ((edr)->no);
((eds)->lw) = ((edr)->lw);
return as_<byb>(classTable_, (eds), 72);
}
// _toBin
static Array_<uint8_t>* edt(byb* edu){
Array_<uint8_t>* edv = nullptr;
(edv) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(edv) = ((edv)->Cat(toBin_((edu)->byc)));
(edv) = ((edv)->Cat(toBin_((edu)->byf)));
(edv) = ((edv)->Cat(toBin_((edu)->byg)));
(edv) = ((edv)->Cat(toBin_((edu)->pf)));
(edv) = ((edv)->Cat(toBin_((edu)->pj)));
(edv) = ((edv)->Cat(toBin_((edu)->ne)));
(edv) = ((edv)->Cat(toBin_((edu)->nf)));
(edv) = ((edv)->Cat(toBin_((edu)->ng)));
(edv) = ((edv)->Cat(toBin_((edu)->nh)));
(edv) = ((edv)->Cat(toBin_((edu)->ni)));
(edv) = ((edv)->Cat(toBin_((edu)->nj)));
(edv) = ((edv)->Cat(toBin_((edu)->nk)));
(edv) = ((edv)->Cat(toBin_((edu)->no)));
(edv) = ((edv)->Cat(toBin_((edu)->lw)));
return edv;
}
// _fromBin
static byb* eek(byb* eel, Array_<uint8_t>* eem, int64_t* een){
byb* eeo = nullptr;
(eeo) = (new byb());
((eeo)->byc) = (fromBin_<int64_t>((eem), (*een)));
((eeo)->byf) = (fromBin_<gd*>((eem), (*een)));
((eeo)->byg) = (fromBin_<gd*>((eem), (*een)));
((eeo)->pf) = (fromBin_<gc*>((eem), (*een)));
((eeo)->pj) = (fromBin_<int64_t>((eem), (*een)));
((eeo)->ne) = (fromBin_<ga*>((eem), (*een)));
((eeo)->nf) = (fromBin_<Array_<char16_t>*>((eem), (*een)));
((eeo)->ng) = (fromBin_<fx*>((eem), (*een)));
((eeo)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eem), (*een)));
((eeo)->ni) = (fromBin_<Array_<char16_t>*>((eem), (*een)));
((eeo)->nj) = (fromBin_<fx*>((eem), (*een)));
((eeo)->nk) = (fromBin_<fy*>((eem), (*een)));
((eeo)->no) = (fromBin_<bool>((eem), (*een)));
((eeo)->lw) = (fromBin_<int64_t>((eem), (*een)));
return eeo;
}
// rebuildStat
static ge* byh(ge* eep /*ast*/, gc* eeq /*retType*/, fw* eer /*parentFunc*/){
int64_t eev = 0;
eez* eey = nullptr; // ast2
gb* efc = nullptr; // arg
List_<car*>* eff = nullptr; // args
ul* efg = nullptr; // refClass
List_<um*>* efh = nullptr; // items
um* efl = nullptr; // item
gd* efo = nullptr; // astRef
buu* efs = nullptr; // astDo
byb* efu = nullptr; // astAssign
gd* efw = nullptr; // astRef
if(eqAddr_((eep), (nullptr))){
return nullptr;
}
switch((eep)->lw){
case 514LL:
case 516LL:
case 517LL:
case 518LL:
case 519LL:
return nullptr;
break;
case 515LL:
(eey) = (as_<eez>(classTable_, (eep), 136));
(efa)(((eey)->efb));
(efc) = (((eey)->efb)->bgk);
if((!eqAddr_(((efc)->nf), (nullptr))) && (cmp_(((efc)->nf), (new Array_<char16_t>(5, u'\u0073', u'\u0075', u'\u0070', u'\u0065', u'\u0072'))) == 0)){
if(!((!eqAddr_((eer), (nullptr))) && (!eqAddr_(((eer)->nf), (nullptr))))){
throw 0xE9170000U;
}
if(!((((efc)->qf)->lw) == (66562LL))){
throw 0xE9170000U;
}
(eff) = ((as_<caq>(classTable_, ((efc)->qf), 80))->cay);
awe<List_<car*>*>((eff), (new Array_<int64_t>(1, (0LL))));
(efg) = (as_<ul>(classTable_, (((awi<List_<car*>*, car*>((eff), (new Array_<int64_t>(1, (0LL)))))->cbg)->nj), 22));
if(!(((efg)->lw) == (5LL))){
throw 0xE9170000U;
}
(efh) = ((efg)->bag);
awe<List_<um*>*>((efh), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((efh), (new Array_<int64_t>(1, (0LL)))))){
(efl) = (awi<List_<um*>*, um*>((efh), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((((efl)->azl)->nf), (nullptr))) && (cmp_((((efl)->azl)->nf), ((eer)->nf)) == 0)){
if(!((efl)->azr)){
throw 0xE9170000U;
}
(efo) = (new gd());
(buz)((efo), (2062LL), ((eep)->ne));
((efo)->nj) = (((efl)->azm)->azl);
((efc)->qg) = (efo);
break;
}
ays<List_<um*>*>((efh), (new Array_<int64_t>(1, (0LL))));
}
if(!(!(awg<List_<um*>*>((efh), (new Array_<int64_t>(1, (0LL))))))){
throw 0xE9170000U;
}
}
if(eqAddr_(((efc)->qg), (nullptr))){
return nullptr;
}
(efs) = (new buu());
(btr)((efs), (528LL), ((eep)->ne));
(efu) = (new byb());
(buz)((efu), (2050LL), ((eep)->ne));
((efu)->byc) = (0LL);
(efw) = (new gd());
(buz)((efw), (2062LL), ((eep)->ne));
((efw)->nj) = (efc);
((efu)->byf) = (efw);
((efu)->byg) = ((efc)->qg);
((efs)->bve) = (efu);
((efc)->qg) = (nullptr);
(eep) = ((byh)((efs), (eeq), (eer)));
break;
case 66049LL:
(eep) = ((efy)((as_<cjh>(classTable_, (eep), 88)), (eeq), (eer)));
break;
case 66050LL:
(eep) = ((ega)((as_<cjl>(classTable_, (eep), 92)), (eeq), (eer)));
break;
case 16843265LL:
(eep) = ((egc)((as_<cjp>(classTable_, (eep), 98)), (eeq), (eer)));
break;
case 16843266LL:
(eep) = ((ege)((as_<cjt>(classTable_, (eep), 100)), (eeq), (eer)));
break;
case 66051LL:
(eep) = ((egg)((as_<btu>(classTable_, (eep), 52)), (eeq), (eer)));
break;
case 526LL:
(eep) = ((egi)((as_<cjy>(classTable_, (eep), 102))));
break;
case 66052LL:
(eep) = ((egk)((as_<btw>(classTable_, (eep), 54)), (eeq), (eer)));
break;
case 527LL:
(eep) = ((egm)((as_<ckd>(classTable_, (eep), 104)), (eeq)));
break;
case 528LL:
(eep) = ((ego)((as_<buu>(classTable_, (eep), 62))));
break;
case 529LL:
(eep) = ((egq)((as_<ge>(classTable_, (eep), 16)), (eeq), (eer)));
break;
case 530LL:
(eep) = ((egs)((as_<ge>(classTable_, (eep), 16)), (eeq), (eer)));
break;
case 531LL:
(eep) = ((egu)((as_<ckm>(classTable_, (eep), 106))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(eqAddr_((eep), (nullptr))){
return nullptr;
}
if(!(!eqAddr_(((eep)->nk), (nullptr)))){
throw 0xE9170000U;
}
return eep;
}
// isRef
static bool byj(gc* egy /*type*/){
int64_t egz = 0; // typeId
(egz) = ((egy)->lw);
return ((((egz) == (66561LL)) || ((egz) == (66563LL))) || ((egz) == (66564LL))) || ((eha)((egy)));
}
// makeExprNull
static bvq* byq(ga* ehb /*pos*/){
bvq* ehc = nullptr; // value
ehf* ehe = nullptr; // type
(ehc) = (new bvq());
(buz)((ehc), (67584LL), (ehb));
(ehe) = (new ehf());
(btr)((ehe), (1027LL), (ehb));
((ehc)->pf) = (ehe);
return ehc;
}
// getId
static Array_<char16_t>* byw(){
Array_<char16_t>* ehg = nullptr; // curId
Array_<char16_t>* ehh = nullptr; // newId
int64_t ehl = 0; // idx
int64_t ehz = 0;
Array_<char16_t>* eic = nullptr;
Array_<char16_t>* eig = nullptr;
Array_<char16_t>* eik = nullptr;
(ehg) = (al);
(ehh) = (copy_(al));
while(true){
(ehl) = (((ehh)->Len()) - (1LL));
while(true){
if(((ehh)->At(ehl)) == (u'\u007A')){
if((ehl) == (0LL)){
(ehh) = (newArray_<char16_t, Array_<char16_t>*>(1, (((ehh)->Len()) + (1LL))));
eht<Array_<char16_t>*, char16_t>((ehh), (new Array_<int64_t>(1, (0LL))), (u'\u0061'));
}
else{
((ehh)->At(ehl)) = (u'\u0061');
(ehl) = ((ehl) - (1LL));
continue;
}
}
else{
((ehh)->At(ehl)) = ((ehx)(((ehh)->At(ehl)), (1LL)));
}
break;
}
switch((ehh)->Len()){
case 2LL:
eic = ehh;
if(cmp_(eic, (new Array_<char16_t>(2, u'\u0064', u'\u006F'))) == 0 || cmp_(eic, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0 || cmp_(eic, (new Array_<char16_t>(2, u'\u006F', u'\u0072'))) == 0){
continue;
}
break;
case 3LL:
eig = ehh;
if(cmp_(eig, (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064'))) == 0 || cmp_(eig, (new Array_<char16_t>(3, u'\u0061', u'\u0073', u'\u006D'))) == 0 || cmp_(eig, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0 || cmp_(eig, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074'))) == 0 || cmp_(eig, (new Array_<char16_t>(3, u'\u006E', u'\u0065', u'\u0077'))) == 0 || cmp_(eig, (new Array_<char16_t>(3, u'\u006E', u'\u006F', u'\u0074'))) == 0 || cmp_(eig, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0 || cmp_(eig, (new Array_<char16_t>(3, u'\u0078', u'\u006F', u'\u0072'))) == 0){
continue;
}
break;
case 4LL:
eik = ehh;
if(cmp_(eik, (new Array_<char16_t>(4, u'\u0061', u'\u0075', u'\u0074', u'\u006F'))) == 0 || cmp_(eik, (new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C'))) == 0 || cmp_(eik, (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065'))) == 0 || cmp_(eik, (new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072'))) == 0 || cmp_(eik, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065'))) == 0 || cmp_(eik, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0 || cmp_(eik, (new Array_<char16_t>(4, u'\u0067', u'\u006F', u'\u0074', u'\u006F'))) == 0 || cmp_(eik, (new Array_<char16_t>(4, u'\u006C', u'\u006F', u'\u006E', u'\u0067'))) == 0 || cmp_(eik, (new Array_<char16_t>(4, u'\u006D', u'\u0061', u'\u0069', u'\u006E'))) == 0 || cmp_(eik, (new Array_<char16_t>(4, u'\u0074', u'\u0068', u'\u0069', u'\u0073'))) == 0 || cmp_(eik, (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))) == 0 || cmp_(eik, (new Array_<char16_t>(4, u'\u0076', u'\u006F', u'\u0069', u'\u0064'))) == 0){
continue;
}
break;
}
break;
}
(al) = (ehh);
return ehg;
}
// _dtor
static void eim(caj* ein){
((ein)->ne) = (nullptr);
((ein)->nf) = (nullptr);
((ein)->ng) = (nullptr);
((ein)->nh) = (nullptr);
((ein)->ni) = (nullptr);
((ein)->nj) = (nullptr);
((ein)->nk) = (nullptr);
}
// _copy
static caj* eio(caj* eip){
caj* eiq = nullptr;
(eiq) = (new caj());
((eiq)->ne) = (copy_((eip)->ne));
((eiq)->nf) = (copy_((eip)->nf));
((eiq)->ng) = (copy_((eip)->ng));
((eiq)->nh) = (copy_((eip)->nh));
((eiq)->ni) = (copy_((eip)->ni));
((eiq)->nj) = (copy_((eip)->nj));
((eiq)->nk) = (copy_((eip)->nk));
((eiq)->no) = ((eip)->no);
((eiq)->lw) = ((eip)->lw);
return as_<caj>(classTable_, (eiq), 74);
}
// _toBin
static Array_<uint8_t>* eir(caj* eis){
Array_<uint8_t>* eit = nullptr;
(eit) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eit) = ((eit)->Cat(toBin_((eis)->ne)));
(eit) = ((eit)->Cat(toBin_((eis)->nf)));
(eit) = ((eit)->Cat(toBin_((eis)->ng)));
(eit) = ((eit)->Cat(toBin_((eis)->nh)));
(eit) = ((eit)->Cat(toBin_((eis)->ni)));
(eit) = ((eit)->Cat(toBin_((eis)->nj)));
(eit) = ((eit)->Cat(toBin_((eis)->nk)));
(eit) = ((eit)->Cat(toBin_((eis)->no)));
(eit) = ((eit)->Cat(toBin_((eis)->lw)));
return eit;
}
// _fromBin
static caj* ejd(caj* eje, Array_<uint8_t>* ejf, int64_t* ejg){
caj* ejh = nullptr;
(ejh) = (new caj());
((ejh)->ne) = (fromBin_<ga*>((ejf), (*ejg)));
((ejh)->nf) = (fromBin_<Array_<char16_t>*>((ejf), (*ejg)));
((ejh)->ng) = (fromBin_<fx*>((ejf), (*ejg)));
((ejh)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ejf), (*ejg)));
((ejh)->ni) = (fromBin_<Array_<char16_t>*>((ejf), (*ejg)));
((ejh)->nj) = (fromBin_<fx*>((ejf), (*ejg)));
((ejh)->nk) = (fromBin_<fy*>((ejf), (*ejg)));
((ejh)->no) = (fromBin_<bool>((ejf), (*ejg)));
((ejh)->lw) = (fromBin_<int64_t>((ejf), (*ejg)));
return ejh;
}
// _dtor
static void eji(cai* ejj){
((ejj)->cak) = (nullptr);
((ejj)->ne) = (nullptr);
((ejj)->nf) = (nullptr);
((ejj)->ng) = (nullptr);
((ejj)->nh) = (nullptr);
((ejj)->ni) = (nullptr);
((ejj)->nj) = (nullptr);
((ejj)->nk) = (nullptr);
}
// _copy
static cai* ejk(cai* ejl){
cai* ejm = nullptr;
(ejm) = (new cai());
((ejm)->cak) = (copy_((ejl)->cak));
((ejm)->ne) = (copy_((ejl)->ne));
((ejm)->nf) = (copy_((ejl)->nf));
((ejm)->ng) = (copy_((ejl)->ng));
((ejm)->nh) = (copy_((ejl)->nh));
((ejm)->ni) = (copy_((ejl)->ni));
((ejm)->nj) = (copy_((ejl)->nj));
((ejm)->nk) = (copy_((ejl)->nk));
((ejm)->no) = ((ejl)->no);
((ejm)->lw) = ((ejl)->lw);
return as_<cai>(classTable_, (ejm), 76);
}
// _toBin
static Array_<uint8_t>* ejn(cai* ejo){
Array_<uint8_t>* ejp = nullptr;
(ejp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ejp) = ((ejp)->Cat(toBin_((ejo)->cak)));
(ejp) = ((ejp)->Cat(toBin_((ejo)->ne)));
(ejp) = ((ejp)->Cat(toBin_((ejo)->nf)));
(ejp) = ((ejp)->Cat(toBin_((ejo)->ng)));
(ejp) = ((ejp)->Cat(toBin_((ejo)->nh)));
(ejp) = ((ejp)->Cat(toBin_((ejo)->ni)));
(ejp) = ((ejp)->Cat(toBin_((ejo)->nj)));
(ejp) = ((ejp)->Cat(toBin_((ejo)->nk)));
(ejp) = ((ejp)->Cat(toBin_((ejo)->no)));
(ejp) = ((ejp)->Cat(toBin_((ejo)->lw)));
return ejp;
}
// _fromBin
static cai* eka(cai* ekb, Array_<uint8_t>* ekc, int64_t* ekd){
cai* eke = nullptr;
(eke) = (new cai());
((eke)->cak) = (fromBin_<gc*>((ekc), (*ekd)));
((eke)->ne) = (fromBin_<ga*>((ekc), (*ekd)));
((eke)->nf) = (fromBin_<Array_<char16_t>*>((ekc), (*ekd)));
((eke)->ng) = (fromBin_<fx*>((ekc), (*ekd)));
((eke)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ekc), (*ekd)));
((eke)->ni) = (fromBin_<Array_<char16_t>*>((ekc), (*ekd)));
((eke)->nj) = (fromBin_<fx*>((ekc), (*ekd)));
((eke)->nk) = (fromBin_<fy*>((ekc), (*ekd)));
((eke)->no) = (fromBin_<bool>((ekc), (*ekd)));
((eke)->lw) = (fromBin_<int64_t>((ekc), (*ekd)));
return eke;
}
// _dtor
static void ekf(cam* ekg){
((ekg)->ne) = (nullptr);
((ekg)->nf) = (nullptr);
((ekg)->ng) = (nullptr);
((ekg)->nh) = (nullptr);
((ekg)->ni) = (nullptr);
((ekg)->nj) = (nullptr);
((ekg)->nk) = (nullptr);
}
// _copy
static cam* ekh(cam* eki){
cam* ekj = nullptr;
(ekj) = (new cam());
((ekj)->can) = ((eki)->can);
((ekj)->ne) = (copy_((eki)->ne));
((ekj)->nf) = (copy_((eki)->nf));
((ekj)->ng) = (copy_((eki)->ng));
((ekj)->nh) = (copy_((eki)->nh));
((ekj)->ni) = (copy_((eki)->ni));
((ekj)->nj) = (copy_((eki)->nj));
((ekj)->nk) = (copy_((eki)->nk));
((ekj)->no) = ((eki)->no);
((ekj)->lw) = ((eki)->lw);
return as_<cam>(classTable_, (ekj), 78);
}
// _toBin
static Array_<uint8_t>* ekk(cam* ekl){
Array_<uint8_t>* ekm = nullptr;
(ekm) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ekm) = ((ekm)->Cat(toBin_((ekl)->can)));
(ekm) = ((ekm)->Cat(toBin_((ekl)->ne)));
(ekm) = ((ekm)->Cat(toBin_((ekl)->nf)));
(ekm) = ((ekm)->Cat(toBin_((ekl)->ng)));
(ekm) = ((ekm)->Cat(toBin_((ekl)->nh)));
(ekm) = ((ekm)->Cat(toBin_((ekl)->ni)));
(ekm) = ((ekm)->Cat(toBin_((ekl)->nj)));
(ekm) = ((ekm)->Cat(toBin_((ekl)->nk)));
(ekm) = ((ekm)->Cat(toBin_((ekl)->no)));
(ekm) = ((ekm)->Cat(toBin_((ekl)->lw)));
return ekm;
}
// _fromBin
static cam* ekx(cam* eky, Array_<uint8_t>* ekz, int64_t* ela){
cam* elb = nullptr;
(elb) = (new cam());
((elb)->can) = (fromBin_<int64_t>((ekz), (*ela)));
((elb)->ne) = (fromBin_<ga*>((ekz), (*ela)));
((elb)->nf) = (fromBin_<Array_<char16_t>*>((ekz), (*ela)));
((elb)->ng) = (fromBin_<fx*>((ekz), (*ela)));
((elb)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ekz), (*ela)));
((elb)->ni) = (fromBin_<Array_<char16_t>*>((ekz), (*ela)));
((elb)->nj) = (fromBin_<fx*>((ekz), (*ela)));
((elb)->nk) = (fromBin_<fy*>((ekz), (*ela)));
((elb)->no) = (fromBin_<bool>((ekz), (*ela)));
((elb)->lw) = (fromBin_<int64_t>((ekz), (*ela)));
return elb;
}
// _dtor
static void elc(car* eld){
((eld)->cbg) = (nullptr);
}
// _copy
static car* ele(car* elf){
car* elg = nullptr;
(elg) = (new car());
((elg)->cbg) = (copy_((elf)->cbg));
((elg)->cbi) = ((elf)->cbi);
return as_<car>(classTable_, (elg), 82);
}
// _toBin
static Array_<uint8_t>* elh(car* eli){
Array_<uint8_t>* elj = nullptr;
(elj) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(elj) = ((elj)->Cat(toBin_((eli)->cbg)));
(elj) = ((elj)->Cat(toBin_((eli)->cbi)));
return elj;
}
// _fromBin
static car* elm(car* eln, Array_<uint8_t>* elo, int64_t* elp){
car* elq = nullptr;
(elq) = (new car());
((elq)->cbg) = (fromBin_<gc*>((elo), (*elp)));
((elq)->cbi) = (fromBin_<bool>((elo), (*elp)));
return elq;
}
// _dtor
static void elr(caq* els){
((els)->elt) = (nullptr);
((els)->cay) = (nullptr);
((els)->cat) = (nullptr);
((els)->ne) = (nullptr);
((els)->nf) = (nullptr);
((els)->ng) = (nullptr);
((els)->nh) = (nullptr);
((els)->ni) = (nullptr);
((els)->nj) = (nullptr);
((els)->nk) = (nullptr);
}
// _copy
static caq* elu(caq* elv){
caq* elw = nullptr;
(elw) = (new caq());
((elw)->elx) = ((elv)->elx);
((elw)->elt) = (copy_((elv)->elt));
((elw)->cay) = (copy_((elv)->cay));
((elw)->cat) = (copy_((elv)->cat));
((elw)->ne) = (copy_((elv)->ne));
((elw)->nf) = (copy_((elv)->nf));
((elw)->ng) = (copy_((elv)->ng));
((elw)->nh) = (copy_((elv)->nh));
((elw)->ni) = (copy_((elv)->ni));
((elw)->nj) = (copy_((elv)->nj));
((elw)->nk) = (copy_((elv)->nk));
((elw)->no) = ((elv)->no);
((elw)->lw) = ((elv)->lw);
return as_<caq>(classTable_, (elw), 80);
}
// _toBin
static Array_<uint8_t>* ely(caq* elz){
Array_<uint8_t>* ema = nullptr;
(ema) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ema) = ((ema)->Cat(toBin_((elz)->elx)));
(ema) = ((ema)->Cat(toBin_((elz)->elt)));
(ema) = ((ema)->Cat(toBin_((elz)->cay)));
(ema) = ((ema)->Cat(toBin_((elz)->cat)));
(ema) = ((ema)->Cat(toBin_((elz)->ne)));
(ema) = ((ema)->Cat(toBin_((elz)->nf)));
(ema) = ((ema)->Cat(toBin_((elz)->ng)));
(ema) = ((ema)->Cat(toBin_((elz)->nh)));
(ema) = ((ema)->Cat(toBin_((elz)->ni)));
(ema) = ((ema)->Cat(toBin_((elz)->nj)));
(ema) = ((ema)->Cat(toBin_((elz)->nk)));
(ema) = ((ema)->Cat(toBin_((elz)->no)));
(ema) = ((ema)->Cat(toBin_((elz)->lw)));
return ema;
}
// _fromBin
static caq* emo(caq* emp, Array_<uint8_t>* emq, int64_t* emr){
caq* ems = nullptr;
(ems) = (new caq());
((ems)->elx) = (fromBin_<int64_t>((emq), (*emr)));
((ems)->elt) = (fromBin_<List_<Array_<char16_t>*>*>((emq), (*emr)));
((ems)->cay) = (fromBin_<List_<car*>*>((emq), (*emr)));
((ems)->cat) = (fromBin_<gc*>((emq), (*emr)));
((ems)->ne) = (fromBin_<ga*>((emq), (*emr)));
((ems)->nf) = (fromBin_<Array_<char16_t>*>((emq), (*emr)));
((ems)->ng) = (fromBin_<fx*>((emq), (*emr)));
((ems)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((emq), (*emr)));
((ems)->ni) = (fromBin_<Array_<char16_t>*>((emq), (*emr)));
((ems)->nj) = (fromBin_<fx*>((emq), (*emr)));
((ems)->nk) = (fromBin_<fy*>((emq), (*emr)));
((ems)->no) = (fromBin_<bool>((emq), (*emr)));
((ems)->lw) = (fromBin_<int64_t>((emq), (*emr)));
return ems;
}
// _dtor
static void emt(cbn* emu){
((emu)->cbs) = (nullptr);
((emu)->ne) = (nullptr);
((emu)->nf) = (nullptr);
((emu)->ng) = (nullptr);
((emu)->nh) = (nullptr);
((emu)->ni) = (nullptr);
((emu)->nj) = (nullptr);
((emu)->nk) = (nullptr);
}
// _copy
static cbn* emv(cbn* emw){
cbn* emx = nullptr;
(emx) = (new cbn());
((emx)->cbq) = ((emw)->cbq);
((emx)->cbs) = (copy_((emw)->cbs));
((emx)->ne) = (copy_((emw)->ne));
((emx)->nf) = (copy_((emw)->nf));
((emx)->ng) = (copy_((emw)->ng));
((emx)->nh) = (copy_((emw)->nh));
((emx)->ni) = (copy_((emw)->ni));
((emx)->nj) = (copy_((emw)->nj));
((emx)->nk) = (copy_((emw)->nk));
((emx)->no) = ((emw)->no);
((emx)->lw) = ((emw)->lw);
return as_<cbn>(classTable_, (emx), 84);
}
// _toBin
static Array_<uint8_t>* emy(cbn* emz){
Array_<uint8_t>* ena = nullptr;
(ena) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ena) = ((ena)->Cat(toBin_((emz)->cbq)));
(ena) = ((ena)->Cat(toBin_((emz)->cbs)));
(ena) = ((ena)->Cat(toBin_((emz)->ne)));
(ena) = ((ena)->Cat(toBin_((emz)->nf)));
(ena) = ((ena)->Cat(toBin_((emz)->ng)));
(ena) = ((ena)->Cat(toBin_((emz)->nh)));
(ena) = ((ena)->Cat(toBin_((emz)->ni)));
(ena) = ((ena)->Cat(toBin_((emz)->nj)));
(ena) = ((ena)->Cat(toBin_((emz)->nk)));
(ena) = ((ena)->Cat(toBin_((emz)->no)));
(ena) = ((ena)->Cat(toBin_((emz)->lw)));
return ena;
}
// _fromBin
static cbn* enm(cbn* enn, Array_<uint8_t>* eno, int64_t* enp){
cbn* enq = nullptr;
(enq) = (new cbn());
((enq)->cbq) = (fromBin_<int64_t>((eno), (*enp)));
((enq)->cbs) = (fromBin_<gc*>((eno), (*enp)));
((enq)->ne) = (fromBin_<ga*>((eno), (*enp)));
((enq)->nf) = (fromBin_<Array_<char16_t>*>((eno), (*enp)));
((enq)->ng) = (fromBin_<fx*>((eno), (*enp)));
((enq)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eno), (*enp)));
((enq)->ni) = (fromBin_<Array_<char16_t>*>((eno), (*enp)));
((enq)->nj) = (fromBin_<fx*>((eno), (*enp)));
((enq)->nk) = (fromBin_<fy*>((eno), (*enp)));
((enq)->no) = (fromBin_<bool>((eno), (*enp)));
((enq)->lw) = (fromBin_<int64_t>((eno), (*enp)));
return enq;
}
// _dtor
static void enr(cby* ens){
((ens)->cbz) = (nullptr);
((ens)->cca) = (nullptr);
((ens)->ne) = (nullptr);
((ens)->nf) = (nullptr);
((ens)->ng) = (nullptr);
((ens)->nh) = (nullptr);
((ens)->ni) = (nullptr);
((ens)->nj) = (nullptr);
((ens)->nk) = (nullptr);
}
// _copy
static cby* ent(cby* enu){
cby* env = nullptr;
(env) = (new cby());
((env)->cbz) = (copy_((enu)->cbz));
((env)->cca) = (copy_((enu)->cca));
((env)->ne) = (copy_((enu)->ne));
((env)->nf) = (copy_((enu)->nf));
((env)->ng) = (copy_((enu)->ng));
((env)->nh) = (copy_((enu)->nh));
((env)->ni) = (copy_((enu)->ni));
((env)->nj) = (copy_((enu)->nj));
((env)->nk) = (copy_((enu)->nk));
((env)->no) = ((enu)->no);
((env)->lw) = ((enu)->lw);
return as_<cby>(classTable_, (env), 86);
}
// _toBin
static Array_<uint8_t>* enw(cby* enx){
Array_<uint8_t>* eny = nullptr;
(eny) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eny) = ((eny)->Cat(toBin_((enx)->cbz)));
(eny) = ((eny)->Cat(toBin_((enx)->cca)));
(eny) = ((eny)->Cat(toBin_((enx)->ne)));
(eny) = ((eny)->Cat(toBin_((enx)->nf)));
(eny) = ((eny)->Cat(toBin_((enx)->ng)));
(eny) = ((eny)->Cat(toBin_((enx)->nh)));
(eny) = ((eny)->Cat(toBin_((enx)->ni)));
(eny) = ((eny)->Cat(toBin_((enx)->nj)));
(eny) = ((eny)->Cat(toBin_((enx)->nk)));
(eny) = ((eny)->Cat(toBin_((enx)->no)));
(eny) = ((eny)->Cat(toBin_((enx)->lw)));
return eny;
}
// _fromBin
static cby* eok(cby* eol, Array_<uint8_t>* eom, int64_t* eon){
cby* eoo = nullptr;
(eoo) = (new cby());
((eoo)->cbz) = (fromBin_<gc*>((eom), (*eon)));
((eoo)->cca) = (fromBin_<gc*>((eom), (*eon)));
((eoo)->ne) = (fromBin_<ga*>((eom), (*eon)));
((eoo)->nf) = (fromBin_<Array_<char16_t>*>((eom), (*eon)));
((eoo)->ng) = (fromBin_<fx*>((eom), (*eon)));
((eoo)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eom), (*eon)));
((eoo)->ni) = (fromBin_<Array_<char16_t>*>((eom), (*eon)));
((eoo)->nj) = (fromBin_<fx*>((eom), (*eon)));
((eoo)->nk) = (fromBin_<fy*>((eom), (*eon)));
((eoo)->no) = (fromBin_<bool>((eom), (*eon)));
((eoo)->lw) = (fromBin_<int64_t>((eom), (*eon)));
return eoo;
}
// search
static bby* chb(List_<um*>* eop /*members*/, Array_<char16_t>* eoq /*name*/){
fx* eos = nullptr; // def
awe<List_<um*>*>((eop), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((eop), (new Array_<int64_t>(1, (0LL)))))){
(eos) = ((awi<List_<um*>*, um*>((eop), (new Array_<int64_t>(1, (0LL)))))->azl);
if(((((eos)->lw) == (2LL)) && (!eqAddr_((((as_<bgi>(classTable_, (eos), 38))->bgk)->nf), (nullptr)))) && (cmp_((((as_<bgi>(classTable_, (eos), 38))->bgk)->nf), (eoq)) == 0)){
return (bbx)(((as_<bgi>(classTable_, (eos), 38))->bgk));
}
ays<List_<um*>*>((eop), (new Array_<int64_t>(1, (0LL))));
}
if(!(false)){
throw 0xE9170000U;
}
return nullptr;
}
// buildIf
static void cjg(cjh* eov /*ast*/, ge* eow /*breakStat*/, ge* eox /*skipStat*/){
bby* eoy = nullptr; // infoMe
List_<cji*>* eph = nullptr; // items
cji* epk = nullptr; // item
(eoy) = ((bbx)((eov)));
if(eqAddr_(((eov)->epa), (nullptr))){
(cka)(((eov)->epc), (eow), (eox));
if((!eqAddr_(((eoy)->byz), (nullptr))) && ((eoy)->bzf)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((eoy)->byz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
return;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
(epf)(((eov)->epa));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(cka)(((eov)->epc), (eow), (eox));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(eph) = ((eov)->epi);
awe<List_<cji*>*>((eph), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cji*>*>((eph), (new Array_<int64_t>(1, (0LL)))))){
(epk) = (awi<List_<cji*>*, cji*>((eph), (new Array_<int64_t>(1, (0LL)))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
(epf)(((epk)->epl));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(cka)(((epk)->epm), (eow), (eox));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<cji*>*>((eph), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((eov)->epo), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
(cka)(((eov)->epo), (eow), (eox));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
if((!eqAddr_(((eoy)->byz), (nullptr))) && ((eoy)->bzf)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((eoy)->byz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void eps(cji* ept){
((ept)->epl) = (nullptr);
((ept)->epm) = (nullptr);
((ept)->ne) = (nullptr);
((ept)->nf) = (nullptr);
((ept)->ng) = (nullptr);
((ept)->nh) = (nullptr);
((ept)->ni) = (nullptr);
((ept)->nj) = (nullptr);
((ept)->nk) = (nullptr);
}
// _copy
static cji* epu(cji* epv){
cji* epw = nullptr;
(epw) = (new cji());
((epw)->epl) = (copy_((epv)->epl));
((epw)->epm) = (copy_((epv)->epm));
((epw)->ne) = (copy_((epv)->ne));
((epw)->nf) = (copy_((epv)->nf));
((epw)->ng) = (copy_((epv)->ng));
((epw)->nh) = (copy_((epv)->nh));
((epw)->ni) = (copy_((epv)->ni));
((epw)->nj) = (copy_((epv)->nj));
((epw)->nk) = (copy_((epv)->nk));
((epw)->no) = ((epv)->no);
((epw)->lw) = ((epv)->lw);
return as_<cji>(classTable_, (epw), 90);
}
// _toBin
static Array_<uint8_t>* epx(cji* epy){
Array_<uint8_t>* epz = nullptr;
(epz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(epz) = ((epz)->Cat(toBin_((epy)->epl)));
(epz) = ((epz)->Cat(toBin_((epy)->epm)));
(epz) = ((epz)->Cat(toBin_((epy)->ne)));
(epz) = ((epz)->Cat(toBin_((epy)->nf)));
(epz) = ((epz)->Cat(toBin_((epy)->ng)));
(epz) = ((epz)->Cat(toBin_((epy)->nh)));
(epz) = ((epz)->Cat(toBin_((epy)->ni)));
(epz) = ((epz)->Cat(toBin_((epy)->nj)));
(epz) = ((epz)->Cat(toBin_((epy)->nk)));
(epz) = ((epz)->Cat(toBin_((epy)->no)));
(epz) = ((epz)->Cat(toBin_((epy)->lw)));
return epz;
}
// _fromBin
static cji* eql(cji* eqm, Array_<uint8_t>* eqn, int64_t* eqo){
cji* eqp = nullptr;
(eqp) = (new cji());
((eqp)->epl) = (fromBin_<gd*>((eqn), (*eqo)));
((eqp)->epm) = (fromBin_<btw*>((eqn), (*eqo)));
((eqp)->ne) = (fromBin_<ga*>((eqn), (*eqo)));
((eqp)->nf) = (fromBin_<Array_<char16_t>*>((eqn), (*eqo)));
((eqp)->ng) = (fromBin_<fx*>((eqn), (*eqo)));
((eqp)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eqn), (*eqo)));
((eqp)->ni) = (fromBin_<Array_<char16_t>*>((eqn), (*eqo)));
((eqp)->nj) = (fromBin_<fx*>((eqn), (*eqo)));
((eqp)->nk) = (fromBin_<fy*>((eqn), (*eqo)));
((eqp)->no) = (fromBin_<bool>((eqn), (*eqo)));
((eqp)->lw) = (fromBin_<int64_t>((eqn), (*eqo)));
return eqp;
}
// _dtor
static void eqq(cjh* eqr){
((eqr)->epa) = (nullptr);
((eqr)->epc) = (nullptr);
((eqr)->epi) = (nullptr);
((eqr)->epo) = (nullptr);
((eqr)->buf) = (nullptr);
((eqr)->ne) = (nullptr);
((eqr)->nf) = (nullptr);
((eqr)->ng) = (nullptr);
((eqr)->nh) = (nullptr);
((eqr)->ni) = (nullptr);
((eqr)->nj) = (nullptr);
((eqr)->nk) = (nullptr);
}
// _copy
static cjh* eqs(cjh* eqt){
cjh* equ = nullptr;
(equ) = (new cjh());
((equ)->epa) = (copy_((eqt)->epa));
((equ)->epc) = (copy_((eqt)->epc));
((equ)->epi) = (copy_((eqt)->epi));
((equ)->epo) = (copy_((eqt)->epo));
((equ)->buf) = (copy_((eqt)->buf));
((equ)->ne) = (copy_((eqt)->ne));
((equ)->nf) = (copy_((eqt)->nf));
((equ)->ng) = (copy_((eqt)->ng));
((equ)->nh) = (copy_((eqt)->nh));
((equ)->ni) = (copy_((eqt)->ni));
((equ)->nj) = (copy_((eqt)->nj));
((equ)->nk) = (copy_((eqt)->nk));
((equ)->no) = ((eqt)->no);
((equ)->lw) = ((eqt)->lw);
return as_<cjh>(classTable_, (equ), 88);
}
// _toBin
static Array_<uint8_t>* eqv(cjh* eqw){
Array_<uint8_t>* eqx = nullptr;
(eqx) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->epa)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->epc)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->epi)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->epo)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->buf)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->ne)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->nf)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->ng)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->nh)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->ni)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->nj)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->nk)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->no)));
(eqx) = ((eqx)->Cat(toBin_((eqw)->lw)));
return eqx;
}
// _fromBin
static cjh* erm(cjh* ern, Array_<uint8_t>* ero, int64_t* erp){
cjh* erq = nullptr;
(erq) = (new cjh());
((erq)->epa) = (fromBin_<gd*>((ero), (*erp)));
((erq)->epc) = (fromBin_<btw*>((ero), (*erp)));
((erq)->epi) = (fromBin_<List_<cji*>*>((ero), (*erp)));
((erq)->epo) = (fromBin_<btw*>((ero), (*erp)));
((erq)->buf) = (fromBin_<gb*>((ero), (*erp)));
((erq)->ne) = (fromBin_<ga*>((ero), (*erp)));
((erq)->nf) = (fromBin_<Array_<char16_t>*>((ero), (*erp)));
((erq)->ng) = (fromBin_<fx*>((ero), (*erp)));
((erq)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ero), (*erp)));
((erq)->ni) = (fromBin_<Array_<char16_t>*>((ero), (*erp)));
((erq)->nj) = (fromBin_<fx*>((ero), (*erp)));
((erq)->nk) = (fromBin_<fy*>((ero), (*erp)));
((erq)->no) = (fromBin_<bool>((ero), (*erp)));
((erq)->lw) = (fromBin_<int64_t>((ero), (*erp)));
return erq;
}
// buildSwitch
static void cjk(cjl* err /*ast*/, ge* ers /*breakStat*/, ge* ert /*skipStat*/){
bby* eru = nullptr; // infoMe
bby* erv = nullptr; // info
bool ery = false; // useSwitch
List_<cjm*>* ese = nullptr; // items
cjm* esh = nullptr; // item
List_<bty*>* esi = nullptr; // items2
bty* esl = nullptr; // exprs
List_<cjm*>* esr = nullptr; // items
cjm* est = nullptr; // item
List_<bty*>* esu = nullptr; // items2
bty* esw = nullptr; // exprs
bool etd = false; // first
List_<cjm*>* ete = nullptr; // items
cjm* etg = nullptr; // item
bool etk = false; // first2
List_<bty*>* etl = nullptr; // items2
bty* etn = nullptr; // exprs
(eru) = ((bbx)((err)));
(erv) = ((bbx)(((err)->buf)));
if(!((erv)->bca)){
((erv)->bca) = (true);
uh<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), ((err)->buf));
}
(ery) = (false);
if(((((bdg)((((err)->esb)->pf))) || ((esc)((((err)->esb)->pf)))) || ((clb)((((err)->esb)->pf)))) || (((((err)->esb)->pf)->lw) == (1025LL))){
(ery) = (true);
(ese) = ((err)->esf);
awe<List_<cjm*>*>((ese), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cjm*>*>((ese), (new Array_<int64_t>(1, (0LL)))))){
(esh) = (awi<List_<cjm*>*, cjm*>((ese), (new Array_<int64_t>(1, (0LL)))));
(esi) = ((esh)->esj);
awe<List_<bty*>*>((esi), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bty*>*>((esi), (new Array_<int64_t>(1, (0LL)))))){
(esl) = (awi<List_<bty*>*, bty*>((esi), (new Array_<int64_t>(1, (0LL)))));
if(((aye<int64_t>((((esl)->bvu)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL)) || (!eqAddr_(((esl)->bvz), (nullptr)))){
(ery) = (false);
goto esa;
}
ays<List_<bty*>*>((esi), (new Array_<int64_t>(1, (0LL))));
}
ays<List_<cjm*>*>((ese), (new Array_<int64_t>(1, (0LL))));
}
}
esa:;
if(ery){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028')));
(epf)(((err)->esb));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(esr) = ((err)->esf);
awe<List_<cjm*>*>((esr), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cjm*>*>((esr), (new Array_<int64_t>(1, (0LL)))))){
(est) = (awi<List_<cjm*>*, cjm*>((esr), (new Array_<int64_t>(1, (0LL)))));
(esu) = ((est)->esj);
awe<List_<bty*>*>((esu), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bty*>*>((esu), (new Array_<int64_t>(1, (0LL)))))){
(esw) = (awi<List_<bty*>*, bty*>((esu), (new Array_<int64_t>(1, (0LL)))));
if(!(eqAddr_(((esw)->bvz), (nullptr)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020')));
(epf)(((esw)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003A', u'\u000A')));
ays<List_<bty*>*>((esu), (new Array_<int64_t>(1, (0LL))));
}
(cka)(((est)->esx), (err), (ert));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
ays<List_<cjm*>*>((esr), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((err)->esz), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
(cka)(((err)->esz), (err), (ert));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((erv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))));
(epf)(((err)->esb));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
(etd) = (true);
(ete) = ((err)->esf);
awe<List_<cjm*>*>((ete), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cjm*>*>((ete), (new Array_<int64_t>(1, (0LL)))))){
(etg) = (awi<List_<cjm*>*, cjm*>((ete), (new Array_<int64_t>(1, (0LL)))));
if(etd){
(etd) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(etk) = (true);
(etl) = ((etg)->esj);
awe<List_<bty*>*>((etl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bty*>*>((etl), (new Array_<int64_t>(1, (0LL)))))){
(etn) = (awi<List_<bty*>*, bty*>((etl), (new Array_<int64_t>(1, (0LL)))));
if(etk){
(etk) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0020', u'\u007C', u'\u007C', u'\u0020')));
}
if(eqAddr_(((etn)->bvz), (nullptr))){
if((byj)((((err)->esb)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((erv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028'))));
(epf)(((etn)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((erv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0028'))));
(epf)(((etn)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((etn)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((erv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0020', u'\u0026', u'\u0026', u'\u0020'))->Cat(v<Array_<char16_t>*>(((erv)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0028')))));
(epf)(((etn)->bvz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ays<List_<bty*>*>((etl), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(cka)(((etg)->esx), (ers), (ert));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<cjm*>*>((ete), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((err)->esz), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B')));
(cka)(((err)->esz), (ers), (ert));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
if((!eqAddr_(((eru)->byz), (nullptr))) && ((eru)->bzf)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((eru)->byz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void eub(cjm* euc){
((euc)->esj) = (nullptr);
((euc)->esx) = (nullptr);
((euc)->ne) = (nullptr);
((euc)->nf) = (nullptr);
((euc)->ng) = (nullptr);
((euc)->nh) = (nullptr);
((euc)->ni) = (nullptr);
((euc)->nj) = (nullptr);
((euc)->nk) = (nullptr);
}
// _copy
static cjm* eud(cjm* eue){
cjm* euf = nullptr;
(euf) = (new cjm());
((euf)->esj) = (copy_((eue)->esj));
((euf)->esx) = (copy_((eue)->esx));
((euf)->ne) = (copy_((eue)->ne));
((euf)->nf) = (copy_((eue)->nf));
((euf)->ng) = (copy_((eue)->ng));
((euf)->nh) = (copy_((eue)->nh));
((euf)->ni) = (copy_((eue)->ni));
((euf)->nj) = (copy_((eue)->nj));
((euf)->nk) = (copy_((eue)->nk));
((euf)->no) = ((eue)->no);
((euf)->lw) = ((eue)->lw);
return as_<cjm>(classTable_, (euf), 94);
}
// _toBin
static Array_<uint8_t>* eug(cjm* euh){
Array_<uint8_t>* eui = nullptr;
(eui) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eui) = ((eui)->Cat(toBin_((euh)->esj)));
(eui) = ((eui)->Cat(toBin_((euh)->esx)));
(eui) = ((eui)->Cat(toBin_((euh)->ne)));
(eui) = ((eui)->Cat(toBin_((euh)->nf)));
(eui) = ((eui)->Cat(toBin_((euh)->ng)));
(eui) = ((eui)->Cat(toBin_((euh)->nh)));
(eui) = ((eui)->Cat(toBin_((euh)->ni)));
(eui) = ((eui)->Cat(toBin_((euh)->nj)));
(eui) = ((eui)->Cat(toBin_((euh)->nk)));
(eui) = ((eui)->Cat(toBin_((euh)->no)));
(eui) = ((eui)->Cat(toBin_((euh)->lw)));
return eui;
}
// _fromBin
static cjm* euu(cjm* euv, Array_<uint8_t>* euw, int64_t* eux){
cjm* euy = nullptr;
(euy) = (new cjm());
((euy)->esj) = (fromBin_<List_<bty*>*>((euw), (*eux)));
((euy)->esx) = (fromBin_<btw*>((euw), (*eux)));
((euy)->ne) = (fromBin_<ga*>((euw), (*eux)));
((euy)->nf) = (fromBin_<Array_<char16_t>*>((euw), (*eux)));
((euy)->ng) = (fromBin_<fx*>((euw), (*eux)));
((euy)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((euw), (*eux)));
((euy)->ni) = (fromBin_<Array_<char16_t>*>((euw), (*eux)));
((euy)->nj) = (fromBin_<fx*>((euw), (*eux)));
((euy)->nk) = (fromBin_<fy*>((euw), (*eux)));
((euy)->no) = (fromBin_<bool>((euw), (*eux)));
((euy)->lw) = (fromBin_<int64_t>((euw), (*eux)));
return euy;
}
// _dtor
static void euz(cjl* eva){
((eva)->esb) = (nullptr);
((eva)->esf) = (nullptr);
((eva)->esz) = (nullptr);
((eva)->buf) = (nullptr);
((eva)->ne) = (nullptr);
((eva)->nf) = (nullptr);
((eva)->ng) = (nullptr);
((eva)->nh) = (nullptr);
((eva)->ni) = (nullptr);
((eva)->nj) = (nullptr);
((eva)->nk) = (nullptr);
}
// _copy
static cjl* evb(cjl* evc){
cjl* evd = nullptr;
(evd) = (new cjl());
((evd)->esb) = (copy_((evc)->esb));
((evd)->esf) = (copy_((evc)->esf));
((evd)->esz) = (copy_((evc)->esz));
((evd)->buf) = (copy_((evc)->buf));
((evd)->ne) = (copy_((evc)->ne));
((evd)->nf) = (copy_((evc)->nf));
((evd)->ng) = (copy_((evc)->ng));
((evd)->nh) = (copy_((evc)->nh));
((evd)->ni) = (copy_((evc)->ni));
((evd)->nj) = (copy_((evc)->nj));
((evd)->nk) = (copy_((evc)->nk));
((evd)->no) = ((evc)->no);
((evd)->lw) = ((evc)->lw);
return as_<cjl>(classTable_, (evd), 92);
}
// _toBin
static Array_<uint8_t>* eve(cjl* evf){
Array_<uint8_t>* evg = nullptr;
(evg) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(evg) = ((evg)->Cat(toBin_((evf)->esb)));
(evg) = ((evg)->Cat(toBin_((evf)->esf)));
(evg) = ((evg)->Cat(toBin_((evf)->esz)));
(evg) = ((evg)->Cat(toBin_((evf)->buf)));
(evg) = ((evg)->Cat(toBin_((evf)->ne)));
(evg) = ((evg)->Cat(toBin_((evf)->nf)));
(evg) = ((evg)->Cat(toBin_((evf)->ng)));
(evg) = ((evg)->Cat(toBin_((evf)->nh)));
(evg) = ((evg)->Cat(toBin_((evf)->ni)));
(evg) = ((evg)->Cat(toBin_((evf)->nj)));
(evg) = ((evg)->Cat(toBin_((evf)->nk)));
(evg) = ((evg)->Cat(toBin_((evf)->no)));
(evg) = ((evg)->Cat(toBin_((evf)->lw)));
return evg;
}
// _fromBin
static cjl* evu(cjl* evv, Array_<uint8_t>* evw, int64_t* evx){
cjl* evy = nullptr;
(evy) = (new cjl());
((evy)->esb) = (fromBin_<gd*>((evw), (*evx)));
((evy)->esf) = (fromBin_<List_<cjm*>*>((evw), (*evx)));
((evy)->esz) = (fromBin_<btw*>((evw), (*evx)));
((evy)->buf) = (fromBin_<gb*>((evw), (*evx)));
((evy)->ne) = (fromBin_<ga*>((evw), (*evx)));
((evy)->nf) = (fromBin_<Array_<char16_t>*>((evw), (*evx)));
((evy)->ng) = (fromBin_<fx*>((evw), (*evx)));
((evy)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((evw), (*evx)));
((evy)->ni) = (fromBin_<Array_<char16_t>*>((evw), (*evx)));
((evy)->nj) = (fromBin_<fx*>((evw), (*evx)));
((evy)->nk) = (fromBin_<fy*>((evw), (*evx)));
((evy)->no) = (fromBin_<bool>((evw), (*evx)));
((evy)->lw) = (fromBin_<int64_t>((evw), (*evx)));
return evy;
}
// buildWhile
static void cjo(cjp* evz /*ast*/, ge* ewa /*breakStat*/, ge* ewb /*skipStat*/){
bby* ewc = nullptr; // infoMe
(ewc) = ((bbx)((evz)));
if(eqAddr_(((evz)->ewe), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u003B', u'\u003B', u'\u0029', u'\u007B', u'\u000A')));
(bex)(((evz)->ewg), (evz), (evz));
if((!eqAddr_(((ewc)->bzc), (nullptr))) && ((ewc)->bzg)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ewc)->bzc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if((!eqAddr_(((ewc)->byz), (nullptr))) && ((ewc)->bzf)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ewc)->byz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
return;
}
if((evz)->ewm){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0064', u'\u006F', u'\u007B', u'\u000A')));
(bex)(((evz)->ewg), (evz), (evz));
if((!eqAddr_(((ewc)->bzc), (nullptr))) && ((ewc)->bzg)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ewc)->bzc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(epf)(((evz)->ewe));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')));
if((!eqAddr_(((ewc)->byz), (nullptr))) && ((ewc)->bzf)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ewc)->byz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
return;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(epf)(((evz)->ewe));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(bex)(((evz)->ewg), (evz), (evz));
if((!eqAddr_(((ewc)->bzc), (nullptr))) && ((ewc)->bzg)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ewc)->bzc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if((!eqAddr_(((ewc)->byz), (nullptr))) && ((ewc)->bzf)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ewc)->byz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void eww(cjq* ewx){
((ewx)->buf) = (nullptr);
((ewx)->ne) = (nullptr);
((ewx)->nf) = (nullptr);
((ewx)->ng) = (nullptr);
((ewx)->nh) = (nullptr);
((ewx)->ni) = (nullptr);
((ewx)->nj) = (nullptr);
((ewx)->nk) = (nullptr);
}
// _copy
static cjq* ewy(cjq* ewz){
cjq* exa = nullptr;
(exa) = (new cjq());
((exa)->buf) = (copy_((ewz)->buf));
((exa)->ne) = (copy_((ewz)->ne));
((exa)->nf) = (copy_((ewz)->nf));
((exa)->ng) = (copy_((ewz)->ng));
((exa)->nh) = (copy_((ewz)->nh));
((exa)->ni) = (copy_((ewz)->ni));
((exa)->nj) = (copy_((ewz)->nj));
((exa)->nk) = (copy_((ewz)->nk));
((exa)->no) = ((ewz)->no);
((exa)->lw) = ((ewz)->lw);
return as_<cjq>(classTable_, (exa), 96);
}
// _toBin
static Array_<uint8_t>* exb(cjq* exc){
Array_<uint8_t>* exd = nullptr;
(exd) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(exd) = ((exd)->Cat(toBin_((exc)->buf)));
(exd) = ((exd)->Cat(toBin_((exc)->ne)));
(exd) = ((exd)->Cat(toBin_((exc)->nf)));
(exd) = ((exd)->Cat(toBin_((exc)->ng)));
(exd) = ((exd)->Cat(toBin_((exc)->nh)));
(exd) = ((exd)->Cat(toBin_((exc)->ni)));
(exd) = ((exd)->Cat(toBin_((exc)->nj)));
(exd) = ((exd)->Cat(toBin_((exc)->nk)));
(exd) = ((exd)->Cat(toBin_((exc)->no)));
(exd) = ((exd)->Cat(toBin_((exc)->lw)));
return exd;
}
// _fromBin
static cjq* exo(cjq* exp, Array_<uint8_t>* exq, int64_t* exr){
cjq* exs = nullptr;
(exs) = (new cjq());
((exs)->buf) = (fromBin_<gb*>((exq), (*exr)));
((exs)->ne) = (fromBin_<ga*>((exq), (*exr)));
((exs)->nf) = (fromBin_<Array_<char16_t>*>((exq), (*exr)));
((exs)->ng) = (fromBin_<fx*>((exq), (*exr)));
((exs)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((exq), (*exr)));
((exs)->ni) = (fromBin_<Array_<char16_t>*>((exq), (*exr)));
((exs)->nj) = (fromBin_<fx*>((exq), (*exr)));
((exs)->nk) = (fromBin_<fy*>((exq), (*exr)));
((exs)->no) = (fromBin_<bool>((exq), (*exr)));
((exs)->lw) = (fromBin_<int64_t>((exq), (*exr)));
return exs;
}
// _dtor
static void ext(cjp* exu){
((exu)->ewe) = (nullptr);
((exu)->ewg) = (nullptr);
((exu)->buf) = (nullptr);
((exu)->ne) = (nullptr);
((exu)->nf) = (nullptr);
((exu)->ng) = (nullptr);
((exu)->nh) = (nullptr);
((exu)->ni) = (nullptr);
((exu)->nj) = (nullptr);
((exu)->nk) = (nullptr);
}
// _copy
static cjp* exv(cjp* exw){
cjp* exx = nullptr;
(exx) = (new cjp());
((exx)->ewe) = (copy_((exw)->ewe));
((exx)->ewm) = ((exw)->ewm);
((exx)->ewg) = (copy_((exw)->ewg));
((exx)->buf) = (copy_((exw)->buf));
((exx)->ne) = (copy_((exw)->ne));
((exx)->nf) = (copy_((exw)->nf));
((exx)->ng) = (copy_((exw)->ng));
((exx)->nh) = (copy_((exw)->nh));
((exx)->ni) = (copy_((exw)->ni));
((exx)->nj) = (copy_((exw)->nj));
((exx)->nk) = (copy_((exw)->nk));
((exx)->no) = ((exw)->no);
((exx)->lw) = ((exw)->lw);
return as_<cjp>(classTable_, (exx), 98);
}
// _toBin
static Array_<uint8_t>* exy(cjp* exz){
Array_<uint8_t>* eya = nullptr;
(eya) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eya) = ((eya)->Cat(toBin_((exz)->ewe)));
(eya) = ((eya)->Cat(toBin_((exz)->ewm)));
(eya) = ((eya)->Cat(toBin_((exz)->ewg)));
(eya) = ((eya)->Cat(toBin_((exz)->buf)));
(eya) = ((eya)->Cat(toBin_((exz)->ne)));
(eya) = ((eya)->Cat(toBin_((exz)->nf)));
(eya) = ((eya)->Cat(toBin_((exz)->ng)));
(eya) = ((eya)->Cat(toBin_((exz)->nh)));
(eya) = ((eya)->Cat(toBin_((exz)->ni)));
(eya) = ((eya)->Cat(toBin_((exz)->nj)));
(eya) = ((eya)->Cat(toBin_((exz)->nk)));
(eya) = ((eya)->Cat(toBin_((exz)->no)));
(eya) = ((eya)->Cat(toBin_((exz)->lw)));
return eya;
}
// _fromBin
static cjp* eyo(cjp* eyp, Array_<uint8_t>* eyq, int64_t* eyr){
cjp* eys = nullptr;
(eys) = (new cjp());
((eys)->ewe) = (fromBin_<gd*>((eyq), (*eyr)));
((eys)->ewm) = (fromBin_<bool>((eyq), (*eyr)));
((eys)->ewg) = (fromBin_<List_<ge*>*>((eyq), (*eyr)));
((eys)->buf) = (fromBin_<gb*>((eyq), (*eyr)));
((eys)->ne) = (fromBin_<ga*>((eyq), (*eyr)));
((eys)->nf) = (fromBin_<Array_<char16_t>*>((eyq), (*eyr)));
((eys)->ng) = (fromBin_<fx*>((eyq), (*eyr)));
((eys)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eyq), (*eyr)));
((eys)->ni) = (fromBin_<Array_<char16_t>*>((eyq), (*eyr)));
((eys)->nj) = (fromBin_<fx*>((eyq), (*eyr)));
((eys)->nk) = (fromBin_<fy*>((eyq), (*eyr)));
((eys)->no) = (fromBin_<bool>((eyq), (*eyr)));
((eys)->lw) = (fromBin_<int64_t>((eyq), (*eyr)));
return eys;
}
// buildFor
static void cjs(cjt* eyt /*ast*/, ge* eyu /*breakStat*/, ge* eyv /*skipStat*/){
bby* eyw = nullptr; // infoMe
bby* eyx = nullptr; // info
Array_<char16_t>* eza = nullptr; // endId
int64_t ezf = 0; // step
(eyw) = ((bbx)((eyt)));
(eyx) = ((bbx)(((eyt)->buf)));
if(!((eyx)->bca)){
((eyx)->bca) = (true);
uh<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), ((eyt)->buf));
}
(eza) = ((ezb)((((eyt)->ezc)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0066', u'\u006F', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((eyx)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0020', u'\u003D', u'\u0020', u'\u0028'))));
(epf)(((eyt)->ezd));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>((eza), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0020', u'\u003D', u'\u0020', u'\u0028'))));
(epf)(((eyt)->ezc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u0020'))->Cat(v<Array_<char16_t>*>(((eyx)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0020'))));
if(!(((((eyt)->eze)->lw) == (67585LL)) && ((bdg)((((eyt)->ezc)->pf))))){
throw 0xE9170000U;
}
(ezf) = (static_cast<int64_t>((as_<bvp>(classTable_, ((eyt)->eze), 70))->bvr));
if((ezf) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003C', u'\u003D')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003E', u'\u003D')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>((eza), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003B', u'\u0020'))->Cat(v<Array_<char16_t>*>(((eyx)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0020')))));
if((ezf) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u002B', u'\u003D', u'\u0020', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u002D', u'\u003D', u'\u0020', u'\u0028')));
}
(epf)(((eyt)->eze));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
(bex)(((eyt)->ezm), (eyt), (eyt));
if((!eqAddr_(((eyw)->bzc), (nullptr))) && ((eyw)->bzg)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((eyw)->bzc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if((!eqAddr_(((eyw)->byz), (nullptr))) && ((eyw)->bzf)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((eyw)->byz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void ezr(cjt* ezs){
((ezs)->ezd) = (nullptr);
((ezs)->ezc) = (nullptr);
((ezs)->eze) = (nullptr);
((ezs)->ezm) = (nullptr);
((ezs)->buf) = (nullptr);
((ezs)->ne) = (nullptr);
((ezs)->nf) = (nullptr);
((ezs)->ng) = (nullptr);
((ezs)->nh) = (nullptr);
((ezs)->ni) = (nullptr);
((ezs)->nj) = (nullptr);
((ezs)->nk) = (nullptr);
}
// _copy
static cjt* ezt(cjt* ezu){
cjt* ezv = nullptr;
(ezv) = (new cjt());
((ezv)->ezd) = (copy_((ezu)->ezd));
((ezv)->ezc) = (copy_((ezu)->ezc));
((ezv)->eze) = (copy_((ezu)->eze));
((ezv)->ezm) = (copy_((ezu)->ezm));
((ezv)->buf) = (copy_((ezu)->buf));
((ezv)->ne) = (copy_((ezu)->ne));
((ezv)->nf) = (copy_((ezu)->nf));
((ezv)->ng) = (copy_((ezu)->ng));
((ezv)->nh) = (copy_((ezu)->nh));
((ezv)->ni) = (copy_((ezu)->ni));
((ezv)->nj) = (copy_((ezu)->nj));
((ezv)->nk) = (copy_((ezu)->nk));
((ezv)->no) = ((ezu)->no);
((ezv)->lw) = ((ezu)->lw);
return as_<cjt>(classTable_, (ezv), 100);
}
// _toBin
static Array_<uint8_t>* ezw(cjt* ezx){
Array_<uint8_t>* ezy = nullptr;
(ezy) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->ezd)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->ezc)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->eze)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->ezm)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->buf)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->ne)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->nf)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->ng)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->nh)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->ni)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->nj)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->nk)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->no)));
(ezy) = ((ezy)->Cat(toBin_((ezx)->lw)));
return ezy;
}
// _fromBin
static cjt* fan(cjt* fao, Array_<uint8_t>* fap, int64_t* faq){
cjt* far = nullptr;
(far) = (new cjt());
((far)->ezd) = (fromBin_<gd*>((fap), (*faq)));
((far)->ezc) = (fromBin_<gd*>((fap), (*faq)));
((far)->eze) = (fromBin_<gd*>((fap), (*faq)));
((far)->ezm) = (fromBin_<List_<ge*>*>((fap), (*faq)));
((far)->buf) = (fromBin_<gb*>((fap), (*faq)));
((far)->ne) = (fromBin_<ga*>((fap), (*faq)));
((far)->nf) = (fromBin_<Array_<char16_t>*>((fap), (*faq)));
((far)->ng) = (fromBin_<fx*>((fap), (*faq)));
((far)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fap), (*faq)));
((far)->ni) = (fromBin_<Array_<char16_t>*>((fap), (*faq)));
((far)->nj) = (fromBin_<fx*>((fap), (*faq)));
((far)->nk) = (fromBin_<fy*>((fap), (*faq)));
((far)->no) = (fromBin_<bool>((fap), (*faq)));
((far)->lw) = (fromBin_<int64_t>((fap), (*faq)));
return far;
}
// buildTry
static void cjv(btu* fas /*ast*/, ge* fat /*breakStat*/, ge* fau /*skipStat*/){
bby* fav = nullptr; // infoMe
bby* faw = nullptr; // info
bool fbe = false; // first
List_<btx*>* fbf = nullptr; // items
btx* fbh = nullptr; // item
bool fbl = false; // first2
List_<bty*>* fbm = nullptr; // items2
bty* fbo = nullptr; // exprs
(fav) = ((bbx)((fas)));
(faw) = ((bbx)(((fas)->buf)));
if(!((faw)->bca)){
((faw)->bca) = (true);
uh<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), ((fas)->buf));
}
if(!eqAddr_(((fas)->bun), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
(cka)(((fas)->buj), (fat), (fau));
if(!eqAddr_(((fas)->bun), (nullptr))){
(cka)(((fas)->bun), (fat), (fau));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((faw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
(fbe) = (true);
(fbf) = ((fas)->buk);
awe<List_<btx*>*>((fbf), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<btx*>*>((fbf), (new Array_<int64_t>(1, (0LL)))))){
(fbh) = (awi<List_<btx*>*, btx*>((fbf), (new Array_<int64_t>(1, (0LL)))));
if(fbe){
(fbe) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(fbl) = (true);
(fbm) = ((fbh)->bvh);
awe<List_<bty*>*>((fbm), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bty*>*>((fbm), (new Array_<int64_t>(1, (0LL)))))){
(fbo) = (awi<List_<bty*>*, bty*>((fbm), (new Array_<int64_t>(1, (0LL)))));
if(fbl){
(fbl) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0020', u'\u007C', u'\u007C', u'\u0020')));
}
if(eqAddr_(((fbo)->bvz), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((faw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0028'))));
(epf)(((fbo)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((fbo)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((faw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0020', u'\u0026', u'\u0026', u'\u0020'))->Cat(v<Array_<char16_t>*>(((faw)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0028')))));
(epf)(((fbo)->bvz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ays<List_<bty*>*>((fbm), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(cka)(((fbh)->bvk), (fat), (fau));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<btx*>*>((fbf), (new Array_<int64_t>(1, (0LL))));
}
if(fbe){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007B', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u003B', u'\u000A', u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if(!eqAddr_(((fas)->bun), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u007D', u'\u000A', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
(cka)(((fas)->bun), (fat), (fau));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u003B', u'\u000A', u'\u007D', u'\u000A')));
}
if((!eqAddr_(((fav)->byz), (nullptr))) && ((fav)->bzf)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fav)->byz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// buildThrow
static void cjx(cjy* fcc /*ast*/){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020')));
(epf)(((fcc)->fcd));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// _dtor
static void fce(cjy* fcf){
((fcf)->fcd) = (nullptr);
((fcf)->ne) = (nullptr);
((fcf)->nf) = (nullptr);
((fcf)->ng) = (nullptr);
((fcf)->nh) = (nullptr);
((fcf)->ni) = (nullptr);
((fcf)->nj) = (nullptr);
((fcf)->nk) = (nullptr);
}
// _copy
static cjy* fcg(cjy* fch){
cjy* fci = nullptr;
(fci) = (new cjy());
((fci)->fcd) = (copy_((fch)->fcd));
((fci)->ne) = (copy_((fch)->ne));
((fci)->nf) = (copy_((fch)->nf));
((fci)->ng) = (copy_((fch)->ng));
((fci)->nh) = (copy_((fch)->nh));
((fci)->ni) = (copy_((fch)->ni));
((fci)->nj) = (copy_((fch)->nj));
((fci)->nk) = (copy_((fch)->nk));
((fci)->no) = ((fch)->no);
((fci)->lw) = ((fch)->lw);
return as_<cjy>(classTable_, (fci), 102);
}
// _toBin
static Array_<uint8_t>* fcj(cjy* fck){
Array_<uint8_t>* fcl = nullptr;
(fcl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fcl) = ((fcl)->Cat(toBin_((fck)->fcd)));
(fcl) = ((fcl)->Cat(toBin_((fck)->ne)));
(fcl) = ((fcl)->Cat(toBin_((fck)->nf)));
(fcl) = ((fcl)->Cat(toBin_((fck)->ng)));
(fcl) = ((fcl)->Cat(toBin_((fck)->nh)));
(fcl) = ((fcl)->Cat(toBin_((fck)->ni)));
(fcl) = ((fcl)->Cat(toBin_((fck)->nj)));
(fcl) = ((fcl)->Cat(toBin_((fck)->nk)));
(fcl) = ((fcl)->Cat(toBin_((fck)->no)));
(fcl) = ((fcl)->Cat(toBin_((fck)->lw)));
return fcl;
}
// _fromBin
static cjy* fcw(cjy* fcx, Array_<uint8_t>* fcy, int64_t* fcz){
cjy* fda = nullptr;
(fda) = (new cjy());
((fda)->fcd) = (fromBin_<gd*>((fcy), (*fcz)));
((fda)->ne) = (fromBin_<ga*>((fcy), (*fcz)));
((fda)->nf) = (fromBin_<Array_<char16_t>*>((fcy), (*fcz)));
((fda)->ng) = (fromBin_<fx*>((fcy), (*fcz)));
((fda)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fcy), (*fcz)));
((fda)->ni) = (fromBin_<Array_<char16_t>*>((fcy), (*fcz)));
((fda)->nj) = (fromBin_<fx*>((fcy), (*fcz)));
((fda)->nk) = (fromBin_<fy*>((fcy), (*fcz)));
((fda)->no) = (fromBin_<bool>((fcy), (*fcz)));
((fda)->lw) = (fromBin_<int64_t>((fcy), (*fcz)));
return fda;
}
// buildBlock
static void cka(btw* fdb /*ast*/, ge* fdc /*breakStat*/, ge* fdd /*skipStat*/){
bby* fde = nullptr; // infoMe
(fde) = ((bbx)((fdb)));
(bex)(((fdb)->bui), (fdc), (fdd));
if((!eqAddr_(((fde)->byz), (nullptr))) && ((fde)->bzf)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fde)->byz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// buildRet
static void ckc(ckd* fdh /*ast*/){
if(eqAddr_(((fdh)->fdj), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020')));
(epf)(((fdh)->fdj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
}
// _dtor
static void fdm(ckd* fdn){
((fdn)->fdj) = (nullptr);
((fdn)->ne) = (nullptr);
((fdn)->nf) = (nullptr);
((fdn)->ng) = (nullptr);
((fdn)->nh) = (nullptr);
((fdn)->ni) = (nullptr);
((fdn)->nj) = (nullptr);
((fdn)->nk) = (nullptr);
}
// _copy
static ckd* fdo(ckd* fdp){
ckd* fdq = nullptr;
(fdq) = (new ckd());
((fdq)->fdj) = (copy_((fdp)->fdj));
((fdq)->ne) = (copy_((fdp)->ne));
((fdq)->nf) = (copy_((fdp)->nf));
((fdq)->ng) = (copy_((fdp)->ng));
((fdq)->nh) = (copy_((fdp)->nh));
((fdq)->ni) = (copy_((fdp)->ni));
((fdq)->nj) = (copy_((fdp)->nj));
((fdq)->nk) = (copy_((fdp)->nk));
((fdq)->no) = ((fdp)->no);
((fdq)->lw) = ((fdp)->lw);
return as_<ckd>(classTable_, (fdq), 104);
}
// _toBin
static Array_<uint8_t>* fdr(ckd* fds){
Array_<uint8_t>* fdt = nullptr;
(fdt) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fdt) = ((fdt)->Cat(toBin_((fds)->fdj)));
(fdt) = ((fdt)->Cat(toBin_((fds)->ne)));
(fdt) = ((fdt)->Cat(toBin_((fds)->nf)));
(fdt) = ((fdt)->Cat(toBin_((fds)->ng)));
(fdt) = ((fdt)->Cat(toBin_((fds)->nh)));
(fdt) = ((fdt)->Cat(toBin_((fds)->ni)));
(fdt) = ((fdt)->Cat(toBin_((fds)->nj)));
(fdt) = ((fdt)->Cat(toBin_((fds)->nk)));
(fdt) = ((fdt)->Cat(toBin_((fds)->no)));
(fdt) = ((fdt)->Cat(toBin_((fds)->lw)));
return fdt;
}
// _fromBin
static ckd* fee(ckd* fef, Array_<uint8_t>* feg, int64_t* feh){
ckd* fei = nullptr;
(fei) = (new ckd());
((fei)->fdj) = (fromBin_<gd*>((feg), (*feh)));
((fei)->ne) = (fromBin_<ga*>((feg), (*feh)));
((fei)->nf) = (fromBin_<Array_<char16_t>*>((feg), (*feh)));
((fei)->ng) = (fromBin_<fx*>((feg), (*feh)));
((fei)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((feg), (*feh)));
((fei)->ni) = (fromBin_<Array_<char16_t>*>((feg), (*feh)));
((fei)->nj) = (fromBin_<fx*>((feg), (*feh)));
((fei)->nk) = (fromBin_<fy*>((feg), (*feh)));
((fei)->no) = (fromBin_<bool>((feg), (*feh)));
((fei)->lw) = (fromBin_<int64_t>((feg), (*feh)));
return fei;
}
// buildDo
static void ckf(buu* fej /*ast*/){
(epf)(((fej)->bve));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// buildBreak
static void ckh(ge* fek /*ast*/, ge* fel /*breakStat*/){
bby* fep = nullptr; // info
if(!((aye<int64_t>((((fek)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
throw 0xE9170000U;
}
if(eqAddr_(((fek)->nj), (fel))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
}
else{
(fep) = ((bbx)(((fek)->nj)));
((fep)->bzf) = (true);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0067', u'\u006F', u'\u0074', u'\u006F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fep)->byz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
}
// buildSkip
static void ckj(ge* feq /*ast*/, ge* fer /*skipStat*/){
bby* fev = nullptr; // info
if(!((aye<int64_t>((((feq)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (16843264LL))) == (16843264LL))){
throw 0xE9170000U;
}
if(eqAddr_(((feq)->nj), (fer))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0069', u'\u006E', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else{
(fev) = ((bbx)(((feq)->nj)));
((fev)->bzg) = (true);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0067', u'\u006F', u'\u0074', u'\u006F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fev)->bzc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
}
// buildAssert
static void ckl(ckm* few /*ast*/){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u0028')));
(epf)(((few)->fex));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u0029', u'\u0029', u'\u007B', u'\u000A', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020'))->Cat(v<uint32_t>((0xE9170000U), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0055', u'\u003B', u'\u000A', u'\u007D', u'\u000A'))));
}
// _dtor
static void fey(ckm* fez){
((fez)->fex) = (nullptr);
((fez)->ne) = (nullptr);
((fez)->nf) = (nullptr);
((fez)->ng) = (nullptr);
((fez)->nh) = (nullptr);
((fez)->ni) = (nullptr);
((fez)->nj) = (nullptr);
((fez)->nk) = (nullptr);
}
// _copy
static ckm* ffa(ckm* ffb){
ckm* ffc = nullptr;
(ffc) = (new ckm());
((ffc)->fex) = (copy_((ffb)->fex));
((ffc)->ne) = (copy_((ffb)->ne));
((ffc)->nf) = (copy_((ffb)->nf));
((ffc)->ng) = (copy_((ffb)->ng));
((ffc)->nh) = (copy_((ffb)->nh));
((ffc)->ni) = (copy_((ffb)->ni));
((ffc)->nj) = (copy_((ffb)->nj));
((ffc)->nk) = (copy_((ffb)->nk));
((ffc)->no) = ((ffb)->no);
((ffc)->lw) = ((ffb)->lw);
return as_<ckm>(classTable_, (ffc), 106);
}
// _toBin
static Array_<uint8_t>* ffd(ckm* ffe){
Array_<uint8_t>* fff = nullptr;
(fff) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fff) = ((fff)->Cat(toBin_((ffe)->fex)));
(fff) = ((fff)->Cat(toBin_((ffe)->ne)));
(fff) = ((fff)->Cat(toBin_((ffe)->nf)));
(fff) = ((fff)->Cat(toBin_((ffe)->ng)));
(fff) = ((fff)->Cat(toBin_((ffe)->nh)));
(fff) = ((fff)->Cat(toBin_((ffe)->ni)));
(fff) = ((fff)->Cat(toBin_((ffe)->nj)));
(fff) = ((fff)->Cat(toBin_((ffe)->nk)));
(fff) = ((fff)->Cat(toBin_((ffe)->no)));
(fff) = ((fff)->Cat(toBin_((ffe)->lw)));
return fff;
}
// _fromBin
static ckm* ffq(ckm* ffr, Array_<uint8_t>* ffs, int64_t* fft){
ckm* ffu = nullptr;
(ffu) = (new ckm());
((ffu)->fex) = (fromBin_<gd*>((ffs), (*fft)));
((ffu)->ne) = (fromBin_<ga*>((ffs), (*fft)));
((ffu)->nf) = (fromBin_<Array_<char16_t>*>((ffs), (*fft)));
((ffu)->ng) = (fromBin_<fx*>((ffs), (*fft)));
((ffu)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ffs), (*fft)));
((ffu)->ni) = (fromBin_<Array_<char16_t>*>((ffs), (*fft)));
((ffu)->nj) = (fromBin_<fx*>((ffs), (*fft)));
((ffu)->nk) = (fromBin_<fy*>((ffs), (*fft)));
((ffu)->no) = (fromBin_<bool>((ffs), (*fft)));
((ffu)->lw) = (fromBin_<int64_t>((ffs), (*fft)));
return ffu;
}
// isNullable
static bool ckw(gc* ffv /*type*/){
return ((aye<int64_t>(((ffv)->lw), (new Array_<int64_t>(1, (0LL))), (66560LL))) == (66560LL)) && (!((clb)((ffv))));
}
// isEnum
static bool clb(gc* ffw /*type*/){
return (((ffw)->lw) == (66565LL)) && ((((ffw)->nj)->lw) == (6LL));
}
// getId
static Array_<char16_t>* cqm(){
Array_<char16_t>* ffx = nullptr; // curId
Array_<char16_t>* ffy = nullptr; // newId
int64_t fgc = 0; // idx
char16_t fgh = 0;
int64_t fgr = 0;
Array_<char16_t>* fgu = nullptr;
Array_<char16_t>* fgy = nullptr;
Array_<char16_t>* fhc = nullptr;
(ffx) = (bk);
(ffy) = (copy_(bk));
while(true){
(fgc) = (((ffy)->Len()) - (1LL));
while(true){
switch((ffy)->At(fgc)){
case u'\u007A':
((ffy)->At(fgc)) = (((fgc) == (0LL)) ? (u'\u0041') : (u'\u0030'));
break;
case u'\u0039':
((ffy)->At(fgc)) = (u'\u0041');
break;
case u'\u005A':
if((fgc) == (0LL)){
(ffy) = (newArray_<char16_t, Array_<char16_t>*>(1, (((ffy)->Len()) + (1LL))));
eht<Array_<char16_t>*, char16_t>((ffy), (new Array_<int64_t>(1, (0LL))), (u'\u0061'));
}
else{
((ffy)->At(fgc)) = (u'\u0061');
(fgc) = ((fgc) - (1LL));
continue;
}
break;
default:
((ffy)->At(fgc)) = ((ehx)(((ffy)->At(fgc)), (1LL)));
break;
}
break;
}
switch((ffy)->Len()){
case 2LL:
fgu = ffy;
if(cmp_(fgu, (new Array_<char16_t>(2, u'\u0064', u'\u006F'))) == 0 || cmp_(fgu, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0 || cmp_(fgu, (new Array_<char16_t>(2, u'\u0069', u'\u006E'))) == 0){
continue;
}
break;
case 3LL:
fgy = ffy;
if(cmp_(fgy, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0 || cmp_(fgy, (new Array_<char16_t>(3, u'\u006C', u'\u0065', u'\u0074'))) == 0 || cmp_(fgy, (new Array_<char16_t>(3, u'\u006E', u'\u0065', u'\u0077'))) == 0 || cmp_(fgy, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0 || cmp_(fgy, (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0 || cmp_(fgy, (new Array_<char16_t>(3, u'\u004D', u'\u0061', u'\u0070'))) == 0 || cmp_(fgy, (new Array_<char16_t>(3, u'\u004E', u'\u0061', u'\u004E'))) == 0 || cmp_(fgy, (new Array_<char16_t>(3, u'\u0053', u'\u0065', u'\u0074'))) == 0){
continue;
}
break;
case 4LL:
fhc = ffy;
if(cmp_(fhc, (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u0065', u'\u0076', u'\u0061', u'\u006C'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u006E', u'\u0061', u'\u006D', u'\u0065'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u0074', u'\u0068', u'\u0069', u'\u0073'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u0076', u'\u006F', u'\u0069', u'\u0064'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u0077', u'\u0069', u'\u0074', u'\u0068'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u0044', u'\u0061', u'\u0074', u'\u0065'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u0049', u'\u006E', u'\u0074', u'\u006C'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u004A', u'\u0053', u'\u004F', u'\u004E'))) == 0 || cmp_(fhc, (new Array_<char16_t>(4, u'\u004D', u'\u0061', u'\u0074', u'\u0068'))) == 0){
continue;
}
break;
}
break;
}
(bk) = (ffy);
return ffx;
}
// search
static biw* cvv(List_<um*>* fhe /*members*/, Array_<char16_t>* fhf /*name*/){
fx* fhh = nullptr; // def
awe<List_<um*>*>((fhe), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((fhe), (new Array_<int64_t>(1, (0LL)))))){
(fhh) = ((awi<List_<um*>*, um*>((fhe), (new Array_<int64_t>(1, (0LL)))))->azl);
if(((((fhh)->lw) == (2LL)) && (!eqAddr_((((as_<bgi>(classTable_, (fhh), 38))->bgk)->nf), (nullptr)))) && (cmp_((((as_<bgi>(classTable_, (fhh), 38))->bgk)->nf), (fhf)) == 0)){
return (biv)(((as_<bgi>(classTable_, (fhh), 38))->bgk));
}
ays<List_<um*>*>((fhe), (new Array_<int64_t>(1, (0LL))));
}
if(!(false)){
throw 0xE9170000U;
}
return nullptr;
}
// buildIf
static void cyf(cjh* fhk /*ast*/){
biw* fhl = nullptr; // infoMe
List_<cji*>* fhw = nullptr; // items
cji* fhy = nullptr; // item
(fhl) = ((biv)((fhk)));
if(eqAddr_(((fhk)->epa), (nullptr))){
if(!eqAddr_(((fhl)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fhl)->cqp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u007B', u'\u000A'))));
}
(cyr)(((fhk)->epc));
if(!eqAddr_(((fhl)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
return;
}
if(!eqAddr_(((fhl)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fhl)->cqp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
(fhu)(((fhk)->epa));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(cyr)(((fhk)->epc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(fhw) = ((fhk)->epi);
awe<List_<cji*>*>((fhw), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cji*>*>((fhw), (new Array_<int64_t>(1, (0LL)))))){
(fhy) = (awi<List_<cji*>*, cji*>((fhw), (new Array_<int64_t>(1, (0LL)))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
(fhu)(((fhy)->epl));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(cyr)(((fhy)->epm));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<cji*>*>((fhw), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((fhk)->epo), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
(cyr)(((fhk)->epo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
// buildSwitch
static void cyh(cjl* fib /*ast*/){
biw* fic = nullptr; // infoMe
biw* fid = nullptr; // info
bool fig = false; // useSwitch
List_<cjm*>* fik = nullptr; // items
cjm* fim = nullptr; // item
List_<bty*>* fin = nullptr; // items2
bty* fip = nullptr; // exprs
List_<cjm*>* fix = nullptr; // items
cjm* fiz = nullptr; // item
List_<bty*>* fja = nullptr; // items2
bty* fjc = nullptr; // exprs
bool fjj = false; // first
List_<cjm*>* fjk = nullptr; // items
cjm* fjm = nullptr; // item
bool fjq = false; // first2
List_<bty*>* fjr = nullptr; // items2
bty* fjt = nullptr; // exprs
(fic) = ((biv)((fib)));
(fid) = ((biv)(((fib)->buf)));
if(!((fid)->biy)){
((fid)->biy) = (true);
uh<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), ((fib)->buf));
}
(fig) = (false);
if(((((bdg)((((fib)->esb)->pf))) || ((esc)((((fib)->esb)->pf)))) || ((clb)((((fib)->esb)->pf)))) || (((((fib)->esb)->pf)->lw) == (1025LL))){
(fig) = (true);
(fik) = ((fib)->esf);
awe<List_<cjm*>*>((fik), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cjm*>*>((fik), (new Array_<int64_t>(1, (0LL)))))){
(fim) = (awi<List_<cjm*>*, cjm*>((fik), (new Array_<int64_t>(1, (0LL)))));
(fin) = ((fim)->esj);
awe<List_<bty*>*>((fin), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bty*>*>((fin), (new Array_<int64_t>(1, (0LL)))))){
(fip) = (awi<List_<bty*>*, bty*>((fin), (new Array_<int64_t>(1, (0LL)))));
if(((aye<int64_t>((((fip)->bvu)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL)) || (!eqAddr_(((fip)->bvz), (nullptr)))){
(fig) = (false);
goto fii;
}
ays<List_<bty*>*>((fin), (new Array_<int64_t>(1, (0LL))));
}
ays<List_<cjm*>*>((fik), (new Array_<int64_t>(1, (0LL))));
}
}
fii:;
if(fig){
if(!eqAddr_(((fic)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fic)->cqp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028')));
(fhu)(((fib)->esb));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(fix) = ((fib)->esf);
awe<List_<cjm*>*>((fix), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cjm*>*>((fix), (new Array_<int64_t>(1, (0LL)))))){
(fiz) = (awi<List_<cjm*>*, cjm*>((fix), (new Array_<int64_t>(1, (0LL)))));
(fja) = ((fiz)->esj);
awe<List_<bty*>*>((fja), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bty*>*>((fja), (new Array_<int64_t>(1, (0LL)))))){
(fjc) = (awi<List_<bty*>*, bty*>((fja), (new Array_<int64_t>(1, (0LL)))));
if(!(eqAddr_(((fjc)->bvz), (nullptr)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020')));
(fhu)(((fjc)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003A', u'\u000A')));
ays<List_<bty*>*>((fja), (new Array_<int64_t>(1, (0LL))));
}
(cyr)(((fiz)->esx));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
ays<List_<cjm*>*>((fix), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((fib)->esz), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
(cyr)(((fib)->esz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else{
if(!eqAddr_(((fic)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fic)->cqp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u007B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fid)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003D'))));
(fhu)(((fib)->esb));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
(fjj) = (true);
(fjk) = ((fib)->esf);
awe<List_<cjm*>*>((fjk), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cjm*>*>((fjk), (new Array_<int64_t>(1, (0LL)))))){
(fjm) = (awi<List_<cjm*>*, cjm*>((fjk), (new Array_<int64_t>(1, (0LL)))));
if(fjj){
(fjj) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(fjq) = (true);
(fjr) = ((fjm)->esj);
awe<List_<bty*>*>((fjr), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bty*>*>((fjr), (new Array_<int64_t>(1, (0LL)))))){
(fjt) = (awi<List_<bty*>*, bty*>((fjr), (new Array_<int64_t>(1, (0LL)))));
if(fjq){
(fjq) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007C', u'\u007C')));
}
if(eqAddr_(((fjt)->bvz), (nullptr))){
if((fka)((((fib)->esb)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fid)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0053', u'\u003D', u'\u003D', u'\u003D', u'\u0028'))));
(fhu)(((fjt)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byj)((((fib)->esb)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fid)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0028'))));
(fhu)(((fjt)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003D', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fid)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u003D', u'\u003D', u'\u003D', u'\u0028'))));
(fhu)(((fjt)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((fjt)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003C', u'\u003D'))->Cat(v<Array_<char16_t>*>(((fid)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((fid)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003C', u'\u003D', u'\u0028')))));
(fhu)(((fjt)->bvz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ays<List_<bty*>*>((fjr), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(cyr)(((fjm)->esx));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<cjm*>*>((fjk), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((fib)->esz), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B')));
(cyr)(((fib)->esz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
if(!eqAddr_(((fic)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
}
// buildWhile
static void cyj(cjp* fkj /*ast*/){
biw* fkk = nullptr; // infoMe
(fkk) = ((biv)((fkj)));
if(eqAddr_(((fkj)->ewe), (nullptr))){
if(!eqAddr_(((fkk)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fkk)->cqp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u003B', u'\u003B', u'\u0029', u'\u007B', u'\u000A')));
(bki)(((fkj)->ewg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
return;
}
if((fkj)->ewm){
if(!eqAddr_(((fkk)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fkk)->cqp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0064', u'\u006F', u'\u007B', u'\u000A')));
(bki)(((fkj)->ewg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(fhu)(((fkj)->ewe));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')));
return;
}
if(!eqAddr_(((fkk)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fkk)->cqp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(fhu)(((fkj)->ewe));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(bki)(((fkj)->ewg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
// buildFor
static void cyl(cjt* fkv /*ast*/){
biw* fkw = nullptr; // infoMe
biw* fkx = nullptr; // info
Array_<char16_t>* fla = nullptr; // endId
int64_t fle = 0; // step
(fkw) = ((biv)((fkv)));
(fkx) = ((biv)(((fkv)->buf)));
if(!((fkx)->biy)){
((fkx)->biy) = (true);
uh<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), ((fkv)->buf));
}
(fla) = ((flb)((((fkv)->ezc)->pf)));
if(!eqAddr_(((fkw)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fkw)->cqp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0066', u'\u006F', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fkx)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(fhu)(((fkv)->ezd));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u002C'))->Cat(v<Array_<char16_t>*>((fla), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(fhu)(((fkv)->ezc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u003B'))->Cat(v<Array_<char16_t>*>(((fkx)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if(!(((((fkv)->eze)->lw) == (67585LL)) && ((bdg)((((fkv)->ezc)->pf))))){
throw 0xE9170000U;
}
(fle) = (static_cast<int64_t>((as_<bvp>(classTable_, ((fkv)->eze), 70))->bvr));
if((fle) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003C', u'\u003D')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003E', u'\u003D')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((fla), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003B'))->Cat(v<Array_<char16_t>*>(((fkx)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0)))));
if((fle) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002B', u'\u003D', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002D', u'\u003D', u'\u0028')));
}
(fhu)(((fkv)->eze));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
(bki)(((fkv)->ezm));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
// buildTry
static void cyn(btu* fll /*ast*/){
biw* flm = nullptr; // infoMe
biw* fln = nullptr; // info
bool flt = false; // first
List_<btx*>* flu = nullptr; // items
btx* flw = nullptr; // item
bool fma = false; // first2
List_<bty*>* fmb = nullptr; // items2
bty* fmd = nullptr; // exprs
(flm) = ((biv)((fll)));
(fln) = ((biv)(((fll)->buf)));
if(!((fln)->biy)){
((fln)->biy) = (true);
uh<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), ((fll)->buf));
}
if(!eqAddr_(((flm)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((flm)->cqp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
(cyr)(((fll)->buj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fln)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
(flt) = (true);
(flu) = ((fll)->buk);
awe<List_<btx*>*>((flu), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<btx*>*>((flu), (new Array_<int64_t>(1, (0LL)))))){
(flw) = (awi<List_<btx*>*, btx*>((flu), (new Array_<int64_t>(1, (0LL)))));
if(flt){
(flt) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(fma) = (true);
(fmb) = ((flw)->bvh);
awe<List_<bty*>*>((fmb), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bty*>*>((fmb), (new Array_<int64_t>(1, (0LL)))))){
(fmd) = (awi<List_<bty*>*, bty*>((fmb), (new Array_<int64_t>(1, (0LL)))));
if(fma){
(fma) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007C', u'\u007C')));
}
if(eqAddr_(((fmd)->bvz), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fln)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u003D', u'\u003D', u'\u003D', u'\u0028'))));
(fhu)(((fmd)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((fmd)->bvu));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003C', u'\u003D'))->Cat(v<Array_<char16_t>*>(((fln)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((fln)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003C', u'\u003D', u'\u0028')))));
(fhu)(((fmd)->bvz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ays<List_<bty*>*>((fmb), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(cyr)(((flw)->bvk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<btx*>*>((flu), (new Array_<int64_t>(1, (0LL))));
}
if(flt){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007B', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fln)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u003B', u'\u000A', u'\u007D', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if(!eqAddr_(((fll)->bun), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u007B', u'\u000A')));
(cyr)(((fll)->bun));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
// buildThrow
static void cyp(cjy* fmp /*ast*/){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020')));
(fhu)(((fmp)->fcd));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// buildBlock
static void cyr(btw* fmq /*ast*/){
biw* fmr = nullptr; // infoMe
(fmr) = ((biv)((fmq)));
if(!eqAddr_(((fmr)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fmr)->cqp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u007B', u'\u000A'))));
}
(bki)(((fmq)->bui));
if(!eqAddr_(((fmr)->cqp), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
// buildRet
static void cyt(ckd* fmw /*ast*/){
if(eqAddr_(((fmw)->fdj), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020')));
(fhu)(((fmw)->fdj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
}
// buildDo
static void cyv(buu* fna /*ast*/){
(fhu)(((fna)->bve));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// buildBreak
static void cyx(ge* fnb /*ast*/){
biw* fnc = nullptr; // info
if(!((aye<int64_t>((((fnb)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
throw 0xE9170000U;
}
(fnc) = ((biv)(((fnb)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fnc)->cqp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
// buildSkip
static void cyz(ge* fnd /*ast*/){
biw* fne = nullptr; // info
if(!((aye<int64_t>((((fnd)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (16843264LL))) == (16843264LL))){
throw 0xE9170000U;
}
(fne) = ((biv)(((fnd)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0069', u'\u006E', u'\u0075', u'\u0065', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fne)->cqp), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
// buildAssert
static void czb(ckm* fnf /*ast*/){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u0028')));
(fhu)(((fnf)->fex));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0029', u'\u0029', u'\u007B', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020'))->Cat(v<uint32_t>((0xE9170000U), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003B', u'\u007D', u'\u000A'))));
}
// escapeChar
static Array_<char16_t>* dbc(char16_t fng /*c*/){
char16_t fni = 0;
fni = fng;
if(fni == (u'\u0022')){
return new Array_<char16_t>(2, u'\u005C', u'\u0022');
}
else if(fni == (u'\u0027')){
return new Array_<char16_t>(2, u'\u005C', u'\u0027');
}
else if(fni == (u'\u005C')){
return new Array_<char16_t>(2, u'\u005C', u'\u005C');
}
else if((u'\u0020') <= fni && fni <= (u'\u007E')){
return v<char16_t>((fng), (new Array_<int64_t>(1, (0LL))));
}
else{return ((new Array_<char16_t>(2, u'\u005C', u'\u0075'))->Cat(v<Array_<char16_t>*>((auw<Array_<char16_t>*>((v<uint16_t>((static_cast<uint16_t>(fng)), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))), (2LL), (-1LL))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0));
}
}
// initAstImpl
static void dcl(fx* fno /*ast*/, int64_t fnp /*typeId*/, ga* fnq /*pos*/, Array_<char16_t>* fnr /*name*/, bool fns /*setParent*/){
((fno)->lw) = (fnp);
((fno)->ne) = (fnq);
((fno)->nf) = (fnr);
((fno)->ng) = (nullptr);
((fno)->nh) = (nullptr);
((fno)->ni) = (nullptr);
((fno)->nj) = (nullptr);
((fno)->nk) = (nullptr);
((fno)->no) = (false);
if(!eqAddr_(((fno)->nf), (nullptr))){
(dhc)((fno), (true));
}
if(fns){
((fno)->ng) = (fnx<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))));
}
}
// readBuf
static char16_t dde(){
char16_t fod = 0; // c
if((ave) == (u'\u0000')){
if((avf) == (u'\u0000')){
do{
(fod) = (((bht)((be))) ? (u'\u0000') : ((bnu)((be))));
}while((fod) == (u'\u000D'));
if((fod) == (u'\u000A')){
(avc) = ((avc) + (1LL));
(avd) = (0LL);
}
else if((fod) == (u'\u0000')){
if(!(avg)){
(avg) = (true);
(fod) = (u'\u000A');
(avc) = ((avc) + (1LL));
(avd) = (0LL);
}
}
else{
(avd) = ((avd) + (1LL));
}
}
else{
(fod) = (avf);
(avf) = (u'\u0000');
}
}
else{
(fod) = (ave);
(ave) = (u'\u0000');
}
return fod;
}
// makePos
static ga* ddp(){
return (bpm)((bf), (avc), (avd));
}
// charToStr
static Array_<char16_t>* ddq(char16_t fop /*c*/){
char16_t fos = 0;
switch(fop){
case u'\u0000':
return new Array_<char16_t>(1, u'\u0020');
break;
case u'\u000D':
if(!(false)){
throw 0xE9170000U;
}
break;
case u'\u000A':
return new Array_<char16_t>(8, u'\u0028', u'\u0052', u'\u0045', u'\u0054', u'\u0055', u'\u0052', u'\u004E', u'\u0029');
break;
case u'\u0009':
case u'\u0020':
return new Array_<char16_t>(7, u'\u0028', u'\u0053', u'\u0050', u'\u0041', u'\u0043', u'\u0045', u'\u0029');
break;
}
return v<char16_t>((fop), (new Array_<int64_t>(1, (0LL))));
}
// addSrc
static void del(Array_<char16_t>* fox /*name*/){
bool foz = false;
if(eqAddr_((avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (fox), (&foz))), (nullptr))){
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (fox), (nullptr));
}
}
// readFuncAttr
static Array_<char16_t>* dff(){
char16_t fpb = 0; // c
Array_<char16_t>* fpe = nullptr; // buf
int64_t fpf = 0; // pos
(fpb) = ((bpo)());
if(!(((((((u'\u0061') <= (fpb)) && ((fpb) <= (u'\u007A'))) || (((u'\u0041') <= (fpb)) && ((fpb) <= (u'\u005A')))) || (((u'\u0030') <= (fpb)) && ((fpb) <= (u'\u0039')))) || ((fpb) == (u'\u005F'))) || ((fpb) == (u'\u002E')))){
(ad)((65548LL), ((ddp)()), (new Array_<Array_<char16_t>*>(1, ((ddq)((fpb))))));
return new Array_<char16_t>(0);
}
(fpe) = (newArray_<char16_t, Array_<char16_t>*>(1, (128LL)));
(fpf) = (0LL);
do{
if((fpf) == (128LL)){
(ad)((65549LL), ((ddp)()), (new Array_<Array_<char16_t>*>(1, (fpe))));
return new Array_<char16_t>(0);
}
((fpe)->At(fpf)) = (fpb);
(fpf) = ((fpf) + (1LL));
(fpb) = ((brb)());
}while(((((((u'\u0061') <= (fpb)) && ((fpb) <= (u'\u007A'))) || (((u'\u0041') <= (fpb)) && ((fpb) <= (u'\u005A')))) || (((u'\u0030') <= (fpb)) && ((fpb) <= (u'\u0039')))) || ((fpb) == (u'\u005F'))) || ((fpb) == (u'\u002E')));
(ave) = (fpb);
return auw<Array_<char16_t>*>((fpe), (new Array_<int64_t>(1, (0LL))), (0LL), (fpf));
}
// _or
template<typename T_> static T_ dfn(T_ fpk /*me_*/, Array_<int64_t>* fpl /*type*/, T_ fpm /*n*/){
return fpk | fpm;
}
// nextCharErr
static void dgt(char16_t fpn /*c*/, char16_t fpo /*c2*/){
(ad)((65550LL), ((ddp)()), (new Array_<Array_<char16_t>*>(2, ((ddq)((fpn))), ((ddq)((fpo))))));
(bra)((fpo));
}
// addScopeRefeds
static void dgx(fx* fpp /*ast*/, Array_<char16_t>* fpq /*name*/){
avl* fpr = nullptr; // scopeRefedItem
((fpp)->ni) = (fpq);
(fpr) = (new avl());
((fpr)->awk) = (fpp);
((fpr)->axf) = (fnx<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))));
uh<List_<avl*>*, avl*>((bh), (new Array_<int64_t>(1, (0LL))), (fpr));
}
// assertNextChar
static void dgy(char16_t fps /*c*/, bool fpt /*skipSpaces*/){
char16_t fpu = 0; // c2
(fpu) = ((fpt) ? ((bpo)()) : ((brb)()));
if((fps) != (fpu)){
(dgt)((fps), (fpu));
(ave) = (fpu);
}
}
// addScopeName
static void dhc(fx* fpx /*ast*/, bool fpy /*refuseReserved*/){
fx* fqc = nullptr; // scope
bool fqe = false;
fx* fqg = nullptr; // parent
bool fqh = false; // overFunc
fx* fqp = nullptr; // child
bool fqq = false;
bool fqt = false; // flag
int64_t fqy = 0; // kind
if(!(!eqAddr_(((fpx)->nf), (nullptr)))){
throw 0xE9170000U;
}
if((fpy) && ((fqa)(((fpx)->nf)))){
(ad)((65537LL), ((ddp)()), (new Array_<Array_<char16_t>*>(1, ((fpx)->nf))));
return;
}
(fqc) = (fnx<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))));
if(!eqAddr_((avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fqc)->nh), (new Array_<int64_t>(1, (0LL))), ((fpx)->nf), (&fqe))), (nullptr))){
(ad)((65537LL), ((ddp)()), (new Array_<Array_<char16_t>*>(1, ((fpx)->nf))));
}
(fqg) = (fqc);
(fqh) = (false);
while(true){
if(eqAddr_(((fqg)->ng), (nullptr))){
break;
}
if(((!eqAddr_(((fqg)->nf), (nullptr))) && (cmp_(((fqg)->nf), ((fpx)->nf)) == 0)) && (!((((fqg)->lw) == (256LL)) && (!eqAddr_(((fqg)->ni), (nullptr)))))){
(ad)((65538LL), ((ddp)()), (new Array_<Array_<char16_t>*>(1, ((fpx)->nf))));
return;
}
(fqp) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fqg)->nh), (new Array_<int64_t>(1, (0LL))), ((fpx)->nf), (&fqq)));
if(!eqAddr_((fqp), (nullptr))){
(fqt) = (false);
if(fqh){
if(((fqp)->lw) == (7LL)){
(fqy) = ((as_<gb>(classTable_, (fqp), 10))->qk);
if((((fqy) == (5LL)) || ((fqy) == (3LL))) || ((fqy) == (2LL))){
(fqt) = (true);
}
}
if((!(fqt)) && ((aye<int64_t>(((fqp)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
(fqt) = (true);
}
}
if(((!(fqt)) && (((fqp)->lw) == (256LL))) && (!eqAddr_(((fqp)->ni), (nullptr)))){
(fqt) = (true);
}
if(!(fqt)){
(ad)((65538LL), ((ddp)()), (new Array_<Array_<char16_t>*>(1, ((fpx)->nf))));
return;
}
}
if(((fqg)->lw) == (256LL)){
(fqh) = (true);
}
(fqg) = ((fqg)->ng);
}
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fqc)->nh), (new Array_<int64_t>(1, (0LL))), ((fpx)->nf), (fpx));
}
// _dtor
static void frj(dhf* frk){
((frk)->ne) = (nullptr);
((frk)->nf) = (nullptr);
((frk)->ng) = (nullptr);
((frk)->nh) = (nullptr);
((frk)->ni) = (nullptr);
((frk)->nj) = (nullptr);
((frk)->nk) = (nullptr);
}
// _copy
static dhf* frl(dhf* frm){
dhf* frn = nullptr;
(frn) = (new dhf());
((frn)->ne) = (copy_((frm)->ne));
((frn)->nf) = (copy_((frm)->nf));
((frn)->ng) = (copy_((frm)->ng));
((frn)->nh) = (copy_((frm)->nh));
((frn)->ni) = (copy_((frm)->ni));
((frn)->nj) = (copy_((frm)->nj));
((frn)->nk) = (copy_((frm)->nk));
((frn)->no) = ((frm)->no);
((frn)->lw) = ((frm)->lw);
return as_<dhf>(classTable_, (frn), 108);
}
// _toBin
static Array_<uint8_t>* fro(dhf* frp){
Array_<uint8_t>* frq = nullptr;
(frq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(frq) = ((frq)->Cat(toBin_((frp)->ne)));
(frq) = ((frq)->Cat(toBin_((frp)->nf)));
(frq) = ((frq)->Cat(toBin_((frp)->ng)));
(frq) = ((frq)->Cat(toBin_((frp)->nh)));
(frq) = ((frq)->Cat(toBin_((frp)->ni)));
(frq) = ((frq)->Cat(toBin_((frp)->nj)));
(frq) = ((frq)->Cat(toBin_((frp)->nk)));
(frq) = ((frq)->Cat(toBin_((frp)->no)));
(frq) = ((frq)->Cat(toBin_((frp)->lw)));
return frq;
}
// _fromBin
static dhf* fsa(dhf* fsb, Array_<uint8_t>* fsc, int64_t* fsd){
dhf* fse = nullptr;
(fse) = (new dhf());
((fse)->ne) = (fromBin_<ga*>((fsc), (*fsd)));
((fse)->nf) = (fromBin_<Array_<char16_t>*>((fsc), (*fsd)));
((fse)->ng) = (fromBin_<fx*>((fsc), (*fsd)));
((fse)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fsc), (*fsd)));
((fse)->ni) = (fromBin_<Array_<char16_t>*>((fsc), (*fsd)));
((fse)->nj) = (fromBin_<fx*>((fsc), (*fsd)));
((fse)->nk) = (fromBin_<fy*>((fsc), (*fsd)));
((fse)->no) = (fromBin_<bool>((fsc), (*fsd)));
((fse)->lw) = (fromBin_<int64_t>((fsc), (*fsd)));
return fse;
}
// parseArg
static gb* dhn(int64_t fsf /*kind*/, Array_<char16_t>* fsg /*parentClass*/){
gb* fsh = nullptr; // ast
char16_t fsl = 0; // c
char16_t fst = 0; // c
int64_t fsx = 0;
(fsh) = (new gb());
(bpl)((fsh), (7LL), ((ddp)()), ((bqf)((true), (false))), (false));
((fsh)->qk) = (fsf);
((fsh)->ql) = (false);
if(!eqAddr_((fsg), (nullptr))){
(dgx)((fsh), (fsg));
}
(dgy)((u'\u003A'), (true));
(fsl) = ((bpo)());
if((fsl) == (u'\u0026')){
if((fsf) != (2LL)){
(ad)((65556LL), ((ddp)()), (nullptr));
}
else{
((fsh)->ql) = (true);
}
}
else{
(ave) = (fsl);
}
((fsh)->qf) = ((dhy)());
(fst) = ((bpo)());
if((fst) == (u'\u003A')){
(dgy)((u'\u003A'), (false));
if(!((fsf) != (0LL))){
throw 0xE9170000U;
}
switch(fsf){
case 2LL:
(ad)((65557LL), ((ddp)()), (nullptr));
((fsh)->qg) = (nullptr);
break;
case 5LL:
(ad)((65558LL), ((ddp)()), (nullptr));
((fsh)->qg) = (nullptr);
break;
default:
((fsh)->qg) = ((dnd)());
break;
}
}
else{
if((fsf) == (4LL)){
(ad)((65559LL), ((ddp)()), (nullptr));
}
((fsh)->qg) = (nullptr);
(ave) = (fst);
}
return fsh;
}
// parseType
static gc* dhy(){
ga* fte = nullptr; // pos
gc* ftf = nullptr; // ast
char16_t ftg = 0; // c
cai* ftj = nullptr; // ast2
Array_<char16_t>* ftl = nullptr; // id
Array_<char16_t>* fto = nullptr; // size
cam* ftr = nullptr; // ast2
bool fts = false;
Array_<char16_t>* ftw = nullptr;
caq* fty = nullptr; // ast2
car* fue = nullptr; // arg
cbn* fut = nullptr; // ast2
cbn* fuv = nullptr; // ast2
cbn* fux = nullptr; // ast2
cby* fuz = nullptr; // ast2
bud* fvb = nullptr; // ast2
bud* fvd = nullptr; // ast2
bud* fvf = nullptr; // ast2
bud* fvh = nullptr; // ast2
dhf* fvj = nullptr; // ast2
(fte) = ((ddp)());
(ftf) = (nullptr);
(ftg) = ((bpo)());
if((ftg) == (u'\u005B')){
(dgy)((u'\u005D'), (true));
(ftj) = (new cai());
(bpl)((ftj), (66561LL), (fte), (nullptr), (false));
((ftj)->cak) = ((dhy)());
(ftf) = (ftj);
}
else{
(ave) = (ftg);
(ftl) = ((bqf)((true), (true)));
if((((((ftl)->Len()) >= (4LL)) && (((ftl)->At(0LL)) == (u'\u0062'))) && (((ftl)->At(1LL)) == (u'\u0069'))) && (((ftl)->At(2LL)) == (u'\u0074'))){
(fto) = (auw<Array_<char16_t>*>((ftl), (new Array_<int64_t>(1, (0LL))), (3LL), (((ftl)->Len()) - (3LL))));
if((((cmp_((fto), (new Array_<char16_t>(1, u'\u0038'))) == 0) || (cmp_((fto), (new Array_<char16_t>(2, u'\u0031', u'\u0036'))) == 0)) || (cmp_((fto), (new Array_<char16_t>(2, u'\u0033', u'\u0032'))) == 0)) || (cmp_((fto), (new Array_<char16_t>(2, u'\u0036', u'\u0034'))) == 0)){
(ftr) = (new cam());
(bpl)((ftr), (1025LL), (fte), (nullptr), (false));
((ftr)->can) = (((eq)((fto), (&fts))) / (8LL));
(ftf) = (ftr);
}
}
if(eqAddr_((ftf), (nullptr))){
ftw = ftl;
if(cmp_(ftw, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
(dgy)((u'\u003C'), (true));
(dgy)((u'\u0028'), (true));
(fty) = (new caq());
(bpl)((fty), (66562LL), (fte), (nullptr), (false));
((fty)->elx) = (0LL);
((fty)->elt) = (new List_<Array_<char16_t>*>());
((fty)->cay) = (new List_<car*>());
((fty)->cat) = (nullptr);
(ftg) = ((bpo)());
if((ftg) != (u'\u0029')){
(ave) = (ftg);
while(true){
(fue) = (new car());
(ftg) = ((bpo)());
if((ftg) == (u'\u0000')){
break;
}
if((ftg) == (u'\u0026')){
((fue)->cbi) = (true);
}
else{
((fue)->cbi) = (false);
(ave) = (ftg);
}
((fue)->cbg) = ((dhy)());
uh<List_<car*>*, car*>(((fty)->cay), (new Array_<int64_t>(1, (0LL))), (fue));
(ftg) = ((bpo)());
if((ftg) == (u'\u0029')){
break;
}
if((ftg) != (u'\u002C')){
(dgt)((u'\u002C'), (ftg));
break;
}
}
}
(ftg) = ((bpo)());
if((ftg) == (u'\u003A')){
((fty)->cat) = ((dhy)());
(ftg) = ((bpo)());
}
if((ftg) != (u'\u003E')){
(dgt)((u'\u003E'), (ftg));
}
(ftf) = (fty);
}
else if(cmp_(ftw, (new Array_<char16_t>(4, u'\u006C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
(dgy)((u'\u003C'), (true));
(fut) = (new cbn());
(bpl)((fut), (66563LL), (fte), (nullptr), (false));
((fut)->cbq) = (0LL);
((fut)->cbs) = ((dhy)());
(dgy)((u'\u003E'), (true));
(ftf) = (fut);
}
else if(cmp_(ftw, (new Array_<char16_t>(5, u'\u0073', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
(dgy)((u'\u003C'), (true));
(fuv) = (new cbn());
(bpl)((fuv), (66563LL), (fte), (nullptr), (false));
((fuv)->cbq) = (1LL);
((fuv)->cbs) = ((dhy)());
(dgy)((u'\u003E'), (true));
(ftf) = (fuv);
}
else if(cmp_(ftw, (new Array_<char16_t>(5, u'\u0071', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
(dgy)((u'\u003C'), (true));
(fux) = (new cbn());
(bpl)((fux), (66563LL), (fte), (nullptr), (false));
((fux)->cbq) = (2LL);
((fux)->cbs) = ((dhy)());
(dgy)((u'\u003E'), (true));
(ftf) = (fux);
}
else if(cmp_(ftw, (new Array_<char16_t>(4, u'\u0064', u'\u0069', u'\u0063', u'\u0074'))) == 0){
(dgy)((u'\u003C'), (true));
(fuz) = (new cby());
(bpl)((fuz), (66564LL), (fte), (nullptr), (false));
((fuz)->cbz) = ((dhy)());
(dgy)((u'\u002C'), (true));
((fuz)->cca) = ((dhy)());
(dgy)((u'\u003E'), (true));
(ftf) = (fuz);
}
else if(cmp_(ftw, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074'))) == 0){
(fvb) = (new bud());
(bpl)((fvb), (1026LL), (fte), (nullptr), (false));
((fvb)->bue) = (0LL);
(ftf) = (fvb);
}
else if(cmp_(ftw, (new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
(fvd) = (new bud());
(bpl)((fvd), (1026LL), (fte), (nullptr), (false));
((fvd)->bue) = (1LL);
(ftf) = (fvd);
}
else if(cmp_(ftw, (new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072'))) == 0){
(fvf) = (new bud());
(bpl)((fvf), (1026LL), (fte), (nullptr), (false));
((fvf)->bue) = (2LL);
(ftf) = (fvf);
}
else if(cmp_(ftw, (new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C'))) == 0){
(fvh) = (new bud());
(bpl)((fvh), (1026LL), (fte), (nullptr), (false));
((fvh)->bue) = (3LL);
(ftf) = (fvh);
}
else{(fvj) = (new dhf());
(bpl)((fvj), (66565LL), (fte), (nullptr), (false));
(dgx)((fvj), (ftl));
(ftf) = (fvj);
}
}
}
return ftf;
}
// parseStat
static ge* dif(fx* fvk /*block_*/){
char16_t fvn = 0; // c
int64_t fvq = 0; // row
int64_t fvr = 0; // col
Array_<char16_t>* fvs = nullptr; // id
Array_<char16_t>* fvu = nullptr;
ge* fvw = nullptr; // ast
do{
(fvn) = ((bpo)());
if((fvn) == (u'\u0000')){
(ad)((65560LL), ((ddp)()), (nullptr));
return nullptr;
}
}while((fvn) == (u'\u000A'));
(ave) = (fvn);
(fvq) = (avc);
(fvr) = (avd);
(fvs) = ((bqf)((true), (false)));
fvu = fvs;
if(cmp_(fvu, (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064'))) == 0){
(fvw) = ((fvx)((fvq), (fvr), (fvk)));
}
else if(cmp_(fvu, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
(fvw) = ((fvz)());
}
else if(cmp_(fvu, (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0){
(fvw) = ((fwb)());
}
else if(cmp_(fvu, (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074'))) == 0){
(fvw) = ((fwd)());
}
else if(cmp_(fvu, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073'))) == 0){
(fvw) = ((fwf)());
}
else if(cmp_(fvu, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0){
(fvw) = ((fwh)());
}
else if(cmp_(fvu, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0){
(fvw) = ((fwj)());
}
else if(cmp_(fvu, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0){
(fvw) = ((fwl)());
}
else if(cmp_(fvu, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0069', u'\u0066'))) == 0){
(fvw) = ((fwn)((fvq), (fvr), (fvk)));
}
else if(cmp_(fvu, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065'))) == 0){
(fvw) = ((fwp)((fvq), (fvr), (fvk)));
}
else if(cmp_(fvu, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068'))) == 0){
(fvw) = ((fwr)((fvq), (fvr)));
}
else if(cmp_(fvu, (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065'))) == 0){
(fvw) = ((fwt)((fvq), (fvr), (fvk)));
}
else if(cmp_(fvu, (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074'))) == 0){
(fvw) = ((fwv)((fvq), (fvr), (fvk)));
}
else if(cmp_(fvu, (new Array_<char16_t>(5, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065'))) == 0){
(fvw) = ((fwx)());
}
else if(cmp_(fvu, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0){
(fvw) = ((fwz)((fvq), (fvr)));
}
else if(cmp_(fvu, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0){
(fvw) = ((fxb)((fvq), (fvr)));
}
else if(cmp_(fvu, (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068'))) == 0){
(fvw) = ((fxd)((fvq), (fvr), (fvk)));
}
else if(cmp_(fvu, (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079'))) == 0){
(fvw) = ((fxf)((fvq), (fvr), (fvk)));
}
else if(cmp_(fvu, (new Array_<char16_t>(5, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077'))) == 0){
(fvw) = ((fxh)());
}
else if(cmp_(fvu, (new Array_<char16_t>(5, u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B'))) == 0){
(fvw) = ((fxj)());
}
else if(cmp_(fvu, (new Array_<char16_t>(3, u'\u0072', u'\u0065', u'\u0074'))) == 0){
(fvw) = ((fxl)());
}
else if(cmp_(fvu, (new Array_<char16_t>(2, u'\u0064', u'\u006F'))) == 0){
(fvw) = ((fxn)());
}
else if(cmp_(fvu, (new Array_<char16_t>(5, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B'))) == 0){
(fvw) = ((fxp)());
}
else if(cmp_(fvu, (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070'))) == 0){
(fvw) = ((fxr)());
}
else if(cmp_(fvu, (new Array_<char16_t>(6, u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074'))) == 0){
(fvw) = ((fxt)());
}
else{(ad)((65547LL), ((bpm)((bf), (fvq), (fvr))), (new Array_<Array_<char16_t>*>(1, (fvs))));
(bra)(((brb)()));
return nullptr;
}
if(eqAddr_((fvw), (nullptr))){
return nullptr;
}
((fvw)->ne) = ((bpm)((bf), (fvq), (fvr)));
return fvw;
}
// parseExpr
static gd* dnd(){
gd* fxx = nullptr; // ast
int64_t fxz = 0; // row
int64_t fya = 0; // col
char16_t fyb = 0; // c
byb* fye = nullptr; // ast2
char16_t fyf = 0; // c2
char16_t fyh = 0;
(fxx) = ((fxy)());
(fxz) = (avc);
(fya) = (avd);
(fyb) = ((bpo)());
if((fyb) == (u'\u003A')){
(fye) = (new byb());
(dni)((fye), (2050LL), ((bpm)((bf), (fxz), (fya))));
(fyf) = ((brb)());
switch(fyf){
case u'\u003A':
((fye)->byc) = (0LL);
break;
case u'\u002B':
((fye)->byc) = (1LL);
break;
case u'\u002D':
((fye)->byc) = (2LL);
break;
case u'\u002A':
((fye)->byc) = (3LL);
break;
case u'\u002F':
((fye)->byc) = (4LL);
break;
case u'\u0025':
((fye)->byc) = (5LL);
break;
case u'\u005E':
((fye)->byc) = (6LL);
break;
case u'\u007E':
((fye)->byc) = (7LL);
break;
case u'\u0024':
((fye)->byc) = (25LL);
break;
default:
(ad)((65569LL), ((fye)->ne), (new Array_<Array_<char16_t>*>(1, ((ddq)((fyf))))));
(bra)((fyf));
return nullptr;
break;
}
((fye)->byf) = (fxx);
((fye)->byg) = ((dnd)());
(fxx) = (fye);
}
else{
(ave) = (fyb);
}
return fxx;
}
// initAstExpr
static void dni(gd* fyt /*ast*/, int64_t fyu /*typeId*/, ga* fyv /*pos*/){
if(!(is_(classTable_, (fyt), 14))){
throw 0xE9170000U;
}
(dcl)((fyt), (fyu), (fyv), (nullptr), (false));
((fyt)->pf) = (nullptr);
((fyt)->pj) = (0LL);
}
// readComment
static void doo(){
int64_t fyw = 0; // row
int64_t fyx = 0; // col
char16_t fyz = 0; // c
bool fze = false; // esc
bool fzu = false; // esc
(fyw) = (avc);
(fyx) = (avd);
do{
(fyz) = ((brb)());
if((fyz) == (u'\u0000')){
(ad)((65539LL), ((bpm)((bf), (fyw), (fyx))), (nullptr));
return;
}
if((fyz) == (u'\u0022')){
(fze) = (false);
while(true){
(fyz) = ((fzi)());
if((fyz) == (u'\u0000')){
(ad)((65539LL), ((bpm)((bf), (fyw), (fyx))), (nullptr));
return;
}
if(fze){
if((fyz) == (u'\u007B')){
(doo)();
}
(fze) = (false);
continue;
}
if((fyz) == (u'\u0022')){
break;
}
if((fyz) == (u'\u005C')){
(fze) = (true);
}
}
}
else if((fyz) == (u'\u0027')){
(fzu) = (false);
while(true){
(fyz) = ((fzi)());
if((fyz) == (u'\u0000')){
(ad)((65539LL), ((bpm)((bf), (fyw), (fyx))), (nullptr));
return;
}
if(fzu){
(fzu) = (false);
continue;
}
if((fyz) == (u'\u0027')){
break;
}
if((fyz) == (u'\u005C')){
(fzu) = (true);
}
}
}
else if((fyz) == (u'\u003B')){
while(true){
(fyz) = ((dde)());
if((fyz) == (u'\u0000')){
(ad)((65539LL), ((bpm)((bf), (fyw), (fyx))), (nullptr));
return;
}
if((fyz) == (u'\u000A')){
break;
}
}
}
}while((fyz) != (u'\u007D'));
}
// initAstImpl
static void dov(fx* gao /*ast*/, int64_t gap /*typeId*/, ga* gaq /*pos*/){
((gao)->lw) = (gap);
((gao)->ne) = (gaq);
((gao)->nf) = (nullptr);
((gao)->ng) = (nullptr);
((gao)->nh) = (nullptr);
((gao)->ni) = (nullptr);
((gao)->nj) = (nullptr);
((gao)->nk) = (nullptr);
((gao)->no) = (false);
}
// rebuildExprRef
static gd* dup(gd* gar /*ast*/){
fx* gau = nullptr; // refItem
int64_t gay = 0;
fw* gba = nullptr; // func_
caq* gbc = nullptr; // type
List_<gb*>* gbe = nullptr; // items
gb* gbg = nullptr; // arg
car* gbh = nullptr; // arg2
gb* gbj = nullptr; // arg
int64_t gbl = 0;
if(!eqAddr_(((gar)->nk), (nullptr))){
return as_<gd>(classTable_, ((gar)->nk), 14);
}
((gar)->nk) = (gar);
if(!(((gar)->lw) == (2062LL))){
throw 0xE9170000U;
}
(gau) = ((gar)->nj);
if(eqAddr_((gau), (nullptr))){
return nullptr;
}
switch((gau)->lw){
case 256LL:
(gba) = (as_<fw>(classTable_, ((gar)->nj), 8));
(ayx)((gba));
(gbc) = (new caq());
(btr)((gbc), (66562LL), ((gar)->ne));
((gbc)->elx) = ((gba)->sm);
((gbc)->elt) = ((gba)->sf);
((gbc)->cay) = (new List_<car*>());
(gbe) = ((gba)->sg);
awe<List_<gb*>*>((gbe), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((gbe), (new Array_<int64_t>(1, (0LL)))))){
(gbg) = (awi<List_<gb*>*, gb*>((gbe), (new Array_<int64_t>(1, (0LL)))));
(gbh) = (new car());
((gbh)->cbi) = ((gbg)->ql);
((gbh)->cbg) = ((gbg)->qf);
uh<List_<car*>*, car*>(((gbc)->cay), (new Array_<int64_t>(1, (0LL))), (gbh));
ays<List_<gb*>*>((gbe), (new Array_<int64_t>(1, (0LL))));
}
((gbc)->cat) = ((gba)->sh);
((gar)->pf) = (gbc);
((gar)->pj) = (1LL);
break;
case 7LL:
(gbj) = (as_<gb>(classTable_, ((gar)->nj), 10));
(bxb)((gbj));
switch((gbj)->qk){
case 1LL:
((gar)->pf) = ((gbj)->qf);
((gar)->pj) = (3LL);
break;
case 2LL:
((gar)->pf) = ((gbj)->qf);
((gar)->pj) = (((gbj)->ql) ? (4LL) : (2LL));
break;
case 3LL:
((gar)->pf) = ((gbj)->qf);
((gar)->pj) = (2LL);
break;
case 4LL:
if(eqAddr_(((gbj)->qg), (nullptr))){
return nullptr;
}
if(!((aye<int64_t>((((gbj)->qg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
throw 0xE9170000U;
}
((gar)->nk) = ((gbj)->qg);
return as_<gd>(classTable_, ((gar)->nk), 14);
break;
case 5LL:
(ad)((131075LL), ((gar)->ne), (new Array_<Array_<char16_t>*>(1, ((gar)->ni))));
return nullptr;
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66050LL:
case 16843266LL:
case 66051LL:
if(!(!eqAddr_(((gau)->nk), (nullptr)))){
throw 0xE9170000U;
}
((gar)->nj) = ((as_<btv>(classTable_, (gau), 50))->buf);
((gar)->pf) = (((as_<btv>(classTable_, (gau), 50))->buf)->qf);
((gar)->pj) = (2LL);
break;
default:
if((((aye<int64_t>(((gau)->lw), (new Array_<int64_t>(1, (0LL))), (2048LL))) == (2048LL)) && (!eqAddr_(((gau)->nk), (nullptr)))) && ((clb)(((as_<gd>(classTable_, ((gau)->nk), 14))->pf)))){
((gar)->nk) = ((gau)->nk);
return as_<gd>(classTable_, ((gar)->nk), 14);
}
(ad)((131136LL), ((gar)->ne), (new Array_<Array_<char16_t>*>(1, ((gar)->ni))));
return nullptr;
break;
}
return gar;
}
// cmpType
static bool dzp(gc* gby /*type1*/, gc* gbz /*type2*/, bool gca /*strict*/){
int64_t gcd = 0; // typeId1
int64_t gce = 0; // typeId2
bool gcg = false; // nullable1
bool gch = false; // nullable2
caq* gcq = nullptr; // func1
caq* gcr = nullptr; // func2
List_<car*>* gcs = nullptr; // args1
List_<car*>* gct = nullptr; // args2
car* gcv = nullptr; // arg1
car* gcw = nullptr; // arg2
cby* gdl = nullptr; // dict1
cby* gdm = nullptr; // dict2
ul* gdw = nullptr; // class1
ul* gdx = nullptr; // class2
ul* gdy = nullptr; // ptr
if((eqAddr_((gby), (nullptr))) || (eqAddr_((gbz), (nullptr)))){
return false;
}
(gcd) = ((gby)->lw);
(gce) = ((gbz)->lw);
(gcg) = ((((gcd) == (66565LL)) && ((((gby)->nj)->lw) == (6LL))) ? (false) : ((aye<int64_t>((gcd), (new Array_<int64_t>(1, (0LL))), (66560LL))) == (66560LL)));
(gch) = ((((gce) == (66565LL)) && ((((gbz)->nj)->lw) == (6LL))) ? (false) : ((aye<int64_t>((gce), (new Array_<int64_t>(1, (0LL))), (66560LL))) == (66560LL)));
if((((gcg) && ((gce) == (1027LL))) || (((gcd) == (1027LL)) && (gch))) || (((gcd) == (1027LL)) && ((gce) == (1027LL)))){
return true;
}
if(((gcd) == (66561LL)) && ((gce) == (66561LL))){
return (dzp)(((as_<cai>(classTable_, (gby), 76))->cak), ((as_<cai>(classTable_, (gbz), 76))->cak), (true));
}
if(((gcd) == (1025LL)) && ((gce) == (1025LL))){
return ((as_<cam>(classTable_, (gby), 78))->can) == ((as_<cam>(classTable_, (gbz), 78))->can);
}
if(((gcd) == (66562LL)) && ((gce) == (66562LL))){
(gcq) = (as_<caq>(classTable_, (gby), 80));
(gcr) = (as_<caq>(classTable_, (gbz), 80));
(gcs) = ((gcq)->cay);
(gct) = ((gcr)->cay);
awe<List_<car*>*>((gcs), (new Array_<int64_t>(1, (0LL))));
awe<List_<car*>*>((gct), (new Array_<int64_t>(1, (0LL))));
while((!(awg<List_<car*>*>((gcs), (new Array_<int64_t>(1, (0LL)))))) && (!(awg<List_<car*>*>((gct), (new Array_<int64_t>(1, (0LL))))))){
(gcv) = (awi<List_<car*>*, car*>((gcs), (new Array_<int64_t>(1, (0LL)))));
(gcw) = (awi<List_<car*>*, car*>((gct), (new Array_<int64_t>(1, (0LL)))));
if((((gcv)->cbi) != ((gcw)->cbi)) || (!((dzp)(((gcv)->cbg), ((gcw)->cbg), (true))))){
return false;
}
ays<List_<car*>*>((gcs), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>((gct), (new Array_<int64_t>(1, (0LL))));
}
if(!((awg<List_<car*>*>((gcs), (new Array_<int64_t>(1, (0LL))))) && (awg<List_<car*>*>((gct), (new Array_<int64_t>(1, (0LL))))))){
return false;
}
if((eqAddr_(((gcq)->cat), (nullptr))) && (eqAddr_(((gcr)->cat), (nullptr)))){
return true;
}
if((eqAddr_(((gcq)->cat), (nullptr))) || (eqAddr_(((gcr)->cat), (nullptr)))){
return false;
}
return (dzp)(((gcq)->cat), ((gcr)->cat), (true));
}
if(((gcd) == (66563LL)) && ((gce) == (66563LL))){
if(((as_<cbn>(classTable_, (gby), 84))->cbq) != ((as_<cbn>(classTable_, (gbz), 84))->cbq)){
return false;
}
return (dzp)(((as_<cbn>(classTable_, (gby), 84))->cbs), ((as_<cbn>(classTable_, (gbz), 84))->cbs), (true));
}
if(((gcd) == (66564LL)) && ((gce) == (66564LL))){
(gdl) = (as_<cby>(classTable_, (gby), 86));
(gdm) = (as_<cby>(classTable_, (gbz), 86));
return ((dzp)(((gdl)->cbz), ((gdm)->cbz), (true))) && ((dzp)(((gdl)->cca), ((gdm)->cca), (true)));
}
if(((gcd) == (1026LL)) && ((gce) == (1026LL))){
return ((as_<bud>(classTable_, (gby), 60))->bue) == ((as_<bud>(classTable_, (gbz), 60))->bue);
}
if(((gcd) == (66565LL)) && ((gce) == (66565LL))){
if(!(((((gby)->nj)->lw) != (4LL)) && ((((gbz)->nj)->lw) != (4LL)))){
throw 0xE9170000U;
}
if(((((gby)->nj)->lw) == (5LL)) && ((((gbz)->nj)->lw) == (5LL))){
if(gca){
return eqAddr_((as_<ul>(classTable_, ((gby)->nj), 22)), (as_<ul>(classTable_, ((gbz)->nj), 22)));
}
else{
(gdw) = (as_<ul>(classTable_, ((gby)->nj), 22));
(gdx) = (as_<ul>(classTable_, ((gbz)->nj), 22));
(gdy) = (gdw);
while(!eqAddr_((gdy), (nullptr))){
if(eqAddr_((gdy), (gdx))){
return true;
}
(gdy) = (as_<ul>(classTable_, ((gdy)->nj), 22));
}
return false;
}
}
return eqAddr_(((gby)->nj), ((gbz)->nj));
}
if((((((gcd) == (66565LL)) && ((((gby)->nj)->lw) == (6LL))) || ((gcd) == (1028LL))) && ((((gce) == (66565LL)) && ((((gbz)->nj)->lw) == (6LL))) || ((gce) == (1028LL)))) && (!(((gcd) == (1028LL)) && ((gce) == (1028LL))))){
return true;
}
return false;
}
// rebuildEnumElement
static bvp* dzs(gd* gee /*enumElement*/, gc* gef /*type*/){
bvp* geg = nullptr; // enumElement2
if(!(((gee)->lw) == (67587LL))){
throw 0xE9170000U;
}
if(!((clb)((gef)))){
throw 0xE9170000U;
}
(geg) = (new bvp());
(buz)((geg), (67585LL), ((gee)->ne));
((geg)->bvr) = ((geh)((as_<edc>(classTable_, (gee), 130)), (as_<bqy>(classTable_, ((gef)->nj), 48))));
((geg)->pf) = (gef);
(geg) = (as_<bvp>(classTable_, ((ecw)((geg))), 70));
return geg;
}
// rebuildClass
static void eah(ul* gei /*ast*/){
fw* gel = nullptr; // dtor
fw* gem = nullptr; // copy
fw* gen = nullptr; // toBin
fw* geo = nullptr; // fromBin
if(!eqAddr_(((gei)->nk), (nullptr))){
return;
}
((gei)->nk) = (gei);
(gel) = (nullptr);
(gem) = (nullptr);
(gen) = (nullptr);
(geo) = (nullptr);
(gep)((gei), (&gel), (&gem), (&gen), (&geo));
(geq)((gei), (gel), (gem), (gen), (geo));
(ayx)((gel));
(ayx)((gem));
(ayx)((gen));
(ayx)((geo));
}
// rebuildEnum
static void eaj(bqy* ger /*ast*/){
dhf* geu = nullptr; // type
int64_t gev = 0; // defaultNum
Dict_<int64_t, bool>* gew = nullptr; // enumValues
List_<gd*>* gex = nullptr; // items
gd* gfb = nullptr; // item
Array_<char16_t>* gfc = nullptr; // itemName
bvp* gfh = nullptr; // item2
int64_t gfp = 0; // value
bool gfr = false;
if(!eqAddr_(((ger)->nk), (nullptr))){
return;
}
((ger)->nk) = (ger);
(geu) = (new dhf());
(btr)((geu), (66565LL), ((ger)->ne));
((geu)->nk) = (geu);
((geu)->nj) = (ger);
(gev) = (-1LL);
(gew) = (new Dict_<int64_t, bool>());
(gex) = ((ger)->dml);
awe<List_<gd*>*>((gex), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((gex), (new Array_<int64_t>(1, (0LL)))))){
(gfb) = (awi<List_<gd*>*, gd*>((gex), (new Array_<int64_t>(1, (0LL)))));
(gfc) = ((gfb)->nf);
(gfb) = ((bxx)((gfb), (eqAddr_(((gfb)->pf), (nullptr)))));
if(eqAddr_((gfb), (nullptr))){
continue;
}
((gfb)->nf) = (gfc);
bfe<List_<gd*>*, gd*>((gex), (new Array_<int64_t>(1, (0LL))), (gfb));
bfh<List_<gd*>*>((gex), (new Array_<int64_t>(1, (0LL))));
if((((gfb)->lw) != (67585LL)) || ((!eqAddr_(((gfb)->pf), (nullptr))) && (!((bdg)(((gfb)->pf)))))){
(ad)((131087LL), ((ger)->ne), (new Array_<Array_<char16_t>*>(2, ((ger)->nf), ((gfb)->nf))));
return;
}
(gfh) = (as_<bvp>(classTable_, (gfb), 70));
if(eqAddr_(((gfb)->pf), (nullptr))){
if((gev) == (9223372036854775807LL)){
(ad)((131088LL), ((ger)->ne), (new Array_<Array_<char16_t>*>(2, ((ger)->nf), ((gfb)->nf))));
return;
}
(gev) = ((gev) + (1LL));
((gfh)->bvr) = (static_cast<uint64_t>(gev));
}
else{
(gev) = (static_cast<int64_t>((gfh)->bvr));
}
(gfp) = (static_cast<int64_t>((gfh)->bvr));
if(avo<Dict_<int64_t, bool>*, int64_t, bool>((gew), (new Array_<int64_t>(1, (0LL))), (gfp), (&gfr))){
(ad)((131089LL), ((ger)->ne), (new Array_<Array_<char16_t>*>(3, ((ger)->nf), ((gfb)->nf), (v<int64_t>((gfp), (new Array_<int64_t>(1, (0LL))))))));
return;
}
dv<Dict_<int64_t, bool>*, int64_t, bool>((gew), (new Array_<int64_t>(1, (0LL))), (gfp), (true));
((gfb)->pf) = (geu);
}
}
// rebuildAlias
static void eal(bqs* gft /*ast*/, bqs* gfu /*parent*/){
if(cmp_((gft), (gfu)) == 0){
(ad)((131079LL), ((gfu)->ne), (new Array_<Array_<char16_t>*>(1, ((gfu)->nf))));
((gft)->djp) = (nullptr);
return;
}
if(!eqAddr_(((gft)->nk), (nullptr))){
return;
}
((gft)->nk) = (gft);
((gft)->djp) = ((bxe)(((gft)->djp), (gft)));
}
// rebuildExpr1
static gd* ebp(ebq* gfz /*ast*/){
gc* ggf = nullptr; // childType
int64_t ggh = 0;
bvp* ggw = nullptr; // expr
edf* ggx = nullptr; // expr
bvp* ghf = nullptr; // expr
bud* ghm = nullptr; // type
if(!eqAddr_(((gfz)->nk), (nullptr))){
return as_<gd>(classTable_, ((gfz)->nk), 14);
}
((gfz)->nk) = (gfz);
((gfz)->ggc) = ((bxx)(((gfz)->ggc), (false)));
if(eqAddr_(((gfz)->ggc), (nullptr))){
return nullptr;
}
if(!(eqAddr_(((gfz)->pf), (nullptr)))){
throw 0xE9170000U;
}
(ggf) = (((gfz)->ggc)->pf);
switch((gfz)->ggi){
case 0LL:
if((((bdg)((ggf))) || ((ggl)((ggf)))) || (((ggf)->lw) == (1025LL))){
if((aye<int64_t>((((gfz)->ggc)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)){
((gfz)->nk) = ((gfz)->ggc);
return as_<gd>(classTable_, ((gfz)->nk), 14);
}
((gfz)->pf) = (ggf);
}
break;
case 1LL:
if(((bdg)((ggf))) || ((ggl)((ggf)))){
if((aye<int64_t>((((gfz)->ggc)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)){
if((bdg)((ggf))){
(ggw) = (new bvp());
(buz)((ggw), (67585LL), ((gfz)->ne));
((ggw)->pf) = (ggf);
((ggw)->bvr) = (static_cast<uint64_t>(-(static_cast<int64_t>((as_<bvp>(classTable_, ((gfz)->ggc), 70))->bvr))));
(ggw) = (as_<bvp>(classTable_, ((ecw)((ggw))), 70));
((gfz)->nk) = (ggw);
return as_<gd>(classTable_, ((gfz)->nk), 14);
}
if(!((ggl)((ggf)))){
throw 0xE9170000U;
}
(ggx) = (new edf());
(buz)((ggx), (67588LL), ((gfz)->ne));
((ggx)->pf) = (ggf);
((ggx)->ggy) = (-((as_<edf>(classTable_, ((gfz)->ggc), 132))->ggy));
(ggx) = (as_<edf>(classTable_, ((ede)((ggx))), 132));
((gfz)->nk) = (ggx);
return as_<gd>(classTable_, ((gfz)->nk), 14);
}
((gfz)->pf) = (ggf);
}
break;
case 2LL:
if((ghb)((ggf))){
if((((gfz)->ggc)->lw) == (67585LL)){
(ghf) = (new bvp());
(buz)((ghf), (67585LL), ((gfz)->ne));
((ghf)->pf) = (ggf);
((ghf)->bvr) = ((((as_<bvp>(classTable_, ((gfz)->ggc), 70))->bvr) != (0x0000000000000000ULL)) ? (0x0000000000000000ULL) : (0x0000000000000001ULL));
(ghf) = (as_<bvp>(classTable_, ((ecw)((ghf))), 70));
((gfz)->nk) = (ghf);
return as_<gd>(classTable_, ((gfz)->nk), 14);
}
((gfz)->pf) = (ggf);
}
break;
case 3LL:
if(((((eha)((ggf))) || (((ggf)->lw) == (66561LL))) || (((ggf)->lw) == (66563LL))) || (((ggf)->lw) == (66564LL))){
((gfz)->pf) = (ggf);
}
break;
case 4LL:
if(((((ggf)->lw) == (66561LL)) || (((ggf)->lw) == (66563LL))) || (((ggf)->lw) == (66564LL))){
(ghm) = (new bud());
(btr)((ghm), (1026LL), ((gfz)->ne));
((ghm)->bue) = (0LL);
((gfz)->pf) = (ghm);
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(eqAddr_(((gfz)->pf), (nullptr))){
(ad)((131113LL), ((gfz)->ne), (nullptr));
return nullptr;
}
((gfz)->pj) = (1LL);
return gfz;
}
// _dtor
static void ghq(ebq* ghr){
((ghr)->ggc) = (nullptr);
((ghr)->pf) = (nullptr);
((ghr)->ne) = (nullptr);
((ghr)->nf) = (nullptr);
((ghr)->ng) = (nullptr);
((ghr)->nh) = (nullptr);
((ghr)->ni) = (nullptr);
((ghr)->nj) = (nullptr);
((ghr)->nk) = (nullptr);
}
// _copy
static ebq* ghs(ebq* ght){
ebq* ghu = nullptr;
(ghu) = (new ebq());
((ghu)->ggi) = ((ght)->ggi);
((ghu)->ggc) = (copy_((ght)->ggc));
((ghu)->pf) = (copy_((ght)->pf));
((ghu)->pj) = ((ght)->pj);
((ghu)->ne) = (copy_((ght)->ne));
((ghu)->nf) = (copy_((ght)->nf));
((ghu)->ng) = (copy_((ght)->ng));
((ghu)->nh) = (copy_((ght)->nh));
((ghu)->ni) = (copy_((ght)->ni));
((ghu)->nj) = (copy_((ght)->nj));
((ghu)->nk) = (copy_((ght)->nk));
((ghu)->no) = ((ght)->no);
((ghu)->lw) = ((ght)->lw);
return as_<ebq>(classTable_, (ghu), 110);
}
// _toBin
static Array_<uint8_t>* ghv(ebq* ghw){
Array_<uint8_t>* ghx = nullptr;
(ghx) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->ggi)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->ggc)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->pf)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->pj)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->ne)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->nf)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->ng)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->nh)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->ni)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->nj)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->nk)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->no)));
(ghx) = ((ghx)->Cat(toBin_((ghw)->lw)));
return ghx;
}
// _fromBin
static ebq* gil(ebq* gim, Array_<uint8_t>* gin, int64_t* gio){
ebq* gip = nullptr;
(gip) = (new ebq());
((gip)->ggi) = (fromBin_<int64_t>((gin), (*gio)));
((gip)->ggc) = (fromBin_<gd*>((gin), (*gio)));
((gip)->pf) = (fromBin_<gc*>((gin), (*gio)));
((gip)->pj) = (fromBin_<int64_t>((gin), (*gio)));
((gip)->ne) = (fromBin_<ga*>((gin), (*gio)));
((gip)->nf) = (fromBin_<Array_<char16_t>*>((gin), (*gio)));
((gip)->ng) = (fromBin_<fx*>((gin), (*gio)));
((gip)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gin), (*gio)));
((gip)->ni) = (fromBin_<Array_<char16_t>*>((gin), (*gio)));
((gip)->nj) = (fromBin_<fx*>((gin), (*gio)));
((gip)->nk) = (fromBin_<fy*>((gin), (*gio)));
((gip)->no) = (fromBin_<bool>((gin), (*gio)));
((gip)->lw) = (fromBin_<int64_t>((gin), (*gio)));
return gip;
}
// rebuildExpr2
static gd* ebs(byb* giq /*ast*/){
bool gja = false; // correct
int64_t gjc = 0;
ul* gji = nullptr; // ptr
bool gjt = false; // value
bud* gkd = nullptr; // type
bool gkm = false; // value
gc* gkn = nullptr; // children0Type
uint64_t gkq = 0; // n1
uint64_t gkr = 0; // n2
int64_t gkt = 0;
int64_t gla = 0; // n1
int64_t glb = 0; // n2
int64_t gld = 0;
double glk = 0.0; // n1
double gll = 0.0; // n2
int64_t gln = 0;
int64_t glu = 0; // cmp
int64_t gly = 0;
bvp* gme = nullptr; // expr
bud* gmk = nullptr; // type
bool gms = false; // value
gc* gmt = nullptr; // children0Type
uint64_t gmw = 0; // n1
uint64_t gmx = 0; // n2
int64_t gmz = 0;
int64_t gne = 0; // cmp
int64_t gng = 0;
bvp* gnk = nullptr; // expr
bud* gno = nullptr; // type
Array_<char16_t>* gny = nullptr; // s1
Array_<char16_t>* gnz = nullptr; // s2
ecz* goa = nullptr; // expr
uint64_t goi = 0; // n1
uint64_t goj = 0; // n2
int64_t gol = 0;
bvp* gpb = nullptr; // expr
int64_t gpe = 0; // n1
int64_t gpf = 0; // n2
int64_t gph = 0;
bvp* gpx = nullptr; // expr
double gpz = 0.0; // n1
double gqa = 0.0; // n2
int64_t gqc = 0;
edf* gqs = nullptr; // expr
if(!eqAddr_(((giq)->nk), (nullptr))){
return as_<gd>(classTable_, ((giq)->nk), 14);
}
((giq)->nk) = (giq);
((giq)->byf) = ((bxx)(((giq)->byf), (false)));
if(eqAddr_(((giq)->byf), (nullptr))){
return nullptr;
}
((giq)->byg) = ((bxx)(((giq)->byg), (false)));
if(eqAddr_(((giq)->byg), (nullptr))){
return nullptr;
}
if(!((dzp)((((giq)->byg)->pf), (((giq)->byf)->pf), (false)))){
(ad)((131113LL), ((giq)->ne), (nullptr));
return nullptr;
}
(gja) = (false);
switch((giq)->byc){
case 0LL:
if((((giq)->byf)->pj) == (1LL)){
(ad)((131114LL), ((giq)->ne), (nullptr));
return nullptr;
}
if(((eha)((((giq)->byf)->pf))) && ((eha)((((giq)->byg)->pf)))){
(gji) = (as_<ul>(classTable_, ((((giq)->byg)->pf)->nj), 22));
while(!eqAddr_(((((giq)->byf)->pf)->nj), (gji))){
(gji) = (as_<ul>(classTable_, ((gji)->nj), 22));
if(eqAddr_((gji), (nullptr))){
(ad)((131113LL), ((giq)->ne), (nullptr));
return nullptr;
}
}
}
if(((((giq)->byg)->pf)->lw) == (1028LL)){
((giq)->byg) = ((dzs)(((giq)->byg), (((giq)->byf)->pf)));
}
((giq)->pf) = (nullptr);
(gja) = (true);
break;
case 8LL:
case 9LL:
if((ghb)((((giq)->byf)->pf))){
if((((giq)->byf)->lw) == (67585LL)){
(gjt) = (((as_<bvp>(classTable_, ((giq)->byf), 70))->bvr) != (0x0000000000000000ULL));
if(((giq)->byc) == (8LL)){
((giq)->nk) = ((gjt) ? ((giq)->byf) : ((giq)->byg));
}
else{
if(!(((giq)->byc) == (9LL))){
throw 0xE9170000U;
}
((giq)->nk) = ((!(gjt)) ? ((giq)->byf) : ((giq)->byg));
}
return as_<gd>(classTable_, ((giq)->nk), 14);
}
((giq)->pf) = (((giq)->byf)->pf);
(gja) = (true);
}
break;
case 10LL:
case 11LL:
case 12LL:
case 13LL:
if((((((giq)->byf)->pf)->lw) == (1027LL)) || (((((giq)->byg)->pf)->lw) == (1027LL))){
(ad)((131115LL), ((giq)->ne), (nullptr));
return nullptr;
}
if((gkb)((((giq)->byf)->pf), (true))){
(gkd) = (new bud());
(btr)((gkd), (1026LL), ((giq)->ne));
((gkd)->bue) = (3LL);
if(((((giq)->byf)->pf)->lw) == (1028LL)){
if(((((giq)->byg)->pf)->lw) == (1028LL)){
if(!((((giq)->byf)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((giq)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<edc>(classTable_, ((giq)->byf), 130))->gki))));
return nullptr;
}
((giq)->byf) = ((dzs)(((giq)->byf), (((giq)->byg)->pf)));
}
else if(((((giq)->byg)->pf)->lw) == (1028LL)){
((giq)->byg) = ((dzs)(((giq)->byg), (((giq)->byf)->pf)));
}
if(((aye<int64_t>((((giq)->byf)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((aye<int64_t>((((giq)->byg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
(gkm) = (false);
(gkn) = (((giq)->byf)->pf);
if((((gkn)->lw) == (1025LL)) || ((esc)((gkn)))){
(gkq) = ((as_<bvp>(classTable_, ((giq)->byf), 70))->bvr);
(gkr) = ((as_<bvp>(classTable_, ((giq)->byg), 70))->bvr);
switch((giq)->byc){
case 10LL:
(gkm) = ((gkq) < (gkr));
break;
case 11LL:
(gkm) = ((gkq) > (gkr));
break;
case 12LL:
(gkm) = ((gkq) <= (gkr));
break;
case 13LL:
(gkm) = ((gkq) >= (gkr));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if(((bdg)((gkn))) || ((clb)((gkn)))){
(gla) = (static_cast<int64_t>((as_<bvp>(classTable_, ((giq)->byf), 70))->bvr));
(glb) = (static_cast<int64_t>((as_<bvp>(classTable_, ((giq)->byg), 70))->bvr));
switch((giq)->byc){
case 10LL:
(gkm) = ((gla) < (glb));
break;
case 11LL:
(gkm) = ((gla) > (glb));
break;
case 12LL:
(gkm) = ((gla) <= (glb));
break;
case 13LL:
(gkm) = ((gla) >= (glb));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if((ggl)((gkn))){
(glk) = ((as_<edf>(classTable_, ((giq)->byf), 132))->ggy);
(gll) = ((as_<edf>(classTable_, ((giq)->byg), 132))->ggy);
switch((giq)->byc){
case 10LL:
(gkm) = ((glk) < (gll));
break;
case 11LL:
(gkm) = ((glk) > (gll));
break;
case 12LL:
(gkm) = ((glk) <= (gll));
break;
case 13LL:
(gkm) = ((glk) >= (gll));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((fka)((gkn)))){
throw 0xE9170000U;
}
(glu) = ((glv)(((as_<ecz>(classTable_, ((giq)->byf), 128))->glw), ((as_<ecz>(classTable_, ((giq)->byg), 128))->glw)));
switch((giq)->byc){
case 10LL:
(gkm) = ((glu) < (0LL));
break;
case 11LL:
(gkm) = ((glu) > (0LL));
break;
case 12LL:
(gkm) = ((glu) <= (0LL));
break;
case 13LL:
(gkm) = ((glu) >= (0LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
(gme) = (new bvp());
(buz)((gme), (67585LL), ((giq)->ne));
((gme)->pf) = (gkd);
((gme)->bvr) = ((gkm) ? (0x0000000000000001ULL) : (0x0000000000000000ULL));
(gme) = (as_<bvp>(classTable_, ((ecw)((gme))), 70));
((giq)->nk) = (gme);
return as_<gd>(classTable_, ((giq)->nk), 14);
}
((giq)->pf) = (gkd);
(gja) = (true);
}
break;
case 14LL:
case 15LL:
if((((((giq)->byf)->pf)->lw) == (1027LL)) || (((((giq)->byg)->pf)->lw) == (1027LL))){
(ad)((131115LL), ((giq)->ne), (nullptr));
return nullptr;
}
if((gkb)((((giq)->byf)->pf), (false))){
(gmk) = (new bud());
(btr)((gmk), (1026LL), ((giq)->ne));
((gmk)->bue) = (3LL);
if(((((giq)->byf)->pf)->lw) == (1028LL)){
if(((((giq)->byg)->pf)->lw) == (1028LL)){
if(!((((giq)->byf)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((giq)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<edc>(classTable_, ((giq)->byf), 130))->gki))));
return nullptr;
}
((giq)->byf) = ((dzs)(((giq)->byf), (((giq)->byg)->pf)));
}
else if(((((giq)->byg)->pf)->lw) == (1028LL)){
((giq)->byg) = ((dzs)(((giq)->byg), (((giq)->byf)->pf)));
}
if(((aye<int64_t>((((giq)->byf)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((aye<int64_t>((((giq)->byg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
(gms) = (false);
(gmt) = (((giq)->byf)->pf);
if((((((((gmt)->lw) == (1025LL)) || ((bdg)((gmt)))) || ((ggl)((gmt)))) || ((esc)((gmt)))) || ((ghb)((gmt)))) || ((clb)((gmt)))){
(gmw) = ((as_<bvp>(classTable_, ((giq)->byf), 70))->bvr);
(gmx) = ((as_<bvp>(classTable_, ((giq)->byg), 70))->bvr);
switch((giq)->byc){
case 14LL:
(gms) = ((gmw) == (gmx));
break;
case 15LL:
(gms) = ((gmw) != (gmx));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((fka)((gmt)))){
throw 0xE9170000U;
}
(gne) = ((glv)(((as_<ecz>(classTable_, ((giq)->byf), 128))->glw), ((as_<ecz>(classTable_, ((giq)->byg), 128))->glw)));
switch((giq)->byc){
case 14LL:
(gms) = ((gne) == (0LL));
break;
case 15LL:
(gms) = ((gne) != (0LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
(gnk) = (new bvp());
(buz)((gnk), (67585LL), ((giq)->ne));
((gnk)->pf) = (gmk);
((gnk)->bvr) = ((gms) ? (0x0000000000000001ULL) : (0x0000000000000000ULL));
(gnk) = (as_<bvp>(classTable_, ((ecw)((gnk))), 70));
((giq)->nk) = (gnk);
return as_<gd>(classTable_, ((giq)->nk), 14);
}
((giq)->pf) = (gmk);
(gja) = (true);
}
break;
case 16LL:
case 17LL:
if(((ckw)((((giq)->byf)->pf))) || (((((giq)->byf)->pf)->lw) == (1027LL))){
(gno) = (new bud());
(btr)((gno), (1026LL), ((giq)->ne));
((gno)->bue) = (3LL);
((giq)->pf) = (gno);
(gja) = (true);
}
break;
case 18LL:
if((((((giq)->byf)->pf)->lw) == (1027LL)) || (((((giq)->byg)->pf)->lw) == (1027LL))){
(ad)((131117LL), ((giq)->ne), (nullptr));
return nullptr;
}
if(((((giq)->byf)->pf)->lw) == (66561LL)){
if(((aye<int64_t>((((giq)->byf)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((aye<int64_t>((((giq)->byg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
if((fka)((((giq)->byf)->pf))){
(gny) = ((as_<ecz>(classTable_, ((giq)->byf), 128))->glw);
(gnz) = ((as_<ecz>(classTable_, ((giq)->byg), 128))->glw);
(goa) = (new ecz());
(buz)((goa), (67586LL), ((giq)->ne));
((goa)->pf) = (((giq)->byf)->pf);
((goa)->glw) = ((gny)->Cat(gnz));
(goa) = (as_<ecz>(classTable_, ((ecy)((goa))), 128));
((giq)->nk) = (goa);
return as_<gd>(classTable_, ((giq)->nk), 14);
}
}
((giq)->pf) = (((giq)->byf)->pf);
(gja) = (true);
}
break;
case 19LL:
case 20LL:
case 21LL:
case 22LL:
case 23LL:
if(((((((giq)->byf)->pf)->lw) == (1025LL)) || ((bdg)((((giq)->byf)->pf)))) || ((ggl)((((giq)->byf)->pf)))){
if(((aye<int64_t>((((giq)->byf)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((aye<int64_t>((((giq)->byg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
if(((((giq)->byf)->pf)->lw) == (1025LL)){
(goi) = ((as_<bvp>(classTable_, ((giq)->byf), 70))->bvr);
(goj) = ((as_<bvp>(classTable_, ((giq)->byg), 70))->bvr);
switch((giq)->byc){
case 19LL:
(goi) = ((goi) + (goj));
break;
case 20LL:
(goi) = ((goi) - (goj));
break;
case 21LL:
(goi) = ((goi) * (goj));
break;
case 22LL:
if((goj) == (0x0000000000000000ULL)){
(ad)((131118LL), ((giq)->ne), (nullptr));
return nullptr;
}
(goi) = ((goi) / (goj));
break;
case 23LL:
if((goj) == (0x0000000000000000ULL)){
(ad)((131118LL), ((giq)->ne), (nullptr));
return nullptr;
}
(goi) = ((goi) % (goj));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(gpb) = (new bvp());
(buz)((gpb), (67585LL), ((giq)->ne));
((gpb)->pf) = (((giq)->byf)->pf);
((gpb)->bvr) = ((gpc)(((as_<cam>(classTable_, (((giq)->byf)->pf), 78))->can), (goi)));
(gpb) = (as_<bvp>(classTable_, ((ecw)((gpb))), 70));
((giq)->nk) = (gpb);
return as_<gd>(classTable_, ((giq)->nk), 14);
}
else if((bdg)((((giq)->byf)->pf))){
(gpe) = (static_cast<int64_t>((as_<bvp>(classTable_, ((giq)->byf), 70))->bvr));
(gpf) = (static_cast<int64_t>((as_<bvp>(classTable_, ((giq)->byg), 70))->bvr));
switch((giq)->byc){
case 19LL:
(gpe) = ((gpe) + (gpf));
break;
case 20LL:
(gpe) = ((gpe) - (gpf));
break;
case 21LL:
(gpe) = ((gpe) * (gpf));
break;
case 22LL:
if((gpf) == (0LL)){
(ad)((131118LL), ((giq)->ne), (nullptr));
return nullptr;
}
(gpe) = ((gpe) / (gpf));
break;
case 23LL:
if((gpf) == (0LL)){
(ad)((131118LL), ((giq)->ne), (nullptr));
return nullptr;
}
(gpe) = ((gpe) % (gpf));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(gpx) = (new bvp());
(buz)((gpx), (67585LL), ((giq)->ne));
((gpx)->pf) = (((giq)->byf)->pf);
((gpx)->bvr) = (static_cast<uint64_t>(gpe));
(gpx) = (as_<bvp>(classTable_, ((ecw)((gpx))), 70));
((giq)->nk) = (gpx);
return as_<gd>(classTable_, ((giq)->nk), 14);
}
else{
if(!((ggl)((((giq)->byf)->pf)))){
throw 0xE9170000U;
}
(gpz) = ((as_<edf>(classTable_, ((giq)->byf), 132))->ggy);
(gqa) = ((as_<edf>(classTable_, ((giq)->byg), 132))->ggy);
switch((giq)->byc){
case 19LL:
(gpz) = ((gpz) + (gqa));
break;
case 20LL:
(gpz) = ((gpz) - (gqa));
break;
case 21LL:
(gpz) = ((gpz) * (gqa));
break;
case 22LL:
if(((gpz) == (0.0)) && ((gqa) == (0.0))){
(ad)((131118LL), ((giq)->ne), (nullptr));
return nullptr;
}
(gpz) = ((gpz) / (gqa));
break;
case 23LL:
if(((gpz) == (0.0)) && ((gqa) == (0.0))){
(ad)((131118LL), ((giq)->ne), (nullptr));
return nullptr;
}
(gpz) = (fmod((gpz), (gqa)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(gqs) = (new edf());
(buz)((gqs), (67588LL), ((giq)->ne));
((gqs)->pf) = (((giq)->byf)->pf);
((gqs)->ggy) = (gpz);
(gqs) = (as_<edf>(classTable_, ((ede)((gqs))), 132));
((giq)->nk) = (gqs);
return as_<gd>(classTable_, ((giq)->nk), 14);
}
}
((giq)->pf) = (((giq)->byf)->pf);
(gja) = (true);
}
break;
case 24LL:
if(((bdg)((((giq)->byf)->pf))) || ((ggl)((((giq)->byf)->pf)))){
((giq)->pf) = (((giq)->byf)->pf);
(gja) = (true);
}
break;
case 25LL:
if(((((giq)->byf)->pj) == (1LL)) || ((((giq)->byg)->pj) == (1LL))){
(ad)((131119LL), ((giq)->ne), (nullptr));
return nullptr;
}
if((!((eha)((((giq)->byf)->pf)))) && (!eqAddr_(((((giq)->byf)->pf)->nj), ((((giq)->byg)->pf)->nj)))){
((giq)->pf) = (((giq)->byf)->pf);
(gja) = (true);
}
break;
}
if(!(gja)){
(ad)((131113LL), ((giq)->ne), (nullptr));
return nullptr;
}
((giq)->pj) = (1LL);
return giq;
}
// rebuildExpr3
static gd* ebu(ebv* grd /*ast*/){
if(!eqAddr_(((grd)->nk), (nullptr))){
return as_<gd>(classTable_, ((grd)->nk), 14);
}
((grd)->nk) = (grd);
((grd)->grg) = ((bxx)(((grd)->grg), (false)));
if(eqAddr_(((grd)->grg), (nullptr))){
return nullptr;
}
((grd)->grj) = ((bxx)(((grd)->grj), (false)));
if(eqAddr_(((grd)->grj), (nullptr))){
return nullptr;
}
((grd)->grm) = ((bxx)(((grd)->grm), (false)));
if(eqAddr_(((grd)->grm), (nullptr))){
return nullptr;
}
if(!((ghb)((((grd)->grg)->pf)))){
(ad)((131120LL), ((grd)->ne), (nullptr));
return nullptr;
}
if((!((dzp)((((grd)->grj)->pf), (((grd)->grm)->pf), (false)))) && (!((dzp)((((grd)->grm)->pf), (((grd)->grj)->pf), (false))))){
(ad)((131121LL), ((grd)->ne), (nullptr));
return nullptr;
}
if((((grd)->grg)->lw) == (67585LL)){
((grd)->nk) = ((((as_<bvp>(classTable_, ((grd)->grg), 70))->bvr) != (0x0000000000000000ULL)) ? ((grd)->grj) : ((grd)->grm));
return as_<gd>(classTable_, ((grd)->nk), 14);
}
if(((((grd)->grj)->pf)->lw) == (1028LL)){
if(((((grd)->grm)->pf)->lw) == (1028LL)){
if(!((((grd)->grj)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((grd)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<edc>(classTable_, ((grd)->grj), 130))->gki))));
return nullptr;
}
((grd)->grj) = ((dzs)(((grd)->grj), (((grd)->grm)->pf)));
}
else if(((((grd)->grm)->pf)->lw) == (1028LL)){
((grd)->grm) = ((dzs)(((grd)->grm), (((grd)->grj)->pf)));
}
if((dzp)((((grd)->grj)->pf), (((grd)->grm)->pf), (false))){
((grd)->pf) = ((((((grd)->grm)->pf)->lw) == (1027LL)) ? (((grd)->grj)->pf) : (((grd)->grm)->pf));
}
else{
((grd)->pf) = ((((((grd)->grj)->pf)->lw) == (1027LL)) ? (((grd)->grm)->pf) : (((grd)->grj)->pf));
}
((grd)->pj) = (1LL);
return grd;
}
// _dtor
static void gsd(ebv* gse){
((gse)->grg) = (nullptr);
((gse)->grj) = (nullptr);
((gse)->grm) = (nullptr);
((gse)->pf) = (nullptr);
((gse)->ne) = (nullptr);
((gse)->nf) = (nullptr);
((gse)->ng) = (nullptr);
((gse)->nh) = (nullptr);
((gse)->ni) = (nullptr);
((gse)->nj) = (nullptr);
((gse)->nk) = (nullptr);
}
// _copy
static ebv* gsf(ebv* gsg){
ebv* gsh = nullptr;
(gsh) = (new ebv());
((gsh)->grg) = (copy_((gsg)->grg));
((gsh)->grj) = (copy_((gsg)->grj));
((gsh)->grm) = (copy_((gsg)->grm));
((gsh)->pf) = (copy_((gsg)->pf));
((gsh)->pj) = ((gsg)->pj);
((gsh)->ne) = (copy_((gsg)->ne));
((gsh)->nf) = (copy_((gsg)->nf));
((gsh)->ng) = (copy_((gsg)->ng));
((gsh)->nh) = (copy_((gsg)->nh));
((gsh)->ni) = (copy_((gsg)->ni));
((gsh)->nj) = (copy_((gsg)->nj));
((gsh)->nk) = (copy_((gsg)->nk));
((gsh)->no) = ((gsg)->no);
((gsh)->lw) = ((gsg)->lw);
return as_<ebv>(classTable_, (gsh), 112);
}
// _toBin
static Array_<uint8_t>* gsi(ebv* gsj){
Array_<uint8_t>* gsk = nullptr;
(gsk) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->grg)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->grj)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->grm)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->pf)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->pj)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->ne)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->nf)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->ng)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->nh)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->ni)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->nj)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->nk)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->no)));
(gsk) = ((gsk)->Cat(toBin_((gsj)->lw)));
return gsk;
}
// _fromBin
static ebv* gsz(ebv* gta, Array_<uint8_t>* gtb, int64_t* gtc){
ebv* gtd = nullptr;
(gtd) = (new ebv());
((gtd)->grg) = (fromBin_<gd*>((gtb), (*gtc)));
((gtd)->grj) = (fromBin_<gd*>((gtb), (*gtc)));
((gtd)->grm) = (fromBin_<gd*>((gtb), (*gtc)));
((gtd)->pf) = (fromBin_<gc*>((gtb), (*gtc)));
((gtd)->pj) = (fromBin_<int64_t>((gtb), (*gtc)));
((gtd)->ne) = (fromBin_<ga*>((gtb), (*gtc)));
((gtd)->nf) = (fromBin_<Array_<char16_t>*>((gtb), (*gtc)));
((gtd)->ng) = (fromBin_<fx*>((gtb), (*gtc)));
((gtd)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gtb), (*gtc)));
((gtd)->ni) = (fromBin_<Array_<char16_t>*>((gtb), (*gtc)));
((gtd)->nj) = (fromBin_<fx*>((gtb), (*gtc)));
((gtd)->nk) = (fromBin_<fy*>((gtb), (*gtc)));
((gtd)->no) = (fromBin_<bool>((gtb), (*gtc)));
((gtd)->lw) = (fromBin_<int64_t>((gtb), (*gtc)));
return gtd;
}
// rebuildExprNew
static gd* ebx(eby* gte /*ast*/){
if(!eqAddr_(((gte)->nk), (nullptr))){
return as_<gd>(classTable_, ((gte)->nk), 14);
}
((gte)->nk) = (gte);
((gte)->gth) = ((bxe)(((gte)->gth), (nullptr)));
if(eqAddr_(((gte)->gth), (nullptr))){
return nullptr;
}
if(((eha)(((gte)->gth))) && (eqAddr_((((gte)->gth)->nj), (nullptr)))){
return nullptr;
}
if(!((((eha)(((gte)->gth))) || ((((gte)->gth)->lw) == (66563LL))) || ((((gte)->gth)->lw) == (66564LL)))){
(ad)((131122LL), ((gte)->ne), (nullptr));
return nullptr;
}
((gte)->pf) = ((gte)->gth);
((gte)->pj) = (1LL);
return gte;
}
// _dtor
static void gto(eby* gtp){
((gtp)->gth) = (nullptr);
((gtp)->pf) = (nullptr);
((gtp)->ne) = (nullptr);
((gtp)->nf) = (nullptr);
((gtp)->ng) = (nullptr);
((gtp)->nh) = (nullptr);
((gtp)->ni) = (nullptr);
((gtp)->nj) = (nullptr);
((gtp)->nk) = (nullptr);
}
// _copy
static eby* gtq(eby* gtr){
eby* gts = nullptr;
(gts) = (new eby());
((gts)->gth) = (copy_((gtr)->gth));
((gts)->pf) = (copy_((gtr)->pf));
((gts)->pj) = ((gtr)->pj);
((gts)->ne) = (copy_((gtr)->ne));
((gts)->nf) = (copy_((gtr)->nf));
((gts)->ng) = (copy_((gtr)->ng));
((gts)->nh) = (copy_((gtr)->nh));
((gts)->ni) = (copy_((gtr)->ni));
((gts)->nj) = (copy_((gtr)->nj));
((gts)->nk) = (copy_((gtr)->nk));
((gts)->no) = ((gtr)->no);
((gts)->lw) = ((gtr)->lw);
return as_<eby>(classTable_, (gts), 114);
}
// _toBin
static Array_<uint8_t>* gtt(eby* gtu){
Array_<uint8_t>* gtv = nullptr;
(gtv) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gtv) = ((gtv)->Cat(toBin_((gtu)->gth)));
(gtv) = ((gtv)->Cat(toBin_((gtu)->pf)));
(gtv) = ((gtv)->Cat(toBin_((gtu)->pj)));
(gtv) = ((gtv)->Cat(toBin_((gtu)->ne)));
(gtv) = ((gtv)->Cat(toBin_((gtu)->nf)));
(gtv) = ((gtv)->Cat(toBin_((gtu)->ng)));
(gtv) = ((gtv)->Cat(toBin_((gtu)->nh)));
(gtv) = ((gtv)->Cat(toBin_((gtu)->ni)));
(gtv) = ((gtv)->Cat(toBin_((gtu)->nj)));
(gtv) = ((gtv)->Cat(toBin_((gtu)->nk)));
(gtv) = ((gtv)->Cat(toBin_((gtu)->no)));
(gtv) = ((gtv)->Cat(toBin_((gtu)->lw)));
return gtv;
}
// _fromBin
static eby* gui(eby* guj, Array_<uint8_t>* guk, int64_t* gul){
eby* gum = nullptr;
(gum) = (new eby());
((gum)->gth) = (fromBin_<gc*>((guk), (*gul)));
((gum)->pf) = (fromBin_<gc*>((guk), (*gul)));
((gum)->pj) = (fromBin_<int64_t>((guk), (*gul)));
((gum)->ne) = (fromBin_<ga*>((guk), (*gul)));
((gum)->nf) = (fromBin_<Array_<char16_t>*>((guk), (*gul)));
((gum)->ng) = (fromBin_<fx*>((guk), (*gul)));
((gum)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((guk), (*gul)));
((gum)->ni) = (fromBin_<Array_<char16_t>*>((guk), (*gul)));
((gum)->nj) = (fromBin_<fx*>((guk), (*gul)));
((gum)->nk) = (fromBin_<fy*>((guk), (*gul)));
((gum)->no) = (fromBin_<bool>((guk), (*gul)));
((gum)->lw) = (fromBin_<int64_t>((guk), (*gul)));
return gum;
}
// rebuildExprNewArray
static gd* eca(ecb* gun /*ast*/){
List_<gd*>* gur = nullptr; // items
gd* guw = nullptr; // data
gc* gvf = nullptr; // type
int64_t gvj = 0;
cai* gvl = nullptr; // type2
int64_t gvk = 0;
if(!eqAddr_(((gun)->nk), (nullptr))){
return as_<gd>(classTable_, ((gun)->nk), 14);
}
((gun)->nk) = (gun);
(gur) = ((gun)->gus);
awe<List_<gd*>*>((gur), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((gur), (new Array_<int64_t>(1, (0LL)))))){
(guw) = (awi<List_<gd*>*, gd*>((gur), (new Array_<int64_t>(1, (0LL)))));
(guw) = ((bxx)((guw), (false)));
if(eqAddr_((guw), (nullptr))){
return nullptr;
}
if(!((bdg)(((guw)->pf)))){
(ad)((131123LL), ((guw)->ne), (nullptr));
return nullptr;
}
bfe<List_<gd*>*, gd*>((gur), (new Array_<int64_t>(1, (0LL))), (guw));
bfh<List_<gd*>*>((gur), (new Array_<int64_t>(1, (0LL))));
}
((gun)->gvb) = ((bxe)(((gun)->gvb), (nullptr)));
if(eqAddr_(((gun)->gvb), (nullptr))){
return nullptr;
}
(gvf) = ((gun)->gvb);
for(gvj = (0LL), gvk = ((((gun)->gus)->Len()) - (1LL)); gvj <= gvk; gvj += (1LL)){
(gvl) = (new cai());
(btr)((gvl), (66561LL), ((gun)->ne));
((gvl)->cak) = (gvf);
(gvf) = (gvl);
}
((gun)->pf) = (gvf);
((gun)->pj) = (1LL);
return gun;
}
// _dtor
static void gvm(ecb* gvn){
((gvn)->gus) = (nullptr);
((gvn)->gvb) = (nullptr);
((gvn)->pf) = (nullptr);
((gvn)->ne) = (nullptr);
((gvn)->nf) = (nullptr);
((gvn)->ng) = (nullptr);
((gvn)->nh) = (nullptr);
((gvn)->ni) = (nullptr);
((gvn)->nj) = (nullptr);
((gvn)->nk) = (nullptr);
}
// _copy
static ecb* gvo(ecb* gvp){
ecb* gvq = nullptr;
(gvq) = (new ecb());
((gvq)->gus) = (copy_((gvp)->gus));
((gvq)->gvb) = (copy_((gvp)->gvb));
((gvq)->pf) = (copy_((gvp)->pf));
((gvq)->pj) = ((gvp)->pj);
((gvq)->ne) = (copy_((gvp)->ne));
((gvq)->nf) = (copy_((gvp)->nf));
((gvq)->ng) = (copy_((gvp)->ng));
((gvq)->nh) = (copy_((gvp)->nh));
((gvq)->ni) = (copy_((gvp)->ni));
((gvq)->nj) = (copy_((gvp)->nj));
((gvq)->nk) = (copy_((gvp)->nk));
((gvq)->no) = ((gvp)->no);
((gvq)->lw) = ((gvp)->lw);
return as_<ecb>(classTable_, (gvq), 116);
}
// _toBin
static Array_<uint8_t>* gvr(ecb* gvs){
Array_<uint8_t>* gvt = nullptr;
(gvt) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->gus)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->gvb)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->pf)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->pj)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->ne)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->nf)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->ng)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->nh)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->ni)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->nj)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->nk)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->no)));
(gvt) = ((gvt)->Cat(toBin_((gvs)->lw)));
return gvt;
}
// _fromBin
static ecb* gwh(ecb* gwi, Array_<uint8_t>* gwj, int64_t* gwk){
ecb* gwl = nullptr;
(gwl) = (new ecb());
((gwl)->gus) = (fromBin_<List_<gd*>*>((gwj), (*gwk)));
((gwl)->gvb) = (fromBin_<gc*>((gwj), (*gwk)));
((gwl)->pf) = (fromBin_<gc*>((gwj), (*gwk)));
((gwl)->pj) = (fromBin_<int64_t>((gwj), (*gwk)));
((gwl)->ne) = (fromBin_<ga*>((gwj), (*gwk)));
((gwl)->nf) = (fromBin_<Array_<char16_t>*>((gwj), (*gwk)));
((gwl)->ng) = (fromBin_<fx*>((gwj), (*gwk)));
((gwl)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gwj), (*gwk)));
((gwl)->ni) = (fromBin_<Array_<char16_t>*>((gwj), (*gwk)));
((gwl)->nj) = (fromBin_<fx*>((gwj), (*gwk)));
((gwl)->nk) = (fromBin_<fy*>((gwj), (*gwk)));
((gwl)->no) = (fromBin_<bool>((gwj), (*gwk)));
((gwl)->lw) = (fromBin_<int64_t>((gwj), (*gwk)));
return gwl;
}
// rebuildExprAs
static gd* ecd(ece* gwm /*ast*/){
int64_t gww = 0;
gc* gwz = nullptr; // t1
gc* gxa = nullptr; // t2
uint64_t gyn = 0; // n
bvp* gyq = nullptr; // expr
bvp* gys = nullptr; // expr
edf* gyu = nullptr; // expr
bvp* gyz = nullptr; // expr
bvp* gzb = nullptr; // expr
bvp* gzd = nullptr; // expr
double gzf = 0.0; // n
bvp* gzi = nullptr; // expr
bvp* gzk = nullptr; // expr
bud* gzo = nullptr; // type
if(!eqAddr_(((gwm)->nk), (nullptr))){
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
((gwm)->nk) = (gwm);
((gwm)->gwp) = ((bxx)(((gwm)->gwp), (false)));
if(eqAddr_(((gwm)->gwp), (nullptr))){
return nullptr;
}
((gwm)->gws) = ((bxe)(((gwm)->gws), (nullptr)));
if(eqAddr_(((gwm)->gws), (nullptr))){
return nullptr;
}
if(!(eqAddr_(((gwm)->pf), (nullptr)))){
throw 0xE9170000U;
}
switch((gwm)->gwx){
case 0LL:
(gwz) = (((gwm)->gwp)->pf);
(gxa) = ((gwm)->gws);
if((((gwz)->lw) == (1025LL)) || ((bdg)((gwz)))){
if((((((((gxa)->lw) == (1025LL)) || ((bdg)((gxa)))) || ((ggl)((gxa)))) || ((esc)((gxa)))) || ((ghb)((gxa)))) || ((clb)((gxa)))){
if((dzp)((gwz), (gxa), (false))){
((gwm)->nk) = ((gwm)->gwp);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
((gwm)->pf) = (gxa);
}
}
else if((ggl)((gwz))){
if(((((gxa)->lw) == (1025LL)) || ((bdg)((gxa)))) || ((ggl)((gxa)))){
if((dzp)((gwz), (gxa), (false))){
((gwm)->nk) = ((gwm)->gwp);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
((gwm)->pf) = (gxa);
}
}
else if((esc)((gwz))){
if(((((gxa)->lw) == (1025LL)) || ((bdg)((gxa)))) || ((esc)((gxa)))){
if((dzp)((gwz), (gxa), (false))){
((gwm)->nk) = ((gwm)->gwp);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
((gwm)->pf) = (gxa);
}
}
else if((ghb)((gwz))){
if(((((gxa)->lw) == (1025LL)) || ((bdg)((gxa)))) || ((ghb)((gxa)))){
if((dzp)((gwz), (gxa), (false))){
((gwm)->nk) = ((gwm)->gwp);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
((gwm)->pf) = (gxa);
}
}
else if((eha)((gwz))){
if((eha)((gxa))){
((gwm)->pf) = (gxa);
}
}
else if((clb)((gwz))){
if(((((gxa)->lw) == (1025LL)) || ((bdg)((gxa)))) || ((clb)((gxa)))){
if((dzp)((gwz), (gxa), (false))){
((gwm)->nk) = ((gwm)->gwp);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
((gwm)->pf) = (gxa);
}
}
else if(((gwz)->lw) == (1028LL)){
if((clb)((gxa))){
((gwm)->pf) = (gxa);
}
}
if(!eqAddr_(((gwm)->pf), (nullptr))){
if((aye<int64_t>((((gwm)->gwp)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)){
if(((((((gwz)->lw) == (1025LL)) || ((esc)((gwz)))) || ((ghb)((gwz)))) || ((bdg)((gwz)))) || ((clb)((gwz)))){
(gyn) = ((as_<bvp>(classTable_, ((gwm)->gwp), 70))->bvr);
if(((gxa)->lw) == (1025LL)){
(gyq) = (new bvp());
(buz)((gyq), (67585LL), ((gwm)->ne));
((gyq)->pf) = ((gwm)->pf);
((gyq)->bvr) = ((gpc)(((as_<cam>(classTable_, (gxa), 78))->can), (gyn)));
(gyq) = (as_<bvp>(classTable_, ((ecw)((gyq))), 70));
((gwm)->nk) = (gyq);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
else if(((bdg)((gxa))) || ((clb)((gxa)))){
(gys) = (new bvp());
(buz)((gys), (67585LL), ((gwm)->ne));
((gys)->pf) = ((gwm)->pf);
((gys)->bvr) = (gyn);
(gys) = (as_<bvp>(classTable_, ((ecw)((gys))), 70));
((gwm)->nk) = (gys);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
else if((ggl)((gxa))){
(gyu) = (new edf());
(buz)((gyu), (67588LL), ((gwm)->ne));
((gyu)->pf) = ((gwm)->pf);
if(((bdg)((gwz))) || ((clb)((gwz)))){
((gyu)->ggy) = (static_cast<double>(static_cast<int64_t>(gyn)));
}
else{
((gyu)->ggy) = (static_cast<double>(gyn));
}
(gyu) = (as_<edf>(classTable_, ((ede)((gyu))), 132));
((gwm)->nk) = (gyu);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
else if((esc)((gxa))){
(gyz) = (new bvp());
(buz)((gyz), (67585LL), ((gwm)->ne));
((gyz)->pf) = ((gwm)->pf);
((gyz)->bvr) = ((gpc)((2LL), (gyn)));
(gyz) = (as_<bvp>(classTable_, ((ecw)((gyz))), 70));
((gwm)->nk) = (gyz);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
else{
if(!((ghb)((gxa)))){
throw 0xE9170000U;
}
(gzb) = (new bvp());
(buz)((gzb), (67585LL), ((gwm)->ne));
((gzb)->pf) = ((gwm)->pf);
((gzb)->bvr) = (((gyn) != (0x0000000000000000ULL)) ? (0x0000000000000001ULL) : (0x0000000000000000ULL));
(gzb) = (as_<bvp>(classTable_, ((ecw)((gzb))), 70));
((gwm)->nk) = (gzb);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
}
else if(((gwz)->lw) == (1028LL)){
if(!((((gxa)->nj)->lw) == (6LL))){
throw 0xE9170000U;
}
(gzd) = (new bvp());
(buz)((gzd), (67585LL), ((gwm)->ne));
((gzd)->pf) = ((gwm)->pf);
((gzd)->bvr) = ((geh)((as_<edc>(classTable_, ((gwm)->gwp), 130)), (as_<bqy>(classTable_, ((gxa)->nj), 48))));
(gzd) = (as_<bvp>(classTable_, ((ecw)((gzd))), 70));
((gwm)->nk) = (gzd);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
else{
if(!((ggl)((gwz)))){
throw 0xE9170000U;
}
(gzf) = ((as_<edf>(classTable_, ((gwm)->gwp), 132))->ggy);
if(((gxa)->lw) == (1025LL)){
(gzi) = (new bvp());
(buz)((gzi), (67585LL), ((gwm)->ne));
((gzi)->pf) = ((gwm)->pf);
((gzi)->bvr) = ((gpc)(((as_<cam>(classTable_, (gxa), 78))->can), (static_cast<uint64_t>(gzf))));
(gzi) = (as_<bvp>(classTable_, ((ecw)((gzi))), 70));
((gwm)->nk) = (gzi);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
else{
if(!((bdg)((gxa)))){
throw 0xE9170000U;
}
(gzk) = (new bvp());
(buz)((gzk), (67585LL), ((gwm)->ne));
((gzk)->pf) = ((gwm)->pf);
((gzk)->bvr) = (static_cast<uint64_t>(gzf));
(gzk) = (as_<bvp>(classTable_, ((ecw)((gzk))), 70));
((gwm)->nk) = (gzk);
return as_<gd>(classTable_, ((gwm)->nk), 14);
}
}
}
}
break;
case 1LL:
case 2LL:
if(((eha)((((gwm)->gwp)->pf))) && ((eha)(((gwm)->gws)))){
(gzo) = (new bud());
(btr)((gzo), (1026LL), ((gwm)->ne));
((gzo)->bue) = (3LL);
((gwm)->pf) = (gzo);
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(eqAddr_(((gwm)->pf), (nullptr))){
(ad)((131113LL), ((gwm)->ne), (nullptr));
return nullptr;
}
((gwm)->pj) = (1LL);
return gwm;
}
// _dtor
static void gzs(ece* gzt){
((gzt)->gwp) = (nullptr);
((gzt)->gws) = (nullptr);
((gzt)->pf) = (nullptr);
((gzt)->ne) = (nullptr);
((gzt)->nf) = (nullptr);
((gzt)->ng) = (nullptr);
((gzt)->nh) = (nullptr);
((gzt)->ni) = (nullptr);
((gzt)->nj) = (nullptr);
((gzt)->nk) = (nullptr);
}
// _copy
static ece* gzu(ece* gzv){
ece* gzw = nullptr;
(gzw) = (new ece());
((gzw)->gwx) = ((gzv)->gwx);
((gzw)->gwp) = (copy_((gzv)->gwp));
((gzw)->gws) = (copy_((gzv)->gws));
((gzw)->pf) = (copy_((gzv)->pf));
((gzw)->pj) = ((gzv)->pj);
((gzw)->ne) = (copy_((gzv)->ne));
((gzw)->nf) = (copy_((gzv)->nf));
((gzw)->ng) = (copy_((gzv)->ng));
((gzw)->nh) = (copy_((gzv)->nh));
((gzw)->ni) = (copy_((gzv)->ni));
((gzw)->nj) = (copy_((gzv)->nj));
((gzw)->nk) = (copy_((gzv)->nk));
((gzw)->no) = ((gzv)->no);
((gzw)->lw) = ((gzv)->lw);
return as_<ece>(classTable_, (gzw), 118);
}
// _toBin
static Array_<uint8_t>* gzx(ece* gzy){
Array_<uint8_t>* gzz = nullptr;
(gzz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->gwx)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->gwp)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->gws)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->pf)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->pj)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->ne)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->nf)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->ng)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->nh)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->ni)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->nj)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->nk)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->no)));
(gzz) = ((gzz)->Cat(toBin_((gzy)->lw)));
return gzz;
}
// _fromBin
static ece* hao(ece* hap, Array_<uint8_t>* haq, int64_t* har){
ece* has = nullptr;
(has) = (new ece());
((has)->gwx) = (fromBin_<int64_t>((haq), (*har)));
((has)->gwp) = (fromBin_<gd*>((haq), (*har)));
((has)->gws) = (fromBin_<gc*>((haq), (*har)));
((has)->pf) = (fromBin_<gc*>((haq), (*har)));
((has)->pj) = (fromBin_<int64_t>((haq), (*har)));
((has)->ne) = (fromBin_<ga*>((haq), (*har)));
((has)->nf) = (fromBin_<Array_<char16_t>*>((haq), (*har)));
((has)->ng) = (fromBin_<fx*>((haq), (*har)));
((has)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((haq), (*har)));
((has)->ni) = (fromBin_<Array_<char16_t>*>((haq), (*har)));
((has)->nj) = (fromBin_<fx*>((haq), (*har)));
((has)->nk) = (fromBin_<fy*>((haq), (*har)));
((has)->no) = (fromBin_<bool>((haq), (*har)));
((has)->lw) = (fromBin_<int64_t>((haq), (*har)));
return has;
}
// rebuildExprToBin
static gd* ecg(ech* hat /*ast*/){
if(!eqAddr_(((hat)->nk), (nullptr))){
return as_<gd>(classTable_, ((hat)->nk), 14);
}
((hat)->nk) = (hat);
((hat)->haw) = ((bxx)(((hat)->haw), (false)));
if(eqAddr_(((hat)->haw), (nullptr))){
return nullptr;
}
if((((((hat)->haw)->pf)->lw) == (1027LL)) || (((((hat)->haw)->pf)->lw) == (1028LL))){
(ad)((131113LL), ((hat)->ne), (nullptr));
return nullptr;
}
if((((((hat)->hbc)->lw) != (66561LL)) || ((((as_<cai>(classTable_, ((hat)->hbc), 76))->cak)->lw) != (1025LL))) || (((as_<cam>(classTable_, ((as_<cai>(classTable_, ((hat)->hbc), 76))->cak), 78))->can) != (1LL))){
(ad)((131113LL), ((hat)->ne), (nullptr));
return nullptr;
}
((hat)->pf) = ((hat)->hbc);
((hat)->pj) = (1LL);
return hat;
}
// _dtor
static void hbe(ech* hbf){
((hbf)->haw) = (nullptr);
((hbf)->hbc) = (nullptr);
((hbf)->pf) = (nullptr);
((hbf)->ne) = (nullptr);
((hbf)->nf) = (nullptr);
((hbf)->ng) = (nullptr);
((hbf)->nh) = (nullptr);
((hbf)->ni) = (nullptr);
((hbf)->nj) = (nullptr);
((hbf)->nk) = (nullptr);
}
// _copy
static ech* hbg(ech* hbh){
ech* hbi = nullptr;
(hbi) = (new ech());
((hbi)->haw) = (copy_((hbh)->haw));
((hbi)->hbc) = (copy_((hbh)->hbc));
((hbi)->pf) = (copy_((hbh)->pf));
((hbi)->pj) = ((hbh)->pj);
((hbi)->ne) = (copy_((hbh)->ne));
((hbi)->nf) = (copy_((hbh)->nf));
((hbi)->ng) = (copy_((hbh)->ng));
((hbi)->nh) = (copy_((hbh)->nh));
((hbi)->ni) = (copy_((hbh)->ni));
((hbi)->nj) = (copy_((hbh)->nj));
((hbi)->nk) = (copy_((hbh)->nk));
((hbi)->no) = ((hbh)->no);
((hbi)->lw) = ((hbh)->lw);
return as_<ech>(classTable_, (hbi), 120);
}
// _toBin
static Array_<uint8_t>* hbj(ech* hbk){
Array_<uint8_t>* hbl = nullptr;
(hbl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->haw)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->hbc)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->pf)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->pj)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->ne)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->nf)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->ng)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->nh)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->ni)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->nj)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->nk)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->no)));
(hbl) = ((hbl)->Cat(toBin_((hbk)->lw)));
return hbl;
}
// _fromBin
static ech* hbz(ech* hca, Array_<uint8_t>* hcb, int64_t* hcc){
ech* hcd = nullptr;
(hcd) = (new ech());
((hcd)->haw) = (fromBin_<gd*>((hcb), (*hcc)));
((hcd)->hbc) = (fromBin_<gc*>((hcb), (*hcc)));
((hcd)->pf) = (fromBin_<gc*>((hcb), (*hcc)));
((hcd)->pj) = (fromBin_<int64_t>((hcb), (*hcc)));
((hcd)->ne) = (fromBin_<ga*>((hcb), (*hcc)));
((hcd)->nf) = (fromBin_<Array_<char16_t>*>((hcb), (*hcc)));
((hcd)->ng) = (fromBin_<fx*>((hcb), (*hcc)));
((hcd)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hcb), (*hcc)));
((hcd)->ni) = (fromBin_<Array_<char16_t>*>((hcb), (*hcc)));
((hcd)->nj) = (fromBin_<fx*>((hcb), (*hcc)));
((hcd)->nk) = (fromBin_<fy*>((hcb), (*hcc)));
((hcd)->no) = (fromBin_<bool>((hcb), (*hcc)));
((hcd)->lw) = (fromBin_<int64_t>((hcb), (*hcc)));
return hcd;
}
// rebuildExprFromBin
static gd* ecj(eck* hce /*ast*/){
if(!eqAddr_(((hce)->nk), (nullptr))){
return as_<gd>(classTable_, ((hce)->nk), 14);
}
((hce)->nk) = (hce);
((hce)->hch) = ((bxx)(((hce)->hch), (false)));
if(eqAddr_(((hce)->hch), (nullptr))){
return nullptr;
}
if(((((((hce)->hch)->pf)->lw) != (66561LL)) || ((((as_<cai>(classTable_, (((hce)->hch)->pf), 76))->cak)->lw) != (1025LL))) || (((as_<cam>(classTable_, ((as_<cai>(classTable_, (((hce)->hch)->pf), 76))->cak), 78))->can) != (1LL))){
(ad)((131113LL), ((hce)->ne), (nullptr));
return nullptr;
}
((hce)->pf) = ((hce)->hcm);
((hce)->pj) = (1LL);
((hce)->hcn) = ((bxx)(((hce)->hcn), (false)));
return hce;
}
// _dtor
static void hco(eck* hcp){
((hcp)->hch) = (nullptr);
((hcp)->hcm) = (nullptr);
((hcp)->hcn) = (nullptr);
((hcp)->pf) = (nullptr);
((hcp)->ne) = (nullptr);
((hcp)->nf) = (nullptr);
((hcp)->ng) = (nullptr);
((hcp)->nh) = (nullptr);
((hcp)->ni) = (nullptr);
((hcp)->nj) = (nullptr);
((hcp)->nk) = (nullptr);
}
// _copy
static eck* hcq(eck* hcr){
eck* hcs = nullptr;
(hcs) = (new eck());
((hcs)->hch) = (copy_((hcr)->hch));
((hcs)->hcm) = (copy_((hcr)->hcm));
((hcs)->hcn) = (copy_((hcr)->hcn));
((hcs)->pf) = (copy_((hcr)->pf));
((hcs)->pj) = ((hcr)->pj);
((hcs)->ne) = (copy_((hcr)->ne));
((hcs)->nf) = (copy_((hcr)->nf));
((hcs)->ng) = (copy_((hcr)->ng));
((hcs)->nh) = (copy_((hcr)->nh));
((hcs)->ni) = (copy_((hcr)->ni));
((hcs)->nj) = (copy_((hcr)->nj));
((hcs)->nk) = (copy_((hcr)->nk));
((hcs)->no) = ((hcr)->no);
((hcs)->lw) = ((hcr)->lw);
return as_<eck>(classTable_, (hcs), 122);
}
// _toBin
static Array_<uint8_t>* hct(eck* hcu){
Array_<uint8_t>* hcv = nullptr;
(hcv) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->hch)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->hcm)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->hcn)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->pf)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->pj)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->ne)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->nf)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->ng)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->nh)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->ni)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->nj)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->nk)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->no)));
(hcv) = ((hcv)->Cat(toBin_((hcu)->lw)));
return hcv;
}
// _fromBin
static eck* hdk(eck* hdl, Array_<uint8_t>* hdm, int64_t* hdn){
eck* hdo = nullptr;
(hdo) = (new eck());
((hdo)->hch) = (fromBin_<gd*>((hdm), (*hdn)));
((hdo)->hcm) = (fromBin_<gc*>((hdm), (*hdn)));
((hdo)->hcn) = (fromBin_<gd*>((hdm), (*hdn)));
((hdo)->pf) = (fromBin_<gc*>((hdm), (*hdn)));
((hdo)->pj) = (fromBin_<int64_t>((hdm), (*hdn)));
((hdo)->ne) = (fromBin_<ga*>((hdm), (*hdn)));
((hdo)->nf) = (fromBin_<Array_<char16_t>*>((hdm), (*hdn)));
((hdo)->ng) = (fromBin_<fx*>((hdm), (*hdn)));
((hdo)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hdm), (*hdn)));
((hdo)->ni) = (fromBin_<Array_<char16_t>*>((hdm), (*hdn)));
((hdo)->nj) = (fromBin_<fx*>((hdm), (*hdn)));
((hdo)->nk) = (fromBin_<fy*>((hdm), (*hdn)));
((hdo)->no) = (fromBin_<bool>((hdm), (*hdn)));
((hdo)->lw) = (fromBin_<int64_t>((hdm), (*hdn)));
return hdo;
}
// rebuildExprCall
static gd* ecm(bux* hdp /*ast*/){
caq* hdv = nullptr; // type
buy* hdy = nullptr; // valueType
eby* hea = nullptr; // expr
buy* heg = nullptr; // me_
buy* hen = nullptr; // meType
edi* hep = nullptr; // expr
bvp* hes = nullptr; // value
bud* heu = nullptr; // prim
int64_t hff = 0; // n
List_<buy*>* hfg = nullptr; // itemsExpr
List_<car*>* hfh = nullptr; // itemsType
buy* hfj = nullptr; // argExpr
car* hfk = nullptr; // argType
if(!eqAddr_(((hdp)->nk), (nullptr))){
return as_<gd>(classTable_, ((hdp)->nk), 14);
}
((hdp)->nk) = (hdp);
((hdp)->bvd) = ((bxx)(((hdp)->bvd), (false)));
if(eqAddr_(((hdp)->bvd), (nullptr))){
return nullptr;
}
(hdv) = (as_<caq>(classTable_, (((hdp)->bvd)->pf), 80));
if((aye<int64_t>(((hdv)->elx), (new Array_<int64_t>(1, (0LL))), (2048LL))) != (0LL)){
(hdy) = (new buy());
if(!(!eqAddr_(((hdv)->cat), (nullptr)))){
throw 0xE9170000U;
}
(hea) = (new eby());
(buz)((hea), (2052LL), ((hdp)->ne));
((hea)->gth) = ((hdv)->cat);
((hdy)->bwm) = ((bxx)((hea), (false)));
((hdy)->bwi) = (false);
((hdy)->bwj) = (false);
if((((hdp)->bva)->Len()) == (0LL)){
uh<List_<buy*>*, buy*>(((hdp)->bva), (new Array_<int64_t>(1, (0LL))), (hdy));
}
else{
awe<List_<buy*>*>(((hdp)->bva), (new Array_<int64_t>(1, (0LL))));
bfe<List_<buy*>*, buy*>(((hdp)->bva), (new Array_<int64_t>(1, (0LL))), (hdy));
}
}
if(((((hdp)->bvd)->lw) == (2059LL)) && (((((hdp)->bvd)->pf)->lw) == (66562LL))){
(heg) = (new buy());
((heg)->bwm) = ((as_<ecs>(classTable_, ((hdp)->bvd), 126))->heh);
((heg)->bwi) = (false);
((heg)->bwj) = (false);
if((((hdp)->bva)->Len()) == (0LL)){
uh<List_<buy*>*, buy*>(((hdp)->bva), (new Array_<int64_t>(1, (0LL))), (heg));
}
else{
awe<List_<buy*>*>(((hdp)->bva), (new Array_<int64_t>(1, (0LL))));
bfe<List_<buy*>*, buy*>(((hdp)->bva), (new Array_<int64_t>(1, (0LL))), (heg));
}
if((aye<int64_t>(((hdv)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL)){
(hen) = (new buy());
(hep) = (new edi());
(buz)((hep), (2060LL), ((hdp)->ne));
((hep)->heq) = (new List_<gd*>());
(hes) = (new bvp());
(buz)((hes), (67585LL), ((hdp)->ne));
((hes)->bvr) = (0x0000000000000000ULL);
(heu) = (new bud());
(btr)((heu), (1026LL), ((hdp)->ne));
((heu)->bue) = (0LL);
((hes)->pf) = (heu);
uh<List_<gd*>*, gd*>(((hep)->heq), (new Array_<int64_t>(1, (0LL))), (hes));
((hen)->bwm) = ((bxx)((hep), (false)));
((hen)->bwi) = (false);
((hen)->bwj) = (false);
if((((hdp)->bva)->Len()) == (1LL)){
uh<List_<buy*>*, buy*>(((hdp)->bva), (new Array_<int64_t>(1, (0LL))), (hen));
}
else{
if(!((((hdp)->bva)->Len()) >= (2LL))){
throw 0xE9170000U;
}
awe<List_<buy*>*>(((hdp)->bva), (new Array_<int64_t>(1, (0LL))));
ays<List_<buy*>*>(((hdp)->bva), (new Array_<int64_t>(1, (0LL))));
bfe<List_<buy*>*, buy*>(((hdp)->bva), (new Array_<int64_t>(1, (0LL))), (hen));
}
}
}
else{
if(((hdv)->lw) != (66562LL)){
(ad)((131124LL), ((hdp)->ne), (nullptr));
return nullptr;
}
(hdv) = (as_<caq>(classTable_, (((hdp)->bvd)->pf), 80));
}
((hdp)->pf) = ((hdv)->cat);
if((((hdp)->bva)->Len()) != (((hdv)->cay)->Len())){
(ad)((131125LL), ((hdp)->ne), (new Array_<Array_<char16_t>*>(3, (v<int64_t>((((hdv)->cay)->Len()), (new Array_<int64_t>(1, (0LL))))), (v<int64_t>((((hdp)->bva)->Len()), (new Array_<int64_t>(1, (0LL))))), ((hfd)((hdv))))));
return nullptr;
}
(hff) = (0LL);
(hfg) = ((hdp)->bva);
(hfh) = ((hdv)->cay);
awe<List_<buy*>*>((hfg), (new Array_<int64_t>(1, (0LL))));
awe<List_<car*>*>((hfh), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buy*>*>((hfg), (new Array_<int64_t>(1, (0LL)))))){
(hfj) = (awi<List_<buy*>*, buy*>((hfg), (new Array_<int64_t>(1, (0LL)))));
(hfk) = (awi<List_<car*>*, car*>((hfh), (new Array_<int64_t>(1, (0LL)))));
if((hfj)->bwj){
((as_<gb>(classTable_, (((hfj)->bwm)->nj), 10))->qf) = ((hfk)->cbg);
}
((hfj)->bwm) = ((bxx)(((hfj)->bwm), (false)));
if(!eqAddr_(((hfj)->bwm), (nullptr))){
if((((hfj)->bwi) && (!((hfj)->bwj))) && ((((hfj)->bwm)->pj) == (1LL))){
(ad)((131126LL), ((hdp)->ne), (new Array_<Array_<char16_t>*>(1, (v<int64_t>(((hff) + (1LL)), (new Array_<int64_t>(1, (0LL))))))));
return nullptr;
}
if((((hfj)->bwi) != ((hfk)->cbi)) || (!((dzp)((((hfj)->bwm)->pf), ((hfk)->cbg), (false))))){
(ad)((131127LL), ((hdp)->ne), (new Array_<Array_<char16_t>*>(3, (v<int64_t>(((hff) + (1LL)), (new Array_<int64_t>(1, (0LL))))), ((((hfk)->cbi) ? (new Array_<char16_t>(1, u'\u0026')) : (new Array_<char16_t>(0)))->Cat((hfd)(((hfk)->cbg)))), ((((hfj)->bwi) ? (new Array_<char16_t>(1, u'\u0026')) : (new Array_<char16_t>(0)))->Cat((hfd)((((hfj)->bwm)->pf)))))));
return nullptr;
}
if(((((hfj)->bwm)->pf)->lw) == (1028LL)){
((hfj)->bwm) = ((dzs)(((hfj)->bwm), ((hfk)->cbg)));
}
}
ays<List_<buy*>*>((hfg), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>((hfh), (new Array_<int64_t>(1, (0LL))));
(hff) = ((hff) + (1LL));
}
((hdp)->pj) = (1LL);
return hdp;
}
// rebuildExprArray
static gd* eco(ecp* hfw /*ast*/){
if(!eqAddr_(((hfw)->nk), (nullptr))){
return as_<gd>(classTable_, ((hfw)->nk), 14);
}
((hfw)->nk) = (hfw);
((hfw)->hfz) = ((bxx)(((hfw)->hfz), (false)));
if(eqAddr_(((hfw)->hfz), (nullptr))){
return nullptr;
}
if(((((hfw)->hfz)->pf)->lw) != (66561LL)){
(ad)((131128LL), ((hfw)->ne), (nullptr));
return nullptr;
}
((hfw)->hge) = ((bxx)(((hfw)->hge), (false)));
if(eqAddr_(((hfw)->hge), (nullptr))){
return nullptr;
}
if(!((bdg)((((hfw)->hge)->pf)))){
(ad)((131129LL), (((hfw)->hge)->ne), (nullptr));
return nullptr;
}
((hfw)->pf) = ((as_<cai>(classTable_, (((hfw)->hfz)->pf), 76))->cak);
((hfw)->pj) = (3LL);
return hfw;
}
// _dtor
static void hgj(ecp* hgk){
((hgk)->hfz) = (nullptr);
((hgk)->hge) = (nullptr);
((hgk)->pf) = (nullptr);
((hgk)->ne) = (nullptr);
((hgk)->nf) = (nullptr);
((hgk)->ng) = (nullptr);
((hgk)->nh) = (nullptr);
((hgk)->ni) = (nullptr);
((hgk)->nj) = (nullptr);
((hgk)->nk) = (nullptr);
}
// _copy
static ecp* hgl(ecp* hgm){
ecp* hgn = nullptr;
(hgn) = (new ecp());
((hgn)->hfz) = (copy_((hgm)->hfz));
((hgn)->hge) = (copy_((hgm)->hge));
((hgn)->pf) = (copy_((hgm)->pf));
((hgn)->pj) = ((hgm)->pj);
((hgn)->ne) = (copy_((hgm)->ne));
((hgn)->nf) = (copy_((hgm)->nf));
((hgn)->ng) = (copy_((hgm)->ng));
((hgn)->nh) = (copy_((hgm)->nh));
((hgn)->ni) = (copy_((hgm)->ni));
((hgn)->nj) = (copy_((hgm)->nj));
((hgn)->nk) = (copy_((hgm)->nk));
((hgn)->no) = ((hgm)->no);
((hgn)->lw) = ((hgm)->lw);
return as_<ecp>(classTable_, (hgn), 124);
}
// _toBin
static Array_<uint8_t>* hgo(ecp* hgp){
Array_<uint8_t>* hgq = nullptr;
(hgq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->hfz)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->hge)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->pf)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->pj)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->ne)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->nf)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->ng)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->nh)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->ni)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->nj)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->nk)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->no)));
(hgq) = ((hgq)->Cat(toBin_((hgp)->lw)));
return hgq;
}
// _fromBin
static ecp* hhe(ecp* hhf, Array_<uint8_t>* hhg, int64_t* hhh){
ecp* hhi = nullptr;
(hhi) = (new ecp());
((hhi)->hfz) = (fromBin_<gd*>((hhg), (*hhh)));
((hhi)->hge) = (fromBin_<gd*>((hhg), (*hhh)));
((hhi)->pf) = (fromBin_<gc*>((hhg), (*hhh)));
((hhi)->pj) = (fromBin_<int64_t>((hhg), (*hhh)));
((hhi)->ne) = (fromBin_<ga*>((hhg), (*hhh)));
((hhi)->nf) = (fromBin_<Array_<char16_t>*>((hhg), (*hhh)));
((hhi)->ng) = (fromBin_<fx*>((hhg), (*hhh)));
((hhi)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hhg), (*hhh)));
((hhi)->ni) = (fromBin_<Array_<char16_t>*>((hhg), (*hhh)));
((hhi)->nj) = (fromBin_<fx*>((hhg), (*hhh)));
((hhi)->nk) = (fromBin_<fy*>((hhg), (*hhh)));
((hhi)->no) = (fromBin_<bool>((hhg), (*hhh)));
((hhi)->lw) = (fromBin_<int64_t>((hhg), (*hhh)));
return hhi;
}
// rebuildExprDot
static gd* ecr(ecs* hhj /*ast*/){
bool hhq = false; // found
ul* hhr = nullptr; // ptr
List_<um*>* hht = nullptr; // items
um* hhv = nullptr; // item
caq* hia = nullptr; // type
List_<gb*>* hic = nullptr; // items2
gb* hie = nullptr; // arg
car* hif = nullptr; // arg2
gc* him = nullptr; // varType
Array_<char16_t>* hip = nullptr; // member
gd* hit = nullptr; // expr
caq* hix = nullptr; // func_
gc* hjc = nullptr; // argType
caq* hjx = nullptr; // type
car* hjz = nullptr; // item
car* hkb = nullptr; // item
car* hkd = nullptr; // item
cai* hku = nullptr; // type
cai* hkz = nullptr; // type
cai* hle = nullptr; // type
if(!eqAddr_(((hhj)->nk), (nullptr))){
return as_<gd>(classTable_, ((hhj)->nk), 14);
}
((hhj)->nk) = (hhj);
((hhj)->heh) = ((bxx)(((hhj)->heh), (false)));
if(eqAddr_(((hhj)->heh), (nullptr))){
return nullptr;
}
if((eha)((((hhj)->heh)->pf))){
(hhq) = (false);
(hhr) = (as_<ul>(classTable_, ((((hhj)->heh)->pf)->nj), 22));
while(!eqAddr_((hhr), (nullptr))){
(hht) = ((hhr)->bag);
awe<List_<um*>*>((hht), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((hht), (new Array_<int64_t>(1, (0LL)))))){
(hhv) = (awi<List_<um*>*, um*>((hht), (new Array_<int64_t>(1, (0LL)))));
if(((((hhv)->azl)->lw) == (2LL)) && (cmp_(((hhj)->hhx), (((as_<bgi>(classTable_, ((hhv)->azl), 38))->bgk)->nf)) == 0)){
((hhj)->pf) = (((as_<bgi>(classTable_, ((hhv)->azl), 38))->bgk)->qf);
((hhj)->pj) = (3LL);
(hhq) = (true);
}
else if(((((hhv)->azl)->lw) == (256LL)) && (cmp_(((hhj)->hhx), (((hhv)->azl)->nf)) == 0)){
(hia) = (new caq());
(btr)((hia), (66562LL), ((hhj)->ne));
((hia)->elx) = ((as_<fw>(classTable_, ((hhv)->azl), 8))->sm);
((hia)->elt) = ((as_<fw>(classTable_, ((hhv)->azl), 8))->sf);
((hia)->cay) = (new List_<car*>());
(hic) = ((as_<fw>(classTable_, ((hhv)->azl), 8))->sg);
awe<List_<gb*>*>((hic), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((hic), (new Array_<int64_t>(1, (0LL)))))){
(hie) = (awi<List_<gb*>*, gb*>((hic), (new Array_<int64_t>(1, (0LL)))));
(hif) = (new car());
((hif)->cbg) = ((hie)->qf);
((hif)->cbi) = ((hie)->ql);
uh<List_<car*>*, car*>(((hia)->cay), (new Array_<int64_t>(1, (0LL))), (hif));
ays<List_<gb*>*>((hic), (new Array_<int64_t>(1, (0LL))));
}
((hia)->cat) = ((as_<fw>(classTable_, ((hhv)->azl), 8))->sh);
((hhj)->pf) = (hia);
((hhj)->pj) = (1LL);
(hhq) = (true);
}
if(hhq){
if((!((hhv)->azq)) && ((eqAddr_((((hhj)->heh)->ni), (nullptr))) || (cmp_((((hhj)->heh)->ni), (new Array_<char16_t>(2, u'\u006D', u'\u0065'))) != 0))){
(ad)((131131LL), ((hhj)->ne), (new Array_<Array_<char16_t>*>(1, ((hhj)->hhx))));
return nullptr;
}
((hhj)->hik) = (hhv);
return hhj;
}
ays<List_<um*>*>((hht), (new Array_<int64_t>(1, (0LL))));
}
(hhr) = (as_<ul>(classTable_, ((hhr)->nj), 22));
}
}
else{
(him) = (((hhj)->heh)->pf);
if(((him)->lw) == (1028LL)){
if(!((((hhj)->heh)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((hhj)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<edc>(classTable_, ((hhj)->heh), 130))->gki))));
return nullptr;
}
(hip) = ((hhj)->hhx);
if((hir)((&hip), (him))){
(hit) = (as_<gd>(classTable_, ((buq)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), ((new Array_<char16_t>(1, u'\u005F'))->Cat(hip)), (true))), 14));
if(eqAddr_((hit), (nullptr))){
if(!(false)){
throw 0xE9170000U;
}
return nullptr;
}
(hix) = (as_<caq>(classTable_, ((hit)->pf), 80));
if((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL)){
if(!((((hix)->cay)->Len()) >= (2LL))){
throw 0xE9170000U;
}
awe<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
if(!((bdg)(((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg)))){
throw 0xE9170000U;
}
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
(hjc) = ((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg);
if(!((((hjc)->lw) == (66561LL)) && ((bdg)(((as_<cai>(classTable_, (hjc), 76))->cak))))){
throw 0xE9170000U;
}
awe<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg) = (him);
}
if((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (2LL))) != (0LL)){
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (8LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (32LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (256LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hix)->cay)->Len()) >= (3LL))){
throw 0xE9170000U;
}
awe<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
if(!((bdg)(((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg)))){
throw 0xE9170000U;
}
awe<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg) = (him);
}
if((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (8LL))) != (0LL)){
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (2LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (32LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (256LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hix)->cay)->Len()) >= (3LL))){
throw 0xE9170000U;
}
awe<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
if(!((bdg)(((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg)))){
throw 0xE9170000U;
}
awe<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
if(((him)->lw) == (66561LL)){
((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg) = ((as_<cai>(classTable_, (him), 76))->cak);
}
else if(((him)->lw) == (66563LL)){
((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg) = ((as_<cbn>(classTable_, (him), 84))->cbs);
}
else{
if(!(((him)->lw) == (66564LL))){
throw 0xE9170000U;
}
((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg) = ((as_<cby>(classTable_, (him), 86))->cbz);
}
}
if((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (32LL))) != (0LL)){
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (2LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (8LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (256LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hix)->cay)->Len()) >= (4LL))){
throw 0xE9170000U;
}
awe<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
if(!((bdg)(((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg)))){
throw 0xE9170000U;
}
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
if(!((bdg)(((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg)))){
throw 0xE9170000U;
}
if(!(((him)->lw) == (66564LL))){
throw 0xE9170000U;
}
awe<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg) = ((as_<cby>(classTable_, (him), 86))->cbz);
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg) = ((as_<cby>(classTable_, (him), 86))->cca);
}
if((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (256LL))) != (0LL)){
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (2LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (8LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (32LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hix)->cay)->Len()) >= (3LL))){
throw 0xE9170000U;
}
awe<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
if(!((bdg)(((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg)))){
throw 0xE9170000U;
}
if(!(((him)->lw) == (66564LL))){
throw 0xE9170000U;
}
(hjx) = (new caq());
(btr)((hjx), (66562LL), ((hhj)->ne));
((hjx)->elx) = (0LL);
((hjx)->elt) = (new List_<Array_<char16_t>*>());
((hjx)->cay) = (new List_<car*>());
(hjz) = (new car());
((hjz)->cbg) = ((as_<cby>(classTable_, (him), 86))->cbz);
((hjz)->cbi) = (false);
uh<List_<car*>*, car*>(((hjx)->cay), (new Array_<int64_t>(1, (0LL))), (hjz));
(hkb) = (new car());
((hkb)->cbg) = ((as_<cby>(classTable_, (him), 86))->cca);
((hkb)->cbi) = (false);
uh<List_<car*>*, car*>(((hjx)->cay), (new Array_<int64_t>(1, (0LL))), (hkb));
(hkd) = (new car());
awe<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
((hkd)->cbg) = ((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg);
((hkd)->cbi) = (false);
uh<List_<car*>*, car*>(((hjx)->cay), (new Array_<int64_t>(1, (0LL))), (hkd));
((hjx)->cat) = ((hix)->cat);
awe<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
ays<List_<car*>*>(((hix)->cay), (new Array_<int64_t>(1, (0LL))));
((awi<List_<car*>*, car*>(((hix)->cay), (new Array_<int64_t>(1, (0LL)))))->cbg) = (hjx);
}
if((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (4LL))) != (0LL)){
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdg)(((hix)->cat)))){
throw 0xE9170000U;
}
((hix)->cat) = (him);
}
if((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (16LL))) != (0LL)){
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdg)(((hix)->cat)))){
throw 0xE9170000U;
}
if(((him)->lw) == (66561LL)){
((hix)->cat) = ((as_<cai>(classTable_, (him), 76))->cak);
}
else if(((him)->lw) == (66563LL)){
((hix)->cat) = ((as_<cbn>(classTable_, (him), 84))->cbs);
}
else{
if(!(((him)->lw) == (66564LL))){
throw 0xE9170000U;
}
((hix)->cat) = ((as_<cby>(classTable_, (him), 86))->cca);
}
}
if((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (64LL))) != (0LL)){
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdg)(((hix)->cat)))){
throw 0xE9170000U;
}
if(!(((him)->lw) == (66563LL))){
throw 0xE9170000U;
}
if(!(((as_<cbn>(classTable_, (him), 84))->cbq) == (0LL))){
throw 0xE9170000U;
}
(hku) = (new cai());
(btr)((hku), (66561LL), ((hhj)->ne));
((hku)->cak) = ((as_<cbn>(classTable_, (him), 84))->cbs);
((hix)->cat) = (hku);
}
if((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (512LL))) != (0LL)){
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdg)(((hix)->cat)))){
throw 0xE9170000U;
}
if(!(((him)->lw) == (66564LL))){
throw 0xE9170000U;
}
(hkz) = (new cai());
(btr)((hkz), (66561LL), ((hhj)->ne));
((hkz)->cak) = ((as_<cby>(classTable_, (him), 86))->cbz);
((hix)->cat) = (hkz);
}
if((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1024LL))) != (0LL)){
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hix)->elx), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdg)(((hix)->cat)))){
throw 0xE9170000U;
}
if(!(((him)->lw) == (66564LL))){
throw 0xE9170000U;
}
(hle) = (new cai());
(btr)((hle), (66561LL), ((hhj)->ne));
((hle)->cak) = ((as_<cby>(classTable_, (him), 86))->cca);
((hix)->cat) = (hle);
}
((hhj)->nj) = (hit);
((hhj)->pf) = ((hit)->pf);
((hhj)->pj) = (1LL);
return hhj;
}
}
(ad)((131130LL), ((hhj)->ne), (new Array_<Array_<char16_t>*>(1, ((hhj)->hhx))));
return nullptr;
}
// _dtor
static void hlf(ecs* hlg){
((hlg)->heh) = (nullptr);
((hlg)->hhx) = (nullptr);
((hlg)->hik) = (nullptr);
((hlg)->pf) = (nullptr);
((hlg)->ne) = (nullptr);
((hlg)->nf) = (nullptr);
((hlg)->ng) = (nullptr);
((hlg)->nh) = (nullptr);
((hlg)->ni) = (nullptr);
((hlg)->nj) = (nullptr);
((hlg)->nk) = (nullptr);
}
// _copy
static ecs* hlh(ecs* hli){
ecs* hlj = nullptr;
(hlj) = (new ecs());
((hlj)->heh) = (copy_((hli)->heh));
((hlj)->hhx) = (copy_((hli)->hhx));
((hlj)->hik) = (copy_((hli)->hik));
((hlj)->pf) = (copy_((hli)->pf));
((hlj)->pj) = ((hli)->pj);
((hlj)->ne) = (copy_((hli)->ne));
((hlj)->nf) = (copy_((hli)->nf));
((hlj)->ng) = (copy_((hli)->ng));
((hlj)->nh) = (copy_((hli)->nh));
((hlj)->ni) = (copy_((hli)->ni));
((hlj)->nj) = (copy_((hli)->nj));
((hlj)->nk) = (copy_((hli)->nk));
((hlj)->no) = ((hli)->no);
((hlj)->lw) = ((hli)->lw);
return as_<ecs>(classTable_, (hlj), 126);
}
// _toBin
static Array_<uint8_t>* hlk(ecs* hll){
Array_<uint8_t>* hlm = nullptr;
(hlm) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hlm) = ((hlm)->Cat(toBin_((hll)->heh)));
(hlm) = ((hlm)->Cat(toBin_((hll)->hhx)));
(hlm) = ((hlm)->Cat(toBin_((hll)->hik)));
(hlm) = ((hlm)->Cat(toBin_((hll)->pf)));
(hlm) = ((hlm)->Cat(toBin_((hll)->pj)));
(hlm) = ((hlm)->Cat(toBin_((hll)->ne)));
(hlm) = ((hlm)->Cat(toBin_((hll)->nf)));
(hlm) = ((hlm)->Cat(toBin_((hll)->ng)));
(hlm) = ((hlm)->Cat(toBin_((hll)->nh)));
(hlm) = ((hlm)->Cat(toBin_((hll)->ni)));
(hlm) = ((hlm)->Cat(toBin_((hll)->nj)));
(hlm) = ((hlm)->Cat(toBin_((hll)->nk)));
(hlm) = ((hlm)->Cat(toBin_((hll)->no)));
(hlm) = ((hlm)->Cat(toBin_((hll)->lw)));
return hlm;
}
// _fromBin
static ecs* hmb(ecs* hmc, Array_<uint8_t>* hmd, int64_t* hme){
ecs* hmf = nullptr;
(hmf) = (new ecs());
((hmf)->heh) = (fromBin_<gd*>((hmd), (*hme)));
((hmf)->hhx) = (fromBin_<Array_<char16_t>*>((hmd), (*hme)));
((hmf)->hik) = (fromBin_<um*>((hmd), (*hme)));
((hmf)->pf) = (fromBin_<gc*>((hmd), (*hme)));
((hmf)->pj) = (fromBin_<int64_t>((hmd), (*hme)));
((hmf)->ne) = (fromBin_<ga*>((hmd), (*hme)));
((hmf)->nf) = (fromBin_<Array_<char16_t>*>((hmd), (*hme)));
((hmf)->ng) = (fromBin_<fx*>((hmd), (*hme)));
((hmf)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hmd), (*hme)));
((hmf)->ni) = (fromBin_<Array_<char16_t>*>((hmd), (*hme)));
((hmf)->nj) = (fromBin_<fx*>((hmd), (*hme)));
((hmf)->nk) = (fromBin_<fy*>((hmd), (*hme)));
((hmf)->no) = (fromBin_<bool>((hmd), (*hme)));
((hmf)->lw) = (fromBin_<int64_t>((hmd), (*hme)));
return hmf;
}
// rebuildExprValue
static gd* ecu(bvq* hmg /*ast*/){
if(!eqAddr_(((hmg)->nk), (nullptr))){
return as_<gd>(classTable_, ((hmg)->nk), 14);
}
((hmg)->nk) = (hmg);
if(!(((hmg)->lw) == (67584LL))){
throw 0xE9170000U;
}
((hmg)->pj) = (1LL);
return hmg;
}
// rebuildExprValuePrim
static gd* ecw(bvp* hmj /*ast*/){
if(!eqAddr_(((hmj)->nk), (nullptr))){
return as_<gd>(classTable_, ((hmj)->nk), 14);
}
((hmj)->nk) = (hmj);
((hmj)->pj) = (1LL);
return hmj;
}
// rebuildExprValueStr
static gd* ecy(ecz* hmm /*ast*/){
if(!eqAddr_(((hmm)->nk), (nullptr))){
return as_<gd>(classTable_, ((hmm)->nk), 14);
}
((hmm)->nk) = (hmm);
((hmm)->pj) = (1LL);
return hmm;
}
// _dtor
static void hmp(ecz* hmq){
((hmq)->glw) = (nullptr);
((hmq)->pf) = (nullptr);
((hmq)->ne) = (nullptr);
((hmq)->nf) = (nullptr);
((hmq)->ng) = (nullptr);
((hmq)->nh) = (nullptr);
((hmq)->ni) = (nullptr);
((hmq)->nj) = (nullptr);
((hmq)->nk) = (nullptr);
}
// _copy
static ecz* hmr(ecz* hms){
ecz* hmt = nullptr;
(hmt) = (new ecz());
((hmt)->glw) = (copy_((hms)->glw));
((hmt)->pf) = (copy_((hms)->pf));
((hmt)->pj) = ((hms)->pj);
((hmt)->ne) = (copy_((hms)->ne));
((hmt)->nf) = (copy_((hms)->nf));
((hmt)->ng) = (copy_((hms)->ng));
((hmt)->nh) = (copy_((hms)->nh));
((hmt)->ni) = (copy_((hms)->ni));
((hmt)->nj) = (copy_((hms)->nj));
((hmt)->nk) = (copy_((hms)->nk));
((hmt)->no) = ((hms)->no);
((hmt)->lw) = ((hms)->lw);
return as_<ecz>(classTable_, (hmt), 128);
}
// _toBin
static Array_<uint8_t>* hmu(ecz* hmv){
Array_<uint8_t>* hmw = nullptr;
(hmw) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hmw) = ((hmw)->Cat(toBin_((hmv)->glw)));
(hmw) = ((hmw)->Cat(toBin_((hmv)->pf)));
(hmw) = ((hmw)->Cat(toBin_((hmv)->pj)));
(hmw) = ((hmw)->Cat(toBin_((hmv)->ne)));
(hmw) = ((hmw)->Cat(toBin_((hmv)->nf)));
(hmw) = ((hmw)->Cat(toBin_((hmv)->ng)));
(hmw) = ((hmw)->Cat(toBin_((hmv)->nh)));
(hmw) = ((hmw)->Cat(toBin_((hmv)->ni)));
(hmw) = ((hmw)->Cat(toBin_((hmv)->nj)));
(hmw) = ((hmw)->Cat(toBin_((hmv)->nk)));
(hmw) = ((hmw)->Cat(toBin_((hmv)->no)));
(hmw) = ((hmw)->Cat(toBin_((hmv)->lw)));
return hmw;
}
// _fromBin
static ecz* hnj(ecz* hnk, Array_<uint8_t>* hnl, int64_t* hnm){
ecz* hnn = nullptr;
(hnn) = (new ecz());
((hnn)->glw) = (fromBin_<Array_<char16_t>*>((hnl), (*hnm)));
((hnn)->pf) = (fromBin_<gc*>((hnl), (*hnm)));
((hnn)->pj) = (fromBin_<int64_t>((hnl), (*hnm)));
((hnn)->ne) = (fromBin_<ga*>((hnl), (*hnm)));
((hnn)->nf) = (fromBin_<Array_<char16_t>*>((hnl), (*hnm)));
((hnn)->ng) = (fromBin_<fx*>((hnl), (*hnm)));
((hnn)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hnl), (*hnm)));
((hnn)->ni) = (fromBin_<Array_<char16_t>*>((hnl), (*hnm)));
((hnn)->nj) = (fromBin_<fx*>((hnl), (*hnm)));
((hnn)->nk) = (fromBin_<fy*>((hnl), (*hnm)));
((hnn)->no) = (fromBin_<bool>((hnl), (*hnm)));
((hnn)->lw) = (fromBin_<int64_t>((hnl), (*hnm)));
return hnn;
}
// rebuildExprValueEnumElement
static gd* edb(edc* hno /*ast*/){
if(!eqAddr_(((hno)->nk), (nullptr))){
return as_<gd>(classTable_, ((hno)->nk), 14);
}
((hno)->nk) = (hno);
((hno)->pj) = (1LL);
return hno;
}
// _dtor
static void hnr(edc* hns){
((hns)->gki) = (nullptr);
((hns)->pf) = (nullptr);
((hns)->ne) = (nullptr);
((hns)->nf) = (nullptr);
((hns)->ng) = (nullptr);
((hns)->nh) = (nullptr);
((hns)->ni) = (nullptr);
((hns)->nj) = (nullptr);
((hns)->nk) = (nullptr);
}
// _copy
static edc* hnt(edc* hnu){
edc* hnv = nullptr;
(hnv) = (new edc());
((hnv)->gki) = (copy_((hnu)->gki));
((hnv)->pf) = (copy_((hnu)->pf));
((hnv)->pj) = ((hnu)->pj);
((hnv)->ne) = (copy_((hnu)->ne));
((hnv)->nf) = (copy_((hnu)->nf));
((hnv)->ng) = (copy_((hnu)->ng));
((hnv)->nh) = (copy_((hnu)->nh));
((hnv)->ni) = (copy_((hnu)->ni));
((hnv)->nj) = (copy_((hnu)->nj));
((hnv)->nk) = (copy_((hnu)->nk));
((hnv)->no) = ((hnu)->no);
((hnv)->lw) = ((hnu)->lw);
return as_<edc>(classTable_, (hnv), 130);
}
// _toBin
static Array_<uint8_t>* hnw(edc* hnx){
Array_<uint8_t>* hny = nullptr;
(hny) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hny) = ((hny)->Cat(toBin_((hnx)->gki)));
(hny) = ((hny)->Cat(toBin_((hnx)->pf)));
(hny) = ((hny)->Cat(toBin_((hnx)->pj)));
(hny) = ((hny)->Cat(toBin_((hnx)->ne)));
(hny) = ((hny)->Cat(toBin_((hnx)->nf)));
(hny) = ((hny)->Cat(toBin_((hnx)->ng)));
(hny) = ((hny)->Cat(toBin_((hnx)->nh)));
(hny) = ((hny)->Cat(toBin_((hnx)->ni)));
(hny) = ((hny)->Cat(toBin_((hnx)->nj)));
(hny) = ((hny)->Cat(toBin_((hnx)->nk)));
(hny) = ((hny)->Cat(toBin_((hnx)->no)));
(hny) = ((hny)->Cat(toBin_((hnx)->lw)));
return hny;
}
// _fromBin
static edc* hol(edc* hom, Array_<uint8_t>* hon, int64_t* hoo){
edc* hop = nullptr;
(hop) = (new edc());
((hop)->gki) = (fromBin_<Array_<char16_t>*>((hon), (*hoo)));
((hop)->pf) = (fromBin_<gc*>((hon), (*hoo)));
((hop)->pj) = (fromBin_<int64_t>((hon), (*hoo)));
((hop)->ne) = (fromBin_<ga*>((hon), (*hoo)));
((hop)->nf) = (fromBin_<Array_<char16_t>*>((hon), (*hoo)));
((hop)->ng) = (fromBin_<fx*>((hon), (*hoo)));
((hop)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hon), (*hoo)));
((hop)->ni) = (fromBin_<Array_<char16_t>*>((hon), (*hoo)));
((hop)->nj) = (fromBin_<fx*>((hon), (*hoo)));
((hop)->nk) = (fromBin_<fy*>((hon), (*hoo)));
((hop)->no) = (fromBin_<bool>((hon), (*hoo)));
((hop)->lw) = (fromBin_<int64_t>((hon), (*hoo)));
return hop;
}
// rebuildExprValueFloat
static gd* ede(edf* hoq /*ast*/){
if(!eqAddr_(((hoq)->nk), (nullptr))){
return as_<gd>(classTable_, ((hoq)->nk), 14);
}
((hoq)->nk) = (hoq);
((hoq)->pj) = (1LL);
return hoq;
}
// _dtor
static void hot(edf* hou){
((hou)->pf) = (nullptr);
((hou)->ne) = (nullptr);
((hou)->nf) = (nullptr);
((hou)->ng) = (nullptr);
((hou)->nh) = (nullptr);
((hou)->ni) = (nullptr);
((hou)->nj) = (nullptr);
((hou)->nk) = (nullptr);
}
// _copy
static edf* hov(edf* how){
edf* hox = nullptr;
(hox) = (new edf());
((hox)->ggy) = ((how)->ggy);
((hox)->pf) = (copy_((how)->pf));
((hox)->pj) = ((how)->pj);
((hox)->ne) = (copy_((how)->ne));
((hox)->nf) = (copy_((how)->nf));
((hox)->ng) = (copy_((how)->ng));
((hox)->nh) = (copy_((how)->nh));
((hox)->ni) = (copy_((how)->ni));
((hox)->nj) = (copy_((how)->nj));
((hox)->nk) = (copy_((how)->nk));
((hox)->no) = ((how)->no);
((hox)->lw) = ((how)->lw);
return as_<edf>(classTable_, (hox), 132);
}
// _toBin
static Array_<uint8_t>* hoy(edf* hoz){
Array_<uint8_t>* hpa = nullptr;
(hpa) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hpa) = ((hpa)->Cat(toBin_((hoz)->ggy)));
(hpa) = ((hpa)->Cat(toBin_((hoz)->pf)));
(hpa) = ((hpa)->Cat(toBin_((hoz)->pj)));
(hpa) = ((hpa)->Cat(toBin_((hoz)->ne)));
(hpa) = ((hpa)->Cat(toBin_((hoz)->nf)));
(hpa) = ((hpa)->Cat(toBin_((hoz)->ng)));
(hpa) = ((hpa)->Cat(toBin_((hoz)->nh)));
(hpa) = ((hpa)->Cat(toBin_((hoz)->ni)));
(hpa) = ((hpa)->Cat(toBin_((hoz)->nj)));
(hpa) = ((hpa)->Cat(toBin_((hoz)->nk)));
(hpa) = ((hpa)->Cat(toBin_((hoz)->no)));
(hpa) = ((hpa)->Cat(toBin_((hoz)->lw)));
return hpa;
}
// _fromBin
static edf* hpn(edf* hpo, Array_<uint8_t>* hpp, int64_t* hpq){
edf* hpr = nullptr;
(hpr) = (new edf());
((hpr)->ggy) = (fromBin_<double>((hpp), (*hpq)));
((hpr)->pf) = (fromBin_<gc*>((hpp), (*hpq)));
((hpr)->pj) = (fromBin_<int64_t>((hpp), (*hpq)));
((hpr)->ne) = (fromBin_<ga*>((hpp), (*hpq)));
((hpr)->nf) = (fromBin_<Array_<char16_t>*>((hpp), (*hpq)));
((hpr)->ng) = (fromBin_<fx*>((hpp), (*hpq)));
((hpr)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hpp), (*hpq)));
((hpr)->ni) = (fromBin_<Array_<char16_t>*>((hpp), (*hpq)));
((hpr)->nj) = (fromBin_<fx*>((hpp), (*hpq)));
((hpr)->nk) = (fromBin_<fy*>((hpp), (*hpq)));
((hpr)->no) = (fromBin_<bool>((hpp), (*hpq)));
((hpr)->lw) = (fromBin_<int64_t>((hpp), (*hpq)));
return hpr;
}
// rebuildExprValueArray
static gd* edh(edi* hps /*ast*/){
bool hpw = false; // nullSet
bool hpx = false; // enumSet
List_<gd*>* hpy = nullptr; // items
gd* hqa = nullptr; // data
gc* hqe = nullptr; // dataType
cai* hqt = nullptr; // type
List_<gd*>* hrc = nullptr; // items
gd* hre = nullptr; // item
bool hrk = false; // isConst
List_<gd*>* hrm = nullptr; // items
ecz* hru = nullptr; // ast2
Array_<char16_t>* hrv = nullptr; // s
int64_t hrw = 0; // idx
List_<gd*>* hrx = nullptr; // items
if(!eqAddr_(((hps)->nk), (nullptr))){
return as_<gd>(classTable_, ((hps)->nk), 14);
}
((hps)->nk) = (hps);
if(!(eqAddr_(((hps)->pf), (nullptr)))){
throw 0xE9170000U;
}
(hpw) = (false);
(hpx) = (false);
(hpy) = ((hps)->heq);
awe<List_<gd*>*>((hpy), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((hpy), (new Array_<int64_t>(1, (0LL)))))){
(hqa) = (awi<List_<gd*>*, gd*>((hpy), (new Array_<int64_t>(1, (0LL)))));
(hqa) = ((bxx)((hqa), (false)));
if(eqAddr_((hqa), (nullptr))){
return nullptr;
}
(hqe) = ((hqa)->pf);
if(eqAddr_(((hps)->pf), (nullptr))){
if(((hqe)->lw) == (1027LL)){
if(hpx){
(ad)((131132LL), ((hps)->ne), (nullptr));
return nullptr;
}
(hpw) = (true);
}
else if(((hqe)->lw) == (1028LL)){
if(hpw){
(ad)((131133LL), ((hps)->ne), (nullptr));
return nullptr;
}
(hpx) = (true);
}
else{
if((hpw) && (!((ckw)((hqe))))){
(ad)((131133LL), ((hps)->ne), (nullptr));
return nullptr;
}
if((hpx) && (!((clb)((hqe))))){
(ad)((131132LL), ((hps)->ne), (nullptr));
return nullptr;
}
(hqt) = (new cai());
(btr)((hqt), (66561LL), ((hqe)->ne));
((hqt)->cak) = (hqe);
((hps)->pf) = (hqt);
}
}
else if(!((dzp)(((as_<cai>(classTable_, ((hps)->pf), 76))->cak), (hqe), (false)))){
(ad)((131132LL), ((hps)->ne), (nullptr));
return nullptr;
}
bfe<List_<gd*>*, gd*>((hpy), (new Array_<int64_t>(1, (0LL))), (hqa));
bfh<List_<gd*>*>((hpy), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_(((hps)->pf), (nullptr))){
if(hpx){
(ad)((131134LL), ((hps)->ne), (nullptr));
return nullptr;
}
else{
(ad)((131135LL), ((hps)->ne), (nullptr));
return nullptr;
}
}
if((clb)(((as_<cai>(classTable_, ((hps)->pf), 76))->cak))){
(hrc) = ((hps)->heq);
awe<List_<gd*>*>((hrc), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((hrc), (new Array_<int64_t>(1, (0LL)))))){
(hre) = (awi<List_<gd*>*, gd*>((hrc), (new Array_<int64_t>(1, (0LL)))));
if((((hre)->pf)->lw) == (1028LL)){
(hre) = ((dzs)((hre), ((as_<cai>(classTable_, ((hps)->pf), 76))->cak)));
bfe<List_<gd*>*, gd*>((hrc), (new Array_<int64_t>(1, (0LL))), (hre));
bfh<List_<gd*>*>((hrc), (new Array_<int64_t>(1, (0LL))));
}
else{
ays<List_<gd*>*>((hrc), (new Array_<int64_t>(1, (0LL))));
}
}
}
if((fka)(((hps)->pf))){
(hrk) = (true);
(hrm) = ((hps)->heq);
awe<List_<gd*>*>((hrm), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((hrm), (new Array_<int64_t>(1, (0LL)))))){
if(((awi<List_<gd*>*, gd*>((hrm), (new Array_<int64_t>(1, (0LL)))))->lw) != (67584LL)){
(hrk) = (false);
break;
}
ays<List_<gd*>*>((hrm), (new Array_<int64_t>(1, (0LL))));
}
if(hrk){
(hru) = (new ecz());
(buz)((hru), (67586LL), ((hps)->ne));
((hru)->pf) = ((hps)->pf);
(hrv) = (newArray_<char16_t, Array_<char16_t>*>(1, (((hps)->heq)->Len())));
(hrw) = (0LL);
(hrx) = ((hps)->heq);
awe<List_<gd*>*>((hrx), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((hrx), (new Array_<int64_t>(1, (0LL)))))){
((hrv)->At(hrw)) = (static_cast<char16_t>((as_<bvp>(classTable_, (awi<List_<gd*>*, gd*>((hrx), (new Array_<int64_t>(1, (0LL))))), 70))->bvr));
ays<List_<gd*>*>((hrx), (new Array_<int64_t>(1, (0LL))));
(hrw) = ((hrw) + (1LL));
}
((hru)->glw) = (hrv);
(hru) = (as_<ecz>(classTable_, ((ecy)((hru))), 128));
((hps)->nk) = (hps);
return as_<gd>(classTable_, ((hps)->nk), 14);
}
}
((hps)->pj) = (1LL);
return hps;
}
// _dtor
static void hsa(edi* hsb){
((hsb)->heq) = (nullptr);
((hsb)->pf) = (nullptr);
((hsb)->ne) = (nullptr);
((hsb)->nf) = (nullptr);
((hsb)->ng) = (nullptr);
((hsb)->nh) = (nullptr);
((hsb)->ni) = (nullptr);
((hsb)->nj) = (nullptr);
((hsb)->nk) = (nullptr);
}
// _copy
static edi* hsc(edi* hsd){
edi* hse = nullptr;
(hse) = (new edi());
((hse)->heq) = (copy_((hsd)->heq));
((hse)->pf) = (copy_((hsd)->pf));
((hse)->pj) = ((hsd)->pj);
((hse)->ne) = (copy_((hsd)->ne));
((hse)->nf) = (copy_((hsd)->nf));
((hse)->ng) = (copy_((hsd)->ng));
((hse)->nh) = (copy_((hsd)->nh));
((hse)->ni) = (copy_((hsd)->ni));
((hse)->nj) = (copy_((hsd)->nj));
((hse)->nk) = (copy_((hsd)->nk));
((hse)->no) = ((hsd)->no);
((hse)->lw) = ((hsd)->lw);
return as_<edi>(classTable_, (hse), 134);
}
// _toBin
static Array_<uint8_t>* hsf(edi* hsg){
Array_<uint8_t>* hsh = nullptr;
(hsh) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hsh) = ((hsh)->Cat(toBin_((hsg)->heq)));
(hsh) = ((hsh)->Cat(toBin_((hsg)->pf)));
(hsh) = ((hsh)->Cat(toBin_((hsg)->pj)));
(hsh) = ((hsh)->Cat(toBin_((hsg)->ne)));
(hsh) = ((hsh)->Cat(toBin_((hsg)->nf)));
(hsh) = ((hsh)->Cat(toBin_((hsg)->ng)));
(hsh) = ((hsh)->Cat(toBin_((hsg)->nh)));
(hsh) = ((hsh)->Cat(toBin_((hsg)->ni)));
(hsh) = ((hsh)->Cat(toBin_((hsg)->nj)));
(hsh) = ((hsh)->Cat(toBin_((hsg)->nk)));
(hsh) = ((hsh)->Cat(toBin_((hsg)->no)));
(hsh) = ((hsh)->Cat(toBin_((hsg)->lw)));
return hsh;
}
// _fromBin
static edi* hsu(edi* hsv, Array_<uint8_t>* hsw, int64_t* hsx){
edi* hsy = nullptr;
(hsy) = (new edi());
((hsy)->heq) = (fromBin_<List_<gd*>*>((hsw), (*hsx)));
((hsy)->pf) = (fromBin_<gc*>((hsw), (*hsx)));
((hsy)->pj) = (fromBin_<int64_t>((hsw), (*hsx)));
((hsy)->ne) = (fromBin_<ga*>((hsw), (*hsx)));
((hsy)->nf) = (fromBin_<Array_<char16_t>*>((hsw), (*hsx)));
((hsy)->ng) = (fromBin_<fx*>((hsw), (*hsx)));
((hsy)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hsw), (*hsx)));
((hsy)->ni) = (fromBin_<Array_<char16_t>*>((hsw), (*hsx)));
((hsy)->nj) = (fromBin_<fx*>((hsw), (*hsx)));
((hsy)->nk) = (fromBin_<fy*>((hsw), (*hsx)));
((hsy)->no) = (fromBin_<bool>((hsw), (*hsx)));
((hsy)->lw) = (fromBin_<int64_t>((hsw), (*hsx)));
return hsy;
}
// _dtor
static void hsz(eez* hta){
((hta)->efb) = (nullptr);
((hta)->ne) = (nullptr);
((hta)->nf) = (nullptr);
((hta)->ng) = (nullptr);
((hta)->nh) = (nullptr);
((hta)->ni) = (nullptr);
((hta)->nj) = (nullptr);
((hta)->nk) = (nullptr);
}
// _copy
static eez* htb(eez* htc){
eez* htd = nullptr;
(htd) = (new eez());
((htd)->efb) = (copy_((htc)->efb));
((htd)->ne) = (copy_((htc)->ne));
((htd)->nf) = (copy_((htc)->nf));
((htd)->ng) = (copy_((htc)->ng));
((htd)->nh) = (copy_((htc)->nh));
((htd)->ni) = (copy_((htc)->ni));
((htd)->nj) = (copy_((htc)->nj));
((htd)->nk) = (copy_((htc)->nk));
((htd)->no) = ((htc)->no);
((htd)->lw) = ((htc)->lw);
return as_<eez>(classTable_, (htd), 136);
}
// _toBin
static Array_<uint8_t>* hte(eez* htf){
Array_<uint8_t>* htg = nullptr;
(htg) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(htg) = ((htg)->Cat(toBin_((htf)->efb)));
(htg) = ((htg)->Cat(toBin_((htf)->ne)));
(htg) = ((htg)->Cat(toBin_((htf)->nf)));
(htg) = ((htg)->Cat(toBin_((htf)->ng)));
(htg) = ((htg)->Cat(toBin_((htf)->nh)));
(htg) = ((htg)->Cat(toBin_((htf)->ni)));
(htg) = ((htg)->Cat(toBin_((htf)->nj)));
(htg) = ((htg)->Cat(toBin_((htf)->nk)));
(htg) = ((htg)->Cat(toBin_((htf)->no)));
(htg) = ((htg)->Cat(toBin_((htf)->lw)));
return htg;
}
// _fromBin
static eez* htr(eez* hts, Array_<uint8_t>* htt, int64_t* htu){
eez* htv = nullptr;
(htv) = (new eez());
((htv)->efb) = (fromBin_<bgi*>((htt), (*htu)));
((htv)->ne) = (fromBin_<ga*>((htt), (*htu)));
((htv)->nf) = (fromBin_<Array_<char16_t>*>((htt), (*htu)));
((htv)->ng) = (fromBin_<fx*>((htt), (*htu)));
((htv)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((htt), (*htu)));
((htv)->ni) = (fromBin_<Array_<char16_t>*>((htt), (*htu)));
((htv)->nj) = (fromBin_<fx*>((htt), (*htu)));
((htv)->nk) = (fromBin_<fy*>((htt), (*htu)));
((htv)->no) = (fromBin_<bool>((htt), (*htu)));
((htv)->lw) = (fromBin_<int64_t>((htt), (*htu)));
return htv;
}
// rebuildVar
static void efa(bgi* htw /*ast*/){
if(!eqAddr_(((htw)->nk), (nullptr))){
return;
}
((htw)->nk) = (htw);
(bxb)(((htw)->bgk));
}
// rebuildIf
static ge* efy(cjh* htz /*ast*/, gc* hua /*retType*/, fw* hub /*parentFunc*/){
List_<cji*>* huh = nullptr; // items
cji* huj = nullptr; // elIf
btw* huq = nullptr; // stats
List_<cji*>* hux = nullptr; // items
cji* hvb = nullptr; // elIf
btw* hvk = nullptr; // block_
if(!eqAddr_(((htz)->nk), (nullptr))){
return as_<ge>(classTable_, ((htz)->nk), 16);
}
((htz)->nk) = (htz);
((htz)->epa) = ((bxx)(((htz)->epa), (false)));
if((!eqAddr_(((htz)->epa), (nullptr))) && (!((ghb)((((htz)->epa)->pf))))){
(ad)((131094LL), (((htz)->epa)->ne), (nullptr));
}
((htz)->epc) = (as_<btw>(classTable_, ((egk)(((htz)->epc), (hua), (hub))), 54));
(huh) = ((htz)->epi);
awe<List_<cji*>*>((huh), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cji*>*>((huh), (new Array_<int64_t>(1, (0LL)))))){
(huj) = (awi<List_<cji*>*, cji*>((huh), (new Array_<int64_t>(1, (0LL)))));
((huj)->epl) = ((bxx)(((huj)->epl), (false)));
if((!eqAddr_(((huj)->epl), (nullptr))) && (!((ghb)((((huj)->epl)->pf))))){
(ad)((131095LL), (((huj)->epl)->ne), (nullptr));
}
((huj)->epm) = (as_<btw>(classTable_, ((egk)(((huj)->epm), (hua), (hub))), 54));
ays<List_<cji*>*>((huh), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((htz)->epo), (nullptr))){
((htz)->epo) = (as_<btw>(classTable_, ((egk)(((htz)->epo), (hua), (hub))), 54));
}
if(!eqAddr_(((htz)->epa), (nullptr))){
(huq) = (nullptr);
if((((htz)->epa)->lw) != (67585LL)){
return htz;
}
if(((as_<bvp>(classTable_, ((htz)->epa), 70))->bvr) != (0x0000000000000000ULL)){
(huq) = ((htz)->epc);
}
if(!eqAddr_((huq), (nullptr))){
(hux) = ((htz)->epi);
awe<List_<cji*>*>((hux), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cji*>*>((hux), (new Array_<int64_t>(1, (0LL)))))){
(hvb) = (awi<List_<cji*>*, cji*>((hux), (new Array_<int64_t>(1, (0LL)))));
if((((hvb)->epl)->lw) != (67585LL)){
return htz;
}
if(((as_<bvp>(classTable_, ((hvb)->epl), 70))->bvr) != (0x0000000000000000ULL)){
(huq) = ((hvb)->epm);
break;
}
ays<List_<cji*>*>((hux), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_((huq), (nullptr))){
if(eqAddr_(((htz)->epo), (nullptr))){
(hvk) = (new btw());
(btr)((hvk), (66052LL), ((htz)->ne));
((hvk)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((hvk)->bui) = (new List_<ge*>());
(huq) = (hvk);
}
else{
(huq) = ((htz)->epo);
}
}
}
((htz)->epa) = (nullptr);
((htz)->epc) = (huq);
}
return htz;
}
// rebuildSwitch
static ge* ega(cjl* hvm /*ast*/, gc* hvn /*retType*/, fw* hvo /*parentFunc*/){
List_<cjm*>* hvw = nullptr; // items
cjm* hvy = nullptr; // case_
List_<bty*>* hvz = nullptr; // items2
bty* hwb = nullptr; // exprs
if(!eqAddr_(((hvm)->nk), (nullptr))){
return as_<ge>(classTable_, ((hvm)->nk), 16);
}
((hvm)->nk) = (hvm);
((hvm)->esb) = ((bxx)(((hvm)->esb), (false)));
if(!eqAddr_(((hvm)->esb), (nullptr))){
if(!((gkb)((((hvm)->esb)->pf), (true)))){
(ad)((131096LL), (((hvm)->esb)->ne), (nullptr));
}
(((hvm)->buf)->qf) = (((hvm)->esb)->pf);
}
(hvw) = ((hvm)->esf);
awe<List_<cjm*>*>((hvw), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cjm*>*>((hvw), (new Array_<int64_t>(1, (0LL)))))){
(hvy) = (awi<List_<cjm*>*, cjm*>((hvw), (new Array_<int64_t>(1, (0LL)))));
(hvz) = ((hvy)->esj);
awe<List_<bty*>*>((hvz), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bty*>*>((hvz), (new Array_<int64_t>(1, (0LL)))))){
(hwb) = (awi<List_<bty*>*, bty*>((hvz), (new Array_<int64_t>(1, (0LL)))));
((hwb)->bvu) = ((bxx)(((hwb)->bvu), (false)));
if((!eqAddr_(((hvm)->esb), (nullptr))) && (!eqAddr_(((hwb)->bvu), (nullptr)))){
if(!((dzp)((((hvm)->esb)->pf), (((hwb)->bvu)->pf), (false)))){
(ad)((131097LL), (((hwb)->bvu)->ne), (nullptr));
}
else if(((((hwb)->bvu)->pf)->lw) == (1028LL)){
((hwb)->bvu) = ((dzs)(((hwb)->bvu), (((hvm)->esb)->pf)));
}
}
if(!eqAddr_(((hwb)->bvz), (nullptr))){
((hwb)->bvz) = ((bxx)(((hwb)->bvz), (false)));
if((!eqAddr_(((hvm)->esb), (nullptr))) && (!eqAddr_(((hwb)->bvz), (nullptr)))){
if(!((dzp)((((hvm)->esb)->pf), (((hwb)->bvz)->pf), (false)))){
(ad)((131097LL), (((hwb)->bvz)->ne), (nullptr));
}
else if(((((hwb)->bvz)->pf)->lw) == (1028LL)){
((hwb)->bvz) = ((dzs)(((hwb)->bvz), (((hvm)->esb)->pf)));
}
}
}
ays<List_<bty*>*>((hvz), (new Array_<int64_t>(1, (0LL))));
}
((hvy)->esx) = (as_<btw>(classTable_, ((egk)(((hvy)->esx), (hvn), (hvo))), 54));
ays<List_<cjm*>*>((hvw), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((hvm)->esz), (nullptr))){
((hvm)->esz) = (as_<btw>(classTable_, ((egk)(((hvm)->esz), (hvn), (hvo))), 54));
}
return hvm;
}
// rebuildWhile
static ge* egc(cjp* hwq /*ast*/, gc* hwr /*retType*/, fw* hws /*parentFunc*/){
if(!eqAddr_(((hwq)->nk), (nullptr))){
return as_<ge>(classTable_, ((hwq)->nk), 16);
}
((hwq)->nk) = (hwq);
if(!eqAddr_(((hwq)->ewe), (nullptr))){
((hwq)->ewe) = ((bxx)(((hwq)->ewe), (false)));
if((!eqAddr_(((hwq)->ewe), (nullptr))) && (!((ghb)((((hwq)->ewe)->pf))))){
(ad)((131098LL), (((hwq)->ewe)->ne), (nullptr));
}
}
((hwq)->ewg) = ((bxf)(((hwq)->ewg), (hwr), (hws)));
return hwq;
}
// rebuildFor
static ge* ege(cjt* hwz /*ast*/, gc* hxa /*retType*/, fw* hxb /*parentFunc*/){
if(!eqAddr_(((hwz)->nk), (nullptr))){
return as_<ge>(classTable_, ((hwz)->nk), 16);
}
((hwz)->nk) = (hwz);
((hwz)->ezd) = ((bxx)(((hwz)->ezd), (false)));
if(!eqAddr_(((hwz)->ezd), (nullptr))){
if(!((bdg)((((hwz)->ezd)->pf)))){
(ad)((131099LL), (((hwz)->ezd)->ne), (nullptr));
}
(((hwz)->buf)->qf) = (((hwz)->ezd)->pf);
}
((hwz)->ezc) = ((bxx)(((hwz)->ezc), (false)));
if((!eqAddr_(((hwz)->ezc), (nullptr))) && (!((bdg)((((hwz)->ezc)->pf))))){
(ad)((131100LL), (((hwz)->ezc)->ne), (nullptr));
}
((hwz)->eze) = ((bxx)(((hwz)->eze), (false)));
if(!eqAddr_(((hwz)->eze), (nullptr))){
if(!((bdg)((((hwz)->eze)->pf)))){
(ad)((131101LL), (((hwz)->eze)->ne), (nullptr));
}
if((((hwz)->eze)->lw) != (67585LL)){
(ad)((131102LL), (((hwz)->eze)->ne), (nullptr));
}
if(((as_<bvp>(classTable_, ((hwz)->eze), 70))->bvr) == (0x0000000000000000ULL)){
(ad)((131103LL), (((hwz)->eze)->ne), (nullptr));
}
}
((hwz)->ezm) = ((bxf)(((hwz)->ezm), (hxa), (hxb)));
return hwz;
}
// rebuildTry
static ge* egg(btu* hxs /*ast*/, gc* hxt /*retType*/, fw* hxu /*parentFunc*/){
List_<btx*>* hxz = nullptr; // items
btx* hyb = nullptr; // catch_
List_<bty*>* hyc = nullptr; // items2
bty* hye = nullptr; // exprs
if(!eqAddr_(((hxs)->nk), (nullptr))){
return as_<ge>(classTable_, ((hxs)->nk), 16);
}
((hxs)->nk) = (hxs);
(bxb)(((hxs)->buf));
((hxs)->buj) = (as_<btw>(classTable_, ((egk)(((hxs)->buj), (hxt), (hxu))), 54));
if((((hxs)->buk)->Len()) != (0LL)){
(hxz) = ((hxs)->buk);
awe<List_<btx*>*>((hxz), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<btx*>*>((hxz), (new Array_<int64_t>(1, (0LL)))))){
(hyb) = (awi<List_<btx*>*, btx*>((hxz), (new Array_<int64_t>(1, (0LL)))));
(hyc) = ((hyb)->bvh);
awe<List_<bty*>*>((hyc), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bty*>*>((hyc), (new Array_<int64_t>(1, (0LL)))))){
(hye) = (awi<List_<bty*>*, bty*>((hyc), (new Array_<int64_t>(1, (0LL)))));
((hye)->bvu) = ((bxx)(((hye)->bvu), (false)));
if((!eqAddr_(((hye)->bvu), (nullptr))) && ((!((bdg)((((hye)->bvu)->pf)))) || ((((hye)->bvu)->lw) != (67585LL)))){
(ad)((131104LL), (((hye)->bvu)->ne), (nullptr));
}
if(!eqAddr_(((hye)->bvz), (nullptr))){
((hye)->bvz) = ((bxx)(((hye)->bvz), (false)));
if((!eqAddr_(((hye)->bvz), (nullptr))) && ((!((bdg)((((hye)->bvz)->pf)))) || ((((hye)->bvz)->lw) != (67585LL)))){
(ad)((131104LL), (((hye)->bvz)->ne), (nullptr));
}
}
ays<List_<bty*>*>((hyc), (new Array_<int64_t>(1, (0LL))));
}
((hyb)->bvk) = (as_<btw>(classTable_, ((egk)(((hyb)->bvk), (hxt), (hxu))), 54));
ays<List_<btx*>*>((hxz), (new Array_<int64_t>(1, (0LL))));
}
}
if(!eqAddr_(((hxs)->bun), (nullptr))){
((hxs)->bun) = (as_<btw>(classTable_, ((egk)(((hxs)->bun), (hxt), (hxu))), 54));
}
return hxs;
}
// rebuildThrow
static ge* egi(cjy* hyn /*ast*/){
if(!eqAddr_(((hyn)->nk), (nullptr))){
return as_<ge>(classTable_, ((hyn)->nk), 16);
}
((hyn)->nk) = (hyn);
((hyn)->fcd) = ((bxx)(((hyn)->fcd), (false)));
if((!eqAddr_(((hyn)->fcd), (nullptr))) && (!((bdg)((((hyn)->fcd)->pf))))){
(ad)((131105LL), (((hyn)->fcd)->ne), (nullptr));
}
return hyn;
}
// rebuildBlock
static ge* egk(btw* hys /*ast*/, gc* hyt /*retType*/, fw* hyu /*parentFunc*/){
if(!eqAddr_(((hys)->nk), (nullptr))){
return as_<ge>(classTable_, ((hys)->nk), 16);
}
((hys)->nk) = (hys);
((hys)->bui) = ((bxf)(((hys)->bui), (hyt), (hyu)));
return hys;
}
// rebuildRet
static ge* egm(ckd* hyx /*ast*/, gc* hyy /*retType*/){
if(!eqAddr_(((hyx)->nk), (nullptr))){
return as_<ge>(classTable_, ((hyx)->nk), 16);
}
((hyx)->nk) = (hyx);
if(eqAddr_(((hyx)->fdj), (nullptr))){
if(!eqAddr_((hyy), (nullptr))){
(ad)((131106LL), ((hyx)->ne), (nullptr));
}
}
else{
((hyx)->fdj) = ((bxx)(((hyx)->fdj), (false)));
if(!eqAddr_(((hyx)->fdj), (nullptr))){
if((eqAddr_((hyy), (nullptr))) || (!((dzp)((((hyx)->fdj)->pf), (hyy), (false))))){
(ad)((131107LL), ((hyx)->ne), (nullptr));
}
else if(((((hyx)->fdj)->pf)->lw) == (1028LL)){
((hyx)->fdj) = ((dzs)(((hyx)->fdj), (hyy)));
}
}
}
return hyx;
}
// rebuildDo
static ge* ego(buu* hzl /*ast*/){
byb* hzq = nullptr; // expr
int64_t hzr = 0; // kind
int64_t hzt = 0;
btw* iad = nullptr; // block_
gd* iaf = nullptr; // lhs
ecs* iak = nullptr; // lhs2
ecp* ian = nullptr; // lhs2
byb* iao = nullptr; // exprAssign
byb* iaq = nullptr; // exprOne
if(!eqAddr_(((hzl)->nk), (nullptr))){
return as_<ge>(classTable_, ((hzl)->nk), 16);
}
((hzl)->nk) = (hzl);
if((!eqAddr_(((hzl)->bve), (nullptr))) && ((((hzl)->bve)->lw) == (2050LL))){
(hzq) = (as_<byb>(classTable_, ((hzl)->bve), 72));
(hzr) = (0LL);
switch((hzq)->byc){
case 1LL:
(hzr) = (19LL);
break;
case 2LL:
(hzr) = (20LL);
break;
case 3LL:
(hzr) = (21LL);
break;
case 4LL:
(hzr) = (22LL);
break;
case 5LL:
(hzr) = (23LL);
break;
case 6LL:
(hzr) = (24LL);
break;
case 7LL:
(hzr) = (18LL);
break;
}
if((hzr) != (0LL)){
(iad) = (new btw());
(btr)((iad), (66052LL), ((hzl)->ne));
((iad)->nk) = (iad);
((iad)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((iad)->buf) = (nullptr);
((iad)->bui) = (new List_<ge*>());
(iaf) = ((bxx)(((hzq)->byf), (false)));
if(eqAddr_((iaf), (nullptr))){
return nullptr;
}
if(((iaf)->lw) == (2059LL)){
(iak) = (as_<ecs>(classTable_, (iaf), 126));
((iak)->heh) = ((ial)(((iad)->bui), ((iak)->heh), ((hzl)->ne)));
}
else if(((iaf)->lw) == (2058LL)){
(ian) = (as_<ecp>(classTable_, (iaf), 124));
((ian)->hfz) = ((ial)(((iad)->bui), ((ian)->hfz), ((hzl)->ne)));
((ian)->hge) = ((ial)(((iad)->bui), ((ian)->hge), ((hzl)->ne)));
}
(iao) = (new byb());
(buz)((iao), (2050LL), ((hzl)->ne));
((iao)->byc) = (0LL);
((iao)->byf) = (iaf);
(iaq) = (new byb());
(buz)((iaq), (2050LL), ((hzl)->ne));
((iaq)->byc) = (hzr);
((iaq)->byf) = (iaf);
((iaq)->byg) = ((hzq)->byg);
((iao)->byg) = (iaq);
((hzl)->bve) = ((bxx)((iao), (true)));
uh<List_<ge*>*, ge*>(((iad)->bui), (new Array_<int64_t>(1, (0LL))), (hzl));
return iad;
}
}
((hzl)->bve) = ((bxx)(((hzl)->bve), (true)));
if(eqAddr_(((hzl)->bve), (nullptr))){
return nullptr;
}
if(!((((((hzl)->bve)->lw) == (2050LL)) && ((((as_<byb>(classTable_, ((hzl)->bve), 72))->byc) == (0LL)) || (((as_<byb>(classTable_, ((hzl)->bve), 72))->byc) == (25LL)))) || ((((hzl)->bve)->lw) == (2057LL)))){
(ad)((131108LL), (((hzl)->bve)->ne), (nullptr));
}
return hzl;
}
// rebuildBreak
static ge* egq(ge* iav /*ast*/, gc* iaw /*retType*/, fw* iax /*parentFunc*/){
if(!eqAddr_(((iav)->nk), (nullptr))){
return as_<ge>(classTable_, ((iav)->nk), 16);
}
((iav)->nk) = (iav);
if((eqAddr_(((iav)->nj), (nullptr))) || ((aye<int64_t>((((iav)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) != (66048LL))){
(ad)((131109LL), ((iav)->ne), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(5, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B')))));
return nullptr;
}
((iav)->nj) = ((byh)((as_<ge>(classTable_, ((iav)->nj), 16)), (iaw), (iax)));
return iav;
}
// rebuildSkip
static ge* egs(ge* ibc /*ast*/, gc* ibd /*retType*/, fw* ibe /*parentFunc*/){
if(!eqAddr_(((ibc)->nk), (nullptr))){
return as_<ge>(classTable_, ((ibc)->nk), 16);
}
((ibc)->nk) = (ibc);
if((eqAddr_(((ibc)->nj), (nullptr))) || ((aye<int64_t>((((ibc)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) != (66048LL))){
(ad)((131109LL), ((ibc)->ne), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070')))));
return nullptr;
}
((ibc)->nj) = ((byh)((as_<ge>(classTable_, ((ibc)->nj), 16)), (ibd), (ibe)));
return ibc;
}
// rebuildAssert
static ge* egu(ckm* ibj /*ast*/){
if(!eqAddr_(((ibj)->nk), (nullptr))){
return as_<ge>(classTable_, ((ibj)->nk), 16);
}
if(ct){
return nullptr;
}
((ibj)->nk) = (ibj);
((ibj)->fex) = ((bxx)(((ibj)->fex), (false)));
if((!eqAddr_(((ibj)->fex), (nullptr))) && (!((ghb)((((ibj)->fex)->pf))))){
(ad)((131110LL), (((ibj)->fex)->ne), (nullptr));
}
return ibj;
}
// isClass
static bool eha(gc* ibq /*type*/){
return (((ibq)->lw) == (66565LL)) && ((((ibq)->nj)->lw) == (5LL));
}
// _dtor
static void ibr(ehf* ibs){
((ibs)->ne) = (nullptr);
((ibs)->nf) = (nullptr);
((ibs)->ng) = (nullptr);
((ibs)->nh) = (nullptr);
((ibs)->ni) = (nullptr);
((ibs)->nj) = (nullptr);
((ibs)->nk) = (nullptr);
}
// _copy
static ehf* ibt(ehf* ibu){
ehf* ibv = nullptr;
(ibv) = (new ehf());
((ibv)->ne) = (copy_((ibu)->ne));
((ibv)->nf) = (copy_((ibu)->nf));
((ibv)->ng) = (copy_((ibu)->ng));
((ibv)->nh) = (copy_((ibu)->nh));
((ibv)->ni) = (copy_((ibu)->ni));
((ibv)->nj) = (copy_((ibu)->nj));
((ibv)->nk) = (copy_((ibu)->nk));
((ibv)->no) = ((ibu)->no);
((ibv)->lw) = ((ibu)->lw);
return as_<ehf>(classTable_, (ibv), 138);
}
// _toBin
static Array_<uint8_t>* ibw(ehf* ibx){
Array_<uint8_t>* iby = nullptr;
(iby) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(iby) = ((iby)->Cat(toBin_((ibx)->ne)));
(iby) = ((iby)->Cat(toBin_((ibx)->nf)));
(iby) = ((iby)->Cat(toBin_((ibx)->ng)));
(iby) = ((iby)->Cat(toBin_((ibx)->nh)));
(iby) = ((iby)->Cat(toBin_((ibx)->ni)));
(iby) = ((iby)->Cat(toBin_((ibx)->nj)));
(iby) = ((iby)->Cat(toBin_((ibx)->nk)));
(iby) = ((iby)->Cat(toBin_((ibx)->no)));
(iby) = ((iby)->Cat(toBin_((ibx)->lw)));
return iby;
}
// _fromBin
static ehf* ici(ehf* icj, Array_<uint8_t>* ick, int64_t* icl){
ehf* icm = nullptr;
(icm) = (new ehf());
((icm)->ne) = (fromBin_<ga*>((ick), (*icl)));
((icm)->nf) = (fromBin_<Array_<char16_t>*>((ick), (*icl)));
((icm)->ng) = (fromBin_<fx*>((ick), (*icl)));
((icm)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ick), (*icl)));
((icm)->ni) = (fromBin_<Array_<char16_t>*>((ick), (*icl)));
((icm)->nj) = (fromBin_<fx*>((ick), (*icl)));
((icm)->nk) = (fromBin_<fy*>((ick), (*icl)));
((icm)->no) = (fromBin_<bool>((ick), (*icl)));
((icm)->lw) = (fromBin_<int64_t>((ick), (*icl)));
return icm;
}
// _fill
template<typename T_, typename C_> static void eht(T_ icn /*me_*/, Array_<int64_t>* ico /*type*/, C_ icp /*value*/){
for(int64_t i_ = 0; i_ < icn->L; i_++) icn->B[i_] = icp;
}
// _offset
static char16_t ehx(char16_t icq /*me_*/, int64_t icr /*n*/){
return static_cast<char16_t>((static_cast<uint64_t>(icq)) + (static_cast<uint64_t>(icr)));
}
// buildExpr
static void epf(gd* ics /*ast*/){
int64_t icu = 0;
switch((ics)->lw){
case 2049LL:
(icw)((as_<ebq>(classTable_, (ics), 110)));
break;
case 2050LL:
(icy)((as_<byb>(classTable_, (ics), 72)));
break;
case 2051LL:
(ida)((as_<ebv>(classTable_, (ics), 112)));
break;
case 2052LL:
(idc)((as_<eby>(classTable_, (ics), 114)));
break;
case 2053LL:
(ide)((as_<ecb>(classTable_, (ics), 116)));
break;
case 2054LL:
(idg)((as_<ece>(classTable_, (ics), 118)));
break;
case 2055LL:
(idi)((as_<ech>(classTable_, (ics), 120)));
break;
case 2056LL:
(idk)((as_<eck>(classTable_, (ics), 122)));
break;
case 2057LL:
(idm)((as_<bux>(classTable_, (ics), 64)));
break;
case 2058LL:
(ido)((as_<ecp>(classTable_, (ics), 124)));
break;
case 2059LL:
(idq)((as_<ecs>(classTable_, (ics), 126)));
break;
case 67584LL:
(ids)((as_<bvq>(classTable_, (ics), 68)));
break;
case 67585LL:
(idu)((as_<bvp>(classTable_, (ics), 70)));
break;
case 67586LL:
(idw)((as_<ecz>(classTable_, (ics), 128)));
break;
case 67588LL:
(idy)((as_<edf>(classTable_, (ics), 132)));
break;
case 2060LL:
(iea)((as_<edi>(classTable_, (ics), 134)));
break;
case 2062LL:
(iec)((as_<gd>(classTable_, (ics), 14)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// isChar
static bool esc(gc* iee /*type*/){
return (((iee)->lw) == (1026LL)) && (((as_<bud>(classTable_, (iee), 60))->bue) == (2LL));
}
// addTmpVar
static Array_<char16_t>* ezb(gc* ief /*type*/){
un* ieg = nullptr; // tmpVar
(ieg) = (new un());
((ieg)->bbe) = ((byw)());
((ieg)->bbf) = (ief);
uh<List_<un*>*, un*>((aq), (new Array_<int64_t>(1, (0LL))), (ieg));
return (ieg)->bbe;
}
// buildExpr
static void fhu(gd* ieh /*ast*/){
int64_t iej = 0;
switch((ieh)->lw){
case 2049LL:
(iel)((as_<ebq>(classTable_, (ieh), 110)));
break;
case 2050LL:
(ien)((as_<byb>(classTable_, (ieh), 72)));
break;
case 2051LL:
(iep)((as_<ebv>(classTable_, (ieh), 112)));
break;
case 2052LL:
(ier)((as_<eby>(classTable_, (ieh), 114)));
break;
case 2053LL:
(iet)((as_<ecb>(classTable_, (ieh), 116)));
break;
case 2054LL:
(iev)((as_<ece>(classTable_, (ieh), 118)));
break;
case 2055LL:
(iex)((as_<ech>(classTable_, (ieh), 120)));
break;
case 2056LL:
(iez)((as_<eck>(classTable_, (ieh), 122)));
break;
case 2057LL:
(ifb)((as_<bux>(classTable_, (ieh), 64)));
break;
case 2058LL:
(ifd)((as_<ecp>(classTable_, (ieh), 124)));
break;
case 2059LL:
(iff)((as_<ecs>(classTable_, (ieh), 126)));
break;
case 67584LL:
(ifh)((as_<bvq>(classTable_, (ieh), 68)));
break;
case 67585LL:
(ifj)((as_<bvp>(classTable_, (ieh), 70)));
break;
case 67586LL:
(ifl)((as_<ecz>(classTable_, (ieh), 128)));
break;
case 67588LL:
(ifn)((as_<edf>(classTable_, (ieh), 132)));
break;
case 2060LL:
(ifp)((as_<edi>(classTable_, (ieh), 134)));
break;
case 2062LL:
(ifr)((as_<gd>(classTable_, (ieh), 14)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// isStr
static bool fka(gc* ift /*type*/){
gc* ifw = nullptr; // itemType
if(((ift)->lw) == (66561LL)){
(ifw) = ((as_<cai>(classTable_, (ift), 76))->cak);
if((((ifw)->lw) == (1026LL)) && (((as_<bud>(classTable_, (ifw), 60))->bue) == (2LL))){
return true;
}
}
return false;
}
// addTmpVar
static Array_<char16_t>* flb(gc* ifz /*type*/){
va* iga = nullptr; // tmpVar
(iga) = (new va());
((iga)->bie) = ((cqm)());
((iga)->bif) = (ifz);
uh<List_<va*>*, va*>((bm), (new Array_<int64_t>(1, (0LL))), (iga));
return (iga)->bie;
}
// _peekStack
template<typename T_, typename R_> static R_ fnx(T_ igb /*me_*/, Array_<int64_t>* igc /*type*/){
return igb->B.top();
}
// isReserved
static bool fqa(Array_<char16_t>* igd /*name*/){
int64_t igl = 0;
int64_t igm = 0;
if(eqAddr_((bb), (nullptr))){
(bb) = (new Array_<Array_<char16_t>*>(47, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073')), (new Array_<char16_t>(6, u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074')), (new Array_<char16_t>(5, u'\u0062', u'\u0069', u'\u0074', u'\u0031', u'\u0036')), (new Array_<char16_t>(5, u'\u0062', u'\u0069', u'\u0074', u'\u0033', u'\u0032')), (new Array_<char16_t>(5, u'\u0062', u'\u0069', u'\u0074', u'\u0036', u'\u0034')), (new Array_<char16_t>(4, u'\u0062', u'\u0069', u'\u0074', u'\u0038')), (new Array_<char16_t>(5, u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B')), (new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C')), (new Array_<char16_t>(5, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B')), (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065')), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072')), (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073')), (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074')), (new Array_<char16_t>(3, u'\u0064', u'\u0062', u'\u0067')), (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074')), (new Array_<char16_t>(4, u'\u0064', u'\u0069', u'\u0063', u'\u0074')), (new Array_<char16_t>(2, u'\u0064', u'\u006F')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0069', u'\u0066')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065')), (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064')), (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D')), (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0076')), (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079')), (new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074')), (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072')), (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063')), (new Array_<char16_t>(2, u'\u0069', u'\u0066')), (new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0075', u'\u0064', u'\u0065')), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066')), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074')), (new Array_<char16_t>(4, u'\u006C', u'\u0069', u'\u0073', u'\u0074')), (new Array_<char16_t>(2, u'\u006D', u'\u0065')), (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C')), (new Array_<char16_t>(5, u'\u0071', u'\u0075', u'\u0065', u'\u0075', u'\u0065')), (new Array_<char16_t>(3, u'\u0072', u'\u0065', u'\u0074')), (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070')), (new Array_<char16_t>(5, u'\u0073', u'\u0074', u'\u0061', u'\u0063', u'\u006B')), (new Array_<char16_t>(5, u'\u0073', u'\u0075', u'\u0070', u'\u0065', u'\u0072')), (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(5, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077')), (new Array_<char16_t>(2, u'\u0074', u'\u006F')), (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065')), (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079')), (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072')), (new Array_<char16_t>(5, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065'))));
for(igl = (0LL), igm = (((bb)->Len()) - (2LL)); igl <= igm; igl += (1LL)){
if(!(cmp_(((bb)->At(igl)), ((bb)->At((igl) + (1LL)))) < 0)){
throw 0xE9170000U;
}
}
}
return (ign<Array_<Array_<char16_t>*>*, Array_<char16_t>*>((bb), (new Array_<int64_t>(1, (0LL))), (igd))) != (-1LL);
}
// parseStatEnd
static ge* fvx(int64_t igo /*row*/, int64_t igp /*col*/, fx* igq /*block_*/){
ge* igr = nullptr; // ast
Array_<char16_t>* igs = nullptr; // id
bool igt = false; // err
Array_<char16_t>* igv = nullptr;
(igr) = (new ge());
(bpl)((igr), (513LL), ((bpm)((bf), (igo), (igp))), (nullptr), (false));
(igs) = ((bqf)((true), (false)));
(igt) = (false);
(dgy)((u'\u000A'), (true));
igv = igs;
if(cmp_(igv, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
if(((igq)->lw) != (256LL)){
(igt) = (true);
}
}
else if(cmp_(igv, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0){
if(((igq)->lw) != (66049LL)){
(igt) = (true);
}
}
else if(cmp_(igv, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068'))) == 0){
if(((igq)->lw) != (66050LL)){
(igt) = (true);
}
}
else if(cmp_(igv, (new Array_<char16_t>(5, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065'))) == 0){
if(((igq)->lw) != (16843265LL)){
(igt) = (true);
}
}
else if(cmp_(igv, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0){
if(((igq)->lw) != (16843266LL)){
(igt) = (true);
}
}
else if(cmp_(igv, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0){
if(((igq)->lw) != (66051LL)){
(igt) = (true);
}
}
else if(cmp_(igv, (new Array_<char16_t>(5, u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B'))) == 0){
if(((igq)->lw) != (66052LL)){
(igt) = (true);
}
}
else{(ad)((65561LL), ((bpm)((bf), (igo), (igp))), (new Array_<Array_<char16_t>*>(1, (igs))));
}
if(igt){
(ad)((65562LL), ((bpm)((bf), (igo), (igp))), (new Array_<Array_<char16_t>*>(1, (igs))));
}
return igr;
}
// parseStatFunc
static ge* fvz(){
ihv* ihu = nullptr; // ast
(ihu) = (new ihv());
(bpl)((ihu), (514LL), (nullptr), (nullptr), (false));
((ihu)->ihw) = ((bqk)((nullptr), (false)));
return ihu;
}
// parseStatVar
static ge* fwb(){
eez* ihx = nullptr; // ast
(ihx) = (new eez());
(bpl)((ihx), (515LL), (nullptr), (nullptr), (false));
((ihx)->efb) = ((bqm)((3LL), (nullptr)));
return ihx;
}
// parseStatConst
static ge* fwd(){
ihz* ihy = nullptr; // ast
(ihy) = (new ihz());
(bpl)((ihy), (516LL), (nullptr), (nullptr), (false));
((ihy)->iia) = ((bqo)());
return ihy;
}
// parseStatAlias
static ge* fwf(){
iic* iib = nullptr; // ast
(iib) = (new iic());
(bpl)((iib), (517LL), (nullptr), (nullptr), (false));
((iib)->iid) = ((bqr)());
return iib;
}
// parseStatClass
static ge* fwh(){
iif* iie = nullptr; // ast
(iie) = (new iif());
(bpl)((iie), (518LL), (nullptr), (nullptr), (false));
((iie)->iig) = ((bqv)());
return iie;
}
// parseStatEnum
static ge* fwj(){
iii* iih = nullptr; // ast
(iih) = (new iii());
(bpl)((iih), (519LL), (nullptr), (nullptr), (false));
((iih)->iij) = ((bqx)());
return iih;
}
// parseStatIf
static ge* fwl(){
cjh* iik = nullptr; // ast
ge* iip = nullptr; // stat
int64_t iiq = 0; // typeId
cji* iis = nullptr; // elIf
(iik) = (new cjh());
(bpl)((iik), (66049LL), ((ddp)()), (nullptr), (false));
((iik)->buf) = (nullptr);
((iik)->epi) = (new List_<cji*>());
((iik)->epo) = (nullptr);
(iil)((iik));
(iim)((iik));
((iik)->epa) = ((dnd)());
(dgy)((u'\u0029'), (true));
(dgy)((u'\u000A'), (true));
((iik)->epc) = ((iio)((&iip), (&iiq), (66049LL), (iik)));
while((iiq) == (520LL)){
(iis) = (as_<cji>(classTable_, (iip), 90));
((iis)->epm) = ((iio)((&iip), (&iiq), (520LL), (iik)));
uh<List_<cji*>*, cji*>(((iik)->epi), (new Array_<int64_t>(1, (0LL))), (iis));
}
while((iiq) == (521LL)){
((iik)->epo) = ((iio)((&iip), (&iiq), (521LL), (iik)));
}
if(!((iiq) == (513LL))){
throw 0xE9170000U;
}
brh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return iik;
}
// parseStatElIf
static ge* fwn(int64_t iiu /*row*/, int64_t iiv /*col*/, fx* iiw /*block_*/){
cji* iix = nullptr; // ast
(iix) = (new cji());
(bpl)((iix), (520LL), (nullptr), (nullptr), (false));
((iix)->epm) = (nullptr);
if(((iiw)->lw) != (66049LL)){
(ad)((65566LL), ((bpm)((bf), (iiu), (iiv))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0069', u'\u0066')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0069', u'\u0066')))));
(bra)(((brb)()));
return nullptr;
}
(dgy)((u'\u0028'), (true));
((iix)->epl) = ((dnd)());
(dgy)((u'\u0029'), (true));
(dgy)((u'\u000A'), (true));
return iix;
}
// parseStatElse
static ge* fwp(int64_t ija /*row*/, int64_t ijb /*col*/, fx* ijc /*block_*/){
ge* ijd = nullptr; // ast
(ijd) = (new ge());
(bpl)((ijd), (521LL), (nullptr), (nullptr), (false));
if(((ijc)->lw) != (66049LL)){
(ad)((65566LL), ((bpm)((bf), (ija), (ijb))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0069', u'\u0066')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065')))));
(bra)(((brb)()));
return nullptr;
}
(dgy)((u'\u000A'), (true));
return ijd;
}
// parseStatSwitch
static ge* fwr(int64_t ijg /*row*/, int64_t ijh /*col*/){
cjl* iji = nullptr; // ast
ge* ijo = nullptr; // stat
int64_t iju = 0; // typeId
cjm* ijy = nullptr; // case_
(iji) = (new cjl());
(bpl)((iji), (66050LL), ((ddp)()), (nullptr), (false));
((iji)->buf) = ((ijj)(((iji)->ne)));
((iji)->esf) = (new List_<cjm*>());
((iji)->esz) = (nullptr);
(iil)((iji));
(iim)((iji));
((iji)->esb) = ((dnd)());
(dgy)((u'\u0029'), (true));
(dgy)((u'\u000A'), (true));
while(true){
(ijo) = ((dif)((iji)));
if(eqAddr_((ijo), (nullptr))){
if(avg){
return nullptr;
}
else{
continue;
}
}
break;
}
(iju) = ((ijo)->lw);
if(!((((iju) == (522LL)) || ((iju) == (523LL))) || ((iju) == (513LL)))){
(ad)((65567LL), ((ddp)()), (nullptr));
}
while((iju) == (522LL)){
(ijy) = (as_<cjm>(classTable_, (ijo), 94));
((ijy)->esx) = ((iio)((&ijo), (&iju), (522LL), (iji)));
uh<List_<cjm*>*, cjm*>(((iji)->esf), (new Array_<int64_t>(1, (0LL))), (ijy));
}
while((iju) == (523LL)){
((iji)->esz) = ((iio)((&ijo), (&iju), (523LL), (iji)));
}
if(!((iju) == (513LL))){
throw 0xE9170000U;
}
brh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return iji;
}
// parseStatCase
static ge* fwt(int64_t ika /*row*/, int64_t ikb /*col*/, fx* ikc /*block_*/){
cjm* ikd = nullptr; // ast
bty* ikj = nullptr; // exprs
char16_t ikk = 0; // c
Array_<char16_t>* ikr = nullptr; // id
(ikd) = (new cjm());
(bpl)((ikd), (522LL), (nullptr), (nullptr), (false));
((ikd)->esj) = (new List_<bty*>());
((ikd)->esx) = (nullptr);
if(((ikc)->lw) != (66050LL)){
(ad)((65566LL), ((bpm)((bf), (ika), (ikb))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065')))));
(bra)(((brb)()));
return nullptr;
}
while(true){
(ikj) = (new bty());
((ikj)->bvu) = ((dnd)());
((ikj)->bvz) = (nullptr);
(ikk) = ((bpo)());
if((ikk) == (u'\u0000')){
break;
}
if((ikk) == (u'\u000A')){
uh<List_<bty*>*, bty*>(((ikd)->esj), (new Array_<int64_t>(1, (0LL))), (ikj));
break;
}
if((ikk) == (u'\u002C')){
uh<List_<bty*>*, bty*>(((ikd)->esj), (new Array_<int64_t>(1, (0LL))), (ikj));
continue;
}
(ave) = (ikk);
(ikr) = ((bqf)((true), (false)));
if(cmp_((ikr), (new Array_<char16_t>(2, u'\u0074', u'\u006F'))) != 0){
(ad)((65568LL), ((ddp)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0074', u'\u006F')), (ikr))));
(bra)(((brb)()));
return nullptr;
}
((ikj)->bvz) = ((dnd)());
(ikk) = ((bpo)());
if((ikk) == (u'\u0000')){
break;
}
uh<List_<bty*>*, bty*>(((ikd)->esj), (new Array_<int64_t>(1, (0LL))), (ikj));
if((ikk) == (u'\u000A')){
break;
}
if((ikk) != (u'\u002C')){
(dgt)((u'\u002C'), (ikk));
}
}
return ikd;
}
// parseStatDefault
static ge* fwv(int64_t ila /*row*/, int64_t ilb /*col*/, fx* ilc /*block_*/){
ge* ild = nullptr; // ast
(ild) = (new ge());
(bpl)((ild), (523LL), (nullptr), (nullptr), (false));
if(((ilc)->lw) != (66050LL)){
(ad)((65566LL), ((bpm)((bf), (ila), (ilb))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074')))));
(bra)(((brb)()));
return nullptr;
}
(dgy)((u'\u000A'), (true));
return ild;
}
// parseStatWhile
static ge* fwx(){
cjp* ilg = nullptr; // ast
char16_t ili = 0; // c
Array_<char16_t>* ill = nullptr; // id
ge* ils = nullptr; // stat
(ilg) = (new cjp());
(bpl)((ilg), (16843265LL), ((ddp)()), (nullptr), (false));
((ilg)->buf) = (nullptr);
((ilg)->ewm) = (false);
((ilg)->ewg) = (new List_<ge*>());
(iil)((ilg));
(iim)((ilg));
((ilg)->ewe) = ((dnd)());
(ili) = ((bpo)());
if((ili) == (u'\u002C')){
(ill) = ((bqf)((true), (false)));
if(cmp_((ill), (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070'))) != 0){
(ad)((65568LL), ((ddp)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070')), (ill))));
}
((ilg)->ewm) = (true);
}
else{
(ave) = (ili);
}
(dgy)((u'\u0029'), (true));
(dgy)((u'\u000A'), (true));
while(true){
(ils) = ((dif)((ilg)));
if(eqAddr_((ils), (nullptr))){
if(avg){
return nullptr;
}
else{
continue;
}
}
if(((ils)->lw) == (513LL)){
break;
}
uh<List_<ge*>*, ge*>(((ilg)->ewg), (new Array_<int64_t>(1, (0LL))), (ils));
}
brh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ilg;
}
// parseStatFor
static ge* fwz(int64_t ima /*row*/, int64_t imb /*col*/){
cjt* imc = nullptr; // ast
char16_t ime = 0; // c
ge* imm = nullptr; // stat
(imc) = (new cjt());
(bpl)((imc), (16843266LL), ((ddp)()), (nullptr), (false));
((imc)->buf) = ((ijj)(((imc)->ne)));
((imc)->ezm) = (new List_<ge*>());
(iil)((imc));
(iim)((imc));
((imc)->ezd) = ((dnd)());
(dgy)((u'\u002C'), (true));
((imc)->ezc) = ((dnd)());
(ime) = ((bpo)());
if((ime) == (u'\u002C')){
((imc)->eze) = ((dnd)());
(dgy)((u'\u0029'), (true));
(dgy)((u'\u000A'), (true));
}
else{
((imc)->eze) = ((imi)(((ddp)()), (0LL), (0x0000000000000001ULL)));
(ave) = (ime);
(dgy)((u'\u0029'), (true));
(dgy)((u'\u000A'), (true));
}
while(true){
(imm) = ((dif)((imc)));
if(eqAddr_((imm), (nullptr))){
if(avg){
return nullptr;
}
else{
continue;
}
}
if(((imm)->lw) == (513LL)){
break;
}
uh<List_<ge*>*, ge*>(((imc)->ezm), (new Array_<int64_t>(1, (0LL))), (imm));
}
brh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return imc;
}
// parseStatTry
static ge* fxb(int64_t imu /*row*/, int64_t imv /*col*/){
btu* imw = nullptr; // ast
char16_t imy = 0; // c
bud* ind = nullptr; // type
ge* inf = nullptr; // stat
int64_t ing = 0; // typeId
btx* ini = nullptr; // catch_
(imw) = (new btu());
(bpl)((imw), (66051LL), ((ddp)()), (nullptr), (false));
((imw)->buf) = ((ijj)(((imw)->ne)));
((imw)->buk) = (new List_<btx*>());
((imw)->bun) = (nullptr);
(iil)((imw));
(imy) = ((bpo)());
if((imy) != (u'\u000A')){
(ave) = (imy);
((imw)->nf) = ((bqf)((true), (false)));
(dhc)((imw), (true));
(dgy)((u'\u000A'), (true));
}
else{
((imw)->nf) = (new Array_<char16_t>(1, u'\u0024'));
}
(ind) = (new bud());
(bpl)((ind), (1026LL), ((bpm)((bf), (imu), (imv))), (nullptr), (false));
((ind)->bue) = (0LL);
(((imw)->buf)->qf) = (ind);
((imw)->buj) = ((iio)((&inf), (&ing), (66051LL), (imw)));
while((ing) == (524LL)){
(ini) = (as_<btx>(classTable_, (inf), 56));
((ini)->bvk) = ((iio)((&inf), (&ing), (524LL), (imw)));
uh<List_<btx*>*, btx*>(((imw)->buk), (new Array_<int64_t>(1, (0LL))), (ini));
}
if((ing) == (525LL)){
((imw)->bun) = ((iio)((&inf), (&ing), (525LL), (imw)));
}
if(!((ing) == (513LL))){
throw 0xE9170000U;
}
brh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return imw;
}
// parseStatCatch
static ge* fxd(int64_t inl /*row*/, int64_t inm /*col*/, fx* inn /*block_*/){
btx* ino = nullptr; // ast
char16_t ins = 0; // c
bty* inw = nullptr; // exprs
ga* inx = nullptr; // pos
bty* ioc = nullptr; // exprs
Array_<char16_t>* ioj = nullptr; // id
(ino) = (new btx());
(bpl)((ino), (524LL), (nullptr), (nullptr), (false));
((ino)->bvh) = (new List_<bty*>());
((ino)->bvk) = (nullptr);
if(((inn)->lw) != (66051LL)){
(ad)((65566LL), ((bpm)((bf), (inl), (inm))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079')), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068')))));
(bra)(((brb)()));
return nullptr;
}
(ins) = ((bpo)());
if((ins) == (u'\u000A')){
(inw) = (new bty());
(inx) = ((ddp)());
((inw)->bvu) = ((imi)((inx), (0LL), (0x0000000000000000ULL)));
((inw)->bvz) = ((imi)((inx), (0LL), (0x00000000FFFFFFFFULL)));
uh<List_<bty*>*, bty*>(((ino)->bvh), (new Array_<int64_t>(1, (0LL))), (inw));
}
else{
(ave) = (ins);
while(true){
(ioc) = (new bty());
((ioc)->bvu) = ((dnd)());
((ioc)->bvz) = (nullptr);
(ins) = ((bpo)());
if((ins) == (u'\u0000')){
break;
}
if((ins) == (u'\u000A')){
uh<List_<bty*>*, bty*>(((ino)->bvh), (new Array_<int64_t>(1, (0LL))), (ioc));
break;
}
if((ins) == (u'\u002C')){
uh<List_<bty*>*, bty*>(((ino)->bvh), (new Array_<int64_t>(1, (0LL))), (ioc));
continue;
}
(ave) = (ins);
(ioj) = ((bqf)((true), (false)));
if(cmp_((ioj), (new Array_<char16_t>(2, u'\u0074', u'\u006F'))) != 0){
(ad)((65568LL), ((ddp)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0074', u'\u006F')), (ioj))));
}
((ioc)->bvz) = ((dnd)());
(ins) = ((bpo)());
if((ins) == (u'\u0000')){
break;
}
uh<List_<bty*>*, bty*>(((ino)->bvh), (new Array_<int64_t>(1, (0LL))), (ioc));
if((ins) == (u'\u000A')){
break;
}
if((ins) != (u'\u002C')){
(dgt)((u'\u002C'), (ins));
}
}
}
return ino;
}
// parseStatFinally
static ge* fxf(int64_t ios /*row*/, int64_t iot /*col*/, fx* iou /*block_*/){
ge* iov = nullptr; // ast
(iov) = (new ge());
(bpl)((iov), (525LL), (nullptr), (nullptr), (false));
if(((iou)->lw) != (66051LL)){
(ad)((65566LL), ((bpm)((bf), (ios), (iot))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079')), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079')))));
(bra)(((brb)()));
return nullptr;
}
(dgy)((u'\u000A'), (true));
return iov;
}
// parseStatThrow
static ge* fxh(){
cjy* ioy = nullptr; // ast
(ioy) = (new cjy());
(bpl)((ioy), (526LL), ((ddp)()), (nullptr), (false));
((ioy)->fcd) = ((dnd)());
(dgy)((u'\u000A'), (true));
return ioy;
}
// parseStatBlock
static ge* fxj(){
btw* ioz = nullptr; // ast
char16_t ipb = 0; // c
ge* ipi = nullptr; // stat
(ioz) = (new btw());
(bpl)((ioz), (66052LL), ((ddp)()), (nullptr), (false));
((ioz)->buf) = (nullptr);
((ioz)->bui) = (new List_<ge*>());
(iil)((ioz));
(ipb) = ((bpo)());
if((ipb) != (u'\u000A')){
(ave) = (ipb);
((ioz)->nf) = ((bqf)((true), (false)));
(dhc)((ioz), (true));
(dgy)((u'\u000A'), (true));
}
else{
((ioz)->nf) = (new Array_<char16_t>(1, u'\u0024'));
}
while(true){
(ipi) = ((dif)((ioz)));
if(eqAddr_((ipi), (nullptr))){
if(avg){
return nullptr;
}
else{
continue;
}
}
if(((ipi)->lw) == (513LL)){
break;
}
uh<List_<ge*>*, ge*>(((ioz)->bui), (new Array_<int64_t>(1, (0LL))), (ipi));
}
brh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ioz;
}
// parseStatRet
static ge* fxl(){
ckd* ipq = nullptr; // ast
char16_t ips = 0; // c
(ipq) = (new ckd());
(bpl)((ipq), (527LL), ((ddp)()), (nullptr), (false));
(ips) = ((bpo)());
if((ips) != (u'\u000A')){
(ave) = (ips);
((ipq)->fdj) = ((dnd)());
(dgy)((u'\u000A'), (true));
}
else{
((ipq)->fdj) = (nullptr);
}
return ipq;
}
// parseStatDo
static ge* fxn(){
buu* ipw = nullptr; // ast
(ipw) = (new buu());
(bpl)((ipw), (528LL), ((ddp)()), (nullptr), (false));
((ipw)->bve) = ((dnd)());
(dgy)((u'\u000A'), (true));
return ipw;
}
// parseStatBreak
static ge* fxp(){
ge* ipx = nullptr; // ast
(ipx) = (new ge());
(bpl)((ipx), (529LL), ((ddp)()), (nullptr), (false));
(dgx)((ipx), ((bqf)((true), (false))));
(dgy)((u'\u000A'), (true));
return ipx;
}
// parseStatSkip
static ge* fxr(){
ge* ipy = nullptr; // ast
(ipy) = (new ge());
(bpl)((ipy), (530LL), ((ddp)()), (nullptr), (false));
(dgx)((ipy), ((bqf)((true), (false))));
(dgy)((u'\u000A'), (true));
return ipy;
}
// parseStatAssert
static ge* fxt(){
ckm* ipz = nullptr; // ast
(ipz) = (new ckm());
(bpl)((ipz), (531LL), ((ddp)()), (nullptr), (false));
((ipz)->fex) = ((dnd)());
(dgy)((u'\u000A'), (true));
return ipz;
}
// parseExprThree
static gd* fxy(){
gd* iqa = nullptr; // ast
int64_t iqf = 0; // row
int64_t iqg = 0; // col
char16_t iqh = 0; // c
ebv* iqk = nullptr; // ast2
(iqa) = ((iqb)());
while(true){
(iqf) = (avc);
(iqg) = (avd);
(iqh) = ((bpo)());
if((iqh) == (u'\u003F')){
(dgy)((u'\u0028'), (false));
(iqk) = (new ebv());
(dni)((iqk), (2051LL), ((bpm)((bf), (iqf), (iqg))));
((iqk)->grg) = (iqa);
((iqk)->grj) = ((dnd)());
(dgy)((u'\u002C'), (true));
((iqk)->grm) = ((dnd)());
(iqa) = (iqk);
(dgy)((u'\u0029'), (true));
}
else{
(ave) = (iqh);
break;
}
}
return iqa;
}
// readInStr
static char16_t fzi(){
char16_t iqp = 0; // c
char16_t iqr = 0;
while(true){
(iqp) = ((dde)());
switch(iqp){
case u'\u0009':
(ad)((65540LL), ((ddp)()), (nullptr));
continue;
break;
case u'\u000A':
(ad)((65541LL), ((ddp)()), (nullptr));
break;
}
return iqp;
}
}
// searchEnumElementValue
static uint64_t geh(edc* iqu /*ast*/, bqy* iqv /*enum_*/){
Array_<char16_t>* iqw = nullptr; // name
List_<gd*>* iqx = nullptr; // items
gd* iqz = nullptr; // item
if(!((((iqu)->pf)->lw) == (1028LL))){
throw 0xE9170000U;
}
(eaj)((iqv));
(iqw) = ((iqu)->gki);
(iqx) = ((iqv)->dml);
awe<List_<gd*>*>((iqx), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((iqx), (new Array_<int64_t>(1, (0LL)))))){
(iqz) = (awi<List_<gd*>*, gd*>((iqx), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((iqw), ((iqz)->nf)) == 0){
if(((iqz)->lw) != (67585LL)){
return 0x0000000000000000ULL;
}
return (as_<bvp>(classTable_, (iqz), 70))->bvr;
}
ays<List_<gd*>*>((iqx), (new Array_<int64_t>(1, (0LL))));
}
(ad)((131090LL), ((iqu)->ne), (new Array_<Array_<char16_t>*>(1, (iqw))));
return 0x0000000000000000ULL;
}
// process1
static void gep(ul* ire /*ast*/, fw** irf /*dtor*/, fw** irg /*copy*/, fw** irh /*toBin*/, fw** iri /*fromBin*/){
fx* irl = nullptr; // parent
ul* irq = nullptr; // parent
Dict_<ul*, bool>* irr = nullptr; // chk
bool iru = false;
List_<um*>* irx = nullptr; // astItems
um* irz = nullptr; // item
fx* isb = nullptr; // def
Array_<char16_t>* ise = nullptr; // memberName
um* ish = nullptr; // parentItem
ul* isj = nullptr; // parent
List_<um*>* isl = nullptr; // items
um* isn = nullptr; // item2
fx* iso = nullptr; // def
Array_<char16_t>* isr = nullptr; // parentName
fw* ith = nullptr; // func1
fw* iti = nullptr; // func2
List_<gb*>* itl = nullptr; // items1
List_<gb*>* itm = nullptr; // items2
int64_t itq = 0;
gb* its = nullptr; // arg1
gb* itt = nullptr; // arg2
Array_<char16_t>* itx = nullptr;
fw* itz = nullptr; // func_
char16_t iud = 0;
fx* iuk = nullptr; // def
int64_t iun = 0; // idx
dhf* iuu = nullptr; // type
cai* iux = nullptr; // type
cam* iuz = nullptr; // type2
gb* ivd = nullptr; // arg
cai* ivf = nullptr; // type
cam* ivh = nullptr; // type2
gb* ivj = nullptr; // arg
bud* ivl = nullptr; // type
int64_t itr = 0;
if(!eqAddr_(((ire)->nj), (nullptr))){
(irl) = ((ire)->nj);
if(((irl)->lw) == (4LL)){
(eal)((as_<bqs>(classTable_, (irl), 46)), (nullptr));
((ire)->nj) = (((as_<bqs>(classTable_, (irl), 46))->djp)->nj);
if(!((((ire)->nj)->lw) == (5LL))){
throw 0xE9170000U;
}
}
else{
if(!(((irl)->lw) == (5LL))){
throw 0xE9170000U;
}
(eah)((as_<ul>(classTable_, (irl), 22)));
}
}
(irq) = (ire);
(irr) = (new Dict_<ul*, bool>());
while(!eqAddr_((irq), (nullptr))){
if(avo<Dict_<ul*, bool>*, ul*, bool>((irr), (new Array_<int64_t>(1, (0LL))), (irq), (&iru))){
(ad)((131080LL), ((ire)->ne), (new Array_<Array_<char16_t>*>(1, ((ire)->nf))));
return;
}
dv<Dict_<ul*, bool>*, ul*, bool>((irr), (new Array_<int64_t>(1, (0LL))), (irq), (true));
(irq) = (as_<ul>(classTable_, ((irq)->nj), 22));
}
(irx) = ((ire)->bag);
awe<List_<um*>*>((irx), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((irx), (new Array_<int64_t>(1, (0LL)))))){
(irz) = (awi<List_<um*>*, um*>((irx), (new Array_<int64_t>(1, (0LL)))));
(isb) = ((irz)->azl);
if(((isb)->lw) == (2LL)){
(ise) = (((as_<bgi>(classTable_, (isb), 38))->bgk)->nf);
}
else if(((isb)->lw) == (3LL)){
(ise) = (((as_<bqp>(classTable_, (isb), 44))->brf)->nf);
}
else{
(ise) = ((isb)->nf);
}
(ish) = (nullptr);
(isj) = (as_<ul>(classTable_, ((ire)->nj), 22));
while((eqAddr_((ish), (nullptr))) && (!eqAddr_((isj), (nullptr)))){
(isl) = ((isj)->bag);
awe<List_<um*>*>((isl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((isl), (new Array_<int64_t>(1, (0LL)))))){
(isn) = (awi<List_<um*>*, um*>((isl), (new Array_<int64_t>(1, (0LL)))));
(iso) = ((isn)->azl);
if(((iso)->lw) == (2LL)){
(isr) = (((as_<bgi>(classTable_, (iso), 38))->bgk)->nf);
}
else if(((iso)->lw) == (3LL)){
(isr) = (((as_<bqp>(classTable_, (iso), 44))->brf)->nf);
}
else{
(isr) = ((iso)->nf);
}
if(cmp_((ise), (isr)) == 0){
(ish) = (isn);
}
ays<List_<um*>*>((isl), (new Array_<int64_t>(1, (0LL))));
}
(isj) = (as_<ul>(classTable_, ((isj)->nj), 22));
}
if(eqAddr_((ish), (nullptr))){
if((irz)->azr){
(ad)((131081LL), (((irz)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (ise))));
return;
}
}
else{
if(!((irz)->azr)){
(ad)((131082LL), (((irz)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (ise))));
return;
}
if(!(((((irz)->azl)->lw) == (256LL)) && ((((ish)->azl)->lw) == (256LL)))){
(ad)((131083LL), (((irz)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (ise))));
return;
}
if(((irz)->azq) != ((ish)->azq)){
(ad)((131084LL), (((irz)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (ise))));
return;
}
(ith) = (as_<fw>(classTable_, ((irz)->azl), 8));
(iti) = (as_<fw>(classTable_, ((ish)->azl), 8));
if(((((eqAddr_(((ith)->sh), (nullptr))) && (!eqAddr_(((iti)->sh), (nullptr)))) || ((!eqAddr_(((ith)->sh), (nullptr))) && (eqAddr_(((iti)->sh), (nullptr))))) || (((!eqAddr_(((ith)->sh), (nullptr))) && (!eqAddr_(((iti)->sh), (nullptr)))) && (!((dzp)(((ith)->sh), ((iti)->sh), (false)))))) || ((((ith)->sg)->Len()) != (((iti)->sg)->Len()))){
(ad)((131085LL), (((irz)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (ise))));
return;
}
(itl) = ((ith)->sg);
(itm) = ((iti)->sg);
awe<List_<gb*>*>((itl), (new Array_<int64_t>(1, (0LL))));
awe<List_<gb*>*>((itm), (new Array_<int64_t>(1, (0LL))));
for(itq = (0LL), itr = (((itl)->Len()) - (1LL)); itq <= itr; itq += (1LL)){
(its) = (awi<List_<gb*>*, gb*>((itl), (new Array_<int64_t>(1, (0LL)))));
(itt) = (awi<List_<gb*>*, gb*>((itm), (new Array_<int64_t>(1, (0LL)))));
if(((((((((its)->qf)->lw) == (66565LL)) && (eqAddr_((((its)->qf)->nj), (nullptr)))) || (((((itt)->qf)->lw) == (66565LL)) && (eqAddr_((((itt)->qf)->nj), (nullptr))))) || (!((dzp)(((its)->qf), ((itt)->qf), (false))))) || (((!eqAddr_(((its)->nf), (nullptr))) && (!eqAddr_(((itt)->nf), (nullptr)))) && (cmp_(((its)->nf), ((itt)->nf)) != 0))) || (((its)->ql) != ((itt)->ql))){
(ad)((131085LL), (((irz)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (ise))));
return;
}
ays<List_<gb*>*>((itl), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((itm), (new Array_<int64_t>(1, (0LL))));
}
((irz)->azm) = (ish);
}
itx = ise;
if(cmp_(itx, (new Array_<char16_t>(5, u'\u005F', u'\u0064', u'\u0074', u'\u006F', u'\u0072'))) == 0 || cmp_(itx, (new Array_<char16_t>(5, u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079'))) == 0 || cmp_(itx, (new Array_<char16_t>(6, u'\u005F', u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E'))) == 0 || cmp_(itx, (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E'))) == 0){
if(!((((irz)->azl)->lw) == (256LL))){
throw 0xE9170000U;
}
(itz) = (as_<fw>(classTable_, ((irz)->azl), 8));
if(((irz)->azr) && ((aye<int64_t>(((as_<fw>(classTable_, ((irz)->azl), 8))->sm), (new Array_<int64_t>(1, (0LL))), (128LL))) == (0LL))){
(ad)((131086LL), ((itz)->ne), (new Array_<Array_<char16_t>*>(1, (ise))));
return;
}
switch((ise)->At(1LL)){
case u'\u0064':
(*irf) = (itz);
break;
case u'\u0063':
(*irg) = (itz);
break;
case u'\u0074':
(*irh) = (itz);
break;
case u'\u0066':
(*iri) = (itz);
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{(iuk) = ((irz)->azl);
if(((iuk)->lw) == (256LL)){
(iun) = (bew<List_<um*>*>((irx), (new Array_<int64_t>(1, (0LL)))));
if(!((iun) != (-1LL))){
throw 0xE9170000U;
}
(ayx)((as_<fw>(classTable_, (iuk), 8)));
awe<List_<um*>*>((irx), (new Array_<int64_t>(1, (0LL))));
bey<List_<um*>*>((irx), (new Array_<int64_t>(1, (0LL))), (iun));
}
else if(((iuk)->lw) == (2LL)){
(efa)((as_<bgi>(classTable_, (iuk), 38)));
}
}
ays<List_<um*>*>((irx), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_((*irf), (nullptr))){
(*irf) = ((iur)((ire), (new Array_<char16_t>(5, u'\u005F', u'\u0064', u'\u0074', u'\u006F', u'\u0072'))));
}
if(eqAddr_((*irg), (nullptr))){
(*irg) = ((iur)((ire), (new Array_<char16_t>(5, u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079'))));
(iuu) = (new dhf());
(btr)((iuu), (66565LL), ((ire)->ne));
((iuu)->nj) = (ire);
((*irg)->sh) = (iuu);
}
if(eqAddr_((*irh), (nullptr))){
(*irh) = ((iur)((ire), (new Array_<char16_t>(6, u'\u005F', u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E'))));
(iux) = (new cai());
(btr)((iux), (66561LL), ((ire)->ne));
(iuz) = (new cam());
(btr)((iuz), (1025LL), ((ire)->ne));
((iuz)->can) = (1LL);
((iux)->cak) = (iuz);
((*irh)->sh) = (iux);
}
if(eqAddr_((*iri), (nullptr))){
(*iri) = ((iur)((ire), (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E'))));
(ivd) = (new gb());
(btr)((ivd), (7LL), ((ire)->ne));
((ivd)->qk) = (2LL);
((ivd)->ql) = (false);
((ivd)->qg) = (nullptr);
(ivf) = (new cai());
(btr)((ivf), (66561LL), ((ire)->ne));
(ivh) = (new cam());
(btr)((ivh), (1025LL), ((ire)->ne));
((ivh)->can) = (1LL);
((ivf)->cak) = (ivh);
((ivd)->qf) = (ivf);
uh<List_<gb*>*, gb*>(((*iri)->sg), (new Array_<int64_t>(1, (0LL))), (ivd));
(ivj) = (new gb());
(btr)((ivj), (7LL), ((ire)->ne));
((ivj)->qk) = (2LL);
((ivj)->ql) = (true);
((ivj)->qg) = (nullptr);
(ivl) = (new bud());
(btr)((ivl), (1026LL), ((ire)->ne));
((ivl)->bue) = (0LL);
((ivj)->qf) = (ivl);
uh<List_<gb*>*, gb*>(((*iri)->sg), (new Array_<int64_t>(1, (0LL))), (ivj));
awe<List_<gb*>*>(((*iri)->sg), (new Array_<int64_t>(1, (0LL))));
((*iri)->sh) = ((awi<List_<gb*>*, gb*>(((*iri)->sg), (new Array_<int64_t>(1, (0LL)))))->qf);
}
}
// process2
static void geq(ul* ivm /*ast*/, fw* ivn /*dtor*/, fw* ivo /*copy*/, fw* ivp /*toBin*/, fw* ivq /*fromBin*/){
ul* ivs = nullptr; // ptr
List_<um*>* ivu = nullptr; // items
um* ivw = nullptr; // item
buu* ivz = nullptr; // do_
byb* iwb = nullptr; // assign
eez* iwf = nullptr; // var_
bgi* iwh = nullptr; // var2
gb* iwj = nullptr; // arg
dhf* iwl = nullptr; // type
eby* iwn = nullptr; // new_
gd* iwp = nullptr; // result
dhf* iwr = nullptr; // type
ul* iwt = nullptr; // ptr
List_<um*>* iwv = nullptr; // items
um* iwx = nullptr; // item
gb* ixa = nullptr; // member
buu* ixc = nullptr; // do_
byb* ixe = nullptr; // assign
ecs* ixg = nullptr; // dot
ebq* ixj = nullptr; // copy2
ckd* ixm = nullptr; // ret_
ece* ixo = nullptr; // as
eez* ixr = nullptr; // var_
bgi* ixt = nullptr; // var2
gb* ixv = nullptr; // arg
ecb* ixx = nullptr; // new_
bvp* ixz = nullptr; // value
bud* iyb = nullptr; // prim
cam* iyd = nullptr; // type
cai* iyf = nullptr; // type
cam* iyh = nullptr; // type2
gd* iyj = nullptr; // result
dhf* iyl = nullptr; // type
ul* iyn = nullptr; // ptr
List_<um*>* iyp = nullptr; // items
um* iyr = nullptr; // item
gb* iyu = nullptr; // member
buu* iyw = nullptr; // do_
byb* iyy = nullptr; // assign
ech* iza = nullptr; // expr
cai* izc = nullptr; // array_
cam* ize = nullptr; // bit
ckd* izg = nullptr; // ret_
eez* izj = nullptr; // var_
bgi* izl = nullptr; // var2
gb* izn = nullptr; // arg
eby* izp = nullptr; // new_
gd* izr = nullptr; // result
dhf* izt = nullptr; // type
ul* izv = nullptr; // ptr
List_<um*>* izx = nullptr; // items
um* izz = nullptr; // item
gb* jac = nullptr; // member
buu* jae = nullptr; // do_
byb* jag = nullptr; // assign
ecs* jai = nullptr; // dot
eck* jak = nullptr; // expr
gd* jam = nullptr; // ref
gd* jao = nullptr; // ref
ckd* jaq = nullptr; // ret_
(ivs) = (ivm);
while(!eqAddr_((ivs), (nullptr))){
(ivu) = ((ivs)->bag);
awe<List_<um*>*>((ivu), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((ivu), (new Array_<int64_t>(1, (0LL)))))){
(ivw) = (awi<List_<um*>*, um*>((ivu), (new Array_<int64_t>(1, (0LL)))));
if(((((ivw)->azl)->lw) == (2LL)) && ((byj)((((as_<bgi>(classTable_, ((ivw)->azl), 38))->bgk)->qf)))){
(ivz) = (new buu());
(btr)((ivz), (528LL), ((ivm)->ne));
(iwb) = (new byb());
(buz)((iwb), (2050LL), ((ivm)->ne));
((iwb)->byc) = (0LL);
awe<List_<gb*>*>(((ivn)->sg), (new Array_<int64_t>(1, (0LL))));
((iwb)->byf) = ((iwc)((ivm), (awi<List_<gb*>*, gb*>(((ivn)->sg), (new Array_<int64_t>(1, (0LL))))), (((as_<bgi>(classTable_, ((ivw)->azl), 38))->bgk)->nf)));
((iwb)->byg) = ((byq)(((ivm)->ne)));
((ivz)->bve) = (iwb);
uh<List_<ge*>*, ge*>(((ivn)->si), (new Array_<int64_t>(1, (0LL))), ((byh)((ivz), ((ivn)->sh), (ivn))));
}
ays<List_<um*>*>((ivu), (new Array_<int64_t>(1, (0LL))));
}
(ivs) = (as_<ul>(classTable_, ((ivs)->nj), 22));
}
(iwf) = (new eez());
(btr)((iwf), (515LL), ((ivm)->ne));
(iwh) = (new bgi());
(btr)((iwh), (2LL), ((ivm)->ne));
(iwj) = (new gb());
(btr)((iwj), (7LL), ((ivm)->ne));
((iwj)->qk) = (3LL);
((iwj)->ql) = (false);
(iwl) = (new dhf());
(btr)((iwl), (66565LL), ((ivm)->ne));
((iwl)->nj) = (ivm);
((iwj)->qf) = (iwl);
(iwn) = (new eby());
(buz)((iwn), (2052LL), ((ivm)->ne));
((iwn)->gth) = ((iwj)->qf);
((iwj)->qg) = (iwn);
((iwh)->bgk) = (iwj);
((iwf)->efb) = (iwh);
uh<List_<ge*>*, ge*>(((ivo)->si), (new Array_<int64_t>(1, (0LL))), ((byh)((iwf), ((ivo)->sh), (ivo))));
(iwp) = (new gd());
(buz)((iwp), (2062LL), ((ivm)->ne));
((iwp)->ni) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
((iwp)->nj) = (((iwf)->efb)->bgk);
(iwr) = (new dhf());
(btr)((iwr), (66565LL), ((ivm)->ne));
((iwr)->nj) = (ivm);
((iwp)->pf) = (iwr);
(iwt) = (ivm);
while(!eqAddr_((iwt), (nullptr))){
(iwv) = ((iwt)->bag);
awe<List_<um*>*>((iwv), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((iwv), (new Array_<int64_t>(1, (0LL)))))){
(iwx) = (awi<List_<um*>*, um*>((iwv), (new Array_<int64_t>(1, (0LL)))));
if((((iwx)->azl)->lw) == (2LL)){
(ixa) = ((as_<bgi>(classTable_, ((iwx)->azl), 38))->bgk);
(ixc) = (new buu());
(btr)((ixc), (528LL), ((ivm)->ne));
(ixe) = (new byb());
(buz)((ixe), (2050LL), ((ivm)->ne));
((ixe)->byc) = (0LL);
(ixg) = (new ecs());
(buz)((ixg), (2059LL), ((ivm)->ne));
((ixg)->heh) = (iwp);
((ixg)->hhx) = ((ixa)->nf);
((ixg)->hik) = (nullptr);
((ixe)->byf) = (ixg);
if((byj)(((ixa)->qf))){
(ixj) = (new ebq());
(buz)((ixj), (2049LL), ((ivm)->ne));
((ixj)->ggi) = (3LL);
awe<List_<gb*>*>(((ivo)->sg), (new Array_<int64_t>(1, (0LL))));
((ixj)->ggc) = ((iwc)((ivm), (awi<List_<gb*>*, gb*>(((ivo)->sg), (new Array_<int64_t>(1, (0LL))))), ((ixa)->nf)));
((ixe)->byg) = (ixj);
}
else{
awe<List_<gb*>*>(((ivo)->sg), (new Array_<int64_t>(1, (0LL))));
((ixe)->byg) = ((iwc)((ivm), (awi<List_<gb*>*, gb*>(((ivo)->sg), (new Array_<int64_t>(1, (0LL))))), ((ixa)->nf)));
}
((ixc)->bve) = (ixe);
uh<List_<ge*>*, ge*>(((ivo)->si), (new Array_<int64_t>(1, (0LL))), ((byh)((ixc), ((ivo)->sh), (ivo))));
}
ays<List_<um*>*>((iwv), (new Array_<int64_t>(1, (0LL))));
}
(iwt) = (as_<ul>(classTable_, ((iwt)->nj), 22));
}
(ixm) = (new ckd());
(btr)((ixm), (527LL), ((ivm)->ne));
(ixo) = (new ece());
(buz)((ixo), (2054LL), ((ivm)->ne));
((ixo)->gwx) = (0LL);
((ixo)->gwp) = (iwp);
((ixo)->gws) = ((ivo)->sh);
((ixm)->fdj) = (ixo);
uh<List_<ge*>*, ge*>(((ivo)->si), (new Array_<int64_t>(1, (0LL))), ((byh)((ixm), ((ivo)->sh), (ivo))));
(ixr) = (new eez());
(btr)((ixr), (515LL), ((ivm)->ne));
(ixt) = (new bgi());
(btr)((ixt), (2LL), ((ivm)->ne));
(ixv) = (new gb());
(btr)((ixv), (7LL), ((ivm)->ne));
((ixv)->qk) = (3LL);
((ixv)->ql) = (false);
(ixx) = (new ecb());
(buz)((ixx), (2053LL), ((ivm)->ne));
((ixx)->gus) = (new List_<gd*>());
(ixz) = (new bvp());
(buz)((ixz), (67585LL), ((ivm)->ne));
((ixz)->bvr) = (0x0000000000000008ULL);
(iyb) = (new bud());
(btr)((iyb), (1026LL), ((ivm)->ne));
((iyb)->bue) = (0LL);
((ixz)->pf) = (iyb);
uh<List_<gd*>*, gd*>(((ixx)->gus), (new Array_<int64_t>(1, (0LL))), (ixz));
(iyd) = (new cam());
(btr)((iyd), (1025LL), ((ivm)->ne));
((iyd)->can) = (1LL);
((ixx)->gvb) = (iyd);
((ixv)->qg) = (ixx);
(iyf) = (new cai());
(btr)((iyf), (66561LL), ((ivm)->ne));
(iyh) = (new cam());
(btr)((iyh), (1025LL), ((ivm)->ne));
((iyh)->can) = (1LL);
((iyf)->cak) = (iyh);
((ixv)->qf) = (iyf);
((ixt)->bgk) = (ixv);
((ixr)->efb) = (ixt);
uh<List_<ge*>*, ge*>(((ivp)->si), (new Array_<int64_t>(1, (0LL))), ((byh)((ixr), ((ivp)->sh), (ivp))));
(iyj) = (new gd());
(buz)((iyj), (2062LL), ((ivm)->ne));
((iyj)->nj) = (((ixr)->efb)->bgk);
(iyl) = (new dhf());
(btr)((iyl), (66565LL), ((ivm)->ne));
((iyl)->nj) = (ivm);
((iyj)->pf) = (iyl);
(iyn) = (ivm);
while(!eqAddr_((iyn), (nullptr))){
(iyp) = ((iyn)->bag);
awe<List_<um*>*>((iyp), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((iyp), (new Array_<int64_t>(1, (0LL)))))){
(iyr) = (awi<List_<um*>*, um*>((iyp), (new Array_<int64_t>(1, (0LL)))));
if((((iyr)->azl)->lw) == (2LL)){
(iyu) = ((as_<bgi>(classTable_, ((iyr)->azl), 38))->bgk);
(iyw) = (new buu());
(btr)((iyw), (528LL), ((ivm)->ne));
(iyy) = (new byb());
(buz)((iyy), (2050LL), ((ivm)->ne));
((iyy)->byc) = (7LL);
((iyy)->byf) = (iyj);
(iza) = (new ech());
(buz)((iza), (2055LL), ((ivm)->ne));
awe<List_<gb*>*>(((ivp)->sg), (new Array_<int64_t>(1, (0LL))));
((iza)->haw) = ((iwc)((ivm), (awi<List_<gb*>*, gb*>(((ivp)->sg), (new Array_<int64_t>(1, (0LL))))), ((iyu)->nf)));
(izc) = (new cai());
(btr)((izc), (66561LL), ((ivm)->ne));
(ize) = (new cam());
(btr)((ize), (1025LL), ((ivm)->ne));
((ize)->can) = (1LL);
((izc)->cak) = (ize);
((iza)->hbc) = (izc);
((iyy)->byg) = (iza);
((iyw)->bve) = (iyy);
uh<List_<ge*>*, ge*>(((ivp)->si), (new Array_<int64_t>(1, (0LL))), ((byh)((iyw), ((ivp)->sh), (ivp))));
}
ays<List_<um*>*>((iyp), (new Array_<int64_t>(1, (0LL))));
}
(iyn) = (as_<ul>(classTable_, ((iyn)->nj), 22));
}
(izg) = (new ckd());
(btr)((izg), (527LL), ((ivm)->ne));
((izg)->fdj) = (iyj);
uh<List_<ge*>*, ge*>(((ivp)->si), (new Array_<int64_t>(1, (0LL))), ((byh)((izg), ((ivp)->sh), (ivp))));
(izj) = (new eez());
(btr)((izj), (515LL), ((ivm)->ne));
(izl) = (new bgi());
(btr)((izl), (2LL), ((ivm)->ne));
(izn) = (new gb());
(btr)((izn), (7LL), ((ivm)->ne));
((izn)->qk) = (3LL);
((izn)->ql) = (false);
awe<List_<gb*>*>(((ivq)->sg), (new Array_<int64_t>(1, (0LL))));
((izn)->qf) = ((awi<List_<gb*>*, gb*>(((ivq)->sg), (new Array_<int64_t>(1, (0LL)))))->qf);
(izp) = (new eby());
(buz)((izp), (2052LL), ((ivm)->ne));
((izp)->gth) = ((izn)->qf);
((izn)->qg) = (izp);
((izl)->bgk) = (izn);
((izj)->efb) = (izl);
uh<List_<ge*>*, ge*>(((ivq)->si), (new Array_<int64_t>(1, (0LL))), ((byh)((izj), ((ivq)->sh), (ivq))));
(izr) = (new gd());
(buz)((izr), (2062LL), ((ivm)->ne));
((izr)->nj) = (((izj)->efb)->bgk);
((izr)->ni) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
(izt) = (new dhf());
(btr)((izt), (66565LL), ((ivm)->ne));
((izt)->nj) = (ivm);
((izr)->pf) = (izt);
(izv) = (ivm);
while(!eqAddr_((izv), (nullptr))){
(izx) = ((izv)->bag);
awe<List_<um*>*>((izx), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((izx), (new Array_<int64_t>(1, (0LL)))))){
(izz) = (awi<List_<um*>*, um*>((izx), (new Array_<int64_t>(1, (0LL)))));
if((((izz)->azl)->lw) == (2LL)){
(jac) = ((as_<bgi>(classTable_, ((izz)->azl), 38))->bgk);
(jae) = (new buu());
(btr)((jae), (528LL), ((ivm)->ne));
(jag) = (new byb());
(buz)((jag), (2050LL), ((ivm)->ne));
((jag)->byc) = (0LL);
(jai) = (new ecs());
(buz)((jai), (2059LL), ((ivm)->ne));
((jai)->hik) = (nullptr);
((jai)->heh) = (izr);
((jai)->hhx) = ((jac)->nf);
((jag)->byf) = (jai);
(jak) = (new eck());
(buz)((jak), (2056LL), ((ivm)->ne));
(jam) = (new gd());
(buz)((jam), (2062LL), ((ivm)->ne));
awe<List_<gb*>*>(((ivq)->sg), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>(((ivq)->sg), (new Array_<int64_t>(1, (0LL))));
((jam)->nj) = (awi<List_<gb*>*, gb*>(((ivq)->sg), (new Array_<int64_t>(1, (0LL)))));
if(!(!eqAddr_(((jam)->nj), (nullptr)))){
throw 0xE9170000U;
}
((jak)->hch) = (jam);
((jak)->hcm) = ((jac)->qf);
(jao) = (new gd());
(buz)((jao), (2062LL), ((ivm)->ne));
awe<List_<gb*>*>(((ivq)->sg), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>(((ivq)->sg), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>(((ivq)->sg), (new Array_<int64_t>(1, (0LL))));
((jao)->nj) = (awi<List_<gb*>*, gb*>(((ivq)->sg), (new Array_<int64_t>(1, (0LL)))));
if(!(!eqAddr_(((jao)->nj), (nullptr)))){
throw 0xE9170000U;
}
((jak)->hcn) = (jao);
((jag)->byg) = (jak);
((jae)->bve) = (jag);
uh<List_<ge*>*, ge*>(((ivq)->si), (new Array_<int64_t>(1, (0LL))), ((byh)((jae), ((ivq)->sh), (ivq))));
}
ays<List_<um*>*>((izx), (new Array_<int64_t>(1, (0LL))));
}
(izv) = (as_<ul>(classTable_, ((izv)->nj), 22));
}
(jaq) = (new ckd());
(btr)((jaq), (527LL), ((ivm)->ne));
((jaq)->fdj) = (izr);
uh<List_<ge*>*, ge*>(((ivq)->si), (new Array_<int64_t>(1, (0LL))), ((byh)((jaq), ((ivq)->sh), (ivq))));
}
// isFloat
static bool ggl(gc* jar /*type*/){
return (((jar)->lw) == (1026LL)) && (((as_<bud>(classTable_, (jar), 60))->bue) == (1LL));
}
// isBool
static bool ghb(gc* jas /*type*/){
return (((jas)->lw) == (1026LL)) && (((as_<bud>(classTable_, (jas), 60))->bue) == (3LL));
}
// isComparable
static bool gkb(gc* jat /*type*/, bool jau /*lessOrGreater*/){
if((((((((((jat)->lw) == (1025LL)) || ((bdg)((jat)))) || ((ggl)((jat)))) || ((esc)((jat)))) || ((clb)((jat)))) || ((eha)((jat)))) || ((fka)((jat)))) || (((jat)->lw) == (1028LL))){
return true;
}
if((!(jau)) && ((ghb)((jat)))){
return true;
}
return false;
}
// cmp
static int64_t glv(Array_<char16_t>* jaz /*s1*/, Array_<char16_t>* jba /*s2*/){
int64_t jbb = 0; // p
(jbb) = (0LL);
while(((jbb) < ((jaz)->Len())) && ((jbb) < ((jba)->Len()))){
if(((jaz)->At(jbb)) != ((jba)->At(jbb))){
return (((jaz)->At(jbb)) > ((jba)->At(jbb))) ? (1LL) : ((((jaz)->At(jbb)) < ((jba)->At(jbb))) ? (-1LL) : (0LL));
}
(jbb) = ((jbb) + (1LL));
}
return (((jaz)->Len()) > ((jba)->Len())) ? (1LL) : ((((jaz)->Len()) < ((jba)->Len())) ? (-1LL) : (0LL));
}
// bitCast
static uint64_t gpc(int64_t jbg /*size*/, uint64_t jbh /*n*/){
int64_t jbj = 0;
switch(jbg){
case 1LL:
return static_cast<uint64_t>(static_cast<uint8_t>(jbh));
break;
case 2LL:
return static_cast<uint64_t>(static_cast<uint16_t>(jbh));
break;
case 4LL:
return static_cast<uint64_t>(static_cast<uint32_t>(jbh));
break;
case 8LL:
return jbh;
if(!(false)){
throw 0xE9170000U;
}
break;
}
return 0x0000000000000000ULL;
}
// getTypeName
static Array_<char16_t>* hfd(gc* jbo /*type*/){
int64_t jbs = 0;
caq* jbw = nullptr; // type2
Array_<char16_t>* jbx = nullptr; // s
bool jby = false; // first
List_<car*>* jbz = nullptr; // items
car* jcb = nullptr; // arg
cbn* jcq = nullptr; // type2
int64_t jcs = 0;
Array_<char16_t>* jcu = nullptr; // s
cby* jcz = nullptr; // type2
bud* jdb = nullptr; // type2
int64_t jdd = 0;
if(eqAddr_((jbo), (nullptr))){
return new Array_<char16_t>(0);
}
switch((jbo)->lw){
case 66561LL:
return (new Array_<char16_t>(2, u'\u005B', u'\u005D'))->Cat((hfd)(((as_<cai>(classTable_, (jbo), 76))->cak)));
break;
case 1025LL:
return (new Array_<char16_t>(3, u'\u0062', u'\u0069', u'\u0074'))->Cat(v<int64_t>((((as_<cam>(classTable_, (jbo), 78))->can) * (8LL)), (new Array_<int64_t>(1, (0LL)))));
break;
case 66562LL:
(jbw) = (as_<caq>(classTable_, (jbo), 80));
(jbx) = (new Array_<char16_t>(6, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u003C', u'\u0028'));
(jby) = (true);
(jbz) = ((jbw)->cay);
awe<List_<car*>*>((jbz), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<car*>*>((jbz), (new Array_<int64_t>(1, (0LL)))))){
(jcb) = (awi<List_<car*>*, car*>((jbz), (new Array_<int64_t>(1, (0LL)))));
if(jby){
(jby) = (false);
}
else{
(jbx) = ((jbx)->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
}
if((jcb)->cbi){
(jbx) = ((jbx)->Cat(new Array_<char16_t>(1, u'\u0026')));
}
(jbx) = ((jbx)->Cat((hfd)(((jcb)->cbg))));
ays<List_<car*>*>((jbz), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_(((jbw)->cat), (nullptr))){
(jbx) = ((jbx)->Cat(new Array_<char16_t>(2, u'\u0029', u'\u003E')));
}
else{
(jbx) = ((jbx)->Cat(((new Array_<char16_t>(3, u'\u0029', u'\u003A', u'\u0020'))->Cat((hfd)(((jbw)->cat))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
return jbx;
break;
case 66563LL:
(jcq) = (as_<cbn>(classTable_, (jbo), 84));
switch((jcq)->cbq){
case 0LL:
(jcu) = (new Array_<char16_t>(5, u'\u006C', u'\u0069', u'\u0073', u'\u0074', u'\u003C'));
break;
case 1LL:
(jcu) = (new Array_<char16_t>(6, u'\u0073', u'\u0074', u'\u0061', u'\u0063', u'\u006B', u'\u003C'));
break;
case 2LL:
(jcu) = (new Array_<char16_t>(6, u'\u0071', u'\u0075', u'\u0065', u'\u0075', u'\u0065', u'\u003C'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return ((jcu)->Cat((hfd)(((jcq)->cbs))))->Cat(new Array_<char16_t>(1, u'\u003E'));
break;
case 66564LL:
(jcz) = (as_<cby>(classTable_, (jbo), 86));
return ((((new Array_<char16_t>(5, u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u003C'))->Cat((hfd)(((jcz)->cbz))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')))->Cat((hfd)(((jcz)->cca))))->Cat(new Array_<char16_t>(1, u'\u003E'));
break;
case 1026LL:
(jdb) = (as_<bud>(classTable_, (jbo), 60));
switch((jdb)->bue){
case 0LL:
return new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074');
break;
case 1LL:
return new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074');
break;
case 2LL:
return new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072');
break;
case 3LL:
return new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66565LL:
return ((cmp_(((jbo)->ni), (new Array_<char16_t>(1, u'\u0040'))) == 0) ? (((jbo)->ne)->hk) : (new Array_<char16_t>(0)))->Cat((jbo)->ni);
break;
case 1028LL:
return new Array_<char16_t>(9, u'\u0028', u'\u0055', u'\u004E', u'\u004B', u'\u004E', u'\u004F', u'\u0057', u'\u004E', u'\u0029');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
return new Array_<char16_t>(0);
break;
}
}
// chkBuiltinFuncType
static bool hir(Array_<char16_t>** jdm /*member*/, gc* jdn /*type*/){
int64_t jdq = 0; // kind
bool jdr = false; // found
int64_t jdv = 0;
int64_t jes = 0;
int64_t jfd = 0;
Array_<char16_t>* jfx = nullptr;
Array_<char16_t>* jgi = nullptr;
Array_<char16_t>* jha = nullptr;
Array_<char16_t>* jhj = nullptr;
if(eqAddr_((ai), (nullptr))){
(ai) = (new Dict_<Array_<char16_t>*, int64_t>());
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0061', u'\u0062', u'\u0073')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0061', u'\u0064', u'\u0064')), (6LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064')), (1LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0064', u'\u0065', u'\u006C')), (14LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u006C', u'\u004E', u'\u0065', u'\u0078', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006E', u'\u0064', u'\u0069', u'\u0061', u'\u006E')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006C', u'\u006C')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006E', u'\u0064')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0042', u'\u0069', u'\u006E')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0053', u'\u0074', u'\u0072')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0053', u'\u0074', u'\u0072', u'\u0045', u'\u0078')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0053', u'\u0074', u'\u0072', u'\u004C', u'\u0061', u'\u0073', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0067', u'\u0065', u'\u0074')), (7LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0067', u'\u0065', u'\u0074', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0068', u'\u0065', u'\u0061', u'\u0064')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0064', u'\u0078')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0073')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006A', u'\u006F', u'\u0069', u'\u006E')), (11LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0072')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u006D', u'\u0061', u'\u0078')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u006D', u'\u0069', u'\u006E')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0078', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u006E', u'\u006F', u'\u0074')), (1LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u006F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (2LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u006F', u'\u0072')), (1LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0070', u'\u0065', u'\u0065', u'\u006B')), (9LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0070', u'\u0072', u'\u0065', u'\u0076')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0070', u'\u006C', u'\u0061', u'\u0063', u'\u0065')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0076', u'\u0065', u'\u0072', u'\u0073', u'\u0065')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0061', u'\u0072')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0068', u'\u006C')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0068', u'\u0072')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0073', u'\u0068', u'\u0075', u'\u0066', u'\u0066', u'\u006C', u'\u0065')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u0067', u'\u006E')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0073', u'\u006F', u'\u0072', u'\u0074')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0073', u'\u0070', u'\u006C', u'\u0069', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0075', u'\u0062')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u0069', u'\u006C')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0074', u'\u0065', u'\u0072', u'\u006D')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0074', u'\u0065', u'\u0072', u'\u006D', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u004B', u'\u0065', u'\u0079')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(12, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0056', u'\u0061', u'\u006C', u'\u0075', u'\u0065')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u0074', u'\u0036', u'\u0034')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0049', u'\u006E', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072')), (0LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0069', u'\u006D')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0074', u'\u0072', u'\u0069', u'\u006D', u'\u004C', u'\u0065', u'\u0066', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0074', u'\u0072', u'\u0069', u'\u006D', u'\u0052', u'\u0069', u'\u0067', u'\u0068', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0075', u'\u0070', u'\u0070', u'\u0065', u'\u0072')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0078', u'\u006F', u'\u0072')), (1LL));
}
(jdq) = (avo<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (*jdm), (&jdr)));
if(!(jdr)){
return false;
}
switch(jdq){
case 0LL:
if(((((((bdg)((jdn))) || ((ggl)((jdn)))) || ((esc)((jdn)))) || ((ghb)((jdn)))) || (((jdn)->lw) == (1025LL))) || ((fka)((jdn)))){
return true;
}
break;
case 1LL:
if((((jdn)->lw) == (1025LL)) || ((clb)((jdn)))){
return true;
}
break;
case 2LL:
if((esc)((jdn))){
return true;
}
break;
case 3LL:
if(((jdn)->lw) == (1025LL)){
return true;
}
break;
case 4LL:
if(((jdn)->lw) == (66561LL)){
return true;
}
break;
case 5LL:
if((fka)((jdn))){
return true;
}
break;
case 6LL:
if(((jdn)->lw) == (66563LL)){
switch((as_<cbn>(classTable_, (jdn), 84))->cbq){
case 0LL:
(*jdm) = (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
break;
case 1LL:
(*jdm) = (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'));
break;
case 2LL:
(*jdm) = (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return true;
}
if(((jdn)->lw) == (66564LL)){
(*jdm) = (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u0044', u'\u0069', u'\u0063', u'\u0074'));
return true;
}
break;
case 7LL:
if(((jdn)->lw) == (66563LL)){
switch((as_<cbn>(classTable_, (jdn), 84))->cbq){
case 0LL:
(*jdm) = (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
break;
case 1LL:
(*jdm) = (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'));
break;
case 2LL:
(*jdm) = (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return true;
}
if(((jdn)->lw) == (66564LL)){
(*jdm) = (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u0044', u'\u0069', u'\u0063', u'\u0074'));
return true;
}
break;
case 8LL:
if((((jdn)->lw) == (66563LL)) && (((as_<cbn>(classTable_, (jdn), 84))->cbq) == (0LL))){
return true;
}
break;
case 9LL:
if(((jdn)->lw) == (66563LL)){
if(((as_<cbn>(classTable_, (jdn), 84))->cbq) == (1LL)){
(*jdm) = (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'));
return true;
}
else if(((as_<cbn>(classTable_, (jdn), 84))->cbq) == (2LL)){
(*jdm) = (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'));
return true;
}
}
break;
case 10LL:
if((bdg)((jdn))){
jfx = *jdm;
if(cmp_(jfx, (new Array_<char16_t>(3, u'\u0061', u'\u0062', u'\u0073'))) == 0){
(*jdm) = (new Array_<char16_t>(6, u'\u0061', u'\u0062', u'\u0073', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jfx, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070'))) == 0){
(*jdm) = (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jfx, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E'))) == 0){
(*jdm) = (new Array_<char16_t>(11, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jfx, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078'))) == 0){
(*jdm) = (new Array_<char16_t>(11, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jfx, (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u0067', u'\u006E'))) == 0){
(*jdm) = (new Array_<char16_t>(7, u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jfx, (new Array_<char16_t>(8, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074'))) == 0){
(*jdm) = (new Array_<char16_t>(11, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074', u'\u0049', u'\u006E', u'\u0074'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
if((ggl)((jdn))){
jgi = *jdm;
if(cmp_(jgi, (new Array_<char16_t>(3, u'\u0061', u'\u0062', u'\u0073'))) == 0){
(*jdm) = (new Array_<char16_t>(8, u'\u0061', u'\u0062', u'\u0073', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jgi, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070'))) == 0){
(*jdm) = (new Array_<char16_t>(10, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jgi, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E'))) == 0){
(*jdm) = (new Array_<char16_t>(13, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jgi, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078'))) == 0){
(*jdm) = (new Array_<char16_t>(13, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jgi, (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u0067', u'\u006E'))) == 0){
(*jdm) = (new Array_<char16_t>(9, u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jgi, (new Array_<char16_t>(8, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074'))) == 0){
(*jdm) = (new Array_<char16_t>(13, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
break;
case 11LL:
if((((jdn)->lw) == (66561LL)) && ((fka)(((as_<cai>(classTable_, (jdn), 76))->cak)))){
return true;
}
break;
case 12LL:
if(((jdn)->lw) == (66564LL)){
return true;
}
break;
case 13LL:
if(((jdn)->lw) == (66561LL)){
jha = *jdm;
if(cmp_(jha, (new Array_<char16_t>(4, u'\u0073', u'\u006F', u'\u0072', u'\u0074'))) == 0){
(*jdm) = (new Array_<char16_t>(9, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else if(cmp_(jha, (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063'))) == 0){
(*jdm) = (new Array_<char16_t>(13, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else if(cmp_(jha, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006E', u'\u0064'))) == 0){
(*jdm) = (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else if(cmp_(jha, (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074'))) == 0){
(*jdm) = (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
if((((jdn)->lw) == (66563LL)) && (((as_<cbn>(classTable_, (jdn), 84))->cbq) == (0LL))){
jhj = *jdm;
if(cmp_(jhj, (new Array_<char16_t>(4, u'\u0073', u'\u006F', u'\u0072', u'\u0074'))) == 0){
(*jdm) = (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else if(cmp_(jhj, (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063'))) == 0){
(*jdm) = (new Array_<char16_t>(12, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else if(cmp_(jhj, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006E', u'\u0064'))) == 0){
(*jdm) = (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else if(cmp_(jhj, (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074'))) == 0){
(*jdm) = (new Array_<char16_t>(12, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
break;
case 14LL:
if((((jdn)->lw) == (66563LL)) && (((as_<cbn>(classTable_, (jdn), 84))->cbq) == (0LL))){
return true;
}
if(((jdn)->lw) == (66564LL)){
(*jdm) = (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u006C', u'\u0044', u'\u0069', u'\u0063', u'\u0074'));
return true;
}
break;
}
return false;
}
// cacheSubExpr
static gd* ial(List_<ge*>* jhu /*stats*/, gd* jhv /*ast*/, ga* jhw /*pos*/){
gd* jib = nullptr; // ref
gb* jid = nullptr; // arg
buu* jif = nullptr; // do_
byb* jih = nullptr; // exprAssign
if(eqAddr_((jhv), (nullptr))){
return nullptr;
}
if((((jhv)->lw) == (2062LL)) || ((aye<int64_t>(((jhv)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
return jhv;
}
(jib) = (new gd());
(buz)((jib), (2062LL), (jhw));
((jib)->ni) = (new Array_<char16_t>(1, u'\u0024'));
((jib)->pj) = (2LL);
((jib)->nk) = (jib);
(jid) = (new gb());
(btr)((jid), (7LL), (jhw));
((jid)->qk) = (3LL);
((jid)->ql) = (false);
((jid)->qf) = ((jhv)->pf);
((jid)->qg) = (nullptr);
((jid)->nk) = (jid);
((jib)->nj) = (jid);
((jib)->pf) = ((jid)->qf);
(jif) = (new buu());
(btr)((jif), (528LL), (jhw));
(jih) = (new byb());
(buz)((jih), (2050LL), (jhw));
((jih)->byc) = (0LL);
((jih)->byf) = (jib);
((jih)->byg) = (jhv);
((jif)->bve) = (jih);
uh<List_<ge*>*, ge*>((jhu), (new Array_<int64_t>(1, (0LL))), ((ego)((jif))));
return jib;
}
// buildExpr1
static void icw(ebq* jii /*ast*/){
int64_t jik = 0;
if(!(((jii)->pj) != (0LL))){
throw 0xE9170000U;
}
switch((jii)->ggi){
case 0LL:
(epf)(((jii)->ggc));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002D', u'\u0028')));
(epf)(((jii)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0021', u'\u0028')));
(epf)(((jii)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 3LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u005F', u'\u0028')));
(epf)(((jii)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 4LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jii)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002D', u'\u003E', u'\u004C', u'\u0065', u'\u006E', u'\u0028', u'\u0029')));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr2
static void icy(byb* jir /*ast*/){
gc* jis = nullptr; // type
int64_t jiu = 0;
Array_<char16_t>* jkm = nullptr; // tmpVar
if(!(((jir)->pj) != (0LL))){
throw 0xE9170000U;
}
(jis) = (((jir)->byf)->pf);
switch((jir)->byc){
case 0LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003D', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 8LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u007C', u'\u007C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 9LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 10LL:
if((byj)((jis))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0029', u'\u0020', u'\u003C', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 11LL:
if((byj)((jis))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 12LL:
if((byj)((jis))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 13LL:
if((byj)((jis))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 14LL:
if((byj)((jis))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 15LL:
if((byj)((jis))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u0021', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u0021', u'\u003D', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 16LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0065', u'\u0071', u'\u0041', u'\u0064', u'\u0064', u'\u0072', u'\u005F', u'\u0028', u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 17LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0021', u'\u0065', u'\u0071', u'\u0041', u'\u0064', u'\u0064', u'\u0072', u'\u005F', u'\u0028', u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 18LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u002D', u'\u003E', u'\u0043', u'\u0061', u'\u0074', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 19LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002B', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 20LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002D', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 21LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002A', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 22LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002F', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 23LL:
if(((bdg)((jis))) || ((aye<int64_t>(((jis)->lw), (new Array_<int64_t>(1, (0LL))), (1025LL))) == (1025LL))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u0025', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
if(!((ggl)((jis)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0066', u'\u006D', u'\u006F', u'\u0064', u'\u0028', u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
break;
case 24LL:
if(((bdg)((jis))) || ((aye<int64_t>(((jis)->lw), (new Array_<int64_t>(1, (0LL))), (1025LL))) == (1025LL))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0070', u'\u006F', u'\u0077', u'\u0049', u'\u005F', u'\u0028', u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
else{
if(!((ggl)((jis)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0070', u'\u006F', u'\u0077', u'\u0028', u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
break;
case 25LL:
(jkm) = ((ezb)((jis)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((jkm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0020', u'\u003D', u'\u0020', u'\u0028'))));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003D', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jir)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003D', u'\u0020', u'\u0028'))->Cat(v<Array_<char16_t>*>((jkm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr3
static void ida(ebv* jko /*ast*/){
if(!(((jko)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jko)->grg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003F', u'\u0020', u'\u0028')));
(epf)(((jko)->grj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003A', u'\u0020', u'\u0028')));
(epf)(((jko)->grm));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprNew
static void idc(eby* jkp /*ast*/){
ul* jks = nullptr; // class_
Array_<char16_t>* jkt = nullptr; // id
cbn* jkx = nullptr; // gen
int64_t jkz = 0;
cby* jlf = nullptr; // dict_
if(!(((jkp)->pj) != (0LL))){
throw 0xE9170000U;
}
if((eha)(((jkp)->gth))){
(jks) = (as_<ul>(classTable_, (((jkp)->gth)->nj), 22));
(jkt) = ((bfo)((jks)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0077', u'\u0020'))->Cat(v<Array_<char16_t>*>((jkt), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))));
}
else{
if((((jkp)->gth)->lw) == (66563LL)){
(jkx) = (as_<cbn>(classTable_, ((jkp)->gth), 84));
switch((jkx)->cbq){
case 0LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jkx)->cbs))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029'))));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jkx)->cbs))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029'))));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jkx)->cbs))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((((jkp)->gth)->lw) == (66564LL))){
throw 0xE9170000U;
}
(jlf) = (as_<cby>(classTable_, ((jkp)->gth), 86));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0044', u'\u0069', u'\u0063', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jlf)->cbz))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((jlf)->cca))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029')))));
}
}
}
// buildExprNewArray
static void ide(ecb* jlg /*ast*/){
List_<gd*>* jli = nullptr; // items
if(!(((jlg)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jlg)->gvb))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((jlg)->pf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003E', u'\u0028'))->Cat(v<int64_t>((((jlg)->gus)->Len()), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
(jli) = ((jlg)->gus);
awe<List_<gd*>*>((jli), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((jli), (new Array_<int64_t>(1, (0LL)))))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028')));
(epf)((awi<List_<gd*>*, gd*>((jli), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((jli), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprAs
static void idg(ece* jlk /*ast*/){
int64_t jlm = 0;
gc* jlo = nullptr; // t1
gc* jlp = nullptr; // t2
Array_<char16_t>* jls = nullptr; // id
bby* jlt = nullptr; // info
bby* jlw = nullptr; // info
bby* jly = nullptr; // info
if(!(((jlk)->pj) != (0LL))){
throw 0xE9170000U;
}
switch((jlk)->gwx){
case 0LL:
(jlo) = (((jlk)->gwp)->pf);
(jlp) = ((jlk)->gws);
if((eha)((jlo))){
if(!((eha)((jlp)))){
throw 0xE9170000U;
}
(jls) = ((bfo)((as_<ul>(classTable_, ((jlp)->nj), 22))));
(jlt) = ((bbx)(((jlp)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0061', u'\u0073', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>((jls), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u003E', u'\u0028', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u002C', u'\u0020', u'\u0028'))));
(epf)(((jlk)->gwp));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<int64_t>((((jlt)->bft) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jlk)->gws))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u0028'))));
(epf)(((jlk)->gwp));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 1LL:
(bfo)((as_<ul>(classTable_, (((jlk)->gws)->nj), 22)));
(jlw) = ((bbx)((((jlk)->gws)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(18, u'\u0069', u'\u0073', u'\u005F', u'\u0028', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jlk)->gwp));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<int64_t>((((jlw)->bft) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
case 2LL:
(bfo)((as_<ul>(classTable_, (((jlk)->gws)->nj), 22)));
(jly) = ((bbx)((((jlk)->gws)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(19, u'\u0021', u'\u0069', u'\u0073', u'\u005F', u'\u0028', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jlk)->gwp));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<int64_t>((((jly)->bft) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExprToBin
static void idi(ech* jma /*ast*/){
if(!(((jma)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u0028')));
(epf)(((jma)->haw));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprFromBin
static void idk(eck* jmb /*ast*/){
if(!(((jmb)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((jmb)->hcm))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0028'))));
(epf)(((jmb)->hch));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(epf)(((jmb)->hcn));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
// buildExprCall
static void idm(bux* jmc /*ast*/){
caq* jmd = nullptr; // funcType
Array_<char16_t>* jme = nullptr; // template
List_<buy*>* jmh = nullptr; // items
gc* jmi = nullptr; // meType
bool jnj = false; // first
List_<buy*>* jnk = nullptr; // items
buy* jnm = nullptr; // item
gc* jnt = nullptr; // type
if(!(((jmc)->pj) != (0LL))){
throw 0xE9170000U;
}
(jmd) = (as_<caq>(classTable_, (((jmc)->bvd)->pf), 80));
(jme) = (nullptr);
if((!eqAddr_((jmd), (nullptr))) && ((aye<int64_t>(((jmd)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL))){
(jmh) = ((jmc)->bva);
awe<List_<buy*>*>((jmh), (new Array_<int64_t>(1, (0LL))));
(jmi) = (((awi<List_<buy*>*, buy*>((jmh), (new Array_<int64_t>(1, (0LL)))))->bwm)->pf);
if((aye<int64_t>(((jmd)->elx), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)){
(jme) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)((jmi))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cby>(classTable_, (jmi), 86))->cbz))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cby>(classTable_, (jmi), 86))->cca))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E')))));
}
else if((aye<int64_t>(((jmd)->elx), (new Array_<int64_t>(1, (0LL))), (8LL))) == (8LL)){
if((aye<int64_t>(((jmd)->elx), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(jme) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)((jmi))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
if(((jmi)->lw) == (66563LL)){
(jme) = ((jme)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cbn>(classTable_, (jmi), 84))->cbs))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020'))));
}
else{
if(!(((jmi)->lw) == (66564LL))){
throw 0xE9170000U;
}
(jme) = ((jme)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cby>(classTable_, (jmi), 86))->cbz))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020'))));
}
(jme) = ((jme)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((jmd)->cat))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else{
(jme) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)((jmi))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
if(((jmi)->lw) == (66561LL)){
(jme) = ((jme)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cai>(classTable_, (jmi), 76))->cak))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else if(((jmi)->lw) == (66563LL)){
(jme) = ((jme)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cbn>(classTable_, (jmi), 84))->cbs))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else{
if(!(((jmi)->lw) == (66564LL))){
throw 0xE9170000U;
}
(jme) = ((jme)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cby>(classTable_, (jmi), 86))->cbz))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
}
}
else if((aye<int64_t>(((jmd)->elx), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(jme) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)((jmi))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((jmd)->cat))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else if((aye<int64_t>(((jmd)->elx), (new Array_<int64_t>(1, (0LL))), (256LL))) == (256LL)){
(jme) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)((jmi))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cby>(classTable_, (jmi), 86))->cbz))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cby>(classTable_, (jmi), 86))->cca))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E')))));
}
else{
(jme) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)((jmi))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E')));
}
}
if(eqAddr_((jme), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jmc)->bvd));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
(epf)(((jmc)->bvd));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (jme));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(jnj) = (true);
(jnk) = ((jmc)->bva);
awe<List_<buy*>*>((jnk), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buy*>*>((jnk), (new Array_<int64_t>(1, (0LL)))))){
(jnm) = (awi<List_<buy*>*, buy*>((jnk), (new Array_<int64_t>(1, (0LL)))));
if(jnj){
(jnj) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028')));
}
if((jnm)->bwi){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0026')));
}
(epf)(((jnm)->bwm));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<buy*>*>((jnk), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
(jnt) = ((jmc)->pf);
if(!eqAddr_((jnt), (nullptr))){
if((eha)((jnt))){
(bfo)((as_<ul>(classTable_, ((jnt)->nj), 22)));
}
}
}
// buildExprArray
static void ido(ecp* jny /*ast*/){
if(!(((jny)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jny)->hfz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002D', u'\u003E', u'\u0041', u'\u0074', u'\u0028')));
(epf)(((jny)->hge));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprDot
static void idq(ecs* jnz /*ast*/){
um* joc = nullptr; // classItem
bby* jof = nullptr; // info
if(!(((jnz)->pj) != (0LL))){
throw 0xE9170000U;
}
if((eha)((((jnz)->heh)->pf))){
(joc) = ((jnz)->hik);
if(!(!eqAddr_((joc), (nullptr)))){
throw 0xE9170000U;
}
(bfo)((as_<ul>(classTable_, ((((jnz)->heh)->pf)->nj), 22)));
if((((joc)->azl)->lw) == (2LL)){
(jof) = ((bbx)(((as_<bgi>(classTable_, ((joc)->azl), 38))->bgk)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(epf)(((jnz)->heh));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((jof)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
else{
if(!((((joc)->azl)->lw) == (256LL))){
throw 0xE9170000U;
}
(jof) = ((bbx)(((joc)->azl)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((jof)->bdy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
}
else{
if(!((((jnz)->nj)->lw) == (2062LL))){
throw 0xE9170000U;
}
(iec)((as_<gd>(classTable_, ((jnz)->nj), 14)));
}
}
// buildExprValue
static void ids(bvq* joi /*ast*/){
if(!((((joi)->pf)->lw) == (1027LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072')));
}
// buildExprValuePrim
static void idu(bvp* joj /*ast*/){
gc* jok = nullptr; // type
int64_t jor = 0;
(jok) = ((joj)->pf);
if(((bdg)((jok))) || ((clb)((jok)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((v<int64_t>((static_cast<int64_t>((joj)->bvr)), (new Array_<int64_t>(1, (0LL)))))->Cat(new Array_<char16_t>(2, u'\u004C', u'\u004C'))));
}
else if((esc)((jok))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0075', u'\u0027', u'\u005C', u'\u0075'))->Cat(v<Array_<char16_t>*>((auw<Array_<char16_t>*>((v<uint16_t>((static_cast<uint16_t>((joj)->bvr)), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))), (2LL), (-1LL))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0027'))));
}
else if((ghb)((jok))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((((joj)->bvr) == (0x0000000000000000ULL)) ? (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')) : (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))));
}
else if(((jok)->lw) == (1025LL)){
switch((as_<cam>(classTable_, (jok), 78))->can){
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(21, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0038', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<uint8_t>((static_cast<uint8_t>((joj)->bvr)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0055', u'\u0029'))));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<uint16_t>((static_cast<uint16_t>((joj)->bvr)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0055', u'\u0029'))));
break;
case 4LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<uint32_t>((static_cast<uint32_t>((joj)->bvr)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0055'))));
break;
case 8LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<uint64_t>(((joj)->bvr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0055', u'\u004C', u'\u004C'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!(false)){
throw 0xE9170000U;
}
}
}
// buildExprValueStr
static void idw(ecz* joy /*ast*/){
Array_<char16_t>* joz = nullptr; // value
Array_<char16_t>* jpa = nullptr; // s
int64_t jpe = 0;
int64_t jpf = 0;
(joz) = ((joy)->glw);
(jpa) = (((new Array_<char16_t>(21, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<int64_t>(((joz)->Len()), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0)));
for(jpe = (0LL), jpf = (((joz)->Len()) - (1LL)); jpe <= jpf; jpe += (1LL)){
(jpa) = ((jpa)->Cat(((new Array_<char16_t>(6, u'\u002C', u'\u0020', u'\u0075', u'\u0027', u'\u005C', u'\u0075'))->Cat(v<Array_<char16_t>*>((auw<Array_<char16_t>*>((v<uint16_t>((static_cast<uint16_t>((joz)->At(jpe))), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))), (2LL), (-1LL))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0027'))));
}
(jpa) = ((jpa)->Cat(new Array_<char16_t>(1, u'\u0029')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (jpa));
}
// buildExprValueFloat
static void idy(edf* jpi /*ast*/){
Array_<char16_t>* jpj = nullptr; // value
(jpj) = (v<double>(((jpi)->ggy), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((jpj), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(39, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0069', u'\u0063', u'\u005F', u'\u006C', u'\u0069', u'\u006D', u'\u0069', u'\u0074', u'\u0073', u'\u003C', u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065', u'\u003E', u'\u003A', u'\u003A', u'\u0069', u'\u006E', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0079', u'\u0028', u'\u0029')));
}
else if((awn<Array_<char16_t>*, char16_t>((jpj), (new Array_<int64_t>(1, (0LL))), (u'\u002E'), (-1LL))) == (-1LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((jpj)->Cat(new Array_<char16_t>(2, u'\u002E', u'\u0030'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (jpj));
}
}
// buildExprValueArray
static void iea(edi* jpo /*ast*/){
List_<gd*>* jpp = nullptr; // items
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bct)(((as_<cai>(classTable_, ((jpo)->pf), 76))->cak))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003E', u'\u0028'))->Cat(v<int64_t>((((jpo)->heq)->Len()), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0)))));
(jpp) = ((jpo)->heq);
awe<List_<gd*>*>((jpp), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((jpp), (new Array_<int64_t>(1, (0LL)))))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028')));
(epf)((awi<List_<gd*>*, gd*>((jpp), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((jpp), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprRef
static void iec(gd* jpr /*ast*/){
fx* jps = nullptr; // ast2
bby* jpt = nullptr; // info
gb* jpx = nullptr; // arg
int64_t jpz = 0;
(jps) = ((jpr)->nj);
(jpt) = ((bbx)((jps)));
if(((jps)->lw) == (256LL)){
uk<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL))), (as_<fw>(classTable_, (jps), 8)));
}
else{
if(!(((jps)->lw) == (7LL))){
throw 0xE9170000U;
}
(jpx) = (as_<gb>(classTable_, (jps), 10));
switch((jpx)->qk){
case 1LL:
if(!((jpt)->bca)){
((jpt)->bca) = (true);
uh<List_<gb*>*, gb*>((ar), (new Array_<int64_t>(1, (0LL))), (jpx));
}
break;
case 2LL:
break;
case 3LL:
if(!((jpt)->bca)){
((jpt)->bca) = (true);
uh<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), (jpx));
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if((jpx)->ql){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u002A')));
}
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((jpt)->bdy));
}
// buildExpr1
static void iel(ebq* jqk /*ast*/){
int64_t jqm = 0;
Array_<char16_t>* jqr = nullptr; // typeId
gc* jqu = nullptr; // type
int64_t jqy = 0;
if(!(((jqk)->pj) != (0LL))){
throw 0xE9170000U;
}
switch((jqk)->ggi){
case 0LL:
(fhu)(((jqk)->ggc));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002D', u'\u0028')));
(fhu)(((jqk)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0021', u'\u0028')));
(fhu)(((jqk)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 3LL:
(jqr) = ((jqs)((((jqk)->ggc)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0043', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>((jqr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0028'))));
(fhu)(((jqk)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 4LL:
(jqu) = (((jqk)->ggc)->pf);
if(((jqu)->lw) == (66563LL)){
switch((as_<cbn>(classTable_, (jqu), 84))->cbq){
case 0LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jqk)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u004C')));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jqk)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jqk)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if(((jqu)->lw) == (66564LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jqk)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065')));
}
else{
if(!(((jqu)->lw) == (66561LL))){
throw 0xE9170000U;
}
if((esc)(((as_<cai>(classTable_, (jqu), 76))->cak))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jqk)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jqk)->ggc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
}
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr2
static void ien(byb* jrj /*ast*/){
gc* jrk = nullptr; // type
int64_t jrm = 0;
ecp* jrq = nullptr; // ast2
Array_<char16_t>* jrr = nullptr; // tmpIdx
Array_<char16_t>* jrs = nullptr; // tmpChar
Array_<char16_t>* jts = nullptr; // tmpVar
if(!(((jrj)->pj) != (0LL))){
throw 0xE9170000U;
}
(jrk) = (((jrj)->byf)->pf);
switch((jrj)->byc){
case 0LL:
if(((((jrj)->byf)->lw) == (2058LL)) && ((esc)(((as_<ecp>(classTable_, ((jrj)->byf), 124))->pf)))){
(jrq) = (as_<ecp>(classTable_, ((jrj)->byf), 124));
(jrr) = ((flb)((((jrq)->hge)->pf)));
(jrs) = ((flb)(((jrq)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrq)->hfz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u003D', u'\u0028'))->Cat(v<Array_<char16_t>*>((jrr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(fhu)(((jrq)->hge));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhu)(((jrq)->hfz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0030', u'\u002C'))->Cat(v<Array_<char16_t>*>((jrr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u0029', u'\u002B', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002B', u'\u0028')));
(fhu)(((jrq)->hfz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>((jrr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002B', u'\u0031', u'\u0029', u'\u0029'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 8LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u007C', u'\u007C', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 9LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0026', u'\u0026', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 10LL:
if((fka)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u003C', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byj)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u003C', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003C', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 11LL:
if((fka)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u003E', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byj)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u003E', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003E', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 12LL:
if((fka)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002E', u'\u0053', u'\u003C', u'\u003D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byj)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003C', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u003C', u'\u003D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 13LL:
if((fka)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002E', u'\u0053', u'\u003E', u'\u003D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byj)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003E', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u003E', u'\u003D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 14LL:
if((fka)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u002E', u'\u0053', u'\u003D', u'\u003D', u'\u003D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byj)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003D', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 15LL:
if((fka)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u002E', u'\u0053', u'\u0021', u'\u003D', u'\u003D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byj)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u0021', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0021', u'\u003D', u'\u003D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 16LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 17LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0021', u'\u003D', u'\u003D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 18LL:
if((fka)((jrk))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u007B', u'\u0053', u'\u003A', u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u002B', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002E', u'\u0053', u'\u007D')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0029', u'\u002E', u'\u0063', u'\u006F', u'\u006E', u'\u0063', u'\u0061', u'\u0074', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 19LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002B', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 20LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 21LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002A', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 22LL:
if(!((ggl)((jrk)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u007E', u'\u007E', u'\u0028')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002F', u'\u0028')));
(fhu)(((jrj)->byg));
if(!((ggl)((jrk)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 23LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u0025', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 24LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002A', u'\u002A', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 25LL:
(jts) = ((flb)((jrk)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((jts), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhu)(((jrj)->byf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003D', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhu)(((jrj)->byg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003D', u'\u0028'))->Cat(v<Array_<char16_t>*>((jts), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr3
static void iep(ebv* jtu /*ast*/){
if(!(((jtu)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jtu)->grg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003F', u'\u0028')));
(fhu)(((jtu)->grj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003A', u'\u0028')));
(fhu)(((jtu)->grm));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprNew
static void ier(eby* jtv /*ast*/){
ul* jty = nullptr; // class_
Array_<char16_t>* jtz = nullptr; // id
cbn* jud = nullptr; // gen
int64_t juf = 0;
if(!(((jtv)->pj) != (0LL))){
throw 0xE9170000U;
}
if((eha)(((jtv)->gth))){
(jty) = (as_<ul>(classTable_, (((jtv)->gth)->nj), 22));
(jtz) = ((bkw)((jty)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0077', u'\u0020'))->Cat(v<Array_<char16_t>*>((jtz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))));
}
else{
if((((jtv)->gth)->lw) == (66563LL)){
(jud) = (as_<cbn>(classTable_, ((jtv)->gth), 84));
switch((jud)->cbq){
case 0LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(26, u'\u007B', u'\u004C', u'\u003A', u'\u0030', u'\u002C', u'\u0048', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0054', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0050', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u007D')));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005B', u'\u005D')));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005B', u'\u005D')));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((((jtv)->gth)->lw) == (66564LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u004D', u'\u0061', u'\u0070', u'\u0028', u'\u0029')));
}
}
}
// buildExprNewArray
static void iet(ecb* jul /*ast*/){
List_<gd*>* jun = nullptr; // items
bool jut = false; // first
bool jvc = false; // first
if(!(((jul)->pj) != (0LL))){
throw 0xE9170000U;
}
(jun) = ((jul)->gus);
awe<List_<gd*>*>((jun), (new Array_<int64_t>(1, (0LL))));
if((esc)(((jul)->gvb))){
if(((jun)->Len()) == (1LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u005C', u'\u0030', u'\u0022', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074', u'\u0028')));
(fhu)((awi<List_<gd*>*, gd*>((jun), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u007D')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(53, u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0041', u'\u005F', u'\u0028', u'\u006E', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u006E', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003D', u'\u003D', u'\u003D', u'\u0031', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u005C', u'\u0030', u'\u0022', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((bko)(((jul)->gvb))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(86, u'\u0029', u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u002C', u'\u006D', u'\u003D', u'\u006E', u'\u002E', u'\u0073', u'\u0068', u'\u0069', u'\u0066', u'\u0074', u'\u0028', u'\u0029', u'\u002C', u'\u0069', u'\u003B', u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0061', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0041', u'\u005F', u'\u0028', u'\u006D', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u007D', u'\u007D', u'\u0029', u'\u0028', u'\u005B'))));
(jut) = (true);
while(!(awg<List_<gd*>*>((jun), (new Array_<int64_t>(1, (0LL)))))){
if(jut){
(jut) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(fhu)((awi<List_<gd*>*, gd*>((jun), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((jun), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005D', u'\u0029')));
}
}
else{
if(((jun)->Len()) == (1LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028')));
(fhu)((awi<List_<gd*>*, gd*>((jun), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0029', u'\u002E', u'\u0066', u'\u0069', u'\u006C', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((bko)(((jul)->gvb))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(60, u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0041', u'\u005F', u'\u0028', u'\u006E', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u006E', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003D', u'\u003D', u'\u003D', u'\u0031', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u002E', u'\u0066', u'\u0069', u'\u006C', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((bko)(((jul)->gvb))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(85, u'\u0029', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u002C', u'\u006D', u'\u003D', u'\u006E', u'\u002E', u'\u0073', u'\u0068', u'\u0069', u'\u0066', u'\u0074', u'\u0028', u'\u0029', u'\u002C', u'\u0069', u'\u003B', u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0061', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0041', u'\u005F', u'\u0028', u'\u006D', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u007D', u'\u007D', u'\u0029', u'\u0028', u'\u005B'))));
(jvc) = (true);
while(!(awg<List_<gd*>*>((jun), (new Array_<int64_t>(1, (0LL)))))){
if(jvc){
(jvc) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(fhu)((awi<List_<gd*>*, gd*>((jun), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((jun), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005D', u'\u0029')));
}
}
}
// buildExprAs
static void iev(ece* jvh /*ast*/){
int64_t jvj = 0;
gc* jvl = nullptr; // t1
gc* jvm = nullptr; // t2
biw* jwe = nullptr; // info
biw* jwg = nullptr; // info
if(!(((jvh)->pj) != (0LL))){
throw 0xE9170000U;
}
switch((jvh)->gwx){
case 0LL:
(jvl) = (((jvh)->gwp)->pf);
(jvm) = ((jvh)->gws);
if((eha)((jvl))){
if(!((eha)((jvm)))){
throw 0xE9170000U;
}
(bkw)((as_<ul>(classTable_, ((jvm)->nj), 22)));
(fhu)(((jvh)->gwp));
}
else{
if((((((jvl)->lw) == (1025LL)) || ((bdg)((jvl)))) || ((esc)((jvl)))) || ((clb)((jvl)))){
if(((((((jvm)->lw) == (1025LL)) || ((bdg)((jvm)))) || ((esc)((jvm)))) || ((clb)((jvm)))) || ((ggl)((jvm)))){
(fhu)(((jvh)->gwp));
}
else{
if(!((ghb)((jvm)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jvh)->gwp));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0021', u'\u003D', u'\u0030')));
}
}
else if((ggl)((jvl))){
if((((jvm)->lw) == (1025LL)) || ((bdg)((jvm)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u007E', u'\u007E', u'\u0028')));
(fhu)(((jvh)->gwp));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
if(!((ggl)((jvm)))){
throw 0xE9170000U;
}
(fhu)(((jvh)->gwp));
}
}
else{
if(!((ghb)((jvl)))){
throw 0xE9170000U;
}
if((((jvm)->lw) == (1025LL)) || ((bdg)((jvm)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jvh)->gwp));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u003F', u'\u0031', u'\u003A', u'\u0030')));
}
else{
if(!((ghb)((jvm)))){
throw 0xE9170000U;
}
(fhu)(((jvh)->gwp));
}
}
}
break;
case 1LL:
(bkw)((as_<ul>(classTable_, (((jvh)->gws)->nj), 22)));
(jwe) = ((biv)((((jvh)->gws)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jvh)->gwp));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0029', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0063', u'\u0065', u'\u006F', u'\u0066', u'\u0020'))->Cat(v<Array_<char16_t>*>(((jwe)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
break;
case 2LL:
(bkw)((as_<ul>(classTable_, (((jvh)->gws)->nj), 22)));
(jwg) = ((biv)((((jvh)->gws)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0021', u'\u0028', u'\u0028')));
(fhu)(((jvh)->gwp));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0029', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0063', u'\u0065', u'\u006F', u'\u0066', u'\u0020'))->Cat(v<Array_<char16_t>*>(((jwg)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExprToBin
static void iex(ech* jwi /*ast*/){
if(!(((jwi)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u0028')));
(fhu)(((jwi)->haw));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprFromBin
static void iez(eck* jwj /*ast*/){
if(!(((jwj)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u0028', u'\u0028')));
(fhu)(((jwj)->hch));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(fhu)(((jwj)->hcn));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
// buildExprCall
static void ifb(bux* jwk /*ast*/){
caq* jwl = nullptr; // funcType
Array_<char16_t>* jwm = nullptr; // meTypeId
List_<buy*>* jwp = nullptr; // items
int64_t jwq = 0; // refNum
List_<buy*>* jws = nullptr; // items
Array_<char16_t>* jwx = nullptr; // resultVar
Array_<Array_<char16_t>*>* jwy = nullptr; // refVar
int64_t jxe = 0; // idx
int64_t jxf = 0; // refCnt
bool jxg = false; // first
List_<buy*>* jxh = nullptr; // items
buy* jxj = nullptr; // item
int64_t jxw = 0; // idx
int64_t jxx = 0; // refCnt
List_<buy*>* jxy = nullptr; // items
buy* jya = nullptr; // item
gc* jyj = nullptr; // type
if(!(((jwk)->pj) != (0LL))){
throw 0xE9170000U;
}
(jwl) = (as_<caq>(classTable_, (((jwk)->bvd)->pf), 80));
(jwm) = (nullptr);
if((!eqAddr_((jwl), (nullptr))) && ((aye<int64_t>(((jwl)->elx), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL))){
(jwp) = ((jwk)->bva);
awe<List_<buy*>*>((jwp), (new Array_<int64_t>(1, (0LL))));
(jwm) = ((jqs)((((awi<List_<buy*>*, buy*>((jwp), (new Array_<int64_t>(1, (0LL)))))->bwm)->pf)));
}
(jwq) = (0LL);
(jws) = ((jwk)->bva);
awe<List_<buy*>*>((jws), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buy*>*>((jws), (new Array_<int64_t>(1, (0LL)))))){
if((awi<List_<buy*>*, buy*>((jws), (new Array_<int64_t>(1, (0LL)))))->bwi){
(jwq) = ((jwq) + (1LL));
}
ays<List_<buy*>*>((jws), (new Array_<int64_t>(1, (0LL))));
}
(jwx) = (nullptr);
(jwy) = (nullptr);
if((jwq) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
if(!eqAddr_(((jwk)->pf), (nullptr))){
(jwx) = ((flb)(((jwk)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((jwx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003D'))));
}
(jwy) = (newArray_<Array_<char16_t>*, Array_<Array_<char16_t>*>*>(1, (jwq)));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jwk)->bvd));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0028')));
(jxe) = (0LL);
(jxf) = (0LL);
(jxg) = (true);
(jxh) = ((jwk)->bva);
awe<List_<buy*>*>((jxh), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buy*>*>((jxh), (new Array_<int64_t>(1, (0LL)))))){
(jxj) = (awi<List_<buy*>*, buy*>((jxh), (new Array_<int64_t>(1, (0LL)))));
if(jxg){
(jxg) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
if((!eqAddr_((jwm), (nullptr))) && ((jxe) == (1LL))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (jwm));
}
else if((jxj)->bwi){
((jwy)->At(jxf)) = ((flb)((((jxj)->bwm)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((jwy)->At(jxf)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u003D', u'\u007B', u'\u0024', u'\u003A', u'\u0028'))));
(fhu)(((jxj)->bwm));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u007D', u'\u002C'))->Cat(v<Array_<char16_t>*>(((jwy)->At(jxf)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
(jxf) = ((jxf) + (1LL));
}
else{
(fhu)(((jxj)->bwm));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
(jxe) = ((jxe) + (1LL));
ays<List_<buy*>*>((jxh), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
if((jwq) > (0LL)){
(jxw) = (0LL);
(jxx) = (0LL);
(jxy) = ((jwk)->bva);
awe<List_<buy*>*>((jxy), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buy*>*>((jxy), (new Array_<int64_t>(1, (0LL)))))){
(jya) = (awi<List_<buy*>*, buy*>((jxy), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((jwm), (nullptr))) && ((jxw) == (1LL))){
}
else if((jya)->bwi){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
(fhu)(((jya)->bwm));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u003D'))->Cat(v<Array_<char16_t>*>(((jwy)->At(jxx)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002E', u'\u0024'))));
(jxx) = ((jxx) + (1LL));
}
(jxw) = ((jxw) + (1LL));
ays<List_<buy*>*>((jxy), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((jwk)->pf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>((jwx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
(jyj) = ((jwk)->pf);
if(!eqAddr_((jyj), (nullptr))){
if((eha)((jyj))){
(bkw)((as_<ul>(classTable_, ((jyj)->nj), 22)));
}
}
}
// buildExprArray
static void ifd(ecp* jyo /*ast*/){
if(!(((jyo)->pj) != (0LL))){
throw 0xE9170000U;
}
if((esc)(((jyo)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jyo)->hfz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0041', u'\u0074', u'\u0028')));
(fhu)(((jyo)->hge));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jyo)->hfz));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u005B')));
(fhu)(((jyo)->hge));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u005D')));
}
}
// buildExprDot
static void iff(ecs* jys /*ast*/){
um* jyv = nullptr; // classItem
biw* jyy = nullptr; // info
if(!(((jys)->pj) != (0LL))){
throw 0xE9170000U;
}
if((eha)((((jys)->heh)->pf))){
(jyv) = ((jys)->hik);
if(!(!eqAddr_((jyv), (nullptr)))){
throw 0xE9170000U;
}
(bkw)((as_<ul>(classTable_, ((((jys)->heh)->pf)->nj), 22)));
if((((jyv)->azl)->lw) == (2LL)){
(jyy) = ((biv)(((as_<bgi>(classTable_, ((jyv)->azl), 38))->bgk)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(fhu)(((jys)->heh));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u002E'))->Cat(v<Array_<char16_t>*>(((jyy)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
else{
if(!((((jyv)->azl)->lw) == (256LL))){
throw 0xE9170000U;
}
(jyy) = ((biv)(((jyv)->azl)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((jyy)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
}
else{
if(!((((jys)->nj)->lw) == (2062LL))){
throw 0xE9170000U;
}
(ifr)((as_<gd>(classTable_, ((jys)->nj), 14)));
}
}
// buildExprValue
static void ifh(bvq* jzb /*ast*/){
if(!((((jzb)->pf)->lw) == (1027LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C')));
}
// buildExprValuePrim
static void ifj(bvp* jzc /*ast*/){
gc* jzd = nullptr; // type
int64_t jzk = 0;
(jzd) = ((jzc)->pf);
if(((bdg)((jzd))) || ((clb)((jzd)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<int64_t>((static_cast<int64_t>((jzc)->bvr)), (new Array_<int64_t>(1, (0LL))))));
}
else if((esc)((jzd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint16_t>((static_cast<uint16_t>((jzc)->bvr)), (new Array_<int64_t>(1, (0LL))))));
}
else if((ghb)((jzd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), ((((jzc)->bvr) == (0x0000000000000000ULL)) ? (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')) : (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))));
}
else if(((jzd)->lw) == (1025LL)){
switch((as_<cam>(classTable_, (jzd), 78))->can){
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint8_t>((static_cast<uint8_t>((jzc)->bvr)), (new Array_<int64_t>(1, (0LL))))));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint16_t>((static_cast<uint16_t>((jzc)->bvr)), (new Array_<int64_t>(1, (0LL))))));
break;
case 4LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint32_t>((static_cast<uint32_t>((jzc)->bvr)), (new Array_<int64_t>(1, (0LL))))));
break;
case 8LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint64_t>(((jzc)->bvr), (new Array_<int64_t>(1, (0LL))))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!(false)){
throw 0xE9170000U;
}
}
}
// buildExprValueStr
static void ifl(ecz* jzr /*ast*/){
Array_<char16_t>* jzs = nullptr; // value
Array_<char16_t>* jzt = nullptr; // s
int64_t jzx = 0;
int64_t jzy = 0;
(jzs) = ((jzr)->glw);
(jzt) = (new Array_<char16_t>(4, u'\u007B', u'\u0053', u'\u003A', u'\u0022'));
for(jzx = (0LL), jzy = (((jzs)->Len()) - (1LL)); jzx <= jzy; jzx += (1LL)){
(jzt) = ((jzt)->Cat((dbc)(((jzs)->At(jzx)))));
}
(jzt) = ((jzt)->Cat(new Array_<char16_t>(2, u'\u0022', u'\u007D')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (jzt));
}
// buildExprValueFloat
static void ifn(edf* kab /*ast*/){
Array_<char16_t>* kac = nullptr; // value
(kac) = (v<double>(((kab)->ggy), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((kac), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0049', u'\u006E', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0079')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (kac));
}
}
// buildExprValueArray
static void ifp(edi* kag /*ast*/){
bool kah = false; // first
List_<gd*>* kai = nullptr; // items
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u005B')));
(kah) = (true);
(kai) = ((kag)->heq);
awe<List_<gd*>*>((kai), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((kai), (new Array_<int64_t>(1, (0LL)))))){
if(kah){
(kah) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(fhu)((awi<List_<gd*>*, gd*>((kai), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((kai), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u005D')));
}
// buildExprRef
static void ifr(gd* kan /*ast*/){
fx* kao = nullptr; // ast2
biw* kap = nullptr; // info
gb* kat = nullptr; // arg
int64_t kav = 0;
(kao) = ((kan)->nj);
(kap) = ((biv)((kao)));
if(((kao)->lw) == (256LL)){
uk<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL))), (as_<fw>(classTable_, (kao), 8)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), ((kap)->bjm));
}
else{
if(!(((kao)->lw) == (7LL))){
throw 0xE9170000U;
}
(kat) = (as_<gb>(classTable_, (kao), 10));
switch((kat)->qk){
case 1LL:
if(!((kap)->biy)){
((kap)->biy) = (true);
uh<List_<gb*>*, gb*>((bn), (new Array_<int64_t>(1, (0LL))), (kat));
}
break;
case 2LL:
break;
case 3LL:
if(!((kap)->biy)){
((kap)->biy) = (true);
uh<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), (kat));
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if((kat)->ql){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((kap)->bjm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002E', u'\u0024'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), ((kap)->bjm));
}
}
}
// _findBin
template<typename T_, typename C_> static int64_t ign(T_ kbh /*me_*/, Array_<int64_t>* kbi /*type*/, C_ kbj /*item*/){
int64_t a_ = 0, b_ = kbh->L - 1;
while (a_ <= b_) {
int64_t c_ = (a_ + b_) / 2;
int64_t m_ = cmp_(kbj, kbh->B[c_]);
if(m_ < 0) b_ = c_ - 1;
else if(m_ > 0) a_ = c_ + 1;
else return c_;
}
return -1;
}
// _dtor
static void kbk(ihv* kbl){
((kbl)->ihw) = (nullptr);
((kbl)->ne) = (nullptr);
((kbl)->nf) = (nullptr);
((kbl)->ng) = (nullptr);
((kbl)->nh) = (nullptr);
((kbl)->ni) = (nullptr);
((kbl)->nj) = (nullptr);
((kbl)->nk) = (nullptr);
}
// _copy
static ihv* kbm(ihv* kbn){
ihv* kbo = nullptr;
(kbo) = (new ihv());
((kbo)->ihw) = (copy_((kbn)->ihw));
((kbo)->ne) = (copy_((kbn)->ne));
((kbo)->nf) = (copy_((kbn)->nf));
((kbo)->ng) = (copy_((kbn)->ng));
((kbo)->nh) = (copy_((kbn)->nh));
((kbo)->ni) = (copy_((kbn)->ni));
((kbo)->nj) = (copy_((kbn)->nj));
((kbo)->nk) = (copy_((kbn)->nk));
((kbo)->no) = ((kbn)->no);
((kbo)->lw) = ((kbn)->lw);
return as_<ihv>(classTable_, (kbo), 140);
}
// _toBin
static Array_<uint8_t>* kbp(ihv* kbq){
Array_<uint8_t>* kbr = nullptr;
(kbr) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kbr) = ((kbr)->Cat(toBin_((kbq)->ihw)));
(kbr) = ((kbr)->Cat(toBin_((kbq)->ne)));
(kbr) = ((kbr)->Cat(toBin_((kbq)->nf)));
(kbr) = ((kbr)->Cat(toBin_((kbq)->ng)));
(kbr) = ((kbr)->Cat(toBin_((kbq)->nh)));
(kbr) = ((kbr)->Cat(toBin_((kbq)->ni)));
(kbr) = ((kbr)->Cat(toBin_((kbq)->nj)));
(kbr) = ((kbr)->Cat(toBin_((kbq)->nk)));
(kbr) = ((kbr)->Cat(toBin_((kbq)->no)));
(kbr) = ((kbr)->Cat(toBin_((kbq)->lw)));
return kbr;
}
// _fromBin
static ihv* kcc(ihv* kcd, Array_<uint8_t>* kce, int64_t* kcf){
ihv* kcg = nullptr;
(kcg) = (new ihv());
((kcg)->ihw) = (fromBin_<fw*>((kce), (*kcf)));
((kcg)->ne) = (fromBin_<ga*>((kce), (*kcf)));
((kcg)->nf) = (fromBin_<Array_<char16_t>*>((kce), (*kcf)));
((kcg)->ng) = (fromBin_<fx*>((kce), (*kcf)));
((kcg)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kce), (*kcf)));
((kcg)->ni) = (fromBin_<Array_<char16_t>*>((kce), (*kcf)));
((kcg)->nj) = (fromBin_<fx*>((kce), (*kcf)));
((kcg)->nk) = (fromBin_<fy*>((kce), (*kcf)));
((kcg)->no) = (fromBin_<bool>((kce), (*kcf)));
((kcg)->lw) = (fromBin_<int64_t>((kce), (*kcf)));
return kcg;
}
// _dtor
static void kch(ihz* kci){
((kci)->iia) = (nullptr);
((kci)->ne) = (nullptr);
((kci)->nf) = (nullptr);
((kci)->ng) = (nullptr);
((kci)->nh) = (nullptr);
((kci)->ni) = (nullptr);
((kci)->nj) = (nullptr);
((kci)->nk) = (nullptr);
}
// _copy
static ihz* kcj(ihz* kck){
ihz* kcl = nullptr;
(kcl) = (new ihz());
((kcl)->iia) = (copy_((kck)->iia));
((kcl)->ne) = (copy_((kck)->ne));
((kcl)->nf) = (copy_((kck)->nf));
((kcl)->ng) = (copy_((kck)->ng));
((kcl)->nh) = (copy_((kck)->nh));
((kcl)->ni) = (copy_((kck)->ni));
((kcl)->nj) = (copy_((kck)->nj));
((kcl)->nk) = (copy_((kck)->nk));
((kcl)->no) = ((kck)->no);
((kcl)->lw) = ((kck)->lw);
return as_<ihz>(classTable_, (kcl), 142);
}
// _toBin
static Array_<uint8_t>* kcm(ihz* kcn){
Array_<uint8_t>* kco = nullptr;
(kco) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kco) = ((kco)->Cat(toBin_((kcn)->iia)));
(kco) = ((kco)->Cat(toBin_((kcn)->ne)));
(kco) = ((kco)->Cat(toBin_((kcn)->nf)));
(kco) = ((kco)->Cat(toBin_((kcn)->ng)));
(kco) = ((kco)->Cat(toBin_((kcn)->nh)));
(kco) = ((kco)->Cat(toBin_((kcn)->ni)));
(kco) = ((kco)->Cat(toBin_((kcn)->nj)));
(kco) = ((kco)->Cat(toBin_((kcn)->nk)));
(kco) = ((kco)->Cat(toBin_((kcn)->no)));
(kco) = ((kco)->Cat(toBin_((kcn)->lw)));
return kco;
}
// _fromBin
static ihz* kcz(ihz* kda, Array_<uint8_t>* kdb, int64_t* kdc){
ihz* kdd = nullptr;
(kdd) = (new ihz());
((kdd)->iia) = (fromBin_<bqp*>((kdb), (*kdc)));
((kdd)->ne) = (fromBin_<ga*>((kdb), (*kdc)));
((kdd)->nf) = (fromBin_<Array_<char16_t>*>((kdb), (*kdc)));
((kdd)->ng) = (fromBin_<fx*>((kdb), (*kdc)));
((kdd)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kdb), (*kdc)));
((kdd)->ni) = (fromBin_<Array_<char16_t>*>((kdb), (*kdc)));
((kdd)->nj) = (fromBin_<fx*>((kdb), (*kdc)));
((kdd)->nk) = (fromBin_<fy*>((kdb), (*kdc)));
((kdd)->no) = (fromBin_<bool>((kdb), (*kdc)));
((kdd)->lw) = (fromBin_<int64_t>((kdb), (*kdc)));
return kdd;
}
// _dtor
static void kde(iic* kdf){
((kdf)->iid) = (nullptr);
((kdf)->ne) = (nullptr);
((kdf)->nf) = (nullptr);
((kdf)->ng) = (nullptr);
((kdf)->nh) = (nullptr);
((kdf)->ni) = (nullptr);
((kdf)->nj) = (nullptr);
((kdf)->nk) = (nullptr);
}
// _copy
static iic* kdg(iic* kdh){
iic* kdi = nullptr;
(kdi) = (new iic());
((kdi)->iid) = (copy_((kdh)->iid));
((kdi)->ne) = (copy_((kdh)->ne));
((kdi)->nf) = (copy_((kdh)->nf));
((kdi)->ng) = (copy_((kdh)->ng));
((kdi)->nh) = (copy_((kdh)->nh));
((kdi)->ni) = (copy_((kdh)->ni));
((kdi)->nj) = (copy_((kdh)->nj));
((kdi)->nk) = (copy_((kdh)->nk));
((kdi)->no) = ((kdh)->no);
((kdi)->lw) = ((kdh)->lw);
return as_<iic>(classTable_, (kdi), 144);
}
// _toBin
static Array_<uint8_t>* kdj(iic* kdk){
Array_<uint8_t>* kdl = nullptr;
(kdl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kdl) = ((kdl)->Cat(toBin_((kdk)->iid)));
(kdl) = ((kdl)->Cat(toBin_((kdk)->ne)));
(kdl) = ((kdl)->Cat(toBin_((kdk)->nf)));
(kdl) = ((kdl)->Cat(toBin_((kdk)->ng)));
(kdl) = ((kdl)->Cat(toBin_((kdk)->nh)));
(kdl) = ((kdl)->Cat(toBin_((kdk)->ni)));
(kdl) = ((kdl)->Cat(toBin_((kdk)->nj)));
(kdl) = ((kdl)->Cat(toBin_((kdk)->nk)));
(kdl) = ((kdl)->Cat(toBin_((kdk)->no)));
(kdl) = ((kdl)->Cat(toBin_((kdk)->lw)));
return kdl;
}
// _fromBin
static iic* kdw(iic* kdx, Array_<uint8_t>* kdy, int64_t* kdz){
iic* kea = nullptr;
(kea) = (new iic());
((kea)->iid) = (fromBin_<bqs*>((kdy), (*kdz)));
((kea)->ne) = (fromBin_<ga*>((kdy), (*kdz)));
((kea)->nf) = (fromBin_<Array_<char16_t>*>((kdy), (*kdz)));
((kea)->ng) = (fromBin_<fx*>((kdy), (*kdz)));
((kea)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kdy), (*kdz)));
((kea)->ni) = (fromBin_<Array_<char16_t>*>((kdy), (*kdz)));
((kea)->nj) = (fromBin_<fx*>((kdy), (*kdz)));
((kea)->nk) = (fromBin_<fy*>((kdy), (*kdz)));
((kea)->no) = (fromBin_<bool>((kdy), (*kdz)));
((kea)->lw) = (fromBin_<int64_t>((kdy), (*kdz)));
return kea;
}
// _dtor
static void keb(iif* kec){
((kec)->iig) = (nullptr);
((kec)->ne) = (nullptr);
((kec)->nf) = (nullptr);
((kec)->ng) = (nullptr);
((kec)->nh) = (nullptr);
((kec)->ni) = (nullptr);
((kec)->nj) = (nullptr);
((kec)->nk) = (nullptr);
}
// _copy
static iif* ked(iif* kee){
iif* kef = nullptr;
(kef) = (new iif());
((kef)->iig) = (copy_((kee)->iig));
((kef)->ne) = (copy_((kee)->ne));
((kef)->nf) = (copy_((kee)->nf));
((kef)->ng) = (copy_((kee)->ng));
((kef)->nh) = (copy_((kee)->nh));
((kef)->ni) = (copy_((kee)->ni));
((kef)->nj) = (copy_((kee)->nj));
((kef)->nk) = (copy_((kee)->nk));
((kef)->no) = ((kee)->no);
((kef)->lw) = ((kee)->lw);
return as_<iif>(classTable_, (kef), 146);
}
// _toBin
static Array_<uint8_t>* keg(iif* keh){
Array_<uint8_t>* kei = nullptr;
(kei) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kei) = ((kei)->Cat(toBin_((keh)->iig)));
(kei) = ((kei)->Cat(toBin_((keh)->ne)));
(kei) = ((kei)->Cat(toBin_((keh)->nf)));
(kei) = ((kei)->Cat(toBin_((keh)->ng)));
(kei) = ((kei)->Cat(toBin_((keh)->nh)));
(kei) = ((kei)->Cat(toBin_((keh)->ni)));
(kei) = ((kei)->Cat(toBin_((keh)->nj)));
(kei) = ((kei)->Cat(toBin_((keh)->nk)));
(kei) = ((kei)->Cat(toBin_((keh)->no)));
(kei) = ((kei)->Cat(toBin_((keh)->lw)));
return kei;
}
// _fromBin
static iif* ket(iif* keu, Array_<uint8_t>* kev, int64_t* kew){
iif* kex = nullptr;
(kex) = (new iif());
((kex)->iig) = (fromBin_<ul*>((kev), (*kew)));
((kex)->ne) = (fromBin_<ga*>((kev), (*kew)));
((kex)->nf) = (fromBin_<Array_<char16_t>*>((kev), (*kew)));
((kex)->ng) = (fromBin_<fx*>((kev), (*kew)));
((kex)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kev), (*kew)));
((kex)->ni) = (fromBin_<Array_<char16_t>*>((kev), (*kew)));
((kex)->nj) = (fromBin_<fx*>((kev), (*kew)));
((kex)->nk) = (fromBin_<fy*>((kev), (*kew)));
((kex)->no) = (fromBin_<bool>((kev), (*kew)));
((kex)->lw) = (fromBin_<int64_t>((kev), (*kew)));
return kex;
}
// _dtor
static void key(iii* kez){
((kez)->iij) = (nullptr);
((kez)->ne) = (nullptr);
((kez)->nf) = (nullptr);
((kez)->ng) = (nullptr);
((kez)->nh) = (nullptr);
((kez)->ni) = (nullptr);
((kez)->nj) = (nullptr);
((kez)->nk) = (nullptr);
}
// _copy
static iii* kfa(iii* kfb){
iii* kfc = nullptr;
(kfc) = (new iii());
((kfc)->iij) = (copy_((kfb)->iij));
((kfc)->ne) = (copy_((kfb)->ne));
((kfc)->nf) = (copy_((kfb)->nf));
((kfc)->ng) = (copy_((kfb)->ng));
((kfc)->nh) = (copy_((kfb)->nh));
((kfc)->ni) = (copy_((kfb)->ni));
((kfc)->nj) = (copy_((kfb)->nj));
((kfc)->nk) = (copy_((kfb)->nk));
((kfc)->no) = ((kfb)->no);
((kfc)->lw) = ((kfb)->lw);
return as_<iii>(classTable_, (kfc), 148);
}
// _toBin
static Array_<uint8_t>* kfd(iii* kfe){
Array_<uint8_t>* kff = nullptr;
(kff) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kff) = ((kff)->Cat(toBin_((kfe)->iij)));
(kff) = ((kff)->Cat(toBin_((kfe)->ne)));
(kff) = ((kff)->Cat(toBin_((kfe)->nf)));
(kff) = ((kff)->Cat(toBin_((kfe)->ng)));
(kff) = ((kff)->Cat(toBin_((kfe)->nh)));
(kff) = ((kff)->Cat(toBin_((kfe)->ni)));
(kff) = ((kff)->Cat(toBin_((kfe)->nj)));
(kff) = ((kff)->Cat(toBin_((kfe)->nk)));
(kff) = ((kff)->Cat(toBin_((kfe)->no)));
(kff) = ((kff)->Cat(toBin_((kfe)->lw)));
return kff;
}
// _fromBin
static iii* kfq(iii* kfr, Array_<uint8_t>* kfs, int64_t* kft){
iii* kfu = nullptr;
(kfu) = (new iii());
((kfu)->iij) = (fromBin_<bqy*>((kfs), (*kft)));
((kfu)->ne) = (fromBin_<ga*>((kfs), (*kft)));
((kfu)->nf) = (fromBin_<Array_<char16_t>*>((kfs), (*kft)));
((kfu)->ng) = (fromBin_<fx*>((kfs), (*kft)));
((kfu)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kfs), (*kft)));
((kfu)->ni) = (fromBin_<Array_<char16_t>*>((kfs), (*kft)));
((kfu)->nj) = (fromBin_<fx*>((kfs), (*kft)));
((kfu)->nk) = (fromBin_<fy*>((kfs), (*kft)));
((kfu)->no) = (fromBin_<bool>((kfs), (*kft)));
((kfu)->lw) = (fromBin_<int64_t>((kfs), (*kft)));
return kfu;
}
// pushDummyScope
static void iil(fx* kfv /*ast*/){
fx* kfw = nullptr; // dummy
(kfw) = (new fx());
(bpl)((kfw), (0LL), (nullptr), (nullptr), (true));
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fnx<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))))->nh), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u0024'))->Cat(v<int64_t>((avh), (new Array_<int64_t>(1, (0LL)))))), (kfw));
(avh) = ((avh) + (1LL));
((kfw)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bpn<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (kfw));
((kfv)->ng) = (kfw);
}
// obtainBlockName
static void iim(fx* kfy /*ast*/){
char16_t kfz = 0; // c
(kfz) = ((bpo)());
if((kfz) != (u'\u0028')){
(ave) = (kfz);
((kfy)->nf) = ((bqf)((true), (false)));
(dhc)((kfy), (true));
(dgy)((u'\u0028'), (true));
}
else{
((kfy)->nf) = (new Array_<char16_t>(1, u'\u0024'));
}
}
// parseDummyBlock
static btw* iio(ge** kgd /*outStat*/, int64_t* kge /*outTypeId*/, int64_t kgf /*typeId*/, fx* kgg /*block_*/){
btw* kgh = nullptr; // ast
ge* kgl = nullptr; // stat
bool kgr = false; // endFlag
int64_t kgt = 0;
int64_t kgw = 0;
int64_t kha = 0;
int64_t khe = 0;
int64_t khj = 0;
int64_t khn = 0;
int64_t khs = 0;
int64_t khw = 0;
int64_t kia = 0;
(kgh) = (new btw());
(bpl)((kgh), (66052LL), ((ddp)()), (nullptr), (false));
((kgh)->buf) = (nullptr);
((kgh)->bui) = (new List_<ge*>());
(iil)((kgh));
((kgh)->nf) = (new Array_<char16_t>(1, u'\u0024'));
while(true){
(kgl) = ((dif)((kgg)));
if(eqAddr_((kgl), (nullptr))){
if(avg){
(*kgd) = (nullptr);
(*kge) = (513LL);
break;
}
else{
continue;
}
}
(kgr) = (false);
switch(kgf){
case 66049LL:
switch((kgl)->lw){
case 520LL:
case 521LL:
case 513LL:
(kgr) = (true);
break;
}
break;
case 520LL:
switch((kgl)->lw){
case 520LL:
case 521LL:
case 513LL:
(kgr) = (true);
break;
}
break;
case 521LL:
switch((kgl)->lw){
case 520LL:
case 521LL:
(ad)((65563LL), ((ddp)()), (nullptr));
continue;
break;
case 513LL:
(kgr) = (true);
break;
}
break;
case 522LL:
switch((kgl)->lw){
case 522LL:
case 523LL:
case 513LL:
(kgr) = (true);
break;
}
break;
case 523LL:
switch((kgl)->lw){
case 522LL:
case 523LL:
(ad)((65564LL), ((ddp)()), (nullptr));
continue;
break;
case 513LL:
(kgr) = (true);
break;
}
break;
case 66051LL:
switch((kgl)->lw){
case 524LL:
case 525LL:
(kgr) = (true);
break;
}
break;
case 524LL:
switch((kgl)->lw){
case 524LL:
case 525LL:
case 520LL:
(kgr) = (true);
break;
}
break;
case 525LL:
switch((kgl)->lw){
case 524LL:
case 525LL:
(ad)((65565LL), ((ddp)()), (nullptr));
continue;
break;
case 513LL:
(kgr) = (true);
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(kgr){
(*kgd) = (kgl);
(*kge) = ((kgl)->lw);
break;
}
uh<List_<ge*>*, ge*>(((kgh)->bui), (new Array_<int64_t>(1, (0LL))), (kgl));
}
brh<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return kgh;
}
// makeBlockVar
static gb* ijj(ga* kig /*pos*/){
gb* kih = nullptr; // arg
(kih) = (new gb());
(bpl)((kih), (7LL), (kig), (nullptr), (false));
((kih)->qk) = (3LL);
((kih)->ql) = (false);
((kih)->qf) = (nullptr);
((kih)->qg) = (nullptr);
return kih;
}
// makePrimValue
static bvp* imi(ga* kii /*pos*/, int64_t kij /*kind*/, uint64_t kik /*value*/){
bvp* kil = nullptr; // expr
bud* kin = nullptr; // type
(kil) = (new bvp());
(dni)((kil), (67585LL), (kii));
(kin) = (new bud());
(bpl)((kin), (1026LL), (kii), (nullptr), (false));
((kin)->bue) = (kij);
((kil)->pf) = (kin);
((kil)->bvr) = (kik);
return kil;
}
// parseExprOr
static gd* iqb(){
gd* kio = nullptr; // ast
int64_t kit = 0; // row
int64_t kiu = 0; // col
char16_t kiv = 0; // c
byb* kiy = nullptr; // ast2
(kio) = ((kip)());
while(true){
(kit) = (avc);
(kiu) = (avd);
(kiv) = ((bpo)());
if((kiv) == (u'\u007C')){
(kiy) = (new byb());
(dni)((kiy), (2050LL), ((bpm)((bf), (kit), (kiu))));
((kiy)->byc) = (8LL);
((kiy)->byf) = (kio);
((kiy)->byg) = ((kip)());
(kio) = (kiy);
}
else{
(ave) = (kiv);
break;
}
}
return kio;
}
// addSpecialFunc
static fw* iur(ul* kja /*class_*/, Array_<char16_t>* kjb /*name*/){
fw* kjc = nullptr; // ast
gb* kje = nullptr; // me_
dhf* kjg = nullptr; // type
um* kji = nullptr; // item
ul* kjj = nullptr; // ptr
List_<um*>* kjl = nullptr; // items
um* kjp = nullptr; // item2
(kjc) = (new fw());
(btr)((kjc), (256LL), ((kja)->ne));
((kjc)->nf) = (kjb);
((kjc)->sm) = (0LL);
((kjc)->sf) = (new List_<Array_<char16_t>*>());
((kjc)->sg) = (new List_<gb*>());
((kjc)->sh) = (nullptr);
((kjc)->si) = (new List_<ge*>());
(kje) = (new gb());
(btr)((kje), (7LL), ((kja)->ne));
((kje)->qk) = (2LL);
((kje)->ql) = (false);
((kje)->qg) = (nullptr);
(kjg) = (new dhf());
(btr)((kjg), (66565LL), ((kja)->ne));
((kjg)->nj) = (kja);
((kje)->qf) = (kjg);
uh<List_<gb*>*, gb*>(((kjc)->sg), (new Array_<int64_t>(1, (0LL))), (kje));
(kji) = (new um());
((kji)->azr) = (true);
((kji)->azl) = (kjc);
((kji)->azm) = (nullptr);
(kjj) = (as_<ul>(classTable_, ((kja)->nj), 22));
while(!eqAddr_(((kjj)->nj), (nullptr))){
(kjj) = (as_<ul>(classTable_, ((kjj)->nj), 22));
}
(kjl) = ((kjj)->bag);
awe<List_<um*>*>((kjl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((kjl), (new Array_<int64_t>(1, (0LL)))))){
(kjp) = (awi<List_<um*>*, um*>((kjl), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((((kjp)->azl)->nf), (kjb)) == 0){
((kji)->azm) = (kjp);
break;
}
ays<List_<um*>*>((kjl), (new Array_<int64_t>(1, (0LL))));
}
if(!(!eqAddr_(((kji)->azm), (nullptr)))){
throw 0xE9170000U;
}
((kji)->azq) = (((kji)->azm)->azq);
uh<List_<um*>*, um*>(((kja)->bag), (new Array_<int64_t>(1, (0LL))), (kji));
return kjc;
}
// makeMeDot
static ecs* iwc(ul* kjs /*class_*/, gb* kjt /*arg*/, Array_<char16_t>* kju /*name*/){
ecs* kjv = nullptr; // ast
gd* kjx = nullptr; // me_
dhf* kjz = nullptr; // type
(kjv) = (new ecs());
(buz)((kjv), (2059LL), ((kjs)->ne));
((kjv)->hhx) = (kju);
((kjv)->hik) = (nullptr);
(kjx) = (new gd());
(buz)((kjx), (2062LL), ((kjs)->ne));
((kjx)->ni) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
((kjx)->nj) = (kjt);
(kjz) = (new dhf());
(btr)((kjz), (66565LL), ((kjs)->ne));
((kjz)->nj) = (kjs);
((kjx)->pf) = (kjz);
((kjv)->heh) = (kjx);
return kjv;
}
// makeTypeId
static Array_<char16_t>* jqs(gc* kka /*type*/){
Array_<char16_t>* kkb = nullptr; // result
bool kkc = false; // first
List_<int64_t>* kkd = nullptr; // items
(kkb) = (new Array_<char16_t>(1, u'\u005B'));
(kkc) = (true);
(kkd) = ((kke)((kka)));
awe<List_<int64_t>*>((kkd), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<int64_t>*>((kkd), (new Array_<int64_t>(1, (0LL)))))){
if(kkc){
(kkc) = (false);
}
else{
(kkb) = ((kkb)->Cat(new Array_<char16_t>(1, u'\u002C')));
}
(kkb) = ((kkb)->Cat(v<int64_t>((awi<List_<int64_t>*, int64_t>((kkd), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))))));
ays<List_<int64_t>*>((kkd), (new Array_<int64_t>(1, (0LL))));
}
(kkb) = ((kkb)->Cat(new Array_<char16_t>(1, u'\u005D')));
return kkb;
}
// parseExprAnd
static gd* kip(){
gd* kkm = nullptr; // ast
int64_t kkr = 0; // row
int64_t kks = 0; // col
char16_t kkt = 0; // c
byb* kkw = nullptr; // ast2
(kkm) = ((kkn)());
while(true){
(kkr) = (avc);
(kks) = (avd);
(kkt) = ((bpo)());
if((kkt) == (u'\u0026')){
(kkw) = (new byb());
(dni)((kkw), (2050LL), ((bpm)((bf), (kkr), (kks))));
((kkw)->byc) = (9LL);
((kkw)->byf) = (kkm);
((kkw)->byg) = ((kkn)());
(kkm) = (kkw);
}
else{
(ave) = (kkt);
break;
}
}
return kkm;
}
// getTypeId
static List_<int64_t>* kke(gc* kky /*type*/){
List_<int64_t>* kkz = nullptr; // result
(kkz) = (new List_<int64_t>());
(kla)((kky), (kkz));
return kkz;
}
// parseExprCmp
static gd* kkn(){
gd* klb = nullptr; // ast
int64_t klg = 0; // row
int64_t klh = 0; // col
char16_t kli = 0; // c
char16_t klk = 0;
char16_t kln = 0;
byb* klp = nullptr; // ast2
char16_t kls = 0;
byb* klu = nullptr; // ast2
ece* klw = nullptr; // ast2
byb* kly = nullptr; // ast2
byb* kma = nullptr; // ast2
byb* kmc = nullptr; // ast2
char16_t kmi = 0;
byb* kmk = nullptr; // ast2
ece* kmm = nullptr; // ast2
byb* kmo = nullptr; // ast2
(klb) = ((klc)());
while(true){
(klg) = (avc);
(klh) = (avd);
(kli) = ((bpo)());
switch(kli){
case u'\u003C':
(kli) = ((brb)());
switch(kli){
case u'\u003D':
(klp) = (new byb());
(dni)((klp), (2050LL), ((bpm)((bf), (klg), (klh))));
((klp)->byc) = (12LL);
((klp)->byf) = (klb);
((klp)->byg) = ((klc)());
(klb) = (klp);
break;
case u'\u003E':
(kli) = ((brb)());
switch(kli){
case u'\u0026':
(klu) = (new byb());
(dni)((klu), (2050LL), ((bpm)((bf), (klg), (klh))));
((klu)->byc) = (17LL);
((klu)->byf) = (klb);
((klu)->byg) = ((klc)());
(klb) = (klu);
break;
case u'\u0024':
(klw) = (new ece());
(dni)((klw), (2054LL), ((bpm)((bf), (klg), (klh))));
((klw)->gwx) = (2LL);
((klw)->gwp) = (klb);
((klw)->gws) = ((dhy)());
(klb) = (klw);
break;
default:
(ave) = (kli);
(kly) = (new byb());
(dni)((kly), (2050LL), ((bpm)((bf), (klg), (klh))));
((kly)->byc) = (15LL);
((kly)->byf) = (klb);
((kly)->byg) = ((klc)());
(klb) = (kly);
break;
}
break;
default:
(ave) = (kli);
(kma) = (new byb());
(dni)((kma), (2050LL), ((bpm)((bf), (klg), (klh))));
((kma)->byc) = (10LL);
((kma)->byf) = (klb);
((kma)->byg) = ((klc)());
(klb) = (kma);
break;
}
break;
case u'\u003E':
(kmc) = (new byb());
(dni)((kmc), (2050LL), ((bpm)((bf), (klg), (klh))));
(kli) = ((brb)());
if((kli) == (u'\u003D')){
((kmc)->byc) = (13LL);
}
else{
(ave) = (kli);
((kmc)->byc) = (11LL);
}
((kmc)->byf) = (klb);
((kmc)->byg) = ((klc)());
(klb) = (kmc);
break;
case u'\u003D':
(kli) = ((brb)());
switch(kli){
case u'\u0026':
(kmk) = (new byb());
(dni)((kmk), (2050LL), ((bpm)((bf), (klg), (klh))));
((kmk)->byc) = (16LL);
((kmk)->byf) = (klb);
((kmk)->byg) = ((klc)());
(klb) = (kmk);
break;
case u'\u0024':
(kmm) = (new ece());
(dni)((kmm), (2054LL), ((bpm)((bf), (klg), (klh))));
((kmm)->gwx) = (1LL);
((kmm)->gwp) = (klb);
((kmm)->gws) = ((dhy)());
(klb) = (kmm);
break;
default:
(ave) = (kli);
(kmo) = (new byb());
(dni)((kmo), (2050LL), ((bpm)((bf), (klg), (klh))));
((kmo)->byc) = (14LL);
((kmo)->byf) = (klb);
((kmo)->byg) = ((klc)());
(klb) = (kmo);
break;
}
break;
default:
(ave) = (kli);
goto kle;
break;
}
}
kle:;
return klb;
}
// makeTypeIdRecursion
static void kla(gc* kmq /*type*/, List_<int64_t>* kmr /*output*/){
int64_t knd = 0;
int64_t kns = 0;
if((bdg)((kmq))){
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (0LL));
return;
}
if((ggl)((kmq))){
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (1LL));
return;
}
if((esc)((kmq))){
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (2LL));
return;
}
if((ghb)((kmq))){
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (3LL));
return;
}
if(((kmq)->lw) == (1025LL)){
switch((as_<cam>(classTable_, (kmq), 78))->can){
case 1LL:
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (4LL));
break;
case 2LL:
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (5LL));
break;
case 4LL:
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (6LL));
break;
case 8LL:
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (7LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return;
}
if(((kmq)->lw) == (66562LL)){
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (8LL));
return;
}
if((clb)((kmq))){
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (9LL));
return;
}
if(((kmq)->lw) == (66561LL)){
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (129LL));
(kla)(((as_<cai>(classTable_, (kmq), 76))->cak), (kmr));
return;
}
if(((kmq)->lw) == (66563LL)){
switch((as_<cbn>(classTable_, (kmq), 84))->cbq){
case 0LL:
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (130LL));
break;
case 1LL:
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (131LL));
break;
case 2LL:
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (132LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(kla)(((as_<cbn>(classTable_, (kmq), 84))->cbs), (kmr));
return;
}
if(((kmq)->lw) == (66564LL)){
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (133LL));
(kla)(((as_<cby>(classTable_, (kmq), 86))->cbz), (kmr));
(kla)(((as_<cby>(classTable_, (kmq), 86))->cca), (kmr));
return;
}
if(!((eha)((kmq)))){
throw 0xE9170000U;
}
uh<List_<int64_t>*, int64_t>((kmr), (new Array_<int64_t>(1, (0LL))), (134LL));
}
// parseExprCat
static gd* klc(){
gd* knz = nullptr; // ast
int64_t koe = 0; // row
int64_t kof = 0; // col
char16_t kog = 0; // c
byb* koj = nullptr; // ast2
(knz) = ((koa)());
while(true){
(koe) = (avc);
(kof) = (avd);
(kog) = ((bpo)());
if((kog) == (u'\u007E')){
(koj) = (new byb());
(dni)((koj), (2050LL), ((bpm)((bf), (koe), (kof))));
((koj)->byc) = (18LL);
((koj)->byf) = (knz);
((koj)->byg) = ((koa)());
(knz) = (koj);
}
else{
(ave) = (kog);
break;
}
}
return knz;
}
// parseExprAdd
static gd* koa(){
gd* kol = nullptr; // ast
int64_t koq = 0; // row
int64_t kor = 0; // col
char16_t kos = 0; // c
char16_t kou = 0;
byb* kow = nullptr; // ast2
byb* koy = nullptr; // ast2
(kol) = ((kom)());
while(true){
(koq) = (avc);
(kor) = (avd);
(kos) = ((bpo)());
switch(kos){
case u'\u002B':
(kow) = (new byb());
(dni)((kow), (2050LL), ((bpm)((bf), (koq), (kor))));
((kow)->byc) = (19LL);
((kow)->byf) = (kol);
((kow)->byg) = ((kom)());
(kol) = (kow);
break;
case u'\u002D':
(koy) = (new byb());
(dni)((koy), (2050LL), ((bpm)((bf), (koq), (kor))));
((koy)->byc) = (20LL);
((koy)->byf) = (kol);
((koy)->byg) = ((kom)());
(kol) = (koy);
break;
default:
(ave) = (kos);
goto koo;
break;
}
}
koo:;
return kol;
}
// parseExprMul
static gd* kom(){
gd* kpa = nullptr; // ast
int64_t kpf = 0; // row
int64_t kpg = 0; // col
char16_t kph = 0; // c
char16_t kpj = 0;
byb* kpl = nullptr; // ast2
byb* kpn = nullptr; // ast2
byb* kpp = nullptr; // ast2
(kpa) = ((kpb)());
while(true){
(kpf) = (avc);
(kpg) = (avd);
(kph) = ((bpo)());
switch(kph){
case u'\u002A':
(kpl) = (new byb());
(dni)((kpl), (2050LL), ((bpm)((bf), (kpf), (kpg))));
((kpl)->byc) = (21LL);
((kpl)->byf) = (kpa);
((kpl)->byg) = ((kpb)());
(kpa) = (kpl);
break;
case u'\u002F':
(kpn) = (new byb());
(dni)((kpn), (2050LL), ((bpm)((bf), (kpf), (kpg))));
((kpn)->byc) = (22LL);
((kpn)->byf) = (kpa);
((kpn)->byg) = ((kpb)());
(kpa) = (kpn);
break;
case u'\u0025':
(kpp) = (new byb());
(dni)((kpp), (2050LL), ((bpm)((bf), (kpf), (kpg))));
((kpp)->byc) = (23LL);
((kpp)->byf) = (kpa);
((kpp)->byg) = ((kpb)());
(kpa) = (kpp);
break;
default:
(ave) = (kph);
goto kpd;
break;
}
}
kpd:;
return kpa;
}
// parseExprPlus
static gd* kpb(){
gd* kpr = nullptr; // ast
int64_t kpv = 0; // row
int64_t kpw = 0; // col
char16_t kpx = 0; // c
char16_t kqb = 0;
ecb* kqd = nullptr; // ast2
ebq* kqo = nullptr; // ast2
eby* kqq = nullptr; // ast2
ebq* kqs = nullptr; // ast2
char16_t kqu = 0;
(kpr) = ((kps)());
if(!eqAddr_((kpr), (nullptr))){
return kpr;
}
(kpv) = (avc);
(kpw) = (avd);
(kpx) = ((bpo)());
if((kpx) == (u'\u0023')){
(kpx) = ((brb)());
switch(kpx){
case u'\u005B':
(kqd) = (new ecb());
(dni)((kqd), (2053LL), ((bpm)((bf), (kpv), (kpw))));
((kqd)->gus) = (new List_<gd*>());
while(true){
uh<List_<gd*>*, gd*>(((kqd)->gus), (new Array_<int64_t>(1, (0LL))), ((dnd)()));
(kpx) = ((bpo)());
if((kpx) == (u'\u0000')){
break;
}
if((kpx) == (u'\u005D')){
break;
}
if((kpx) != (u'\u002C')){
(dgt)((u'\u002C'), (kpx));
return nullptr;
}
}
((kqd)->gvb) = ((dhy)());
(kpr) = (kqd);
break;
case u'\u0023':
(kqo) = (new ebq());
(dni)((kqo), (2049LL), ((bpm)((bf), (kpv), (kpw))));
((kqo)->ggi) = (3LL);
((kqo)->ggc) = ((kpb)());
(kpr) = (kqo);
break;
default:
(ave) = (kpx);
(kqq) = (new eby());
(dni)((kqq), (2052LL), ((bpm)((bf), (kpv), (kpw))));
((kqq)->gth) = ((dhy)());
(kpr) = (kqq);
break;
}
}
else{
(kqs) = (new ebq());
(dni)((kqs), (2049LL), ((bpm)((bf), (kpv), (kpw))));
switch(kpx){
case u'\u002B':
((kqs)->ggi) = (0LL);
break;
case u'\u002D':
((kqs)->ggi) = (1LL);
break;
case u'\u0021':
((kqs)->ggi) = (2LL);
break;
case u'\u005E':
((kqs)->ggi) = (4LL);
break;
default:
(ad)((65569LL), ((kqs)->ne), (new Array_<Array_<char16_t>*>(1, ((ddq)((kpx))))));
(bra)((kpx));
return nullptr;
break;
}
((kqs)->ggc) = ((kpb)());
(kpr) = (kqs);
}
return kpr;
}
// parseExprPow
static gd* kps(){
gd* kra = nullptr; // ast
int64_t kre = 0; // row
int64_t krf = 0; // col
char16_t krg = 0; // c
byb* krj = nullptr; // ast2
(kra) = ((krb)());
if(eqAddr_((kra), (nullptr))){
return kra;
}
(kre) = (avc);
(krf) = (avd);
(krg) = ((bpo)());
if((krg) == (u'\u005E')){
(krj) = (new byb());
(dni)((krj), (2050LL), ((bpm)((bf), (kre), (krf))));
((krj)->byc) = (24LL);
((krj)->byf) = (kra);
((krj)->byg) = ((kpb)());
(kra) = (krj);
}
else{
(ave) = (krg);
}
return kra;
}
// parseExprCall
static gd* krb(){
gd* krl = nullptr; // ast
int64_t krs = 0; // row
int64_t krt = 0; // col
char16_t kru = 0; // c
char16_t krw = 0;
bux* kry = nullptr; // ast2
buy* kse = nullptr; // arg
gd* ksm = nullptr; // ast3
ecp* ksv = nullptr; // ast2
ecs* ksx = nullptr; // ast2
char16_t kta = 0;
ech* ktc = nullptr; // ast2
eck* kte = nullptr; // ast2
ece* ktg = nullptr; // ast2
(krl) = ((krm)());
if(eqAddr_((krl), (nullptr))){
return krl;
}
while(true){
(krs) = (avc);
(krt) = (avd);
(kru) = ((bpo)());
switch(kru){
case u'\u0028':
if(!(!eqAddr_((krl), (nullptr)))){
throw 0xE9170000U;
}
(kry) = (new bux());
(dni)((kry), (2057LL), ((bpm)((bf), (krs), (krt))));
((kry)->bvd) = (krl);
((kry)->bva) = (new List_<buy*>());
(kru) = ((bpo)());
if((kru) != (u'\u0029')){
(ave) = (kru);
while(true){
(kse) = (new buy());
((kse)->bwj) = (false);
(kru) = ((bpo)());
if((kru) == (u'\u0026')){
((kse)->bwi) = (true);
(kru) = ((bpo)());
if(((kru) == (u'\u002C')) || ((kru) == (u'\u0029'))){
((kse)->bwj) = (true);
}
}
else{
((kse)->bwi) = (false);
}
(ave) = (kru);
if((kse)->bwj){
(ksm) = (new gd());
(dni)((ksm), (2062LL), ((kry)->ne));
((ksm)->ni) = (new Array_<char16_t>(1, u'\u0024'));
((ksm)->nj) = ((ijj)(((ksm)->ne)));
((kse)->bwm) = (ksm);
}
else{
((kse)->bwm) = ((dnd)());
}
uh<List_<buy*>*, buy*>(((kry)->bva), (new Array_<int64_t>(1, (0LL))), (kse));
(kru) = ((bpo)());
if((kru) == (u'\u0000')){
break;
}
if((kru) == (u'\u0029')){
break;
}
if((kru) != (u'\u002C')){
(dgt)((u'\u002C'), (kru));
return nullptr;
}
}
}
(krl) = (kry);
break;
case u'\u005B':
if(!(!eqAddr_((krl), (nullptr)))){
throw 0xE9170000U;
}
(ksv) = (new ecp());
(dni)((ksv), (2058LL), ((bpm)((bf), (krs), (krt))));
((ksv)->hfz) = (krl);
((ksv)->hge) = ((dnd)());
(dgy)((u'\u005D'), (true));
(krl) = (ksv);
break;
case u'\u002E':
if(!(!eqAddr_((krl), (nullptr)))){
throw 0xE9170000U;
}
(ksx) = (new ecs());
(dni)((ksx), (2059LL), ((bpm)((bf), (krs), (krt))));
((ksx)->heh) = (krl);
((ksx)->hhx) = ((bqf)((true), (false)));
((ksx)->hik) = (nullptr);
(krl) = (ksx);
break;
case u'\u0024':
if(!(!eqAddr_((krl), (nullptr)))){
throw 0xE9170000U;
}
(kru) = ((brb)());
switch(kru){
case u'\u003E':
(ktc) = (new ech());
(dni)((ktc), (2055LL), ((bpm)((bf), (krs), (krt))));
((ktc)->haw) = (krl);
((ktc)->hbc) = ((dhy)());
(krl) = (ktc);
break;
case u'\u003C':
(kte) = (new eck());
(dni)((kte), (2056LL), ((bpm)((bf), (krs), (krt))));
((kte)->hch) = (krl);
((kte)->hcm) = ((dhy)());
((kte)->hcn) = ((imi)(((kte)->ne), (0LL), (0x0000000000000000ULL)));
(krl) = (kte);
break;
default:
(ave) = (kru);
(ktg) = (new ece());
(dni)((ktg), (2054LL), ((bpm)((bf), (krs), (krt))));
((ktg)->gwx) = (0LL);
((ktg)->gwp) = (krl);
((ktg)->gws) = ((dhy)());
(krl) = (ktg);
break;
}
break;
default:
(ave) = (kru);
goto krq;
break;
}
}
krq:;
return krl;
}
// parseExprValue
static gd* krm(){
int64_t kti = 0; // row
int64_t ktj = 0; // col
char16_t ktk = 0; // c
ga* ktl = nullptr; // pos
char16_t ktn = 0;
Array_<char16_t>* ktp = nullptr; // buf
int64_t ktq = 0; // len
bool ktr = false; // esc
byb* kub = nullptr; // cat
byb* kud = nullptr; // cat2
bux* kug = nullptr; // call
ecs* kui = nullptr; // dot
char16_t kuv = 0; // buf
bool kuw = false; // set
bool kux = false; // esc
gd* kvq = nullptr; // ast
edi* kvu = nullptr; // ast
gd* kwa = nullptr; // expr
Array_<char16_t>* kwk = nullptr; // id
edc* kwl = nullptr; // expr
kwo* kwn = nullptr; // type
Array_<char16_t>* kwv = nullptr; // id
Array_<char16_t>* kwx = nullptr;
bvq* kxd = nullptr; // ast
ehf* kxf = nullptr; // type
gd* kxj = nullptr; // ast
(kti) = (avc);
(ktj) = (avd);
(ktk) = ((bpo)());
(ktl) = ((bpm)((bf), (kti), (ktj)));
switch(ktk){
case u'\u0022':
(ktp) = (newArray_<char16_t, Array_<char16_t>*>(1, (1024LL)));
(ktq) = (0LL);
(ktr) = (false);
while(true){
(ktk) = ((fzi)());
if((ktk) == (u'\u0000')){
(ad)((65573LL), (ktl), (nullptr));
return nullptr;
}
if(ktr){
if((ktk) == (u'\u007B')){
(kub) = (new byb());
(dni)((kub), (2050LL), (ktl));
((kub)->byc) = (18LL);
(kud) = (new byb());
(dni)((kud), (2050LL), (ktl));
((kud)->byc) = (18LL);
((kud)->byf) = ((kue)((ktl), (auw<Array_<char16_t>*>((ktp), (new Array_<int64_t>(1, (0LL))), (0LL), (ktq)))));
(kug) = (new bux());
(dni)((kug), (2057LL), (ktl));
((kug)->bva) = (new List_<buy*>());
(kui) = (new ecs());
(dni)((kui), (2059LL), (ktl));
((kui)->heh) = ((dnd)());
((kui)->hhx) = (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072'));
((kui)->hik) = (nullptr);
((kug)->bvd) = (kui);
((kud)->byg) = (kug);
(dgy)((u'\u007D'), (false));
((kub)->byf) = (kud);
(ave) = (u'\u0022');
((kub)->byg) = ((krm)());
return kub;
}
if((ktq) == (1024LL)){
(ad)((65570LL), (ktl), (new Array_<Array_<char16_t>*>(1, (ktp))));
(bra)((ktk));
return nullptr;
}
((ktp)->At(ktq)) = ((kul)((ktk)));
(ktq) = ((ktq) + (1LL));
(ktr) = (false);
continue;
}
if((ktk) == (u'\u0022')){
break;
}
if((ktk) == (u'\u005C')){
(ktr) = (true);
continue;
}
if((ktq) == (1024LL)){
(ad)((65570LL), (ktl), (new Array_<Array_<char16_t>*>(1, (ktp))));
(bra)((ktk));
return nullptr;
}
((ktp)->At(ktq)) = (ktk);
(ktq) = ((ktq) + (1LL));
}
return (kue)((ktl), (auw<Array_<char16_t>*>((ktp), (new Array_<int64_t>(1, (0LL))), (0LL), (ktq))));
break;
case u'\u0027':
(kuv) = (u'\u0000');
(kuw) = (false);
(kux) = (false);
while(true){
(ktk) = ((fzi)());
if((ktk) == (u'\u0000')){
(ad)((65573LL), (ktl), (nullptr));
return nullptr;
}
if(kux){
if(kuw){
(ad)((65574LL), (ktl), (new Array_<Array_<char16_t>*>(1, ((ddq)((kuv))))));
(bra)((ktk));
return nullptr;
}
(kuv) = ((kul)((ktk)));
(kuw) = (true);
(kux) = (false);
continue;
}
if((ktk) == (u'\u0027')){
break;
}
if((ktk) == (u'\u005C')){
(kux) = (true);
continue;
}
if(kuw){
(ad)((65574LL), (ktl), (new Array_<Array_<char16_t>*>(1, ((ddq)((kuv))))));
(bra)((ktk));
return nullptr;
}
(kuv) = (ktk);
(kuw) = (true);
}
if(!(kuw)){
(ad)((65575LL), (ktl), (nullptr));
(bra)((ktk));
return nullptr;
}
return (imi)((ktl), (2LL), (static_cast<uint64_t>(kuv)));
break;
case u'\u0028':
(kvq) = ((dnd)());
(ktk) = ((bpo)());
if((ktk) != (u'\u0029')){
(ad)((65576LL), (ktl), (nullptr));
(bra)((ktk));
return nullptr;
}
return kvq;
break;
case u'\u005B':
(kvu) = (new edi());
(dni)((kvu), (2060LL), (ktl));
((kvu)->heq) = (new List_<gd*>());
(ktk) = ((bpo)());
if((ktk) != (u'\u005D')){
(ave) = (ktk);
while(true){
(kwa) = ((dnd)());
if(!eqAddr_((kwa), (nullptr))){
uh<List_<gd*>*, gd*>(((kvu)->heq), (new Array_<int64_t>(1, (0LL))), (kwa));
}
(ktk) = ((bpo)());
if((ktk) == (u'\u0000')){
break;
}
if((ktk) == (u'\u005D')){
break;
}
if((ktk) != (u'\u002C')){
(dgt)((u'\u002C'), (ktk));
return nullptr;
}
}
}
return kvu;
break;
case u'\u0025':
(kwk) = ((bqf)((false), (false)));
(kwl) = (new edc());
(dni)((kwl), (67587LL), (ktl));
(kwn) = (new kwo());
(bpl)((kwn), (1028LL), (ktl), (nullptr), (false));
((kwl)->pf) = (kwn);
((kwl)->gki) = (kwk);
return kwl;
break;
default:
if(((u'\u0030') <= (ktk)) && ((ktk) <= (u'\u0039'))){
return (kws)((kti), (ktj), (ktk));
}
if(((((((u'\u0061') <= (ktk)) && ((ktk) <= (u'\u007A'))) || (((u'\u0041') <= (ktk)) && ((ktk) <= (u'\u005A')))) || ((ktk) == (u'\u005F'))) || ((ktk) == (u'\u0040'))) || ((ktk) == (u'\u005C'))){
(ave) = (ktk);
(kwv) = ((bqf)((true), (true)));
kwx = kwv;
if(cmp_(kwx, (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065'))) == 0){
return (imi)((ktl), (3LL), (0x0000000000000000ULL));
}
else if(cmp_(kwx, (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))) == 0){
return (imi)((ktl), (3LL), (0x0000000000000001ULL));
}
else if(cmp_(kwx, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066'))) == 0){
return (kxb)((ktl), (std::numeric_limits<double>::infinity()));
}
else if(cmp_(kwx, (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C'))) == 0){
(kxd) = (new bvq());
(dni)((kxd), (67584LL), (ktl));
(kxf) = (new ehf());
(bpl)((kxf), (1027LL), (ktl), (nullptr), (false));
((kxd)->pf) = (kxf);
return kxd;
}
else if(cmp_(kwx, (new Array_<char16_t>(3, u'\u0064', u'\u0062', u'\u0067'))) == 0){
return (imi)((ktl), (3LL), ((ct) ? (0x0000000000000000ULL) : (0x0000000000000001ULL)));
}
else if(cmp_(kwx, (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0076'))) == 0){
return (imi)((ktl), (0LL), (static_cast<uint64_t>(ec)));
}
else{(kxj) = (new gd());
(dni)((kxj), (2062LL), (ktl));
(dgx)((kxj), (kwv));
return kxj;
}
}
break;
}
(ave) = (ktk);
return nullptr;
}
// makeStrValue
static ecz* kue(ga* kxk /*pos*/, Array_<char16_t>* kxl /*value*/){
ecz* kxm = nullptr; // expr
cai* kxo = nullptr; // type
bud* kxq = nullptr; // type2
(kxm) = (new ecz());
(dni)((kxm), (67586LL), (kxk));
(kxo) = (new cai());
(bpl)((kxo), (66561LL), (kxk), (nullptr), (false));
(kxq) = (new bud());
(bpl)((kxq), (1026LL), (kxk), (nullptr), (false));
((kxq)->bue) = (2LL);
((kxo)->cak) = (kxq);
((kxm)->pf) = (kxo);
((kxm)->glw) = (kxl);
return kxm;
}
// escChar
static char16_t kul(char16_t kxr /*c*/){
char16_t kxt = 0;
Array_<char16_t>* kxz = nullptr; // buf
int64_t kyd = 0;
bool kyh = false;
int64_t kye = 0;
switch(kxr){
case u'\u0022':
case u'\u0027':
case u'\u005C':
return kxr;
break;
case u'\u0030':
return u'\u0000';
break;
case u'\u006E':
return u'\u000A';
break;
case u'\u0074':
return u'\u0009';
break;
case u'\u0075':
(kxz) = (newArray_<char16_t, Array_<char16_t>*>(1, (6LL)));
((kxz)->At(0LL)) = (u'\u0030');
((kxz)->At(1LL)) = (u'\u0078');
for(kyd = (0LL), kye = (3LL); kyd <= kye; kyd += (1LL)){
(kxr) = ((fzi)());
if(!((((u'\u0030') <= (kxr)) && ((kxr) <= (u'\u0039'))) || (((u'\u0041') <= (kxr)) && ((kxr) <= (u'\u0046'))))){
(ad)((65572LL), ((ddp)()), (nullptr));
return u'\u0075';
}
((kxz)->At((2LL) + (kyd))) = (kxr);
}
return static_cast<char16_t>((eq)((kxz), (&kyh)));
break;
default:
(ad)((65571LL), ((ddp)()), (new Array_<Array_<char16_t>*>(1, ((ddq)((kxr))))));
return kxr;
break;
}
}
// _dtor
static void kyj(kwo* kyk){
((kyk)->ne) = (nullptr);
((kyk)->nf) = (nullptr);
((kyk)->ng) = (nullptr);
((kyk)->nh) = (nullptr);
((kyk)->ni) = (nullptr);
((kyk)->nj) = (nullptr);
((kyk)->nk) = (nullptr);
}
// _copy
static kwo* kyl(kwo* kym){
kwo* kyn = nullptr;
(kyn) = (new kwo());
((kyn)->ne) = (copy_((kym)->ne));
((kyn)->nf) = (copy_((kym)->nf));
((kyn)->ng) = (copy_((kym)->ng));
((kyn)->nh) = (copy_((kym)->nh));
((kyn)->ni) = (copy_((kym)->ni));
((kyn)->nj) = (copy_((kym)->nj));
((kyn)->nk) = (copy_((kym)->nk));
((kyn)->no) = ((kym)->no);
((kyn)->lw) = ((kym)->lw);
return as_<kwo>(classTable_, (kyn), 150);
}
// _toBin
static Array_<uint8_t>* kyo(kwo* kyp){
Array_<uint8_t>* kyq = nullptr;
(kyq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kyq) = ((kyq)->Cat(toBin_((kyp)->ne)));
(kyq) = ((kyq)->Cat(toBin_((kyp)->nf)));
(kyq) = ((kyq)->Cat(toBin_((kyp)->ng)));
(kyq) = ((kyq)->Cat(toBin_((kyp)->nh)));
(kyq) = ((kyq)->Cat(toBin_((kyp)->ni)));
(kyq) = ((kyq)->Cat(toBin_((kyp)->nj)));
(kyq) = ((kyq)->Cat(toBin_((kyp)->nk)));
(kyq) = ((kyq)->Cat(toBin_((kyp)->no)));
(kyq) = ((kyq)->Cat(toBin_((kyp)->lw)));
return kyq;
}
// _fromBin
static kwo* kza(kwo* kzb, Array_<uint8_t>* kzc, int64_t* kzd){
kwo* kze = nullptr;
(kze) = (new kwo());
((kze)->ne) = (fromBin_<ga*>((kzc), (*kzd)));
((kze)->nf) = (fromBin_<Array_<char16_t>*>((kzc), (*kzd)));
((kze)->ng) = (fromBin_<fx*>((kzc), (*kzd)));
((kze)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kzc), (*kzd)));
((kze)->ni) = (fromBin_<Array_<char16_t>*>((kzc), (*kzd)));
((kze)->nj) = (fromBin_<fx*>((kzc), (*kzd)));
((kze)->nk) = (fromBin_<fy*>((kzc), (*kzd)));
((kze)->no) = (fromBin_<bool>((kzc), (*kzd)));
((kze)->lw) = (fromBin_<int64_t>((kzc), (*kzd)));
return kze;
}
// parseExprNumber
static gd* kws(int64_t kzf /*row*/, int64_t kzg /*col*/, char16_t kzh /*c*/){
ga* kzi = nullptr; // pos
Array_<char16_t>* kzj = nullptr; // buf
int64_t kzk = 0; // len
int64_t kzl = 0; // base
bool kzm = false; // changeBase
bool kzn = false; // floatType
int64_t kzo = 0; // byteSize
char16_t kzt = 0;
double lbf = 0.0; // value
bool lbh = false; // success
edf* lbk = nullptr; // ast2
bvq* lbl = nullptr; // ast
char16_t lbq = 0;
uint64_t lca = 0; // value
bool lcc = false; // success
bvp* lci = nullptr; // ast2
bud* lcl = nullptr; // type
cam* lcq = nullptr; // type
(kzi) = ((bpm)((bf), (kzf), (kzg)));
(kzj) = (newArray_<char16_t, Array_<char16_t>*>(1, (1024LL)));
(kzk) = (0LL);
(kzl) = (10LL);
(kzm) = (false);
(kzn) = (false);
(kzo) = (0LL);
while(true){
kzt = kzh;
if(kzt == (u'\u0078')){
if((kzm) || (kzn)){
(ad)((65577LL), (kzi), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(1, u'\u0078')))));
(bra)((kzh));
return nullptr;
}
if(((kzk) != (1LL)) || (((kzj)->At(0LL)) != (u'\u0030'))){
(ad)((65579LL), (kzi), (nullptr));
(bra)((kzh));
return nullptr;
}
(kzk) = (0LL);
(kzl) = (16LL);
(kzm) = (true);
}
else if(kzt == (u'\u002E')){
if((kzm) || (kzn)){
(ad)((65577LL), (kzi), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(1, u'\u002E')))));
(bra)((kzh));
return nullptr;
}
if((kzk) == (1024LL)){
(ad)((65578LL), (kzi), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kzj), (new Array_<int64_t>(1, (0LL))), (0LL), (kzk))))));
(bra)((kzh));
return nullptr;
}
((kzj)->At(kzk)) = (kzh);
(kzk) = ((kzk) + (1LL));
(kzn) = (true);
}
else if((u'\u0030') <= kzt && kzt <= (u'\u0039') || (u'\u0041') <= kzt && kzt <= (u'\u0046')){
if((kzk) == (1024LL)){
(ad)((65578LL), (kzi), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kzj), (new Array_<int64_t>(1, (0LL))), (0LL), (kzk))))));
(bra)((kzh));
return nullptr;
}
((kzj)->At(kzk)) = (kzh);
(kzk) = ((kzk) + (1LL));
}
else{(ave) = (kzh);
break;
}
(kzh) = ((brb)());
}
if(((kzk) == (0LL)) || (((kzj)->At((kzk) - (1LL))) == (u'\u002E'))){
(ad)((65577LL), (kzi), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(1, u'\u002E')))));
(bra)(((brb)()));
return nullptr;
}
if(kzn){
(kzh) = ((brb)());
if((kzh) == (u'\u0065')){
if((kzk) == (1024LL)){
(ad)((65578LL), (kzi), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kzj), (new Array_<int64_t>(1, (0LL))), (0LL), (kzk))))));
(bra)((kzh));
return nullptr;
}
((kzj)->At(kzk)) = (kzh);
(kzk) = ((kzk) + (1LL));
(kzh) = ((brb)());
if(((kzh) != (u'\u002B')) && ((kzh) != (u'\u002D'))){
(ad)((65580LL), (kzi), (nullptr));
(bra)((kzh));
return nullptr;
}
if((kzk) == (1024LL)){
(ad)((65578LL), (kzi), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kzj), (new Array_<int64_t>(1, (0LL))), (0LL), (kzk))))));
(bra)((kzh));
return nullptr;
}
((kzj)->At(kzk)) = (kzh);
(kzk) = ((kzk) + (1LL));
(kzh) = ((brb)());
if(!(((u'\u0030') <= (kzh)) && ((kzh) <= (u'\u0039')))){
(ad)((65580LL), (kzi), (nullptr));
(bra)((kzh));
return nullptr;
}
do{
if((kzk) == (1024LL)){
(ad)((65578LL), (kzi), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kzj), (new Array_<int64_t>(1, (0LL))), (0LL), (kzk))))));
(bra)((kzh));
return nullptr;
}
((kzj)->At(kzk)) = (kzh);
(kzk) = ((kzk) + (1LL));
(kzh) = ((brb)());
}while(((u'\u0030') <= (kzh)) && ((kzh) <= (u'\u0039')));
}
(ave) = (kzh);
(lbf) = ((lbg)((auw<Array_<char16_t>*>((kzj), (new Array_<int64_t>(1, (0LL))), (0LL), (kzk))), (&lbh)));
if(!(lbh)){
(ad)((65581LL), (kzi), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kzj), (new Array_<int64_t>(1, (0LL))), (0LL), (kzk))))));
(bra)(((brb)()));
return nullptr;
}
(lbk) = (new edf());
(dni)((lbk), (67588LL), (kzi));
((lbk)->ggy) = (lbf);
(lbl) = (lbk);
}
else{
(kzh) = ((brb)());
if((kzh) == (u'\u0062')){
(kzh) = ((brb)());
switch(kzh){
case u'\u0038':
(kzo) = (1LL);
break;
case u'\u0031':
(dgy)((u'\u0036'), (false));
(kzo) = (2LL);
break;
case u'\u0033':
(dgy)((u'\u0032'), (false));
(kzo) = (4LL);
break;
case u'\u0036':
(dgy)((u'\u0034'), (false));
(kzo) = (8LL);
break;
default:
(ad)((65582LL), (kzi), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kzj), (new Array_<int64_t>(1, (0LL))), (0LL), (kzk))))));
(bra)((kzh));
break;
}
}
else{
(ave) = (kzh);
}
if((kzl) == (10LL)){
(lca) = ((lcb)((auw<Array_<char16_t>*>((kzj), (new Array_<int64_t>(1, (0LL))), (0LL), (kzk))), (&lcc)));
}
else{
if(!((kzl) == (16LL))){
throw 0xE9170000U;
}
(lca) = ((lcb)(((new Array_<char16_t>(2, u'\u0030', u'\u0078'))->Cat(auw<Array_<char16_t>*>((kzj), (new Array_<int64_t>(1, (0LL))), (0LL), (kzk)))), (&lcc)));
}
if(!(lcc)){
(ad)((65583LL), (kzi), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kzj), (new Array_<int64_t>(1, (0LL))), (0LL), (kzk))))));
(bra)(((brb)()));
return nullptr;
}
if((((((kzo) == (1LL)) && ((lca) > (0x00000000000000FFULL))) || (((kzo) == (2LL)) && ((lca) > (0x000000000000FFFFULL)))) || (((kzo) == (4LL)) && ((lca) > (0x00000000FFFFFFFFULL)))) || (((kzo) == (0LL)) && ((lca) > (0x7FFFFFFFFFFFFFFFULL)))){
(ad)((65583LL), (kzi), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((kzj), (new Array_<int64_t>(1, (0LL))), (0LL), (kzk))))));
(bra)(((brb)()));
return nullptr;
}
(lci) = (new bvp());
(dni)((lci), (67585LL), (kzi));
((lci)->bvr) = (lca);
(lbl) = (lci);
}
if((kzo) == (0LL)){
(lcl) = (new bud());
(bpl)((lcl), (1026LL), (kzi), (nullptr), (false));
if(kzn){
((lcl)->bue) = (1LL);
}
else{
((lcl)->bue) = (0LL);
}
((lbl)->pf) = (lcl);
}
else{
(lcq) = (new cam());
(bpl)((lcq), (1025LL), (kzi), (nullptr), (false));
((lcq)->can) = (kzo);
((lbl)->pf) = (lcq);
}
return lbl;
}
// makeFloatValue
static edf* kxb(ga* lcr /*pos*/, double lcs /*value*/){
edf* lct = nullptr; // expr
bud* lcv = nullptr; // type
(lct) = (new edf());
(dni)((lct), (67588LL), (lcr));
(lcv) = (new bud());
(bpl)((lcv), (1026LL), (lcr), (nullptr), (false));
((lcv)->bue) = (1LL);
((lct)->pf) = (lcv);
((lct)->ggy) = (lcs);
return lct;
}
// _toFloat
static double lbg(Array_<char16_t>* lcw /*me_*/, bool* lcx /*success*/){
std::u16string s_ = lcw->B;
const std::string& t_ = utf16ToUtf8_(s_);
try{
size_t s_;
double v_ = std::stod(t_, &s_);
if(s_ == t_.size()){
*lcx = true;
return v_;
}else{
*lcx = false;
return 0;
}
}catch(...){
*lcx = false;
return 0;
}
}
// _toBit64
static uint64_t lcb(Array_<char16_t>* lcy /*me_*/, bool* lcz /*success*/){
std::u16string s_ = lcy->B;
const std::string& t_ = utf16ToUtf8_(s_);
try{
size_t s_;
uint64_t v_ = t_.size() > 2 && t_[0] == '0' && t_[1] == 'x' ? std::stoull(t_, &s_, 16) : std::stoull(t_, &s_);
if(s_ == t_.size()){
*lcz = true;
return v_;
}else{
*lcz = false;
return 0;
}
}catch(...){
*lcz = false;
return 0;
}
}
}
int main(int c_, char** v_){
argc_ = c_ - 1;
argv_ = v_ + 1;
classTable_[0] = 0;
classTable_[2] = 0;
classTable_[6] = 0;
classTable_[4] = 2;
classTable_[12] = 4;
classTable_[14] = 4;
classTable_[10] = 4;
classTable_[16] = 4;
classTable_[8] = 4;
classTable_[18] = 0;
classTable_[20] = 0;
classTable_[24] = 0;
classTable_[22] = 4;
classTable_[26] = 0;
classTable_[28] = 0;
classTable_[30] = 0;
classTable_[34] = 0;
classTable_[32] = 4;
classTable_[36] = 2;
classTable_[38] = 4;
classTable_[40] = 0;
classTable_[42] = 2;
classTable_[44] = 4;
classTable_[46] = 4;
classTable_[48] = 4;
classTable_[50] = 16;
classTable_[54] = 50;
classTable_[58] = 0;
classTable_[56] = 16;
classTable_[52] = 50;
classTable_[60] = 12;
classTable_[62] = 16;
classTable_[66] = 0;
classTable_[64] = 14;
classTable_[68] = 14;
classTable_[70] = 68;
classTable_[72] = 14;
classTable_[74] = 12;
classTable_[76] = 74;
classTable_[78] = 12;
classTable_[82] = 0;
classTable_[80] = 74;
classTable_[84] = 74;
classTable_[86] = 74;
classTable_[90] = 16;
classTable_[88] = 50;
classTable_[94] = 16;
classTable_[92] = 50;
classTable_[96] = 50;
classTable_[98] = 96;
classTable_[100] = 96;
classTable_[102] = 16;
classTable_[104] = 16;
classTable_[106] = 16;
classTable_[108] = 74;
classTable_[110] = 14;
classTable_[112] = 14;
classTable_[114] = 14;
classTable_[116] = 14;
classTable_[118] = 14;
classTable_[120] = 14;
classTable_[122] = 14;
classTable_[124] = 14;
classTable_[126] = 14;
classTable_[128] = 68;
classTable_[130] = 68;
classTable_[132] = 68;
classTable_[134] = 14;
classTable_[136] = 16;
classTable_[138] = 12;
classTable_[140] = 16;
classTable_[142] = 16;
classTable_[144] = 16;
classTable_[146] = 16;
classTable_[148] = 16;
classTable_[150] = 12;
init_();
a();
return 0;
}
