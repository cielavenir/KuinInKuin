#include "common.h"
namespace {
// Class
class fz : public Class_{
public:
fz();
virtual int64_t cmp_(Class_* t) override;
virtual Class_* copy_(Class_* t) override;
};
// HasType
class fy : public fz{
public:
fy();
virtual Class_* copy_(Class_* t) override;
int64_t lw; // typeId
};
// Pos
class ga : public fz{
public:
ga();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* hk; // srcName
int64_t hl; // row
int64_t hm; // col
};
// Ast
class fx : public fy{
public:
fx();
virtual int64_t cmp_(Class_* t) override;
virtual Class_* copy_(Class_* t) override;
ga* ne; // pos
Array_<char16_t>* nf; // name
fx* ng; // scopeParent
Dict_<Array_<char16_t>*, fx*>* nh; // scopeChildren
Array_<char16_t>* ni; // refName
fx* nj; // refItem
fy* nk; // extra
bool no; // publicInSrc
};
// AstType
class gc : public fx{
public:
gc();
virtual Class_* copy_(Class_* t) override;
};
// AstExpr
class gd : public fx{
public:
gd();
virtual Class_* copy_(Class_* t) override;
gc* pf; // type
int64_t pj; // varKind
};
// AstArg
class gb : public fx{
public:
gb();
virtual Class_* copy_(Class_* t) override;
int64_t qk; // kind
bool ql; // refVar
gc* qf; // type
gd* qg; // expr
};
// AstStat
class ge : public fx{
public:
ge();
virtual Class_* copy_(Class_* t) override;
};
// AstFunc
class fw : public fx{
public:
fw();
virtual Class_* copy_(Class_* t) override;
int64_t sm; // funcOption
List_<Array_<char16_t>*>* sf; // funcAttr
List_<gb*>* sg; // args
gc* sh; // ret_
List_<ge*>* si; // stats
};
// ResFiles
class gj : public fz{
public:
gj();
virtual Class_* copy_(Class_* t) override;
List_<Array_<char16_t>*>* gk; // files
};
// Bool
class kl : public fz{
public:
kl();
virtual int64_t cmp_(Class_* t) override;
virtual Class_* copy_(Class_* t) override;
bool km; // value
};
// AstClassItem
class um : public fz{
public:
um();
virtual Class_* copy_(Class_* t) override;
bool azq; // public
bool azr; // override
fx* azl; // def
um* azm; // parentItem
};
// AstClass
class ul : public fx{
public:
ul();
virtual Class_* copy_(Class_* t) override;
List_<um*>* bag; // items
};
// TmpVar
class un : public fz{
public:
un();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bbe; // identifier
gc* bbf; // type
};
// TmpVar
class va : public fz{
public:
va();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bij; // identifier
gc* bik; // type
};
// Reader
class auz : public fz{
public:
auz();
virtual Class_* copy_(Class_* t) override;
int64_t bni; // handle
int64_t boz; // delimiterNum
int64_t bpa; // delimiters
int64_t bpb; // fileSize_
};
// ScopeRefedItem
class avl : public fz{
public:
avl();
virtual Class_* copy_(Class_* t) override;
fx* awk; // def
fx* axf; // scope
};
// AstRoot
class avk : public fx{
public:
avk();
virtual Class_* copy_(Class_* t) override;
List_<fx*>* aza; // items
List_<avl*>* awd; // scopeRefedItems
};
// CppInfo
class bby : public fy{
public:
bby();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bee; // id
Array_<char16_t>* bzd; // breakLabel
Array_<char16_t>* bzg; // skipLabel
int64_t bfy; // classTableOffset
bool bca; // alreadyWritten
bool bzj; // breakLabelUsed
bool bzk; // skipLabelUsed
};
// AstVar
class bgn : public fx{
public:
bgn();
virtual Class_* copy_(Class_* t) override;
gb* bgp; // arg
};
// Writer
class bhv : public fz{
public:
bhv();
virtual Class_* copy_(Class_* t) override;
int64_t cps; // handle
};
// WebInfo
class bjb : public fy{
public:
bjb();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* bjr; // id
Array_<char16_t>* csq; // breakSkipLabel
bool bjd; // alreadyWritten
};
// AstConst
class bqt : public fx{
public:
bqt();
virtual Class_* copy_(Class_* t) override;
gb* brj; // arg
};
// AstAlias
class bqw : public fx{
public:
bqw();
virtual Class_* copy_(Class_* t) override;
gc* dns; // type
};
// AstEnum
class brc : public fx{
public:
brc();
virtual Class_* copy_(Class_* t) override;
List_<gd*>* dqo; // items
};
// AstStatBreakable
class btz : public ge{
public:
btz();
virtual Class_* copy_(Class_* t) override;
gb* buj; // blockVar
};
// AstStatBlock
class bua : public btz{
public:
bua();
virtual Class_* copy_(Class_* t) override;
List_<ge*>* bum; // stats
};
// ExprPair
class buc : public fz{
public:
buc();
virtual Class_* copy_(Class_* t) override;
gd* bvy; // expr0
gd* bwd; // expr1
};
// AstStatCatch
class bub : public ge{
public:
bub();
virtual Class_* copy_(Class_* t) override;
List_<buc*>* bvl; // conds
bua* bvo; // statBlock
};
// AstStatTry
class bty : public btz{
public:
bty();
virtual Class_* copy_(Class_* t) override;
bua* bun; // statBlock
List_<bub*>* buo; // catches
bua* bur; // finallyStatBlock
};
// AstTypePrim
class buh : public gc{
public:
buh();
virtual Class_* copy_(Class_* t) override;
int64_t bui; // kind
};
// AstStatDo
class buy : public ge{
public:
buy();
virtual Class_* copy_(Class_* t) override;
gd* bvi; // expr
};
// AstExprCallArg
class bvc : public fz{
public:
bvc();
virtual Class_* copy_(Class_* t) override;
gd* bwq; // arg
bool bwm; // refVar
bool bwn; // skipVar
};
// AstExprCall
class bvb : public gd{
public:
bvb();
virtual Class_* copy_(Class_* t) override;
gd* bvh; // func_
List_<bvc*>* bve; // args
};
// AstExprValue
class bvu : public gd{
public:
bvu();
virtual Class_* copy_(Class_* t) override;
};
// AstExprValuePrim
class bvt : public bvu{
public:
bvt();
virtual Class_* copy_(Class_* t) override;
uint64_t bvv; // value
};
// AstExpr2
class byf : public gd{
public:
byf();
virtual Class_* copy_(Class_* t) override;
int64_t byg; // kind
gd* byj; // children0
gd* byk; // children1
};
// AstTypeNullable
class can : public gc{
public:
can();
virtual Class_* copy_(Class_* t) override;
};
// AstTypeArray
class cam : public can{
public:
cam();
virtual Class_* copy_(Class_* t) override;
gc* cao; // itemType
};
// AstTypeBit
class caq : public gc{
public:
caq();
virtual Class_* copy_(Class_* t) override;
int64_t car; // size
};
// AstTypeFuncArg
class cav : public fz{
public:
cav();
virtual Class_* copy_(Class_* t) override;
gc* cbk; // arg
bool cbm; // refVar
};
// AstTypeFunc
class cau : public can{
public:
cau();
virtual Class_* copy_(Class_* t) override;
int64_t eqb; // funcOption
List_<Array_<char16_t>*>* epx; // funcAttr
List_<cav*>* cbc; // args
gc* cax; // ret_
};
// AstTypeGen
class cbr : public can{
public:
cbr();
virtual Class_* copy_(Class_* t) override;
int64_t cbu; // kind
gc* cbw; // itemType
};
// AstTypeDict
class ccc : public can{
public:
ccc();
virtual Class_* copy_(Class_* t) override;
gc* ccd; // itemTypeKey
gc* cce; // itemTypeValue
};
// AstStatElIf
class cma : public ge{
public:
cma();
virtual Class_* copy_(Class_* t) override;
gd* etp; // cond
bua* etq; // statBlock
};
// AstStatIf
class clz : public btz{
public:
clz();
virtual Class_* copy_(Class_* t) override;
gd* ete; // cond
bua* etg; // statBlock
List_<cma*>* etm; // elIfs
bua* ets; // elseStatBlock
};
// AstStatCase
class cme : public ge{
public:
cme();
virtual Class_* copy_(Class_* t) override;
List_<buc*>* ewo; // conds
bua* exc; // statBlock
};
// AstStatSwitch
class cmd : public btz{
public:
cmd();
virtual Class_* copy_(Class_* t) override;
gd* ewf; // cond
List_<cme*>* ewk; // cases
bua* exe; // defaultStatBlock
};
// AstStatSkipable
class cmi : public btz{
public:
cmi();
virtual Class_* copy_(Class_* t) override;
};
// AstStatWhile
class cmh : public cmi{
public:
cmh();
virtual Class_* copy_(Class_* t) override;
gd* fal; // cond
bool fat; // skip_
List_<ge*>* fan; // stats
};
// AstStatFor
class cml : public cmi{
public:
cml();
virtual Class_* copy_(Class_* t) override;
gd* fdk; // start
gd* fdj; // cond
gd* fdl; // step
List_<ge*>* fdq; // stats
};
// AstStatThrow
class cmq : public ge{
public:
cmq();
virtual Class_* copy_(Class_* t) override;
gd* fgh; // code
};
// AstStatRet
class cmv : public ge{
public:
cmv();
virtual Class_* copy_(Class_* t) override;
gd* fhn; // value
};
// AstStatAssert
class cne : public ge{
public:
cne();
virtual Class_* copy_(Class_* t) override;
gd* fjb; // cond
};
// AstTypeUser
class dli : public can{
public:
dli();
virtual Class_* copy_(Class_* t) override;
};
// AstExpr1
class eft : public gd{
public:
eft();
virtual Class_* copy_(Class_* t) override;
int64_t gkz; // kind
gd* gkt; // child
};
// AstExpr3
class efy : public gd{
public:
efy();
virtual Class_* copy_(Class_* t) override;
gd* gwf; // children0
gd* gwi; // children1
gd* gwl; // children2
};
// AstExprNew
class egb : public gd{
public:
egb();
virtual Class_* copy_(Class_* t) override;
gc* gyg; // itemType
};
// AstExprNewArray
class ege : public gd{
public:
ege();
virtual Class_* copy_(Class_* t) override;
List_<gd*>* gzr; // idces
gc* haa; // itemType
};
// AstExprAs
class egh : public gd{
public:
egh();
virtual Class_* copy_(Class_* t) override;
int64_t hbw; // kind
gd* hbo; // child
gc* hbr; // childType
};
// AstExprToBin
class egk : public gd{
public:
egk();
virtual Class_* copy_(Class_* t) override;
gd* hfv; // child
gc* hgb; // childType
};
// AstExprFromBin
class egn : public gd{
public:
egn();
virtual Class_* copy_(Class_* t) override;
gd* hhg; // child
gc* hhl; // childType
gd* hhm; // offset
};
// AstExprArray
class egs : public gd{
public:
egs();
virtual Class_* copy_(Class_* t) override;
gd* hky; // var_
gd* hld; // idx
};
// AstExprDot
class egv : public gd{
public:
egv();
virtual Class_* copy_(Class_* t) override;
gd* hjg; // var_
Array_<char16_t>* hmw; // member
um* hnj; // classItem
};
// AstExprValueStr
class ehc : public bvu{
public:
ehc();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* gqn; // value
};
// AstExprValueEnumElement
class ehf : public bvu{
public:
ehf();
virtual Class_* copy_(Class_* t) override;
Array_<char16_t>* goz; // identifier
};
// AstExprValueFloat
class ehi : public bvu{
public:
ehi();
virtual Class_* copy_(Class_* t) override;
double glp; // value
};
// AstExprValueArray
class ehl : public gd{
public:
ehl();
virtual Class_* copy_(Class_* t) override;
List_<gd*>* hjp; // values
};
// AstStatVar
class ejc : public ge{
public:
ejc();
virtual Class_* copy_(Class_* t) override;
bgn* eje; // def
};
// AstTypeNull
class elj : public gc{
public:
elj();
virtual Class_* copy_(Class_* t) override;
};
// AstStatFunc
class inl : public ge{
public:
inl();
virtual Class_* copy_(Class_* t) override;
fw* inm; // def
};
// AstStatConst
class inp : public ge{
public:
inp();
virtual Class_* copy_(Class_* t) override;
bqt* inq; // def
};
// AstStatAlias
class ins : public ge{
public:
ins();
virtual Class_* copy_(Class_* t) override;
bqw* inu; // def
};
// AstStatClass
class inw : public ge{
public:
inw();
virtual Class_* copy_(Class_* t) override;
ul* inx; // def
};
// AstStatEnum
class inz : public ge{
public:
inz();
virtual Class_* copy_(Class_* t) override;
brc* ioa; // def
};
// AstTypeEnumElement
class lcp : public gc{
public:
lcp();
virtual Class_* copy_(Class_* t) override;
};
static void a();
static void e();
static void f();
static void g();
static void i();
static void j();
static void l(int64_t bp /*excpt*/);
static bool o();
static void q(int64_t fh /*code*/);
static void u(Array_<char16_t>* fm /*str*/);
template<typename T_> static Array_<char16_t>* v(T_ fn /*me_*/, Array_<int64_t>* fo /*type*/);
static bool ab();
static void ad(int64_t hb /*id*/, ga* hc /*pos*/, Array_<Array_<char16_t>*>* hd /*args*/);
static Array_<Array_<char16_t>*>* br();
static bool ch(Array_<char16_t>** hq /*out*/, Array_<Array_<char16_t>*>* hr /*cmdLines*/, int64_t* hs /*idx*/, char16_t ht /*option*/);
static bool cu(bool* hx /*out*/, char16_t hy /*option*/);
template<typename T_, typename K_, typename V_> static void dv(T_ ib /*me_*/, Array_<int64_t>* ic /*type*/, K_ id /*key*/, V_ ie /*item*/);
static int64_t eo(int64_t ig /*min*/, int64_t ih /*max*/);
static int64_t er(Array_<char16_t>* ii /*me_*/, bool* ij /*success*/);
static Array_<char16_t>* ew(Array_<char16_t>* ik /*path*/);
static Array_<char16_t>* ey(Array_<char16_t>* ix /*path*/);
static Array_<char16_t>* fd(Array_<char16_t>* jj /*path*/);
static Array_<char16_t>* ff(Array_<char16_t>* jw /*path*/);
static int64_t ft();
static Dict_<Array_<char16_t>*, fx*>* fu();
static fw* fv(Dict_<Array_<char16_t>*, fx*>* kq /*asts*/);
static void kx(fz* ky /*me*/);
static void kz(fz* la /*me*/);
static int64_t lb(fz* lc /*me*/, fz* ld /*t*/);
static fz* le(fz* lf /*me*/);
static Array_<uint8_t>* lh(fz* li /*me*/);
static fz* lk(fz* ll /*me*/, Array_<uint8_t>* lm /*bin*/, int64_t* ln /*idx*/);
static Array_<char16_t>* lp(fz* lq /*me*/);
static void lr(fy* ls);
static fy* lt(fy* lu);
static Array_<uint8_t>* lx(fy* ly);
static fy* mb(fy* mc, Array_<uint8_t>* md, int64_t* me);
static int64_t mg(fx* mh /*me*/, fx* mi /*t*/);
static void mm(ga* mn);
static ga* mo(ga* mp);
static Array_<uint8_t>* mr(ga* ms);
static ga* mx(ga* my, Array_<uint8_t>* mz, int64_t* na);
static void nc(fx* nd);
static fx* nl(fx* nm);
static Array_<uint8_t>* np(fx* nq);
static fx* ob(fx* oc, Array_<uint8_t>* od, int64_t* oe);
static void og(gc* oh);
static gc* oi(gc* oj);
static Array_<uint8_t>* ol(gc* om);
static gc* oy(gc* oz, Array_<uint8_t>* pa, int64_t* pb);
static void pd(gd* pe);
static gd* pg(gd* ph);
static Array_<uint8_t>* pk(gd* pl);
static gd* py(gd* pz, Array_<uint8_t>* qa, int64_t* qb);
static void qd(gb* qe);
static gb* qh(gb* qi);
static Array_<uint8_t>* qm(gb* qn);
static gb* rc(gb* rd, Array_<uint8_t>* re, int64_t* rf);
static void rh(ge* ri);
static ge* rj(ge* rk);
static Array_<uint8_t>* rm(ge* rn);
static ge* ry(ge* rz, Array_<uint8_t>* sa, int64_t* sb);
static void sd(fw* se);
static fw* sj(fw* sk);
static Array_<uint8_t>* sn(fw* so);
static fw* te(fw* tf, Array_<uint8_t>* tg, int64_t* th);
static void tj(gj* tk);
static gj* tl(gj* tm);
static Array_<uint8_t>* to(gj* tp);
static gj* ts(gj* tt, Array_<uint8_t>* tu, int64_t* tv);
static bool gm(Array_<char16_t>* tx /*path*/);
typedef bool(*ub)(Array_<char16_t>*, bool, fz*);
static bool go(Array_<char16_t>* ty /*path*/, bool tz /*recursion*/, ub ua /*callback*/, fz* uc /*data*/);
static bool gp(Array_<char16_t>* ud /*path*/, bool ue /*isDir*/, fz* uf /*data*/);
static bool gu(fw* ui /*entry*/, List_<Array_<char16_t>*>* uj /*resFiles*/);
static bool gy(fw* uy /*entry*/, List_<Array_<char16_t>*>* uz /*resFiles*/);
static Array_<char16_t>* hh(int64_t vj /*id*/, Array_<Array_<char16_t>*>* vk /*args*/);
static int64_t atm(kl* atn /*me*/, kl* ato /*t*/);
static Array_<char16_t>* atq(kl* atr /*me*/);
static void ats(kl* att);
static kl* atu(kl* atv);
static Array_<uint8_t>* atx(kl* aty);
static kl* aub(kl* auc, Array_<uint8_t>* aud, int64_t* aue);
template<typename T_, typename K_, typename V_> static bool ko(T_ aug /*me_*/, Array_<int64_t>* auh /*type*/, const void* aui /*callback*/, fz* auj /*data*/);
static bool kp(Array_<char16_t>* auk /*key*/, fx* aul /*value*/, fz* aum /*data*/);
static fw* ks();
static bool kv(Array_<char16_t>* avz /*key*/, fx* awa /*value*/, fz* awb /*data*/);
static fw* kw(fw* ayt /*mainFunc*/);
static uint64_t mk(fz* azc /*class_*/);
template<typename T_, typename C_> static void uh(T_ azd /*me_*/, Array_<int64_t>* aze /*type*/, C_ azf /*item*/);
template<typename T_, typename C_> static void uk(T_ azg /*me_*/, Array_<int64_t>* azh /*type*/, C_ azi /*item*/);
static void azj(um* azk);
static um* azn(um* azo);
static Array_<uint8_t>* azs(um* azt);
static um* azz(um* baa, Array_<uint8_t>* bab, int64_t* bac);
static void bae(ul* baf);
static ul* bah(ul* bai);
static Array_<uint8_t>* bak(ul* bal);
static ul* bax(ul* bay, Array_<uint8_t>* baz, int64_t* bba);
static void bbc(un* bbd);
static un* bbg(un* bbh);
static Array_<uint8_t>* bbj(un* bbk);
static un* bbo(un* bbp, Array_<uint8_t>* bbq, int64_t* bbr);
template<typename T_, typename R_> static R_ us(T_ bbt /*me_*/, Array_<int64_t>* bbu /*type*/);
static void ut(fw* bbv /*ast*/);
static void uw(ul* bfp /*ast*/);
static void ux(List_<Array_<char16_t>*>* bhp /*resFiles*/);
static void bih(va* bii);
static va* bil(va* bim);
static Array_<uint8_t>* bio(va* bip);
static va* bit(va* biu, Array_<uint8_t>* biv, int64_t* biw);
static void ve(fw* biy /*ast*/);
static void vh(ul* bkw /*ast*/);
static void vi(List_<Array_<char16_t>*>* bls /*resFiles*/);
static int64_t atp(int64_t bmb /*me_*/);
static bool auq(Array_<char16_t>* bmc /*name*/);
static Array_<char16_t>* auv(Array_<char16_t>* bmv /*path*/);
template<typename T_> static T_ auw(T_ bnc /*me_*/, Array_<int64_t>* bnd /*type*/, int64_t bne /*start*/, int64_t bnf /*len*/);
static auz* auy(auz* bng /*me2*/, Array_<char16_t>* bnh /*path*/);
static void bnj(auz* bnk /*me*/);
static void avm(auz* bnl /*me*/);
static void bnm(auz* bnn /*me*/, int64_t bno /*origin*/, int64_t bnp /*pos*/);
static int64_t bnq(auz* bnr /*me*/);
static void bns(auz* bnt /*me*/, Array_<char16_t>* bnu /*delimiters*/);
static Array_<uint8_t>* bnv(auz* bnw /*me*/, int64_t bnx /*size*/);
static char16_t bny(auz* bnz /*me*/);
static int64_t boa(auz* bob /*me*/);
static double boc(auz* bod /*me*/);
static char16_t boe(auz* bof /*me*/);
static Array_<char16_t>* bog(auz* boh /*me*/);
static Array_<char16_t>* bia(auz* boi /*me*/);
static int64_t bot(auz* bou /*me*/);
static bool bhy(auz* bov /*me*/);
static auz* bow(auz* box);
static Array_<uint8_t>* bpc(auz* bpd);
static auz* bpj(auz* bpk, Array_<uint8_t>* bpl, int64_t* bpm);
static avk* avj();
static void brm(avl* brn);
static avl* bro(avl* brp);
static Array_<uint8_t>* brr(avl* brs);
static avl* brw(avl* brx, Array_<uint8_t>* bry, int64_t* brz);
static void bsb(avk* bsc);
static avk* bsd(avk* bse);
static Array_<uint8_t>* bsg(avk* bsh);
static avk* bsu(avk* bsv, Array_<uint8_t>* bsw, int64_t* bsx);
template<typename T_, typename C_, typename R_> static R_ avo(T_ bsz /*me_*/, Array_<int64_t>* bta /*type*/, C_ btb /*key*/, bool* btc /*existed*/);
template<typename T_> static void awe(T_ btd /*me_*/, Array_<int64_t>* bte /*type*/);
template<typename T_> static bool awg(T_ btf /*me_*/, Array_<int64_t>* btg /*type*/);
template<typename T_, typename R_> static R_ awi(T_ bth /*me_*/, Array_<int64_t>* bti /*type*/);
template<typename T_, typename C_> static int64_t awn(T_ btj /*me_*/, Array_<int64_t>* btk /*type*/, C_ btl /*item*/, int64_t btm /*start*/);
template<typename T_> static T_ aye(T_ btn /*me_*/, Array_<int64_t>* bto /*type*/, T_ btp /*n*/);
template<typename T_> static void ays(T_ btq /*me_*/, Array_<int64_t>* btr /*type*/);
static fw* ayw(fw* bts /*mainFunc*/);
static void ayx(fw* bxa /*ast*/);
static bool azb(Array_<char16_t>* bxk /*key*/, fx* bxl /*value*/, fz* bxm /*data*/);
static bby* bbx(fx* byw /*ast*/);
static void bzl(bby* bzm);
static bby* bzn(bby* bzo);
static Array_<uint8_t>* bzq(bby* bzr);
static bby* cab(bby* cac, Array_<uint8_t>* cad, int64_t* cae);
static Array_<char16_t>* bcz(gc* cag /*type*/);
static bool bdm(gc* ccw /*type*/);
static void bew(List_<Array_<char16_t>*>* ccx /*codes*/, Array_<char16_t>* ccy /*attr*/, List_<gb*>* ccz /*args*/, List_<um*>* cda /*members*/);
template<typename T_> static void bfa(T_ clm /*me_*/, Array_<int64_t>* cln /*type*/);
template<typename T_> static int64_t bfc(T_ clo /*me_*/, Array_<int64_t>* clp /*type*/);
static void bfd(List_<ge*>* clq /*stats*/, ge* clr /*breakStat*/, ge* cls /*skipStat*/);
template<typename T_> static void bfe(T_ cng /*me_*/, Array_<int64_t>* cnh /*type*/, int64_t cni /*offset*/);
template<typename T_, typename C_> static void bfk(T_ cnj /*me_*/, Array_<int64_t>* cnk /*type*/, C_ cnl /*item*/);
template<typename T_> static void bfm(T_ cnm /*me_*/, Array_<int64_t>* cnn /*type*/);
static Array_<char16_t>* bft(ul* cno /*ast*/);
static void col(bgn* com);
static bgn* con(bgn* coo);
static Array_<uint8_t>* coq(bgn* cor);
static bgn* cpd(bgn* cpe, Array_<uint8_t>* cpf, int64_t* cpg);
static fw* bgs(ul* cpi /*ast*/, Array_<char16_t>* cpj /*name*/);
static bhv* bhu(bhv* cpp /*me2*/, Array_<char16_t>* cpq /*path*/, bool cpr /*append*/);
static void cpt(bhv* cpu /*me*/);
static void bid(bhv* cpv /*me*/);
static void cpw(bhv* cpx /*me*/, int64_t cpy /*origin*/, int64_t cpz /*pos*/);
static int64_t cqa(bhv* cqb /*me*/);
static void cqc(bhv* cqd /*me*/, Array_<uint8_t>* cqe /*bin*/);
static void cqf(bhv* cqg /*me*/, int64_t cqh /*n*/);
static void cqp(bhv* cqq /*me*/, double cqr /*n*/);
static void cqo(bhv* cqy /*me*/, char16_t cqz /*n*/);
static void bib(bhv* cra /*me*/, Array_<char16_t>* crb /*n*/);
static bhv* crh(bhv* cri);
static Array_<uint8_t>* crk(bhv* crl);
static bhv* cro(bhv* crp, Array_<uint8_t>* crq, int64_t* crr);
static void bic(bhv* crt /*writer*/, List_<Array_<char16_t>*>* cru /*resFiles*/);
static bool bif(Array_<char16_t>* csh /*dst*/, Array_<char16_t>* csi /*src*/);
static bjb* bja(fx* csj /*ast*/);
static void css(bjb* cst);
static bjb* csu(bjb* csv);
static Array_<uint8_t>* csx(bjb* csy);
static bjb* cte(bjb* ctf, Array_<uint8_t>* ctg, int64_t* cth);
static void bki(List_<Array_<char16_t>*>* ctj /*codes*/, Array_<char16_t>* ctk /*attr*/, List_<gb*>* ctl /*args*/, List_<um*>* ctm /*members*/);
static void bkn(List_<ge*>* dcp /*stats*/);
static Array_<char16_t>* bla(ul* ddt /*ast*/);
static fw* bli(ul* ddz /*ast*/, Array_<char16_t>* dea /*name*/);
static void bly(bhv* deg /*writer*/, List_<Array_<char16_t>*>* deh /*resFiles*/);
static void bpp(fx* dgj /*ast*/, int64_t dgk /*typeId*/, ga* dgl /*pos*/, Array_<char16_t>* dgm /*name*/, bool dgn /*setParent*/);
static ga* bpq(Array_<char16_t>* dgp /*srcName*/, int64_t dgq /*row*/, int64_t dgr /*col*/);
template<typename T_, typename C_> static void bpr(T_ dgt /*me_*/, Array_<int64_t>* dgu /*type*/, C_ dgv /*item*/);
static char16_t bps();
static Array_<char16_t>* bqk(bool dhn /*skipSpaces*/, bool dho /*refName*/);
static fw* bqo(Array_<char16_t>* div /*parentClass*/, bool diw /*overritten*/);
static bgn* bqq(int64_t dmq /*kind*/, Array_<char16_t>* dmr /*parentClass*/);
static bqt* bqs();
static void dmu(bqt* dmv);
static bqt* dmw(bqt* dmx);
static Array_<uint8_t>* dmz(bqt* dna);
static bqt* dnm(bqt* dnn, Array_<uint8_t>* dno, int64_t* dnp);
static bqw* bqv();
static void dnt(bqw* dnu);
static bqw* dnv(bqw* dnw);
static Array_<uint8_t>* dny(bqw* dnz);
static bqw* dol(bqw* dom, Array_<uint8_t>* don, int64_t* doo);
static ul* bqz();
static brc* brb();
static void dro(brc* drp);
static brc* drq(brc* drr);
static Array_<uint8_t>* drt(brc* dru);
static brc* dsg(brc* dsh, Array_<uint8_t>* dsi, int64_t* dsj);
static void bre(char16_t dsl /*c*/);
static char16_t brf();
template<typename T_, typename R_> static R_ brl(T_ dst /*me_*/, Array_<int64_t>* dsu /*type*/);
static void btv(fx* dsv /*ast*/, int64_t dsw /*typeId*/, ga* dsx /*pos*/);
static void dsz(btz* dta);
static btz* dtb(btz* dtc);
static Array_<uint8_t>* dte(btz* dtf);
static btz* dtr(btz* dts, Array_<uint8_t>* dtt, int64_t* dtu);
static void dtw(bua* dtx);
static bua* dty(bua* dtz);
static Array_<uint8_t>* dub(bua* duc);
static bua* dup(bua* duq, Array_<uint8_t>* dur, int64_t* dus);
static void duu(buc* duv);
static buc* duw(buc* dux);
static Array_<uint8_t>* duz(buc* dva);
static buc* dve(buc* dvf, Array_<uint8_t>* dvg, int64_t* dvh);
static void dvj(bub* dvk);
static bub* dvl(bub* dvm);
static Array_<uint8_t>* dvo(bub* dvp);
static bub* dwc(bub* dwd, Array_<uint8_t>* dwe, int64_t* dwf);
static void dwh(bty* dwi);
static bty* dwj(bty* dwk);
static Array_<uint8_t>* dwm(bty* dwn);
static bty* dxc(bty* dxd, Array_<uint8_t>* dxe, int64_t* dxf);
static void dxh(buh* dxi);
static buh* dxj(buh* dxk);
static Array_<uint8_t>* dxm(buh* dxn);
static buh* dxz(buh* dya, Array_<uint8_t>* dyb, int64_t* dyc);
static fx* buu(Array_<char16_t>* dye /*src*/, Array_<char16_t>* dyf /*identifier*/, bool dyg /*makeExprRef*/);
static void dyt(buy* dyu);
static buy* dyv(buy* dyw);
static Array_<uint8_t>* dyy(buy* dyz);
static buy* dzl(buy* dzm, Array_<uint8_t>* dzn, int64_t* dzo);
static void dzq(bvc* dzr);
static bvc* dzs(bvc* dzt);
static Array_<uint8_t>* dzv(bvc* dzw);
static bvc* eab(bvc* eac, Array_<uint8_t>* ead, int64_t* eae);
static void eag(bvb* eah);
static bvb* eai(bvb* eaj);
static Array_<uint8_t>* eal(bvb* eam);
static bvb* ebb(bvb* ebc, Array_<uint8_t>* ebd, int64_t* ebe);
static void bvd(gd* ebg /*ast*/, int64_t ebh /*typeId*/, ga* ebi /*pos*/);
static void ebj(bvu* ebk);
static bvu* ebl(bvu* ebm);
static Array_<uint8_t>* ebo(bvu* ebp);
static bvu* ecc(bvu* ecd, Array_<uint8_t>* ece, int64_t* ecf);
static void ech(bvt* eci);
static bvt* ecj(bvt* eck);
static Array_<uint8_t>* ecm(bvt* ecn);
static bvt* edb(bvt* edc, Array_<uint8_t>* edd, int64_t* ede);
static void bxf(gb* edg /*ast*/);
static gc* bxi(gc* edw /*ast*/, bqw* edx /*parentAlias*/);
static List_<ge*>* bxj(List_<ge*>* efc /*stats*/, gc* efd /*retType*/, fw* efe /*parentFunc*/);
static gd* byb(gd* efk /*ast*/, bool efl /*nullable*/);
static void ehr(byf* ehs);
static byf* eht(byf* ehu);
static Array_<uint8_t>* ehw(byf* ehx);
static byf* ein(byf* eio, Array_<uint8_t>* eip, int64_t* eiq);
static ge* byl(ge* eis /*ast*/, gc* eit /*retType*/, fw* eiu /*parentFunc*/);
static bool byn(gc* elc /*type*/);
static bvu* byu(ga* elf /*pos*/);
static Array_<char16_t>* bza();
static void emq(can* emr);
static can* ems(can* emt);
static Array_<uint8_t>* emv(can* emw);
static can* enh(can* eni, Array_<uint8_t>* enj, int64_t* enk);
static void enm(cam* enn);
static cam* eno(cam* enp);
static Array_<uint8_t>* enr(cam* ens);
static cam* eoe(cam* eof, Array_<uint8_t>* eog, int64_t* eoh);
static void eoj(caq* eok);
static caq* eol(caq* eom);
static Array_<uint8_t>* eoo(caq* eop);
static caq* epb(caq* epc, Array_<uint8_t>* epd, int64_t* epe);
static void epg(cav* eph);
static cav* epi(cav* epj);
static Array_<uint8_t>* epl(cav* epm);
static cav* epq(cav* epr, Array_<uint8_t>* eps, int64_t* ept);
static void epv(cau* epw);
static cau* epy(cau* epz);
static Array_<uint8_t>* eqc(cau* eqd);
static cau* eqs(cau* eqt, Array_<uint8_t>* equ, int64_t* eqv);
static void eqx(cbr* eqy);
static cbr* eqz(cbr* era);
static Array_<uint8_t>* erc(cbr* erd);
static cbr* erq(cbr* err, Array_<uint8_t>* ers, int64_t* ert);
static void erv(ccc* erw);
static ccc* erx(ccc* ery);
static Array_<uint8_t>* esa(ccc* esb);
static ccc* eso(ccc* esp, Array_<uint8_t>* esq, int64_t* esr);
static bby* cjt(List_<um*>* est /*members*/, Array_<char16_t>* esu /*name*/);
static void cly(clz* esz /*ast*/, ge* eta /*breakStat*/, ge* etb /*skipStat*/);
static void etw(cma* etx);
static cma* ety(cma* etz);
static Array_<uint8_t>* eub(cma* euc);
static cma* eup(cma* euq, Array_<uint8_t>* eur, int64_t* eus);
static void euu(clz* euv);
static clz* euw(clz* eux);
static Array_<uint8_t>* euz(clz* eva);
static clz* evq(clz* evr, Array_<uint8_t>* evs, int64_t* evt);
static void cmc(cmd* evv /*ast*/, ge* evw /*breakStat*/, ge* evx /*skipStat*/);
static void eyi(cme* eyj);
static cme* eyk(cme* eyl);
static Array_<uint8_t>* eyn(cme* eyo);
static cme* ezb(cme* ezc, Array_<uint8_t>* ezd, int64_t* eze);
static void ezg(cmd* ezh);
static cmd* ezi(cmd* ezj);
static Array_<uint8_t>* ezl(cmd* ezm);
static cmd* fab(cmd* fac, Array_<uint8_t>* fad, int64_t* fae);
static void cmg(cmh* fag /*ast*/, ge* fah /*breakStat*/, ge* fai /*skipStat*/);
static void fbd(cmi* fbe);
static cmi* fbf(cmi* fbg);
static Array_<uint8_t>* fbi(cmi* fbj);
static cmi* fbv(cmi* fbw, Array_<uint8_t>* fbx, int64_t* fby);
static void fca(cmh* fcb);
static cmh* fcc(cmh* fcd);
static Array_<uint8_t>* fcf(cmh* fcg);
static cmh* fcv(cmh* fcw, Array_<uint8_t>* fcx, int64_t* fcy);
static void cmk(cml* fda /*ast*/, ge* fdb /*breakStat*/, ge* fdc /*skipStat*/);
static void fdv(cml* fdw);
static cml* fdx(cml* fdy);
static Array_<uint8_t>* fea(cml* feb);
static cml* fer(cml* fes, Array_<uint8_t>* fet, int64_t* feu);
static void cmn(bty* few /*ast*/, ge* fex /*breakStat*/, ge* fey /*skipStat*/);
static void cmp(cmq* fgg /*ast*/);
static void fgi(cmq* fgj);
static cmq* fgk(cmq* fgl);
static Array_<uint8_t>* fgn(cmq* fgo);
static cmq* fha(cmq* fhb, Array_<uint8_t>* fhc, int64_t* fhd);
static void cms(bua* fhf /*ast*/, ge* fhg /*breakStat*/, ge* fhh /*skipStat*/);
static void cmu(cmv* fhl /*ast*/);
static void fhq(cmv* fhr);
static cmv* fhs(cmv* fht);
static Array_<uint8_t>* fhv(cmv* fhw);
static cmv* fii(cmv* fij, Array_<uint8_t>* fik, int64_t* fil);
static void cmx(buy* fin /*ast*/);
static void cmz(ge* fio /*ast*/, ge* fip /*breakStat*/);
static void cnb(ge* fiu /*ast*/, ge* fiv /*skipStat*/);
static void cnd(cne* fja /*ast*/);
static void fjc(cne* fjd);
static cne* fje(cne* fjf);
static Array_<uint8_t>* fjh(cne* fji);
static cne* fju(cne* fjv, Array_<uint8_t>* fjw, int64_t* fjx);
static Array_<char16_t>* csn();
static bjb* dal(List_<um*>* flg /*members*/, Array_<char16_t>* flh /*name*/);
static void dcv(clz* flm /*ast*/);
static void dcx(cmd* fmd /*ast*/);
static void dcz(cmh* fon /*ast*/);
static void ddb(cml* fpa /*ast*/);
static void ddd(bty* fpn /*ast*/);
static void ddf(cmq* fqr /*ast*/);
static void ddh(bua* fqs /*ast*/);
static void ddj(cmv* fqy /*ast*/);
static void ddl(buy* frc /*ast*/);
static void ddn(ge* frd /*ast*/);
static void ddp(ge* frf /*ast*/);
static void ddr(cne* frh /*ast*/);
static Array_<char16_t>* deq(gc* fri /*type*/);
static Array_<char16_t>* dfe(char16_t fry /*c*/);
static void dgo(fx* fsg /*ast*/, int64_t fsh /*typeId*/, ga* fsi /*pos*/, Array_<char16_t>* fsj /*name*/, bool fsk /*setParent*/);
static char16_t dhh();
static ga* dhs();
static Array_<char16_t>* dht(char16_t fth /*c*/);
static void dio(Array_<char16_t>* fto /*name*/);
static Array_<char16_t>* dji();
template<typename T_> static T_ djq(T_ fub /*me_*/, Array_<int64_t>* fuc /*type*/, T_ fud /*n*/);
static void dkw(char16_t fue /*c*/, char16_t fuf /*c2*/);
static void dla(fx* fug /*ast*/, Array_<char16_t>* fuh /*name*/);
static void dlb(char16_t fuj /*c*/, bool fuk /*skipSpaces*/);
static void dlf(fx* fuo /*ast*/, bool fup /*refuseReserved*/);
static void fwa(dli* fwb);
static dli* fwc(dli* fwd);
static Array_<uint8_t>* fwf(dli* fwg);
static dli* fwr(dli* fws, Array_<uint8_t>* fwt, int64_t* fwu);
static gb* dlq(int64_t fww /*kind*/, Array_<char16_t>* fwx /*parentClass*/);
static gc* dmb();
static ge* dmi(fx* gab /*block_*/);
static gd* drg();
static void drl(gd* gdk /*ast*/, int64_t gdl /*typeId*/, ga* gdm /*pos*/);
static void dsr();
static void dsy(fx* gff /*ast*/, int64_t gfg /*typeId*/, ga* gfh /*pos*/);
static gd* dys(gd* gfi /*ast*/);
static bool eds(gc* ggp /*type1*/, gc* ggq /*type2*/, bool ggr /*strict*/);
static bvt* edv(gd* giv /*enumElement*/, gc* giw /*type*/);
static void eek(ul* giz /*ast*/);
static void eem(brc* gji /*ast*/);
static void eeo(bqw* gkk /*ast*/, bqw* gkl /*parent*/);
static gd* efs(eft* gkq /*ast*/);
static void gmh(eft* gmi);
static eft* gmj(eft* gmk);
static Array_<uint8_t>* gmm(eft* gmn);
static eft* gnc(eft* gnd, Array_<uint8_t>* gne, int64_t* gnf);
static gd* efv(byf* gnh /*ast*/);
static gd* efx(efy* gwc /*ast*/);
static void gxc(efy* gxd);
static efy* gxe(efy* gxf);
static Array_<uint8_t>* gxh(efy* gxi);
static efy* gxy(efy* gxz, Array_<uint8_t>* gya, int64_t* gyb);
static gd* ega(egb* gyd /*ast*/);
static void gyn(egb* gyo);
static egb* gyp(egb* gyq);
static Array_<uint8_t>* gys(egb* gyt);
static egb* gzh(egb* gzi, Array_<uint8_t>* gzj, int64_t* gzk);
static gd* egd(ege* gzm /*ast*/);
static void hal(ege* ham);
static ege* han(ege* hao);
static Array_<uint8_t>* haq(ege* har);
static ege* hbg(ege* hbh, Array_<uint8_t>* hbi, int64_t* hbj);
static gd* egg(egh* hbl /*ast*/);
static void her(egh* hes);
static egh* het(egh* heu);
static Array_<uint8_t>* hew(egh* hex);
static egh* hfn(egh* hfo, Array_<uint8_t>* hfp, int64_t* hfq);
static gd* egj(egk* hfs /*ast*/);
static void hgd(egk* hge);
static egk* hgf(egk* hgg);
static Array_<uint8_t>* hgi(egk* hgj);
static egk* hgy(egk* hgz, Array_<uint8_t>* hha, int64_t* hhb);
static gd* egm(egn* hhd /*ast*/);
static void hhn(egn* hho);
static egn* hhp(egn* hhq);
static Array_<uint8_t>* hhs(egn* hht);
static egn* hij(egn* hik, Array_<uint8_t>* hil, int64_t* him);
static gd* egp(bvb* hio /*ast*/);
static gd* egr(egs* hkv /*ast*/);
static void hli(egs* hlj);
static egs* hlk(egs* hll);
static Array_<uint8_t>* hln(egs* hlo);
static egs* hmd(egs* hme, Array_<uint8_t>* hmf, int64_t* hmg);
static gd* egu(egv* hmi /*ast*/);
static void hqe(egv* hqf);
static egv* hqg(egv* hqh);
static Array_<uint8_t>* hqj(egv* hqk);
static egv* hra(egv* hrb, Array_<uint8_t>* hrc, int64_t* hrd);
static gd* egx(bvu* hrf /*ast*/);
static gd* egz(bvt* hri /*ast*/);
static gd* ehb(ehc* hrl /*ast*/);
static void hro(ehc* hrp);
static ehc* hrq(ehc* hrr);
static Array_<uint8_t>* hrt(ehc* hru);
static ehc* hsi(ehc* hsj, Array_<uint8_t>* hsk, int64_t* hsl);
static gd* ehe(ehf* hsn /*ast*/);
static void hsq(ehf* hsr);
static ehf* hss(ehf* hst);
static Array_<uint8_t>* hsv(ehf* hsw);
static ehf* htk(ehf* htl, Array_<uint8_t>* htm, int64_t* htn);
static gd* ehh(ehi* htp /*ast*/);
static void hts(ehi* htt);
static ehi* htu(ehi* htv);
static Array_<uint8_t>* htx(ehi* hty);
static ehi* hum(ehi* hun, Array_<uint8_t>* huo, int64_t* hup);
static gd* ehk(ehl* hur /*ast*/);
static void hwz(ehl* hxa);
static ehl* hxb(ehl* hxc);
static Array_<uint8_t>* hxe(ehl* hxf);
static ehl* hxt(ehl* hxu, Array_<uint8_t>* hxv, int64_t* hxw);
static void hxy(ejc* hxz);
static ejc* hya(ejc* hyb);
static Array_<uint8_t>* hyd(ejc* hye);
static ejc* hyq(ejc* hyr, Array_<uint8_t>* hys, int64_t* hyt);
static void ejd(bgn* hyv /*ast*/);
static bvu* eju(gc* hyy /*type*/, ga* hyz /*pos*/);
static ge* ekc(clz* hzn /*ast*/, gc* hzo /*retType*/, fw* hzp /*parentFunc*/);
static ge* eke(cmd* iba /*ast*/, gc* ibb /*retType*/, fw* ibc /*parentFunc*/);
static ge* ekg(cmh* ice /*ast*/, gc* icf /*retType*/, fw* icg /*parentFunc*/);
static ge* eki(cml* icn /*ast*/, gc* ico /*retType*/, fw* icp /*parentFunc*/);
static ge* ekk(bty* idg /*ast*/, gc* idh /*retType*/, fw* idi /*parentFunc*/);
static ge* ekm(cmq* ieb /*ast*/);
static ge* eko(bua* ieg /*ast*/, gc* ieh /*retType*/, fw* iei /*parentFunc*/);
static ge* ekq(cmv* iel /*ast*/, gc* iem /*retType*/);
static ge* eks(buy* iez /*ast*/);
static ge* eku(ge* igj /*ast*/, gc* igk /*retType*/, fw* igl /*parentFunc*/);
static ge* ekw(ge* igq /*ast*/, gc* igr /*retType*/, fw* igs /*parentFunc*/);
static ge* eky(cne* igx /*ast*/);
static bool ele(gc* ihe /*type*/);
static void ihf(elj* ihg);
static elj* ihh(elj* ihi);
static Array_<uint8_t>* ihk(elj* ihl);
static elj* ihw(elj* ihx, Array_<uint8_t>* ihy, int64_t* ihz);
template<typename T_, typename C_> static void elx(T_ iib /*me_*/, Array_<int64_t>* iic /*type*/, C_ iid /*value*/);
static char16_t emb(char16_t iie /*me_*/, int64_t iif /*n*/);
static void etj(gd* iig /*ast*/);
static bool ewg(gc* ijs /*type*/);
static bool ewh(gc* ijt /*type*/);
static Array_<char16_t>* fdi(gc* iju /*type*/);
static void flw(gd* ijw /*ast*/);
static bool fob(gc* ili /*type*/);
static Array_<char16_t>* fpg(gc* ilo /*type*/);
static bool frk(gc* ilq /*type*/);
template<typename T_, typename R_> static R_ fsp(T_ ilr /*me_*/, Array_<int64_t>* ils /*type*/);
static bool fur(Array_<char16_t>* ilt /*name*/);
static ge* gao(int64_t ime /*row*/, int64_t imf /*col*/, fx* img /*block_*/);
static ge* gaq();
static ge* gas();
static ge* gau();
static ge* gaw();
static ge* gay();
static ge* gba();
static ge* gbc();
static ge* gbe(int64_t iol /*row*/, int64_t iom /*col*/, fx* ion /*block_*/);
static ge* gbg(int64_t ior /*row*/, int64_t ios /*col*/, fx* iot /*block_*/);
static ge* gbi(int64_t iox /*row*/, int64_t ioy /*col*/);
static ge* gbk(int64_t ipr /*row*/, int64_t ips /*col*/, fx* ipt /*block_*/);
static ge* gbm(int64_t iqr /*row*/, int64_t iqs /*col*/, fx* iqt /*block_*/);
static ge* gbo();
static ge* gbq(int64_t irr /*row*/, int64_t irs /*col*/);
static ge* gbs(int64_t isl /*row*/, int64_t ism /*col*/);
static ge* gbu(int64_t itc /*row*/, int64_t itd /*col*/, fx* ite /*block_*/);
static ge* gbw(int64_t iui /*row*/, int64_t iuj /*col*/, fx* iuk /*block_*/);
static ge* gby();
static ge* gca();
static ge* gcc();
static ge* gce();
static ge* gcg();
static ge* gci();
static ge* gck();
static gd* gcp();
static char16_t gdz();
static uint64_t giy(ehf* iwk /*ast*/, brc* iwl /*enum_*/);
static void gjg(ul* iwu /*ast*/, fw** iwv /*dtor*/, fw** iww /*copy*/, fw** iwx /*toBin*/, fw** iwy /*fromBin*/);
static void gjh(ul* jbc /*ast*/, fw* jbd /*dtor*/, fw* jbe /*copy*/, fw* jbf /*toBin*/, fw* jbg /*fromBin*/);
static bool glc(gc* jgh /*type*/);
static bool gls(gc* jgi /*type*/);
static bool gos(gc* jgj /*type*/, bool jgk /*lessOrGreater*/);
static int64_t gqm(Array_<char16_t>* jgp /*s1*/, Array_<char16_t>* jgq /*s2*/);
static uint64_t gub(int64_t jgw /*size*/, uint64_t jgx /*n*/);
static Array_<char16_t>* hkc(gc* jhe /*type*/);
static bool hnq(Array_<char16_t>** jjc /*member*/, gc* jjd /*type*/);
static gd* ifz(List_<ge*>* jnk /*stats*/, gd* jnl /*ast*/, ga* jnm /*pos*/);
static void iik(eft* jny /*ast*/);
static void iim(byf* joh /*ast*/);
static void iio(efy* jqe /*ast*/);
static void iiq(egb* jqf /*ast*/);
static void iis(ege* jqw /*ast*/);
static void iiu(egh* jra /*ast*/);
static void iiw(egk* jrq /*ast*/);
static void iiy(egn* jrr /*ast*/);
static void ija(bvb* jrs /*ast*/);
static void ijc(egs* jtr /*ast*/);
static void ije(egv* jts /*ast*/);
static void ijg(bvu* jub /*ast*/);
static void iji(bvt* juc /*ast*/);
static void ijk(ehc* jur /*ast*/);
static void ijm(ehi* jvb /*ast*/);
static void ijo(ehl* jvh /*ast*/);
static void ijq(gd* jvk /*ast*/);
static void ika(eft* jwd /*ast*/);
static void ikc(byf* jxc /*ast*/);
static void ike(efy* jzn /*ast*/);
static void ikg(egb* jzo /*ast*/);
static void iki(ege* kae /*ast*/);
static void ikk(egh* kba /*ast*/);
static void ikm(egk* kcb /*ast*/);
static void iko(egn* kcc /*ast*/);
static void ikq(bvb* kcd /*ast*/);
static void iks(egs* keh /*ast*/);
static void iku(egv* kel /*ast*/);
static void ikw(bvu* keu /*ast*/);
static void iky(bvt* kev /*ast*/);
static void ila(ehc* kfk /*ast*/);
static void ilc(ehi* kfu /*ast*/);
static void ile(ehl* kfz /*ast*/);
static void ilg(gd* kgo /*ast*/);
template<typename T_, typename C_> static int64_t imd(T_ khi /*me_*/, Array_<int64_t>* khj /*type*/, C_ khk /*item*/);
static void khl(inl* khm);
static inl* khn(inl* kho);
static Array_<uint8_t>* khq(inl* khr);
static inl* kid(inl* kie, Array_<uint8_t>* kif, int64_t* kig);
static void kii(inp* kij);
static inp* kik(inp* kil);
static Array_<uint8_t>* kin(inp* kio);
static inp* kja(inp* kjb, Array_<uint8_t>* kjc, int64_t* kjd);
static void kjf(ins* kjg);
static ins* kjh(ins* kji);
static Array_<uint8_t>* kjk(ins* kjl);
static ins* kjx(ins* kjy, Array_<uint8_t>* kjz, int64_t* kka);
static void kkc(inw* kkd);
static inw* kke(inw* kkf);
static Array_<uint8_t>* kkh(inw* kki);
static inw* kku(inw* kkv, Array_<uint8_t>* kkw, int64_t* kkx);
static void kkz(inz* kla);
static inz* klb(inz* klc);
static Array_<uint8_t>* kle(inz* klf);
static inz* klr(inz* kls, Array_<uint8_t>* klt, int64_t* klu);
static void ioc(fx* klw /*ast*/);
static void iod(fx* klz /*ast*/);
static bua* ioh(ge** kme /*outStat*/, int64_t* kmf /*outTypeId*/, int64_t kmg /*typeId*/, fx* kmh /*block_*/);
static gb* ipa(ga* koh /*pos*/);
static bvt* irz(ga* koj /*pos*/, int64_t kok /*kind*/, uint64_t kol /*value*/);
static gd* ivr();
static fw* jah(ul* kpb /*class_*/, Array_<char16_t>* kpc /*name*/);
static egv* jbs(ul* kpt /*class_*/, gb* kpu /*arg*/, Array_<char16_t>* kpv /*name*/);
static Array_<char16_t>* jwl(gc* kqb /*type*/);
static gd* koq();
static List_<int64_t>* kqf(gc* kqz /*type*/);
static gd* kqo();
static void krb(gc* ksr /*type*/, List_<int64_t>* kss /*output*/);
static gd* krd();
static gd* kub();
static gd* kun();
static gd* kvc();
static gd* kvt();
static gd* kxc();
static gd* kxn();
static ehc* laf(ga* ldl /*pos*/, Array_<char16_t>* ldm /*value*/);
static char16_t lam(char16_t lds /*c*/);
static void lek(lcp* lel);
static lcp* lem(lcp* len);
static Array_<uint8_t>* lep(lcp* leq);
static lcp* lfb(lcp* lfc, Array_<uint8_t>* lfd, int64_t* lfe);
static gd* lct(int64_t lfg /*row*/, int64_t lfh /*col*/, char16_t lfi /*c*/);
static ehi* ldc(ga* lis /*pos*/, double lit /*value*/);
static double lhj(Array_<char16_t>* lix /*me_*/, bool* liy /*success*/);
static uint64_t lid(Array_<char16_t>* liz /*me_*/, bool* lja /*success*/);
static int64_t classTable_[152];
static int64_t argc_;
static char** argv_;
static int64_t m;
static bool s;
static bool x;
static Array_<char16_t>* y;
static bool af;
static Dict_<Array_<char16_t>*, fx*>* ah;
static Dict_<Array_<char16_t>*, int64_t>* ai;
static Queue_<fw*>* aj;
static Queue_<ul*>* ak;
static Array_<char16_t>* al;
static List_<Array_<char16_t>*>* am;
static List_<Array_<char16_t>*>* an;
static List_<Array_<char16_t>*>* ao;
static List_<Array_<char16_t>*>* ap;
static List_<un*>* aq;
static List_<gb*>* ar;
static List_<gb*>* as;
static List_<Array_<char16_t>*>* at;
static Array_<char16_t>* au;
static Array_<char16_t>* av;
static Array_<char16_t>* aw;
static Dict_<Array_<char16_t>*, bool>* ax;
static Array_<char16_t>* ay;
static Array_<char16_t>* az;
static Array_<char16_t>* ba;
static Array_<Array_<char16_t>*>* bb;
static Dict_<Array_<char16_t>*, fx*>* bc;
static Dict_<Array_<char16_t>*, fx*>* bd;
static auz* be;
static Array_<char16_t>* bf;
static Stack_<fx*>* bg;
static List_<avl*>* bh;
static Queue_<fw*>* bi;
static Queue_<ul*>* bj;
static Array_<char16_t>* bk;
static List_<Array_<char16_t>*>* bl;
static List_<va*>* bm;
static List_<gb*>* bn;
static List_<gb*>* bo;
static bool cv;
static bool dp;
static int64_t ec;
static int64_t en;
static int64_t fr;
static int64_t uo;
static int64_t avc;
static int64_t avd;
static char16_t ave;
static char16_t avf;
static bool avg;
static int64_t avh;
fz::fz(): Class_(){
Y = 0;
kx(this);
}
int64_t fz::cmp_(Class_* t){
fz* u = reinterpret_cast<fz*>(t);
return lb(this, u);
}
Class_* fz::copy_(Class_* t){
return le(this);
}
fy::fy(): fz(), lw(){
Y = 2;
}
Class_* fy::copy_(Class_* t){
return lt(this);
}
ga::ga(): fz(), hk(), hl(), hm(){
Y = 6;
}
Class_* ga::copy_(Class_* t){
return mo(this);
}
fx::fx(): fy(), ne(), nf(), ng(), nh(), ni(), nj(), nk(), no(){
Y = 4;
}
int64_t fx::cmp_(Class_* t){
fx* u = reinterpret_cast<fx*>(t);
return mg(this, u);
}
Class_* fx::copy_(Class_* t){
return nl(this);
}
gc::gc(): fx(){
Y = 12;
}
Class_* gc::copy_(Class_* t){
return oi(this);
}
gd::gd(): fx(), pf(), pj(){
Y = 14;
}
Class_* gd::copy_(Class_* t){
return pg(this);
}
gb::gb(): fx(), qk(), ql(), qf(), qg(){
Y = 10;
}
Class_* gb::copy_(Class_* t){
return qh(this);
}
ge::ge(): fx(){
Y = 16;
}
Class_* ge::copy_(Class_* t){
return rj(this);
}
fw::fw(): fx(), sm(), sf(), sg(), sh(), si(){
Y = 8;
}
Class_* fw::copy_(Class_* t){
return sj(this);
}
gj::gj(): fz(), gk(){
Y = 18;
}
Class_* gj::copy_(Class_* t){
return tl(this);
}
kl::kl(): fz(), km(){
Y = 20;
}
int64_t kl::cmp_(Class_* t){
kl* u = reinterpret_cast<kl*>(t);
return atm(this, u);
}
Class_* kl::copy_(Class_* t){
return atu(this);
}
um::um(): fz(), azq(), azr(), azl(), azm(){
Y = 24;
}
Class_* um::copy_(Class_* t){
return azn(this);
}
ul::ul(): fx(), bag(){
Y = 22;
}
Class_* ul::copy_(Class_* t){
return bah(this);
}
un::un(): fz(), bbe(), bbf(){
Y = 26;
}
Class_* un::copy_(Class_* t){
return bbg(this);
}
va::va(): fz(), bij(), bik(){
Y = 28;
}
Class_* va::copy_(Class_* t){
return bil(this);
}
auz::auz(): fz(), bni(), boz(), bpa(), bpb(){
Y = 30;
}
Class_* auz::copy_(Class_* t){
return bow(this);
}
avl::avl(): fz(), awk(), axf(){
Y = 34;
}
Class_* avl::copy_(Class_* t){
return bro(this);
}
avk::avk(): fx(), aza(), awd(){
Y = 32;
}
Class_* avk::copy_(Class_* t){
return bsd(this);
}
bby::bby(): fy(), bee(), bzd(), bzg(), bfy(), bca(), bzj(), bzk(){
Y = 36;
}
Class_* bby::copy_(Class_* t){
return bzn(this);
}
bgn::bgn(): fx(), bgp(){
Y = 38;
}
Class_* bgn::copy_(Class_* t){
return con(this);
}
bhv::bhv(): fz(), cps(){
Y = 40;
}
Class_* bhv::copy_(Class_* t){
return crh(this);
}
bjb::bjb(): fy(), bjr(), csq(), bjd(){
Y = 42;
}
Class_* bjb::copy_(Class_* t){
return csu(this);
}
bqt::bqt(): fx(), brj(){
Y = 44;
}
Class_* bqt::copy_(Class_* t){
return dmw(this);
}
bqw::bqw(): fx(), dns(){
Y = 46;
}
Class_* bqw::copy_(Class_* t){
return dnv(this);
}
brc::brc(): fx(), dqo(){
Y = 48;
}
Class_* brc::copy_(Class_* t){
return drq(this);
}
btz::btz(): ge(), buj(){
Y = 50;
}
Class_* btz::copy_(Class_* t){
return dtb(this);
}
bua::bua(): btz(), bum(){
Y = 54;
}
Class_* bua::copy_(Class_* t){
return dty(this);
}
buc::buc(): fz(), bvy(), bwd(){
Y = 58;
}
Class_* buc::copy_(Class_* t){
return duw(this);
}
bub::bub(): ge(), bvl(), bvo(){
Y = 56;
}
Class_* bub::copy_(Class_* t){
return dvl(this);
}
bty::bty(): btz(), bun(), buo(), bur(){
Y = 52;
}
Class_* bty::copy_(Class_* t){
return dwj(this);
}
buh::buh(): gc(), bui(){
Y = 60;
}
Class_* buh::copy_(Class_* t){
return dxj(this);
}
buy::buy(): ge(), bvi(){
Y = 62;
}
Class_* buy::copy_(Class_* t){
return dyv(this);
}
bvc::bvc(): fz(), bwq(), bwm(), bwn(){
Y = 66;
}
Class_* bvc::copy_(Class_* t){
return dzs(this);
}
bvb::bvb(): gd(), bvh(), bve(){
Y = 64;
}
Class_* bvb::copy_(Class_* t){
return eai(this);
}
bvu::bvu(): gd(){
Y = 68;
}
Class_* bvu::copy_(Class_* t){
return ebl(this);
}
bvt::bvt(): bvu(), bvv(){
Y = 70;
}
Class_* bvt::copy_(Class_* t){
return ecj(this);
}
byf::byf(): gd(), byg(), byj(), byk(){
Y = 72;
}
Class_* byf::copy_(Class_* t){
return eht(this);
}
can::can(): gc(){
Y = 74;
}
Class_* can::copy_(Class_* t){
return ems(this);
}
cam::cam(): can(), cao(){
Y = 76;
}
Class_* cam::copy_(Class_* t){
return eno(this);
}
caq::caq(): gc(), car(){
Y = 78;
}
Class_* caq::copy_(Class_* t){
return eol(this);
}
cav::cav(): fz(), cbk(), cbm(){
Y = 82;
}
Class_* cav::copy_(Class_* t){
return epi(this);
}
cau::cau(): can(), eqb(), epx(), cbc(), cax(){
Y = 80;
}
Class_* cau::copy_(Class_* t){
return epy(this);
}
cbr::cbr(): can(), cbu(), cbw(){
Y = 84;
}
Class_* cbr::copy_(Class_* t){
return eqz(this);
}
ccc::ccc(): can(), ccd(), cce(){
Y = 86;
}
Class_* ccc::copy_(Class_* t){
return erx(this);
}
cma::cma(): ge(), etp(), etq(){
Y = 90;
}
Class_* cma::copy_(Class_* t){
return ety(this);
}
clz::clz(): btz(), ete(), etg(), etm(), ets(){
Y = 88;
}
Class_* clz::copy_(Class_* t){
return euw(this);
}
cme::cme(): ge(), ewo(), exc(){
Y = 94;
}
Class_* cme::copy_(Class_* t){
return eyk(this);
}
cmd::cmd(): btz(), ewf(), ewk(), exe(){
Y = 92;
}
Class_* cmd::copy_(Class_* t){
return ezi(this);
}
cmi::cmi(): btz(){
Y = 96;
}
Class_* cmi::copy_(Class_* t){
return fbf(this);
}
cmh::cmh(): cmi(), fal(), fat(), fan(){
Y = 98;
}
Class_* cmh::copy_(Class_* t){
return fcc(this);
}
cml::cml(): cmi(), fdk(), fdj(), fdl(), fdq(){
Y = 100;
}
Class_* cml::copy_(Class_* t){
return fdx(this);
}
cmq::cmq(): ge(), fgh(){
Y = 102;
}
Class_* cmq::copy_(Class_* t){
return fgk(this);
}
cmv::cmv(): ge(), fhn(){
Y = 104;
}
Class_* cmv::copy_(Class_* t){
return fhs(this);
}
cne::cne(): ge(), fjb(){
Y = 106;
}
Class_* cne::copy_(Class_* t){
return fje(this);
}
dli::dli(): can(){
Y = 108;
}
Class_* dli::copy_(Class_* t){
return fwc(this);
}
eft::eft(): gd(), gkz(), gkt(){
Y = 110;
}
Class_* eft::copy_(Class_* t){
return gmj(this);
}
efy::efy(): gd(), gwf(), gwi(), gwl(){
Y = 112;
}
Class_* efy::copy_(Class_* t){
return gxe(this);
}
egb::egb(): gd(), gyg(){
Y = 114;
}
Class_* egb::copy_(Class_* t){
return gyp(this);
}
ege::ege(): gd(), gzr(), haa(){
Y = 116;
}
Class_* ege::copy_(Class_* t){
return han(this);
}
egh::egh(): gd(), hbw(), hbo(), hbr(){
Y = 118;
}
Class_* egh::copy_(Class_* t){
return het(this);
}
egk::egk(): gd(), hfv(), hgb(){
Y = 120;
}
Class_* egk::copy_(Class_* t){
return hgf(this);
}
egn::egn(): gd(), hhg(), hhl(), hhm(){
Y = 122;
}
Class_* egn::copy_(Class_* t){
return hhp(this);
}
egs::egs(): gd(), hky(), hld(){
Y = 124;
}
Class_* egs::copy_(Class_* t){
return hlk(this);
}
egv::egv(): gd(), hjg(), hmw(), hnj(){
Y = 126;
}
Class_* egv::copy_(Class_* t){
return hqg(this);
}
ehc::ehc(): bvu(), gqn(){
Y = 128;
}
Class_* ehc::copy_(Class_* t){
return hrq(this);
}
ehf::ehf(): bvu(), goz(){
Y = 130;
}
Class_* ehf::copy_(Class_* t){
return hss(this);
}
ehi::ehi(): bvu(), glp(){
Y = 132;
}
Class_* ehi::copy_(Class_* t){
return htu(this);
}
ehl::ehl(): gd(), hjp(){
Y = 134;
}
Class_* ehl::copy_(Class_* t){
return hxb(this);
}
ejc::ejc(): ge(), eje(){
Y = 136;
}
Class_* ejc::copy_(Class_* t){
return hya(this);
}
elj::elj(): gc(){
Y = 138;
}
Class_* elj::copy_(Class_* t){
return ihh(this);
}
inl::inl(): ge(), inm(){
Y = 140;
}
Class_* inl::copy_(Class_* t){
return khn(this);
}
inp::inp(): ge(), inq(){
Y = 142;
}
Class_* inp::copy_(Class_* t){
return kik(this);
}
ins::ins(): ge(), inu(){
Y = 144;
}
Class_* ins::copy_(Class_* t){
return kjh(this);
}
inw::inw(): ge(), inx(){
Y = 146;
}
Class_* inw::copy_(Class_* t){
return kke(this);
}
inz::inz(): ge(), ioa(){
Y = 148;
}
Class_* inz::copy_(Class_* t){
return klb(this);
}
lcp::lcp(): gc(){
Y = 150;
}
Class_* lcp::copy_(Class_* t){
return lem(this);
}
// $
static void a(){
int64_t c; // $
try{
try{
(e)();
(f)();
(g)();
(i)();
(j)();
}catch(int64_t c){
if((0LL) <= c && c <= (4294967295LL)){
(l)((c));
}
else{
throw;
}
}
}
catch(...){
(i)();
(j)();
throw;
}
}
// _init
static void e(){
}
// _initVars
static void f(){
(m) = (0LL);
}
// main
static void g(){
if(!((o)())){
(q)((1LL));
return;
}
if(s){
(u)((((new Array_<char16_t>(28, u'\u004B', u'\u0075', u'\u0069', u'\u006E', u'\u0020', u'\u0050', u'\u0072', u'\u006F', u'\u0067', u'\u0072', u'\u0061', u'\u006D', u'\u006D', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u004C', u'\u0061', u'\u006E', u'\u0067', u'\u0075', u'\u0061', u'\u0067', u'\u0065', u'\u0020', u'\u0076', u'\u002E'))->Cat(v<int64_t>((2019LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<int64_t>((10LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<int64_t>((17LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))))));
(u)((new Array_<char16_t>(14, u'\u0028', u'\u0043', u'\u0029', u'\u004B', u'\u0075', u'\u0069', u'\u006E', u'\u0061', u'\u002D', u'\u0063', u'\u0068', u'\u0061', u'\u006E', u'\u000A')));
(q)((0LL));
return;
}
if((x) || (eqAddr_((y), (nullptr)))){
(u)((new Array_<char16_t>(128, u'\u0055', u'\u0073', u'\u0061', u'\u0067', u'\u0065', u'\u003A', u'\u0020', u'\u006B', u'\u0075', u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0020', u'\u005B', u'\u002D', u'\u0069', u'\u0020', u'\u0069', u'\u006E', u'\u0070', u'\u0075', u'\u0074', u'\u002E', u'\u006B', u'\u006E', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u006F', u'\u0020', u'\u006F', u'\u0075', u'\u0074', u'\u0070', u'\u0075', u'\u0074', u'\u002E', u'\u006B', u'\u006E', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0073', u'\u0020', u'\u0027', u'\u0073', u'\u0079', u'\u0073', u'\u0027', u'\u0020', u'\u0064', u'\u0069', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006F', u'\u0072', u'\u0079', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0063', u'\u0020', u'\u0069', u'\u0063', u'\u006F', u'\u006E', u'\u002E', u'\u0069', u'\u0063', u'\u006F', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0065', u'\u0020', u'\u0065', u'\u006E', u'\u0076', u'\u0069', u'\u0072', u'\u006F', u'\u006E', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0061', u'\u0020', u'\u0061', u'\u0070', u'\u0070', u'\u0063', u'\u006F', u'\u0064', u'\u0065', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0072', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0068', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0076', u'\u005D', u'\u0020', u'\u005B', u'\u002D', u'\u0071', u'\u005D', u'\u000A')));
(q)((0LL));
return;
}
if((ab)()){
(ad)((196609LL), (nullptr), (nullptr));
(q)((0LL));
return;
}
if(!(af)){
(ad)((196610LL), (nullptr), (nullptr));
}
(q)((1LL));
}
// _finVars
static void i(){
(ah) = (nullptr);
(ai) = (nullptr);
(aj) = (nullptr);
(ak) = (nullptr);
(al) = (nullptr);
(am) = (nullptr);
(an) = (nullptr);
(ao) = (nullptr);
(ap) = (nullptr);
(aq) = (nullptr);
(ar) = (nullptr);
(as) = (nullptr);
(at) = (nullptr);
(y) = (nullptr);
(au) = (nullptr);
(av) = (nullptr);
(aw) = (nullptr);
(ax) = (nullptr);
(ay) = (nullptr);
(az) = (nullptr);
(ba) = (nullptr);
(bb) = (nullptr);
(bc) = (nullptr);
(bd) = (nullptr);
(be) = (nullptr);
(bf) = (nullptr);
(bg) = (nullptr);
(bh) = (nullptr);
(bi) = (nullptr);
(bj) = (nullptr);
(bk) = (nullptr);
(bl) = (nullptr);
(bm) = (nullptr);
(bn) = (nullptr);
(bo) = (nullptr);
}
// _fin
static void j(){
}
// _err
static void l(int64_t bp /*excpt*/){
}
// acquireOption
static bool o(){
Array_<Array_<char16_t>*>* bq; // cmdLines
Array_<char16_t>* bs; // envStr
Array_<char16_t>* bt; // appCodeStr
int64_t bx;
Array_<char16_t>* bz; // cmdLine
char16_t ce;
Array_<char16_t>* ds; // extra
Array_<char16_t>* ef;
bool eq; // success
int64_t by;
(bq) = ((br)());
(bs) = (nullptr);
(bt) = (nullptr);
(ax) = (new Dict_<Array_<char16_t>*, bool>());
for(bx = (0LL), by = (((bq)->Len()) - (1LL)); bx <= by; bx += (1LL)){
(bz) = ((bq)->At(bx));
if((((bz)->Len()) == (2LL)) && (((bz)->At(0LL)) == (u'\u002D'))){
ce = (bz)->At(1LL);
switch(ce){
case u'\u0069':
if(!((ch)((&y), (bq), (&bx), (ce)))){
return false;
}
break;
case u'\u006F':
if(!((ch)((&au), (bq), (&bx), (ce)))){
return false;
}
break;
case u'\u0073':
if(!((ch)((&av), (bq), (&bx), (ce)))){
return false;
}
break;
case u'\u0063':
if(!((ch)((&aw), (bq), (&bx), (ce)))){
return false;
}
break;
case u'\u0072':
if(!((cu)((&cv), (ce)))){
return false;
}
break;
case u'\u0065':
if(!((ch)((&bs), (bq), (&bx), (ce)))){
return false;
}
break;
case u'\u0068':
if(!((cu)((&x), (ce)))){
return false;
}
break;
case u'\u0076':
if(!((cu)((&s), (ce)))){
return false;
}
break;
case u'\u0071':
if(!((cu)((&af), (ce)))){
return false;
}
break;
case u'\u0061':
if(!((ch)((&bt), (bq), (&bx), (ce)))){
return false;
}
break;
case u'\u0064':
if(!((cu)((&dp), (ce)))){
return false;
}
break;
case u'\u0078':
(ds) = (nullptr);
if(!((ch)((&ds), (bq), (&bx), (ce)))){
return false;
}
dv<Dict_<Array_<char16_t>*, bool>*, Array_<char16_t>*, bool>((ax), (new Array_<int64_t>(1, (0LL))), (ds), (true));
break;
default:
(ad)((2LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(1, u'\u002D'))->Cat(v<char16_t>((ce), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
break;
}
}
else{
(ad)((2LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
}
}
if(eqAddr_((y), (nullptr))){
return true;
}
if(eqAddr_((bs), (nullptr))){
(ec) = (0LL);
}
else{
ef = bs;
if(cmp_(ef, (new Array_<char16_t>(3, u'\u0063', u'\u0075', u'\u0069'))) == 0){
(ec) = (0LL);
}
else if(cmp_(ef, (new Array_<char16_t>(3, u'\u0077', u'\u006E', u'\u0064'))) == 0){
(ec) = (1LL);
}
else if(cmp_(ef, (new Array_<char16_t>(3, u'\u0077', u'\u0065', u'\u0062'))) == 0){
(ec) = (2LL);
}
else if(cmp_(ef, (new Array_<char16_t>(3, u'\u0063', u'\u0070', u'\u0070'))) == 0){
(ec) = (3LL);
}
else{(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(2, u'\u002D', u'\u0065')))));
}
}
if(eqAddr_((bt), (nullptr))){
(en) = ((eo)((1LL), (4294967295LL)));
}
else{
(eq) = (false);
(en) = ((er)((bt), (&eq)));
if(!(eq)){
(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(2, u'\u002D', u'\u0061')))));
return false;
}
}
if(eqAddr_((au), (nullptr))){
(au) = (((ew)((y)))->Cat(new Array_<char16_t>(3, u'\u006F', u'\u0075', u'\u0074')));
}
else{
(au) = ((ey)((au)));
}
if(eqAddr_((av), (nullptr))){
(av) = (new Array_<char16_t>(4, u'\u0073', u'\u0079', u'\u0073', u'\u002F'));
}
if(eqAddr_((aw), (nullptr))){
(aw) = ((av)->Cat(new Array_<char16_t>(11, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u002E', u'\u0069', u'\u0063', u'\u006F')));
}
(ay) = ((ew)((y)));
(az) = ((ey)(((fd)((y)))));
(ba) = ((ew)((au)));
if(cmp_(((ff)((y))), (new Array_<char16_t>(2, u'\u006B', u'\u006E'))) != 0){
(ad)((3LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (az))));
}
return true;
}
// exitCode
static void q(int64_t fh /*code*/){
if(((fh) < (0LL)) || ((4294967295LL) < (fh))){
throw 3910598662LL;
}
}
// print
static void u(Array_<char16_t>* fm /*str*/){
if(fm == nullptr){
std::cout << "(null)";
return;
}
std::u16string s_ = fm->B;
const std::string& t_ = utf16ToUtf8_(s_);
std::cout << t_ << std::flush;
}
// _toStr
template<typename T_> static Array_<char16_t>* v(T_ fn /*me_*/, Array_<int64_t>* fo /*type*/){
return toStr_(fn);
}
// build
static bool ab(){
Dict_<Array_<char16_t>*, fx*>* fp; // asts
fw* fq; // entry
int64_t fs; // beginTime
Array_<char16_t>* gh; // resDir
gj* gi; // resFiles
int64_t gr;
(fp) = (nullptr);
(fq) = (nullptr);
(fr) = (0LL);
(fs) = ((ft)());
(ad)((196611LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((ft)()) - (fs))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
(fp) = ((fu)());
(ad)((196612LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((ft)()) - (fs))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
(fq) = ((fv)((fp)));
(ad)((196613LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((ft)()) - (fs))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
if((fr) > (0LL)){
return false;
}
(gh) = ((ay)->Cat(new Array_<char16_t>(4, u'\u0072', u'\u0065', u'\u0073', u'\u002F')));
(gi) = (new gj());
((gi)->gk) = (new List_<Array_<char16_t>*>());
if((gm)((gh))){
(go)((gh), (true), (gp), (gi));
}
gr = ec;
switch(gr){
case 3LL:
if(!((gu)((fq), ((gi)->gk)))){
return false;
}
break;
case 2LL:
if(!((gy)((fq), ((gi)->gk)))){
return false;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(ad)((196614LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (v<double>(((static_cast<double>(((ft)()) - (fs))) / (1000.0)), (new Array_<int64_t>(1, (0LL))))))));
return true;
}
// err
static void ad(int64_t hb /*id*/, ga* hc /*pos*/, Array_<Array_<char16_t>*>* hd /*args*/){
Array_<char16_t>* hg; // msg
if(((hb) < (196608LL)) && ((fr) >= (100LL))){
return;
}
(hg) = ((hh)((hb), (hd)));
(u)(((v<uint32_t>((static_cast<uint32_t>(hb)), (new Array_<int64_t>(1, (0LL)))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u0020'))));
if(!eqAddr_((hc), (nullptr))){
(u)((((new Array_<char16_t>(1, u'\u005B'))->Cat(v<Array_<char16_t>*>(((hc)->hk), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003A', u'\u0020'))->Cat(v<int64_t>(((hc)->hl), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<int64_t>(((hc)->hm), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u005D'))))));
}
(u)(((hg)->Cat(new Array_<char16_t>(1, u'\u000A'))));
if((hb) < (196608LL)){
(fr) = ((fr) + (1LL));
}
}
// cmdLine
static Array_<Array_<char16_t>*>* br(){
Array_<Array_<char16_t>*>* a_ = new Array_<Array_<char16_t>*>();
a_->L = argc_;
a_->B = new Array_<char16_t>*[static_cast<size_t>(argc_)];
for (int64_t i_ = 0; i_ < argc_; i_++){
std::string s_ = argv_[i_];
const std::u16string t_ = utf8ToUtf16_(s_);
a_->B[i_] = new Array_<char16_t>();
a_->B[i_]->L = static_cast<int64_t>(t_.size());
a_->B[i_]->B = new char16_t[t_.size() + 1];
std::memcpy(a_->B[i_]->B, t_.c_str(), sizeof(char16_t) * (t_.size() + 1));
}
return a_;
}
// getArg1
static bool ch(Array_<char16_t>** hq /*out*/, Array_<Array_<char16_t>*>* hr /*cmdLines*/, int64_t* hs /*idx*/, char16_t ht /*option*/){
if((!eqAddr_((*hq), (nullptr))) || (((*hs) + (1LL)) >= ((hr)->Len()))){
(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(1, u'\u002D'))->Cat(v<char16_t>((ht), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
}
(*hq) = ((hr)->At((*hs) + (1LL)));
(*hs) = ((*hs) + (1LL));
return true;
}
// getArg0
static bool cu(bool* hx /*out*/, char16_t hy /*option*/){
if((*hx) != (false)){
(ad)((1LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (((new Array_<char16_t>(1, u'\u002D'))->Cat(v<char16_t>((hy), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
return false;
}
(*hx) = (true);
return true;
}
// _addDict
template<typename T_, typename K_, typename V_> static void dv(T_ ib /*me_*/, Array_<int64_t>* ic /*type*/, K_ id /*key*/, V_ ie /*item*/){
ib->Add(id, ie);
}
// rnd
static int64_t eo(int64_t ig /*min*/, int64_t ih /*max*/){
return rnd_(ig, ih);
}
// _toInt
static int64_t er(Array_<char16_t>* ii /*me_*/, bool* ij /*success*/){
std::u16string s_ = ii->B;
const std::string& t_ = utf16ToUtf8_(s_);
try{
size_t s_;
int64_t v_ = t_.size() > 2 && t_[0] == '0' && t_[1] == 'x' ? std::stoll(t_, &s_, 16) : std::stoull(t_, &s_);
if(s_ == t_.size()){
*ij = true;
return v_;
}else{
*ij = false;
return 0;
}
}catch(...){
*ij = false;
return 0;
}
}
// dir
static Array_<char16_t>* ew(Array_<char16_t>* ik /*path*/){
int64_t il; // p
Array_<char16_t>* ir; // r
int64_t iv;
int64_t iw;
if(!(!eqAddr_((ik), (nullptr)))){
throw 0xE9170000U;
}
(il) = (((ik)->Len()) - (1LL));
while((((il) >= (0LL)) && (((ik)->At(il)) != (u'\u002F'))) && (((ik)->At(il)) != (u'\u005C'))){
(il) = ((il) - (1LL));
}
if((il) < (0LL)){
return new Array_<char16_t>(2, u'\u002E', u'\u002F');
}
else{
(ir) = (newArray_<char16_t, Array_<char16_t>*>(1, ((il) + (1LL))));
for(iv = (0LL), iw = (il); iv <= iw; iv += (1LL)){
((ir)->At(iv)) = ((((ik)->At(iv)) == (u'\u005C')) ? (u'\u002F') : ((ik)->At(iv)));
}
return ir;
}
}
// delExt
static Array_<char16_t>* ey(Array_<char16_t>* ix /*path*/){
int64_t iy; // p
Array_<char16_t>* jd; // r
int64_t jh;
int64_t ji;
if(!(!eqAddr_((ix), (nullptr)))){
throw 0xE9170000U;
}
(iy) = (((ix)->Len()) - (1LL));
while(((((iy) >= (0LL)) && (((ix)->At(iy)) != (u'\u002F'))) && (((ix)->At(iy)) != (u'\u005C'))) && (((ix)->At(iy)) != (u'\u002E'))){
(iy) = ((iy) - (1LL));
}
if(((iy) < (0LL)) || (((ix)->At(iy)) != (u'\u002E'))){
return ix;
}
(jd) = (newArray_<char16_t, Array_<char16_t>*>(1, (iy)));
for(jh = (0LL), ji = ((iy) - (1LL)); jh <= ji; jh += (1LL)){
((jd)->At(jh)) = ((((ix)->At(jh)) == (u'\u005C')) ? (u'\u002F') : ((ix)->At(jh)));
}
return jd;
}
// fileName
static Array_<char16_t>* fd(Array_<char16_t>* jj /*path*/){
int64_t jk; // p
Array_<char16_t>* jq; // r
int64_t ju;
int64_t jv;
if(!(!eqAddr_((jj), (nullptr)))){
throw 0xE9170000U;
}
(jk) = (((jj)->Len()) - (1LL));
while((((jk) >= (0LL)) && (((jj)->At(jk)) != (u'\u002F'))) && (((jj)->At(jk)) != (u'\u005C'))){
(jk) = ((jk) - (1LL));
}
if((jk) < (0LL)){
return jj;
}
(jk) = ((jk) + (1LL));
(jq) = (newArray_<char16_t, Array_<char16_t>*>(1, (((jj)->Len()) - (jk))));
for(ju = (0LL), jv = ((((jj)->Len()) - (jk)) - (1LL)); ju <= jv; ju += (1LL)){
((jq)->At(ju)) = ((jj)->At((jk) + (ju)));
}
return jq;
}
// ext
static Array_<char16_t>* ff(Array_<char16_t>* jw /*path*/){
int64_t jx; // p
Array_<char16_t>* ke; // r
int64_t ki;
int64_t kj;
if(!(!eqAddr_((jw), (nullptr)))){
throw 0xE9170000U;
}
(jx) = (((jw)->Len()) - (1LL));
while(((((jx) >= (0LL)) && (((jw)->At(jx)) != (u'\u002F'))) && (((jw)->At(jx)) != (u'\u005C'))) && (((jw)->At(jx)) != (u'\u002E'))){
(jx) = ((jx) - (1LL));
}
if(((jw)->At(jx)) != (u'\u002E')){
return new Array_<char16_t>(0);
}
else{
(jx) = ((jx) + (1LL));
(ke) = (newArray_<char16_t, Array_<char16_t>*>(1, (((jw)->Len()) - (jx))));
for(ki = (0LL), kj = ((((jw)->Len()) - (jx)) - (1LL)); ki <= kj; ki += (1LL)){
((ke)->At(ki)) = ((jw)->At((jx) + (ki)));
}
return ke;
}
}
// sysTime
static int64_t ft(){
return static_cast<int64_t>(std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::system_clock::now().time_since_epoch()).count());
}
// parse
static Dict_<Array_<char16_t>*, fx*>* fu(){
kl* kk; // endFlag
(bc) = (new Dict_<Array_<char16_t>*, fx*>());
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bc), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u005C'))->Cat(az)), (nullptr));
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bc), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (nullptr));
(kk) = (new kl());
((kk)->km) = (false);
while(!((kk)->km)){
((kk)->km) = (true);
(bd) = (new Dict_<Array_<char16_t>*, fx*>());
ko<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bc), (new Array_<int64_t>(1, (0LL))), (kp), (kk));
(bc) = (bd);
}
return bc;
}
// analyze
static fw* fv(Dict_<Array_<char16_t>*, fx*>* kq /*asts*/){
fw* kr; // mainFunc
(ah) = (kq);
(kr) = ((ks)());
if(eqAddr_((kr), (nullptr))){
return nullptr;
}
ko<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((kq), (new Array_<int64_t>(1, (0LL))), (kv), (nullptr));
return (kw)((kr));
}
// ctor
static void kx(fz* ky /*me*/){
}
// _dtor
static void kz(fz* la /*me*/){
}
// cmp
static int64_t lb(fz* lc /*me*/, fz* ld /*t*/){
throw 3910598660LL;
}
// _copy
static fz* le(fz* lf /*me*/){
fz* lg;
(lg) = (new fz());
return as_<fz>(classTable_, (lg), 0);
}
// _toBin
static Array_<uint8_t>* lh(fz* li /*me*/){
Array_<uint8_t>* lj;
(lj) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
return lj;
}
// _fromBin
static fz* lk(fz* ll /*me*/, Array_<uint8_t>* lm /*bin*/, int64_t* ln /*idx*/){
fz* lo;
(lo) = (new fz());
return lo;
}
// toStr
static Array_<char16_t>* lp(fz* lq /*me*/){
return new Array_<char16_t>(0);
}
// _dtor
static void lr(fy* ls){
}
// _copy
static fy* lt(fy* lu){
fy* lv;
(lv) = (new fy());
((lv)->lw) = ((lu)->lw);
return as_<fy>(classTable_, (lv), 2);
}
// _toBin
static Array_<uint8_t>* lx(fy* ly){
Array_<uint8_t>* lz;
(lz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(lz) = ((lz)->Cat(toBin_((ly)->lw)));
return lz;
}
// _fromBin
static fy* mb(fy* mc, Array_<uint8_t>* md, int64_t* me){
fy* mf;
(mf) = (new fy());
((mf)->lw) = (fromBin_<int64_t>((md), (*me)));
return mf;
}
// cmp
static int64_t mg(fx* mh /*me*/, fx* mi /*t*/){
uint64_t mj; // meAddr
uint64_t ml; // tAddr
(mj) = ((mk)((mh)));
(ml) = ((mk)((mi)));
return ((mj) > (ml)) ? (1LL) : (((mj) < (ml)) ? (-1LL) : (0LL));
}
// _dtor
static void mm(ga* mn){
((mn)->hk) = (nullptr);
}
// _copy
static ga* mo(ga* mp){
ga* mq;
(mq) = (new ga());
((mq)->hk) = (copy_((mp)->hk));
((mq)->hl) = ((mp)->hl);
((mq)->hm) = ((mp)->hm);
return as_<ga>(classTable_, (mq), 6);
}
// _toBin
static Array_<uint8_t>* mr(ga* ms){
Array_<uint8_t>* mt;
(mt) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(mt) = ((mt)->Cat(toBin_((ms)->hk)));
(mt) = ((mt)->Cat(toBin_((ms)->hl)));
(mt) = ((mt)->Cat(toBin_((ms)->hm)));
return mt;
}
// _fromBin
static ga* mx(ga* my, Array_<uint8_t>* mz, int64_t* na){
ga* nb;
(nb) = (new ga());
((nb)->hk) = (fromBin_<Array_<char16_t>*>((mz), (*na)));
((nb)->hl) = (fromBin_<int64_t>((mz), (*na)));
((nb)->hm) = (fromBin_<int64_t>((mz), (*na)));
return nb;
}
// _dtor
static void nc(fx* nd){
((nd)->ne) = (nullptr);
((nd)->nf) = (nullptr);
((nd)->ng) = (nullptr);
((nd)->nh) = (nullptr);
((nd)->ni) = (nullptr);
((nd)->nj) = (nullptr);
((nd)->nk) = (nullptr);
}
// _copy
static fx* nl(fx* nm){
fx* nn;
(nn) = (new fx());
((nn)->ne) = (copy_((nm)->ne));
((nn)->nf) = (copy_((nm)->nf));
((nn)->ng) = (copy_((nm)->ng));
((nn)->nh) = (copy_((nm)->nh));
((nn)->ni) = (copy_((nm)->ni));
((nn)->nj) = (copy_((nm)->nj));
((nn)->nk) = (copy_((nm)->nk));
((nn)->no) = ((nm)->no);
((nn)->lw) = ((nm)->lw);
return as_<fx>(classTable_, (nn), 4);
}
// _toBin
static Array_<uint8_t>* np(fx* nq){
Array_<uint8_t>* nr;
(nr) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(nr) = ((nr)->Cat(toBin_((nq)->ne)));
(nr) = ((nr)->Cat(toBin_((nq)->nf)));
(nr) = ((nr)->Cat(toBin_((nq)->ng)));
(nr) = ((nr)->Cat(toBin_((nq)->nh)));
(nr) = ((nr)->Cat(toBin_((nq)->ni)));
(nr) = ((nr)->Cat(toBin_((nq)->nj)));
(nr) = ((nr)->Cat(toBin_((nq)->nk)));
(nr) = ((nr)->Cat(toBin_((nq)->no)));
(nr) = ((nr)->Cat(toBin_((nq)->lw)));
return nr;
}
// _fromBin
static fx* ob(fx* oc, Array_<uint8_t>* od, int64_t* oe){
fx* of;
(of) = (new fx());
((of)->ne) = (fromBin_<ga*>((od), (*oe)));
((of)->nf) = (fromBin_<Array_<char16_t>*>((od), (*oe)));
((of)->ng) = (fromBin_<fx*>((od), (*oe)));
((of)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((od), (*oe)));
((of)->ni) = (fromBin_<Array_<char16_t>*>((od), (*oe)));
((of)->nj) = (fromBin_<fx*>((od), (*oe)));
((of)->nk) = (fromBin_<fy*>((od), (*oe)));
((of)->no) = (fromBin_<bool>((od), (*oe)));
((of)->lw) = (fromBin_<int64_t>((od), (*oe)));
return of;
}
// _dtor
static void og(gc* oh){
((oh)->ne) = (nullptr);
((oh)->nf) = (nullptr);
((oh)->ng) = (nullptr);
((oh)->nh) = (nullptr);
((oh)->ni) = (nullptr);
((oh)->nj) = (nullptr);
((oh)->nk) = (nullptr);
}
// _copy
static gc* oi(gc* oj){
gc* ok;
(ok) = (new gc());
((ok)->ne) = (copy_((oj)->ne));
((ok)->nf) = (copy_((oj)->nf));
((ok)->ng) = (copy_((oj)->ng));
((ok)->nh) = (copy_((oj)->nh));
((ok)->ni) = (copy_((oj)->ni));
((ok)->nj) = (copy_((oj)->nj));
((ok)->nk) = (copy_((oj)->nk));
((ok)->no) = ((oj)->no);
((ok)->lw) = ((oj)->lw);
return as_<gc>(classTable_, (ok), 12);
}
// _toBin
static Array_<uint8_t>* ol(gc* om){
Array_<uint8_t>* on;
(on) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(on) = ((on)->Cat(toBin_((om)->ne)));
(on) = ((on)->Cat(toBin_((om)->nf)));
(on) = ((on)->Cat(toBin_((om)->ng)));
(on) = ((on)->Cat(toBin_((om)->nh)));
(on) = ((on)->Cat(toBin_((om)->ni)));
(on) = ((on)->Cat(toBin_((om)->nj)));
(on) = ((on)->Cat(toBin_((om)->nk)));
(on) = ((on)->Cat(toBin_((om)->no)));
(on) = ((on)->Cat(toBin_((om)->lw)));
return on;
}
// _fromBin
static gc* oy(gc* oz, Array_<uint8_t>* pa, int64_t* pb){
gc* pc;
(pc) = (new gc());
((pc)->ne) = (fromBin_<ga*>((pa), (*pb)));
((pc)->nf) = (fromBin_<Array_<char16_t>*>((pa), (*pb)));
((pc)->ng) = (fromBin_<fx*>((pa), (*pb)));
((pc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((pa), (*pb)));
((pc)->ni) = (fromBin_<Array_<char16_t>*>((pa), (*pb)));
((pc)->nj) = (fromBin_<fx*>((pa), (*pb)));
((pc)->nk) = (fromBin_<fy*>((pa), (*pb)));
((pc)->no) = (fromBin_<bool>((pa), (*pb)));
((pc)->lw) = (fromBin_<int64_t>((pa), (*pb)));
return pc;
}
// _dtor
static void pd(gd* pe){
((pe)->pf) = (nullptr);
((pe)->ne) = (nullptr);
((pe)->nf) = (nullptr);
((pe)->ng) = (nullptr);
((pe)->nh) = (nullptr);
((pe)->ni) = (nullptr);
((pe)->nj) = (nullptr);
((pe)->nk) = (nullptr);
}
// _copy
static gd* pg(gd* ph){
gd* pi;
(pi) = (new gd());
((pi)->pf) = (copy_((ph)->pf));
((pi)->pj) = ((ph)->pj);
((pi)->ne) = (copy_((ph)->ne));
((pi)->nf) = (copy_((ph)->nf));
((pi)->ng) = (copy_((ph)->ng));
((pi)->nh) = (copy_((ph)->nh));
((pi)->ni) = (copy_((ph)->ni));
((pi)->nj) = (copy_((ph)->nj));
((pi)->nk) = (copy_((ph)->nk));
((pi)->no) = ((ph)->no);
((pi)->lw) = ((ph)->lw);
return as_<gd>(classTable_, (pi), 14);
}
// _toBin
static Array_<uint8_t>* pk(gd* pl){
Array_<uint8_t>* pm;
(pm) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(pm) = ((pm)->Cat(toBin_((pl)->pf)));
(pm) = ((pm)->Cat(toBin_((pl)->pj)));
(pm) = ((pm)->Cat(toBin_((pl)->ne)));
(pm) = ((pm)->Cat(toBin_((pl)->nf)));
(pm) = ((pm)->Cat(toBin_((pl)->ng)));
(pm) = ((pm)->Cat(toBin_((pl)->nh)));
(pm) = ((pm)->Cat(toBin_((pl)->ni)));
(pm) = ((pm)->Cat(toBin_((pl)->nj)));
(pm) = ((pm)->Cat(toBin_((pl)->nk)));
(pm) = ((pm)->Cat(toBin_((pl)->no)));
(pm) = ((pm)->Cat(toBin_((pl)->lw)));
return pm;
}
// _fromBin
static gd* py(gd* pz, Array_<uint8_t>* qa, int64_t* qb){
gd* qc;
(qc) = (new gd());
((qc)->pf) = (fromBin_<gc*>((qa), (*qb)));
((qc)->pj) = (fromBin_<int64_t>((qa), (*qb)));
((qc)->ne) = (fromBin_<ga*>((qa), (*qb)));
((qc)->nf) = (fromBin_<Array_<char16_t>*>((qa), (*qb)));
((qc)->ng) = (fromBin_<fx*>((qa), (*qb)));
((qc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((qa), (*qb)));
((qc)->ni) = (fromBin_<Array_<char16_t>*>((qa), (*qb)));
((qc)->nj) = (fromBin_<fx*>((qa), (*qb)));
((qc)->nk) = (fromBin_<fy*>((qa), (*qb)));
((qc)->no) = (fromBin_<bool>((qa), (*qb)));
((qc)->lw) = (fromBin_<int64_t>((qa), (*qb)));
return qc;
}
// _dtor
static void qd(gb* qe){
((qe)->qf) = (nullptr);
((qe)->qg) = (nullptr);
((qe)->ne) = (nullptr);
((qe)->nf) = (nullptr);
((qe)->ng) = (nullptr);
((qe)->nh) = (nullptr);
((qe)->ni) = (nullptr);
((qe)->nj) = (nullptr);
((qe)->nk) = (nullptr);
}
// _copy
static gb* qh(gb* qi){
gb* qj;
(qj) = (new gb());
((qj)->qk) = ((qi)->qk);
((qj)->ql) = ((qi)->ql);
((qj)->qf) = (copy_((qi)->qf));
((qj)->qg) = (copy_((qi)->qg));
((qj)->ne) = (copy_((qi)->ne));
((qj)->nf) = (copy_((qi)->nf));
((qj)->ng) = (copy_((qi)->ng));
((qj)->nh) = (copy_((qi)->nh));
((qj)->ni) = (copy_((qi)->ni));
((qj)->nj) = (copy_((qi)->nj));
((qj)->nk) = (copy_((qi)->nk));
((qj)->no) = ((qi)->no);
((qj)->lw) = ((qi)->lw);
return as_<gb>(classTable_, (qj), 10);
}
// _toBin
static Array_<uint8_t>* qm(gb* qn){
Array_<uint8_t>* qo;
(qo) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(qo) = ((qo)->Cat(toBin_((qn)->qk)));
(qo) = ((qo)->Cat(toBin_((qn)->ql)));
(qo) = ((qo)->Cat(toBin_((qn)->qf)));
(qo) = ((qo)->Cat(toBin_((qn)->qg)));
(qo) = ((qo)->Cat(toBin_((qn)->ne)));
(qo) = ((qo)->Cat(toBin_((qn)->nf)));
(qo) = ((qo)->Cat(toBin_((qn)->ng)));
(qo) = ((qo)->Cat(toBin_((qn)->nh)));
(qo) = ((qo)->Cat(toBin_((qn)->ni)));
(qo) = ((qo)->Cat(toBin_((qn)->nj)));
(qo) = ((qo)->Cat(toBin_((qn)->nk)));
(qo) = ((qo)->Cat(toBin_((qn)->no)));
(qo) = ((qo)->Cat(toBin_((qn)->lw)));
return qo;
}
// _fromBin
static gb* rc(gb* rd, Array_<uint8_t>* re, int64_t* rf){
gb* rg;
(rg) = (new gb());
((rg)->qk) = (fromBin_<int64_t>((re), (*rf)));
((rg)->ql) = (fromBin_<bool>((re), (*rf)));
((rg)->qf) = (fromBin_<gc*>((re), (*rf)));
((rg)->qg) = (fromBin_<gd*>((re), (*rf)));
((rg)->ne) = (fromBin_<ga*>((re), (*rf)));
((rg)->nf) = (fromBin_<Array_<char16_t>*>((re), (*rf)));
((rg)->ng) = (fromBin_<fx*>((re), (*rf)));
((rg)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((re), (*rf)));
((rg)->ni) = (fromBin_<Array_<char16_t>*>((re), (*rf)));
((rg)->nj) = (fromBin_<fx*>((re), (*rf)));
((rg)->nk) = (fromBin_<fy*>((re), (*rf)));
((rg)->no) = (fromBin_<bool>((re), (*rf)));
((rg)->lw) = (fromBin_<int64_t>((re), (*rf)));
return rg;
}
// _dtor
static void rh(ge* ri){
((ri)->ne) = (nullptr);
((ri)->nf) = (nullptr);
((ri)->ng) = (nullptr);
((ri)->nh) = (nullptr);
((ri)->ni) = (nullptr);
((ri)->nj) = (nullptr);
((ri)->nk) = (nullptr);
}
// _copy
static ge* rj(ge* rk){
ge* rl;
(rl) = (new ge());
((rl)->ne) = (copy_((rk)->ne));
((rl)->nf) = (copy_((rk)->nf));
((rl)->ng) = (copy_((rk)->ng));
((rl)->nh) = (copy_((rk)->nh));
((rl)->ni) = (copy_((rk)->ni));
((rl)->nj) = (copy_((rk)->nj));
((rl)->nk) = (copy_((rk)->nk));
((rl)->no) = ((rk)->no);
((rl)->lw) = ((rk)->lw);
return as_<ge>(classTable_, (rl), 16);
}
// _toBin
static Array_<uint8_t>* rm(ge* rn){
Array_<uint8_t>* ro;
(ro) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ro) = ((ro)->Cat(toBin_((rn)->ne)));
(ro) = ((ro)->Cat(toBin_((rn)->nf)));
(ro) = ((ro)->Cat(toBin_((rn)->ng)));
(ro) = ((ro)->Cat(toBin_((rn)->nh)));
(ro) = ((ro)->Cat(toBin_((rn)->ni)));
(ro) = ((ro)->Cat(toBin_((rn)->nj)));
(ro) = ((ro)->Cat(toBin_((rn)->nk)));
(ro) = ((ro)->Cat(toBin_((rn)->no)));
(ro) = ((ro)->Cat(toBin_((rn)->lw)));
return ro;
}
// _fromBin
static ge* ry(ge* rz, Array_<uint8_t>* sa, int64_t* sb){
ge* sc;
(sc) = (new ge());
((sc)->ne) = (fromBin_<ga*>((sa), (*sb)));
((sc)->nf) = (fromBin_<Array_<char16_t>*>((sa), (*sb)));
((sc)->ng) = (fromBin_<fx*>((sa), (*sb)));
((sc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((sa), (*sb)));
((sc)->ni) = (fromBin_<Array_<char16_t>*>((sa), (*sb)));
((sc)->nj) = (fromBin_<fx*>((sa), (*sb)));
((sc)->nk) = (fromBin_<fy*>((sa), (*sb)));
((sc)->no) = (fromBin_<bool>((sa), (*sb)));
((sc)->lw) = (fromBin_<int64_t>((sa), (*sb)));
return sc;
}
// _dtor
static void sd(fw* se){
((se)->sf) = (nullptr);
((se)->sg) = (nullptr);
((se)->sh) = (nullptr);
((se)->si) = (nullptr);
((se)->ne) = (nullptr);
((se)->nf) = (nullptr);
((se)->ng) = (nullptr);
((se)->nh) = (nullptr);
((se)->ni) = (nullptr);
((se)->nj) = (nullptr);
((se)->nk) = (nullptr);
}
// _copy
static fw* sj(fw* sk){
fw* sl;
(sl) = (new fw());
((sl)->sm) = ((sk)->sm);
((sl)->sf) = (copy_((sk)->sf));
((sl)->sg) = (copy_((sk)->sg));
((sl)->sh) = (copy_((sk)->sh));
((sl)->si) = (copy_((sk)->si));
((sl)->ne) = (copy_((sk)->ne));
((sl)->nf) = (copy_((sk)->nf));
((sl)->ng) = (copy_((sk)->ng));
((sl)->nh) = (copy_((sk)->nh));
((sl)->ni) = (copy_((sk)->ni));
((sl)->nj) = (copy_((sk)->nj));
((sl)->nk) = (copy_((sk)->nk));
((sl)->no) = ((sk)->no);
((sl)->lw) = ((sk)->lw);
return as_<fw>(classTable_, (sl), 8);
}
// _toBin
static Array_<uint8_t>* sn(fw* so){
Array_<uint8_t>* sp;
(sp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(sp) = ((sp)->Cat(toBin_((so)->sm)));
(sp) = ((sp)->Cat(toBin_((so)->sf)));
(sp) = ((sp)->Cat(toBin_((so)->sg)));
(sp) = ((sp)->Cat(toBin_((so)->sh)));
(sp) = ((sp)->Cat(toBin_((so)->si)));
(sp) = ((sp)->Cat(toBin_((so)->ne)));
(sp) = ((sp)->Cat(toBin_((so)->nf)));
(sp) = ((sp)->Cat(toBin_((so)->ng)));
(sp) = ((sp)->Cat(toBin_((so)->nh)));
(sp) = ((sp)->Cat(toBin_((so)->ni)));
(sp) = ((sp)->Cat(toBin_((so)->nj)));
(sp) = ((sp)->Cat(toBin_((so)->nk)));
(sp) = ((sp)->Cat(toBin_((so)->no)));
(sp) = ((sp)->Cat(toBin_((so)->lw)));
return sp;
}
// _fromBin
static fw* te(fw* tf, Array_<uint8_t>* tg, int64_t* th){
fw* ti;
(ti) = (new fw());
((ti)->sm) = (fromBin_<int64_t>((tg), (*th)));
((ti)->sf) = (fromBin_<List_<Array_<char16_t>*>*>((tg), (*th)));
((ti)->sg) = (fromBin_<List_<gb*>*>((tg), (*th)));
((ti)->sh) = (fromBin_<gc*>((tg), (*th)));
((ti)->si) = (fromBin_<List_<ge*>*>((tg), (*th)));
((ti)->ne) = (fromBin_<ga*>((tg), (*th)));
((ti)->nf) = (fromBin_<Array_<char16_t>*>((tg), (*th)));
((ti)->ng) = (fromBin_<fx*>((tg), (*th)));
((ti)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((tg), (*th)));
((ti)->ni) = (fromBin_<Array_<char16_t>*>((tg), (*th)));
((ti)->nj) = (fromBin_<fx*>((tg), (*th)));
((ti)->nk) = (fromBin_<fy*>((tg), (*th)));
((ti)->no) = (fromBin_<bool>((tg), (*th)));
((ti)->lw) = (fromBin_<int64_t>((tg), (*th)));
return ti;
}
// _dtor
static void tj(gj* tk){
((tk)->gk) = (nullptr);
}
// _copy
static gj* tl(gj* tm){
gj* tn;
(tn) = (new gj());
((tn)->gk) = (copy_((tm)->gk));
return as_<gj>(classTable_, (tn), 18);
}
// _toBin
static Array_<uint8_t>* to(gj* tp){
Array_<uint8_t>* tq;
(tq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(tq) = ((tq)->Cat(toBin_((tp)->gk)));
return tq;
}
// _fromBin
static gj* ts(gj* tt, Array_<uint8_t>* tu, int64_t* tv){
gj* tw;
(tw) = (new gj());
((tw)->gk) = (fromBin_<List_<Array_<char16_t>*>*>((tu), (*tv)));
return tw;
}
// exist
static bool gm(Array_<char16_t>* tx /*path*/){
return false;
}
// forEach
static bool go(Array_<char16_t>* ty /*path*/, bool tz /*recursion*/, ub ua /*callback*/, fz* uc /*data*/){
return false;
}
// searchResFiles
static bool gp(Array_<char16_t>* ud /*path*/, bool ue /*isDir*/, fz* uf /*data*/){
gj* ug; // data2
(ug) = (as_<gj>(classTable_, (uf), 18));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((ug)->gk), (new Array_<int64_t>(1, (0LL))), (ud));
return true;
}
// output
static bool gu(fw* ui /*entry*/, List_<Array_<char16_t>*>* uj /*resFiles*/){
fw* ur; // func_
ul* uv; // class_
(aj) = (new Queue_<fw*>());
uk<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL))), (ui));
(ak) = (new Queue_<ul*>());
(al) = (new Array_<char16_t>(1, u'\u0061'));
(am) = (new List_<Array_<char16_t>*>());
(an) = (new List_<Array_<char16_t>*>());
(ao) = (new List_<Array_<char16_t>*>());
(ap) = (new List_<Array_<char16_t>*>());
(aq) = (new List_<un*>());
(ar) = (new List_<gb*>());
(as) = (new List_<gb*>());
(uo) = (0LL);
(at) = (new List_<Array_<char16_t>*>());
while((((aj)->Len()) > (0LL)) || (((ak)->Len()) > (0LL))){
while(((aj)->Len()) > (0LL)){
(ur) = (us<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL)))));
(ut)((ur));
}
while(((ak)->Len()) > (0LL)){
(uv) = (us<Queue_<ul*>*, ul*>((ak), (new Array_<int64_t>(1, (0LL)))));
(uw)((uv));
}
}
(ux)((uj));
return true;
}
// output
static bool gy(fw* uy /*entry*/, List_<Array_<char16_t>*>* uz /*resFiles*/){
fw* vd; // func_
ul* vg; // class_
(bi) = (new Queue_<fw*>());
uk<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL))), (uy));
(bj) = (new Queue_<ul*>());
(bk) = (new Array_<char16_t>(1, u'\u0061'));
(bl) = (new List_<Array_<char16_t>*>());
(bm) = (new List_<va*>());
(bn) = (new List_<gb*>());
(bo) = (new List_<gb*>());
while((((bi)->Len()) > (0LL)) || (((bj)->Len()) > (0LL))){
while(((bi)->Len()) > (0LL)){
(vd) = (us<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL)))));
(ve)((vd));
}
while(((bj)->Len()) > (0LL)){
(vg) = (us<Queue_<ul*>*, ul*>((bj), (new Array_<int64_t>(1, (0LL)))));
(vh)((vg));
}
}
(vi)((uz));
return true;
}
// get
static Array_<char16_t>* hh(int64_t vj /*id*/, Array_<Array_<char16_t>*>* vk /*args*/){
int64_t vm;
int64_t vp;
int64_t vu;
int64_t vz;
int64_t we;
int64_t wj;
int64_t wo;
int64_t wt;
int64_t wy;
int64_t xd;
int64_t xi;
int64_t xn;
int64_t xs;
int64_t xx;
int64_t yc;
int64_t yh;
int64_t ym;
int64_t yr;
int64_t yw;
int64_t zb;
int64_t zg;
int64_t zl;
int64_t zq;
int64_t zv;
int64_t aaa;
int64_t aaf;
int64_t aak;
int64_t aap;
int64_t aau;
int64_t aaz;
int64_t abe;
int64_t abj;
int64_t abo;
int64_t abt;
int64_t aby;
int64_t acd;
int64_t aci;
int64_t acn;
int64_t acs;
int64_t acx;
int64_t adc;
int64_t adh;
int64_t adm;
int64_t adr;
int64_t adw;
int64_t aeb;
int64_t aeg;
int64_t ael;
int64_t aeq;
int64_t aev;
int64_t afa;
int64_t aff;
int64_t afk;
int64_t afp;
int64_t afu;
int64_t afz;
int64_t age;
int64_t agj;
int64_t ago;
int64_t agt;
int64_t agy;
int64_t ahd;
int64_t ahi;
int64_t ahn;
int64_t ahs;
int64_t ahx;
int64_t aic;
int64_t aih;
int64_t aim;
int64_t air;
int64_t aiw;
int64_t ajb;
int64_t ajg;
int64_t ajl;
int64_t ajq;
int64_t ajv;
int64_t aka;
int64_t akf;
int64_t akk;
int64_t akp;
int64_t aku;
int64_t akz;
int64_t ale;
int64_t alj;
int64_t alo;
int64_t alt;
int64_t aly;
int64_t amd;
int64_t ami;
int64_t amn;
int64_t ams;
int64_t amx;
int64_t anc;
int64_t ani;
int64_t ann;
int64_t ans;
int64_t anx;
int64_t aoc;
int64_t aoh;
int64_t aom;
int64_t aor;
int64_t aow;
int64_t apb;
int64_t apg;
int64_t apl;
int64_t apq;
int64_t apv;
int64_t aqa;
int64_t aqf;
int64_t aqk;
int64_t aqp;
int64_t aqu;
int64_t aqz;
int64_t are;
int64_t arj;
int64_t aro;
int64_t art;
int64_t ary;
int64_t asd;
int64_t asi;
int64_t aso;
int64_t ast;
int64_t asy;
int64_t atd;
int64_t ati;
vm = vj;
switch(vm){
case 1LL:
vp = m;
switch(vp){
case 0LL:
return ((new Array_<char16_t>(6, u'\u30AA', u'\u30D7', u'\u30B7', u'\u30E7', u'\u30F3', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u300D', u'\u306E', u'\u4F7F', u'\u308F', u'\u308C', u'\u65B9', u'\u304C', u'\u6B63', u'\u3057', u'\u304F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006F', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u002E'));
break;
}
break;
case 2LL:
vu = m;
switch(vu){
case 0LL:
return ((new Array_<char16_t>(9, u'\u4E0D', u'\u660E', u'\u306A', u'\u30AA', u'\u30D7', u'\u30B7', u'\u30E7', u'\u30F3', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u6307', u'\u5B9A', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(20, u'\u0055', u'\u006E', u'\u0065', u'\u0078', u'\u0070', u'\u0065', u'\u0063', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u006F', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u003A', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 3LL:
vz = m;
switch(vz){
case 0LL:
return ((new Array_<char16_t>(7, u'\u5165', u'\u529B', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u300D', u'\u306E', u'\u62E1', u'\u5F35', u'\u5B50', u'\u306F', u'\u300C', u'\u002E', u'\u006B', u'\u006E', u'\u300D', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(33, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0078', u'\u0074', u'\u0065', u'\u006E', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0070', u'\u0075', u'\u0074', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u002E', u'\u006B', u'\u006E', u'\u0027', u'\u002E'));
break;
}
break;
case 4LL:
we = m;
switch(we){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u540D', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u300D', u'\u306B', u'\u4F7F', u'\u3048', u'\u306A', u'\u3044', u'\u6587', u'\u5B57', u'\u304C', u'\u542B', u'\u307E', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(22, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(42, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0073', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 5LL:
wj = m;
switch(wj){
case 0LL:
return ((new Array_<char16_t>(8, u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u958B', u'\u3051', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(25, u'\u0043', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u006E', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 6LL:
wo = m;
switch(wo){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30B7', u'\u30B9', u'\u30C6', u'\u30E0', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u958B', u'\u3051', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0079', u'\u0073', u'\u0074', u'\u0065', u'\u006D', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u006E', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 7LL:
wt = m;
switch(wt){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30B7', u'\u30B9', u'\u30C6', u'\u30E0', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u58CA', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0079', u'\u0073', u'\u0074', u'\u0065', u'\u006D', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0062', u'\u0072', u'\u006F', u'\u006B', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65537LL:
wy = m;
switch(wy){
case 0LL:
return ((new Array_<char16_t>(16, u'\u540C', u'\u3058', u'\u30B9', u'\u30B3', u'\u30FC', u'\u30D7', u'\u5185', u'\u306B', u'\u65E2', u'\u306B', u'\u540C', u'\u3058', u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(35, u'\u0027', u'\u0020', u'\u0061', u'\u006C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0073', u'\u0063', u'\u006F', u'\u0070', u'\u0065', u'\u002E'));
break;
}
break;
case 65538LL:
xd = m;
switch(xd){
case 0LL:
return ((new Array_<char16_t>(17, u'\u4E0A', u'\u4F4D', u'\u306E', u'\u30B9', u'\u30B3', u'\u30FC', u'\u30D7', u'\u5185', u'\u306B', u'\u65E2', u'\u306B', u'\u540C', u'\u3058', u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(36, u'\u0027', u'\u0020', u'\u0061', u'\u006C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0075', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0020', u'\u0073', u'\u0063', u'\u006F', u'\u0070', u'\u0065', u'\u002E'));
break;
}
break;
case 65539LL:
xi = m;
switch(xi){
case 0LL:
return new Array_<char16_t>(24, u'\u30B3', u'\u30E1', u'\u30F3', u'\u30C8', u'\u306E', u'\u300C', u'\u007B', u'\u300D', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u007D', u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(49, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0020', u'\u0027', u'\u007D', u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0027', u'\u007B', u'\u0027', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E');
break;
}
break;
case 65540LL:
xn = m;
switch(xn){
case 0LL:
return new Array_<char16_t>(54, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u3084', u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u4E2D', u'\u306B', u'\u30BF', u'\u30D6', u'\u6587', u'\u5B57', u'\u306F', u'\u8A18', u'\u8FF0', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u0020', u'\u30A8', u'\u30B9', u'\u30B1', u'\u30FC', u'\u30D7', u'\u30B7', u'\u30FC', u'\u30B1', u'\u30F3', u'\u30B9', u'\u300C', u'\u005C', u'\u0074', u'\u300D', u'\u3092', u'\u4EE3', u'\u7528', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(113, u'\u0054', u'\u0061', u'\u0062', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u002E', u'\u0020', u'\u0055', u'\u0073', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0073', u'\u0063', u'\u0061', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0071', u'\u0075', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027', u'\u005C', u'\u0074', u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0065', u'\u0061', u'\u0064', u'\u002E');
break;
}
break;
case 65541LL:
xs = m;
switch(xs){
case 0LL:
return new Array_<char16_t>(50, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u3084', u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u4E2D', u'\u3067', u'\u306F', u'\u6539', u'\u884C', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u0020', u'\u30A8', u'\u30B9', u'\u30B1', u'\u30FC', u'\u30D7', u'\u30B7', u'\u30FC', u'\u30B1', u'\u30F3', u'\u30B9', u'\u300C', u'\u005C', u'\u006E', u'\u300D', u'\u3092', u'\u4EE3', u'\u7528', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(108, u'\u004C', u'\u0069', u'\u006E', u'\u0065', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u0073', u'\u0020', u'\u0061', u'\u0072', u'\u0065', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u002E', u'\u0020', u'\u0055', u'\u0073', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0073', u'\u0063', u'\u0061', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0071', u'\u0075', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027', u'\u005C', u'\u006E', u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0065', u'\u0061', u'\u0064', u'\u002E');
break;
}
break;
case 65542LL:
xx = m;
switch(xx){
case 0LL:
return ((new Array_<char16_t>(12, u'\u8B58', u'\u5225', u'\u5B50', u'\u306B', u'\u306F', u'\u4F7F', u'\u3048', u'\u306A', u'\u3044', u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(15, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(49, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65543LL:
yc = m;
switch(yc){
case 0LL:
return new Array_<char16_t>(24, u'\u8B58', u'\u5225', u'\u5B50', u'\u306B', u'\u6B63', u'\u3057', u'\u304F', u'\u306A', u'\u3044', u'\u5F62', u'\u5F0F', u'\u3067', u'\u300C', u'\u0040', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(43, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0027', u'\u0040', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u002E');
break;
}
break;
case 65544LL:
yh = m;
switch(yh){
case 0LL:
return ((new Array_<char16_t>(12, u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u540D', u'\u306E', u'\u6307', u'\u5B9A', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u300D', u'\u306B', u'\u5927', u'\u6587', u'\u5B57', u'\u304C', u'\u542B', u'\u307E', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0041', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(29, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0073', u'\u0020', u'\u0075', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u006C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u002E'));
break;
}
break;
case 65545LL:
ym = m;
switch(ym){
case 0LL:
return new Array_<char16_t>(24, u'\u8B58', u'\u5225', u'\u5B50', u'\u306B', u'\u6B63', u'\u3057', u'\u304F', u'\u306A', u'\u3044', u'\u5F62', u'\u5F0F', u'\u3067', u'\u300C', u'\u005C', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(43, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0027', u'\u005C', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u002E');
break;
}
break;
case 65546LL:
yr = m;
switch(yr){
case 0LL:
return ((new Array_<char16_t>(4, u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(16, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(49, u'\u002E', u'\u002E', u'\u002E', u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65547LL:
yw = m;
switch(yw){
case 0LL:
return ((new Array_<char16_t>(16, u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u6587', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0073', u'\u0065', u'\u006E', u'\u0074', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65548LL:
zb = m;
switch(zb){
case 0LL:
return ((new Array_<char16_t>(13, u'\u95A2', u'\u6570', u'\u5C5E', u'\u6027', u'\u306B', u'\u306F', u'\u4F7F', u'\u3048', u'\u306A', u'\u3044', u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(15, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(57, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0061', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0073', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65549LL:
zg = m;
switch(zg){
case 0LL:
return ((new Array_<char16_t>(5, u'\u95A2', u'\u6570', u'\u5C5E', u'\u6027', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(24, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0061', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(49, u'\u002E', u'\u002E', u'\u002E', u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0032', u'\u0038', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65550LL:
zl = m;
switch(zl){
case 0LL:
return ((new Array_<char16_t>(3, u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(19, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u7B87', u'\u6240', u'\u306B', u'\u3001', u'\u4E0D', u'\u6B63', u'\u306A', u'\u6587', u'\u5B57', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(22, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(46, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0070', u'\u006C', u'\u0061', u'\u0063', u'\u0065', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u0027', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E')));
break;
}
break;
case 65551LL:
zq = m;
switch(zq){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u300D', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(20, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E')));
break;
}
break;
case 65552LL:
zv = m;
switch(zv){
case 0LL:
return ((new Array_<char16_t>(9, u'\u95A2', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3092', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u004F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 65553LL:
aaa = m;
switch(aaa){
case 0LL:
return ((new Array_<char16_t>(14, u'\u95A2', u'\u6570', u'\u304A', u'\u3088', u'\u3073', u'\u5909', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u300D', u'\u3092', u'\u516C', u'\u958B', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(55, u'\u0027', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0073', u'\u0020', u'\u0068', u'\u0061', u'\u0073', u'\u0020', u'\u0062', u'\u0065', u'\u0065', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u006C', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 65554LL:
aaf = m;
switch(aaf){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u300D', u'\u304C', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u300D', u'\u3067', u'\u306F', u'\u306A', u'\u304F', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u3067', u'\u9589', u'\u3058', u'\u3089', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(1, u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(31, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(18, u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0065', u'\u0061', u'\u0064', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'))));
break;
}
break;
case 65555LL:
aak = m;
switch(aak){
case 0LL:
return ((new Array_<char16_t>(12, u'\u6B63', u'\u3057', u'\u304F', u'\u306A', u'\u3044', u'\u5F62', u'\u5F0F', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(30, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u006D', u'\u0061', u'\u0074', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65556LL:
aap = m;
switch(aap){
case 0LL:
return new Array_<char16_t>(23, u'\u5F15', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u5909', u'\u6570', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0026', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(53, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0026', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E');
break;
}
break;
case 65557LL:
aau = m;
switch(aau){
case 0LL:
return new Array_<char16_t>(25, u'\u5F15', u'\u6570', u'\u306B', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3059', u'\u308B', u'\u3053', u'\u3068', u'\u306F', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u002E');
break;
}
break;
case 65558LL:
aaz = m;
switch(aaz){
case 0LL:
return new Array_<char16_t>(26, u'\u30E1', u'\u30F3', u'\u30D0', u'\u306B', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3059', u'\u308B', u'\u3053', u'\u3068', u'\u306F', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(50, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0073', u'\u002E');
break;
}
break;
case 65559LL:
abe = m;
switch(abe){
case 0LL:
return new Array_<char16_t>(30, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u6587', u'\u306B', u'\u306F', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(57, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u002E');
break;
}
break;
case 65560LL:
abj = m;
switch(abj){
case 0LL:
return new Array_<char16_t>(22, u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(43, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0061', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002E');
break;
}
break;
case 65561LL:
abo = m;
switch(abo){
case 0LL:
return ((new Array_<char16_t>(5, u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u306F', u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u3067', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(5, u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(27, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u006D', u'\u0061', u'\u0074', u'\u0074', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 65562LL:
abt = m;
switch(abt){
case 0LL:
return ((new Array_<char16_t>(18, u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3068', u'\u5BFE', u'\u5FDC', u'\u3057', u'\u306A', u'\u3044', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u3067', u'\u9589', u'\u3058', u'\u3089', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(25, u'\u0043', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(40, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002E'));
break;
}
break;
case 65563LL:
aby = m;
switch(aby){
case 0LL:
return new Array_<char16_t>(46, u'\u300C', u'\u0069', u'\u0066', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u306E', u'\u5F8C', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u300D', u'\u7BC0', u'\u3084', u'\u300C', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(88, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0061', u'\u0066', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u002E');
break;
}
break;
case 65564LL:
acd = m;
switch(acd){
case 0LL:
return new Array_<char16_t>(56, u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u300D', u'\u7BC0', u'\u306E', u'\u5F8C', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u3084', u'\u300C', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(96, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0061', u'\u0066', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u002E');
break;
}
break;
case 65565LL:
aci = m;
switch(aci){
case 0LL:
return new Array_<char16_t>(54, u'\u300C', u'\u0074', u'\u0072', u'\u0079', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u300D', u'\u7BC0', u'\u306E', u'\u5F8C', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u7BC0', u'\u3084', u'\u300C', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(94, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0074', u'\u0072', u'\u0079', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0061', u'\u0066', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u002E');
break;
}
break;
case 65566LL:
acn = m;
switch(acn){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(12, u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u4EE5', u'\u5916', u'\u3067', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u300D', u'\u7BC0', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(11, u'\u0041', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(30, u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u006F', u'\u0075', u'\u0074', u'\u0073', u'\u0069', u'\u0064', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0073', u'\u002E')));
break;
}
break;
case 65567LL:
acs = m;
switch(acs){
case 0LL:
return new Array_<char16_t>(69, u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u3067', u'\u300C', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u300D', u'\u300C', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u300D', u'\u300C', u'\u0065', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u306E', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u7B87', u'\u6240', u'\u306B', u'\u305D', u'\u308C', u'\u4EE5', u'\u5916', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(88, u'\u0049', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002C', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0027', u'\u002C', u'\u0020', u'\u0027', u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u0027', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0064', u'\u0020', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0077', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E');
break;
}
break;
case 65568LL:
acx = m;
switch(acx){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(16, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u7B87', u'\u6240', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(12, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(21, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u0027', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E')));
break;
}
break;
case 65569LL:
adc = m;
switch(adc){
case 0LL:
return ((new Array_<char16_t>(11, u'\u300C', u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u6F14', u'\u7B97', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65570LL:
adh = m;
switch(adh){
case 0LL:
return ((new Array_<char16_t>(8, u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(31, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(20, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(47, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65571LL:
adm = m;
switch(adm){
case 0LL:
return ((new Array_<char16_t>(18, u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u30A8', u'\u30B9', u'\u30B1', u'\u30FC', u'\u30D7', u'\u30B7', u'\u30FC', u'\u30B1', u'\u30F3', u'\u30B9', u'\u300C', u'\u005C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(28, u'\u0041', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0065', u'\u0073', u'\u0063', u'\u0061', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0071', u'\u0075', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0027', u'\u005C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 65572LL:
adr = m;
switch(adr){
case 0LL:
return new Array_<char16_t>(54, u'\u6587', u'\u5B57', u'\u30B3', u'\u30FC', u'\u30C9', u'\u8868', u'\u8A18', u'\u306F', u'\u300C', u'\u005C', u'\u0075', u'\u300D', u'\u306B', u'\u7D9A', u'\u3044', u'\u3066', u'\u3001', u'\u6570', u'\u5B57', u'\u307E', u'\u305F', u'\u306F', u'\u5927', u'\u6587', u'\u5B57', u'\u30A2', u'\u30EB', u'\u30D5', u'\u30A1', u'\u30D9', u'\u30C3', u'\u30C8', u'\u3067', u'\u0034', u'\u6841', u'\u306E', u'\u0031', u'\u0036', u'\u9032', u'\u6570', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(115, u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u0063', u'\u006F', u'\u0064', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0065', u'\u006E', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u005C', u'\u0075', u'\u0027', u'\u0020', u'\u0066', u'\u006F', u'\u006C', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0079', u'\u0020', u'\u0061', u'\u0020', u'\u0034', u'\u002D', u'\u0064', u'\u0069', u'\u0067', u'\u0069', u'\u0074', u'\u0020', u'\u0068', u'\u0065', u'\u0078', u'\u0061', u'\u0064', u'\u0065', u'\u0063', u'\u0069', u'\u006D', u'\u0061', u'\u006C', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0063', u'\u0061', u'\u0070', u'\u0069', u'\u0074', u'\u0061', u'\u006C', u'\u0020', u'\u006C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u002E');
break;
}
break;
case 65573LL:
adw = m;
switch(adw){
case 0LL:
return new Array_<char16_t>(28, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u6587', u'\u5B57', u'\u5217', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u304C', u'\u9589', u'\u3058', u'\u3089', u'\u308C', u'\u3066', u'\u3044', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0041', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0064', u'\u002E');
break;
}
break;
case 65574LL:
aeb = m;
switch(aeb){
case 0LL:
return ((new Array_<char16_t>(7, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u6587', u'\u5B57', u'\u5206', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(65, u'\u002E', u'\u002E', u'\u002E', u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u0041', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u002E'));
break;
}
break;
case 65575LL:
aeg = m;
switch(aeg){
case 0LL:
return new Array_<char16_t>(30, u'\u6587', u'\u5B57', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u304C', u'\u7A7A', u'\u3067', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u6587', u'\u5B57', u'\u5206', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(84, u'\u0054', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0065', u'\u006D', u'\u0070', u'\u0074', u'\u0079', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u002E', u'\u0020', u'\u0041', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0061', u'\u0069', u'\u006E', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u002E');
break;
}
break;
case 65576LL:
ael = m;
switch(ael){
case 0LL:
return new Array_<char16_t>(29, u'\u62EC', u'\u5F27', u'\u300C', u'\u0028', u'\u300D', u'\u306B', u'\u5BFE', u'\u5FDC', u'\u3059', u'\u308B', u'\u300C', u'\u0029', u'\u300D', u'\u304C', u'\u3001', u'\u3042', u'\u308B', u'\u3079', u'\u304D', u'\u5834', u'\u6240', u'\u306B', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(79, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0029', u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0073', u'\u0070', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0068', u'\u0065', u'\u0073', u'\u0069', u'\u0073', u'\u0020', u'\u0027', u'\u0028', u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0069', u'\u0074', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u002E');
break;
}
break;
case 65577LL:
aeq = m;
switch(aeq){
case 0LL:
return ((new Array_<char16_t>(14, u'\u6570', u'\u5024', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u306B', u'\u4E0D', u'\u6B63', u'\u306A', u'\u5F62', u'\u5F0F', u'\u306E', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0041', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(35, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0069', u'\u0063', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u002E'));
break;
}
break;
case 65578LL:
aev = m;
switch(aev){
case 0LL:
return ((new Array_<char16_t>(7, u'\u6570', u'\u5024', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(31, u'\u002E', u'\u002E', u'\u002E', u'\u300D', u'\u304C', u'\u9577', u'\u3059', u'\u304E', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u6587', u'\u5B57', u'\u4EE5', u'\u4E0B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0069', u'\u0063', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(47, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u006F', u'\u006E', u'\u0067', u'\u002E', u'\u0020', u'\u004D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0031', u'\u0030', u'\u0032', u'\u0034', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0061', u'\u0063', u'\u0074', u'\u0065', u'\u0072', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u006C', u'\u0065', u'\u0073', u'\u0073', u'\u002E'));
break;
}
break;
case 65579LL:
afa = m;
switch(afa){
case 0LL:
return new Array_<char16_t>(27, u'\u0031', u'\u0036', u'\u9032', u'\u6570', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u306F', u'\u300C', u'\u0030', u'\u0078', u'\u300D', u'\u304B', u'\u3089', u'\u59CB', u'\u3081', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(42, u'\u0048', u'\u0065', u'\u0078', u'\u0061', u'\u0064', u'\u0065', u'\u0063', u'\u0069', u'\u006D', u'\u0061', u'\u006C', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0027', u'\u0030', u'\u0078', u'\u0027', u'\u002E');
break;
}
break;
case 65580LL:
aff = m;
switch(aff){
case 0LL:
return new Array_<char16_t>(43, u'\u6307', u'\u6570', u'\u8868', u'\u8A18', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u306F', u'\u300C', u'\u0065', u'\u002B', u'\u300D', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u300C', u'\u0065', u'\u002D', u'\u300D', u'\u304B', u'\u3089', u'\u59CB', u'\u3081', u'\u3066', u'\u6307', u'\u6570', u'\u90E8', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(87, u'\u0045', u'\u0078', u'\u0070', u'\u006F', u'\u006E', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0027', u'\u0065', u'\u002B', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0065', u'\u002D', u'\u0027', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u006F', u'\u006E', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0074', u'\u002E');
break;
}
break;
case 65581LL:
afk = m;
switch(afk){
case 0LL:
return ((new Array_<char16_t>(10, u'\u6D6E', u'\u52D5', u'\u5C0F', u'\u6570', u'\u70B9', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u300D', u'\u304C', u'\u89E3', u'\u91C8', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u5024', u'\u304C', u'\u5927', u'\u304D', u'\u3059', u'\u304E', u'\u308B', u'\u53EF', u'\u80FD', u'\u6027', u'\u304C', u'\u3042', u'\u308A', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(28, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0070', u'\u006F', u'\u0069', u'\u006E', u'\u0074', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(55, u'\u0027', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u0065', u'\u0064', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006D', u'\u0061', u'\u0079', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0074', u'\u006F', u'\u006F', u'\u0020', u'\u006C', u'\u0061', u'\u0072', u'\u0067', u'\u0065', u'\u002E'));
break;
}
break;
case 65582LL:
afp = m;
switch(afp){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30D3', u'\u30C3', u'\u30C8', u'\u578B', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(41, u'\u300D', u'\u306E', u'\u63A5', u'\u5C3E', u'\u8F9E', u'\u306F', u'\u300C', u'\u0062', u'\u0038', u'\u300D', u'\u300C', u'\u0062', u'\u0031', u'\u0036', u'\u300D', u'\u300C', u'\u0062', u'\u0033', u'\u0032', u'\u300D', u'\u300C', u'\u0062', u'\u0036', u'\u0034', u'\u300D', u'\u306E', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0075', u'\u0066', u'\u0066', u'\u0069', u'\u0078', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0062', u'\u0069', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(45, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0065', u'\u0069', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u0062', u'\u0038', u'\u0027', u'\u002C', u'\u0020', u'\u0027', u'\u0062', u'\u0031', u'\u0036', u'\u0027', u'\u002C', u'\u0020', u'\u0027', u'\u0062', u'\u0033', u'\u0032', u'\u0027', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0027', u'\u0062', u'\u0036', u'\u0034', u'\u0027', u'\u002E'));
break;
}
break;
case 65583LL:
afu = m;
switch(afu){
case 0LL:
return ((new Array_<char16_t>(7, u'\u6574', u'\u6570', u'\u30EA', u'\u30C6', u'\u30E9', u'\u30EB', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u300D', u'\u304C', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30D5', u'\u30ED', u'\u30FC', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0067', u'\u0065', u'\u0072', u'\u0020', u'\u006C', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0061', u'\u006C', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0068', u'\u0061', u'\u0073', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0066', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 131073LL:
afz = m;
switch(afz){
case 0LL:
return new Array_<char16_t>(55, u'\u300C', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u300D', u'\u95A2', u'\u6570', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u0020', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u3059', u'\u308B', u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u306B', u'\u300C', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u300D', u'\u3092', u'\u5B9A', u'\u7FA9', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(88, u'\u0027', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0027', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u002E', u'\u0020', u'\u0044', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0064', u'\u002E');
break;
}
break;
case 131074LL:
age = m;
switch(age){
case 0LL:
return new Array_<char16_t>(37, u'\u300C', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u300D', u'\u95A2', u'\u6570', u'\u306E', u'\u5B9A', u'\u7FA9', u'\u306F', u'\u300C', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u300D', u'\u3068', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(60, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0027', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u0027', u'\u002E');
break;
}
break;
case 131075LL:
agj = m;
switch(agj){
case 0LL:
return ((new Array_<char16_t>(10, u'\u30E1', u'\u30F3', u'\u30D0', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u5909', u'\u6570', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(36, u'\u300D', u'\u306B', u'\u3001', u'\u300C', u'\u006D', u'\u0065', u'\u300D', u'\u3092', u'\u4ECB', u'\u3055', u'\u305A', u'\u76F4', u'\u63A5', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u305F', u'\u304B', u'\u3001', u'\u95A2', u'\u6570', u'\u3092', u'\u8D85', u'\u3048', u'\u3066', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(24, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(70, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0064', u'\u0069', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u0027', u'\u006D', u'\u0065', u'\u0027', u'\u002C', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0079', u'\u006F', u'\u006E', u'\u0064', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E'));
break;
}
break;
case 131076LL:
ago = m;
switch(ago){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(58, u'\u0040', u'\u300D', u'\u306B', u'\u3064', u'\u3044', u'\u3066', u'\u3001', u'\u81EA', u'\u8EAB', u'\u306E', u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u306E', u'\u30B0', u'\u30ED', u'\u30FC', u'\u30D0', u'\u30EB', u'\u8981', u'\u7D20', u'\u3092', u'\u53C2', u'\u7167', u'\u3059', u'\u308B', u'\u3068', u'\u304D', u'\u306F', u'\u3001', u'\u300C', u'\u0040', u'\u300D', u'\u306E', u'\u524D', u'\u306E', u'\u30BD', u'\u30FC', u'\u30B9', u'\u540D', u'\u3092', u'\u7701', u'\u7565', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(5, u'\u0046', u'\u006F', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(109, u'\u0040', u'\u0027', u'\u002C', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0067', u'\u006C', u'\u006F', u'\u0062', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0069', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0077', u'\u006E', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u002C', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0072', u'\u0063', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0062', u'\u0065', u'\u0066', u'\u006F', u'\u0072', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0040', u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u006D', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 131077LL:
agt = m;
switch(agt){
case 0LL:
return ((new Array_<char16_t>(21, u'\u4ED6', u'\u306E', u'\u30BD', u'\u30FC', u'\u30B9', u'\u30D5', u'\u30A1', u'\u30A4', u'\u30EB', u'\u306E', u'\u516C', u'\u958B', u'\u3055', u'\u308C', u'\u3066', u'\u3044', u'\u306A', u'\u3044', u'\u8981', u'\u7D20', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(32, u'\u300D', u'\u3092', u'\u53C2', u'\u7167', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002', u'\u8981', u'\u7D20', u'\u306E', u'\u5148', u'\u982D', u'\u306B', u'\u300C', u'\u002B', u'\u300D', u'\u304C', u'\u4ED8', u'\u3044', u'\u3066', u'\u3044', u'\u308B', u'\u5FC5', u'\u8981', u'\u304C', u'\u3042', u'\u308A', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(22, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0063', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(74, u'\u0027', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0061', u'\u006E', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0073', u'\u006F', u'\u0075', u'\u0063', u'\u0065', u'\u0020', u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0061', u'\u0020', u'\u0027', u'\u002B', u'\u0027', u'\u002E'));
break;
}
break;
case 131078LL:
agy = m;
switch(agy){
case 0LL:
return ((new Array_<char16_t>(4, u'\u8B58', u'\u5225', u'\u5B50', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(31, u'\u300D', u'\u306E', u'\u5B9A', u'\u7FA9', u'\u304C', u'\u898B', u'\u3064', u'\u304B', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002', u'\u540D', u'\u524D', u'\u3092', u'\u9593', u'\u9055', u'\u3048', u'\u3066', u'\u3044', u'\u308B', u'\u53EF', u'\u80FD', u'\u6027', u'\u304C', u'\u3042', u'\u308A', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(30, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0069', u'\u0064', u'\u0065', u'\u006E', u'\u0074', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(63, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0075', u'\u006E', u'\u0064', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u006D', u'\u0061', u'\u0079', u'\u0020', u'\u0068', u'\u0061', u'\u0076', u'\u0065', u'\u0020', u'\u0062', u'\u0065', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u006C', u'\u0079', u'\u002E'));
break;
}
break;
case 131079LL:
ahd = m;
switch(ahd){
case 0LL:
return ((new Array_<char16_t>(7, u'\u300C', u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u300D', u'\u306E', u'\u5B9A', u'\u7FA9', u'\u304C', u'\u5FAA', u'\u74B0', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(25, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u0069', u'\u0072', u'\u0063', u'\u0075', u'\u006C', u'\u0061', u'\u0074', u'\u0069', u'\u006E', u'\u0067', u'\u002E'));
break;
}
break;
case 131080LL:
ahi = m;
switch(ahi){
case 0LL:
return ((new Array_<char16_t>(7, u'\u300C', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u300D', u'\u306E', u'\u7D99', u'\u627F', u'\u304C', u'\u5FAA', u'\u74B0', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(26, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0068', u'\u0065', u'\u0072', u'\u0069', u'\u0074', u'\u0061', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u0069', u'\u0072', u'\u0063', u'\u0075', u'\u006C', u'\u0061', u'\u0074', u'\u0069', u'\u006E', u'\u0067', u'\u002E'));
break;
}
break;
case 131081LL:
ahn = m;
switch(ahn){
case 0LL:
return ((new Array_<char16_t>(18, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3059', u'\u308B', u'\u89AA', u'\u30AF', u'\u30E9', u'\u30B9', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u898B', u'\u3064', u'\u304B', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(50, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0065', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0075', u'\u006E', u'\u0064', u'\u002E'));
break;
}
break;
case 131082LL:
ahs = m;
switch(ahs){
case 0LL:
return ((new Array_<char16_t>(5, u'\u30E1', u'\u30F3', u'\u30D0', u'\u540D', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(43, u'\u300D', u'\u304C', u'\u89AA', u'\u30AF', u'\u30E9', u'\u30B9', u'\u306E', u'\u3082', u'\u306E', u'\u3068', u'\u91CD', u'\u8907', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002', u'\u0020', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3059', u'\u308B', u'\u5834', u'\u5408', u'\u306F', u'\u300C', u'\u002A', u'\u300D', u'\u3092', u'\u4ED8', u'\u3051', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(17, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(71, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0064', u'\u0075', u'\u0070', u'\u006C', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u002E', u'\u0020', u'\u0041', u'\u0064', u'\u0064', u'\u0020', u'\u0027', u'\u002A', u'\u0027', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u006E', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u002E'));
break;
}
break;
case 131083LL:
ahx = m;
switch(ahx){
case 0LL:
return ((new Array_<char16_t>(9, u'\u95A2', u'\u6570', u'\u4EE5', u'\u5916', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3092', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u004F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 131084LL:
aic = m;
switch(aic){
case 0LL:
return ((new Array_<char16_t>(13, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u305F', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u300D', u'\u3068', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u4FEE', u'\u98FE', u'\u5B50', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(66, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0020', u'\u006D', u'\u006F', u'\u0064', u'\u0069', u'\u0066', u'\u0069', u'\u0065', u'\u0072', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 131085LL:
aih = m;
switch(aih){
case 0LL:
return ((new Array_<char16_t>(13, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u305F', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3068', u'\u578B', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u5F15', u'\u6570', u'\u540D', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(72, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0020', u'\u0064', u'\u006F', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 131086LL:
aim = m;
switch(aim){
case 0LL:
return ((new Array_<char16_t>(20, u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u304C', u'\u8A31', u'\u53EF', u'\u3055', u'\u308C', u'\u3066', u'\u3044', u'\u306A', u'\u3044', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u300D', u'\u3092', u'\u30AA', u'\u30FC', u'\u30D0', u'\u30FC', u'\u30E9', u'\u30A4', u'\u30C9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(12, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(54, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0064', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0064', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 131087LL:
air = m;
switch(air){
case 0LL:
return ((new Array_<char16_t>(4, u'\u5217', u'\u6319', u'\u578B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(36, u'\u300D', u'\u306E', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u306E', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(27, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(69, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006D', u'\u0061', u'\u0064', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E')));
break;
}
break;
case 131088LL:
aiw = m;
switch(aiw){
case 0LL:
return ((new Array_<char16_t>(4, u'\u5217', u'\u6319', u'\u578B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u300D', u'\u306E', u'\u5024', u'\u304C', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u306E', u'\u6709', u'\u52B9', u'\u7BC4', u'\u56F2', u'\u3092', u'\u8D85', u'\u3048', u'\u307E', u'\u3057', u'\u305F', u'\u3002')));
break;
default:
return ((new Array_<char16_t>(27, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(40, u'\u0027', u'\u0020', u'\u0065', u'\u0078', u'\u0063', u'\u0065', u'\u0065', u'\u0064', u'\u0073', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0069', u'\u0064', u'\u0020', u'\u0072', u'\u0061', u'\u006E', u'\u0067', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E')));
break;
}
break;
case 131089LL:
ajb = m;
switch(ajb){
case 0LL:
return ((new Array_<char16_t>(4, u'\u5217', u'\u6319', u'\u578B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u300D', u'\u306E', u'\u5024', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u300D', u'\u304C', u'\u5225', u'\u306E', u'\u8981', u'\u7D20', u'\u306E', u'\u5024', u'\u3068', u'\u91CD', u'\u8907', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u3059', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(11, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(19, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(50, u'\u0027', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0064', u'\u0075', u'\u0070', u'\u006C', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0061', u'\u006E', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E'))));
break;
}
break;
case 131090LL:
ajg = m;
switch(ajg){
case 0LL:
return ((new Array_<char16_t>(15, u'\u5217', u'\u6319', u'\u578B', u'\u5185', u'\u306B', u'\u5B58', u'\u5728', u'\u3057', u'\u306A', u'\u3044', u'\u8981', u'\u7D20', u'\u540D', u'\u300C', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(19, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027', u'\u0025'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(58, u'\u0027', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E'));
break;
}
break;
case 131091LL:
ajl = m;
switch(ajl){
case 0LL:
return ((new Array_<char16_t>(8, u'\u30B0', u'\u30ED', u'\u30FC', u'\u30D0', u'\u30EB', u'\u5909', u'\u6570', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(29, u'\u300D', u'\u306E', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(30, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0067', u'\u006C', u'\u006F', u'\u0062', u'\u0061', u'\u006C', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(37, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E'));
break;
}
break;
case 131092LL:
ajq = m;
switch(ajq){
case 0LL:
return ((new Array_<char16_t>(9, u'\u300C', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u300D', u'\u6587', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(29, u'\u300D', u'\u306E', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(37, u'\u0027', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E'));
break;
}
break;
case 131093LL:
ajv = m;
switch(ajv){
case 0LL:
return ((new Array_<char16_t>(3, u'\u5909', u'\u6570', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u300D', u'\u306E', u'\u578B', u'\u3068', u'\u5024', u'\u306E', u'\u578B', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(26, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(32, u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E'));
break;
}
break;
case 131094LL:
aka = m;
switch(aka){
case 0LL:
return new Array_<char16_t>(31, u'\u300C', u'\u0069', u'\u0066', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(65, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131095LL:
akf = m;
switch(akf){
case 0LL:
return new Array_<char16_t>(30, u'\u300C', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u300D', u'\u7BC0', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(68, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0065', u'\u006C', u'\u0069', u'\u0066', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131096LL:
akk = m;
switch(akk){
case 0LL:
return new Array_<char16_t>(34, u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u6BD4', u'\u8F03', u'\u53EF', u'\u80FD', u'\u306A', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(75, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0061', u'\u0072', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131097LL:
akp = m;
switch(akp){
case 0LL:
return new Array_<char16_t>(36, u'\u300C', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u300D', u'\u7BC0', u'\u306E', u'\u578B', u'\u304C', u'\u300C', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306E', u'\u578B', u'\u3068', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(106, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u002E');
break;
}
break;
case 131098LL:
aku = m;
switch(aku){
case 0LL:
return new Array_<char16_t>(34, u'\u300C', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(68, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131099LL:
akz = m;
switch(akz){
case 0LL:
return new Array_<char16_t>(31, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u521D', u'\u671F', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(54, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131100LL:
ale = m;
switch(ale){
case 0LL:
return new Array_<char16_t>(30, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u7D42', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006E', u'\u0064', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131101LL:
alj = m;
switch(alj){
case 0LL:
return new Array_<char16_t>(31, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u5897', u'\u6E1B', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(68, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u002F', u'\u0020', u'\u0064', u'\u0065', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131102LL:
alo = m;
switch(alo){
case 0LL:
return new Array_<char16_t>(39, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u5897', u'\u6E1B', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(84, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u002F', u'\u0020', u'\u0064', u'\u0065', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E');
break;
}
break;
case 131103LL:
alt = m;
switch(alt){
case 0LL:
return new Array_<char16_t>(30, u'\u300C', u'\u0066', u'\u006F', u'\u0072', u'\u300D', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u306E', u'\u5897', u'\u6E1B', u'\u5024', u'\u306F', u'\u300C', u'\u0030', u'\u300D', u'\u4EE5', u'\u5916', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(72, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u002F', u'\u0020', u'\u0064', u'\u0065', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0066', u'\u006F', u'\u0072', u'\u0027', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u006F', u'\u0074', u'\u0068', u'\u0065', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0030', u'\u0027', u'\u002E');
break;
}
break;
case 131104LL:
aly = m;
switch(aly){
case 0LL:
return new Array_<char16_t>(45, u'\u300C', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u300D', u'\u7BC0', u'\u306E', u'\u6761', u'\u4EF6', u'\u5024', u'\u306F', u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u6642', u'\u306B', u'\u5B9A', u'\u6570', u'\u306B', u'\u3067', u'\u304D', u'\u308B', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u306E', u'\u5024', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(104, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0027', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0074', u'\u0020', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u002E');
break;
}
break;
case 131105LL:
amd = m;
switch(amd){
case 0LL:
return new Array_<char16_t>(32, u'\u300C', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u300D', u'\u6587', u'\u306E', u'\u4F8B', u'\u5916', u'\u30B3', u'\u30FC', u'\u30C9', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(59, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u0078', u'\u0063', u'\u0065', u'\u0070', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u006F', u'\u0064', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131106LL:
ami = m;
switch(ami){
case 0LL:
return new Array_<char16_t>(31, u'\u623B', u'\u308A', u'\u5024', u'\u3092', u'\u8FD4', u'\u3059', u'\u95A2', u'\u6570', u'\u3067', u'\u306F', u'\u300C', u'\u0072', u'\u0065', u'\u0074', u'\u300D', u'\u6587', u'\u306F', u'\u5024', u'\u3092', u'\u8FD4', u'\u3055', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(72, u'\u0046', u'\u006F', u'\u0072', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0073', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u002C', u'\u0020', u'\u0027', u'\u0072', u'\u0065', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u002E');
break;
}
break;
case 131107LL:
amn = m;
switch(amn){
case 0LL:
return new Array_<char16_t>(27, u'\u300C', u'\u0072', u'\u0065', u'\u0074', u'\u300D', u'\u6587', u'\u306E', u'\u5024', u'\u306E', u'\u578B', u'\u304C', u'\u95A2', u'\u6570', u'\u306E', u'\u623B', u'\u308A', u'\u5024', u'\u306E', u'\u578B', u'\u3068', u'\u4E00', u'\u81F4', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(79, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0072', u'\u0065', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E');
break;
}
break;
case 131108LL:
ams = m;
switch(ams){
case 0LL:
return new Array_<char16_t>(50, u'\u300C', u'\u0064', u'\u006F', u'\u300D', u'\u6587', u'\u3067', u'\u6700', u'\u5F8C', u'\u306B', u'\u884C', u'\u3046', u'\u6F14', u'\u7B97', u'\u306F', u'\u300C', u'\u003A', u'\u003A', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u3084', u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306A', u'\u3069', u'\u306E', u'\u526F', u'\u4F5C', u'\u7528', u'\u306E', u'\u3042', u'\u308B', u'\u6F14', u'\u7B97', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(104, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006C', u'\u0061', u'\u0073', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0027', u'\u0064', u'\u006F', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0073', u'\u0069', u'\u0064', u'\u0065', u'\u0020', u'\u0065', u'\u0066', u'\u0066', u'\u0065', u'\u0063', u'\u0074', u'\u0073', u'\u0020', u'\u0073', u'\u0075', u'\u0063', u'\u0068', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0027', u'\u003A', u'\u003A', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0073', u'\u002E');
break;
}
break;
case 131109LL:
amx = m;
switch(amx){
case 0LL:
return ((new Array_<char16_t>(1, u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(23, u'\u300D', u'\u6587', u'\u306B', u'\u306F', u'\u30D6', u'\u30ED', u'\u30C3', u'\u30AF', u'\u540D', u'\u3092', u'\u6307', u'\u5B9A', u'\u3057', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(1, u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(39, u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0067', u'\u0069', u'\u0076', u'\u0065', u'\u006E', u'\u0020', u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u002E'));
break;
}
break;
case 131110LL:
anc = m;
switch(anc){
case 0LL:
return new Array_<char16_t>(32, u'\u300C', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074', u'\u300D', u'\u6587', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(73, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074', u'\u0027', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131111LL:
ani = m;
switch(ani){
case 0LL:
return new Array_<char16_t>(23, u'\u578B', u'\u3092', u'\u8A18', u'\u8FF0', u'\u3059', u'\u3079', u'\u304D', u'\u3068', u'\u3053', u'\u308D', u'\u306B', u'\u578B', u'\u4EE5', u'\u5916', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(54, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u002E');
break;
}
break;
case 131112LL:
ann = m;
switch(ann){
case 0LL:
return new Array_<char16_t>(24, u'\u5024', u'\u304C', u'\u8A2D', u'\u5B9A', u'\u3055', u'\u308C', u'\u308B', u'\u3079', u'\u304D', u'\u5834', u'\u6240', u'\u306B', u'\u5024', u'\u304C', u'\u6E21', u'\u3055', u'\u308C', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(51, u'\u004E', u'\u006F', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0070', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0073', u'\u006F', u'\u006D', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0073', u'\u0065', u'\u0074', u'\u002E');
break;
}
break;
case 131113LL:
ans = m;
switch(ans){
case 0LL:
return new Array_<char16_t>(15, u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u578B', u'\u304C', u'\u6B63', u'\u3057', u'\u304F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(28, u'\u0049', u'\u006E', u'\u0063', u'\u006F', u'\u0072', u'\u0072', u'\u0065', u'\u0063', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u002E');
break;
}
break;
case 131114LL:
anx = m;
switch(anx){
case 0LL:
return new Array_<char16_t>(25, u'\u4EE3', u'\u5165', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u5DE6', u'\u8FBA', u'\u5024', u'\u304C', u'\u4EE3', u'\u5165', u'\u53EF', u'\u80FD', u'\u306A', u'\u5909', u'\u6570', u'\u3067', u'\u306F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(72, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006C', u'\u0065', u'\u0066', u'\u0074', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0073', u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0073', u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u002E');
break;
}
break;
case 131115LL:
aoc = m;
switch(aoc){
case 0LL:
return new Array_<char16_t>(17, u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u306F', u'\u5024', u'\u6BD4', u'\u8F03', u'\u304C', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(35, u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0079', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u002E');
break;
}
break;
case 131116LL:
aoh = m;
switch(aoh){
case 0LL:
return ((new Array_<char16_t>(11, u'\u300C', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u540D', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u300D', u'\u304B', u'\u3089', u'\u578B', u'\u304C', u'\u63A8', u'\u6E2C', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(54, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0069', u'\u006E', u'\u0066', u'\u0065', u'\u0072', u'\u0072', u'\u0065', u'\u0064', u'\u0020', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u0027', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0027', u'\u002E'));
break;
}
break;
case 131117LL:
aom = m;
switch(aom){
case 0LL:
return new Array_<char16_t>(22, u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u306F', u'\u300C', u'\u007E', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u3067', u'\u9023', u'\u7D50', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(52, u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u006E', u'\u0061', u'\u0074', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0069', u'\u0074', u'\u0068', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u007E', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u002E');
break;
}
break;
case 131118LL:
aor = m;
switch(aor){
case 0LL:
return new Array_<char16_t>(9, u'\u0030', u'\u3067', u'\u9664', u'\u7B97', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(13, u'\u0044', u'\u0069', u'\u0076', u'\u0069', u'\u0064', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0079', u'\u0020', u'\u0030', u'\u002E');
break;
}
break;
case 131119LL:
aow = m;
switch(aow){
case 0LL:
return new Array_<char16_t>(34, u'\u300C', u'\u003A', u'\u0024', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u5DE6', u'\u8FBA', u'\u5024', u'\u3082', u'\u3057', u'\u304F', u'\u306F', u'\u53F3', u'\u8FBA', u'\u5024', u'\u304C', u'\u4EE3', u'\u5165', u'\u53EF', u'\u80FD', u'\u306A', u'\u5909', u'\u6570', u'\u3067', u'\u306F', u'\u3042', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(75, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006C', u'\u0065', u'\u0066', u'\u0074', u'\u0020', u'\u006F', u'\u0072', u'\u0020', u'\u0072', u'\u0069', u'\u0067', u'\u0068', u'\u0074', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u003A', u'\u0024', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0073', u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u0072', u'\u0069', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u002E');
break;
}
break;
case 131120LL:
apb = m;
switch(apb){
case 0LL:
return new Array_<char16_t>(32, u'\u300C', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u6761', u'\u4EF6', u'\u5F0F', u'\u306F', u'\u300C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(66, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0069', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0061', u'\u006C', u'\u0020', u'\u0065', u'\u0078', u'\u0070', u'\u0072', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0027', u'\u002E');
break;
}
break;
case 131121LL:
apg = m;
switch(apg){
case 0LL:
return new Array_<char16_t>(33, u'\u300C', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306E', u'\u62EC', u'\u5F27', u'\u5185', u'\u306E', u'\u0032', u'\u3064', u'\u306E', u'\u5024', u'\u306F', u'\u540C', u'\u3058', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(80, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0077', u'\u006F', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0073', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u0068', u'\u0065', u'\u0073', u'\u0069', u'\u0073', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u003F', u'\u0028', u'\u002C', u'\u0029', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0073', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131122LL:
apl = m;
switch(apl){
case 0LL:
return new Array_<char16_t>(38, u'\u300C', u'\u0023', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306F', u'\u30AF', u'\u30E9', u'\u30B9', u'\u3084', u'\u300C', u'\u006C', u'\u0069', u'\u0073', u'\u0074', u'\u300D', u'\u300C', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u300D', u'\u306A', u'\u3069', u'\u306E', u'\u53C2', u'\u7167', u'\u578B', u'\u306B', u'\u3057', u'\u304B', u'\u4F7F', u'\u3048', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(89, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0023', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u0020', u'\u006F', u'\u006E', u'\u006C', u'\u0079', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0075', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0073', u'\u0020', u'\u0073', u'\u0075', u'\u0063', u'\u0068', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0073', u'\u002C', u'\u0020', u'\u0027', u'\u006C', u'\u0069', u'\u0073', u'\u0074', u'\u0027', u'\u0020', u'\u0061', u'\u006E', u'\u0064', u'\u0020', u'\u0027', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131123LL:
apq = m;
switch(apq){
case 0LL:
return new Array_<char16_t>(37, u'\u300C', u'\u0023', u'\u300D', u'\u6F14', u'\u7B97', u'\u5B50', u'\u306B', u'\u8A18', u'\u8FF0', u'\u3059', u'\u308B', u'\u914D', u'\u5217', u'\u306E', u'\u8981', u'\u7D20', u'\u6570', u'\u306E', u'\u5024', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(71, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u006E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0027', u'\u0023', u'\u0027', u'\u0020', u'\u006F', u'\u0070', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u006F', u'\u0072', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131124LL:
apv = m;
switch(apv){
case 0LL:
return new Array_<char16_t>(23, u'\u95A2', u'\u6570', u'\u3067', u'\u306A', u'\u3044', u'\u3082', u'\u306E', u'\u3092', u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(51, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0065', u'\u0064', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0069', u'\u0066', u'\u0020', u'\u0069', u'\u0074', u'\u0020', u'\u0077', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0061', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E');
break;
}
break;
case 131125LL:
aqa = m;
switch(aqa){
case 0LL:
return ((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(16, u'\u500B', u'\u306E', u'\u5F15', u'\u6570', u'\u3092', u'\u53D7', u'\u3051', u'\u53D6', u'\u308B', u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306B'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(20, u'\u500B', u'\u306E', u'\u5F15', u'\u6570', u'\u304C', u'\u6307', u'\u5B9A', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u95A2', u'\u6570', u'\u306E', u'\u578B', u'\u306F', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u300D', u'\u3067', u'\u3059', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(59, u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u0077', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0072', u'\u0065', u'\u0063', u'\u0065', u'\u0069', u'\u0076', u'\u0065', u'\u0064', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(34, u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u002E', u'\u0020', u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0027'))));
break;
}
break;
case 131126LL:
aqf = m;
switch(aqf){
case 0LL:
return ((new Array_<char16_t>(7, u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306E'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(28, u'\u756A', u'\u76EE', u'\u306E', u'\u53C2', u'\u7167', u'\u6E21', u'\u3057', u'\u306E', u'\u5F15', u'\u6570', u'\u306B', u'\u3001', u'\u53C2', u'\u7167', u'\u3092', u'\u53D6', u'\u308C', u'\u306A', u'\u3044', u'\u5024', u'\u304C', u'\u6E21', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(52, u'\u0041', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0061', u'\u0074', u'\u0020', u'\u0063', u'\u0061', u'\u006E', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0070', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(74, u'\u0074', u'\u0068', u'\u002F', u'\u0073', u'\u0074', u'\u002F', u'\u006E', u'\u0064', u'\u002F', u'\u0072', u'\u0064', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002C', u'\u0020', u'\u0077', u'\u0068', u'\u0069', u'\u0063', u'\u0068', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0061', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002C', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u002E'));
break;
}
break;
case 131127LL:
aqk = m;
switch(aqk){
case 0LL:
return ((new Array_<char16_t>(19, u'\u95A2', u'\u6570', u'\u547C', u'\u3073', u'\u51FA', u'\u3057', u'\u306E', u'\u5F15', u'\u6570', u'\u306E', u'\u578B', u'\u304C', u'\u7570', u'\u306A', u'\u308A', u'\u307E', u'\u3059', u'\u3002', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u756A', u'\u76EE', u'\u306E', u'\u5F15', u'\u6570', u'\u3067', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(12, u'\u300D', u'\u3092', u'\u6307', u'\u5B9A', u'\u3059', u'\u3079', u'\u304D', u'\u3068', u'\u3053', u'\u308D', u'\u306B', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u6E21', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002'))));
break;
default:
return ((new Array_<char16_t>(58, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0064', u'\u0069', u'\u0066', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(25, u'\u0027', u'\u0020', u'\u0068', u'\u0061', u'\u0073', u'\u0020', u'\u0062', u'\u0065', u'\u0065', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0077', u'\u0068', u'\u0065', u'\u0072', u'\u0065', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(1LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(27, u'\u0027', u'\u0020', u'\u0073', u'\u0068', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(21, u'\u0074', u'\u0068', u'\u002F', u'\u0073', u'\u0074', u'\u002F', u'\u006E', u'\u0064', u'\u002F', u'\u0072', u'\u0064', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E'))));
break;
}
break;
case 131128LL:
aqp = m;
switch(aqp){
case 0LL:
return new Array_<char16_t>(23, u'\u914D', u'\u5217', u'\u3067', u'\u306A', u'\u3044', u'\u3082', u'\u306E', u'\u306B', u'\u914D', u'\u5217', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u3088', u'\u3046', u'\u3068', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(37, u'\u0041', u'\u0020', u'\u006E', u'\u006F', u'\u006E', u'\u002D', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0061', u'\u0073', u'\u0020', u'\u0061', u'\u006E', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u002E');
break;
}
break;
case 131129LL:
aqu = m;
switch(aqu){
case 0LL:
return new Array_<char16_t>(23, u'\u914D', u'\u5217', u'\u306E', u'\u6DFB', u'\u5B57', u'\u306F', u'\u300C', u'\u0069', u'\u006E', u'\u0074', u'\u300D', u'\u578B', u'\u3067', u'\u306A', u'\u3051', u'\u308C', u'\u3070', u'\u306A', u'\u308A', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(28, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0064', u'\u0069', u'\u0063', u'\u0065', u'\u0073', u'\u0020', u'\u006D', u'\u0075', u'\u0073', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0027', u'\u0069', u'\u006E', u'\u0074', u'\u0027', u'\u002E');
break;
}
break;
case 131130LL:
aqz = m;
switch(aqz){
case 0LL:
return ((new Array_<char16_t>(8, u'\u53C2', u'\u7167', u'\u5148', u'\u306E', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u304C', u'\u5B58', u'\u5728', u'\u3057', u'\u307E', u'\u305B', u'\u3093', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0065', u'\u0073', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074', u'\u002E'));
break;
}
break;
case 131131LL:
are = m;
switch(are){
case 0LL:
return ((new Array_<char16_t>(12, u'\u516C', u'\u958B', u'\u3055', u'\u308C', u'\u3066', u'\u3044', u'\u306A', u'\u3044', u'\u30E1', u'\u30F3', u'\u30D0', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u300D', u'\u3092', u'\u53C2', u'\u7167', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(23, u'\u0041', u'\u006E', u'\u0020', u'\u0075', u'\u006E', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0073', u'\u0068', u'\u0065', u'\u0064', u'\u0020', u'\u006D', u'\u0065', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0072', u'\u0065', u'\u0066', u'\u0065', u'\u0072', u'\u0065', u'\u006E', u'\u0063', u'\u0065', u'\u0064', u'\u002E'));
break;
}
break;
case 131132LL:
arj = m;
switch(arj){
case 0LL:
return new Array_<char16_t>(25, u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u306E', u'\u578B', u'\u304C', u'\u4E00', u'\u81F4', u'\u3057', u'\u3066', u'\u3044', u'\u307E', u'\u305B', u'\u3093', u'\u3002');
break;
default:
return new Array_<char16_t>(61, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u0020', u'\u0064', u'\u006F', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u002E');
break;
}
break;
case 131133LL:
aro = m;
switch(aro){
case 0LL:
return new Array_<char16_t>(29, u'\u5024', u'\u578B', u'\u306E', u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306B', u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u304C', u'\u8A18', u'\u8FF0', u'\u3055', u'\u308C', u'\u307E', u'\u3057', u'\u305F', u'\u3002');
break;
default:
return new Array_<char16_t>(60, u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0077', u'\u0061', u'\u0073', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0074', u'\u0065', u'\u006E', u'\u0020', u'\u0069', u'\u006E', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u002E');
break;
}
break;
case 131134LL:
art = m;
switch(art){
case 0LL:
return new Array_<char16_t>(71, u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306E', u'\u3059', u'\u3079', u'\u3066', u'\u306E', u'\u8981', u'\u7D20', u'\u304C', u'\u300C', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u300D', u'\u306E', u'\u8981', u'\u7D20', u'\u540D', u'\u306E', u'\u305F', u'\u3081', u'\u3001', u'\u578B', u'\u304C', u'\u6C7A', u'\u5B9A', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u306E', u'\u8981', u'\u7D20', u'\u540D', u'\u3092', u'\u30AD', u'\u30E3', u'\u30B9', u'\u30C8', u'\u3057', u'\u3066', u'\u578B', u'\u3092', u'\u793A', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(164, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0074', u'\u0065', u'\u0072', u'\u006D', u'\u0069', u'\u006E', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0063', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u0020', u'\u0061', u'\u0072', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u0065', u'\u006E', u'\u0075', u'\u006D', u'\u0027', u'\u002E', u'\u0020', u'\u0043', u'\u0061', u'\u0073', u'\u0074', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0069', u'\u006E', u'\u0064', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131135LL:
ary = m;
switch(ary){
case 0LL:
return new Array_<char16_t>(70, u'\u914D', u'\u5217', u'\u521D', u'\u671F', u'\u5316', u'\u5B50', u'\u300C', u'\u005B', u'\u005D', u'\u300D', u'\u306E', u'\u3059', u'\u3079', u'\u3066', u'\u306E', u'\u8981', u'\u7D20', u'\u304C', u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u306E', u'\u305F', u'\u3081', u'\u3001', u'\u578B', u'\u304C', u'\u6C7A', u'\u5B9A', u'\u3067', u'\u304D', u'\u307E', u'\u305B', u'\u3093', u'\u3067', u'\u3057', u'\u305F', u'\u3002', u'\u0020', u'\u3044', u'\u305A', u'\u308C', u'\u304B', u'\u306E', u'\u300C', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u300D', u'\u3092', u'\u30AD', u'\u30E3', u'\u30B9', u'\u30C8', u'\u3057', u'\u3066', u'\u578B', u'\u3092', u'\u793A', u'\u3057', u'\u3066', u'\u304F', u'\u3060', u'\u3055', u'\u3044', u'\u3002');
break;
default:
return new Array_<char16_t>(136, u'\u0054', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u0063', u'\u006F', u'\u0075', u'\u006C', u'\u0064', u'\u0020', u'\u006E', u'\u006F', u'\u0074', u'\u0020', u'\u0062', u'\u0065', u'\u0020', u'\u0064', u'\u0065', u'\u0074', u'\u0065', u'\u0072', u'\u006D', u'\u0069', u'\u006E', u'\u0065', u'\u0064', u'\u0020', u'\u0062', u'\u0065', u'\u0063', u'\u0061', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0061', u'\u006C', u'\u006C', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0073', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0061', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0020', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0069', u'\u0061', u'\u006C', u'\u0069', u'\u007A', u'\u0065', u'\u0072', u'\u0020', u'\u0027', u'\u005B', u'\u005D', u'\u0027', u'\u0020', u'\u0061', u'\u0072', u'\u0065', u'\u0020', u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u002E', u'\u0020', u'\u0043', u'\u0061', u'\u0073', u'\u0074', u'\u0020', u'\u006F', u'\u006E', u'\u0065', u'\u0020', u'\u006F', u'\u0066', u'\u0020', u'\u0027', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0027', u'\u0020', u'\u0074', u'\u006F', u'\u0020', u'\u0069', u'\u006E', u'\u0064', u'\u0069', u'\u0063', u'\u0061', u'\u0074', u'\u0065', u'\u0020', u'\u0074', u'\u0068', u'\u0065', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u002E');
break;
}
break;
case 131136LL:
asd = m;
switch(asd){
case 0LL:
return ((new Array_<char16_t>(11, u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3067', u'\u304D', u'\u306A', u'\u3044', u'\u8981', u'\u7D20', u'\u300C'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u300D', u'\u306B', u'\u30A2', u'\u30AF', u'\u30BB', u'\u30B9', u'\u3057', u'\u307E', u'\u3057', u'\u305F', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(31, u'\u0041', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0065', u'\u0064', u'\u0020', u'\u0069', u'\u006E', u'\u0061', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0069', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0065', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0020', u'\u0027'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0027', u'\u002E'));
break;
}
break;
case 196609LL:
asi = m;
switch(asi){
case 0LL:
return new Array_<char16_t>(3, u'\u6210', u'\u529F', u'\u3002');
break;
default:
return new Array_<char16_t>(8, u'\u0053', u'\u0075', u'\u0063', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u002E');
break;
}
break;
case 196610LL:
aso = m;
switch(aso){
case 0LL:
return new Array_<char16_t>(3, u'\u5931', u'\u6557', u'\u3002');
break;
default:
return new Array_<char16_t>(8, u'\u0046', u'\u0061', u'\u0069', u'\u006C', u'\u0075', u'\u0072', u'\u0065', u'\u002E');
break;
}
break;
case 196611LL:
ast = m;
switch(ast){
case 0LL:
return ((new Array_<char16_t>(9, u'\u30B3', u'\u30F3', u'\u30D1', u'\u30A4', u'\u30EB', u'\u958B', u'\u59CB', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u79D2', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0043', u'\u006F', u'\u006D', u'\u0070', u'\u0069', u'\u006C', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0072', u'\u0074', u'\u0065', u'\u0064', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0073', u'\u002E'));
break;
}
break;
case 196612LL:
asy = m;
switch(asy){
case 0LL:
return ((new Array_<char16_t>(10, u'\u5B57', u'\u53E5', u'\u69CB', u'\u6587', u'\u89E3', u'\u6790', u'\u5B8C', u'\u4E86', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u79D2', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(21, u'\u0050', u'\u0061', u'\u0072', u'\u0073', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0073', u'\u002E'));
break;
}
break;
case 196613LL:
atd = m;
switch(atd){
case 0LL:
return ((new Array_<char16_t>(8, u'\u610F', u'\u5473', u'\u89E3', u'\u6790', u'\u5B8C', u'\u4E86', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u79D2', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(31, u'\u0053', u'\u0065', u'\u006D', u'\u0061', u'\u006E', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0061', u'\u006E', u'\u0061', u'\u006C', u'\u0079', u'\u0073', u'\u0069', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0073', u'\u002E'));
break;
}
break;
case 196614LL:
ati = m;
switch(ati){
case 0LL:
return ((new Array_<char16_t>(8, u'\u751F', u'\u6210', u'\u51E6', u'\u7406', u'\u5B8C', u'\u4E86', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u79D2', u'\u3002'));
break;
default:
return ((new Array_<char16_t>(32, u'\u0047', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0070', u'\u0072', u'\u006F', u'\u0063', u'\u0065', u'\u0073', u'\u0073', u'\u0020', u'\u0069', u'\u0073', u'\u0020', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((vk)->At(0LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0073', u'\u002E'));
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// cmp
static int64_t atm(kl* atn /*me*/, kl* ato /*t*/){
return (atp)(((static_cast<int64_t>((atn)->km)) - (static_cast<int64_t>((ato)->km))));
}
// toStr
static Array_<char16_t>* atq(kl* atr /*me*/){
return v<bool>(((atr)->km), (new Array_<int64_t>(1, (0LL))));
}
// _dtor
static void ats(kl* att){
}
// _copy
static kl* atu(kl* atv){
kl* atw;
(atw) = (new kl());
((atw)->km) = ((atv)->km);
return as_<kl>(classTable_, (atw), 20);
}
// _toBin
static Array_<uint8_t>* atx(kl* aty){
Array_<uint8_t>* atz;
(atz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(atz) = ((atz)->Cat(toBin_((aty)->km)));
return atz;
}
// _fromBin
static kl* aub(kl* auc, Array_<uint8_t>* aud, int64_t* aue){
kl* auf;
(auf) = (new kl());
((auf)->km) = (fromBin_<bool>((aud), (*aue)));
return auf;
}
// _forEach
template<typename T_, typename K_, typename V_> static bool ko(T_ aug /*me_*/, Array_<int64_t>* auh /*type*/, const void* aui /*callback*/, fz* auj /*data*/){
return dictForEach_(aug->B, static_cast<bool(*)(K_, V_, Class_*)>(aui), auj);
}
// parseSrc
static bool kp(Array_<char16_t>* auk /*key*/, fx* aul /*value*/, fz* aum /*data*/){
Array_<char16_t>* aus; // truePath
avk* avi; // ast
if(!eqAddr_((aul), (nullptr))){
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (auk), (aul));
return true;
}
if(!((auq)((auk)))){
(ad)((4LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (auk))));
return true;
}
((as_<kl>(classTable_, (aum), 20))->km) = (false);
(aus) = (nullptr);
if(((auk)->At(0LL)) == (u'\u005C')){
(aus) = (((ay)->Cat((auv)((auw<Array_<char16_t>*>((auk), (new Array_<int64_t>(1, (0LL))), (1LL), (-1LL))))))->Cat(new Array_<char16_t>(3, u'\u002E', u'\u006B', u'\u006E')));
}
else{
(aus) = (((av)->Cat((auv)((auk))))->Cat(new Array_<char16_t>(3, u'\u002E', u'\u006B', u'\u006E')));
}
(be) = ((auy)((new auz()), (aus)));
if(eqAddr_((be), (nullptr))){
(ad)((5LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (aus))));
return true;
}
(bf) = (auk);
(avc) = (1LL);
(avd) = (0LL);
(ave) = (u'\u0000');
(avf) = (u'\u0000');
(avg) = (false);
(bg) = (new Stack_<fx*>());
(avh) = (0LL);
(bh) = (nullptr);
(avi) = ((avj)());
(avm)((be));
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (auk), (avi));
return true;
}
// searchMain
static fw* ks(){
fx* avn; // ast
bool avp;
fx* avs; // mainFunc
bool avt;
fw* avw; // mainFunc2
(avn) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u005C'))->Cat(az)), (&avp)));
if(eqAddr_((avn), (nullptr))){
(ad)((131073LL), (nullptr), (nullptr));
return nullptr;
}
(avs) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((avn)->nh), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006D', u'\u0061', u'\u0069', u'\u006E')), (&avt)));
if((eqAddr_((avs), (nullptr))) || (((avs)->lw) != (256LL))){
(ad)((131073LL), (nullptr), (nullptr));
return nullptr;
}
(avw) = (as_<fw>(classTable_, (avs), 8));
if(((((((avw)->sg)->Len()) != (0LL)) || (!eqAddr_(((avw)->sh), (nullptr)))) || (((avw)->sm) != (0LL))) || ((((avw)->sf)->Len()) != (0LL))){
(ad)((131074LL), ((avw)->ne), (nullptr));
}
return avw;
}
// resolveIdentifier
static bool kv(Array_<char16_t>* avz /*key*/, fx* awa /*value*/, fz* awb /*data*/){
List_<avl*>* awc; // scopeRefedItems
avl* awh; // item
fx* awj; // ast
bool awl; // otherFile
int64_t awm; // ptrAt
Array_<char16_t>* awo; // ptrName
fx* awp; // foundAst
Array_<char16_t>* aws; // ptrSrc
fx* awy; // ast2
bool awz;
bool axc;
fx* axe; // scope
bool axg; // overFunc
fx* axr; // ast2
bool axs;
bool axv; // err
int64_t aya; // kind
if(!(is_(classTable_, (awa), 32))){
throw 0xE9170000U;
}
(awc) = ((as_<avk>(classTable_, (awa), 32))->awd);
awe<List_<avl*>*>((awc), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<avl*>*>((awc), (new Array_<int64_t>(1, (0LL)))))){
(awh) = (awi<List_<avl*>*, avl*>((awc), (new Array_<int64_t>(1, (0LL)))));
(awj) = ((awh)->awk);
if(!(eqAddr_(((awj)->nj), (nullptr)))){
throw 0xE9170000U;
}
if(!(!eqAddr_(((awj)->ni), (nullptr)))){
throw 0xE9170000U;
}
(awl) = (false);
(awm) = (awn<Array_<char16_t>*, char16_t>(((awj)->ni), (new Array_<int64_t>(1, (0LL))), (u'\u0040'), (-1LL)));
(awo) = (((awm) == (-1LL)) ? ((awj)->ni) : (auw<Array_<char16_t>*>(((awj)->ni), (new Array_<int64_t>(1, (0LL))), ((awm) + (1LL)), (-1LL))));
(awp) = (nullptr);
if((awm) != (-1LL)){
(aws) = (nullptr);
if((awm) == (0LL)){
(aws) = (avz);
}
else{
(aws) = (auw<Array_<char16_t>*>(((awj)->ni), (new Array_<int64_t>(1, (0LL))), (0LL), (awm)));
if(cmp_((aws), (avz)) == 0){
(ad)((131076LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, (aws))));
}
(awl) = (true);
}
(awy) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), (aws), (&awz)));
if(!eqAddr_((awy), (nullptr))){
(awp) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((awy)->nh), (new Array_<int64_t>(1, (0LL))), (awo), (&axc)));
}
}
else{
(axe) = ((awh)->axf);
(axg) = (false);
while(true){
if(eqAddr_(((axe)->ng), (nullptr))){
break;
}
if((!eqAddr_(((axe)->nf), (nullptr))) && (cmp_(((axe)->nf), (awo)) == 0)){
if((((axe)->lw) == (256LL)) && (!eqAddr_(((axe)->ni), (nullptr)))){
(ad)((131075LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, (awo))));
}
else{
(awp) = (axe);
break;
}
}
(axr) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((axe)->nh), (new Array_<int64_t>(1, (0LL))), (awo), (&axs)));
if(!eqAddr_((axr), (nullptr))){
(axv) = (false);
if(axg){
if(((axr)->lw) == (7LL)){
(aya) = ((as_<gb>(classTable_, (axr), 10))->qk);
if((((aya) == (5LL)) || ((aya) == (3LL))) || ((aya) == (2LL))){
(axv) = (true);
}
}
if((!(axv)) && ((aye<int64_t>(((axr)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
(axv) = (true);
}
}
if(((!(axv)) && (((axr)->lw) == (256LL))) && (!eqAddr_(((axr)->ni), (nullptr)))){
(axv) = (true);
}
if(axv){
(ad)((131075LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, (awo))));
}
else{
(awp) = (axr);
break;
}
}
if(((axe)->lw) == (256LL)){
(axg) = (true);
}
(axe) = ((axe)->ng);
}
}
if(!eqAddr_((awp), (nullptr))){
if((awl) && (!((awp)->no))){
(ad)((131077LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, ((awj)->ni))));
}
((awj)->nj) = (awp);
}
else{
(ad)((131078LL), ((awj)->ne), (new Array_<Array_<char16_t>*>(1, ((awj)->ni))));
((awj)->nj) = (nullptr);
}
ays<List_<avl*>*>((awc), (new Array_<int64_t>(1, (0LL))));
}
return true;
}
// rebuild
static fw* kw(fw* ayt /*mainFunc*/){
fw* ayu; // entry
fx* ayy; // root
bool ayz;
(ayu) = (nullptr);
(ayu) = ((ayw)((ayt)));
(ayx)((ayu));
(ayy) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u005C'))->Cat(az)), (&ayz)));
if(!(is_(classTable_, (ayy), 32))){
throw 0xE9170000U;
}
uh<List_<fx*>*, fx*>(((as_<avk>(classTable_, (ayy), 32))->aza), (new Array_<int64_t>(1, (0LL))), (ayu));
ko<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), (azb), (nullptr));
return ayu;
}
// addr
static uint64_t mk(fz* azc /*class_*/){
return reinterpret_cast<uint64_t>(azc);
}
// _addList
template<typename T_, typename C_> static void uh(T_ azd /*me_*/, Array_<int64_t>* aze /*type*/, C_ azf /*item*/){
azd->B.push_back(azf);
}
// _addQueue
template<typename T_, typename C_> static void uk(T_ azg /*me_*/, Array_<int64_t>* azh /*type*/, C_ azi /*item*/){
azg->B.push(azi);
}
// _dtor
static void azj(um* azk){
((azk)->azl) = (nullptr);
((azk)->azm) = (nullptr);
}
// _copy
static um* azn(um* azo){
um* azp;
(azp) = (new um());
((azp)->azq) = ((azo)->azq);
((azp)->azr) = ((azo)->azr);
((azp)->azl) = (copy_((azo)->azl));
((azp)->azm) = (copy_((azo)->azm));
return as_<um>(classTable_, (azp), 24);
}
// _toBin
static Array_<uint8_t>* azs(um* azt){
Array_<uint8_t>* azu;
(azu) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(azu) = ((azu)->Cat(toBin_((azt)->azq)));
(azu) = ((azu)->Cat(toBin_((azt)->azr)));
(azu) = ((azu)->Cat(toBin_((azt)->azl)));
(azu) = ((azu)->Cat(toBin_((azt)->azm)));
return azu;
}
// _fromBin
static um* azz(um* baa, Array_<uint8_t>* bab, int64_t* bac){
um* bad;
(bad) = (new um());
((bad)->azq) = (fromBin_<bool>((bab), (*bac)));
((bad)->azr) = (fromBin_<bool>((bab), (*bac)));
((bad)->azl) = (fromBin_<fx*>((bab), (*bac)));
((bad)->azm) = (fromBin_<um*>((bab), (*bac)));
return bad;
}
// _dtor
static void bae(ul* baf){
((baf)->bag) = (nullptr);
((baf)->ne) = (nullptr);
((baf)->nf) = (nullptr);
((baf)->ng) = (nullptr);
((baf)->nh) = (nullptr);
((baf)->ni) = (nullptr);
((baf)->nj) = (nullptr);
((baf)->nk) = (nullptr);
}
// _copy
static ul* bah(ul* bai){
ul* baj;
(baj) = (new ul());
((baj)->bag) = (copy_((bai)->bag));
((baj)->ne) = (copy_((bai)->ne));
((baj)->nf) = (copy_((bai)->nf));
((baj)->ng) = (copy_((bai)->ng));
((baj)->nh) = (copy_((bai)->nh));
((baj)->ni) = (copy_((bai)->ni));
((baj)->nj) = (copy_((bai)->nj));
((baj)->nk) = (copy_((bai)->nk));
((baj)->no) = ((bai)->no);
((baj)->lw) = ((bai)->lw);
return as_<ul>(classTable_, (baj), 22);
}
// _toBin
static Array_<uint8_t>* bak(ul* bal){
Array_<uint8_t>* bam;
(bam) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bam) = ((bam)->Cat(toBin_((bal)->bag)));
(bam) = ((bam)->Cat(toBin_((bal)->ne)));
(bam) = ((bam)->Cat(toBin_((bal)->nf)));
(bam) = ((bam)->Cat(toBin_((bal)->ng)));
(bam) = ((bam)->Cat(toBin_((bal)->nh)));
(bam) = ((bam)->Cat(toBin_((bal)->ni)));
(bam) = ((bam)->Cat(toBin_((bal)->nj)));
(bam) = ((bam)->Cat(toBin_((bal)->nk)));
(bam) = ((bam)->Cat(toBin_((bal)->no)));
(bam) = ((bam)->Cat(toBin_((bal)->lw)));
return bam;
}
// _fromBin
static ul* bax(ul* bay, Array_<uint8_t>* baz, int64_t* bba){
ul* bbb;
(bbb) = (new ul());
((bbb)->bag) = (fromBin_<List_<um*>*>((baz), (*bba)));
((bbb)->ne) = (fromBin_<ga*>((baz), (*bba)));
((bbb)->nf) = (fromBin_<Array_<char16_t>*>((baz), (*bba)));
((bbb)->ng) = (fromBin_<fx*>((baz), (*bba)));
((bbb)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((baz), (*bba)));
((bbb)->ni) = (fromBin_<Array_<char16_t>*>((baz), (*bba)));
((bbb)->nj) = (fromBin_<fx*>((baz), (*bba)));
((bbb)->nk) = (fromBin_<fy*>((baz), (*bba)));
((bbb)->no) = (fromBin_<bool>((baz), (*bba)));
((bbb)->lw) = (fromBin_<int64_t>((baz), (*bba)));
return bbb;
}
// _dtor
static void bbc(un* bbd){
((bbd)->bbe) = (nullptr);
((bbd)->bbf) = (nullptr);
}
// _copy
static un* bbg(un* bbh){
un* bbi;
(bbi) = (new un());
((bbi)->bbe) = (copy_((bbh)->bbe));
((bbi)->bbf) = (copy_((bbh)->bbf));
return as_<un>(classTable_, (bbi), 26);
}
// _toBin
static Array_<uint8_t>* bbj(un* bbk){
Array_<uint8_t>* bbl;
(bbl) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bbl) = ((bbl)->Cat(toBin_((bbk)->bbe)));
(bbl) = ((bbl)->Cat(toBin_((bbk)->bbf)));
return bbl;
}
// _fromBin
static un* bbo(un* bbp, Array_<uint8_t>* bbq, int64_t* bbr){
un* bbs;
(bbs) = (new un());
((bbs)->bbe) = (fromBin_<Array_<char16_t>*>((bbq), (*bbr)));
((bbs)->bbf) = (fromBin_<gc*>((bbq), (*bbr)));
return bbs;
}
// _getQueue
template<typename T_, typename R_> static R_ us(T_ bbt /*me_*/, Array_<int64_t>* bbu /*type*/){
R_ r_ = bbt->B.front();
bbt->B.pop();
return r_;
}
// buildFunc
static void ut(fw* bbv /*ast*/){
bby* bbw; // info
Array_<char16_t>* bcc; // template
Array_<char16_t>* bcr; // retType
Array_<char16_t>* bda; // arg
int64_t bdc; // idx
List_<gb*>* bdd; // items
gb* bdf; // item
bby* bdj; // info2
bool bep; // hasMembers
gb* bes; // arg2
List_<um*>* bev; // members
int64_t bfb; // localVarPos
gb* bfg; // localVar
bby* bfh; // info2
un* bfo; // tmpVar
(bbw) = ((bbx)((bbv)));
if((bbw)->bca){
return;
}
((bbw)->bca) = (true);
(bcc) = (new Array_<char16_t>(0));
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL)){
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)){
(bcc) = (new Array_<char16_t>(48, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u004B', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0056', u'\u005F', u'\u003E', u'\u0020'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (8LL))) == (8LL)){
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(bcc) = (new Array_<char16_t>(48, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0043', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0052', u'\u005F', u'\u003E', u'\u0020'));
}
else{
(bcc) = (new Array_<char16_t>(35, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0043', u'\u005F', u'\u003E', u'\u0020'));
}
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(bcc) = (new Array_<char16_t>(35, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0052', u'\u005F', u'\u003E', u'\u0020'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (256LL))) == (256LL)){
(bcc) = (new Array_<char16_t>(48, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u004B', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0056', u'\u005F', u'\u003E', u'\u0020'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (64LL))) == (64LL)){
(bcc) = (new Array_<char16_t>(35, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0043', u'\u005F', u'\u003E', u'\u0020'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (512LL))) == (512LL)){
(bcc) = (new Array_<char16_t>(35, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u004B', u'\u005F', u'\u003E', u'\u0020'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (1024LL)){
(bcc) = (new Array_<char16_t>(35, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u002C', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0056', u'\u005F', u'\u003E', u'\u0020'));
}
else{
(bcc) = (new Array_<char16_t>(22, u'\u0074', u'\u0065', u'\u006D', u'\u0070', u'\u006C', u'\u0061', u'\u0074', u'\u0065', u'\u003C', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0020', u'\u0054', u'\u005F', u'\u003E', u'\u0020'));
}
}
(bcr) = (nullptr);
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(bcr) = (new Array_<char16_t>(2, u'\u0052', u'\u005F'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (4LL))) == (4LL)){
(bcr) = (new Array_<char16_t>(2, u'\u0054', u'\u005F'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (64LL))) == (64LL)){
(bcr) = (new Array_<char16_t>(11, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0043', u'\u005F', u'\u003E', u'\u002A'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (512LL))) == (512LL)){
(bcr) = (new Array_<char16_t>(11, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u004B', u'\u005F', u'\u003E', u'\u002A'));
}
else if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (1024LL)){
(bcr) = (new Array_<char16_t>(11, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0056', u'\u005F', u'\u003E', u'\u002A'));
}
else{
(bcr) = ((bcz)(((bbv)->sh)));
}
(bda) = (new Array_<char16_t>(0));
(bdc) = (0LL);
(bdd) = ((bbv)->sg);
awe<List_<gb*>*>((bdd), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bdd), (new Array_<int64_t>(1, (0LL)))))){
(bdf) = (awi<List_<gb*>*, gb*>((bdd), (new Array_<int64_t>(1, (0LL)))));
if((bdc) != (0LL)){
(bda) = ((bda)->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
}
(bdj) = ((bbx)((bdf)));
if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL)) && ((bdc) == (0LL))){
if(!((bdm)(((bdf)->qf)))){
throw 0xE9170000U;
}
(bda) = ((bda)->Cat(new Array_<char16_t>(2, u'\u0054', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)) && ((bdc) == (2LL))){
if(!((bdm)(((bdf)->qf)))){
throw 0xE9170000U;
}
(bda) = ((bda)->Cat(new Array_<char16_t>(2, u'\u004B', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)) && ((bdc) == (3LL))){
if(!((bdm)(((bdf)->qf)))){
throw 0xE9170000U;
}
(bda) = ((bda)->Cat(new Array_<char16_t>(2, u'\u0056', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (8LL))) == (8LL)) && ((bdc) == (2LL))){
if(!((bdm)(((bdf)->qf)))){
throw 0xE9170000U;
}
(bda) = ((bda)->Cat(new Array_<char16_t>(2, u'\u0043', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (2LL))) == (2LL)) && ((bdc) == (2LL))){
if(!((bdm)(((bdf)->qf)))){
throw 0xE9170000U;
}
(bda) = ((bda)->Cat(new Array_<char16_t>(2, u'\u0054', u'\u005F')));
}
else if(((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (256LL))) == (256LL)) && ((bdc) == (2LL))){
if(!((bdm)(((bdf)->qf)))){
throw 0xE9170000U;
}
(bda) = ((bda)->Cat(new Array_<char16_t>(11, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0076', u'\u006F', u'\u0069', u'\u0064', u'\u002A')));
}
else{
(bda) = ((bda)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)(((bdf)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
if((bdf)->ql){
(bda) = ((bda)->Cat(new Array_<char16_t>(1, u'\u002A')));
}
(bda) = ((bda)->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bdj)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if(!eqAddr_(((bdf)->nf), (nullptr))){
(bda) = ((bda)->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u002F', u'\u002A'))->Cat(v<Array_<char16_t>*>(((bdf)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002A', u'\u002F'))));
}
ays<List_<gb*>*>((bdd), (new Array_<int64_t>(1, (0LL))));
(bdc) = ((bdc) + (1LL));
}
if(!eqAddr_(((bbv)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bbv)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bcc), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>((bcr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bbw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0028'))->Cat(v<Array_<char16_t>*>((bda), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bcc), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>((bcr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bbw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0028'))->Cat(v<Array_<char16_t>*>((bda), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')))))));
if((aye<int64_t>(((bbv)->sm), (new Array_<int64_t>(1, (0LL))), (4096LL))) == (4096LL)){
if((((bbv)->sf)->Len()) == (1LL)){
awe<List_<Array_<char16_t>*>*>(((bbv)->sf), (new Array_<int64_t>(1, (0LL))));
(bep) = (false);
if((((bbv)->sg)->Len()) > (0LL)){
awe<List_<gb*>*>(((bbv)->sg), (new Array_<int64_t>(1, (0LL))));
(bes) = (awi<List_<gb*>*, gb*>(((bbv)->sg), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((((bes)->qf)->nj), (nullptr))) && (((((bes)->qf)->nj)->lw) == (5LL))){
(bev) = ((as_<ul>(classTable_, (((bes)->qf)->nj), 22))->bag);
(bew)((ao), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((bbv)->sf), (new Array_<int64_t>(1, (0LL))))), ((bbv)->sg), (bev));
(bep) = (true);
}
}
if(!(bep)){
(bew)((ao), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((bbv)->sf), (new Array_<int64_t>(1, (0LL))))), ((bbv)->sg), (nullptr));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
else{
bfa<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
(bfb) = (bfc<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL)))));
(bfd)(((bbv)->si), (nullptr), (nullptr));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
awe<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
bfe<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))), (bfb));
ays<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
awe<List_<gb*>*>((as), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((as), (new Array_<int64_t>(1, (0LL)))))){
(bfg) = (awi<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL)))));
(bfh) = ((bbx)((bfg)));
if(eqAddr_(((bfg)->nf), (nullptr))){
bfk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)(((bfg)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfh)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else{
bfk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)(((bfg)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfh)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u003B', u'\u0020', u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfg)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))))));
}
bfm<List_<gb*>*>((as), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<un*>*>((aq), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<un*>*>((aq), (new Array_<int64_t>(1, (0LL)))))){
(bfo) = (awi<List_<un*>*, un*>((aq), (new Array_<int64_t>(1, (0LL)))));
bfk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)(((bfo)->bbf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfo)->bbe), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
bfm<List_<un*>*>((aq), (new Array_<int64_t>(1, (0LL))));
}
}
}
// buildClass
static void uw(ul* bfp /*ast*/){
Array_<char16_t>* bfq; // parentId
bby* bfw; // info
int64_t bfz; // parentOffset
bby* bgd; // parentInfo
List_<um*>* bgh; // items
um* bgj; // item
bgn* bgm; // var_
bby* bgo; // info2
fw* bgr; // ctor
bby* bgv; // ctorInfo
fw* bgx; // cmp
bby* bha; // cmpInfo
fw* bhb; // copy
bby* bhd; // copyInfo
List_<um*>* bhf; // items
um* bhh; // item
bgn* bhk; // var_
bby* bhl; // info2
(bfq) = (nullptr);
if(!eqAddr_(((bfp)->nj), (nullptr))){
(bfq) = ((bft)((as_<ul>(classTable_, ((bfp)->nj), 22))));
}
if(eqAddr_((bfq), (nullptr))){
(bfq) = (new Array_<char16_t>(6, u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F'));
}
(bfw) = ((bbx)((bfp)));
if(!(((bfw)->bfy) != (-1LL))){
throw 0xE9170000U;
}
(bfz) = (0LL);
if(eqAddr_(((bfp)->nj), (nullptr))){
(bfz) = (0LL);
}
else{
(bgd) = ((bbx)(((bfp)->nj)));
if(!(((bgd)->bfy) != (-1LL))){
throw 0xE9170000U;
}
(bfz) = ((bgd)->bfy);
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((at), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u005B'))->Cat(v<int64_t>((((bfw)->bfy) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u005D', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<int64_t>(((bfz) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
if(!eqAddr_(((bfp)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfp)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(10, u'\u0020', u'\u003A', u'\u0020', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>((bfq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u007B', u'\u000A', u'\u0070', u'\u0075', u'\u0062', u'\u006C', u'\u0069', u'\u0063', u'\u003A', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bfw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bfw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003A', u'\u003A'))->Cat(v<Array_<char16_t>*>(((bfw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0028', u'\u0029', u'\u003A', u'\u0020'))->Cat(v<Array_<char16_t>*>((bfq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))))));
(bgh) = ((bfp)->bag);
awe<List_<um*>*>((bgh), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((bgh), (new Array_<int64_t>(1, (0LL)))))){
(bgj) = (awi<List_<um*>*, um*>((bgh), (new Array_<int64_t>(1, (0LL)))));
if((((bgj)->azl)->lw) == (2LL)){
(bgm) = (as_<bgn>(classTable_, ((bgj)->azl), 38));
(bgo) = ((bbx)(((bgm)->bgp)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bgo)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))));
}
ays<List_<um*>*>((bgh), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0059', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<int64_t>((((bfw)->bfy) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
(bgr) = ((bgs)((bfp), (new Array_<char16_t>(4, u'\u0063', u'\u0074', u'\u006F', u'\u0072'))));
if(!eqAddr_((bgr), (nullptr))){
(bgv) = ((bbx)((bgr)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bgv)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bgx) = ((bgs)((bfp), (new Array_<char16_t>(3, u'\u0063', u'\u006D', u'\u0070'))));
if(!eqAddr_((bgx), (nullptr))){
(bha) = ((bbx)((bgx)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0076', u'\u0069', u'\u0072', u'\u0074', u'\u0075', u'\u0061', u'\u006C', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0065', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(19, u'\u003A', u'\u003A', u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bfw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u002A', u'\u0020', u'\u0075', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bfw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002A', u'\u003E', u'\u0028', u'\u0074', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bha)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002C', u'\u0020', u'\u0075', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
(bhb) = ((bgs)((bfp), (new Array_<char16_t>(5, u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079'))));
if(!(!eqAddr_((bhb), (nullptr)))){
throw 0xE9170000U;
}
(bhd) = ((bbx)((bhb)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(43, u'\u0076', u'\u0069', u'\u0072', u'\u0074', u'\u0075', u'\u0061', u'\u006C', u'\u0020', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u0020', u'\u006F', u'\u0076', u'\u0065', u'\u0072', u'\u0072', u'\u0069', u'\u0064', u'\u0065', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bfw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u003A', u'\u003A', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u005F', u'\u0028', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0020', u'\u0074', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bhd)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bhf) = ((bfp)->bag);
awe<List_<um*>*>((bhf), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((bhf), (new Array_<int64_t>(1, (0LL)))))){
(bhh) = (awi<List_<um*>*, um*>((bhf), (new Array_<int64_t>(1, (0LL)))));
if((((bhh)->azl)->lw) == (2LL)){
(bhk) = (as_<bgn>(classTable_, ((bhh)->azl), 38));
(bhl) = ((bbx)(((bhk)->bgp)));
if(eqAddr_((((bhk)->bgp)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)((((bhk)->bgp)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bhl)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)((((bhk)->bgp)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((bhl)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u003B', u'\u0020', u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>((((bhk)->bgp)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))))));
}
}
ays<List_<um*>*>((bhf), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u007D', u'\u003B', u'\u000A')));
}
// write
static void ux(List_<Array_<char16_t>*>* bhp /*resFiles*/){
bool bhr;
bhv* bht; // writer
auz* bhw; // reader
Array_<char16_t>* bhz; // s
bhv* big; // writer
if(avo<Dict_<Array_<char16_t>*, bool>*, Array_<char16_t>*, bool>((ax), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u006D', u'\u0065', u'\u0072', u'\u0067', u'\u0065')), (&bhr))){
(bht) = ((bhu)((new bhv()), ((au)->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0063', u'\u0070', u'\u0070'))), (false)));
(bhw) = ((auy)((new auz()), ((av)->Cat(new Array_<char16_t>(8, u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068')))));
while(!((bhy)((bhw)))){
(bhz) = ((bia)((bhw)));
(bib)((bht), ((bhz)->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
(avm)((bhw));
(bic)((bht), (bhp));
(bid)((bht));
}
else{
(bif)(((ba)->Cat(new Array_<char16_t>(8, u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068'))), ((av)->Cat(new Array_<char16_t>(8, u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068'))));
(big) = ((bhu)((new bhv()), ((au)->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0063', u'\u0070', u'\u0070'))), (false)));
(bib)((big), (new Array_<char16_t>(20, u'\u0023', u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0075', u'\u0064', u'\u0065', u'\u0020', u'\u0022', u'\u0063', u'\u006F', u'\u006D', u'\u006D', u'\u006F', u'\u006E', u'\u002E', u'\u0068', u'\u0022', u'\u000A')));
(bic)((big), (bhp));
(bid)((big));
}
}
// _dtor
static void bih(va* bii){
((bii)->bij) = (nullptr);
((bii)->bik) = (nullptr);
}
// _copy
static va* bil(va* bim){
va* bin;
(bin) = (new va());
((bin)->bij) = (copy_((bim)->bij));
((bin)->bik) = (copy_((bim)->bik));
return as_<va>(classTable_, (bin), 28);
}
// _toBin
static Array_<uint8_t>* bio(va* bip){
Array_<uint8_t>* biq;
(biq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(biq) = ((biq)->Cat(toBin_((bip)->bij)));
(biq) = ((biq)->Cat(toBin_((bip)->bik)));
return biq;
}
// _fromBin
static va* bit(va* biu, Array_<uint8_t>* biv, int64_t* biw){
va* bix;
(bix) = (new va());
((bix)->bij) = (fromBin_<Array_<char16_t>*>((biv), (*biw)));
((bix)->bik) = (fromBin_<gc*>((biv), (*biw)));
return bix;
}
// buildFunc
static void ve(fw* biy /*ast*/){
bjb* biz; // info
Array_<char16_t>* bjf; // arg
bool bjh; // first
List_<gb*>* bji; // items
gb* bjk; // item
bjb* bjl; // info2
bool bkb; // hasMembers
gb* bke; // arg2
List_<um*>* bkh; // members
int64_t bkm; // localVarPos
gb* bkp; // localVar
bjb* bkq; // info2
va* bkv; // tmpVar
(biz) = ((bja)((biy)));
if((biz)->bjd){
return;
}
((biz)->bjd) = (true);
(bjf) = (new Array_<char16_t>(0));
(bjh) = (true);
(bji) = ((biy)->sg);
awe<List_<gb*>*>((bji), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bji), (new Array_<int64_t>(1, (0LL)))))){
(bjk) = (awi<List_<gb*>*, gb*>((bji), (new Array_<int64_t>(1, (0LL)))));
(bjl) = ((bja)((bjk)));
if(bjh){
(bjh) = (false);
}
else{
(bjf) = ((bjf)->Cat(new Array_<char16_t>(1, u'\u002C')));
}
(bjf) = ((bjf)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bjl)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if(!eqAddr_(((bjk)->nf), (nullptr))){
(bjf) = ((bjf)->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u002F', u'\u002A'))->Cat(v<Array_<char16_t>*>(((bjk)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002A', u'\u002F'))));
}
ays<List_<gb*>*>((bji), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((biy)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((biy)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((biz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0028'))->Cat(v<Array_<char16_t>*>((bjf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')))));
if((aye<int64_t>(((biy)->sm), (new Array_<int64_t>(1, (0LL))), (4096LL))) == (4096LL)){
if((((biy)->sf)->Len()) == (1LL)){
awe<List_<Array_<char16_t>*>*>(((biy)->sf), (new Array_<int64_t>(1, (0LL))));
(bkb) = (false);
if((((biy)->sg)->Len()) > (0LL)){
awe<List_<gb*>*>(((biy)->sg), (new Array_<int64_t>(1, (0LL))));
(bke) = (awi<List_<gb*>*, gb*>(((biy)->sg), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((((bke)->qf)->nj), (nullptr))) && (((((bke)->qf)->nj)->lw) == (5LL))){
(bkh) = ((as_<ul>(classTable_, (((bke)->qf)->nj), 22))->bag);
(bki)((bl), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((biy)->sf), (new Array_<int64_t>(1, (0LL))))), ((biy)->sg), (bkh));
(bkb) = (true);
}
}
if(!(bkb)){
(bki)((bl), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((biy)->sf), (new Array_<int64_t>(1, (0LL))))), ((biy)->sg), (nullptr));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
else{
bfa<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
(bkm) = (bfc<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL)))));
(bkn)(((biy)->si));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
awe<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
bfe<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))), (bkm));
ays<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
awe<List_<gb*>*>((bo), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bo), (new Array_<int64_t>(1, (0LL)))))){
(bkp) = (awi<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL)))));
(bkq) = ((bja)((bkp)));
if(eqAddr_(((bkp)->nf), (nullptr))){
bfk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkq)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else{
bfk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkq)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u003B', u'\u0020', u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkp)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A')))));
}
bfm<List_<gb*>*>((bo), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<va*>*>((bm), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<va*>*>((bm), (new Array_<int64_t>(1, (0LL)))))){
(bkv) = (awi<List_<va*>*, va*>((bm), (new Array_<int64_t>(1, (0LL)))));
bfk<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkv)->bij), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
bfm<List_<va*>*>((bm), (new Array_<int64_t>(1, (0LL))));
}
}
}
// buildClass
static void vh(ul* bkw /*ast*/){
Array_<char16_t>* bkx; // parentId
bjb* bld; // info
fw* blh; // ctor
bjb* bll; // ctorInfo
List_<um*>* bln; // items
um* blp; // item
(bkx) = (nullptr);
if(!eqAddr_(((bkw)->nj), (nullptr))){
(bkx) = ((bla)((as_<ul>(classTable_, ((bkw)->nj), 22))));
}
if(eqAddr_((bkx), (nullptr))){
(bkx) = (new Array_<char16_t>(6, u'\u004F', u'\u0062', u'\u006A', u'\u0065', u'\u0063', u'\u0074'));
}
(bld) = ((bja)((bkw)));
if(!eqAddr_(((bkw)->nf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u002F', u'\u002F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bkw)->nf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u000A'))));
}
(blh) = ((bli)((bkw), (new Array_<char16_t>(4, u'\u0063', u'\u0074', u'\u006F', u'\u0072'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bld)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0028', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((bkx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0063', u'\u0061', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
if(!eqAddr_((blh), (nullptr))){
(bll) = ((bja)((blh)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bll)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u0029', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bld)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(27, u'\u002E', u'\u0070', u'\u0072', u'\u006F', u'\u0074', u'\u006F', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0020', u'\u003D', u'\u0020', u'\u004F', u'\u0062', u'\u006A', u'\u0065', u'\u0063', u'\u0074', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>((bkx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0070', u'\u0072', u'\u006F', u'\u0074', u'\u006F', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0029', u'\u003B', u'\u000A')))));
(bln) = ((bkw)->bag);
awe<List_<um*>*>((bln), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((bln), (new Array_<int64_t>(1, (0LL)))))){
(blp) = (awi<List_<um*>*, um*>((bln), (new Array_<int64_t>(1, (0LL)))));
if((((blp)->azl)->lw) == (256LL)){
uk<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL))), (as_<fw>(classTable_, ((blp)->azl), 8)));
}
ays<List_<um*>*>((bln), (new Array_<int64_t>(1, (0LL))));
}
}
// write
static void vi(List_<Array_<char16_t>*>* bls /*resFiles*/){
bhv* blt; // writer
bool blv;
Array_<char16_t>* blx; // fileName
Array_<char16_t>* bma; // fileName
(blt) = (nullptr);
if(avo<Dict_<Array_<char16_t>*, bool>*, Array_<char16_t>*, bool>((ax), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u006D', u'\u0065', u'\u0072', u'\u0067', u'\u0065')), (&blv))){
(blx) = ((fd)((au)));
(blt) = ((bhu)((new bhv()), ((au)->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0068', u'\u0074', u'\u006D', u'\u006C'))), (false)));
(bib)((blt), (new Array_<char16_t>(16, u'\u003C', u'\u0021', u'\u0044', u'\u004F', u'\u0043', u'\u0054', u'\u0059', u'\u0050', u'\u0045', u'\u0020', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(7, u'\u003C', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(8, u'\u0009', u'\u003C', u'\u0068', u'\u0065', u'\u0061', u'\u0064', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(27, u'\u0009', u'\u0009', u'\u003C', u'\u006D', u'\u0065', u'\u0074', u'\u0061', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0074', u'\u003D', u'\u0022', u'\u0075', u'\u0074', u'\u0066', u'\u002D', u'\u0038', u'\u0022', u'\u0020', u'\u002F', u'\u003E', u'\u000A')));
(bib)((blt), (((new Array_<char16_t>(9, u'\u0009', u'\u0009', u'\u003C', u'\u0074', u'\u0069', u'\u0074', u'\u006C', u'\u0065', u'\u003E'))->Cat(v<Array_<char16_t>*>((blx), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003C', u'\u002F', u'\u0074', u'\u0069', u'\u0074', u'\u006C', u'\u0065', u'\u003E', u'\u000A'))));
(bib)((blt), (new Array_<char16_t>(34, u'\u0009', u'\u0009', u'\u003C', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u003D', u'\u0022', u'\u0074', u'\u0065', u'\u0078', u'\u0074', u'\u002F', u'\u006A', u'\u0061', u'\u0076', u'\u0061', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0022', u'\u003E', u'\u000A')));
(bly)((blt), (bls));
(bib)((blt), (new Array_<char16_t>(12, u'\u0009', u'\u0009', u'\u003C', u'\u002F', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(9, u'\u0009', u'\u003C', u'\u002F', u'\u0068', u'\u0065', u'\u0061', u'\u0064', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(8, u'\u0009', u'\u003C', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(9, u'\u0009', u'\u003C', u'\u002F', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(8, u'\u003C', u'\u002F', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bid)((blt));
}
else{
(blt) = ((bhu)((new bhv()), ((au)->Cat(new Array_<char16_t>(3, u'\u002E', u'\u006A', u'\u0073'))), (false)));
(bly)((blt), (bls));
(bid)((blt));
(bma) = ((fd)((au)));
(blt) = ((bhu)((new bhv()), ((au)->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0068', u'\u0074', u'\u006D', u'\u006C'))), (false)));
(bib)((blt), (new Array_<char16_t>(16, u'\u003C', u'\u0021', u'\u0044', u'\u004F', u'\u0043', u'\u0054', u'\u0059', u'\u0050', u'\u0045', u'\u0020', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(7, u'\u003C', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(8, u'\u0009', u'\u003C', u'\u0068', u'\u0065', u'\u0061', u'\u0064', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(27, u'\u0009', u'\u0009', u'\u003C', u'\u006D', u'\u0065', u'\u0074', u'\u0061', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0074', u'\u003D', u'\u0022', u'\u0075', u'\u0074', u'\u0066', u'\u002D', u'\u0038', u'\u0022', u'\u0020', u'\u002F', u'\u003E', u'\u000A')));
(bib)((blt), (((new Array_<char16_t>(15, u'\u0009', u'\u0009', u'\u003C', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0020', u'\u0073', u'\u0072', u'\u0063', u'\u003D', u'\u0022'))->Cat(v<Array_<char16_t>*>((bma), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(38, u'\u002E', u'\u006A', u'\u0073', u'\u0022', u'\u0020', u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u003D', u'\u0022', u'\u0074', u'\u0065', u'\u0078', u'\u0074', u'\u002F', u'\u006A', u'\u0061', u'\u0076', u'\u0061', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u0022', u'\u003E', u'\u003C', u'\u002F', u'\u0073', u'\u0063', u'\u0072', u'\u0069', u'\u0070', u'\u0074', u'\u003E', u'\u000A'))));
(bib)((blt), (((new Array_<char16_t>(9, u'\u0009', u'\u0009', u'\u003C', u'\u0074', u'\u0069', u'\u0074', u'\u006C', u'\u0065', u'\u003E'))->Cat(v<Array_<char16_t>*>((bma), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003C', u'\u002F', u'\u0074', u'\u0069', u'\u0074', u'\u006C', u'\u0065', u'\u003E', u'\u000A'))));
(bib)((blt), (new Array_<char16_t>(9, u'\u0009', u'\u003C', u'\u002F', u'\u0068', u'\u0065', u'\u0061', u'\u0064', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(8, u'\u0009', u'\u003C', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(9, u'\u0009', u'\u003C', u'\u002F', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u003E', u'\u000A')));
(bib)((blt), (new Array_<char16_t>(8, u'\u003C', u'\u002F', u'\u0068', u'\u0074', u'\u006D', u'\u006C', u'\u003E', u'\u000A')));
(bid)((blt));
}
}
// _signInt
static int64_t atp(int64_t bmb /*me_*/){
return ((bmb) > (0LL)) ? (1LL) : (((bmb) < (0LL)) ? (-1LL) : (0LL));
}
// isCorrectSrcName
static bool auq(Array_<char16_t>* bmc /*name*/){
int64_t bmd; // idx
(bmd) = (0LL);
if(((bmd) < ((bmc)->Len())) && (((bmc)->At(bmd)) == (u'\u005C'))){
(bmd) = ((bmd) + (1LL));
}
while(true){
if(((bmd) >= ((bmc)->Len())) || (!((((u'\u0061') <= ((bmc)->At(bmd))) && (((bmc)->At(bmd)) <= (u'\u007A'))) || (((bmc)->At(bmd)) == (u'\u005F'))))){
return false;
}
while(true){
(bmd) = ((bmd) + (1LL));
if((bmd) >= ((bmc)->Len())){
return true;
}
if(((((u'\u0061') <= ((bmc)->At(bmd))) && (((bmc)->At(bmd)) <= (u'\u007A'))) || (((bmc)->At(bmd)) == (u'\u005F'))) || (((u'\u0030') <= ((bmc)->At(bmd))) && (((bmc)->At(bmd)) <= (u'\u0039')))){
continue;
}
if(((bmc)->At(bmd)) == (u'\u005C')){
(bmd) = ((bmd) + (1LL));
break;
}
return false;
}
}
}
// replacePath
static Array_<char16_t>* auv(Array_<char16_t>* bmv /*path*/){
Array_<char16_t>* bmw; // r
int64_t bna;
int64_t bnb;
(bmw) = (newArray_<char16_t, Array_<char16_t>*>(1, ((bmv)->Len())));
for(bna = (0LL), bnb = (((bmv)->Len()) - (1LL)); bna <= bnb; bna += (1LL)){
((bmw)->At(bna)) = ((((bmv)->At(bna)) == (u'\u005C')) ? (u'\u002F') : ((bmv)->At(bna)));
}
return bmw;
}
// _sub
template<typename T_> static T_ auw(T_ bnc /*me_*/, Array_<int64_t>* bnd /*type*/, int64_t bne /*start*/, int64_t bnf /*len*/){
return sub_(bnc, bne, bnf);
}
// makeReader
static auz* auy(auz* bng /*me2*/, Array_<char16_t>* bnh /*path*/){
bng->bni = reinterpret_cast<int64_t>(new reader_());
std::u16string s_ = bnh->B;
const std::string& t_ = utf16ToUtf8_(s_);
reader_* r_ = reinterpret_cast<reader_*>(bng->bni);
r_->F = new std::ifstream(t_.c_str(), std::ios::in | std::ios::binary);
if(!*r_->F) return nullptr;
return bng;
}
// _dtor
static void bnj(auz* bnk /*me*/){
}
// fin
static void avm(auz* bnl /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bnl->bni);
r_->F->close();
}
// setPos
static void bnm(auz* bnn /*me*/, int64_t bno /*origin*/, int64_t bnp /*pos*/){
reader_* r_ = reinterpret_cast<reader_*>(bnn->bni);
std::ios_base::seekdir o_ = std::ios_base::beg;
switch(bno){
case 0: o_ = std::ios_base::beg; break;
case 1: o_ = std::ios_base::cur; break;
case 2: o_ = std::ios_base::end; break;
}
r_->F->seekg(bnp, o_);
}
// getPos
static int64_t bnq(auz* bnr /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bnr->bni);
return static_cast<int64_t>(r_->F->tellg());
}
// delimiter
static void bns(auz* bnt /*me*/, Array_<char16_t>* bnu /*delimiters*/){
}
// read
static Array_<uint8_t>* bnv(auz* bnw /*me*/, int64_t bnx /*size*/){
}
// readLetter
static char16_t bny(auz* bnz /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bnz->bni);
return readUtf8_(r_->F);
}
// readInt
static int64_t boa(auz* bob /*me*/){
}
// readFloat
static double boc(auz* bod /*me*/){
}
// readChar
static char16_t boe(auz* bof /*me*/){
}
// readStr
static Array_<char16_t>* bog(auz* boh /*me*/){
}
// readLine
static Array_<char16_t>* bia(auz* boi /*me*/){
Array_<char16_t>* boj; // buf
char16_t bon; // c
(boj) = (new Array_<char16_t>(0));
while(!((bhy)((boi)))){
(bon) = ((bny)((boi)));
if((bon) == (u'\u000D')){
continue;
}
if((bon) == (u'\u000A')){
break;
}
(boj) = ((boj)->Cat(v<char16_t>((bon), (new Array_<int64_t>(1, (0LL))))));
}
return boj;
}
// fileSize
static int64_t bot(auz* bou /*me*/){
}
// term
static bool bhy(auz* bov /*me*/){
reader_* r_ = reinterpret_cast<reader_*>(bov->bni);
char c_;
if(r_->F->get(c_)) {
r_->F->seekg(-1, std::ios_base::cur);
return false;
}
return true;
}
// _copy
static auz* bow(auz* box){
auz* boy;
(boy) = (new auz());
((boy)->bni) = ((box)->bni);
((boy)->boz) = ((box)->boz);
((boy)->bpa) = ((box)->bpa);
((boy)->bpb) = ((box)->bpb);
return as_<auz>(classTable_, (boy), 30);
}
// _toBin
static Array_<uint8_t>* bpc(auz* bpd){
Array_<uint8_t>* bpe;
(bpe) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bpe) = ((bpe)->Cat(toBin_((bpd)->bni)));
(bpe) = ((bpe)->Cat(toBin_((bpd)->boz)));
(bpe) = ((bpe)->Cat(toBin_((bpd)->bpa)));
(bpe) = ((bpe)->Cat(toBin_((bpd)->bpb)));
return bpe;
}
// _fromBin
static auz* bpj(auz* bpk, Array_<uint8_t>* bpl, int64_t* bpm){
auz* bpn;
(bpn) = (new auz());
((bpn)->bni) = (fromBin_<int64_t>((bpl), (*bpm)));
((bpn)->boz) = (fromBin_<int64_t>((bpl), (*bpm)));
((bpn)->bpa) = (fromBin_<int64_t>((bpl), (*bpm)));
((bpn)->bpb) = (fromBin_<int64_t>((bpl), (*bpm)));
return bpn;
}
// parseRoot
static avk* avj(){
avk* bpo; // ast
char16_t bpw; // c
fx* bqb; // item
bool bqc; // itemPublic
int64_t bqh; // row
int64_t bqi; // col
Array_<char16_t>* bqj; // id
Array_<char16_t>* bqm;
(bpo) = (new avk());
(bpp)((bpo), (1LL), ((bpq)((bf), (1LL), (1LL))), (nullptr), (false));
((bpo)->awd) = (new List_<avl*>());
((bpo)->aza) = (new List_<fx*>());
(bh) = ((bpo)->awd);
((bpo)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bpr<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (bpo));
(ave) = (u'\u000A');
(ave) = ((bps)());
while(true){
(bpw) = ((bps)());
if((bpw) == (u'\u0000')){
break;
}
if((bpw) == (u'\u000A')){
continue;
}
(bqb) = (nullptr);
(bqc) = (false);
if((bpw) == (u'\u002B')){
(bqc) = (true);
}
else{
(ave) = (bpw);
}
(bqh) = (avc);
(bqi) = (avd);
(bqj) = ((bqk)((true), (false)));
bqm = bqj;
if(cmp_(bqm, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
(bqb) = ((bqo)((nullptr), (false)));
}
else if(cmp_(bqm, (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0){
(bqb) = ((bqq)((1LL), (nullptr)));
}
else if(cmp_(bqm, (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074'))) == 0){
(bqb) = ((bqs)());
}
else if(cmp_(bqm, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073'))) == 0){
(bqb) = ((bqv)());
}
else if(cmp_(bqm, (new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0075', u'\u0064', u'\u0065'))) == 0){
}
else if(cmp_(bqm, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0){
(bqb) = ((bqz)());
}
else if(cmp_(bqm, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0){
(bqb) = ((brb)());
}
else{(ad)((65547LL), ((bpq)((bf), (bqh), (bqi))), (new Array_<Array_<char16_t>*>(1, (bqj))));
(bre)(((brf)()));
continue;
}
if(((bqb)->lw) == (2LL)){
(((as_<bgn>(classTable_, (bqb), 38))->bgp)->no) = (bqc);
}
else if(((bqb)->lw) == (3LL)){
(((as_<bqt>(classTable_, (bqb), 44))->brj)->no) = (bqc);
}
else{
((bqb)->no) = (bqc);
}
uh<List_<fx*>*, fx*>(((bpo)->aza), (new Array_<int64_t>(1, (0LL))), (bqb));
}
brl<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return bpo;
}
// _dtor
static void brm(avl* brn){
((brn)->awk) = (nullptr);
((brn)->axf) = (nullptr);
}
// _copy
static avl* bro(avl* brp){
avl* brq;
(brq) = (new avl());
((brq)->awk) = (copy_((brp)->awk));
((brq)->axf) = (copy_((brp)->axf));
return as_<avl>(classTable_, (brq), 34);
}
// _toBin
static Array_<uint8_t>* brr(avl* brs){
Array_<uint8_t>* brt;
(brt) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(brt) = ((brt)->Cat(toBin_((brs)->awk)));
(brt) = ((brt)->Cat(toBin_((brs)->axf)));
return brt;
}
// _fromBin
static avl* brw(avl* brx, Array_<uint8_t>* bry, int64_t* brz){
avl* bsa;
(bsa) = (new avl());
((bsa)->awk) = (fromBin_<fx*>((bry), (*brz)));
((bsa)->axf) = (fromBin_<fx*>((bry), (*brz)));
return bsa;
}
// _dtor
static void bsb(avk* bsc){
((bsc)->aza) = (nullptr);
((bsc)->awd) = (nullptr);
((bsc)->ne) = (nullptr);
((bsc)->nf) = (nullptr);
((bsc)->ng) = (nullptr);
((bsc)->nh) = (nullptr);
((bsc)->ni) = (nullptr);
((bsc)->nj) = (nullptr);
((bsc)->nk) = (nullptr);
}
// _copy
static avk* bsd(avk* bse){
avk* bsf;
(bsf) = (new avk());
((bsf)->aza) = (copy_((bse)->aza));
((bsf)->awd) = (copy_((bse)->awd));
((bsf)->ne) = (copy_((bse)->ne));
((bsf)->nf) = (copy_((bse)->nf));
((bsf)->ng) = (copy_((bse)->ng));
((bsf)->nh) = (copy_((bse)->nh));
((bsf)->ni) = (copy_((bse)->ni));
((bsf)->nj) = (copy_((bse)->nj));
((bsf)->nk) = (copy_((bse)->nk));
((bsf)->no) = ((bse)->no);
((bsf)->lw) = ((bse)->lw);
return as_<avk>(classTable_, (bsf), 32);
}
// _toBin
static Array_<uint8_t>* bsg(avk* bsh){
Array_<uint8_t>* bsi;
(bsi) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bsi) = ((bsi)->Cat(toBin_((bsh)->aza)));
(bsi) = ((bsi)->Cat(toBin_((bsh)->awd)));
(bsi) = ((bsi)->Cat(toBin_((bsh)->ne)));
(bsi) = ((bsi)->Cat(toBin_((bsh)->nf)));
(bsi) = ((bsi)->Cat(toBin_((bsh)->ng)));
(bsi) = ((bsi)->Cat(toBin_((bsh)->nh)));
(bsi) = ((bsi)->Cat(toBin_((bsh)->ni)));
(bsi) = ((bsi)->Cat(toBin_((bsh)->nj)));
(bsi) = ((bsi)->Cat(toBin_((bsh)->nk)));
(bsi) = ((bsi)->Cat(toBin_((bsh)->no)));
(bsi) = ((bsi)->Cat(toBin_((bsh)->lw)));
return bsi;
}
// _fromBin
static avk* bsu(avk* bsv, Array_<uint8_t>* bsw, int64_t* bsx){
avk* bsy;
(bsy) = (new avk());
((bsy)->aza) = (fromBin_<List_<fx*>*>((bsw), (*bsx)));
((bsy)->awd) = (fromBin_<List_<avl*>*>((bsw), (*bsx)));
((bsy)->ne) = (fromBin_<ga*>((bsw), (*bsx)));
((bsy)->nf) = (fromBin_<Array_<char16_t>*>((bsw), (*bsx)));
((bsy)->ng) = (fromBin_<fx*>((bsw), (*bsx)));
((bsy)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((bsw), (*bsx)));
((bsy)->ni) = (fromBin_<Array_<char16_t>*>((bsw), (*bsx)));
((bsy)->nj) = (fromBin_<fx*>((bsw), (*bsx)));
((bsy)->nk) = (fromBin_<fy*>((bsw), (*bsx)));
((bsy)->no) = (fromBin_<bool>((bsw), (*bsx)));
((bsy)->lw) = (fromBin_<int64_t>((bsw), (*bsx)));
return bsy;
}
// _getDict
template<typename T_, typename C_, typename R_> static R_ avo(T_ bsz /*me_*/, Array_<int64_t>* bta /*type*/, C_ btb /*key*/, bool* btc /*existed*/){
return dictSearch_(bsz->B, btb, btc);
}
// _head
template<typename T_> static void awe(T_ btd /*me_*/, Array_<int64_t>* bte /*type*/){
btd->I = btd->B.begin();
}
// _term
template<typename T_> static bool awg(T_ btf /*me_*/, Array_<int64_t>* btg /*type*/){
return btf->I == btf->B.end();
}
// _getList
template<typename T_, typename R_> static R_ awi(T_ bth /*me_*/, Array_<int64_t>* bti /*type*/){
return *bth->I;
}
// _findArray
template<typename T_, typename C_> static int64_t awn(T_ btj /*me_*/, Array_<int64_t>* btk /*type*/, C_ btl /*item*/, int64_t btm /*start*/){
if(btm == -1) btm = 0;
if(btm < 0) return -1;
for(int64_t i_ = btm; i_ < btj->L; i_++){
if(btj->B[i_] == btl) return i_;
}
return -1;
}
// _and
template<typename T_> static T_ aye(T_ btn /*me_*/, Array_<int64_t>* bto /*type*/, T_ btp /*n*/){
return btn & btp;
}
// _next
template<typename T_> static void ays(T_ btq /*me_*/, Array_<int64_t>* btr /*type*/){
++btq->I;
}
// makeEntryPoint
static fw* ayw(fw* bts /*mainFunc*/){
ga* btt; // pos
fw* btu; // entry
bty* btx; // try_
gb* bue; // var_
buh* bug; // type
bua* bul; // block_
bua* buq; // block_
List_<fx*>* but; // funcs
buy* bux; // do_
bvb* bva; // call
gd* bvg; // ref
bub* bvk; // catch_
bua* bvn; // block_
buc* bvq; // exprs
bvt* bvs; // expr
buh* bvx; // type
bvt* bwa; // expr
buh* bwc; // type
buy* bwf; // do_
bvb* bwh; // call
gd* bwj; // ref_
bvc* bwl; // excpt
gd* bwp; // ref_
List_<fx*>* bws; // funcs
buy* bwv; // do_
bvb* bwx; // call
gd* bwz; // ref
(btt) = ((bpq)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (1LL), (1LL)));
(btu) = (new fw());
(btv)((btu), (256LL), (btt));
((btu)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((btu)->sm) = (0LL);
((btu)->sf) = (new List_<Array_<char16_t>*>());
((btu)->sg) = (new List_<gb*>());
((btu)->sh) = (nullptr);
((btu)->si) = (new List_<ge*>());
(btx) = (new bty());
(btv)((btx), (66051LL), (btt));
(bue) = (new gb());
(btv)((bue), (7LL), (btt));
((bue)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bue)->qk) = (3LL);
((bue)->ql) = (false);
(bug) = (new buh());
(btv)((bug), (1026LL), (btt));
((bug)->bui) = (0LL);
((bue)->qf) = (bug);
((bue)->qg) = (nullptr);
((btx)->buj) = (bue);
(bul) = (new bua());
(btv)((bul), (66052LL), (btt));
((bul)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bul)->buj) = (nullptr);
((bul)->bum) = (new List_<ge*>());
((btx)->bun) = (bul);
((btx)->buo) = (new List_<bub*>());
(buq) = (new bua());
(btv)((buq), (66052LL), (btt));
((buq)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((buq)->buj) = (nullptr);
((buq)->bum) = (new List_<ge*>());
((btx)->bur) = (buq);
(but) = (new List_<fx*>());
uh<List_<fx*>*, fx*>((but), (new Array_<int64_t>(1, (0LL))), ((buu)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(5, u'\u005F', u'\u0069', u'\u006E', u'\u0069', u'\u0074')), (false))));
uh<List_<fx*>*, fx*>((but), (new Array_<int64_t>(1, (0LL))), ((buu)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(9, u'\u005F', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))));
uh<List_<fx*>*, fx*>((but), (new Array_<int64_t>(1, (0LL))), (bts));
awe<List_<fx*>*>((but), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<fx*>*>((but), (new Array_<int64_t>(1, (0LL)))))){
(bux) = (new buy());
(btv)((bux), (528LL), (btt));
(bva) = (new bvb());
(bvd)((bva), (2057LL), (btt));
((bva)->bve) = (new List_<bvc*>());
(bvg) = (new gd());
(bvd)((bvg), (2062LL), (btt));
((bvg)->nj) = (awi<List_<fx*>*, fx*>((but), (new Array_<int64_t>(1, (0LL)))));
((bva)->bvh) = (bvg);
((bux)->bvi) = (bva);
uh<List_<ge*>*, ge*>((((btx)->bun)->bum), (new Array_<int64_t>(1, (0LL))), (bux));
ays<List_<fx*>*>((but), (new Array_<int64_t>(1, (0LL))));
}
(bvk) = (new bub());
(btv)((bvk), (524LL), (btt));
((bvk)->bvl) = (new List_<buc*>());
(bvn) = (new bua());
(btv)((bvn), (66052LL), (btt));
((bvn)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((bvn)->buj) = (nullptr);
((bvn)->bum) = (new List_<ge*>());
((bvk)->bvo) = (bvn);
(bvq) = (new buc());
(bvs) = (new bvt());
(bvd)((bvs), (67585LL), (btt));
((bvs)->pj) = (1LL);
((bvs)->bvv) = (0x0000000000000000ULL);
(bvx) = (new buh());
(btv)((bvx), (1026LL), (btt));
((bvx)->bui) = (0LL);
((bvs)->pf) = (bvx);
((bvq)->bvy) = (bvs);
(bwa) = (new bvt());
(bvd)((bwa), (67585LL), (btt));
((bwa)->pj) = (1LL);
((bwa)->bvv) = (0x00000000FFFFFFFFULL);
(bwc) = (new buh());
(btv)((bwc), (1026LL), (btt));
((bwc)->bui) = (0LL);
((bwa)->pf) = (bwc);
((bvq)->bwd) = (bwa);
uh<List_<buc*>*, buc*>(((bvk)->bvl), (new Array_<int64_t>(1, (0LL))), (bvq));
(bwf) = (new buy());
(btv)((bwf), (528LL), (btt));
(bwh) = (new bvb());
(bvd)((bwh), (2057LL), (btt));
((bwh)->bve) = (new List_<bvc*>());
(bwj) = (new gd());
(bvd)((bwj), (2062LL), (btt));
((bwj)->nj) = ((buu)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(4, u'\u005F', u'\u0065', u'\u0072', u'\u0072')), (false)));
((bwh)->bvh) = (bwj);
(bwl) = (new bvc());
((bwl)->bwm) = (false);
((bwl)->bwn) = (false);
(bwp) = (new gd());
(bvd)((bwp), (2062LL), (btt));
((bwp)->nj) = ((btx)->buj);
((bwl)->bwq) = (bwp);
uh<List_<bvc*>*, bvc*>(((bwh)->bve), (new Array_<int64_t>(1, (0LL))), (bwl));
((bwf)->bvi) = (bwh);
uh<List_<ge*>*, ge*>((((bvk)->bvo)->bum), (new Array_<int64_t>(1, (0LL))), (bwf));
uh<List_<bub*>*, bub*>(((btx)->buo), (new Array_<int64_t>(1, (0LL))), (bvk));
(bws) = (new List_<fx*>());
uh<List_<fx*>*, fx*>((bws), (new Array_<int64_t>(1, (0LL))), ((buu)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0069', u'\u006E', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))));
uh<List_<fx*>*, fx*>((bws), (new Array_<int64_t>(1, (0LL))), ((buu)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(4, u'\u005F', u'\u0066', u'\u0069', u'\u006E')), (false))));
awe<List_<fx*>*>((bws), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<fx*>*>((bws), (new Array_<int64_t>(1, (0LL)))))){
(bwv) = (new buy());
(btv)((bwv), (528LL), (btt));
(bwx) = (new bvb());
(bvd)((bwx), (2057LL), (btt));
((bwx)->bve) = (new List_<bvc*>());
(bwz) = (new gd());
(bvd)((bwz), (2062LL), (btt));
((bwz)->nj) = (awi<List_<fx*>*, fx*>((bws), (new Array_<int64_t>(1, (0LL)))));
((bwx)->bvh) = (bwz);
((bwv)->bvi) = (bwx);
uh<List_<ge*>*, ge*>((((btx)->bur)->bum), (new Array_<int64_t>(1, (0LL))), (bwv));
ays<List_<fx*>*>((bws), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<ge*>*, ge*>(((btu)->si), (new Array_<int64_t>(1, (0LL))), (btx));
return btu;
}
// rebuildFunc
static void ayx(fw* bxa /*ast*/){
List_<gb*>* bxd; // items
if(!eqAddr_(((bxa)->nk), (nullptr))){
return;
}
((bxa)->nk) = (bxa);
(bxd) = ((bxa)->sg);
awe<List_<gb*>*>((bxd), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bxd), (new Array_<int64_t>(1, (0LL)))))){
(bxf)((awi<List_<gb*>*, gb*>((bxd), (new Array_<int64_t>(1, (0LL))))));
ays<List_<gb*>*>((bxd), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((bxa)->sh), (nullptr))){
((bxa)->sh) = ((bxi)(((bxa)->sh), (nullptr)));
}
((bxa)->si) = ((bxj)(((bxa)->si), ((bxa)->sh), (bxa)));
}
// rebuildRoot
static bool azb(Array_<char16_t>* bxk /*key*/, fx* bxl /*value*/, fz* bxm /*data*/){
avk* bxn; // ast
fw* bxq; // initVarsFunc
fw* bxr; // finVarsFunc
List_<fx*>* bxs; // items
fx* bxu; // item
bgn* bxy; // var_
buy* byc; // do_
byf* bye; // assign
gd* byi; // ref
buy* byp; // do_
byf* byr; // assign
gd* byt; // ref
(bxn) = (as_<avk>(classTable_, (bxl), 32));
if(!eqAddr_(((bxn)->nk), (nullptr))){
return true;
}
((bxn)->nk) = (bxn);
(bxq) = (as_<fw>(classTable_, ((buu)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(9, u'\u005F', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))), 8));
(bxr) = (as_<fw>(classTable_, ((buu)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0069', u'\u006E', u'\u0056', u'\u0061', u'\u0072', u'\u0073')), (false))), 8));
(bxs) = ((bxn)->aza);
awe<List_<fx*>*>((bxs), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<fx*>*>((bxs), (new Array_<int64_t>(1, (0LL)))))){
(bxu) = (awi<List_<fx*>*, fx*>((bxs), (new Array_<int64_t>(1, (0LL)))));
if(((bxu)->lw) == (256LL)){
(ayx)((as_<fw>(classTable_, (bxu), 8)));
}
else if(((bxu)->lw) == (2LL)){
(bxy) = (as_<bgn>(classTable_, (bxu), 38));
if(!((((bxy)->bgp)->qk) == (1LL))){
throw 0xE9170000U;
}
if(!eqAddr_((((bxy)->bgp)->qg), (nullptr))){
(((bxy)->bgp)->qg) = ((byb)((((bxy)->bgp)->qg), (false)));
(byc) = (new buy());
(btv)((byc), (528LL), ((bxn)->ne));
(bye) = (new byf());
(bvd)((bye), (2050LL), ((bxn)->ne));
((bye)->byg) = (0LL);
(byi) = (new gd());
(bvd)((byi), (2062LL), ((bxn)->ne));
((byi)->pf) = (((bxy)->bgp)->qf);
((byi)->nj) = ((bxy)->bgp);
((bye)->byj) = (byi);
((bye)->byk) = (((bxy)->bgp)->qg);
((byc)->bvi) = (bye);
uh<List_<ge*>*, ge*>(((bxq)->si), (new Array_<int64_t>(1, (0LL))), ((byl)((byc), (nullptr), (nullptr))));
}
if((!eqAddr_((((bxy)->bgp)->qf), (nullptr))) && ((byn)((((bxy)->bgp)->qf)))){
(byp) = (new buy());
(btv)((byp), (528LL), ((bxn)->ne));
(byr) = (new byf());
(bvd)((byr), (2050LL), ((bxn)->ne));
((byr)->byg) = (0LL);
(byt) = (new gd());
(bvd)((byt), (2062LL), ((bxn)->ne));
((byt)->pf) = (((bxy)->bgp)->qf);
((byt)->nj) = ((bxy)->bgp);
((byr)->byj) = (byt);
((byr)->byk) = ((byu)(((bxn)->ne)));
((byp)->bvi) = (byr);
uh<List_<ge*>*, ge*>(((bxr)->si), (new Array_<int64_t>(1, (0LL))), ((byl)((byp), (nullptr), (nullptr))));
}
}
else{
if(!((((((bxu)->lw) == (3LL)) || (((bxu)->lw) == (4LL))) || (((bxu)->lw) == (5LL))) || (((bxu)->lw) == (6LL)))){
throw 0xE9170000U;
}
}
ays<List_<fx*>*>((bxs), (new Array_<int64_t>(1, (0LL))));
}
return true;
}
// getInfo
static bby* bbx(fx* byw /*ast*/){
bby* byz; // info
if((eqAddr_(((byw)->nk), (nullptr))) || ((((byw)->nk)->lw) != (268435456LL))){
(byz) = (new bby());
((byz)->lw) = (268435456LL);
((byz)->bee) = ((bza)());
if((((aye<int64_t>(((byw)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL)) && (!eqAddr_(((byw)->nf), (nullptr)))) && (cmp_(((byw)->nf), (new Array_<char16_t>(1, u'\u0024'))) != 0)){
((byz)->bzd) = ((bza)());
if((aye<int64_t>(((byw)->lw), (new Array_<int64_t>(1, (0LL))), (16843264LL))) == (16843264LL)){
((byz)->bzg) = ((bza)());
}
else{
((byz)->bzg) = (nullptr);
}
}
else{
((byz)->bzd) = (nullptr);
((byz)->bzg) = (nullptr);
}
((byz)->bfy) = (-1LL);
((byz)->bca) = (false);
((byz)->bzj) = (false);
((byz)->bzk) = (false);
((byw)->nk) = (byz);
}
return as_<bby>(classTable_, ((byw)->nk), 36);
}
// _dtor
static void bzl(bby* bzm){
((bzm)->bee) = (nullptr);
((bzm)->bzd) = (nullptr);
((bzm)->bzg) = (nullptr);
}
// _copy
static bby* bzn(bby* bzo){
bby* bzp;
(bzp) = (new bby());
((bzp)->bee) = (copy_((bzo)->bee));
((bzp)->bzd) = (copy_((bzo)->bzd));
((bzp)->bzg) = (copy_((bzo)->bzg));
((bzp)->bfy) = ((bzo)->bfy);
((bzp)->bca) = ((bzo)->bca);
((bzp)->bzj) = ((bzo)->bzj);
((bzp)->bzk) = ((bzo)->bzk);
((bzp)->lw) = ((bzo)->lw);
return as_<bby>(classTable_, (bzp), 36);
}
// _toBin
static Array_<uint8_t>* bzq(bby* bzr){
Array_<uint8_t>* bzs;
(bzs) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(bzs) = ((bzs)->Cat(toBin_((bzr)->bee)));
(bzs) = ((bzs)->Cat(toBin_((bzr)->bzd)));
(bzs) = ((bzs)->Cat(toBin_((bzr)->bzg)));
(bzs) = ((bzs)->Cat(toBin_((bzr)->bfy)));
(bzs) = ((bzs)->Cat(toBin_((bzr)->bca)));
(bzs) = ((bzs)->Cat(toBin_((bzr)->bzj)));
(bzs) = ((bzs)->Cat(toBin_((bzr)->bzk)));
(bzs) = ((bzs)->Cat(toBin_((bzr)->lw)));
return bzs;
}
// _fromBin
static bby* cab(bby* cac, Array_<uint8_t>* cad, int64_t* cae){
bby* caf;
(caf) = (new bby());
((caf)->bee) = (fromBin_<Array_<char16_t>*>((cad), (*cae)));
((caf)->bzd) = (fromBin_<Array_<char16_t>*>((cad), (*cae)));
((caf)->bzg) = (fromBin_<Array_<char16_t>*>((cad), (*cae)));
((caf)->bfy) = (fromBin_<int64_t>((cad), (*cae)));
((caf)->bca) = (fromBin_<bool>((cad), (*cae)));
((caf)->bzj) = (fromBin_<bool>((cad), (*cae)));
((caf)->bzk) = (fromBin_<bool>((cad), (*cae)));
((caf)->lw) = (fromBin_<int64_t>((cad), (*cae)));
return caf;
}
// getType
static Array_<char16_t>* bcz(gc* cag /*type*/){
int64_t cak;
cau* cat; // func_
Array_<char16_t>* caw; // id
Array_<char16_t>* caz; // arg
bool cba; // first
List_<cav*>* cbb; // items
cav* cbe; // item
cbr* cbq; // gen
int64_t cbt;
ccc* ccb; // dict_
buh* ccg; // prim
int64_t cci;
fx* ccp; // ref
bby* ccs; // info
if(eqAddr_((cag), (nullptr))){
return new Array_<char16_t>(4, u'\u0076', u'\u006F', u'\u0069', u'\u0064');
}
cak = (cag)->lw;
switch(cak){
case 66561LL:
return ((new Array_<char16_t>(7, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<cam>(classTable_, (cag), 76))->cao))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
case 1025LL:
return ((new Array_<char16_t>(4, u'\u0075', u'\u0069', u'\u006E', u'\u0074'))->Cat(v<int64_t>((((as_<caq>(classTable_, (cag), 78))->car) * (8LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u005F', u'\u0074'));
break;
case 66562LL:
(cat) = (as_<cau>(classTable_, (cag), 80));
(caw) = ((bza)());
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0074', u'\u0079', u'\u0070', u'\u0065', u'\u0064', u'\u0065', u'\u0066', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((cat)->cax))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0028', u'\u002A'))->Cat(v<Array_<char16_t>*>((caw), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u0028')))));
(caz) = (new Array_<char16_t>(0));
(cba) = (true);
(cbb) = ((cat)->cbc);
awe<List_<cav*>*>((cbb), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cav*>*>((cbb), (new Array_<int64_t>(1, (0LL)))))){
(cbe) = (awi<List_<cav*>*, cav*>((cbb), (new Array_<int64_t>(1, (0LL)))));
if(cba){
(cba) = (false);
}
else{
(caz) = ((caz)->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
}
(caz) = ((caz)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)(((cbe)->cbk))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if((cbe)->cbm){
(caz) = ((caz)->Cat(new Array_<char16_t>(1, u'\u002A')));
}
ays<List_<cav*>*>((cbb), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((caz), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
return caw;
break;
case 66563LL:
(cbq) = (as_<cbr>(classTable_, (cag), 84));
cbt = (cbq)->cbu;
switch(cbt){
case 0LL:
return ((new Array_<char16_t>(6, u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((cbq)->cbw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
case 1LL:
return ((new Array_<char16_t>(7, u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((cbq)->cbw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
case 2LL:
return ((new Array_<char16_t>(7, u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((cbq)->cbw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66564LL:
(ccb) = (as_<ccc>(classTable_, (cag), 86));
return ((new Array_<char16_t>(6, u'\u0044', u'\u0069', u'\u0063', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((ccb)->ccd))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((ccb)->cce))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u002A')));
break;
case 1026LL:
(ccg) = (as_<buh>(classTable_, (cag), 60));
cci = (ccg)->bui;
switch(cci){
case 0LL:
return new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074');
break;
case 1LL:
return new Array_<char16_t>(6, u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065');
break;
case 2LL:
return new Array_<char16_t>(8, u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074');
break;
case 3LL:
return new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66565LL:
(ccp) = ((cag)->nj);
if(((ccp)->lw) == (5LL)){
(bft)((as_<ul>(classTable_, (ccp), 22)));
(ccs) = ((bbx)((ccp)));
return ((ccs)->bee)->Cat(new Array_<char16_t>(1, u'\u002A'));
}
else{
if(!(((ccp)->lw) == (6LL))){
throw 0xE9170000U;
}
return new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074');
}
break;
case 1027LL:
if(!(false)){
throw 0xE9170000U;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// isInt
static bool bdm(gc* ccw /*type*/){
return (((ccw)->lw) == (1026LL)) && (((as_<buh>(classTable_, (ccw), 60))->bui) == (0LL));
}
// write
static void bew(List_<Array_<char16_t>*>* ccx /*codes*/, Array_<char16_t>* ccy /*attr*/, List_<gb*>* ccz /*args*/, List_<um*>* cda /*members*/){
Array_<char16_t>* cdc;
bby* cde; // x
bby* cdg; // x
bby* cdi; // class_
bby* cdk; // me_
bby* cdl; // key
bby* cdm; // item
bby* cdo; // me_
bby* cdp; // item
bby* cdr; // me_
bby* cds; // item
bby* cdu; // me_
bby* cdv; // item
bby* cdx; // me_
bby* cdy; // n
bby* cea; // x
bby* cec; // x
bby* cee; // x
bby* ceg; // x
bby* cei; // x
bby* cel; // x
bby* cen; // x
bby* cep; // me_
bby* cer; // x
bby* ces; // y
bby* cet; // centerX
bby* ceu; // centerY
bby* cew; // x
bby* cey; // me_
bby* cez; // value
bby* cfb; // me_
bby* cfc; // item
bby* cfd; // start
bby* cff; // me_
bby* cfg; // item
bby* cfi; // me_
bby* cfj; // item
bby* cfk; // start
bby* cfm; // x
bby* cfo; // me_
bby* cfp; // callback
bby* cfq; // data
bby* cfs; // me_
bby* cft; // key
bby* cfu; // existed
bby* cfw; // me_
bby* cfy; // me_
bby* cga; // me_
bby* cgc; // me_
bby* cge; // me_
bby* cgg; // me_
bby* cgh; // item
bby* cgj; // x
bby* cgk; // y
bby* cgl; // centerX
bby* cgm; // centerY
bby* cgo; // x
bby* cgq; // me_
bby* cgr; // offset
bby* cgt; // me_
bby* cgv; // me_
bby* cgx; // me_
bby* cgy; // n
bby* cha; // me_
bby* chc; // me_
bby* che; // me_
bby* chg; // min
bby* chh; // max
bby* chj; // min
bby* chk; // max
bby* chm; // me_
bby* chn; // n
bby* chp; // me_
bby* chq; // n
bby* chs; // me_
bby* cht; // n
bby* chv; // x
bby* chx; // x
bby* chz; // x
bby* cib; // me_
bby* cic; // start
bby* cid; // len
bby* cig; // me_
bby* cii; // x
bby* cik; // x
bby* cim; // me_
bby* cio; // me_
bby* ciq; // me_
bby* cir; // success
bby* cit; // me_
bby* ciu; // success
bby* ciw; // me_
bby* cix; // success
bby* ciz; // me_
bby* cjb; // me_
bby* cjc; // n
bby* cje; // str
bby* cjg; // dst
bby* cjh; // src
bby* cjj; // path
bby* cjl; // path
bby* cjm; // recursion
bby* cjn; // callback
bby* cjo; // data
bby* cjq; // me_
bby* cjr; // path
bby* cjs; // handle
bby* cjv; // me_
bby* cjw; // path
bby* cjx; // append
bby* cjy; // handle
bby* cka; // me_
bby* ckb; // handle
bby* ckd; // me_
bby* cke; // handle
bby* ckg; // me_
bby* ckh; // handle
bby* ckj; // me_
bby* ckk; // origin
bby* ckl; // pos
bby* ckm; // handle
bby* cko; // me_
bby* ckp; // handle
bby* ckr; // me_
bby* cks; // handle
bby* cku; // me_
bby* ckv; // handle
bby* ckx; // me_
bby* cky; // origin
bby* ckz; // pos
bby* cla; // handle
bby* clc; // me_
bby* cld; // n
bby* cle; // handle
bby* clg; // me_
bby* clh; // n
bby* cli; // handle
cdc = ccy;
if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0061', u'\u0063', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cde) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0061', u'\u0063', u'\u006F', u'\u0073', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cde)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(5, u'\u0061', u'\u0063', u'\u006F', u'\u0073', u'\u0068'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cdg) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0061', u'\u0063', u'\u006F', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cdg)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0061', u'\u0064', u'\u0064', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cdi) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(34, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cdi)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cdk) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cdl) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cdm) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cdk)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0041', u'\u0064', u'\u0064', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cdl)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cdm)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cdc, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cdo) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cdp) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cdo)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u005F', u'\u0062', u'\u0061', u'\u0063', u'\u006B', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cdp)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cdr) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cds) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cdr)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cds)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cdu) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cdv) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cdu)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cdv)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cdx) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cdy) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cdx)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u0026', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cdy)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0061', u'\u0073', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cea) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0061', u'\u0073', u'\u0069', u'\u006E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cea)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(5, u'\u0061', u'\u0073', u'\u0069', u'\u006E', u'\u0068'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cec) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0061', u'\u0073', u'\u0069', u'\u006E', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cec)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0061', u'\u0074', u'\u0061', u'\u006E'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cee) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0061', u'\u0074', u'\u0061', u'\u006E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cee)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(5, u'\u0061', u'\u0074', u'\u0061', u'\u006E', u'\u0068'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ceg) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0061', u'\u0074', u'\u0061', u'\u006E', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ceg)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0063', u'\u0065', u'\u0069', u'\u006C'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cei) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0065', u'\u0069', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cei)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(7, u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(65, u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u002A', u'\u003E', u'\u002A', u'\u0020', u'\u0061', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u002A', u'\u003E', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u003D', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(59, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u002A', u'\u005B', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u0029', u'\u005D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0066', u'\u006F', u'\u0072', u'\u0020', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0076', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(44, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0038', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(36, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(48, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(44, u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002D', u'\u003E', u'\u0042', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u005B', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u005D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(75, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006D', u'\u0065', u'\u006D', u'\u0063', u'\u0070', u'\u0079', u'\u0028', u'\u0061', u'\u005F', u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0063', u'\u005F', u'\u0073', u'\u0074', u'\u0072', u'\u0028', u'\u0029', u'\u002C', u'\u0020', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u006F', u'\u0066', u'\u0028', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u0029', u'\u0020', u'\u002A', u'\u0020', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0063', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cel) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u006F', u'\u0073', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cel)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0063', u'\u006F', u'\u0073', u'\u0068'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cen) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u006F', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cen)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0064', u'\u0065', u'\u006C'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cep) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u0061', u'\u0075', u'\u0074', u'\u006F', u'\u0026', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cep)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u002B', u'\u002B', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cep)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u0072', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0069', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0064', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cer) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ces) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cet) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ceu) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0068', u'\u0079', u'\u0070', u'\u006F', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cer)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u002D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cet)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ces)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u002D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ceu)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0065', u'\u0078', u'\u0070'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cew) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0065', u'\u0078', u'\u0070', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cew)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006C', u'\u006C'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cey) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cez) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cey)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u004C', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cey)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(10, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cez)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(cdc, (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfb) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfc) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfd) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfd)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u002D', u'\u0031', u'\u0029', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfd)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfd)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u0020', u'\u003C', u'\u0020', u'\u0030', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfd)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfb)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u002D', u'\u003E', u'\u004C', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfb)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfc)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0042', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cff) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfg) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(21, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0061', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u002C', u'\u0020', u'\u0062', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cff)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(19, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0028', u'\u0061', u'\u005F', u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0062', u'\u005F', u'\u0029', u'\u0020', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0028', u'\u0061', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0062', u'\u005F', u'\u0029', u'\u0020', u'\u002F', u'\u0020', u'\u0032', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u006D', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfg)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cff)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0063', u'\u005F', u'\u005D', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(24, u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u0020', u'\u003C', u'\u0020', u'\u0030', u'\u0029', u'\u0020', u'\u0062', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(29, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u0020', u'\u003E', u'\u0020', u'\u0030', u'\u0029', u'\u0020', u'\u0061', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0063', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfi) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfj) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfk) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfk)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u002D', u'\u0031', u'\u0029', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfk)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfi)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002D', u'\u003E', u'\u004C', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfk)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0020', u'\u003E', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfi)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002D', u'\u003E', u'\u004C', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfk)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002D', u'\u002D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfi)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfj)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u006F', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfm) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0066', u'\u006C', u'\u006F', u'\u006F', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfm)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(7, u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfo) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfp) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfq) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u0046', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfo)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(43, u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0062', u'\u006F', u'\u006F', u'\u006C', u'\u0028', u'\u002A', u'\u0029', u'\u0028', u'\u004B', u'\u005F', u'\u002C', u'\u0020', u'\u0056', u'\u005F', u'\u002C', u'\u0020', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u005F', u'\u002A', u'\u0029', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfp)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfq)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cdc, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfs) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cft) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfu) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(19, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u0053', u'\u0065', u'\u0061', u'\u0072', u'\u0063', u'\u0068', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cfs)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cft)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfu)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cdc, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfw) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002A'))->Cat(v<Array_<char16_t>*>(((cfw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cfy) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0052', u'\u005F', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cfy)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006E', u'\u0074', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cfy)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cga) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0052', u'\u005F', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cga)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0074', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cga)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0070', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0068', u'\u0065', u'\u0061', u'\u0064'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgc) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cgc)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgc)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0069', u'\u0064', u'\u0078'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cge) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0061', u'\u0075', u'\u0074', u'\u006F', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cge)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(19, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u003B', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u0021', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cge)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u0020', u'\u002B', u'\u002B', u'\u0074', u'\u005F', u'\u0029', u'\u007B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cge)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002D', u'\u003E', u'\u0049', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0073'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgg) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgh) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cgg)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0069', u'\u006E', u'\u0073', u'\u0065', u'\u0072', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgg)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgh)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cdc, (new Array_<char16_t>(6, u'\u0069', u'\u006E', u'\u0076', u'\u0052', u'\u006F', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgj) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgk) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgl) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgm) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(23, u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0061', u'\u0074', u'\u0061', u'\u006E', u'\u0032', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgk)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u002D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgm)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgj)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u002D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgl)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(58, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003C', u'\u0020', u'\u0030', u'\u002E', u'\u0030', u'\u0020', u'\u003F', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0032', u'\u002E', u'\u0030', u'\u0020', u'\u002A', u'\u0020', u'\u0033', u'\u002E', u'\u0031', u'\u0034', u'\u0031', u'\u0035', u'\u0039', u'\u0032', u'\u0036', u'\u0035', u'\u0033', u'\u0035', u'\u0038', u'\u0039', u'\u0037', u'\u0039', u'\u0033', u'\u0032', u'\u0033', u'\u0038', u'\u0034', u'\u0036', u'\u0020', u'\u003A', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(2, u'\u006C', u'\u006E'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgo) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006C', u'\u006F', u'\u0067', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgo)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(10, u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgq) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgr) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgr)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0030', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgr)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgq)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgq)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u0029', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002B', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cgq)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0030', u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u0020', u'\u003E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgr)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003B', u'\u0020', u'\u0069', u'\u005F', u'\u002D', u'\u002D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cgq)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgq)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u0029', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002D', u'\u002D'))->Cat(v<Array_<char16_t>*>(((cgq)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0078', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgt) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002B', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cgt)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u006E', u'\u006F', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgv) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u007E'))->Cat(v<Array_<char16_t>*>(((cgv)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(2, u'\u006F', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgx) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cgy) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgx)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u007C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cgy)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cha) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cha)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006E', u'\u0074', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chc) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chc)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0074', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0070', u'\u0072', u'\u0065', u'\u0076'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(che) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((che)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((che)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0062', u'\u0065', u'\u0067', u'\u0069', u'\u006E', u'\u0028', u'\u0029', u'\u0029', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((che)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((che)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002D', u'\u002D'))->Cat(v<Array_<char16_t>*>(((che)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0072', u'\u006E', u'\u0064'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chg) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chh) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u006E', u'\u0064', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chg)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chh)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(8, u'\u0072', u'\u006E', u'\u0064', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chj) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chk) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u006E', u'\u0064', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chj)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chk)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0073', u'\u0061', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chm) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chn) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chm)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0020', u'\u003E', u'\u003E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chn)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0073', u'\u0068', u'\u006C'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chp) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chq) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chp)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0020', u'\u003C', u'\u003C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chq)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0073', u'\u0068', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chs) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cht) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((chs)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0020', u'\u003E', u'\u003E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cht)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0073', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chv) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0069', u'\u006E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chv)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u006E', u'\u0068'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chx) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0069', u'\u006E', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chx)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0073', u'\u0071', u'\u0072', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(chz) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0071', u'\u0072', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((chz)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0073', u'\u0075', u'\u0062'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cib) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cic) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cid) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0075', u'\u0062', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cib)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cic)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cid)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cdc, (new Array_<char16_t>(7, u'\u0073', u'\u0079', u'\u0073', u'\u0054', u'\u0069', u'\u006D', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(145, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0068', u'\u0072', u'\u006F', u'\u006E', u'\u006F', u'\u003A', u'\u003A', u'\u0064', u'\u0075', u'\u0072', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0068', u'\u0072', u'\u006F', u'\u006E', u'\u006F', u'\u003A', u'\u003A', u'\u006D', u'\u0069', u'\u006C', u'\u006C', u'\u0069', u'\u0073', u'\u0065', u'\u0063', u'\u006F', u'\u006E', u'\u0064', u'\u0073', u'\u003E', u'\u0028', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u0068', u'\u0072', u'\u006F', u'\u006E', u'\u006F', u'\u003A', u'\u003A', u'\u0073', u'\u0079', u'\u0073', u'\u0074', u'\u0065', u'\u006D', u'\u005F', u'\u0063', u'\u006C', u'\u006F', u'\u0063', u'\u006B', u'\u003A', u'\u003A', u'\u006E', u'\u006F', u'\u0077', u'\u0028', u'\u0029', u'\u002E', u'\u0074', u'\u0069', u'\u006D', u'\u0065', u'\u005F', u'\u0073', u'\u0069', u'\u006E', u'\u0063', u'\u0065', u'\u005F', u'\u0065', u'\u0070', u'\u006F', u'\u0063', u'\u0068', u'\u0028', u'\u0029', u'\u0029', u'\u002E', u'\u0063', u'\u006F', u'\u0075', u'\u006E', u'\u0074', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u0069', u'\u006C'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cig) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cig)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cig)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u002D', u'\u002D'))->Cat(v<Array_<char16_t>*>(((cig)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0074', u'\u0061', u'\u006E'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cii) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0074', u'\u0061', u'\u006E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cii)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u006E', u'\u0068'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cik) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0074', u'\u0061', u'\u006E', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cik)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(4, u'\u0074', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cim) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cim)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002D', u'\u003E', u'\u0049', u'\u0020', u'\u003D', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cim)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002D', u'\u003E', u'\u0042', u'\u002E', u'\u0065', u'\u006E', u'\u0064', u'\u0028', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cio) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0043', u'\u005F', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cio)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u003B'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u0074', u'\u0036', u'\u0034'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ciq) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cir) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ciq)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(111, u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0032', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0030', u'\u0027', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0078', u'\u0027', u'\u0020', u'\u003F', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0075', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u002C', u'\u0020', u'\u0031', u'\u0036', u'\u0029', u'\u0020', u'\u003A', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0075', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cir)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cir)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cir)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cit) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ciu) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cit)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(32, u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0064', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((ciu)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((ciu)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((ciu)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0049', u'\u006E', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ciw) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cix) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ciw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u005F', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(109, u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0032', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0030', u'\u0027', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0027', u'\u0078', u'\u0027', u'\u0020', u'\u003F', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u002C', u'\u0020', u'\u0031', u'\u0036', u'\u0029', u'\u0020', u'\u003A', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u006F', u'\u0075', u'\u006C', u'\u006C', u'\u0028', u'\u0074', u'\u005F', u'\u002C', u'\u0020', u'\u0026', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0074', u'\u005F', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065', u'\u0028', u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cix)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u0020', u'\u003D', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cix)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cix)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0020', u'\u003D', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ciz) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ciz)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(3, u'\u0078', u'\u006F', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjb) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjc) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cjb)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u0020', u'\u005E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cjc)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(9, u'\u0063', u'\u0075', u'\u0069', u'\u005F', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cje) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cje)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(23, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u003C', u'\u003C', u'\u0020', u'\u0022', u'\u0028', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0022', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cje)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0063', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u003C', u'\u003C', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003C', u'\u003C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0066', u'\u006C', u'\u0075', u'\u0073', u'\u0068', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u0046', u'\u0069', u'\u006C', u'\u0065'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjg) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjh) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjg)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cjh)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0042', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(10, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjj) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(12, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjl) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjm) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjn) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjo) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjq) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjr) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
(cjs) = ((cjt)((cda), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cjq)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjs)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(45, u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cjr)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjq)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjs)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(72, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u0066', u'\u0073', u'\u0074', u'\u0072', u'\u0065', u'\u0061', u'\u006D', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0063', u'\u005F', u'\u0073', u'\u0074', u'\u0072', u'\u0028', u'\u0029', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0069', u'\u006E', u'\u0020', u'\u007C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0062', u'\u0069', u'\u006E', u'\u0061', u'\u0072', u'\u0079', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u002A', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cjq)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjv) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjw) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cjx) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
(cjy) = ((cjt)((cda), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cjv)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjy)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(45, u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(20, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0075', u'\u0031', u'\u0036', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0020', u'\u0073', u'\u005F', u'\u0020', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cjw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002D', u'\u003E', u'\u0042', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(42, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0026', u'\u0020', u'\u0074', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0075', u'\u0074', u'\u0066', u'\u0031', u'\u0036', u'\u0054', u'\u006F', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0073', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjv)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cjy)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(74, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0020', u'\u003D', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006F', u'\u0066', u'\u0073', u'\u0074', u'\u0072', u'\u0065', u'\u0061', u'\u006D', u'\u0028', u'\u0074', u'\u005F', u'\u002E', u'\u0063', u'\u005F', u'\u0073', u'\u0074', u'\u0072', u'\u0028', u'\u0029', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u006F', u'\u0075', u'\u0074', u'\u0020', u'\u007C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0062', u'\u0069', u'\u006E', u'\u0061', u'\u0072', u'\u0079', u'\u0020', u'\u007C', u'\u0020', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cjx)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(38, u'\u0020', u'\u003F', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0061', u'\u0070', u'\u0070', u'\u0020', u'\u003A', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u003A', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u006E', u'\u0063', u'\u0029', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(28, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u002A', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0029', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cjv)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cka) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
(ckb) = ((cjt)((cda), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cka)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((ckb)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ckd) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
(cke) = ((cjt)((cda), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckd)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cke)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(45, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0074', u'\u0065', u'\u006C', u'\u006C', u'\u0067', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(21, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u004C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ckg) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
(ckh) = ((cjt)((cda), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckg)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((ckh)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(25, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ckj) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ckk) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ckl) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
(ckm) = ((cjt)((cda), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckj)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((ckm)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(48, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0064', u'\u0069', u'\u0072', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckk)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0030', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0031', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0063', u'\u0075', u'\u0072', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0032', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0065', u'\u006E', u'\u0064', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(13, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0067', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckl)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002C', u'\u0020', u'\u006F', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0054', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cko) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
(ckp) = ((cjt)((cda), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cko)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((ckp)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0020', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(21, u'\u0069', u'\u0066', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0067', u'\u0065', u'\u0074', u'\u0028', u'\u0063', u'\u005F', u'\u0029', u'\u0029', u'\u0020', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(38, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0067', u'\u0028', u'\u002D', u'\u0031', u'\u002C', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0063', u'\u0075', u'\u0072', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ckr) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
(cks) = ((cjt)((cda), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckr)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cks)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0063', u'\u006C', u'\u006F', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cku) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
(ckv) = ((cjt)((cda), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cku)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((ckv)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(45, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0074', u'\u0065', u'\u006C', u'\u006C', u'\u0070', u'\u0028', u'\u0029', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cdc, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ckx) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cky) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(ckz) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
(cla) = ((cjt)((cda), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckx)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cla)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(48, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0064', u'\u0069', u'\u0072', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cky)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0030', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0062', u'\u0065', u'\u0067', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0031', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0063', u'\u0075', u'\u0072', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(40, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020', u'\u0032', u'\u003A', u'\u0020', u'\u006F', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u0069', u'\u006F', u'\u0073', u'\u005F', u'\u0062', u'\u0061', u'\u0073', u'\u0065', u'\u003A', u'\u003A', u'\u0065', u'\u006E', u'\u0064', u'\u003B', u'\u0020', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(13, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0073', u'\u0065', u'\u0065', u'\u006B', u'\u0070', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ckz)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002C', u'\u0020', u'\u006F', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(16, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(clc) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(cld) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
(cle) = ((cjt)((cda), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((clc)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cle)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(37, u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002D', u'\u003E', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0028', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cld)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u0042', u'\u0029', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cld)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002D', u'\u003E', u'\u004C', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cdc, (new Array_<char16_t>(20, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0043', u'\u0068', u'\u0061', u'\u0072'))) == 0){
awe<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(clg) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ccz), (new Array_<int64_t>(1, (0LL))));
(clh) = ((bbx)((awi<List_<gb*>*, gb*>((ccz), (new Array_<int64_t>(1, (0LL)))))));
(cli) = ((cjt)((cda), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(41, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u0020', u'\u0072', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0072', u'\u0065', u'\u0069', u'\u006E', u'\u0074', u'\u0065', u'\u0072', u'\u0070', u'\u0072', u'\u0065', u'\u0074', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u005F', u'\u002A', u'\u003E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((clg)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cli)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ccx), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0055', u'\u0074', u'\u0066', u'\u0038', u'\u005F', u'\u0028', u'\u0072', u'\u005F', u'\u002D', u'\u003E', u'\u0046', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((clh)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cdc, (new Array_<char16_t>(19, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u0065', u'\u0064', u'\u0069', u'\u0074', u'\u0042', u'\u0061', u'\u0073', u'\u0065', u'\u0047', u'\u0065', u'\u0074', u'\u0054', u'\u0065', u'\u0078', u'\u0074'))) == 0){
}
else if(cmp_(cdc, (new Array_<char16_t>(17, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0045', u'\u0064', u'\u0069', u'\u0074', u'\u004D', u'\u0075', u'\u006C', u'\u0074', u'\u0069'))) == 0){
}
else{if(!(false)){
throw 0xE9170000U;
}
}
}
// _tail
template<typename T_> static void bfa(T_ clm /*me_*/, Array_<int64_t>* cln /*type*/){
clm->I = clm->B.end();
--clm->I;
}
// _idx
template<typename T_> static int64_t bfc(T_ clo /*me_*/, Array_<int64_t>* clp /*type*/){
int64_t i_ = 0;
for(auto& t_ = clo->B.begin(); t_ != clo->B.end(); ++t_){
if(t_ == clo->I) return i_;
i_++;
}
return -1;
}
// buildStats
static void bfd(List_<ge*>* clq /*stats*/, ge* clr /*breakStat*/, ge* cls /*skipStat*/){
ge* clu; // stat
int64_t clw;
awe<List_<ge*>*>((clq), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<ge*>*>((clq), (new Array_<int64_t>(1, (0LL)))))){
(clu) = (awi<List_<ge*>*, ge*>((clq), (new Array_<int64_t>(1, (0LL)))));
clw = (clu)->lw;
switch(clw){
case 66049LL:
(cly)((as_<clz>(classTable_, (clu), 88)), (clr), (cls));
break;
case 66050LL:
(cmc)((as_<cmd>(classTable_, (clu), 92)), (clr), (cls));
break;
case 16843265LL:
(cmg)((as_<cmh>(classTable_, (clu), 98)), (clr), (cls));
break;
case 16843266LL:
(cmk)((as_<cml>(classTable_, (clu), 100)), (clr), (cls));
break;
case 66051LL:
(cmn)((as_<bty>(classTable_, (clu), 52)), (clr), (cls));
break;
case 526LL:
(cmp)((as_<cmq>(classTable_, (clu), 102)));
break;
case 66052LL:
(cms)((as_<bua>(classTable_, (clu), 54)), (clr), (cls));
break;
case 527LL:
(cmu)((as_<cmv>(classTable_, (clu), 104)));
break;
case 528LL:
(cmx)((as_<buy>(classTable_, (clu), 62)));
break;
case 529LL:
(cmz)((as_<ge>(classTable_, (clu), 16)), (clr));
break;
case 530LL:
(cnb)((as_<ge>(classTable_, (clu), 16)), (cls));
break;
case 531LL:
(cnd)((as_<cne>(classTable_, (clu), 106)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
ays<List_<ge*>*>((clq), (new Array_<int64_t>(1, (0LL))));
}
}
// _moveOffset
template<typename T_> static void bfe(T_ cng /*me_*/, Array_<int64_t>* cnh /*type*/, int64_t cni /*offset*/){
if(cni >= 0){
for(int64_t i_ = 0; i_ < cni; i_++){
if(cng->I == cng->B.end()) break;
++cng->I;
}
}else{
for(int64_t i_ = 0; i_ > cni; i_--){
if(cng->I == cng->B.end()) break;
--cng->I;
}
}
}
// _ins
template<typename T_, typename C_> static void bfk(T_ cnj /*me_*/, Array_<int64_t>* cnk /*type*/, C_ cnl /*item*/){
cnj->B.insert(cnj->I, cnl);
}
// _del
template<typename T_> static void bfm(T_ cnm /*me_*/, Array_<int64_t>* cnn /*type*/){
auto& i_ = cnm->I++;
cnm->B.erase(i_);
}
// refClass
static Array_<char16_t>* bft(ul* cno /*ast*/){
bby* cnp; // info
List_<um*>* cny; // items
um* coa; // item
fw* cod; // func_
List_<gb*>* cog; // items2
gb* coi; // arg
bgn* cok; // var_
(cnp) = ((bbx)((cno)));
if((cnp)->bca){
return (cnp)->bee;
}
((cnp)->bca) = (true);
if(!eqAddr_(((cno)->nj), (nullptr))){
(bft)((as_<ul>(classTable_, ((cno)->nj), 22)));
}
if(((cnp)->bfy) == (-1LL)){
((cnp)->bfy) = (uo);
(uo) = ((uo) + (1LL));
}
(cny) = ((cno)->bag);
awe<List_<um*>*>((cny), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((cny), (new Array_<int64_t>(1, (0LL)))))){
(coa) = (awi<List_<um*>*, um*>((cny), (new Array_<int64_t>(1, (0LL)))));
if((((coa)->azl)->lw) == (256LL)){
(cod) = (as_<fw>(classTable_, ((coa)->azl), 8));
if(!eqAddr_(((cod)->sh), (nullptr))){
(bcz)(((cod)->sh));
}
(cog) = ((cod)->sg);
awe<List_<gb*>*>((cog), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((cog), (new Array_<int64_t>(1, (0LL)))))){
(coi) = (awi<List_<gb*>*, gb*>((cog), (new Array_<int64_t>(1, (0LL)))));
(bcz)(((coi)->qf));
ays<List_<gb*>*>((cog), (new Array_<int64_t>(1, (0LL))));
}
uk<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL))), (cod));
}
else if((((coa)->azl)->lw) == (2LL)){
(cok) = (as_<bgn>(classTable_, ((coa)->azl), 38));
(bcz)((((cok)->bgp)->qf));
}
ays<List_<um*>*>((cny), (new Array_<int64_t>(1, (0LL))));
}
uk<Queue_<ul*>*, ul*>((ak), (new Array_<int64_t>(1, (0LL))), (cno));
return (cnp)->bee;
}
// _dtor
static void col(bgn* com){
((com)->bgp) = (nullptr);
((com)->ne) = (nullptr);
((com)->nf) = (nullptr);
((com)->ng) = (nullptr);
((com)->nh) = (nullptr);
((com)->ni) = (nullptr);
((com)->nj) = (nullptr);
((com)->nk) = (nullptr);
}
// _copy
static bgn* con(bgn* coo){
bgn* cop;
(cop) = (new bgn());
((cop)->bgp) = (copy_((coo)->bgp));
((cop)->ne) = (copy_((coo)->ne));
((cop)->nf) = (copy_((coo)->nf));
((cop)->ng) = (copy_((coo)->ng));
((cop)->nh) = (copy_((coo)->nh));
((cop)->ni) = (copy_((coo)->ni));
((cop)->nj) = (copy_((coo)->nj));
((cop)->nk) = (copy_((coo)->nk));
((cop)->no) = ((coo)->no);
((cop)->lw) = ((coo)->lw);
return as_<bgn>(classTable_, (cop), 38);
}
// _toBin
static Array_<uint8_t>* coq(bgn* cor){
Array_<uint8_t>* cos;
(cos) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(cos) = ((cos)->Cat(toBin_((cor)->bgp)));
(cos) = ((cos)->Cat(toBin_((cor)->ne)));
(cos) = ((cos)->Cat(toBin_((cor)->nf)));
(cos) = ((cos)->Cat(toBin_((cor)->ng)));
(cos) = ((cos)->Cat(toBin_((cor)->nh)));
(cos) = ((cos)->Cat(toBin_((cor)->ni)));
(cos) = ((cos)->Cat(toBin_((cor)->nj)));
(cos) = ((cos)->Cat(toBin_((cor)->nk)));
(cos) = ((cos)->Cat(toBin_((cor)->no)));
(cos) = ((cos)->Cat(toBin_((cor)->lw)));
return cos;
}
// _fromBin
static bgn* cpd(bgn* cpe, Array_<uint8_t>* cpf, int64_t* cpg){
bgn* cph;
(cph) = (new bgn());
((cph)->bgp) = (fromBin_<gb*>((cpf), (*cpg)));
((cph)->ne) = (fromBin_<ga*>((cpf), (*cpg)));
((cph)->nf) = (fromBin_<Array_<char16_t>*>((cpf), (*cpg)));
((cph)->ng) = (fromBin_<fx*>((cpf), (*cpg)));
((cph)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((cpf), (*cpg)));
((cph)->ni) = (fromBin_<Array_<char16_t>*>((cpf), (*cpg)));
((cph)->nj) = (fromBin_<fx*>((cpf), (*cpg)));
((cph)->nk) = (fromBin_<fy*>((cpf), (*cpg)));
((cph)->no) = (fromBin_<bool>((cpf), (*cpg)));
((cph)->lw) = (fromBin_<int64_t>((cpf), (*cpg)));
return cph;
}
// findFunc
static fw* bgs(ul* cpi /*ast*/, Array_<char16_t>* cpj /*name*/){
List_<um*>* cpk; // items
um* cpm; // item
(cpk) = ((cpi)->bag);
awe<List_<um*>*>((cpk), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((cpk), (new Array_<int64_t>(1, (0LL)))))){
(cpm) = (awi<List_<um*>*, um*>((cpk), (new Array_<int64_t>(1, (0LL)))));
if(((((cpm)->azl)->lw) == (256LL)) && (cmp_((((cpm)->azl)->nf), (cpj)) == 0)){
return as_<fw>(classTable_, ((cpm)->azl), 8);
}
ays<List_<um*>*>((cpk), (new Array_<int64_t>(1, (0LL))));
}
return nullptr;
}
// makeWriter
static bhv* bhu(bhv* cpp /*me2*/, Array_<char16_t>* cpq /*path*/, bool cpr /*append*/){
cpp->cps = reinterpret_cast<int64_t>(new writer_());
std::u16string s_ = cpq->B;
const std::string& t_ = utf16ToUtf8_(s_);
writer_* r_ = reinterpret_cast<writer_*>(cpp->cps);
r_->F = new std::ofstream(t_.c_str(), std::ios::out | std::ios::binary | (cpr ? std::ios::app : std::ios::trunc));
if(!*r_->F) return nullptr;
return cpp;
}
// _dtor
static void cpt(bhv* cpu /*me*/){
}
// fin
static void bid(bhv* cpv /*me*/){
writer_* r_ = reinterpret_cast<writer_*>(cpv->cps);
r_->F->close();
}
// setPos
static void cpw(bhv* cpx /*me*/, int64_t cpy /*origin*/, int64_t cpz /*pos*/){
writer_* r_ = reinterpret_cast<writer_*>(cpx->cps);
std::ios_base::seekdir o_ = std::ios_base::beg;
switch(cpy){
case 0: o_ = std::ios_base::beg; break;
case 1: o_ = std::ios_base::cur; break;
case 2: o_ = std::ios_base::end; break;
}
r_->F->seekp(cpz, o_);
}
// getPos
static int64_t cqa(bhv* cqb /*me*/){
writer_* r_ = reinterpret_cast<writer_*>(cqb->cps);
return static_cast<int64_t>(r_->F->tellp());
}
// write
static void cqc(bhv* cqd /*me*/, Array_<uint8_t>* cqe /*bin*/){
writer_* r_ = reinterpret_cast<writer_*>(cqd->cps);
r_->F->write(reinterpret_cast<char*>(cqe->B), cqe->L);
}
// writeInt
static void cqf(bhv* cqg /*me*/, int64_t cqh /*n*/){
Array_<char16_t>* cqi; // s
int64_t cqm;
int64_t cqn;
(cqi) = (v<int64_t>((cqh), (new Array_<int64_t>(1, (0LL)))));
for(cqm = (0LL), cqn = (((cqi)->Len()) - (1LL)); cqm <= cqn; cqm += (1LL)){
(cqo)((cqg), ((cqi)->At(cqm)));
}
}
// writeFloat
static void cqp(bhv* cqq /*me*/, double cqr /*n*/){
Array_<char16_t>* cqs; // s
int64_t cqw;
int64_t cqx;
(cqs) = (v<double>((cqr), (new Array_<int64_t>(1, (0LL)))));
for(cqw = (0LL), cqx = (((cqs)->Len()) - (1LL)); cqw <= cqx; cqw += (1LL)){
(cqo)((cqq), ((cqs)->At(cqw)));
}
}
// writeChar
static void cqo(bhv* cqy /*me*/, char16_t cqz /*n*/){
writer_* r_ = reinterpret_cast<writer_*>(cqy->cps);
writeUtf8_(r_->F, cqz);
}
// writeStr
static void bib(bhv* cra /*me*/, Array_<char16_t>* crb /*n*/){
int64_t crf;
int64_t crg;
for(crf = (0LL), crg = (((crb)->Len()) - (1LL)); crf <= crg; crf += (1LL)){
(cqo)((cra), ((crb)->At(crf)));
}
}
// _copy
static bhv* crh(bhv* cri){
bhv* crj;
(crj) = (new bhv());
((crj)->cps) = ((cri)->cps);
return as_<bhv>(classTable_, (crj), 40);
}
// _toBin
static Array_<uint8_t>* crk(bhv* crl){
Array_<uint8_t>* crm;
(crm) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(crm) = ((crm)->Cat(toBin_((crl)->cps)));
return crm;
}
// _fromBin
static bhv* cro(bhv* crp, Array_<uint8_t>* crq, int64_t* crr){
bhv* crs;
(crs) = (new bhv());
((crs)->cps) = (fromBin_<int64_t>((crq), (*crr)));
return crs;
}
// writeCpp
static void bic(bhv* crt /*writer*/, List_<Array_<char16_t>*>* cru /*resFiles*/){
gb* csa; // globalVar
bby* csb; // info
Array_<char16_t>* csg; // item
(bib)((crt), (new Array_<char16_t>(12, u'\u006E', u'\u0061', u'\u006D', u'\u0065', u'\u0073', u'\u0070', u'\u0061', u'\u0063', u'\u0065', u'\u0020', u'\u007B', u'\u000A')));
awe<List_<Array_<char16_t>*>*>((am), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((am), (new Array_<int64_t>(1, (0LL)))))){
(bib)((crt), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((am), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((am), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<Array_<char16_t>*>*>((an), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((an), (new Array_<int64_t>(1, (0LL)))))){
(bib)((crt), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((an), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((an), (new Array_<int64_t>(1, (0LL))));
}
if((uo) != (0LL)){
(bib)((crt), (((new Array_<char16_t>(27, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u005B'))->Cat(v<int64_t>(((uo) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u005D', u'\u003B', u'\u000A'))));
}
(bib)((crt), (new Array_<char16_t>(22, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
(bib)((crt), (new Array_<char16_t>(21, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u002A', u'\u002A', u'\u0020', u'\u0061', u'\u0072', u'\u0067', u'\u0076', u'\u005F', u'\u003B', u'\u000A')));
awe<List_<gb*>*>((ar), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((ar), (new Array_<int64_t>(1, (0LL)))))){
(csa) = (awi<List_<gb*>*, gb*>((ar), (new Array_<int64_t>(1, (0LL)))));
(csb) = ((bbx)((csa)));
(bib)((crt), (((new Array_<char16_t>(7, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((csa)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>(((csb)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
ays<List_<gb*>*>((ar), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<Array_<char16_t>*>*>((ap), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((ap), (new Array_<int64_t>(1, (0LL)))))){
(bib)((crt), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ap), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((ap), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL)))))){
(bib)((crt), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((ao), (new Array_<int64_t>(1, (0LL))));
}
(bib)((crt), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bib)((crt), (new Array_<char16_t>(29, u'\u0069', u'\u006E', u'\u0074', u'\u0020', u'\u006D', u'\u0061', u'\u0069', u'\u006E', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0020', u'\u0063', u'\u005F', u'\u002C', u'\u0020', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u002A', u'\u002A', u'\u0020', u'\u0076', u'\u005F', u'\u0029', u'\u007B', u'\u000A')));
(bib)((crt), (new Array_<char16_t>(38, u'\u0061', u'\u0072', u'\u0067', u'\u0063', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u003E', u'\u0028', u'\u0063', u'\u005F', u'\u0029', u'\u0020', u'\u002D', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
(bib)((crt), (new Array_<char16_t>(16, u'\u0061', u'\u0072', u'\u0067', u'\u0076', u'\u005F', u'\u0020', u'\u003D', u'\u0020', u'\u0076', u'\u005F', u'\u0020', u'\u002B', u'\u0020', u'\u0031', u'\u003B', u'\u000A')));
awe<List_<Array_<char16_t>*>*>((at), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((at), (new Array_<int64_t>(1, (0LL)))))){
(csg) = (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((at), (new Array_<int64_t>(1, (0LL)))));
(bib)((crt), (csg));
ays<List_<Array_<char16_t>*>*>((at), (new Array_<int64_t>(1, (0LL))));
}
(bib)((crt), (new Array_<char16_t>(9, u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u005F', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
(bib)((crt), (new Array_<char16_t>(5, u'\u0061', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
(bib)((crt), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
(bib)((crt), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
// copyFile
static bool bif(Array_<char16_t>* csh /*dst*/, Array_<char16_t>* csi /*src*/){
return copyFile_(csh->B, csi->B);
}
// getInfo
static bjb* bja(fx* csj /*ast*/){
bjb* csm; // info
if((eqAddr_(((csj)->nk), (nullptr))) || ((((csj)->nk)->lw) != (268435456LL))){
(csm) = (new bjb());
((csm)->lw) = (268435456LL);
((csm)->bjr) = ((csn)());
if((((aye<int64_t>(((csj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL)) && (!eqAddr_(((csj)->nf), (nullptr)))) && (cmp_(((csj)->nf), (new Array_<char16_t>(1, u'\u0024'))) != 0)){
((csm)->csq) = ((csn)());
}
else{
((csm)->csq) = (nullptr);
}
((csm)->bjd) = (false);
((csj)->nk) = (csm);
}
return as_<bjb>(classTable_, ((csj)->nk), 42);
}
// _dtor
static void css(bjb* cst){
((cst)->bjr) = (nullptr);
((cst)->csq) = (nullptr);
}
// _copy
static bjb* csu(bjb* csv){
bjb* csw;
(csw) = (new bjb());
((csw)->bjr) = (copy_((csv)->bjr));
((csw)->csq) = (copy_((csv)->csq));
((csw)->bjd) = ((csv)->bjd);
((csw)->lw) = ((csv)->lw);
return as_<bjb>(classTable_, (csw), 42);
}
// _toBin
static Array_<uint8_t>* csx(bjb* csy){
Array_<uint8_t>* csz;
(csz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(csz) = ((csz)->Cat(toBin_((csy)->bjr)));
(csz) = ((csz)->Cat(toBin_((csy)->csq)));
(csz) = ((csz)->Cat(toBin_((csy)->bjd)));
(csz) = ((csz)->Cat(toBin_((csy)->lw)));
return csz;
}
// _fromBin
static bjb* cte(bjb* ctf, Array_<uint8_t>* ctg, int64_t* cth){
bjb* cti;
(cti) = (new bjb());
((cti)->bjr) = (fromBin_<Array_<char16_t>*>((ctg), (*cth)));
((cti)->csq) = (fromBin_<Array_<char16_t>*>((ctg), (*cth)));
((cti)->bjd) = (fromBin_<bool>((ctg), (*cth)));
((cti)->lw) = (fromBin_<int64_t>((ctg), (*cth)));
return cti;
}
// write
static void bki(List_<Array_<char16_t>*>* ctj /*codes*/, Array_<char16_t>* ctk /*attr*/, List_<gb*>* ctl /*args*/, List_<um*>* ctm /*members*/){
Array_<char16_t>* cto;
bjb* ctq; // x
bjb* cts; // x
bjb* ctv; // me_
bjb* ctw; // meType
bjb* ctx; // key
bjb* cty; // item
bjb* cua; // me_
bjb* cub; // item
bjb* cud; // me_
bjb* cue; // item
bjb* cug; // me_
bjb* cuh; // item
bjb* cuj; // me_
bjb* cuk; // n
bjb* cum; // x
bjb* cuo; // x
bjb* cuq; // x
bjb* cus; // x
bjb* cuu; // x
bjb* cux; // x
bjb* cuz; // x
bjb* cvb; // me_
bjb* cvd; // x
bjb* cve; // y
bjb* cvf; // centerX
bjb* cvg; // centerY
bjb* cvi; // x
bjb* cvk; // me_
bjb* cvl; // meType
bjb* cvm; // value
bjb* cvo; // me_
bjb* cvp; // meType
bjb* cvq; // item
bjb* cvr; // start
bjb* cvt; // me_
bjb* cvu; // meType
bjb* cvv; // item
bjb* cvx; // me_
bjb* cvy; // meType
bjb* cvz; // item
bjb* cwa; // start
bjb* cwc; // x
bjb* cwe; // me_
bjb* cwf; // meType
bjb* cwg; // callback
bjb* cwh; // data
bjb* cwj; // me_
bjb* cwk; // meType
bjb* cwl; // key
bjb* cwm; // existed
bjb* cwo; // me_
bjb* cwq; // me_
bjb* cws; // me_
bjb* cwu; // me_
bjb* cww; // me_
bjb* cwy; // me_
bjb* cwz; // item
bjb* cxb; // x
bjb* cxc; // y
bjb* cxd; // centerX
bjb* cxe; // centerY
bjb* cxg; // x
bjb* cxi; // me_
bjb* cxj; // offset
bjb* cxl; // me_
bjb* cxn; // me_
bjb* cxp; // me_
bjb* cxq; // n
bjb* cxs; // me_
bjb* cxu; // me_
bjb* cxw; // me_
bjb* cxy; // min
bjb* cxz; // max
bjb* cyb; // min
bjb* cyc; // max
bjb* cye; // me_
bjb* cyf; // n
bjb* cyh; // me_
bjb* cyi; // n
bjb* cyk; // me_
bjb* cyl; // n
bjb* cyn; // x
bjb* cyp; // x
bjb* cyr; // x
bjb* cyt; // me_
bjb* cyu; // meType
bjb* cyv; // start
bjb* cyw; // len
bjb* cyz; // me_
bjb* czb; // x
bjb* czd; // x
bjb* czf; // me_
bjb* czh; // me_
bjb* czj; // me_
bjb* czk; // success
bjb* czm; // me_
bjb* czn; // success
bjb* czp; // me_
bjb* czq; // success
bjb* czs; // me_
bjb* czt; // type
bjb* czv; // me_
bjb* czw; // n
bjb* czy; // str
bjb* dab; // path
bjb* dad; // path
bjb* dae; // recursion
bjb* daf; // callback
bjb* dag; // data
bjb* dai; // me_
bjb* daj; // path
bjb* dak; // handle
bjb* dan; // me_
bjb* dao; // path
bjb* dap; // append
bjb* daq; // handle
bjb* das; // me_
bjb* dat; // handle
bjb* dav; // me_
bjb* daw; // handle
bjb* day; // me_
bjb* daz; // handle
bjb* dbb; // me_
bjb* dbc; // origin
bjb* dbd; // pos
bjb* dbe; // handle
bjb* dbg; // me_
bjb* dbh; // handle
bjb* dbj; // me_
bjb* dbk; // handle
bjb* dbm; // me_
bjb* dbn; // handle
bjb* dbp; // me_
bjb* dbq; // origin
bjb* dbr; // pos
bjb* dbs; // handle
bjb* dbu; // me_
bjb* dbv; // n
bjb* dbw; // handle
bjb* dby; // me_
bjb* dbz; // n
bjb* dca; // handle
bjb* dcc; // me_
bjb* dcd; // handle
bjb* dcf; // me_
bjb* dcg; // parent
bjb* dch; // x
bjb* dci; // y
bjb* dcj; // width
bjb* dck; // height
bjb* dcl; // anchorX
bjb* dcm; // anchorY
bjb* dcn; // handle
cto = ctk;
if(cmp_(cto, (new Array_<char16_t>(4, u'\u0061', u'\u0063', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(ctq) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0061', u'\u0063', u'\u006F', u'\u0073', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctq)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(5, u'\u0061', u'\u0063', u'\u006F', u'\u0073', u'\u0068'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cts) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u006C', u'\u006F', u'\u0067', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cts)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002B', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0073', u'\u0071', u'\u0072', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cts)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cts)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002D', u'\u0031', u'\u0029', u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0061', u'\u0064', u'\u0064', u'\u0072'))) == 0){
}
else if(cmp_(cto, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(ctv) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(ctw) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(ctx) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cty) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctw)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((ctw)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ctv)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctx)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cty)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ctv)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((ctx)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cty)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cto, (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cua) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cub) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(24, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006E', u'\u005F', u'\u003D', u'\u007B', u'\u0050', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u004E', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0049', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cub)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cua)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002E', u'\u0048', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u007B'))->Cat(v<Array_<char16_t>*>(((cua)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0048', u'\u003D', u'\u006E', u'\u005F', u'\u003B'))->Cat(v<Array_<char16_t>*>(((cua)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(16, u'\u002E', u'\u0054', u'\u003D', u'\u006E', u'\u005F', u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u006E', u'\u005F', u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cua)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0054', u'\u003B'))->Cat(v<Array_<char16_t>*>(((cua)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u002E', u'\u0054', u'\u002E', u'\u004E', u'\u003D', u'\u006E', u'\u005F', u'\u003B'))->Cat(v<Array_<char16_t>*>(((cua)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0054', u'\u003D', u'\u006E', u'\u005F', u'\u007D', u'\u000A')))))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cua)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u004C', u'\u002B', u'\u002B', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cud) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cue) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cud)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cue)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cug) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cuh) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cug)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0070', u'\u0075', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuh)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cuj) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cuk) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cuj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u0026'))->Cat(v<Array_<char16_t>*>(((cuk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0061', u'\u0073', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cum) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0061', u'\u0073', u'\u0069', u'\u006E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cum)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(5, u'\u0061', u'\u0073', u'\u0069', u'\u006E', u'\u0068'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cuo) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u006C', u'\u006F', u'\u0067', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuo)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002B', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0073', u'\u0071', u'\u0072', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuo)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002A'))->Cat(v<Array_<char16_t>*>(((cuo)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002B', u'\u0031', u'\u0029', u'\u0029', u'\u003B', u'\u000A'))))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0061', u'\u0074', u'\u0061', u'\u006E'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cuq) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0061', u'\u0074', u'\u0061', u'\u006E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuq)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(5, u'\u0061', u'\u0074', u'\u0061', u'\u006E', u'\u0068'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cus) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(23, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u002E', u'\u0035', u'\u002A', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u006C', u'\u006F', u'\u0067', u'\u0028', u'\u0028', u'\u0031', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cus)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u0029', u'\u002F', u'\u0028', u'\u0031', u'\u002D'))->Cat(v<Array_<char16_t>*>(((cus)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0063', u'\u0065', u'\u0069', u'\u006C'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cuu) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0063', u'\u0065', u'\u0069', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuu)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(7, u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(72, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065', u'\u0029', u'\u003F', u'\u004F', u'\u005F', u'\u002E', u'\u0063', u'\u006D', u'\u0064', u'\u004C', u'\u0069', u'\u006E', u'\u0065', u'\u003A', u'\u006C', u'\u006F', u'\u0063', u'\u0061', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u002E', u'\u0073', u'\u0065', u'\u0061', u'\u0072', u'\u0063', u'\u0068', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0031', u'\u0029', u'\u002E', u'\u0073', u'\u0070', u'\u006C', u'\u0069', u'\u0074', u'\u0028', u'\u0022', u'\u0026', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(39, u'\u0069', u'\u0066', u'\u0028', u'\u0072', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003D', u'\u003D', u'\u003D', u'\u0031', u'\u0026', u'\u0026', u'\u0072', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0022', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u005B', u'\u005D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(32, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003C', u'\u0072', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(19, u'\u0072', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u003D', u'\u007B', u'\u0053', u'\u003A', u'\u0072', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0063', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cux) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0063', u'\u006F', u'\u0073', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cux)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0063', u'\u006F', u'\u0073', u'\u0068'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cuz) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0063', u'\u006F', u'\u0073', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cuz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0064', u'\u0065', u'\u006C'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvb) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvb)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0050', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((cvb)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(26, u'\u002E', u'\u0048', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((cvb)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(26, u'\u002E', u'\u0054', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u002E', u'\u0050', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvb)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0050', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvb)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u004C', u'\u002D', u'\u002D', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0064', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvd) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cve) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvf) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvg) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0078', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvd)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002D'))->Cat(v<Array_<char16_t>*>(((cvf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u002C', u'\u0079', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cve)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002D'))->Cat(v<Array_<char16_t>*>(((cvg)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0073', u'\u0071', u'\u0072', u'\u0074', u'\u0028', u'\u0078', u'\u005F', u'\u002A', u'\u0078', u'\u005F', u'\u002B', u'\u0079', u'\u005F', u'\u002A', u'\u0079', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0065', u'\u0078', u'\u0070'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvi) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0065', u'\u0078', u'\u0070', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvi)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006C', u'\u006C'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvk) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvl) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvm) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvl)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cvl)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(23, u'\u002E', u'\u0053', u'\u003D', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvm)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u0029', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cvk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u002E', u'\u0066', u'\u0069', u'\u006C', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvm)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvo) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvp) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvq) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvr) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cvp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvo)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(31, u'\u002E', u'\u0053', u'\u002E', u'\u0069', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvq)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002C'))->Cat(v<Array_<char16_t>*>(((cvr)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F', u'\u0030', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cvr)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvo)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0069', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvq)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cvr)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F', u'\u0030', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cvr)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
}
else if(cmp_(cto, (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0042', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvt) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvu) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvv) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u005F', u'\u003D', u'\u0030', u'\u002C', u'\u0062', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cvt)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(20, u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u002C', u'\u0063', u'\u005F', u'\u002C', u'\u006D', u'\u005F', u'\u002C', u'\u0066', u'\u005F', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvu)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(41, u'\u0066', u'\u005F', u'\u003D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0061', u'\u002C', u'\u0062', u'\u0029', u'\u007B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u003E', u'\u0062', u'\u003F', u'\u0031', u'\u003A', u'\u0061', u'\u003C', u'\u0062', u'\u003F', u'\u002D', u'\u0031', u'\u003A', u'\u0030', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(49, u'\u0066', u'\u005F', u'\u003D', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0061', u'\u002C', u'\u0062', u'\u0029', u'\u007B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u002E', u'\u0053', u'\u003E', u'\u0062', u'\u002E', u'\u0053', u'\u003F', u'\u0031', u'\u003A', u'\u0061', u'\u002E', u'\u0053', u'\u003C', u'\u0062', u'\u002E', u'\u0053', u'\u003F', u'\u002D', u'\u0031', u'\u003A', u'\u0030', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0020', u'\u0028', u'\u0061', u'\u005F', u'\u003C', u'\u003D', u'\u0062', u'\u005F', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(18, u'\u0063', u'\u005F', u'\u003D', u'\u007E', u'\u007E', u'\u0028', u'\u0028', u'\u0061', u'\u005F', u'\u002B', u'\u0062', u'\u005F', u'\u0029', u'\u002F', u'\u0032', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u006D', u'\u005F', u'\u003D', u'\u0066', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvv)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cvt)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u005B', u'\u0063', u'\u005F', u'\u005D', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(17, u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u003C', u'\u0030', u'\u0029', u'\u0062', u'\u005F', u'\u003D', u'\u0063', u'\u005F', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(22, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u006D', u'\u005F', u'\u003E', u'\u0030', u'\u0029', u'\u0061', u'\u005F', u'\u003D', u'\u0063', u'\u005F', u'\u002B', u'\u0031', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0063', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvx) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvy) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cvz) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwa) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cvy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvx)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(35, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0061', u'\u0073', u'\u0074', u'\u0049', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002C'))->Cat(v<Array_<char16_t>*>(((cwa)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F'))->Cat(v<Array_<char16_t>*>(((cvx)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(12, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cwa)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cvx)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u002E', u'\u006C', u'\u0061', u'\u0073', u'\u0074', u'\u0049', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cvz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cwa)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F'))->Cat(v<Array_<char16_t>*>(((cvx)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(12, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cwa)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))))));
}
else if(cmp_(cto, (new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u006F', u'\u0072'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwc) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0066', u'\u006C', u'\u006F', u'\u006F', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwc)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(7, u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwe) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwf) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwg) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwh) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0044', u'\u005F', u'\u003D', u'\u007B', u'\u0046', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cwg)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002C', u'\u0044', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cwh)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002C', u'\u0043', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u007D', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cwf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwe)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(73, u'\u002E', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068', u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0056', u'\u005F', u'\u002C', u'\u004B', u'\u005F', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u0029', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u003D', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0046', u'\u0028', u'\u007B', u'\u0053', u'\u003A', u'\u004B', u'\u005F', u'\u007D', u'\u002C', u'\u0056', u'\u005F', u'\u002C', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0044', u'\u0029', u'\u007D', u'\u002C', u'\u0044', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwe)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(69, u'\u002E', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068', u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0056', u'\u005F', u'\u002C', u'\u004B', u'\u005F', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u0029', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0043', u'\u003D', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0046', u'\u0028', u'\u004B', u'\u005F', u'\u002C', u'\u0056', u'\u005F', u'\u002C', u'\u0074', u'\u0068', u'\u0069', u'\u0073', u'\u002E', u'\u0044', u'\u0029', u'\u007D', u'\u002C', u'\u0044', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0044', u'\u005F', u'\u002E', u'\u0043', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u0044', u'\u0069', u'\u0063', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwj) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwk) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwl) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwm) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cwk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0072', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0067', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwl)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0072', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002E', u'\u0067', u'\u0065', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwl)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwm)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(21, u'\u002E', u'\u0024', u'\u003D', u'\u0072', u'\u005F', u'\u0021', u'\u003D', u'\u003D', u'\u0075', u'\u006E', u'\u0064', u'\u0065', u'\u0066', u'\u0069', u'\u006E', u'\u0065', u'\u0064', u'\u0029', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u0044', u'\u0053', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0030', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((3LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwo) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cwo)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u0049', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwq) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cwq)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002E', u'\u0073', u'\u0068', u'\u0069', u'\u0066', u'\u0074', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cws) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cws)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u002E', u'\u0070', u'\u006F', u'\u0070', u'\u0028', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0068', u'\u0065', u'\u0061', u'\u0064'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwu) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwu)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwu)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0048', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0069', u'\u0064', u'\u0078'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cww) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cww)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0048', u'\u002C', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cww)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(21, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(18, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u0021', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cww)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0050', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0069', u'\u005F', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0070', u'\u005F', u'\u003D', u'\u0070', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u002D', u'\u0031', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0073'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwy) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cwz) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cwy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0050', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006E', u'\u005F', u'\u003D', u'\u007B', u'\u0050', u'\u003A', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u002C', u'\u004E', u'\u003A', u'\u0070', u'\u005F', u'\u002C', u'\u0049', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cwz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u007D', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((cwy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u002E', u'\u0048', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cwy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(10, u'\u002E', u'\u0054', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((cwy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0054', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0070', u'\u005F', u'\u002E', u'\u0050', u'\u003D', u'\u006E', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cwy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u004C', u'\u002B', u'\u002B', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(6, u'\u0069', u'\u006E', u'\u0076', u'\u0052', u'\u006F', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxb) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxc) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxd) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxe) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(18, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0061', u'\u0074', u'\u0061', u'\u006E', u'\u0032', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxc)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002D'))->Cat(v<Array_<char16_t>*>(((cxe)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cxb)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002D'))->Cat(v<Array_<char16_t>*>(((cxd)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(33, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003C', u'\u0030', u'\u002E', u'\u0030', u'\u003F', u'\u0072', u'\u005F', u'\u002B', u'\u0032', u'\u002E', u'\u0030', u'\u002A', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0050', u'\u0049', u'\u003A', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(2, u'\u006C', u'\u006E'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxg) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u006C', u'\u006F', u'\u0067', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxg)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(10, u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxi) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxj) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u003E', u'\u003D', u'\u0030', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((cxj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u003B', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxi)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxi)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxi)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cxj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u003B', u'\u0069', u'\u005F', u'\u002D', u'\u002D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxi)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(17, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxi)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxi)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u0050', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0078', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxl) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxl)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxl)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u004E', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u006E', u'\u006F', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxn) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u007E'))->Cat(v<Array_<char16_t>*>(((cxn)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(2, u'\u006F', u'\u0072'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxp) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxq) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u007C'))->Cat(v<Array_<char16_t>*>(((cxq)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxs) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u005B', u'\u0030', u'\u005D', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxu) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cxu)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u005B'))->Cat(v<Array_<char16_t>*>(((cxu)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(12, u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u005D', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0070', u'\u0072', u'\u0065', u'\u0076'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxw) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cxw)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cxw)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0050', u'\u002E', u'\u0050', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0072', u'\u006E', u'\u0064'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxy) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cxz) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(25, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u007E', u'\u007E', u'\u0028', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0072', u'\u0061', u'\u006E', u'\u0064', u'\u006F', u'\u006D', u'\u0028', u'\u0029', u'\u002A', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cxz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002D'))->Cat(v<Array_<char16_t>*>(((cxy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(5, u'\u002B', u'\u0031', u'\u0029', u'\u0029', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cxy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(cto, (new Array_<char16_t>(8, u'\u0072', u'\u006E', u'\u0064', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyb) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyc) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0072', u'\u0061', u'\u006E', u'\u0064', u'\u006F', u'\u006D', u'\u0028', u'\u0029', u'\u002A', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyc)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002D'))->Cat(v<Array_<char16_t>*>(((cyb)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002B'))->Cat(v<Array_<char16_t>*>(((cyb)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0073', u'\u0061', u'\u0072'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cye) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyf) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cye)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003E', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cyf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0073', u'\u0068', u'\u006C'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyh) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyi) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cyh)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003C', u'\u003C'))->Cat(v<Array_<char16_t>*>(((cyi)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0073', u'\u0068', u'\u0072'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyk) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyl) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cyk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u003E', u'\u003E', u'\u003E'))->Cat(v<Array_<char16_t>*>(((cyl)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0073', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyn) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0073', u'\u0069', u'\u006E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyn)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u006E', u'\u0068'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyp) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0073', u'\u0069', u'\u006E', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0073', u'\u0071', u'\u0072', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyr) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0073', u'\u0071', u'\u0072', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyr)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0073', u'\u0075', u'\u0062'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyt) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyu) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyv) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyw) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyu)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((cyu)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u007B', u'\u0053', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cyw)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F'))->Cat(v<Array_<char16_t>*>(((cyt)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyv)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cyt)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyv)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cyv)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002B'))->Cat(v<Array_<char16_t>*>(((cyw)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0029', u'\u007D', u'\u003B', u'\u000A'))))))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((cyw)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u003F'))->Cat(v<Array_<char16_t>*>(((cyt)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyv)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u003A'))->Cat(v<Array_<char16_t>*>(((cyt)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((cyv)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>(((cyv)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002B'))->Cat(v<Array_<char16_t>*>(((cyw)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))))))));
}
else if(cmp_(cto, (new Array_<char16_t>(7, u'\u0073', u'\u0079', u'\u0073', u'\u0054', u'\u0069', u'\u006D', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(29, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0044', u'\u0061', u'\u0074', u'\u0065', u'\u0028', u'\u0029', u'\u002E', u'\u0067', u'\u0065', u'\u0074', u'\u0054', u'\u0069', u'\u006D', u'\u0065', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u0069', u'\u006C'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(cyz) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((cyz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0050', u'\u003D'))->Cat(v<Array_<char16_t>*>(((cyz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0054', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0074', u'\u0061', u'\u006E'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czb) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0074', u'\u0061', u'\u006E', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czb)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u006E', u'\u0068'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czd) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0074', u'\u0061', u'\u006E', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czd)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(4, u'\u0074', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czf) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((czf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002E', u'\u0050', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czh) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(17, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u005F', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czh)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(7, u'\u002E', u'\u004C', u'\u0029', u'\u002C', u'\u0065', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((czh)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0048', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((czh)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002E', u'\u004C', u'\u003B', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0061', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u003D', u'\u0065', u'\u005F', u'\u002E', u'\u0049', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0065', u'\u005F', u'\u003D', u'\u0065', u'\u005F', u'\u002E', u'\u004E', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u0074', u'\u0036', u'\u0034'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czj) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czk) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0032', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((czj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u002E', u'\u0053', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0030', u'\u0022', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((czj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0078', u'\u0022', u'\u0029', u'\u007B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((czj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(22, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0032', u'\u0029', u'\u002C', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((czk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(24, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028', u'\u0073', u'\u005F', u'\u002C', u'\u0031', u'\u0036', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((czk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u002E', u'\u0053', u'\u002C', u'\u0031', u'\u0030', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czm) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czn) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czm)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((czn)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0072', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0049', u'\u006E', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czp) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czq) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0032', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((czp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u002E', u'\u0053', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0030', u'\u0022', u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((czp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u002E', u'\u0053', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0078', u'\u0022', u'\u0029', u'\u007B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0073', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((czp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(22, u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0032', u'\u0029', u'\u002C', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((czq)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(24, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028', u'\u0073', u'\u005F', u'\u002C', u'\u0031', u'\u0036', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(14, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0072', u'\u005F', u'\u003D', u'\u004E', u'\u0075', u'\u006D', u'\u0062', u'\u0065', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((czq)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u002E', u'\u0024', u'\u003D', u'\u0021', u'\u0069', u'\u0073', u'\u004E', u'\u0061', u'\u004E', u'\u0028', u'\u0072', u'\u005F', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0070', u'\u0061', u'\u0072', u'\u0073', u'\u0065', u'\u0049', u'\u006E', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u002E', u'\u0053', u'\u002C', u'\u0031', u'\u0030', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czs) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czt) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006E', u'\u005F', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czt)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0030', u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(29, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((3LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(18, u'\u003F', u'\u0022', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u0022', u'\u003A', u'\u0022', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u0022', u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u006E', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003E', u'\u003D', u'\u0030', u'\u003F', u'\u007E', u'\u007E'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u0026', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u003A', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u002D', u'\u0028', u'\u007E'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(8, u'\u0026', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(63, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0022', u'\u002B', u'\u006E', u'\u005F', u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0032', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u006E', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u003E', u'\u003D', u'\u0030', u'\u003F', u'\u007E', u'\u007E'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(17, u'\u0026', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u003A', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u002D', u'\u0028', u'\u007E'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u0026', u'\u0030', u'\u0078', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(65, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0022', u'\u002B', u'\u006E', u'\u005F', u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0034', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u006E', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u003E', u'\u003E', u'\u003E', u'\u0030', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0022', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0022', u'\u002B', u'\u006E', u'\u005F', u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0038', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u006E', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u003E', u'\u003E', u'\u003E', u'\u0030', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0030', u'\u0078', u'\u0022', u'\u002B', u'\u0028', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(87, u'\u003E', u'\u003D', u'\u0030', u'\u003F', u'\u0022', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0030', u'\u0022', u'\u003A', u'\u0022', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0046', u'\u0022', u'\u0029', u'\u002B', u'\u006E', u'\u005F', u'\u002E', u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u0028', u'\u0031', u'\u0036', u'\u0029', u'\u0029', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u002D', u'\u0031', u'\u0036', u'\u0029', u'\u002E', u'\u0074', u'\u006F', u'\u0055', u'\u0070', u'\u0070', u'\u0065', u'\u0072', u'\u0043', u'\u0061', u'\u0073', u'\u0065', u'\u0028', u'\u0029', u'\u007D', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czt)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(6, u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((czs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(3, u'\u0078', u'\u006F', u'\u0072'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czv) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czw) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((czv)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u005E'))->Cat(v<Array_<char16_t>*>(((czw)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(9, u'\u0063', u'\u0075', u'\u0069', u'\u005F', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(czy) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(8, u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029'))->Cat(v<Array_<char16_t>*>(((czy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(15, u'\u003D', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u0028', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0022', u'\u007D', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(26, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074', u'\u0029', u'\u007B', u'\u004F', u'\u005F', u'\u002E', u'\u0070', u'\u0072', u'\u0069', u'\u006E', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u007D', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u006F', u'\u006C', u'\u0065', u'\u002E', u'\u006C', u'\u006F', u'\u0067', u'\u0028'))->Cat(v<Array_<char16_t>*>(((czy)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u0029', u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u0046', u'\u0069', u'\u006C', u'\u0065'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(10, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dab) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(16, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0066', u'\u005F', u'\u003D', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u002C', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((dab)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(46, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0029', u'\u0066', u'\u005F', u'\u003D', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u0029', u'\u0021', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u003D', u'\u003D', u'\u003D', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0034', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0072', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0065', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0073', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0033', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(17, u'\u0066', u'\u005F', u'\u003D', u'\u0046', u'\u005F', u'\u0028', u'\u0070', u'\u005F', u'\u002C', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u005F', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(12, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dad) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dae) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(daf) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dag) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0066', u'\u005F', u'\u002C', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((dad)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0034', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0072', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0065', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0073', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0033', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0066', u'\u005F', u'\u003D', u'\u0046', u'\u0046', u'\u005F', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(33, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u005F', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u005F', u'\u003C', u'\u0066', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u005F', u'\u002B', u'\u002B', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(36, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0030', u'\u002C', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u0070', u'\u005F', u'\u0026', u'\u0026', u'\u0028'))->Cat(v<Array_<char16_t>*>(((dae)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(47, u'\u007C', u'\u007C', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u002E', u'\u0069', u'\u006E', u'\u0064', u'\u0065', u'\u0078', u'\u004F', u'\u0066', u'\u0028', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u002D', u'\u0031', u'\u0029', u'\u0029', u'\u007B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0069', u'\u0066', u'\u0028', u'\u0021'))->Cat(v<Array_<char16_t>*>(((daf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(42, u'\u0028', u'\u007B', u'\u0053', u'\u003A', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u007D', u'\u002C', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u005B', u'\u0066', u'\u005F', u'\u005B', u'\u0069', u'\u005F', u'\u005D', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u002D', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0027', u'\u002F', u'\u0027', u'\u002C'))->Cat(v<Array_<char16_t>*>(((dag)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(14, u'\u0029', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else if(cmp_(cto, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dai) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(daj) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(dak) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0066', u'\u005F', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0070', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((daj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0053', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(39, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0029', u'\u0066', u'\u005F', u'\u003D', u'\u004F', u'\u005F', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0028', u'\u0070', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(69, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u005F', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003E', u'\u003D', u'\u0034', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0030', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0072', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0065', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0032', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u0073', u'\u0022', u'\u0026', u'\u0026', u'\u0070', u'\u005F', u'\u005B', u'\u0033', u'\u005D', u'\u003D', u'\u003D', u'\u003D', u'\u0022', u'\u002F', u'\u0022', u'\u0029', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(16, u'\u0066', u'\u005F', u'\u003D', u'\u0046', u'\u005F', u'\u0028', u'\u0070', u'\u005F', u'\u002C', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(26, u'\u0069', u'\u0066', u'\u0028', u'\u0066', u'\u005F', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((dai)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dak)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(13, u'\u003D', u'\u007B', u'\u0046', u'\u003A', u'\u0066', u'\u005F', u'\u002C', u'\u0049', u'\u003A', u'\u0030', u'\u007D', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((dai)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dan) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dao) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dap) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(daq) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((dan)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((daq)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(13, u'\u003D', u'\u007B', u'\u0046', u'\u003A', u'\u0022', u'\u0022', u'\u002C', u'\u0049', u'\u003A', u'\u0030', u'\u002C', u'\u0050', u'\u003A'))->Cat(v<Array_<char16_t>*>(((dao)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u002E', u'\u0053', u'\u007D', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((dan)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else if(cmp_(cto, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(das) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(dat) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((das)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dat)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0046', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dav) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(daw) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((dav)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((daw)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0049', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(21, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0052', u'\u0065', u'\u0061', u'\u0064', u'\u004C', u'\u0065', u'\u0074', u'\u0074', u'\u0065', u'\u0072'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(day) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(daz) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((day)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((daz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(14, u'\u002E', u'\u0046', u'\u002E', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0041', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((day)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((daz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0049', u'\u002B', u'\u002B', u'\u0029', u'\u003B', u'\u000A')))))));
}
else if(cmp_(cto, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dbb) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dbc) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dbd) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(dbe) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((dbb)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dbe)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0049', u'\u003D'))->Cat(v<Array_<char16_t>*>(((dbd)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(cto, (new Array_<char16_t>(15, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0065', u'\u0072', u'\u0054', u'\u0065', u'\u0072', u'\u006D'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dbg) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(dbh) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((dbg)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dbh)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u002E', u'\u0049', u'\u003E', u'\u003D'))->Cat(v<Array_<char16_t>*>(((dbg)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dbh)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002E', u'\u0046', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u000A')))))));
}
else if(cmp_(cto, (new Array_<char16_t>(14, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0046', u'\u0069', u'\u006E'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dbj) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(dbk) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0064', u'\u005F', u'\u003D'))->Cat(v<Array_<char16_t>*>(((dbj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dbk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(30, u'\u002E', u'\u0046', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u006C', u'\u0061', u'\u0063', u'\u0065', u'\u0028', u'\u0022', u'\u005C', u'\u006E', u'\u0022', u'\u002C', u'\u0020', u'\u0022', u'\u005C', u'\u0075', u'\u0030', u'\u0030', u'\u0030', u'\u0044', u'\u005C', u'\u006E', u'\u0022', u'\u0029', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(34, u'\u0069', u'\u0066', u'\u0028', u'\u004F', u'\u005F', u'\u0026', u'\u0026', u'\u004F', u'\u005F', u'\u002E', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0029', u'\u007B', u'\u004F', u'\u005F', u'\u002E', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0046', u'\u0069', u'\u006C', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((dbj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dbk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u002E', u'\u0050', u'\u002C', u'\u0064', u'\u005F', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u007D', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(23, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0062', u'\u005F', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0042', u'\u006C', u'\u006F', u'\u0062', u'\u0028', u'\u005B', u'\u0064', u'\u005F', u'\u005D', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(36, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006C', u'\u005F', u'\u003D', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u0045', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0028', u'\u0022', u'\u0061', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u006C', u'\u005F', u'\u002E', u'\u0064', u'\u006F', u'\u0077', u'\u006E', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u003D'))->Cat(v<Array_<char16_t>*>(((dbj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dbk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0050', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(46, u'\u006C', u'\u005F', u'\u002E', u'\u0068', u'\u0072', u'\u0065', u'\u0066', u'\u003D', u'\u0028', u'\u0055', u'\u0052', u'\u004C', u'\u007C', u'\u007C', u'\u0077', u'\u0065', u'\u0062', u'\u006B', u'\u0069', u'\u0074', u'\u0055', u'\u0052', u'\u004C', u'\u0029', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u004F', u'\u0062', u'\u006A', u'\u0065', u'\u0063', u'\u0074', u'\u0055', u'\u0052', u'\u004C', u'\u0028', u'\u0062', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(41, u'\u006C', u'\u005F', u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0041', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0028', u'\u0022', u'\u0073', u'\u0074', u'\u0079', u'\u006C', u'\u0065', u'\u0022', u'\u002C', u'\u0022', u'\u0064', u'\u0069', u'\u0073', u'\u0070', u'\u006C', u'\u0061', u'\u0079', u'\u003A', u'\u006E', u'\u006F', u'\u006E', u'\u0065', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u002E', u'\u0061', u'\u0070', u'\u0070', u'\u0065', u'\u006E', u'\u0064', u'\u0043', u'\u0068', u'\u0069', u'\u006C', u'\u0064', u'\u0028', u'\u006C', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(12, u'\u006C', u'\u005F', u'\u002E', u'\u0063', u'\u006C', u'\u0069', u'\u0063', u'\u006B', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u002E', u'\u0072', u'\u0065', u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u0043', u'\u0068', u'\u0069', u'\u006C', u'\u0064', u'\u0028', u'\u006C', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((dbj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dbk)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u002E', u'\u0046', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0047', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dbm) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(dbn) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((dbm)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dbn)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002E', u'\u0049', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(17, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0053', u'\u0065', u'\u0074', u'\u0050', u'\u006F', u'\u0073'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dbp) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dbq) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dbr) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(dbs) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((dbp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dbs)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0049', u'\u003D'))->Cat(v<Array_<char16_t>*>(((dbr)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))))));
}
else if(cmp_(cto, (new Array_<char16_t>(16, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dbu) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dbv) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(dbw) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
}
else if(cmp_(cto, (new Array_<char16_t>(20, u'\u0066', u'\u0069', u'\u006C', u'\u0065', u'\u005F', u'\u0077', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0072', u'\u0057', u'\u0072', u'\u0069', u'\u0074', u'\u0065', u'\u0043', u'\u0068', u'\u0061', u'\u0072'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dby) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dbz) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(dca) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028'))->Cat(v<Array_<char16_t>*>(((dby)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dca)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0049', u'\u003C'))->Cat(v<Array_<char16_t>*>(((dby)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dca)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(11, u'\u002E', u'\u0046', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u000A')))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((dby)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dca)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(3, u'\u002E', u'\u0046', u'\u003D'))->Cat(v<Array_<char16_t>*>(((dby)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dca)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(11, u'\u002E', u'\u0046', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0030', u'\u002C'))->Cat(v<Array_<char16_t>*>(((dby)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dca)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(24, u'\u002E', u'\u0049', u'\u0029', u'\u002B', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((dbz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0029', u'\u002B'))->Cat(v<Array_<char16_t>*>(((dby)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dca)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(9, u'\u002E', u'\u0046', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((dby)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dca)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(7, u'\u002E', u'\u0049', u'\u002B', u'\u0031', u'\u0029', u'\u003B', u'\u000A'))))))))))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((dby)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dca)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(24, u'\u002E', u'\u0046', u'\u002B', u'\u003D', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>(((dbz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A'))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((dby)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dca)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0049', u'\u002B', u'\u002B', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(19, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u0065', u'\u0064', u'\u0069', u'\u0074', u'\u0042', u'\u0061', u'\u0073', u'\u0065', u'\u0047', u'\u0065', u'\u0074', u'\u0054', u'\u0065', u'\u0078', u'\u0074'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dcc) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(dcd) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((dcc)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dcd)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(10, u'\u002E', u'\u0048', u'\u002E', u'\u0076', u'\u0061', u'\u006C', u'\u0075', u'\u0065', u'\u003B', u'\u000A')))));
}
else if(cmp_(cto, (new Array_<char16_t>(17, u'\u0077', u'\u006E', u'\u0064', u'\u005F', u'\u006D', u'\u0061', u'\u006B', u'\u0065', u'\u0045', u'\u0064', u'\u0069', u'\u0074', u'\u004D', u'\u0075', u'\u006C', u'\u0074', u'\u0069'))) == 0){
awe<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dcf) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dcg) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dch) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dci) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dcj) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dck) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dcl) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
ays<List_<gb*>*>((ctl), (new Array_<int64_t>(1, (0LL))));
(dcm) = ((bja)((awi<List_<gb*>*, gb*>((ctl), (new Array_<int64_t>(1, (0LL)))))));
(dcn) = ((dal)((ctm), (new Array_<char16_t>(6, u'\u0068', u'\u0061', u'\u006E', u'\u0064', u'\u006C', u'\u0065'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(43, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0068', u'\u005F', u'\u003D', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0063', u'\u0072', u'\u0065', u'\u0061', u'\u0074', u'\u0065', u'\u0045', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0028', u'\u0022', u'\u0074', u'\u0065', u'\u0078', u'\u0074', u'\u0061', u'\u0072', u'\u0065', u'\u0061', u'\u0022', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(24, u'\u0068', u'\u005F', u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0041', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0028', u'\u0022', u'\u0063', u'\u006F', u'\u006C', u'\u0073', u'\u0022', u'\u002C', u'\u0022'))->Cat(v<Array_<char16_t>*>(((dcj)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0022', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(24, u'\u0068', u'\u005F', u'\u002E', u'\u0073', u'\u0065', u'\u0074', u'\u0041', u'\u0074', u'\u0074', u'\u0072', u'\u0069', u'\u0062', u'\u0075', u'\u0074', u'\u0065', u'\u0028', u'\u0022', u'\u0072', u'\u006F', u'\u0077', u'\u0073', u'\u0022', u'\u002C', u'\u0022'))->Cat(v<Array_<char16_t>*>(((dck)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0022', u'\u0029', u'\u003B', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(31, u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0062', u'\u006F', u'\u0064', u'\u0079', u'\u002E', u'\u0061', u'\u0070', u'\u0070', u'\u0065', u'\u006E', u'\u0064', u'\u0043', u'\u0068', u'\u0069', u'\u006C', u'\u0064', u'\u0028', u'\u0063', u'\u005F', u'\u0029', u'\u003B', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((dcf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u002E'))->Cat(v<Array_<char16_t>*>(((dcn)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(9, u'\u003D', u'\u007B', u'\u0043', u'\u003A', u'\u0063', u'\u005F', u'\u007D', u'\u003B', u'\u000A')))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ctj), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((dcf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
}
// buildStats
static void bkn(List_<ge*>* dcp /*stats*/){
ge* dcr; // stat
int64_t dct;
awe<List_<ge*>*>((dcp), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<ge*>*>((dcp), (new Array_<int64_t>(1, (0LL)))))){
(dcr) = (awi<List_<ge*>*, ge*>((dcp), (new Array_<int64_t>(1, (0LL)))));
dct = (dcr)->lw;
switch(dct){
case 66049LL:
(dcv)((as_<clz>(classTable_, (dcr), 88)));
break;
case 66050LL:
(dcx)((as_<cmd>(classTable_, (dcr), 92)));
break;
case 16843265LL:
(dcz)((as_<cmh>(classTable_, (dcr), 98)));
break;
case 16843266LL:
(ddb)((as_<cml>(classTable_, (dcr), 100)));
break;
case 66051LL:
(ddd)((as_<bty>(classTable_, (dcr), 52)));
break;
case 526LL:
(ddf)((as_<cmq>(classTable_, (dcr), 102)));
break;
case 66052LL:
(ddh)((as_<bua>(classTable_, (dcr), 54)));
break;
case 527LL:
(ddj)((as_<cmv>(classTable_, (dcr), 104)));
break;
case 528LL:
(ddl)((as_<buy>(classTable_, (dcr), 62)));
break;
case 529LL:
(ddn)((as_<ge>(classTable_, (dcr), 16)));
break;
case 530LL:
(ddp)((as_<ge>(classTable_, (dcr), 16)));
break;
case 531LL:
(ddr)((as_<cne>(classTable_, (dcr), 106)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
ays<List_<ge*>*>((dcp), (new Array_<int64_t>(1, (0LL))));
}
}
// refClass
static Array_<char16_t>* bla(ul* ddt /*ast*/){
bjb* ddu; // info
(ddu) = ((bja)((ddt)));
if((ddu)->bjd){
return (ddu)->bjr;
}
((ddu)->bjd) = (true);
if(!eqAddr_(((ddt)->nj), (nullptr))){
(bla)((as_<ul>(classTable_, ((ddt)->nj), 22)));
}
uk<Queue_<ul*>*, ul*>((bj), (new Array_<int64_t>(1, (0LL))), (ddt));
return (ddu)->bjr;
}
// findFunc
static fw* bli(ul* ddz /*ast*/, Array_<char16_t>* dea /*name*/){
List_<um*>* deb; // items
um* ded; // item
(deb) = ((ddz)->bag);
awe<List_<um*>*>((deb), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((deb), (new Array_<int64_t>(1, (0LL)))))){
(ded) = (awi<List_<um*>*, um*>((deb), (new Array_<int64_t>(1, (0LL)))));
if(((((ded)->azl)->lw) == (256LL)) && (cmp_((((ded)->azl)->nf), (dea)) == 0)){
return as_<fw>(classTable_, ((ded)->azl), 8);
}
ays<List_<um*>*>((deb), (new Array_<int64_t>(1, (0LL))));
}
return nullptr;
}
// writeJs
static void bly(bhv* deg /*writer*/, List_<Array_<char16_t>*>* deh /*resFiles*/){
bool dei; // static
bool dej;
gb* deo; // globalVar
bjb* dep; // info
bool det; // first
Array_<char16_t>* dev; // resFile
int64_t dfc;
auz* dfi; // reader
Array_<char16_t>* dfk; // line
int64_t dfo;
bool dfu; // first
Array_<char16_t>* dfw; // resFile
int64_t dgd;
int64_t dfd;
int64_t dfp;
int64_t dge;
(dei) = (avo<Dict_<Array_<char16_t>*, bool>*, Array_<char16_t>*, bool>((ax), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063')), (&dej)));
if(dei){
(bib)((deg), (((new Array_<char16_t>(22, u'\u0022', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u0063', u'\u0074', u'\u0022', u'\u003B', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fd)((au))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u0028', u'\u004F', u'\u005F', u'\u0029', u'\u007B', u'\u000A'))));
}
else{
(bib)((deg), (new Array_<char16_t>(310, u'\u0022', u'\u0075', u'\u0073', u'\u0065', u'\u0020', u'\u0073', u'\u0074', u'\u0072', u'\u0069', u'\u0063', u'\u0074', u'\u0022', u'\u003B', u'\u0021', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0066', u'\u0029', u'\u007B', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0064', u'\u003D', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u003B', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0068', u'\u0028', u'\u0029', u'\u007B', u'\u0064', u'\u002E', u'\u0072', u'\u0065', u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u0044', u'\u004F', u'\u004D', u'\u0043', u'\u006F', u'\u006E', u'\u0074', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u006F', u'\u0061', u'\u0064', u'\u0065', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u003B', u'\u0066', u'\u0028', u'\u0029', u'\u007D', u'\u0022', u'\u0063', u'\u006F', u'\u006D', u'\u0070', u'\u006C', u'\u0065', u'\u0074', u'\u0065', u'\u0022', u'\u003D', u'\u003D', u'\u003D', u'\u0064', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0053', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u007C', u'\u007C', u'\u0022', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u0069', u'\u006E', u'\u0067', u'\u0022', u'\u0021', u'\u003D', u'\u003D', u'\u0064', u'\u002E', u'\u0072', u'\u0065', u'\u0061', u'\u0064', u'\u0079', u'\u0053', u'\u0074', u'\u0061', u'\u0074', u'\u0065', u'\u0026', u'\u0026', u'\u0021', u'\u0064', u'\u002E', u'\u0064', u'\u006F', u'\u0063', u'\u0075', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u0045', u'\u006C', u'\u0065', u'\u006D', u'\u0065', u'\u006E', u'\u0074', u'\u002E', u'\u0064', u'\u006F', u'\u0053', u'\u0063', u'\u0072', u'\u006F', u'\u006C', u'\u006C', u'\u003F', u'\u0073', u'\u0065', u'\u0074', u'\u0054', u'\u0069', u'\u006D', u'\u0065', u'\u006F', u'\u0075', u'\u0074', u'\u0028', u'\u0066', u'\u0029', u'\u003A', u'\u0028', u'\u0064', u'\u002E', u'\u0061', u'\u0064', u'\u0064', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u0044', u'\u004F', u'\u004D', u'\u0043', u'\u006F', u'\u006E', u'\u0074', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u006F', u'\u0061', u'\u0064', u'\u0065', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u002C', u'\u0061', u'\u0064', u'\u0064', u'\u0045', u'\u0076', u'\u0065', u'\u006E', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u0065', u'\u006E', u'\u0065', u'\u0072', u'\u0028', u'\u0022', u'\u006C', u'\u006F', u'\u0061', u'\u0064', u'\u0022', u'\u002C', u'\u0068', u'\u0029', u'\u0029', u'\u007D', u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0028', u'\u0029', u'\u007B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(8, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u004F', u'\u005F', u'\u003B', u'\u000A')));
}
awe<List_<gb*>*>((bn), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((bn), (new Array_<int64_t>(1, (0LL)))))){
(deo) = (awi<List_<gb*>*, gb*>((bn), (new Array_<int64_t>(1, (0LL)))));
(dep) = ((bja)((deo)));
(bib)((deg), (((new Array_<char16_t>(4, u'\u006C', u'\u0065', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((dep)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003D'))->Cat(v<Array_<char16_t>*>(((deq)(((deo)->qf))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A')))));
ays<List_<gb*>*>((bn), (new Array_<int64_t>(1, (0LL))));
}
awe<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL)))))){
(bib)((deg), (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))))));
ays<List_<Array_<char16_t>*>*>((bl), (new Array_<int64_t>(1, (0LL))));
}
(bib)((deg), (new Array_<char16_t>(18, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0043', u'\u005F', u'\u0028', u'\u0074', u'\u002C', u'\u0076', u'\u0029', u'\u007B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(14, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u0074', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u007B', u'\u000A')));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((0LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((1LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((3LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((4LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((5LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((6LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((7LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((8LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((9LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u003B', u'\u000A')));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((129LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (((new Array_<char16_t>(10, u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u005B', u'\u0031', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((2LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A'))));
(bib)((deg), (new Array_<char16_t>(30, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0076', u'\u003D', u'\u003D', u'\u003D', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u007B', u'\u0053', u'\u003A', u'\u0076', u'\u002E', u'\u0053', u'\u007D', u'\u003B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(27, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u0076', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(53, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u0076', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0061', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0043', u'\u005F', u'\u0028', u'\u0074', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0031', u'\u0029', u'\u002C', u'\u0076', u'\u005B', u'\u0069', u'\u005D', u'\u0029', u'\u003B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u003B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((130LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (new Array_<char16_t>(36, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u006C', u'\u003D', u'\u007B', u'\u004C', u'\u003A', u'\u0076', u'\u002E', u'\u004C', u'\u002C', u'\u0048', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0054', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0050', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u007D', u'\u003B', u'\u000A')));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((131LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (new Array_<char16_t>(27, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0073', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u0076', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(53, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u0076', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0073', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0043', u'\u005F', u'\u0028', u'\u0074', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0031', u'\u0029', u'\u002C', u'\u0076', u'\u005B', u'\u0069', u'\u005D', u'\u0029', u'\u003B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0073', u'\u003B', u'\u000A')));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((132LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (new Array_<char16_t>(27, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0071', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u0076', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u0029', u'\u003B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(53, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u0076', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0071', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0043', u'\u005F', u'\u0028', u'\u0074', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0031', u'\u0029', u'\u002C', u'\u0076', u'\u005B', u'\u0069', u'\u005D', u'\u0029', u'\u003B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0071', u'\u003B', u'\u000A')));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((133LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (((new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020'))->Cat(v<int64_t>((134LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
(bib)((deg), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(18, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0046', u'\u005F', u'\u0028', u'\u0070', u'\u002C', u'\u0066', u'\u0029', u'\u007B', u'\u000A')));
(det) = (true);
awe<List_<Array_<char16_t>*>*>((deh), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((deh), (new Array_<int64_t>(1, (0LL)))))){
(dev) = (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((deh), (new Array_<int64_t>(1, (0LL)))));
if(det){
(det) = (false);
(bib)((deg), (new Array_<char16_t>(8, u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u003D', u'\u003D', u'\u003D', u'\u0022')));
}
else{
(bib)((deg), (new Array_<char16_t>(13, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u0070', u'\u003D', u'\u003D', u'\u003D', u'\u0022')));
}
for(dfc = ((ay)->Len()), dfd = (((dev)->Len()) - (1LL)); dfc <= dfd; dfc += (1LL)){
(bib)((deg), ((dfe)(((dev)->At(dfc)))));
}
(bib)((deg), (new Array_<char16_t>(3, u'\u0022', u'\u0029', u'\u000A')));
if(((dev)->At(((dev)->Len()) - (1LL))) == (u'\u002F')){
(bib)((deg), (new Array_<char16_t>(20, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else{
(bib)((deg), (new Array_<char16_t>(10, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u003F', u'\u0022')));
(dfi) = ((auy)((new auz()), (dev)));
while(!((bhy)((dfi)))){
(dfk) = ((bia)((dfi)));
for(dfo = (0LL), dfp = (((dfk)->Len()) - (1LL)); dfo <= dfp; dfo += (1LL)){
(bib)((deg), ((dfe)(((dfk)->At(dfo)))));
}
(bib)((deg), (new Array_<char16_t>(2, u'\u005C', u'\u006E')));
}
(avm)((dfi));
(bib)((deg), (new Array_<char16_t>(8, u'\u0022', u'\u003A', u'\u0074', u'\u0072', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
ays<List_<Array_<char16_t>*>*>((deh), (new Array_<int64_t>(1, (0LL))));
}
if(((deh)->Len()) > (0LL)){
(bib)((deg), (new Array_<char16_t>(26, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
else{
(bib)((deg), (new Array_<char16_t>(21, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0066', u'\u003F', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u003A', u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065', u'\u003B', u'\u000A')));
}
(bib)((deg), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(22, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0046', u'\u0046', u'\u005F', u'\u0028', u'\u0029', u'\u007B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u005B')));
(dfu) = (true);
awe<List_<Array_<char16_t>*>*>((deh), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<Array_<char16_t>*>*>((deh), (new Array_<int64_t>(1, (0LL)))))){
(dfw) = (awi<List_<Array_<char16_t>*>*, Array_<char16_t>*>((deh), (new Array_<int64_t>(1, (0LL)))));
if(dfu){
(dfu) = (false);
(bib)((deg), (new Array_<char16_t>(1, u'\u0022')));
}
else{
(bib)((deg), (new Array_<char16_t>(2, u'\u002C', u'\u0022')));
}
for(dgd = ((ay)->Len()), dge = (((dfw)->Len()) - (1LL)); dgd <= dge; dgd += (1LL)){
(bib)((deg), ((dfe)(((dfw)->At(dgd)))));
}
(bib)((deg), (new Array_<char16_t>(1, u'\u0022')));
ays<List_<Array_<char16_t>*>*>((deh), (new Array_<int64_t>(1, (0LL))));
}
(bib)((deg), (new Array_<char16_t>(4, u'\u005D', u'\u003B', u'\u007D', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(17, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0044', u'\u0053', u'\u005F', u'\u0028', u'\u0074', u'\u0029', u'\u007B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(9, u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0069', u'\u003D', u'\u0031', u'\u003B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(15, u'\u0021', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0054', u'\u0028', u'\u0029', u'\u007B', u'\u000A')));
(bib)((deg), (((new Array_<char16_t>(8, u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u005B', u'\u0069', u'\u005D', u'\u003C'))->Cat(v<int64_t>((128LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A'))));
(bib)((deg), (new Array_<char16_t>(5, u'\u002B', u'\u002B', u'\u0069', u'\u003B', u'\u000A')));
(bib)((deg), (((new Array_<char16_t>(15, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((133LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A'))));
(bib)((deg), (new Array_<char16_t>(13, u'\u002B', u'\u002B', u'\u0069', u'\u002C', u'\u0054', u'\u0028', u'\u0029', u'\u002C', u'\u0054', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
(bib)((deg), (((new Array_<char16_t>(15, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028', u'\u0074', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u003D', u'\u003D'))->Cat(v<int64_t>((134LL), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0029', u'\u000A'))));
(bib)((deg), (new Array_<char16_t>(5, u'\u002B', u'\u002B', u'\u0069', u'\u003B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(9, u'\u002B', u'\u002B', u'\u0069', u'\u002C', u'\u0054', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(4, u'\u007D', u'\u0028', u'\u0029', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(13, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0074', u'\u005B', u'\u0069', u'\u005D', u'\u003B', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(bib)((deg), (new Array_<char16_t>(5, u'\u0061', u'\u0028', u'\u0029', u'\u003B', u'\u000A')));
if(dei){
(bib)((deg), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else{
(bib)((deg), (new Array_<char16_t>(3, u'\u007D', u'\u0029', u'\u000A')));
}
}
// initAst
static void bpp(fx* dgj /*ast*/, int64_t dgk /*typeId*/, ga* dgl /*pos*/, Array_<char16_t>* dgm /*name*/, bool dgn /*setParent*/){
if(!(!is_(classTable_, (dgj), 14))){
throw 0xE9170000U;
}
(dgo)((dgj), (dgk), (dgl), (dgm), (dgn));
}
// make
static ga* bpq(Array_<char16_t>* dgp /*srcName*/, int64_t dgq /*row*/, int64_t dgr /*col*/){
ga* dgs; // pos
(dgs) = (new ga());
((dgs)->hk) = (dgp);
((dgs)->hl) = (dgq);
((dgs)->hm) = (dgr);
return dgs;
}
// _addStack
template<typename T_, typename C_> static void bpr(T_ dgt /*me_*/, Array_<int64_t>* dgu /*type*/, C_ dgv /*item*/){
dgt->B.push(dgv);
}
// readChar
static char16_t bps(){
char16_t dgz; // c
char16_t dhd;
while(true){
(dgz) = ((brf)());
if((dgz) == (u'\u000A')){
(dgz) = ((bps)());
dhd = dgz;
switch(dhd){
case u'\u000A':
return u'\u000A';
break;
case u'\u003B':
do{
(dgz) = ((dhh)());
if((dgz) == (u'\u0000')){
return u'\u0000';
}
}while((dgz) != (u'\u000A'));
(ave) = (dgz);
continue;
break;
case u'\u007C':
return (bps)();
break;
}
(avf) = (dgz);
return u'\u000A';
}
if((dgz) != (u'\u0020')){
return dgz;
}
}
}
// readIdentifier
static Array_<char16_t>* bqk(bool dhn /*skipSpaces*/, bool dho /*refName*/){
char16_t dhp; // c
Array_<char16_t>* dhu; // buf
int64_t dhv; // pos
bool dhw; // at
char16_t dhz;
Array_<char16_t>* dif; // srcName
int64_t dij;
char16_t dil; // c2
int64_t dik;
(dhp) = ((dhn) ? ((bps)()) : ((brf)()));
if(!((((((u'\u0061') <= (dhp)) && ((dhp) <= (u'\u007A'))) || (((u'\u0041') <= (dhp)) && ((dhp) <= (u'\u005A')))) || ((dhp) == (u'\u005F'))) || ((dho) && (((dhp) == (u'\u0040')) || ((dhp) == (u'\u005C')))))){
(ave) = (dhp);
(ad)((65542LL), ((dhs)()), (new Array_<Array_<char16_t>*>(1, ((dht)((dhp))))));
return new Array_<char16_t>(0);
}
(dhu) = (newArray_<char16_t, Array_<char16_t>*>(1, (128LL)));
(dhv) = (0LL);
(dhw) = (false);
do{
dhz = dhp;
switch(dhz){
case u'\u0040':
if(dhw){
(ave) = (dhp);
(ad)((65543LL), ((dhs)()), (nullptr));
return new Array_<char16_t>(0);
}
if((dhv) != (0LL)){
(dif) = (auw<Array_<char16_t>*>((dhu), (new Array_<int64_t>(1, (0LL))), (0LL), (dhv)));
for(dij = (0LL), dik = (((dif)->Len()) - (1LL)); dij <= dik; dij += (1LL)){
(dil) = ((dif)->At(dij));
if(((u'\u0041') <= (dil)) && ((dil) <= (u'\u005A'))){
(ave) = (dhp);
(ad)((65544LL), ((dhs)()), (new Array_<Array_<char16_t>*>(1, (dif))));
return new Array_<char16_t>(0);
}
}
(dio)((dif));
}
(dhw) = (true);
break;
case u'\u005C':
if(dhw){
(ave) = (dhp);
(ad)((65545LL), ((dhs)()), (nullptr));
return new Array_<char16_t>(0);
}
break;
}
if((dhv) == (128LL)){
(ave) = (dhp);
(ad)((65546LL), ((dhs)()), (new Array_<Array_<char16_t>*>(1, (dhu))));
return new Array_<char16_t>(0);
}
((dhu)->At(dhv)) = (dhp);
(dhv) = ((dhv) + (1LL));
(dhp) = ((brf)());
}while(((((((u'\u0061') <= (dhp)) && ((dhp) <= (u'\u007A'))) || (((u'\u0041') <= (dhp)) && ((dhp) <= (u'\u005A')))) || ((dhp) == (u'\u005F'))) || (((u'\u0030') <= (dhp)) && ((dhp) <= (u'\u0039')))) || ((dho) && (((dhp) == (u'\u0040')) || ((dhp) == (u'\u005C')))));
(ave) = (dhp);
return auw<Array_<char16_t>*>((dhu), (new Array_<int64_t>(1, (0LL))), (0LL), (dhv));
}
// parseFunc
static fw* bqo(Array_<char16_t>* div /*parentClass*/, bool diw /*overritten*/){
fw* dix; // ast
char16_t diz; // c
int64_t djf; // row
int64_t djg; // col
Array_<char16_t>* djh; // s
char16_t djm;
gb* dle; // arg
dli* dlh; // type
char16_t dlk; // c
char16_t dly; // c
ge* dmh; // stat
(dix) = (new fw());
((dix)->sm) = (0LL);
((dix)->sf) = (new List_<Array_<char16_t>*>());
(diz) = ((bps)());
if((diz) == (u'\u005B')){
while(true){
(djf) = (avc);
(djg) = (avd);
(djh) = ((dji)());
if(((((djh)->Len()) == (5LL)) && (((djh)->At(0LL)) == (u'\u005F'))) && (((djh)->At(1LL)) == (u'\u005F'))){
djm = (djh)->At(2LL);
switch(djm){
case u'\u0061':
if((((djh)->At(3LL)) == (u'\u006E')) && (((djh)->At(4LL)) == (u'\u0079'))){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (1LL)));
}
break;
case u'\u0066':
if((((djh)->At(3LL)) == (u'\u0072')) && (((djh)->At(4LL)) == (u'\u0063'))){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (128LL)));
}
break;
case u'\u006B':
if((((djh)->At(3LL)) == (u'\u0076')) && (((djh)->At(4LL)) == (u'\u0066'))){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (256LL)));
}
break;
case u'\u006D':
if((((djh)->At(3LL)) == (u'\u006B')) && (((djh)->At(4LL)) == (u'\u0069'))){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (2048LL)));
}
break;
case u'\u0072':
if((((djh)->At(3LL)) == (u'\u0061')) && (((djh)->At(4LL)) == (u'\u0077'))){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (4096LL)));
}
else if((((djh)->At(3LL)) == (u'\u006D')) && (((djh)->At(4LL)) == (u'\u0065'))){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (4LL)));
}
else if((((djh)->At(3LL)) == (u'\u0063')) && (((djh)->At(4LL)) == (u'\u0068'))){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (16LL)));
}
else if(((djh)->At(3LL)) == (u'\u0061')){
if(((djh)->At(4LL)) == (u'\u0063')){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (64LL)));
}
else if(((djh)->At(4LL)) == (u'\u006B')){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (512LL)));
}
else if(((djh)->At(4LL)) == (u'\u0076')){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (1024LL)));
}
}
break;
case u'\u0074':
if((((djh)->At(3LL)) == (u'\u006D')) && (((djh)->At(4LL)) == (u'\u0065'))){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (2LL)));
}
else if((((djh)->At(3LL)) == (u'\u0063')) && (((djh)->At(4LL)) == (u'\u0068'))){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (8LL)));
}
else if((((djh)->At(3LL)) == (u'\u006B')) && (((djh)->At(4LL)) == (u'\u0076'))){
((dix)->sm) = (djq<int64_t>(((dix)->sm), (new Array_<int64_t>(1, (0LL))), (32LL)));
}
break;
}
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>(((dix)->sf), (new Array_<int64_t>(1, (0LL))), (djh));
}
(diz) = ((bps)());
if((diz) == (u'\u0000')){
break;
}
if((diz) == (u'\u005D')){
break;
}
if((diz) != (u'\u002C')){
(dkw)((u'\u002C'), (diz));
break;
}
}
}
else{
(ave) = (diz);
}
(bpp)((dix), (256LL), ((dhs)()), ((bqk)((true), (false))), (true));
((dix)->sg) = (new List_<gb*>());
((dix)->sh) = (nullptr);
((dix)->si) = (new List_<ge*>());
((dix)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bpr<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (dix));
if(!eqAddr_((div), (nullptr))){
(dla)((dix), (div));
}
(dlb)((u'\u0028'), (true));
if(!eqAddr_((div), (nullptr))){
(dle) = (new gb());
(bpp)((dle), (7LL), ((dix)->ne), (nullptr), (false));
((dle)->nf) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
((dle)->qk) = (2LL);
((dle)->ql) = (false);
((dle)->qg) = (nullptr);
(dlf)((dle), (false));
(dlh) = (new dli());
(bpp)((dlh), (66565LL), ((dix)->ne), (nullptr), (false));
(dla)((dlh), (div));
((dle)->qf) = (dlh);
uh<List_<gb*>*, gb*>(((dix)->sg), (new Array_<int64_t>(1, (0LL))), (dle));
}
(dlk) = ((bps)());
if((dlk) != (u'\u0029')){
(ave) = (dlk);
while(true){
uh<List_<gb*>*, gb*>(((dix)->sg), (new Array_<int64_t>(1, (0LL))), ((dlq)((2LL), (nullptr))));
(dlk) = ((bps)());
if((dlk) == (u'\u0000')){
break;
}
if((dlk) == (u'\u0029')){
break;
}
if((dlk) != (u'\u002C')){
(dkw)((u'\u002C'), (dlk));
break;
}
}
}
(dly) = ((bps)());
if((dly) == (u'\u003A')){
((dix)->sh) = ((dmb)());
(dly) = ((bps)());
}
if((dly) != (u'\u000A')){
(dkw)((u'\u000A'), (dly));
}
while(true){
(dmh) = ((dmi)((dix)));
if(eqAddr_((dmh), (nullptr))){
if(avg){
break;
}
else{
continue;
}
}
if(((dmh)->lw) == (513LL)){
break;
}
uh<List_<ge*>*, ge*>(((dix)->si), (new Array_<int64_t>(1, (0LL))), (dmh));
}
brl<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return dix;
}
// parseVar
static bgn* bqq(int64_t dmq /*kind*/, Array_<char16_t>* dmr /*parentClass*/){
bgn* dms; // ast
(dms) = (new bgn());
(bpp)((dms), (2LL), ((dhs)()), (nullptr), (false));
((dms)->bgp) = ((dlq)((dmq), (dmr)));
(dlb)((u'\u000A'), (true));
return dms;
}
// parseConst
static bqt* bqs(){
bqt* dmt; // ast
(dmt) = (new bqt());
(bpp)((dmt), (3LL), ((dhs)()), (nullptr), (false));
((dmt)->brj) = ((dlq)((4LL), (nullptr)));
(dlb)((u'\u000A'), (true));
return dmt;
}
// _dtor
static void dmu(bqt* dmv){
((dmv)->brj) = (nullptr);
((dmv)->ne) = (nullptr);
((dmv)->nf) = (nullptr);
((dmv)->ng) = (nullptr);
((dmv)->nh) = (nullptr);
((dmv)->ni) = (nullptr);
((dmv)->nj) = (nullptr);
((dmv)->nk) = (nullptr);
}
// _copy
static bqt* dmw(bqt* dmx){
bqt* dmy;
(dmy) = (new bqt());
((dmy)->brj) = (copy_((dmx)->brj));
((dmy)->ne) = (copy_((dmx)->ne));
((dmy)->nf) = (copy_((dmx)->nf));
((dmy)->ng) = (copy_((dmx)->ng));
((dmy)->nh) = (copy_((dmx)->nh));
((dmy)->ni) = (copy_((dmx)->ni));
((dmy)->nj) = (copy_((dmx)->nj));
((dmy)->nk) = (copy_((dmx)->nk));
((dmy)->no) = ((dmx)->no);
((dmy)->lw) = ((dmx)->lw);
return as_<bqt>(classTable_, (dmy), 44);
}
// _toBin
static Array_<uint8_t>* dmz(bqt* dna){
Array_<uint8_t>* dnb;
(dnb) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dnb) = ((dnb)->Cat(toBin_((dna)->brj)));
(dnb) = ((dnb)->Cat(toBin_((dna)->ne)));
(dnb) = ((dnb)->Cat(toBin_((dna)->nf)));
(dnb) = ((dnb)->Cat(toBin_((dna)->ng)));
(dnb) = ((dnb)->Cat(toBin_((dna)->nh)));
(dnb) = ((dnb)->Cat(toBin_((dna)->ni)));
(dnb) = ((dnb)->Cat(toBin_((dna)->nj)));
(dnb) = ((dnb)->Cat(toBin_((dna)->nk)));
(dnb) = ((dnb)->Cat(toBin_((dna)->no)));
(dnb) = ((dnb)->Cat(toBin_((dna)->lw)));
return dnb;
}
// _fromBin
static bqt* dnm(bqt* dnn, Array_<uint8_t>* dno, int64_t* dnp){
bqt* dnq;
(dnq) = (new bqt());
((dnq)->brj) = (fromBin_<gb*>((dno), (*dnp)));
((dnq)->ne) = (fromBin_<ga*>((dno), (*dnp)));
((dnq)->nf) = (fromBin_<Array_<char16_t>*>((dno), (*dnp)));
((dnq)->ng) = (fromBin_<fx*>((dno), (*dnp)));
((dnq)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dno), (*dnp)));
((dnq)->ni) = (fromBin_<Array_<char16_t>*>((dno), (*dnp)));
((dnq)->nj) = (fromBin_<fx*>((dno), (*dnp)));
((dnq)->nk) = (fromBin_<fy*>((dno), (*dnp)));
((dnq)->no) = (fromBin_<bool>((dno), (*dnp)));
((dnq)->lw) = (fromBin_<int64_t>((dno), (*dnp)));
return dnq;
}
// parseAlias
static bqw* bqv(){
bqw* dnr; // ast
(dnr) = (new bqw());
(bpp)((dnr), (4LL), ((dhs)()), ((bqk)((true), (false))), (true));
(dlb)((u'\u003A'), (true));
((dnr)->dns) = ((dmb)());
(dlb)((u'\u000A'), (true));
return dnr;
}
// _dtor
static void dnt(bqw* dnu){
((dnu)->dns) = (nullptr);
((dnu)->ne) = (nullptr);
((dnu)->nf) = (nullptr);
((dnu)->ng) = (nullptr);
((dnu)->nh) = (nullptr);
((dnu)->ni) = (nullptr);
((dnu)->nj) = (nullptr);
((dnu)->nk) = (nullptr);
}
// _copy
static bqw* dnv(bqw* dnw){
bqw* dnx;
(dnx) = (new bqw());
((dnx)->dns) = (copy_((dnw)->dns));
((dnx)->ne) = (copy_((dnw)->ne));
((dnx)->nf) = (copy_((dnw)->nf));
((dnx)->ng) = (copy_((dnw)->ng));
((dnx)->nh) = (copy_((dnw)->nh));
((dnx)->ni) = (copy_((dnw)->ni));
((dnx)->nj) = (copy_((dnw)->nj));
((dnx)->nk) = (copy_((dnw)->nk));
((dnx)->no) = ((dnw)->no);
((dnx)->lw) = ((dnw)->lw);
return as_<bqw>(classTable_, (dnx), 46);
}
// _toBin
static Array_<uint8_t>* dny(bqw* dnz){
Array_<uint8_t>* doa;
(doa) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(doa) = ((doa)->Cat(toBin_((dnz)->dns)));
(doa) = ((doa)->Cat(toBin_((dnz)->ne)));
(doa) = ((doa)->Cat(toBin_((dnz)->nf)));
(doa) = ((doa)->Cat(toBin_((dnz)->ng)));
(doa) = ((doa)->Cat(toBin_((dnz)->nh)));
(doa) = ((doa)->Cat(toBin_((dnz)->ni)));
(doa) = ((doa)->Cat(toBin_((dnz)->nj)));
(doa) = ((doa)->Cat(toBin_((dnz)->nk)));
(doa) = ((doa)->Cat(toBin_((dnz)->no)));
(doa) = ((doa)->Cat(toBin_((dnz)->lw)));
return doa;
}
// _fromBin
static bqw* dol(bqw* dom, Array_<uint8_t>* don, int64_t* doo){
bqw* dop;
(dop) = (new bqw());
((dop)->dns) = (fromBin_<gc*>((don), (*doo)));
((dop)->ne) = (fromBin_<ga*>((don), (*doo)));
((dop)->nf) = (fromBin_<Array_<char16_t>*>((don), (*doo)));
((dop)->ng) = (fromBin_<fx*>((don), (*doo)));
((dop)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((don), (*doo)));
((dop)->ni) = (fromBin_<Array_<char16_t>*>((don), (*doo)));
((dop)->nj) = (fromBin_<fx*>((don), (*doo)));
((dop)->nk) = (fromBin_<fy*>((don), (*doo)));
((dop)->no) = (fromBin_<bool>((don), (*doo)));
((dop)->lw) = (fromBin_<int64_t>((don), (*doo)));
return dop;
}
// parseClass
static ul* bqz(){
ul* doq; // ast
char16_t dos; // c
bool dow; // kuinSrc
char16_t dpc; // c
int64_t dph; // row
int64_t dpi; // col
um* dpj; // item
Array_<char16_t>* dpq; // id
Array_<char16_t>* dpr; // className
Array_<char16_t>* dqd;
Array_<char16_t>* dqf; // id2
fx* dqi; // astEndClass
(doq) = (new ul());
(bpp)((doq), (5LL), ((dhs)()), ((bqk)((true), (false))), (true));
((doq)->bag) = (new List_<um*>());
(dlb)((u'\u0028'), (true));
(dos) = ((bps)());
if((dos) != (u'\u0029')){
(ave) = (dos);
(dla)((doq), ((bqk)((true), (true))));
(dlb)((u'\u0029'), (true));
}
else{
(dow) = (cmp_((bf), (new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E'))) == 0);
if(!((dow) && (cmp_(((doq)->nf), (new Array_<char16_t>(5, u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0))){
(dla)((doq), ((dow) ? (new Array_<char16_t>(6, u'\u0040', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073')) : (new Array_<char16_t>(10, u'\u006B', u'\u0075', u'\u0069', u'\u006E', u'\u0040', u'\u0043', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))));
}
}
(dlb)((u'\u000A'), (true));
((doq)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bpr<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (doq));
while(true){
(dpc) = ((bps)());
if((dpc) == (u'\u0000')){
(ad)((65551LL), ((dhs)()), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073')))));
break;
}
if((dpc) == (u'\u000A')){
continue;
}
(dph) = (avc);
(dpi) = (avd);
(dpj) = (new um());
((dpj)->azq) = (false);
((dpj)->azr) = (false);
((dpj)->azm) = (nullptr);
if((dpc) == (u'\u002B')){
((dpj)->azq) = (true);
}
else{
(ave) = (dpc);
}
(dpc) = ((bps)());
if((dpc) == (u'\u002A')){
((dpj)->azr) = (true);
}
else{
(ave) = (dpc);
}
(dpq) = ((bqk)((true), (false)));
(dpr) = (((((doq)->ng)->lw) == (1LL)) ? ((new Array_<char16_t>(1, u'\u0040'))->Cat((doq)->nf)) : ((doq)->nf));
if(cmp_((dpq), (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
((dpj)->azl) = ((bqo)((dpr), ((dpj)->azr)));
}
else if(cmp_((dpq), (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0){
if((dpj)->azr){
(ad)((65552LL), ((bpq)((bf), (dph), (dpi))), (new Array_<Array_<char16_t>*>(1, (dpq))));
}
((dpj)->azl) = ((bqq)((5LL), (dpr)));
}
else{
if((dpj)->azq){
(ad)((65553LL), ((bpq)((bf), (dph), (dpi))), (new Array_<Array_<char16_t>*>(1, (dpq))));
}
if((dpj)->azr){
(ad)((65552LL), ((bpq)((bf), (dph), (dpi))), (new Array_<Array_<char16_t>*>(1, (dpq))));
}
dqd = dpq;
if(cmp_(dqd, (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064'))) == 0){
(dqf) = ((bqk)((true), (false)));
if(cmp_((dqf), (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) != 0){
(ad)((65554LL), ((bpq)((bf), (dph), (dpi))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073')), (dqf))));
}
(dqi) = (new fx());
(bpp)((dqi), (0LL), ((bpq)((bf), (dph), (dpi))), (nullptr), (false));
(dlb)((u'\u000A'), (true));
break;
}
else if(cmp_(dqd, (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074'))) == 0){
((dpj)->azl) = ((bqs)());
}
else if(cmp_(dqd, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073'))) == 0){
((dpj)->azl) = ((bqv)());
}
else if(cmp_(dqd, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0){
((dpj)->azl) = ((bqz)());
}
else{(ad)((65555LL), ((bpq)((bf), (dph), (dpi))), (new Array_<Array_<char16_t>*>(1, (dpq))));
(bre)(((brf)()));
continue;
}
}
uh<List_<um*>*, um*>(((doq)->bag), (new Array_<int64_t>(1, (0LL))), (dpj));
}
brl<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return doq;
}
// parseEnum
static brc* brb(){
brc* dqn; // ast
char16_t dqs; // c
gd* dqx; // item
Array_<char16_t>* dqy; // id
Array_<char16_t>* drb; // id2
bvt* drk; // expr
(dqn) = (new brc());
(bpp)((dqn), (6LL), ((dhs)()), ((bqk)((true), (false))), (true));
((dqn)->dqo) = (new List_<gd*>());
(dlb)((u'\u000A'), (true));
((dqn)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bpr<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (dqn));
while(true){
(dqs) = ((bps)());
if((dqs) == (u'\u0000')){
(ad)((65551LL), ((dhs)()), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D')))));
break;
}
if((dqs) == (u'\u000A')){
continue;
}
(ave) = (dqs);
(dqx) = (nullptr);
(dqy) = ((bqk)((true), (false)));
if(cmp_((dqy), (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064'))) == 0){
(drb) = ((bqk)((true), (false)));
if(cmp_((drb), (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) != 0){
(ad)((65554LL), ((dhs)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D')), (drb))));
}
(dlb)((u'\u000A'), (true));
break;
}
(dqs) = ((bps)());
if((dqs) == (u'\u003A')){
(dlb)((u'\u003A'), (false));
(dqx) = ((drg)());
if(eqAddr_((dqx), (nullptr))){
(bre)(((brf)()));
continue;
}
(dqs) = ((bps)());
}
else{
(drk) = (new bvt());
(drl)((drk), (67585LL), ((dqn)->ne));
((drk)->pf) = (nullptr);
((drk)->bvv) = (0x0000000000000000ULL);
(dqx) = (drk);
}
((dqx)->nf) = (dqy);
if((dqs) != (u'\u000A')){
(dkw)((u'\u000A'), (dqs));
}
uh<List_<gd*>*, gd*>(((dqn)->dqo), (new Array_<int64_t>(1, (0LL))), (dqx));
(dlf)((dqx), (true));
}
brl<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return dqn;
}
// _dtor
static void dro(brc* drp){
((drp)->dqo) = (nullptr);
((drp)->ne) = (nullptr);
((drp)->nf) = (nullptr);
((drp)->ng) = (nullptr);
((drp)->nh) = (nullptr);
((drp)->ni) = (nullptr);
((drp)->nj) = (nullptr);
((drp)->nk) = (nullptr);
}
// _copy
static brc* drq(brc* drr){
brc* drs;
(drs) = (new brc());
((drs)->dqo) = (copy_((drr)->dqo));
((drs)->ne) = (copy_((drr)->ne));
((drs)->nf) = (copy_((drr)->nf));
((drs)->ng) = (copy_((drr)->ng));
((drs)->nh) = (copy_((drr)->nh));
((drs)->ni) = (copy_((drr)->ni));
((drs)->nj) = (copy_((drr)->nj));
((drs)->nk) = (copy_((drr)->nk));
((drs)->no) = ((drr)->no);
((drs)->lw) = ((drr)->lw);
return as_<brc>(classTable_, (drs), 48);
}
// _toBin
static Array_<uint8_t>* drt(brc* dru){
Array_<uint8_t>* drv;
(drv) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(drv) = ((drv)->Cat(toBin_((dru)->dqo)));
(drv) = ((drv)->Cat(toBin_((dru)->ne)));
(drv) = ((drv)->Cat(toBin_((dru)->nf)));
(drv) = ((drv)->Cat(toBin_((dru)->ng)));
(drv) = ((drv)->Cat(toBin_((dru)->nh)));
(drv) = ((drv)->Cat(toBin_((dru)->ni)));
(drv) = ((drv)->Cat(toBin_((dru)->nj)));
(drv) = ((drv)->Cat(toBin_((dru)->nk)));
(drv) = ((drv)->Cat(toBin_((dru)->no)));
(drv) = ((drv)->Cat(toBin_((dru)->lw)));
return drv;
}
// _fromBin
static brc* dsg(brc* dsh, Array_<uint8_t>* dsi, int64_t* dsj){
brc* dsk;
(dsk) = (new brc());
((dsk)->dqo) = (fromBin_<List_<gd*>*>((dsi), (*dsj)));
((dsk)->ne) = (fromBin_<ga*>((dsi), (*dsj)));
((dsk)->nf) = (fromBin_<Array_<char16_t>*>((dsi), (*dsj)));
((dsk)->ng) = (fromBin_<fx*>((dsi), (*dsj)));
((dsk)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dsi), (*dsj)));
((dsk)->ni) = (fromBin_<Array_<char16_t>*>((dsi), (*dsj)));
((dsk)->nj) = (fromBin_<fx*>((dsi), (*dsj)));
((dsk)->nk) = (fromBin_<fy*>((dsi), (*dsj)));
((dsk)->no) = (fromBin_<bool>((dsi), (*dsj)));
((dsk)->lw) = (fromBin_<int64_t>((dsi), (*dsj)));
return dsk;
}
// readUntilRet
static void bre(char16_t dsl /*c*/){
while(((dsl) != (u'\u000A')) && ((dsl) != (u'\u0000'))){
(dsl) = ((brf)());
}
(ave) = (dsl);
}
// read
static char16_t brf(){
char16_t dsn; // c
char16_t dsp;
(dsn) = ((dhh)());
dsp = dsn;
switch(dsp){
case u'\u007B':
(dsr)();
return u'\u0020';
break;
case u'\u0009':
return u'\u0020';
break;
}
return dsn;
}
// _getStack
template<typename T_, typename R_> static R_ brl(T_ dst /*me_*/, Array_<int64_t>* dsu /*type*/){
R_ r_ = dst->B.top();
dst->B.pop();
return r_;
}
// initAst
static void btv(fx* dsv /*ast*/, int64_t dsw /*typeId*/, ga* dsx /*pos*/){
if(!(!is_(classTable_, (dsv), 14))){
throw 0xE9170000U;
}
(dsy)((dsv), (dsw), (dsx));
}
// _dtor
static void dsz(btz* dta){
((dta)->buj) = (nullptr);
((dta)->ne) = (nullptr);
((dta)->nf) = (nullptr);
((dta)->ng) = (nullptr);
((dta)->nh) = (nullptr);
((dta)->ni) = (nullptr);
((dta)->nj) = (nullptr);
((dta)->nk) = (nullptr);
}
// _copy
static btz* dtb(btz* dtc){
btz* dtd;
(dtd) = (new btz());
((dtd)->buj) = (copy_((dtc)->buj));
((dtd)->ne) = (copy_((dtc)->ne));
((dtd)->nf) = (copy_((dtc)->nf));
((dtd)->ng) = (copy_((dtc)->ng));
((dtd)->nh) = (copy_((dtc)->nh));
((dtd)->ni) = (copy_((dtc)->ni));
((dtd)->nj) = (copy_((dtc)->nj));
((dtd)->nk) = (copy_((dtc)->nk));
((dtd)->no) = ((dtc)->no);
((dtd)->lw) = ((dtc)->lw);
return as_<btz>(classTable_, (dtd), 50);
}
// _toBin
static Array_<uint8_t>* dte(btz* dtf){
Array_<uint8_t>* dtg;
(dtg) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dtg) = ((dtg)->Cat(toBin_((dtf)->buj)));
(dtg) = ((dtg)->Cat(toBin_((dtf)->ne)));
(dtg) = ((dtg)->Cat(toBin_((dtf)->nf)));
(dtg) = ((dtg)->Cat(toBin_((dtf)->ng)));
(dtg) = ((dtg)->Cat(toBin_((dtf)->nh)));
(dtg) = ((dtg)->Cat(toBin_((dtf)->ni)));
(dtg) = ((dtg)->Cat(toBin_((dtf)->nj)));
(dtg) = ((dtg)->Cat(toBin_((dtf)->nk)));
(dtg) = ((dtg)->Cat(toBin_((dtf)->no)));
(dtg) = ((dtg)->Cat(toBin_((dtf)->lw)));
return dtg;
}
// _fromBin
static btz* dtr(btz* dts, Array_<uint8_t>* dtt, int64_t* dtu){
btz* dtv;
(dtv) = (new btz());
((dtv)->buj) = (fromBin_<gb*>((dtt), (*dtu)));
((dtv)->ne) = (fromBin_<ga*>((dtt), (*dtu)));
((dtv)->nf) = (fromBin_<Array_<char16_t>*>((dtt), (*dtu)));
((dtv)->ng) = (fromBin_<fx*>((dtt), (*dtu)));
((dtv)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dtt), (*dtu)));
((dtv)->ni) = (fromBin_<Array_<char16_t>*>((dtt), (*dtu)));
((dtv)->nj) = (fromBin_<fx*>((dtt), (*dtu)));
((dtv)->nk) = (fromBin_<fy*>((dtt), (*dtu)));
((dtv)->no) = (fromBin_<bool>((dtt), (*dtu)));
((dtv)->lw) = (fromBin_<int64_t>((dtt), (*dtu)));
return dtv;
}
// _dtor
static void dtw(bua* dtx){
((dtx)->bum) = (nullptr);
((dtx)->buj) = (nullptr);
((dtx)->ne) = (nullptr);
((dtx)->nf) = (nullptr);
((dtx)->ng) = (nullptr);
((dtx)->nh) = (nullptr);
((dtx)->ni) = (nullptr);
((dtx)->nj) = (nullptr);
((dtx)->nk) = (nullptr);
}
// _copy
static bua* dty(bua* dtz){
bua* dua;
(dua) = (new bua());
((dua)->bum) = (copy_((dtz)->bum));
((dua)->buj) = (copy_((dtz)->buj));
((dua)->ne) = (copy_((dtz)->ne));
((dua)->nf) = (copy_((dtz)->nf));
((dua)->ng) = (copy_((dtz)->ng));
((dua)->nh) = (copy_((dtz)->nh));
((dua)->ni) = (copy_((dtz)->ni));
((dua)->nj) = (copy_((dtz)->nj));
((dua)->nk) = (copy_((dtz)->nk));
((dua)->no) = ((dtz)->no);
((dua)->lw) = ((dtz)->lw);
return as_<bua>(classTable_, (dua), 54);
}
// _toBin
static Array_<uint8_t>* dub(bua* duc){
Array_<uint8_t>* dud;
(dud) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dud) = ((dud)->Cat(toBin_((duc)->bum)));
(dud) = ((dud)->Cat(toBin_((duc)->buj)));
(dud) = ((dud)->Cat(toBin_((duc)->ne)));
(dud) = ((dud)->Cat(toBin_((duc)->nf)));
(dud) = ((dud)->Cat(toBin_((duc)->ng)));
(dud) = ((dud)->Cat(toBin_((duc)->nh)));
(dud) = ((dud)->Cat(toBin_((duc)->ni)));
(dud) = ((dud)->Cat(toBin_((duc)->nj)));
(dud) = ((dud)->Cat(toBin_((duc)->nk)));
(dud) = ((dud)->Cat(toBin_((duc)->no)));
(dud) = ((dud)->Cat(toBin_((duc)->lw)));
return dud;
}
// _fromBin
static bua* dup(bua* duq, Array_<uint8_t>* dur, int64_t* dus){
bua* dut;
(dut) = (new bua());
((dut)->bum) = (fromBin_<List_<ge*>*>((dur), (*dus)));
((dut)->buj) = (fromBin_<gb*>((dur), (*dus)));
((dut)->ne) = (fromBin_<ga*>((dur), (*dus)));
((dut)->nf) = (fromBin_<Array_<char16_t>*>((dur), (*dus)));
((dut)->ng) = (fromBin_<fx*>((dur), (*dus)));
((dut)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dur), (*dus)));
((dut)->ni) = (fromBin_<Array_<char16_t>*>((dur), (*dus)));
((dut)->nj) = (fromBin_<fx*>((dur), (*dus)));
((dut)->nk) = (fromBin_<fy*>((dur), (*dus)));
((dut)->no) = (fromBin_<bool>((dur), (*dus)));
((dut)->lw) = (fromBin_<int64_t>((dur), (*dus)));
return dut;
}
// _dtor
static void duu(buc* duv){
((duv)->bvy) = (nullptr);
((duv)->bwd) = (nullptr);
}
// _copy
static buc* duw(buc* dux){
buc* duy;
(duy) = (new buc());
((duy)->bvy) = (copy_((dux)->bvy));
((duy)->bwd) = (copy_((dux)->bwd));
return as_<buc>(classTable_, (duy), 58);
}
// _toBin
static Array_<uint8_t>* duz(buc* dva){
Array_<uint8_t>* dvb;
(dvb) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dvb) = ((dvb)->Cat(toBin_((dva)->bvy)));
(dvb) = ((dvb)->Cat(toBin_((dva)->bwd)));
return dvb;
}
// _fromBin
static buc* dve(buc* dvf, Array_<uint8_t>* dvg, int64_t* dvh){
buc* dvi;
(dvi) = (new buc());
((dvi)->bvy) = (fromBin_<gd*>((dvg), (*dvh)));
((dvi)->bwd) = (fromBin_<gd*>((dvg), (*dvh)));
return dvi;
}
// _dtor
static void dvj(bub* dvk){
((dvk)->bvl) = (nullptr);
((dvk)->bvo) = (nullptr);
((dvk)->ne) = (nullptr);
((dvk)->nf) = (nullptr);
((dvk)->ng) = (nullptr);
((dvk)->nh) = (nullptr);
((dvk)->ni) = (nullptr);
((dvk)->nj) = (nullptr);
((dvk)->nk) = (nullptr);
}
// _copy
static bub* dvl(bub* dvm){
bub* dvn;
(dvn) = (new bub());
((dvn)->bvl) = (copy_((dvm)->bvl));
((dvn)->bvo) = (copy_((dvm)->bvo));
((dvn)->ne) = (copy_((dvm)->ne));
((dvn)->nf) = (copy_((dvm)->nf));
((dvn)->ng) = (copy_((dvm)->ng));
((dvn)->nh) = (copy_((dvm)->nh));
((dvn)->ni) = (copy_((dvm)->ni));
((dvn)->nj) = (copy_((dvm)->nj));
((dvn)->nk) = (copy_((dvm)->nk));
((dvn)->no) = ((dvm)->no);
((dvn)->lw) = ((dvm)->lw);
return as_<bub>(classTable_, (dvn), 56);
}
// _toBin
static Array_<uint8_t>* dvo(bub* dvp){
Array_<uint8_t>* dvq;
(dvq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dvq) = ((dvq)->Cat(toBin_((dvp)->bvl)));
(dvq) = ((dvq)->Cat(toBin_((dvp)->bvo)));
(dvq) = ((dvq)->Cat(toBin_((dvp)->ne)));
(dvq) = ((dvq)->Cat(toBin_((dvp)->nf)));
(dvq) = ((dvq)->Cat(toBin_((dvp)->ng)));
(dvq) = ((dvq)->Cat(toBin_((dvp)->nh)));
(dvq) = ((dvq)->Cat(toBin_((dvp)->ni)));
(dvq) = ((dvq)->Cat(toBin_((dvp)->nj)));
(dvq) = ((dvq)->Cat(toBin_((dvp)->nk)));
(dvq) = ((dvq)->Cat(toBin_((dvp)->no)));
(dvq) = ((dvq)->Cat(toBin_((dvp)->lw)));
return dvq;
}
// _fromBin
static bub* dwc(bub* dwd, Array_<uint8_t>* dwe, int64_t* dwf){
bub* dwg;
(dwg) = (new bub());
((dwg)->bvl) = (fromBin_<List_<buc*>*>((dwe), (*dwf)));
((dwg)->bvo) = (fromBin_<bua*>((dwe), (*dwf)));
((dwg)->ne) = (fromBin_<ga*>((dwe), (*dwf)));
((dwg)->nf) = (fromBin_<Array_<char16_t>*>((dwe), (*dwf)));
((dwg)->ng) = (fromBin_<fx*>((dwe), (*dwf)));
((dwg)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dwe), (*dwf)));
((dwg)->ni) = (fromBin_<Array_<char16_t>*>((dwe), (*dwf)));
((dwg)->nj) = (fromBin_<fx*>((dwe), (*dwf)));
((dwg)->nk) = (fromBin_<fy*>((dwe), (*dwf)));
((dwg)->no) = (fromBin_<bool>((dwe), (*dwf)));
((dwg)->lw) = (fromBin_<int64_t>((dwe), (*dwf)));
return dwg;
}
// _dtor
static void dwh(bty* dwi){
((dwi)->bun) = (nullptr);
((dwi)->buo) = (nullptr);
((dwi)->bur) = (nullptr);
((dwi)->buj) = (nullptr);
((dwi)->ne) = (nullptr);
((dwi)->nf) = (nullptr);
((dwi)->ng) = (nullptr);
((dwi)->nh) = (nullptr);
((dwi)->ni) = (nullptr);
((dwi)->nj) = (nullptr);
((dwi)->nk) = (nullptr);
}
// _copy
static bty* dwj(bty* dwk){
bty* dwl;
(dwl) = (new bty());
((dwl)->bun) = (copy_((dwk)->bun));
((dwl)->buo) = (copy_((dwk)->buo));
((dwl)->bur) = (copy_((dwk)->bur));
((dwl)->buj) = (copy_((dwk)->buj));
((dwl)->ne) = (copy_((dwk)->ne));
((dwl)->nf) = (copy_((dwk)->nf));
((dwl)->ng) = (copy_((dwk)->ng));
((dwl)->nh) = (copy_((dwk)->nh));
((dwl)->ni) = (copy_((dwk)->ni));
((dwl)->nj) = (copy_((dwk)->nj));
((dwl)->nk) = (copy_((dwk)->nk));
((dwl)->no) = ((dwk)->no);
((dwl)->lw) = ((dwk)->lw);
return as_<bty>(classTable_, (dwl), 52);
}
// _toBin
static Array_<uint8_t>* dwm(bty* dwn){
Array_<uint8_t>* dwo;
(dwo) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->bun)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->buo)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->bur)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->buj)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->ne)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->nf)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->ng)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->nh)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->ni)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->nj)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->nk)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->no)));
(dwo) = ((dwo)->Cat(toBin_((dwn)->lw)));
return dwo;
}
// _fromBin
static bty* dxc(bty* dxd, Array_<uint8_t>* dxe, int64_t* dxf){
bty* dxg;
(dxg) = (new bty());
((dxg)->bun) = (fromBin_<bua*>((dxe), (*dxf)));
((dxg)->buo) = (fromBin_<List_<bub*>*>((dxe), (*dxf)));
((dxg)->bur) = (fromBin_<bua*>((dxe), (*dxf)));
((dxg)->buj) = (fromBin_<gb*>((dxe), (*dxf)));
((dxg)->ne) = (fromBin_<ga*>((dxe), (*dxf)));
((dxg)->nf) = (fromBin_<Array_<char16_t>*>((dxe), (*dxf)));
((dxg)->ng) = (fromBin_<fx*>((dxe), (*dxf)));
((dxg)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dxe), (*dxf)));
((dxg)->ni) = (fromBin_<Array_<char16_t>*>((dxe), (*dxf)));
((dxg)->nj) = (fromBin_<fx*>((dxe), (*dxf)));
((dxg)->nk) = (fromBin_<fy*>((dxe), (*dxf)));
((dxg)->no) = (fromBin_<bool>((dxe), (*dxf)));
((dxg)->lw) = (fromBin_<int64_t>((dxe), (*dxf)));
return dxg;
}
// _dtor
static void dxh(buh* dxi){
((dxi)->ne) = (nullptr);
((dxi)->nf) = (nullptr);
((dxi)->ng) = (nullptr);
((dxi)->nh) = (nullptr);
((dxi)->ni) = (nullptr);
((dxi)->nj) = (nullptr);
((dxi)->nk) = (nullptr);
}
// _copy
static buh* dxj(buh* dxk){
buh* dxl;
(dxl) = (new buh());
((dxl)->bui) = ((dxk)->bui);
((dxl)->ne) = (copy_((dxk)->ne));
((dxl)->nf) = (copy_((dxk)->nf));
((dxl)->ng) = (copy_((dxk)->ng));
((dxl)->nh) = (copy_((dxk)->nh));
((dxl)->ni) = (copy_((dxk)->ni));
((dxl)->nj) = (copy_((dxk)->nj));
((dxl)->nk) = (copy_((dxk)->nk));
((dxl)->no) = ((dxk)->no);
((dxl)->lw) = ((dxk)->lw);
return as_<buh>(classTable_, (dxl), 60);
}
// _toBin
static Array_<uint8_t>* dxm(buh* dxn){
Array_<uint8_t>* dxo;
(dxo) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dxo) = ((dxo)->Cat(toBin_((dxn)->bui)));
(dxo) = ((dxo)->Cat(toBin_((dxn)->ne)));
(dxo) = ((dxo)->Cat(toBin_((dxn)->nf)));
(dxo) = ((dxo)->Cat(toBin_((dxn)->ng)));
(dxo) = ((dxo)->Cat(toBin_((dxn)->nh)));
(dxo) = ((dxo)->Cat(toBin_((dxn)->ni)));
(dxo) = ((dxo)->Cat(toBin_((dxn)->nj)));
(dxo) = ((dxo)->Cat(toBin_((dxn)->nk)));
(dxo) = ((dxo)->Cat(toBin_((dxn)->no)));
(dxo) = ((dxo)->Cat(toBin_((dxn)->lw)));
return dxo;
}
// _fromBin
static buh* dxz(buh* dya, Array_<uint8_t>* dyb, int64_t* dyc){
buh* dyd;
(dyd) = (new buh());
((dyd)->bui) = (fromBin_<int64_t>((dyb), (*dyc)));
((dyd)->ne) = (fromBin_<ga*>((dyb), (*dyc)));
((dyd)->nf) = (fromBin_<Array_<char16_t>*>((dyb), (*dyc)));
((dyd)->ng) = (fromBin_<fx*>((dyb), (*dyc)));
((dyd)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dyb), (*dyc)));
((dyd)->ni) = (fromBin_<Array_<char16_t>*>((dyb), (*dyc)));
((dyd)->nj) = (fromBin_<fx*>((dyb), (*dyc)));
((dyd)->nk) = (fromBin_<fy*>((dyb), (*dyc)));
((dyd)->no) = (fromBin_<bool>((dyb), (*dyc)));
((dyd)->lw) = (fromBin_<int64_t>((dyb), (*dyc)));
return dyd;
}
// searchStdItem
static fx* buu(Array_<char16_t>* dye /*src*/, Array_<char16_t>* dyf /*identifier*/, bool dyg /*makeExprRef*/){
fx* dyh; // ast
bool dyi;
fx* dyl; // ast2
bool dym;
gd* dyr; // expr
(dyh) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((ah), (new Array_<int64_t>(1, (0LL))), (dye), (&dyi)));
if(eqAddr_((dyh), (nullptr))){
(ad)((6LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (dye))));
return nullptr;
}
(dyl) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((dyh)->nh), (new Array_<int64_t>(1, (0LL))), (dyf), (&dym)));
if(eqAddr_((dyh), (nullptr))){
(ad)((7LL), (nullptr), (new Array_<Array_<char16_t>*>(1, (dye))));
return nullptr;
}
if(dyg){
(dyr) = (new gd());
(bvd)((dyr), (2062LL), ((bpq)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), (1LL), (1LL))));
((dyr)->nj) = (dyl);
return (dys)((dyr));
}
return dyl;
}
// _dtor
static void dyt(buy* dyu){
((dyu)->bvi) = (nullptr);
((dyu)->ne) = (nullptr);
((dyu)->nf) = (nullptr);
((dyu)->ng) = (nullptr);
((dyu)->nh) = (nullptr);
((dyu)->ni) = (nullptr);
((dyu)->nj) = (nullptr);
((dyu)->nk) = (nullptr);
}
// _copy
static buy* dyv(buy* dyw){
buy* dyx;
(dyx) = (new buy());
((dyx)->bvi) = (copy_((dyw)->bvi));
((dyx)->ne) = (copy_((dyw)->ne));
((dyx)->nf) = (copy_((dyw)->nf));
((dyx)->ng) = (copy_((dyw)->ng));
((dyx)->nh) = (copy_((dyw)->nh));
((dyx)->ni) = (copy_((dyw)->ni));
((dyx)->nj) = (copy_((dyw)->nj));
((dyx)->nk) = (copy_((dyw)->nk));
((dyx)->no) = ((dyw)->no);
((dyx)->lw) = ((dyw)->lw);
return as_<buy>(classTable_, (dyx), 62);
}
// _toBin
static Array_<uint8_t>* dyy(buy* dyz){
Array_<uint8_t>* dza;
(dza) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dza) = ((dza)->Cat(toBin_((dyz)->bvi)));
(dza) = ((dza)->Cat(toBin_((dyz)->ne)));
(dza) = ((dza)->Cat(toBin_((dyz)->nf)));
(dza) = ((dza)->Cat(toBin_((dyz)->ng)));
(dza) = ((dza)->Cat(toBin_((dyz)->nh)));
(dza) = ((dza)->Cat(toBin_((dyz)->ni)));
(dza) = ((dza)->Cat(toBin_((dyz)->nj)));
(dza) = ((dza)->Cat(toBin_((dyz)->nk)));
(dza) = ((dza)->Cat(toBin_((dyz)->no)));
(dza) = ((dza)->Cat(toBin_((dyz)->lw)));
return dza;
}
// _fromBin
static buy* dzl(buy* dzm, Array_<uint8_t>* dzn, int64_t* dzo){
buy* dzp;
(dzp) = (new buy());
((dzp)->bvi) = (fromBin_<gd*>((dzn), (*dzo)));
((dzp)->ne) = (fromBin_<ga*>((dzn), (*dzo)));
((dzp)->nf) = (fromBin_<Array_<char16_t>*>((dzn), (*dzo)));
((dzp)->ng) = (fromBin_<fx*>((dzn), (*dzo)));
((dzp)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((dzn), (*dzo)));
((dzp)->ni) = (fromBin_<Array_<char16_t>*>((dzn), (*dzo)));
((dzp)->nj) = (fromBin_<fx*>((dzn), (*dzo)));
((dzp)->nk) = (fromBin_<fy*>((dzn), (*dzo)));
((dzp)->no) = (fromBin_<bool>((dzn), (*dzo)));
((dzp)->lw) = (fromBin_<int64_t>((dzn), (*dzo)));
return dzp;
}
// _dtor
static void dzq(bvc* dzr){
((dzr)->bwq) = (nullptr);
}
// _copy
static bvc* dzs(bvc* dzt){
bvc* dzu;
(dzu) = (new bvc());
((dzu)->bwq) = (copy_((dzt)->bwq));
((dzu)->bwm) = ((dzt)->bwm);
((dzu)->bwn) = ((dzt)->bwn);
return as_<bvc>(classTable_, (dzu), 66);
}
// _toBin
static Array_<uint8_t>* dzv(bvc* dzw){
Array_<uint8_t>* dzx;
(dzx) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(dzx) = ((dzx)->Cat(toBin_((dzw)->bwq)));
(dzx) = ((dzx)->Cat(toBin_((dzw)->bwm)));
(dzx) = ((dzx)->Cat(toBin_((dzw)->bwn)));
return dzx;
}
// _fromBin
static bvc* eab(bvc* eac, Array_<uint8_t>* ead, int64_t* eae){
bvc* eaf;
(eaf) = (new bvc());
((eaf)->bwq) = (fromBin_<gd*>((ead), (*eae)));
((eaf)->bwm) = (fromBin_<bool>((ead), (*eae)));
((eaf)->bwn) = (fromBin_<bool>((ead), (*eae)));
return eaf;
}
// _dtor
static void eag(bvb* eah){
((eah)->bvh) = (nullptr);
((eah)->bve) = (nullptr);
((eah)->pf) = (nullptr);
((eah)->ne) = (nullptr);
((eah)->nf) = (nullptr);
((eah)->ng) = (nullptr);
((eah)->nh) = (nullptr);
((eah)->ni) = (nullptr);
((eah)->nj) = (nullptr);
((eah)->nk) = (nullptr);
}
// _copy
static bvb* eai(bvb* eaj){
bvb* eak;
(eak) = (new bvb());
((eak)->bvh) = (copy_((eaj)->bvh));
((eak)->bve) = (copy_((eaj)->bve));
((eak)->pf) = (copy_((eaj)->pf));
((eak)->pj) = ((eaj)->pj);
((eak)->ne) = (copy_((eaj)->ne));
((eak)->nf) = (copy_((eaj)->nf));
((eak)->ng) = (copy_((eaj)->ng));
((eak)->nh) = (copy_((eaj)->nh));
((eak)->ni) = (copy_((eaj)->ni));
((eak)->nj) = (copy_((eaj)->nj));
((eak)->nk) = (copy_((eaj)->nk));
((eak)->no) = ((eaj)->no);
((eak)->lw) = ((eaj)->lw);
return as_<bvb>(classTable_, (eak), 64);
}
// _toBin
static Array_<uint8_t>* eal(bvb* eam){
Array_<uint8_t>* ean;
(ean) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ean) = ((ean)->Cat(toBin_((eam)->bvh)));
(ean) = ((ean)->Cat(toBin_((eam)->bve)));
(ean) = ((ean)->Cat(toBin_((eam)->pf)));
(ean) = ((ean)->Cat(toBin_((eam)->pj)));
(ean) = ((ean)->Cat(toBin_((eam)->ne)));
(ean) = ((ean)->Cat(toBin_((eam)->nf)));
(ean) = ((ean)->Cat(toBin_((eam)->ng)));
(ean) = ((ean)->Cat(toBin_((eam)->nh)));
(ean) = ((ean)->Cat(toBin_((eam)->ni)));
(ean) = ((ean)->Cat(toBin_((eam)->nj)));
(ean) = ((ean)->Cat(toBin_((eam)->nk)));
(ean) = ((ean)->Cat(toBin_((eam)->no)));
(ean) = ((ean)->Cat(toBin_((eam)->lw)));
return ean;
}
// _fromBin
static bvb* ebb(bvb* ebc, Array_<uint8_t>* ebd, int64_t* ebe){
bvb* ebf;
(ebf) = (new bvb());
((ebf)->bvh) = (fromBin_<gd*>((ebd), (*ebe)));
((ebf)->bve) = (fromBin_<List_<bvc*>*>((ebd), (*ebe)));
((ebf)->pf) = (fromBin_<gc*>((ebd), (*ebe)));
((ebf)->pj) = (fromBin_<int64_t>((ebd), (*ebe)));
((ebf)->ne) = (fromBin_<ga*>((ebd), (*ebe)));
((ebf)->nf) = (fromBin_<Array_<char16_t>*>((ebd), (*ebe)));
((ebf)->ng) = (fromBin_<fx*>((ebd), (*ebe)));
((ebf)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ebd), (*ebe)));
((ebf)->ni) = (fromBin_<Array_<char16_t>*>((ebd), (*ebe)));
((ebf)->nj) = (fromBin_<fx*>((ebd), (*ebe)));
((ebf)->nk) = (fromBin_<fy*>((ebd), (*ebe)));
((ebf)->no) = (fromBin_<bool>((ebd), (*ebe)));
((ebf)->lw) = (fromBin_<int64_t>((ebd), (*ebe)));
return ebf;
}
// initAstExpr
static void bvd(gd* ebg /*ast*/, int64_t ebh /*typeId*/, ga* ebi /*pos*/){
if(!(is_(classTable_, (ebg), 14))){
throw 0xE9170000U;
}
(dsy)((ebg), (ebh), (ebi));
((ebg)->pf) = (nullptr);
((ebg)->pj) = (0LL);
}
// _dtor
static void ebj(bvu* ebk){
((ebk)->pf) = (nullptr);
((ebk)->ne) = (nullptr);
((ebk)->nf) = (nullptr);
((ebk)->ng) = (nullptr);
((ebk)->nh) = (nullptr);
((ebk)->ni) = (nullptr);
((ebk)->nj) = (nullptr);
((ebk)->nk) = (nullptr);
}
// _copy
static bvu* ebl(bvu* ebm){
bvu* ebn;
(ebn) = (new bvu());
((ebn)->pf) = (copy_((ebm)->pf));
((ebn)->pj) = ((ebm)->pj);
((ebn)->ne) = (copy_((ebm)->ne));
((ebn)->nf) = (copy_((ebm)->nf));
((ebn)->ng) = (copy_((ebm)->ng));
((ebn)->nh) = (copy_((ebm)->nh));
((ebn)->ni) = (copy_((ebm)->ni));
((ebn)->nj) = (copy_((ebm)->nj));
((ebn)->nk) = (copy_((ebm)->nk));
((ebn)->no) = ((ebm)->no);
((ebn)->lw) = ((ebm)->lw);
return as_<bvu>(classTable_, (ebn), 68);
}
// _toBin
static Array_<uint8_t>* ebo(bvu* ebp){
Array_<uint8_t>* ebq;
(ebq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ebq) = ((ebq)->Cat(toBin_((ebp)->pf)));
(ebq) = ((ebq)->Cat(toBin_((ebp)->pj)));
(ebq) = ((ebq)->Cat(toBin_((ebp)->ne)));
(ebq) = ((ebq)->Cat(toBin_((ebp)->nf)));
(ebq) = ((ebq)->Cat(toBin_((ebp)->ng)));
(ebq) = ((ebq)->Cat(toBin_((ebp)->nh)));
(ebq) = ((ebq)->Cat(toBin_((ebp)->ni)));
(ebq) = ((ebq)->Cat(toBin_((ebp)->nj)));
(ebq) = ((ebq)->Cat(toBin_((ebp)->nk)));
(ebq) = ((ebq)->Cat(toBin_((ebp)->no)));
(ebq) = ((ebq)->Cat(toBin_((ebp)->lw)));
return ebq;
}
// _fromBin
static bvu* ecc(bvu* ecd, Array_<uint8_t>* ece, int64_t* ecf){
bvu* ecg;
(ecg) = (new bvu());
((ecg)->pf) = (fromBin_<gc*>((ece), (*ecf)));
((ecg)->pj) = (fromBin_<int64_t>((ece), (*ecf)));
((ecg)->ne) = (fromBin_<ga*>((ece), (*ecf)));
((ecg)->nf) = (fromBin_<Array_<char16_t>*>((ece), (*ecf)));
((ecg)->ng) = (fromBin_<fx*>((ece), (*ecf)));
((ecg)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ece), (*ecf)));
((ecg)->ni) = (fromBin_<Array_<char16_t>*>((ece), (*ecf)));
((ecg)->nj) = (fromBin_<fx*>((ece), (*ecf)));
((ecg)->nk) = (fromBin_<fy*>((ece), (*ecf)));
((ecg)->no) = (fromBin_<bool>((ece), (*ecf)));
((ecg)->lw) = (fromBin_<int64_t>((ece), (*ecf)));
return ecg;
}
// _dtor
static void ech(bvt* eci){
((eci)->pf) = (nullptr);
((eci)->ne) = (nullptr);
((eci)->nf) = (nullptr);
((eci)->ng) = (nullptr);
((eci)->nh) = (nullptr);
((eci)->ni) = (nullptr);
((eci)->nj) = (nullptr);
((eci)->nk) = (nullptr);
}
// _copy
static bvt* ecj(bvt* eck){
bvt* ecl;
(ecl) = (new bvt());
((ecl)->bvv) = ((eck)->bvv);
((ecl)->pf) = (copy_((eck)->pf));
((ecl)->pj) = ((eck)->pj);
((ecl)->ne) = (copy_((eck)->ne));
((ecl)->nf) = (copy_((eck)->nf));
((ecl)->ng) = (copy_((eck)->ng));
((ecl)->nh) = (copy_((eck)->nh));
((ecl)->ni) = (copy_((eck)->ni));
((ecl)->nj) = (copy_((eck)->nj));
((ecl)->nk) = (copy_((eck)->nk));
((ecl)->no) = ((eck)->no);
((ecl)->lw) = ((eck)->lw);
return as_<bvt>(classTable_, (ecl), 70);
}
// _toBin
static Array_<uint8_t>* ecm(bvt* ecn){
Array_<uint8_t>* eco;
(eco) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eco) = ((eco)->Cat(toBin_((ecn)->bvv)));
(eco) = ((eco)->Cat(toBin_((ecn)->pf)));
(eco) = ((eco)->Cat(toBin_((ecn)->pj)));
(eco) = ((eco)->Cat(toBin_((ecn)->ne)));
(eco) = ((eco)->Cat(toBin_((ecn)->nf)));
(eco) = ((eco)->Cat(toBin_((ecn)->ng)));
(eco) = ((eco)->Cat(toBin_((ecn)->nh)));
(eco) = ((eco)->Cat(toBin_((ecn)->ni)));
(eco) = ((eco)->Cat(toBin_((ecn)->nj)));
(eco) = ((eco)->Cat(toBin_((ecn)->nk)));
(eco) = ((eco)->Cat(toBin_((ecn)->no)));
(eco) = ((eco)->Cat(toBin_((ecn)->lw)));
return eco;
}
// _fromBin
static bvt* edb(bvt* edc, Array_<uint8_t>* edd, int64_t* ede){
bvt* edf;
(edf) = (new bvt());
((edf)->bvv) = (fromBin_<uint64_t>((edd), (*ede)));
((edf)->pf) = (fromBin_<gc*>((edd), (*ede)));
((edf)->pj) = (fromBin_<int64_t>((edd), (*ede)));
((edf)->ne) = (fromBin_<ga*>((edd), (*ede)));
((edf)->nf) = (fromBin_<Array_<char16_t>*>((edd), (*ede)));
((edf)->ng) = (fromBin_<fx*>((edd), (*ede)));
((edf)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((edd), (*ede)));
((edf)->ni) = (fromBin_<Array_<char16_t>*>((edd), (*ede)));
((edf)->nj) = (fromBin_<fx*>((edd), (*ede)));
((edf)->nk) = (fromBin_<fy*>((edd), (*ede)));
((edf)->no) = (fromBin_<bool>((edd), (*ede)));
((edf)->lw) = (fromBin_<int64_t>((edd), (*ede)));
return edf;
}
// rebuildArg
static void bxf(gb* edg /*ast*/){
if(!eqAddr_(((edg)->nk), (nullptr))){
return;
}
((edg)->nk) = (edg);
((edg)->qf) = ((bxi)(((edg)->qf), (nullptr)));
if(!eqAddr_(((edg)->qg), (nullptr))){
((edg)->qg) = ((byb)(((edg)->qg), (false)));
if(eqAddr_(((edg)->qg), (nullptr))){
return;
}
if((((edg)->qk) == (1LL)) && ((aye<int64_t>((((edg)->qg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL))){
(ad)((131091LL), ((edg)->ne), (new Array_<Array_<char16_t>*>(1, ((edg)->nf))));
}
if((((edg)->qk) == (4LL)) && ((aye<int64_t>((((edg)->qg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL))){
(ad)((131092LL), ((edg)->ne), (new Array_<Array_<char16_t>*>(1, ((edg)->nf))));
}
if(!((eds)((((edg)->qg)->pf), ((edg)->qf), (false)))){
(ad)((131093LL), ((edg)->ne), (new Array_<Array_<char16_t>*>(1, ((edg)->nf))));
}
else if(((((edg)->qg)->pf)->lw) == (1028LL)){
((edg)->qg) = ((edv)(((edg)->qg), ((edg)->qf)));
}
}
}
// rebuildType
static gc* bxi(gc* edw /*ast*/, bqw* edx /*parentAlias*/){
int64_t eea; // type
int64_t eec;
fx* eee; // refItem
int64_t eei;
cau* ees; // ast2
List_<cav*>* eet; // items
cav* eev; // arg
ccc* efa; // ast2
if(!eqAddr_(((edw)->nk), (nullptr))){
return as_<gc>(classTable_, ((edw)->nk), 12);
}
((edw)->nk) = (edw);
(eea) = ((edw)->lw);
eec = eea;
switch(eec){
case 66565LL:
(eee) = ((edw)->nj);
if(eqAddr_((eee), (nullptr))){
return nullptr;
}
eei = (eee)->lw;
switch(eei){
case 5LL:
(eek)((as_<ul>(classTable_, (eee), 22)));
break;
case 6LL:
(eem)((as_<brc>(classTable_, (eee), 48)));
break;
case 4LL:
(eeo)((as_<bqw>(classTable_, (eee), 46)), (edx));
((edw)->nk) = ((as_<bqw>(classTable_, (eee), 46))->dns);
(edw) = ((as_<bqw>(classTable_, (eee), 46))->dns);
break;
default:
(ad)((131111LL), ((edw)->ne), (nullptr));
return nullptr;
break;
}
break;
case 66561LL:
((as_<cam>(classTable_, (edw), 76))->cao) = ((bxi)(((as_<cam>(classTable_, (edw), 76))->cao), (edx)));
break;
case 66562LL:
(ees) = (as_<cau>(classTable_, (edw), 80));
(eet) = ((ees)->cbc);
awe<List_<cav*>*>((eet), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cav*>*>((eet), (new Array_<int64_t>(1, (0LL)))))){
(eev) = (awi<List_<cav*>*, cav*>((eet), (new Array_<int64_t>(1, (0LL)))));
((eev)->cbk) = ((bxi)(((eev)->cbk), (edx)));
ays<List_<cav*>*>((eet), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((ees)->cax), (nullptr))){
((ees)->cax) = ((bxi)(((ees)->cax), (edx)));
}
break;
case 66563LL:
((as_<cbr>(classTable_, (edw), 84))->cbw) = ((bxi)(((as_<cbr>(classTable_, (edw), 84))->cbw), (edx)));
break;
case 66564LL:
(efa) = (as_<ccc>(classTable_, (edw), 86));
((efa)->ccd) = ((bxi)(((efa)->ccd), (edx)));
((efa)->cce) = ((bxi)(((efa)->cce), (edx)));
break;
default:
if(!(((((eea) == (0LL)) || ((eea) == (1025LL))) || ((eea) == (1026LL))) || ((eea) == (1027LL)))){
throw 0xE9170000U;
}
break;
}
return edw;
}
// refreshStats
static List_<ge*>* bxj(List_<ge*>* efc /*stats*/, gc* efd /*retType*/, fw* efe /*parentFunc*/){
List_<ge*>* eff; // stats2
ge* efh; // stat
(eff) = (new List_<ge*>());
awe<List_<ge*>*>((efc), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<ge*>*>((efc), (new Array_<int64_t>(1, (0LL)))))){
(efh) = ((byl)((awi<List_<ge*>*, ge*>((efc), (new Array_<int64_t>(1, (0LL))))), (efd), (efe)));
if(!eqAddr_((efh), (nullptr))){
uh<List_<ge*>*, ge*>((eff), (new Array_<int64_t>(1, (0LL))), (efh));
}
ays<List_<ge*>*>((efc), (new Array_<int64_t>(1, (0LL))));
}
return eff;
}
// rebuildExpr
static gd* byb(gd* efk /*ast*/, bool efl /*nullable*/){
int64_t efp;
if(eqAddr_((efk), (nullptr))){
return nullptr;
}
efp = (efk)->lw;
switch(efp){
case 0LL:
return nullptr;
break;
case 2049LL:
(efk) = ((efs)((as_<eft>(classTable_, (efk), 110))));
break;
case 2050LL:
(efk) = ((efv)((as_<byf>(classTable_, (efk), 72))));
break;
case 2051LL:
(efk) = ((efx)((as_<efy>(classTable_, (efk), 112))));
break;
case 2052LL:
(efk) = ((ega)((as_<egb>(classTable_, (efk), 114))));
break;
case 2053LL:
(efk) = ((egd)((as_<ege>(classTable_, (efk), 116))));
break;
case 2054LL:
(efk) = ((egg)((as_<egh>(classTable_, (efk), 118))));
break;
case 2055LL:
(efk) = ((egj)((as_<egk>(classTable_, (efk), 120))));
break;
case 2056LL:
(efk) = ((egm)((as_<egn>(classTable_, (efk), 122))));
break;
case 2057LL:
(efk) = ((egp)((as_<bvb>(classTable_, (efk), 64))));
break;
case 2058LL:
(efk) = ((egr)((as_<egs>(classTable_, (efk), 124))));
break;
case 2059LL:
(efk) = ((egu)((as_<egv>(classTable_, (efk), 126))));
break;
case 67584LL:
(efk) = ((egx)((as_<bvu>(classTable_, (efk), 68))));
break;
case 67585LL:
(efk) = ((egz)((as_<bvt>(classTable_, (efk), 70))));
break;
case 67586LL:
(efk) = ((ehb)((as_<ehc>(classTable_, (efk), 128))));
break;
case 67587LL:
(efk) = ((ehe)((as_<ehf>(classTable_, (efk), 130))));
break;
case 67588LL:
(efk) = ((ehh)((as_<ehi>(classTable_, (efk), 132))));
break;
case 2060LL:
(efk) = ((ehk)((as_<ehl>(classTable_, (efk), 134))));
break;
case 2062LL:
(efk) = ((dys)((efk)));
break;
}
if(eqAddr_((efk), (nullptr))){
return nullptr;
}
if((!(efl)) && (eqAddr_(((efk)->pf), (nullptr)))){
(ad)((131112LL), ((efk)->ne), (nullptr));
return nullptr;
}
return efk;
}
// _dtor
static void ehr(byf* ehs){
((ehs)->byj) = (nullptr);
((ehs)->byk) = (nullptr);
((ehs)->pf) = (nullptr);
((ehs)->ne) = (nullptr);
((ehs)->nf) = (nullptr);
((ehs)->ng) = (nullptr);
((ehs)->nh) = (nullptr);
((ehs)->ni) = (nullptr);
((ehs)->nj) = (nullptr);
((ehs)->nk) = (nullptr);
}
// _copy
static byf* eht(byf* ehu){
byf* ehv;
(ehv) = (new byf());
((ehv)->byg) = ((ehu)->byg);
((ehv)->byj) = (copy_((ehu)->byj));
((ehv)->byk) = (copy_((ehu)->byk));
((ehv)->pf) = (copy_((ehu)->pf));
((ehv)->pj) = ((ehu)->pj);
((ehv)->ne) = (copy_((ehu)->ne));
((ehv)->nf) = (copy_((ehu)->nf));
((ehv)->ng) = (copy_((ehu)->ng));
((ehv)->nh) = (copy_((ehu)->nh));
((ehv)->ni) = (copy_((ehu)->ni));
((ehv)->nj) = (copy_((ehu)->nj));
((ehv)->nk) = (copy_((ehu)->nk));
((ehv)->no) = ((ehu)->no);
((ehv)->lw) = ((ehu)->lw);
return as_<byf>(classTable_, (ehv), 72);
}
// _toBin
static Array_<uint8_t>* ehw(byf* ehx){
Array_<uint8_t>* ehy;
(ehy) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->byg)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->byj)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->byk)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->pf)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->pj)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->ne)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->nf)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->ng)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->nh)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->ni)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->nj)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->nk)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->no)));
(ehy) = ((ehy)->Cat(toBin_((ehx)->lw)));
return ehy;
}
// _fromBin
static byf* ein(byf* eio, Array_<uint8_t>* eip, int64_t* eiq){
byf* eir;
(eir) = (new byf());
((eir)->byg) = (fromBin_<int64_t>((eip), (*eiq)));
((eir)->byj) = (fromBin_<gd*>((eip), (*eiq)));
((eir)->byk) = (fromBin_<gd*>((eip), (*eiq)));
((eir)->pf) = (fromBin_<gc*>((eip), (*eiq)));
((eir)->pj) = (fromBin_<int64_t>((eip), (*eiq)));
((eir)->ne) = (fromBin_<ga*>((eip), (*eiq)));
((eir)->nf) = (fromBin_<Array_<char16_t>*>((eip), (*eiq)));
((eir)->ng) = (fromBin_<fx*>((eip), (*eiq)));
((eir)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eip), (*eiq)));
((eir)->ni) = (fromBin_<Array_<char16_t>*>((eip), (*eiq)));
((eir)->nj) = (fromBin_<fx*>((eip), (*eiq)));
((eir)->nk) = (fromBin_<fy*>((eip), (*eiq)));
((eir)->no) = (fromBin_<bool>((eip), (*eiq)));
((eir)->lw) = (fromBin_<int64_t>((eip), (*eiq)));
return eir;
}
// rebuildStat
static ge* byl(ge* eis /*ast*/, gc* eit /*retType*/, fw* eiu /*parentFunc*/){
int64_t eiy;
ejc* ejb; // ast2
gb* ejf; // arg
List_<cav*>* eji; // args
ul* ejj; // refClass
List_<um*>* ejk; // items
um* ejo; // item
gd* ejr; // astRef
buy* ejw; // astDo
byf* ejy; // astAssign
gd* eka; // astRef
if(eqAddr_((eis), (nullptr))){
return nullptr;
}
eiy = (eis)->lw;
switch(eiy){
case 514LL:
case 516LL:
case 517LL:
case 518LL:
case 519LL:
return nullptr;
break;
case 515LL:
(ejb) = (as_<ejc>(classTable_, (eis), 136));
(ejd)(((ejb)->eje));
(ejf) = (((ejb)->eje)->bgp);
if((!eqAddr_(((ejf)->nf), (nullptr))) && (cmp_(((ejf)->nf), (new Array_<char16_t>(5, u'\u0073', u'\u0075', u'\u0070', u'\u0065', u'\u0072'))) == 0)){
if(!((!eqAddr_((eiu), (nullptr))) && (!eqAddr_(((eiu)->nf), (nullptr))))){
throw 0xE9170000U;
}
if(!((((ejf)->qf)->lw) == (66562LL))){
throw 0xE9170000U;
}
(eji) = ((as_<cau>(classTable_, ((ejf)->qf), 80))->cbc);
awe<List_<cav*>*>((eji), (new Array_<int64_t>(1, (0LL))));
(ejj) = (as_<ul>(classTable_, (((awi<List_<cav*>*, cav*>((eji), (new Array_<int64_t>(1, (0LL)))))->cbk)->nj), 22));
if(!(((ejj)->lw) == (5LL))){
throw 0xE9170000U;
}
(ejk) = ((ejj)->bag);
awe<List_<um*>*>((ejk), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((ejk), (new Array_<int64_t>(1, (0LL)))))){
(ejo) = (awi<List_<um*>*, um*>((ejk), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((((ejo)->azl)->nf), (nullptr))) && (cmp_((((ejo)->azl)->nf), ((eiu)->nf)) == 0)){
if(!((ejo)->azr)){
throw 0xE9170000U;
}
(ejr) = (new gd());
(bvd)((ejr), (2062LL), ((eis)->ne));
((ejr)->nj) = (((ejo)->azm)->azl);
((ejf)->qg) = (ejr);
break;
}
ays<List_<um*>*>((ejk), (new Array_<int64_t>(1, (0LL))));
}
if(!(!(awg<List_<um*>*>((ejk), (new Array_<int64_t>(1, (0LL))))))){
throw 0xE9170000U;
}
}
if(eqAddr_(((ejf)->qg), (nullptr))){
((ejf)->qg) = (as_<gd>(classTable_, ((eju)(((ejf)->qf), ((ejf)->ne))), 14));
}
(ejw) = (new buy());
(btv)((ejw), (528LL), ((eis)->ne));
(ejy) = (new byf());
(bvd)((ejy), (2050LL), ((eis)->ne));
((ejy)->byg) = (0LL);
(eka) = (new gd());
(bvd)((eka), (2062LL), ((eis)->ne));
((eka)->nj) = (ejf);
((ejy)->byj) = (eka);
((ejy)->byk) = ((ejf)->qg);
((ejw)->bvi) = (ejy);
((ejf)->qg) = (nullptr);
(eis) = ((byl)((ejw), (eit), (eiu)));
break;
case 66049LL:
(eis) = ((ekc)((as_<clz>(classTable_, (eis), 88)), (eit), (eiu)));
break;
case 66050LL:
(eis) = ((eke)((as_<cmd>(classTable_, (eis), 92)), (eit), (eiu)));
break;
case 16843265LL:
(eis) = ((ekg)((as_<cmh>(classTable_, (eis), 98)), (eit), (eiu)));
break;
case 16843266LL:
(eis) = ((eki)((as_<cml>(classTable_, (eis), 100)), (eit), (eiu)));
break;
case 66051LL:
(eis) = ((ekk)((as_<bty>(classTable_, (eis), 52)), (eit), (eiu)));
break;
case 526LL:
(eis) = ((ekm)((as_<cmq>(classTable_, (eis), 102))));
break;
case 66052LL:
(eis) = ((eko)((as_<bua>(classTable_, (eis), 54)), (eit), (eiu)));
break;
case 527LL:
(eis) = ((ekq)((as_<cmv>(classTable_, (eis), 104)), (eit)));
break;
case 528LL:
(eis) = ((eks)((as_<buy>(classTable_, (eis), 62))));
break;
case 529LL:
(eis) = ((eku)((as_<ge>(classTable_, (eis), 16)), (eit), (eiu)));
break;
case 530LL:
(eis) = ((ekw)((as_<ge>(classTable_, (eis), 16)), (eit), (eiu)));
break;
case 531LL:
(eis) = ((eky)((as_<cne>(classTable_, (eis), 106))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(eqAddr_((eis), (nullptr))){
return nullptr;
}
if(!(!eqAddr_(((eis)->nk), (nullptr)))){
throw 0xE9170000U;
}
return eis;
}
// isRef
static bool byn(gc* elc /*type*/){
int64_t eld; // typeId
(eld) = ((elc)->lw);
return ((((eld) == (66561LL)) || ((eld) == (66563LL))) || ((eld) == (66564LL))) || ((ele)((elc)));
}
// makeExprNull
static bvu* byu(ga* elf /*pos*/){
bvu* elg; // value
elj* eli; // type
(elg) = (new bvu());
(bvd)((elg), (67584LL), (elf));
(eli) = (new elj());
(btv)((eli), (1027LL), (elf));
((elg)->pf) = (eli);
return elg;
}
// getId
static Array_<char16_t>* bza(){
Array_<char16_t>* elk; // curId
Array_<char16_t>* ell; // newId
int64_t elp; // idx
int64_t emd;
Array_<char16_t>* emg;
Array_<char16_t>* emk;
Array_<char16_t>* emo;
(elk) = (al);
(ell) = (copy_(al));
while(true){
(elp) = (((ell)->Len()) - (1LL));
while(true){
if(((ell)->At(elp)) == (u'\u007A')){
if((elp) == (0LL)){
(ell) = (newArray_<char16_t, Array_<char16_t>*>(1, (((ell)->Len()) + (1LL))));
elx<Array_<char16_t>*, char16_t>((ell), (new Array_<int64_t>(1, (0LL))), (u'\u0061'));
}
else{
((ell)->At(elp)) = (u'\u0061');
(elp) = ((elp) - (1LL));
continue;
}
}
else{
((ell)->At(elp)) = ((emb)(((ell)->At(elp)), (1LL)));
}
break;
}
emd = (ell)->Len();
switch(emd){
case 2LL:
emg = ell;
if(cmp_(emg, (new Array_<char16_t>(2, u'\u0064', u'\u006F'))) == 0 || cmp_(emg, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0 || cmp_(emg, (new Array_<char16_t>(2, u'\u006F', u'\u0072'))) == 0){
continue;
}
break;
case 3LL:
emk = ell;
if(cmp_(emk, (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064'))) == 0 || cmp_(emk, (new Array_<char16_t>(3, u'\u0061', u'\u0073', u'\u006D'))) == 0 || cmp_(emk, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0 || cmp_(emk, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074'))) == 0 || cmp_(emk, (new Array_<char16_t>(3, u'\u006E', u'\u0065', u'\u0077'))) == 0 || cmp_(emk, (new Array_<char16_t>(3, u'\u006E', u'\u006F', u'\u0074'))) == 0 || cmp_(emk, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0 || cmp_(emk, (new Array_<char16_t>(3, u'\u0078', u'\u006F', u'\u0072'))) == 0){
continue;
}
break;
case 4LL:
emo = ell;
if(cmp_(emo, (new Array_<char16_t>(4, u'\u0061', u'\u0075', u'\u0074', u'\u006F'))) == 0 || cmp_(emo, (new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C'))) == 0 || cmp_(emo, (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065'))) == 0 || cmp_(emo, (new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072'))) == 0 || cmp_(emo, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065'))) == 0 || cmp_(emo, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0 || cmp_(emo, (new Array_<char16_t>(4, u'\u0067', u'\u006F', u'\u0074', u'\u006F'))) == 0 || cmp_(emo, (new Array_<char16_t>(4, u'\u006C', u'\u006F', u'\u006E', u'\u0067'))) == 0 || cmp_(emo, (new Array_<char16_t>(4, u'\u006D', u'\u0061', u'\u0069', u'\u006E'))) == 0 || cmp_(emo, (new Array_<char16_t>(4, u'\u0074', u'\u0068', u'\u0069', u'\u0073'))) == 0 || cmp_(emo, (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))) == 0 || cmp_(emo, (new Array_<char16_t>(4, u'\u0076', u'\u006F', u'\u0069', u'\u0064'))) == 0){
continue;
}
break;
}
break;
}
(al) = (ell);
return elk;
}
// _dtor
static void emq(can* emr){
((emr)->ne) = (nullptr);
((emr)->nf) = (nullptr);
((emr)->ng) = (nullptr);
((emr)->nh) = (nullptr);
((emr)->ni) = (nullptr);
((emr)->nj) = (nullptr);
((emr)->nk) = (nullptr);
}
// _copy
static can* ems(can* emt){
can* emu;
(emu) = (new can());
((emu)->ne) = (copy_((emt)->ne));
((emu)->nf) = (copy_((emt)->nf));
((emu)->ng) = (copy_((emt)->ng));
((emu)->nh) = (copy_((emt)->nh));
((emu)->ni) = (copy_((emt)->ni));
((emu)->nj) = (copy_((emt)->nj));
((emu)->nk) = (copy_((emt)->nk));
((emu)->no) = ((emt)->no);
((emu)->lw) = ((emt)->lw);
return as_<can>(classTable_, (emu), 74);
}
// _toBin
static Array_<uint8_t>* emv(can* emw){
Array_<uint8_t>* emx;
(emx) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(emx) = ((emx)->Cat(toBin_((emw)->ne)));
(emx) = ((emx)->Cat(toBin_((emw)->nf)));
(emx) = ((emx)->Cat(toBin_((emw)->ng)));
(emx) = ((emx)->Cat(toBin_((emw)->nh)));
(emx) = ((emx)->Cat(toBin_((emw)->ni)));
(emx) = ((emx)->Cat(toBin_((emw)->nj)));
(emx) = ((emx)->Cat(toBin_((emw)->nk)));
(emx) = ((emx)->Cat(toBin_((emw)->no)));
(emx) = ((emx)->Cat(toBin_((emw)->lw)));
return emx;
}
// _fromBin
static can* enh(can* eni, Array_<uint8_t>* enj, int64_t* enk){
can* enl;
(enl) = (new can());
((enl)->ne) = (fromBin_<ga*>((enj), (*enk)));
((enl)->nf) = (fromBin_<Array_<char16_t>*>((enj), (*enk)));
((enl)->ng) = (fromBin_<fx*>((enj), (*enk)));
((enl)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((enj), (*enk)));
((enl)->ni) = (fromBin_<Array_<char16_t>*>((enj), (*enk)));
((enl)->nj) = (fromBin_<fx*>((enj), (*enk)));
((enl)->nk) = (fromBin_<fy*>((enj), (*enk)));
((enl)->no) = (fromBin_<bool>((enj), (*enk)));
((enl)->lw) = (fromBin_<int64_t>((enj), (*enk)));
return enl;
}
// _dtor
static void enm(cam* enn){
((enn)->cao) = (nullptr);
((enn)->ne) = (nullptr);
((enn)->nf) = (nullptr);
((enn)->ng) = (nullptr);
((enn)->nh) = (nullptr);
((enn)->ni) = (nullptr);
((enn)->nj) = (nullptr);
((enn)->nk) = (nullptr);
}
// _copy
static cam* eno(cam* enp){
cam* enq;
(enq) = (new cam());
((enq)->cao) = (copy_((enp)->cao));
((enq)->ne) = (copy_((enp)->ne));
((enq)->nf) = (copy_((enp)->nf));
((enq)->ng) = (copy_((enp)->ng));
((enq)->nh) = (copy_((enp)->nh));
((enq)->ni) = (copy_((enp)->ni));
((enq)->nj) = (copy_((enp)->nj));
((enq)->nk) = (copy_((enp)->nk));
((enq)->no) = ((enp)->no);
((enq)->lw) = ((enp)->lw);
return as_<cam>(classTable_, (enq), 76);
}
// _toBin
static Array_<uint8_t>* enr(cam* ens){
Array_<uint8_t>* ent;
(ent) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ent) = ((ent)->Cat(toBin_((ens)->cao)));
(ent) = ((ent)->Cat(toBin_((ens)->ne)));
(ent) = ((ent)->Cat(toBin_((ens)->nf)));
(ent) = ((ent)->Cat(toBin_((ens)->ng)));
(ent) = ((ent)->Cat(toBin_((ens)->nh)));
(ent) = ((ent)->Cat(toBin_((ens)->ni)));
(ent) = ((ent)->Cat(toBin_((ens)->nj)));
(ent) = ((ent)->Cat(toBin_((ens)->nk)));
(ent) = ((ent)->Cat(toBin_((ens)->no)));
(ent) = ((ent)->Cat(toBin_((ens)->lw)));
return ent;
}
// _fromBin
static cam* eoe(cam* eof, Array_<uint8_t>* eog, int64_t* eoh){
cam* eoi;
(eoi) = (new cam());
((eoi)->cao) = (fromBin_<gc*>((eog), (*eoh)));
((eoi)->ne) = (fromBin_<ga*>((eog), (*eoh)));
((eoi)->nf) = (fromBin_<Array_<char16_t>*>((eog), (*eoh)));
((eoi)->ng) = (fromBin_<fx*>((eog), (*eoh)));
((eoi)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eog), (*eoh)));
((eoi)->ni) = (fromBin_<Array_<char16_t>*>((eog), (*eoh)));
((eoi)->nj) = (fromBin_<fx*>((eog), (*eoh)));
((eoi)->nk) = (fromBin_<fy*>((eog), (*eoh)));
((eoi)->no) = (fromBin_<bool>((eog), (*eoh)));
((eoi)->lw) = (fromBin_<int64_t>((eog), (*eoh)));
return eoi;
}
// _dtor
static void eoj(caq* eok){
((eok)->ne) = (nullptr);
((eok)->nf) = (nullptr);
((eok)->ng) = (nullptr);
((eok)->nh) = (nullptr);
((eok)->ni) = (nullptr);
((eok)->nj) = (nullptr);
((eok)->nk) = (nullptr);
}
// _copy
static caq* eol(caq* eom){
caq* eon;
(eon) = (new caq());
((eon)->car) = ((eom)->car);
((eon)->ne) = (copy_((eom)->ne));
((eon)->nf) = (copy_((eom)->nf));
((eon)->ng) = (copy_((eom)->ng));
((eon)->nh) = (copy_((eom)->nh));
((eon)->ni) = (copy_((eom)->ni));
((eon)->nj) = (copy_((eom)->nj));
((eon)->nk) = (copy_((eom)->nk));
((eon)->no) = ((eom)->no);
((eon)->lw) = ((eom)->lw);
return as_<caq>(classTable_, (eon), 78);
}
// _toBin
static Array_<uint8_t>* eoo(caq* eop){
Array_<uint8_t>* eoq;
(eoq) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eoq) = ((eoq)->Cat(toBin_((eop)->car)));
(eoq) = ((eoq)->Cat(toBin_((eop)->ne)));
(eoq) = ((eoq)->Cat(toBin_((eop)->nf)));
(eoq) = ((eoq)->Cat(toBin_((eop)->ng)));
(eoq) = ((eoq)->Cat(toBin_((eop)->nh)));
(eoq) = ((eoq)->Cat(toBin_((eop)->ni)));
(eoq) = ((eoq)->Cat(toBin_((eop)->nj)));
(eoq) = ((eoq)->Cat(toBin_((eop)->nk)));
(eoq) = ((eoq)->Cat(toBin_((eop)->no)));
(eoq) = ((eoq)->Cat(toBin_((eop)->lw)));
return eoq;
}
// _fromBin
static caq* epb(caq* epc, Array_<uint8_t>* epd, int64_t* epe){
caq* epf;
(epf) = (new caq());
((epf)->car) = (fromBin_<int64_t>((epd), (*epe)));
((epf)->ne) = (fromBin_<ga*>((epd), (*epe)));
((epf)->nf) = (fromBin_<Array_<char16_t>*>((epd), (*epe)));
((epf)->ng) = (fromBin_<fx*>((epd), (*epe)));
((epf)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((epd), (*epe)));
((epf)->ni) = (fromBin_<Array_<char16_t>*>((epd), (*epe)));
((epf)->nj) = (fromBin_<fx*>((epd), (*epe)));
((epf)->nk) = (fromBin_<fy*>((epd), (*epe)));
((epf)->no) = (fromBin_<bool>((epd), (*epe)));
((epf)->lw) = (fromBin_<int64_t>((epd), (*epe)));
return epf;
}
// _dtor
static void epg(cav* eph){
((eph)->cbk) = (nullptr);
}
// _copy
static cav* epi(cav* epj){
cav* epk;
(epk) = (new cav());
((epk)->cbk) = (copy_((epj)->cbk));
((epk)->cbm) = ((epj)->cbm);
return as_<cav>(classTable_, (epk), 82);
}
// _toBin
static Array_<uint8_t>* epl(cav* epm){
Array_<uint8_t>* epn;
(epn) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(epn) = ((epn)->Cat(toBin_((epm)->cbk)));
(epn) = ((epn)->Cat(toBin_((epm)->cbm)));
return epn;
}
// _fromBin
static cav* epq(cav* epr, Array_<uint8_t>* eps, int64_t* ept){
cav* epu;
(epu) = (new cav());
((epu)->cbk) = (fromBin_<gc*>((eps), (*ept)));
((epu)->cbm) = (fromBin_<bool>((eps), (*ept)));
return epu;
}
// _dtor
static void epv(cau* epw){
((epw)->epx) = (nullptr);
((epw)->cbc) = (nullptr);
((epw)->cax) = (nullptr);
((epw)->ne) = (nullptr);
((epw)->nf) = (nullptr);
((epw)->ng) = (nullptr);
((epw)->nh) = (nullptr);
((epw)->ni) = (nullptr);
((epw)->nj) = (nullptr);
((epw)->nk) = (nullptr);
}
// _copy
static cau* epy(cau* epz){
cau* eqa;
(eqa) = (new cau());
((eqa)->eqb) = ((epz)->eqb);
((eqa)->epx) = (copy_((epz)->epx));
((eqa)->cbc) = (copy_((epz)->cbc));
((eqa)->cax) = (copy_((epz)->cax));
((eqa)->ne) = (copy_((epz)->ne));
((eqa)->nf) = (copy_((epz)->nf));
((eqa)->ng) = (copy_((epz)->ng));
((eqa)->nh) = (copy_((epz)->nh));
((eqa)->ni) = (copy_((epz)->ni));
((eqa)->nj) = (copy_((epz)->nj));
((eqa)->nk) = (copy_((epz)->nk));
((eqa)->no) = ((epz)->no);
((eqa)->lw) = ((epz)->lw);
return as_<cau>(classTable_, (eqa), 80);
}
// _toBin
static Array_<uint8_t>* eqc(cau* eqd){
Array_<uint8_t>* eqe;
(eqe) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->eqb)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->epx)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->cbc)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->cax)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->ne)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->nf)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->ng)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->nh)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->ni)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->nj)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->nk)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->no)));
(eqe) = ((eqe)->Cat(toBin_((eqd)->lw)));
return eqe;
}
// _fromBin
static cau* eqs(cau* eqt, Array_<uint8_t>* equ, int64_t* eqv){
cau* eqw;
(eqw) = (new cau());
((eqw)->eqb) = (fromBin_<int64_t>((equ), (*eqv)));
((eqw)->epx) = (fromBin_<List_<Array_<char16_t>*>*>((equ), (*eqv)));
((eqw)->cbc) = (fromBin_<List_<cav*>*>((equ), (*eqv)));
((eqw)->cax) = (fromBin_<gc*>((equ), (*eqv)));
((eqw)->ne) = (fromBin_<ga*>((equ), (*eqv)));
((eqw)->nf) = (fromBin_<Array_<char16_t>*>((equ), (*eqv)));
((eqw)->ng) = (fromBin_<fx*>((equ), (*eqv)));
((eqw)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((equ), (*eqv)));
((eqw)->ni) = (fromBin_<Array_<char16_t>*>((equ), (*eqv)));
((eqw)->nj) = (fromBin_<fx*>((equ), (*eqv)));
((eqw)->nk) = (fromBin_<fy*>((equ), (*eqv)));
((eqw)->no) = (fromBin_<bool>((equ), (*eqv)));
((eqw)->lw) = (fromBin_<int64_t>((equ), (*eqv)));
return eqw;
}
// _dtor
static void eqx(cbr* eqy){
((eqy)->cbw) = (nullptr);
((eqy)->ne) = (nullptr);
((eqy)->nf) = (nullptr);
((eqy)->ng) = (nullptr);
((eqy)->nh) = (nullptr);
((eqy)->ni) = (nullptr);
((eqy)->nj) = (nullptr);
((eqy)->nk) = (nullptr);
}
// _copy
static cbr* eqz(cbr* era){
cbr* erb;
(erb) = (new cbr());
((erb)->cbu) = ((era)->cbu);
((erb)->cbw) = (copy_((era)->cbw));
((erb)->ne) = (copy_((era)->ne));
((erb)->nf) = (copy_((era)->nf));
((erb)->ng) = (copy_((era)->ng));
((erb)->nh) = (copy_((era)->nh));
((erb)->ni) = (copy_((era)->ni));
((erb)->nj) = (copy_((era)->nj));
((erb)->nk) = (copy_((era)->nk));
((erb)->no) = ((era)->no);
((erb)->lw) = ((era)->lw);
return as_<cbr>(classTable_, (erb), 84);
}
// _toBin
static Array_<uint8_t>* erc(cbr* erd){
Array_<uint8_t>* ere;
(ere) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ere) = ((ere)->Cat(toBin_((erd)->cbu)));
(ere) = ((ere)->Cat(toBin_((erd)->cbw)));
(ere) = ((ere)->Cat(toBin_((erd)->ne)));
(ere) = ((ere)->Cat(toBin_((erd)->nf)));
(ere) = ((ere)->Cat(toBin_((erd)->ng)));
(ere) = ((ere)->Cat(toBin_((erd)->nh)));
(ere) = ((ere)->Cat(toBin_((erd)->ni)));
(ere) = ((ere)->Cat(toBin_((erd)->nj)));
(ere) = ((ere)->Cat(toBin_((erd)->nk)));
(ere) = ((ere)->Cat(toBin_((erd)->no)));
(ere) = ((ere)->Cat(toBin_((erd)->lw)));
return ere;
}
// _fromBin
static cbr* erq(cbr* err, Array_<uint8_t>* ers, int64_t* ert){
cbr* eru;
(eru) = (new cbr());
((eru)->cbu) = (fromBin_<int64_t>((ers), (*ert)));
((eru)->cbw) = (fromBin_<gc*>((ers), (*ert)));
((eru)->ne) = (fromBin_<ga*>((ers), (*ert)));
((eru)->nf) = (fromBin_<Array_<char16_t>*>((ers), (*ert)));
((eru)->ng) = (fromBin_<fx*>((ers), (*ert)));
((eru)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ers), (*ert)));
((eru)->ni) = (fromBin_<Array_<char16_t>*>((ers), (*ert)));
((eru)->nj) = (fromBin_<fx*>((ers), (*ert)));
((eru)->nk) = (fromBin_<fy*>((ers), (*ert)));
((eru)->no) = (fromBin_<bool>((ers), (*ert)));
((eru)->lw) = (fromBin_<int64_t>((ers), (*ert)));
return eru;
}
// _dtor
static void erv(ccc* erw){
((erw)->ccd) = (nullptr);
((erw)->cce) = (nullptr);
((erw)->ne) = (nullptr);
((erw)->nf) = (nullptr);
((erw)->ng) = (nullptr);
((erw)->nh) = (nullptr);
((erw)->ni) = (nullptr);
((erw)->nj) = (nullptr);
((erw)->nk) = (nullptr);
}
// _copy
static ccc* erx(ccc* ery){
ccc* erz;
(erz) = (new ccc());
((erz)->ccd) = (copy_((ery)->ccd));
((erz)->cce) = (copy_((ery)->cce));
((erz)->ne) = (copy_((ery)->ne));
((erz)->nf) = (copy_((ery)->nf));
((erz)->ng) = (copy_((ery)->ng));
((erz)->nh) = (copy_((ery)->nh));
((erz)->ni) = (copy_((ery)->ni));
((erz)->nj) = (copy_((ery)->nj));
((erz)->nk) = (copy_((ery)->nk));
((erz)->no) = ((ery)->no);
((erz)->lw) = ((ery)->lw);
return as_<ccc>(classTable_, (erz), 86);
}
// _toBin
static Array_<uint8_t>* esa(ccc* esb){
Array_<uint8_t>* esc;
(esc) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(esc) = ((esc)->Cat(toBin_((esb)->ccd)));
(esc) = ((esc)->Cat(toBin_((esb)->cce)));
(esc) = ((esc)->Cat(toBin_((esb)->ne)));
(esc) = ((esc)->Cat(toBin_((esb)->nf)));
(esc) = ((esc)->Cat(toBin_((esb)->ng)));
(esc) = ((esc)->Cat(toBin_((esb)->nh)));
(esc) = ((esc)->Cat(toBin_((esb)->ni)));
(esc) = ((esc)->Cat(toBin_((esb)->nj)));
(esc) = ((esc)->Cat(toBin_((esb)->nk)));
(esc) = ((esc)->Cat(toBin_((esb)->no)));
(esc) = ((esc)->Cat(toBin_((esb)->lw)));
return esc;
}
// _fromBin
static ccc* eso(ccc* esp, Array_<uint8_t>* esq, int64_t* esr){
ccc* ess;
(ess) = (new ccc());
((ess)->ccd) = (fromBin_<gc*>((esq), (*esr)));
((ess)->cce) = (fromBin_<gc*>((esq), (*esr)));
((ess)->ne) = (fromBin_<ga*>((esq), (*esr)));
((ess)->nf) = (fromBin_<Array_<char16_t>*>((esq), (*esr)));
((ess)->ng) = (fromBin_<fx*>((esq), (*esr)));
((ess)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((esq), (*esr)));
((ess)->ni) = (fromBin_<Array_<char16_t>*>((esq), (*esr)));
((ess)->nj) = (fromBin_<fx*>((esq), (*esr)));
((ess)->nk) = (fromBin_<fy*>((esq), (*esr)));
((ess)->no) = (fromBin_<bool>((esq), (*esr)));
((ess)->lw) = (fromBin_<int64_t>((esq), (*esr)));
return ess;
}
// search
static bby* cjt(List_<um*>* est /*members*/, Array_<char16_t>* esu /*name*/){
fx* esw; // def
awe<List_<um*>*>((est), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((est), (new Array_<int64_t>(1, (0LL)))))){
(esw) = ((awi<List_<um*>*, um*>((est), (new Array_<int64_t>(1, (0LL)))))->azl);
if(((((esw)->lw) == (2LL)) && (!eqAddr_((((as_<bgn>(classTable_, (esw), 38))->bgp)->nf), (nullptr)))) && (cmp_((((as_<bgn>(classTable_, (esw), 38))->bgp)->nf), (esu)) == 0)){
return (bbx)(((as_<bgn>(classTable_, (esw), 38))->bgp));
}
ays<List_<um*>*>((est), (new Array_<int64_t>(1, (0LL))));
}
if(!(false)){
throw 0xE9170000U;
}
return nullptr;
}
// buildIf
static void cly(clz* esz /*ast*/, ge* eta /*breakStat*/, ge* etb /*skipStat*/){
bby* etc; // infoMe
List_<cma*>* etl; // items
cma* eto; // item
(etc) = ((bbx)((esz)));
if(eqAddr_(((esz)->ete), (nullptr))){
(cms)(((esz)->etg), (eta), (etb));
if((!eqAddr_(((etc)->bzd), (nullptr))) && ((etc)->bzj)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((etc)->bzd), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
return;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
(etj)(((esz)->ete));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(cms)(((esz)->etg), (eta), (etb));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(etl) = ((esz)->etm);
awe<List_<cma*>*>((etl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cma*>*>((etl), (new Array_<int64_t>(1, (0LL)))))){
(eto) = (awi<List_<cma*>*, cma*>((etl), (new Array_<int64_t>(1, (0LL)))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
(etj)(((eto)->etp));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(cms)(((eto)->etq), (eta), (etb));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<cma*>*>((etl), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((esz)->ets), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
(cms)(((esz)->ets), (eta), (etb));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
if((!eqAddr_(((etc)->bzd), (nullptr))) && ((etc)->bzj)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((etc)->bzd), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void etw(cma* etx){
((etx)->etp) = (nullptr);
((etx)->etq) = (nullptr);
((etx)->ne) = (nullptr);
((etx)->nf) = (nullptr);
((etx)->ng) = (nullptr);
((etx)->nh) = (nullptr);
((etx)->ni) = (nullptr);
((etx)->nj) = (nullptr);
((etx)->nk) = (nullptr);
}
// _copy
static cma* ety(cma* etz){
cma* eua;
(eua) = (new cma());
((eua)->etp) = (copy_((etz)->etp));
((eua)->etq) = (copy_((etz)->etq));
((eua)->ne) = (copy_((etz)->ne));
((eua)->nf) = (copy_((etz)->nf));
((eua)->ng) = (copy_((etz)->ng));
((eua)->nh) = (copy_((etz)->nh));
((eua)->ni) = (copy_((etz)->ni));
((eua)->nj) = (copy_((etz)->nj));
((eua)->nk) = (copy_((etz)->nk));
((eua)->no) = ((etz)->no);
((eua)->lw) = ((etz)->lw);
return as_<cma>(classTable_, (eua), 90);
}
// _toBin
static Array_<uint8_t>* eub(cma* euc){
Array_<uint8_t>* eud;
(eud) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eud) = ((eud)->Cat(toBin_((euc)->etp)));
(eud) = ((eud)->Cat(toBin_((euc)->etq)));
(eud) = ((eud)->Cat(toBin_((euc)->ne)));
(eud) = ((eud)->Cat(toBin_((euc)->nf)));
(eud) = ((eud)->Cat(toBin_((euc)->ng)));
(eud) = ((eud)->Cat(toBin_((euc)->nh)));
(eud) = ((eud)->Cat(toBin_((euc)->ni)));
(eud) = ((eud)->Cat(toBin_((euc)->nj)));
(eud) = ((eud)->Cat(toBin_((euc)->nk)));
(eud) = ((eud)->Cat(toBin_((euc)->no)));
(eud) = ((eud)->Cat(toBin_((euc)->lw)));
return eud;
}
// _fromBin
static cma* eup(cma* euq, Array_<uint8_t>* eur, int64_t* eus){
cma* eut;
(eut) = (new cma());
((eut)->etp) = (fromBin_<gd*>((eur), (*eus)));
((eut)->etq) = (fromBin_<bua*>((eur), (*eus)));
((eut)->ne) = (fromBin_<ga*>((eur), (*eus)));
((eut)->nf) = (fromBin_<Array_<char16_t>*>((eur), (*eus)));
((eut)->ng) = (fromBin_<fx*>((eur), (*eus)));
((eut)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((eur), (*eus)));
((eut)->ni) = (fromBin_<Array_<char16_t>*>((eur), (*eus)));
((eut)->nj) = (fromBin_<fx*>((eur), (*eus)));
((eut)->nk) = (fromBin_<fy*>((eur), (*eus)));
((eut)->no) = (fromBin_<bool>((eur), (*eus)));
((eut)->lw) = (fromBin_<int64_t>((eur), (*eus)));
return eut;
}
// _dtor
static void euu(clz* euv){
((euv)->ete) = (nullptr);
((euv)->etg) = (nullptr);
((euv)->etm) = (nullptr);
((euv)->ets) = (nullptr);
((euv)->buj) = (nullptr);
((euv)->ne) = (nullptr);
((euv)->nf) = (nullptr);
((euv)->ng) = (nullptr);
((euv)->nh) = (nullptr);
((euv)->ni) = (nullptr);
((euv)->nj) = (nullptr);
((euv)->nk) = (nullptr);
}
// _copy
static clz* euw(clz* eux){
clz* euy;
(euy) = (new clz());
((euy)->ete) = (copy_((eux)->ete));
((euy)->etg) = (copy_((eux)->etg));
((euy)->etm) = (copy_((eux)->etm));
((euy)->ets) = (copy_((eux)->ets));
((euy)->buj) = (copy_((eux)->buj));
((euy)->ne) = (copy_((eux)->ne));
((euy)->nf) = (copy_((eux)->nf));
((euy)->ng) = (copy_((eux)->ng));
((euy)->nh) = (copy_((eux)->nh));
((euy)->ni) = (copy_((eux)->ni));
((euy)->nj) = (copy_((eux)->nj));
((euy)->nk) = (copy_((eux)->nk));
((euy)->no) = ((eux)->no);
((euy)->lw) = ((eux)->lw);
return as_<clz>(classTable_, (euy), 88);
}
// _toBin
static Array_<uint8_t>* euz(clz* eva){
Array_<uint8_t>* evb;
(evb) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(evb) = ((evb)->Cat(toBin_((eva)->ete)));
(evb) = ((evb)->Cat(toBin_((eva)->etg)));
(evb) = ((evb)->Cat(toBin_((eva)->etm)));
(evb) = ((evb)->Cat(toBin_((eva)->ets)));
(evb) = ((evb)->Cat(toBin_((eva)->buj)));
(evb) = ((evb)->Cat(toBin_((eva)->ne)));
(evb) = ((evb)->Cat(toBin_((eva)->nf)));
(evb) = ((evb)->Cat(toBin_((eva)->ng)));
(evb) = ((evb)->Cat(toBin_((eva)->nh)));
(evb) = ((evb)->Cat(toBin_((eva)->ni)));
(evb) = ((evb)->Cat(toBin_((eva)->nj)));
(evb) = ((evb)->Cat(toBin_((eva)->nk)));
(evb) = ((evb)->Cat(toBin_((eva)->no)));
(evb) = ((evb)->Cat(toBin_((eva)->lw)));
return evb;
}
// _fromBin
static clz* evq(clz* evr, Array_<uint8_t>* evs, int64_t* evt){
clz* evu;
(evu) = (new clz());
((evu)->ete) = (fromBin_<gd*>((evs), (*evt)));
((evu)->etg) = (fromBin_<bua*>((evs), (*evt)));
((evu)->etm) = (fromBin_<List_<cma*>*>((evs), (*evt)));
((evu)->ets) = (fromBin_<bua*>((evs), (*evt)));
((evu)->buj) = (fromBin_<gb*>((evs), (*evt)));
((evu)->ne) = (fromBin_<ga*>((evs), (*evt)));
((evu)->nf) = (fromBin_<Array_<char16_t>*>((evs), (*evt)));
((evu)->ng) = (fromBin_<fx*>((evs), (*evt)));
((evu)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((evs), (*evt)));
((evu)->ni) = (fromBin_<Array_<char16_t>*>((evs), (*evt)));
((evu)->nj) = (fromBin_<fx*>((evs), (*evt)));
((evu)->nk) = (fromBin_<fy*>((evs), (*evt)));
((evu)->no) = (fromBin_<bool>((evs), (*evt)));
((evu)->lw) = (fromBin_<int64_t>((evs), (*evt)));
return evu;
}
// buildSwitch
static void cmc(cmd* evv /*ast*/, ge* evw /*breakStat*/, ge* evx /*skipStat*/){
bby* evy; // infoMe
bby* evz; // info
bool ewc; // useSwitch
List_<cme*>* ewj; // items
cme* ewm; // item
List_<buc*>* ewn; // items2
buc* ewq; // exprs
List_<cme*>* eww; // items
cme* ewy; // item
List_<buc*>* ewz; // items2
buc* exb; // exprs
bool exh; // first
List_<cme*>* exi; // items
cme* exk; // item
bool exo; // first2
List_<buc*>* exp; // items2
buc* exr; // exprs
(evy) = ((bbx)((evv)));
(evz) = ((bbx)(((evv)->buj)));
if(!((evz)->bca)){
((evz)->bca) = (true);
uh<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), ((evv)->buj));
}
(ewc) = (false);
if(((((bdm)((((evv)->ewf)->pf))) || ((ewg)((((evv)->ewf)->pf)))) || ((ewh)((((evv)->ewf)->pf)))) || (((((evv)->ewf)->pf)->lw) == (1025LL))){
(ewc) = (true);
(ewj) = ((evv)->ewk);
awe<List_<cme*>*>((ewj), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cme*>*>((ewj), (new Array_<int64_t>(1, (0LL)))))){
(ewm) = (awi<List_<cme*>*, cme*>((ewj), (new Array_<int64_t>(1, (0LL)))));
(ewn) = ((ewm)->ewo);
awe<List_<buc*>*>((ewn), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buc*>*>((ewn), (new Array_<int64_t>(1, (0LL)))))){
(ewq) = (awi<List_<buc*>*, buc*>((ewn), (new Array_<int64_t>(1, (0LL)))));
if(((aye<int64_t>((((ewq)->bvy)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL)) || (!eqAddr_(((ewq)->bwd), (nullptr)))){
(ewc) = (false);
goto ewe;
}
ays<List_<buc*>*>((ewn), (new Array_<int64_t>(1, (0LL))));
}
ays<List_<cme*>*>((ewj), (new Array_<int64_t>(1, (0LL))));
}
}
ewe:;
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((evz)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0020', u'\u003D', u'\u0020'))));
(etj)(((evv)->ewf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
if(ewc){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((evz)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
(eww) = ((evv)->ewk);
awe<List_<cme*>*>((eww), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cme*>*>((eww), (new Array_<int64_t>(1, (0LL)))))){
(ewy) = (awi<List_<cme*>*, cme*>((eww), (new Array_<int64_t>(1, (0LL)))));
(ewz) = ((ewy)->ewo);
awe<List_<buc*>*>((ewz), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buc*>*>((ewz), (new Array_<int64_t>(1, (0LL)))))){
(exb) = (awi<List_<buc*>*, buc*>((ewz), (new Array_<int64_t>(1, (0LL)))));
if(!(eqAddr_(((exb)->bwd), (nullptr)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020')));
(etj)(((exb)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003A', u'\u000A')));
ays<List_<buc*>*>((ewz), (new Array_<int64_t>(1, (0LL))));
}
(cms)(((ewy)->exc), (evv), (evx));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
ays<List_<cme*>*>((eww), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((evv)->exe), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
(cms)(((evv)->exe), (evv), (evx));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else{
(exh) = (true);
(exi) = ((evv)->ewk);
awe<List_<cme*>*>((exi), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cme*>*>((exi), (new Array_<int64_t>(1, (0LL)))))){
(exk) = (awi<List_<cme*>*, cme*>((exi), (new Array_<int64_t>(1, (0LL)))));
if(exh){
(exh) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(exo) = (true);
(exp) = ((exk)->ewo);
awe<List_<buc*>*>((exp), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buc*>*>((exp), (new Array_<int64_t>(1, (0LL)))))){
(exr) = (awi<List_<buc*>*, buc*>((exp), (new Array_<int64_t>(1, (0LL)))));
if(exo){
(exo) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0020', u'\u007C', u'\u007C', u'\u0020')));
}
if(eqAddr_(((exr)->bwd), (nullptr))){
if((byn)((((evv)->ewf)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((evz)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028'))));
(etj)(((exr)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((evz)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0028'))));
(etj)(((exr)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((exr)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((evz)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0020', u'\u0026', u'\u0026', u'\u0020'))->Cat(v<Array_<char16_t>*>(((evz)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0028')))));
(etj)(((exr)->bwd));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ays<List_<buc*>*>((exp), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(cms)(((exk)->exc), (evw), (evx));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<cme*>*>((exi), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((evv)->exe), (nullptr))){
if(((exi)->Len()) == (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u007B')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B')));
}
(cms)(((evv)->exe), (evw), (evx));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
if((!eqAddr_(((evy)->bzd), (nullptr))) && ((evy)->bzj)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((evy)->bzd), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void eyi(cme* eyj){
((eyj)->ewo) = (nullptr);
((eyj)->exc) = (nullptr);
((eyj)->ne) = (nullptr);
((eyj)->nf) = (nullptr);
((eyj)->ng) = (nullptr);
((eyj)->nh) = (nullptr);
((eyj)->ni) = (nullptr);
((eyj)->nj) = (nullptr);
((eyj)->nk) = (nullptr);
}
// _copy
static cme* eyk(cme* eyl){
cme* eym;
(eym) = (new cme());
((eym)->ewo) = (copy_((eyl)->ewo));
((eym)->exc) = (copy_((eyl)->exc));
((eym)->ne) = (copy_((eyl)->ne));
((eym)->nf) = (copy_((eyl)->nf));
((eym)->ng) = (copy_((eyl)->ng));
((eym)->nh) = (copy_((eyl)->nh));
((eym)->ni) = (copy_((eyl)->ni));
((eym)->nj) = (copy_((eyl)->nj));
((eym)->nk) = (copy_((eyl)->nk));
((eym)->no) = ((eyl)->no);
((eym)->lw) = ((eyl)->lw);
return as_<cme>(classTable_, (eym), 94);
}
// _toBin
static Array_<uint8_t>* eyn(cme* eyo){
Array_<uint8_t>* eyp;
(eyp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(eyp) = ((eyp)->Cat(toBin_((eyo)->ewo)));
(eyp) = ((eyp)->Cat(toBin_((eyo)->exc)));
(eyp) = ((eyp)->Cat(toBin_((eyo)->ne)));
(eyp) = ((eyp)->Cat(toBin_((eyo)->nf)));
(eyp) = ((eyp)->Cat(toBin_((eyo)->ng)));
(eyp) = ((eyp)->Cat(toBin_((eyo)->nh)));
(eyp) = ((eyp)->Cat(toBin_((eyo)->ni)));
(eyp) = ((eyp)->Cat(toBin_((eyo)->nj)));
(eyp) = ((eyp)->Cat(toBin_((eyo)->nk)));
(eyp) = ((eyp)->Cat(toBin_((eyo)->no)));
(eyp) = ((eyp)->Cat(toBin_((eyo)->lw)));
return eyp;
}
// _fromBin
static cme* ezb(cme* ezc, Array_<uint8_t>* ezd, int64_t* eze){
cme* ezf;
(ezf) = (new cme());
((ezf)->ewo) = (fromBin_<List_<buc*>*>((ezd), (*eze)));
((ezf)->exc) = (fromBin_<bua*>((ezd), (*eze)));
((ezf)->ne) = (fromBin_<ga*>((ezd), (*eze)));
((ezf)->nf) = (fromBin_<Array_<char16_t>*>((ezd), (*eze)));
((ezf)->ng) = (fromBin_<fx*>((ezd), (*eze)));
((ezf)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ezd), (*eze)));
((ezf)->ni) = (fromBin_<Array_<char16_t>*>((ezd), (*eze)));
((ezf)->nj) = (fromBin_<fx*>((ezd), (*eze)));
((ezf)->nk) = (fromBin_<fy*>((ezd), (*eze)));
((ezf)->no) = (fromBin_<bool>((ezd), (*eze)));
((ezf)->lw) = (fromBin_<int64_t>((ezd), (*eze)));
return ezf;
}
// _dtor
static void ezg(cmd* ezh){
((ezh)->ewf) = (nullptr);
((ezh)->ewk) = (nullptr);
((ezh)->exe) = (nullptr);
((ezh)->buj) = (nullptr);
((ezh)->ne) = (nullptr);
((ezh)->nf) = (nullptr);
((ezh)->ng) = (nullptr);
((ezh)->nh) = (nullptr);
((ezh)->ni) = (nullptr);
((ezh)->nj) = (nullptr);
((ezh)->nk) = (nullptr);
}
// _copy
static cmd* ezi(cmd* ezj){
cmd* ezk;
(ezk) = (new cmd());
((ezk)->ewf) = (copy_((ezj)->ewf));
((ezk)->ewk) = (copy_((ezj)->ewk));
((ezk)->exe) = (copy_((ezj)->exe));
((ezk)->buj) = (copy_((ezj)->buj));
((ezk)->ne) = (copy_((ezj)->ne));
((ezk)->nf) = (copy_((ezj)->nf));
((ezk)->ng) = (copy_((ezj)->ng));
((ezk)->nh) = (copy_((ezj)->nh));
((ezk)->ni) = (copy_((ezj)->ni));
((ezk)->nj) = (copy_((ezj)->nj));
((ezk)->nk) = (copy_((ezj)->nk));
((ezk)->no) = ((ezj)->no);
((ezk)->lw) = ((ezj)->lw);
return as_<cmd>(classTable_, (ezk), 92);
}
// _toBin
static Array_<uint8_t>* ezl(cmd* ezm){
Array_<uint8_t>* ezn;
(ezn) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->ewf)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->ewk)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->exe)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->buj)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->ne)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->nf)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->ng)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->nh)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->ni)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->nj)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->nk)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->no)));
(ezn) = ((ezn)->Cat(toBin_((ezm)->lw)));
return ezn;
}
// _fromBin
static cmd* fab(cmd* fac, Array_<uint8_t>* fad, int64_t* fae){
cmd* faf;
(faf) = (new cmd());
((faf)->ewf) = (fromBin_<gd*>((fad), (*fae)));
((faf)->ewk) = (fromBin_<List_<cme*>*>((fad), (*fae)));
((faf)->exe) = (fromBin_<bua*>((fad), (*fae)));
((faf)->buj) = (fromBin_<gb*>((fad), (*fae)));
((faf)->ne) = (fromBin_<ga*>((fad), (*fae)));
((faf)->nf) = (fromBin_<Array_<char16_t>*>((fad), (*fae)));
((faf)->ng) = (fromBin_<fx*>((fad), (*fae)));
((faf)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fad), (*fae)));
((faf)->ni) = (fromBin_<Array_<char16_t>*>((fad), (*fae)));
((faf)->nj) = (fromBin_<fx*>((fad), (*fae)));
((faf)->nk) = (fromBin_<fy*>((fad), (*fae)));
((faf)->no) = (fromBin_<bool>((fad), (*fae)));
((faf)->lw) = (fromBin_<int64_t>((fad), (*fae)));
return faf;
}
// buildWhile
static void cmg(cmh* fag /*ast*/, ge* fah /*breakStat*/, ge* fai /*skipStat*/){
bby* faj; // infoMe
(faj) = ((bbx)((fag)));
if(eqAddr_(((fag)->fal), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u003B', u'\u003B', u'\u0029', u'\u007B', u'\u000A')));
(bfd)(((fag)->fan), (fag), (fag));
if((!eqAddr_(((faj)->bzg), (nullptr))) && ((faj)->bzk)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((faj)->bzg), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if((!eqAddr_(((faj)->bzd), (nullptr))) && ((faj)->bzj)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((faj)->bzd), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
return;
}
if((fag)->fat){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0064', u'\u006F', u'\u007B', u'\u000A')));
(bfd)(((fag)->fan), (fag), (fag));
if((!eqAddr_(((faj)->bzg), (nullptr))) && ((faj)->bzk)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((faj)->bzg), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(etj)(((fag)->fal));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')));
if((!eqAddr_(((faj)->bzd), (nullptr))) && ((faj)->bzj)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((faj)->bzd), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
return;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(etj)(((fag)->fal));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(bfd)(((fag)->fan), (fag), (fag));
if((!eqAddr_(((faj)->bzg), (nullptr))) && ((faj)->bzk)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((faj)->bzg), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if((!eqAddr_(((faj)->bzd), (nullptr))) && ((faj)->bzj)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((faj)->bzd), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void fbd(cmi* fbe){
((fbe)->buj) = (nullptr);
((fbe)->ne) = (nullptr);
((fbe)->nf) = (nullptr);
((fbe)->ng) = (nullptr);
((fbe)->nh) = (nullptr);
((fbe)->ni) = (nullptr);
((fbe)->nj) = (nullptr);
((fbe)->nk) = (nullptr);
}
// _copy
static cmi* fbf(cmi* fbg){
cmi* fbh;
(fbh) = (new cmi());
((fbh)->buj) = (copy_((fbg)->buj));
((fbh)->ne) = (copy_((fbg)->ne));
((fbh)->nf) = (copy_((fbg)->nf));
((fbh)->ng) = (copy_((fbg)->ng));
((fbh)->nh) = (copy_((fbg)->nh));
((fbh)->ni) = (copy_((fbg)->ni));
((fbh)->nj) = (copy_((fbg)->nj));
((fbh)->nk) = (copy_((fbg)->nk));
((fbh)->no) = ((fbg)->no);
((fbh)->lw) = ((fbg)->lw);
return as_<cmi>(classTable_, (fbh), 96);
}
// _toBin
static Array_<uint8_t>* fbi(cmi* fbj){
Array_<uint8_t>* fbk;
(fbk) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fbk) = ((fbk)->Cat(toBin_((fbj)->buj)));
(fbk) = ((fbk)->Cat(toBin_((fbj)->ne)));
(fbk) = ((fbk)->Cat(toBin_((fbj)->nf)));
(fbk) = ((fbk)->Cat(toBin_((fbj)->ng)));
(fbk) = ((fbk)->Cat(toBin_((fbj)->nh)));
(fbk) = ((fbk)->Cat(toBin_((fbj)->ni)));
(fbk) = ((fbk)->Cat(toBin_((fbj)->nj)));
(fbk) = ((fbk)->Cat(toBin_((fbj)->nk)));
(fbk) = ((fbk)->Cat(toBin_((fbj)->no)));
(fbk) = ((fbk)->Cat(toBin_((fbj)->lw)));
return fbk;
}
// _fromBin
static cmi* fbv(cmi* fbw, Array_<uint8_t>* fbx, int64_t* fby){
cmi* fbz;
(fbz) = (new cmi());
((fbz)->buj) = (fromBin_<gb*>((fbx), (*fby)));
((fbz)->ne) = (fromBin_<ga*>((fbx), (*fby)));
((fbz)->nf) = (fromBin_<Array_<char16_t>*>((fbx), (*fby)));
((fbz)->ng) = (fromBin_<fx*>((fbx), (*fby)));
((fbz)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fbx), (*fby)));
((fbz)->ni) = (fromBin_<Array_<char16_t>*>((fbx), (*fby)));
((fbz)->nj) = (fromBin_<fx*>((fbx), (*fby)));
((fbz)->nk) = (fromBin_<fy*>((fbx), (*fby)));
((fbz)->no) = (fromBin_<bool>((fbx), (*fby)));
((fbz)->lw) = (fromBin_<int64_t>((fbx), (*fby)));
return fbz;
}
// _dtor
static void fca(cmh* fcb){
((fcb)->fal) = (nullptr);
((fcb)->fan) = (nullptr);
((fcb)->buj) = (nullptr);
((fcb)->ne) = (nullptr);
((fcb)->nf) = (nullptr);
((fcb)->ng) = (nullptr);
((fcb)->nh) = (nullptr);
((fcb)->ni) = (nullptr);
((fcb)->nj) = (nullptr);
((fcb)->nk) = (nullptr);
}
// _copy
static cmh* fcc(cmh* fcd){
cmh* fce;
(fce) = (new cmh());
((fce)->fal) = (copy_((fcd)->fal));
((fce)->fat) = ((fcd)->fat);
((fce)->fan) = (copy_((fcd)->fan));
((fce)->buj) = (copy_((fcd)->buj));
((fce)->ne) = (copy_((fcd)->ne));
((fce)->nf) = (copy_((fcd)->nf));
((fce)->ng) = (copy_((fcd)->ng));
((fce)->nh) = (copy_((fcd)->nh));
((fce)->ni) = (copy_((fcd)->ni));
((fce)->nj) = (copy_((fcd)->nj));
((fce)->nk) = (copy_((fcd)->nk));
((fce)->no) = ((fcd)->no);
((fce)->lw) = ((fcd)->lw);
return as_<cmh>(classTable_, (fce), 98);
}
// _toBin
static Array_<uint8_t>* fcf(cmh* fcg){
Array_<uint8_t>* fch;
(fch) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fch) = ((fch)->Cat(toBin_((fcg)->fal)));
(fch) = ((fch)->Cat(toBin_((fcg)->fat)));
(fch) = ((fch)->Cat(toBin_((fcg)->fan)));
(fch) = ((fch)->Cat(toBin_((fcg)->buj)));
(fch) = ((fch)->Cat(toBin_((fcg)->ne)));
(fch) = ((fch)->Cat(toBin_((fcg)->nf)));
(fch) = ((fch)->Cat(toBin_((fcg)->ng)));
(fch) = ((fch)->Cat(toBin_((fcg)->nh)));
(fch) = ((fch)->Cat(toBin_((fcg)->ni)));
(fch) = ((fch)->Cat(toBin_((fcg)->nj)));
(fch) = ((fch)->Cat(toBin_((fcg)->nk)));
(fch) = ((fch)->Cat(toBin_((fcg)->no)));
(fch) = ((fch)->Cat(toBin_((fcg)->lw)));
return fch;
}
// _fromBin
static cmh* fcv(cmh* fcw, Array_<uint8_t>* fcx, int64_t* fcy){
cmh* fcz;
(fcz) = (new cmh());
((fcz)->fal) = (fromBin_<gd*>((fcx), (*fcy)));
((fcz)->fat) = (fromBin_<bool>((fcx), (*fcy)));
((fcz)->fan) = (fromBin_<List_<ge*>*>((fcx), (*fcy)));
((fcz)->buj) = (fromBin_<gb*>((fcx), (*fcy)));
((fcz)->ne) = (fromBin_<ga*>((fcx), (*fcy)));
((fcz)->nf) = (fromBin_<Array_<char16_t>*>((fcx), (*fcy)));
((fcz)->ng) = (fromBin_<fx*>((fcx), (*fcy)));
((fcz)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fcx), (*fcy)));
((fcz)->ni) = (fromBin_<Array_<char16_t>*>((fcx), (*fcy)));
((fcz)->nj) = (fromBin_<fx*>((fcx), (*fcy)));
((fcz)->nk) = (fromBin_<fy*>((fcx), (*fcy)));
((fcz)->no) = (fromBin_<bool>((fcx), (*fcy)));
((fcz)->lw) = (fromBin_<int64_t>((fcx), (*fcy)));
return fcz;
}
// buildFor
static void cmk(cml* fda /*ast*/, ge* fdb /*breakStat*/, ge* fdc /*skipStat*/){
bby* fdd; // infoMe
bby* fde; // info
Array_<char16_t>* fdh; // endId
int64_t fdm; // step
(fdd) = ((bbx)((fda)));
(fde) = ((bbx)(((fda)->buj)));
if(!((fde)->bca)){
((fde)->bca) = (true);
uh<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), ((fda)->buj));
}
(fdh) = ((fdi)((((fda)->fdj)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0066', u'\u006F', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fde)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0020', u'\u003D', u'\u0020', u'\u0028'))));
(etj)(((fda)->fdk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>((fdh), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0020', u'\u003D', u'\u0020', u'\u0028'))));
(etj)(((fda)->fdj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fde)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0020'))));
if(!(((((fda)->fdl)->lw) == (67585LL)) && ((bdm)((((fda)->fdj)->pf))))){
throw 0xE9170000U;
}
(fdm) = (static_cast<int64_t>((as_<bvt>(classTable_, ((fda)->fdl), 70))->bvv));
if((fdm) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003C', u'\u003D')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003E', u'\u003D')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u0020'))->Cat(v<Array_<char16_t>*>((fdh), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003B', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fde)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u002B', u'\u003D', u'\u0020', u'\u0028')))));
(etj)(((fda)->fdl));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
(bfd)(((fda)->fdq), (fda), (fda));
if((!eqAddr_(((fdd)->bzg), (nullptr))) && ((fdd)->bzk)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fdd)->bzg), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if((!eqAddr_(((fdd)->bzd), (nullptr))) && ((fdd)->bzj)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fdd)->bzd), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// _dtor
static void fdv(cml* fdw){
((fdw)->fdk) = (nullptr);
((fdw)->fdj) = (nullptr);
((fdw)->fdl) = (nullptr);
((fdw)->fdq) = (nullptr);
((fdw)->buj) = (nullptr);
((fdw)->ne) = (nullptr);
((fdw)->nf) = (nullptr);
((fdw)->ng) = (nullptr);
((fdw)->nh) = (nullptr);
((fdw)->ni) = (nullptr);
((fdw)->nj) = (nullptr);
((fdw)->nk) = (nullptr);
}
// _copy
static cml* fdx(cml* fdy){
cml* fdz;
(fdz) = (new cml());
((fdz)->fdk) = (copy_((fdy)->fdk));
((fdz)->fdj) = (copy_((fdy)->fdj));
((fdz)->fdl) = (copy_((fdy)->fdl));
((fdz)->fdq) = (copy_((fdy)->fdq));
((fdz)->buj) = (copy_((fdy)->buj));
((fdz)->ne) = (copy_((fdy)->ne));
((fdz)->nf) = (copy_((fdy)->nf));
((fdz)->ng) = (copy_((fdy)->ng));
((fdz)->nh) = (copy_((fdy)->nh));
((fdz)->ni) = (copy_((fdy)->ni));
((fdz)->nj) = (copy_((fdy)->nj));
((fdz)->nk) = (copy_((fdy)->nk));
((fdz)->no) = ((fdy)->no);
((fdz)->lw) = ((fdy)->lw);
return as_<cml>(classTable_, (fdz), 100);
}
// _toBin
static Array_<uint8_t>* fea(cml* feb){
Array_<uint8_t>* fec;
(fec) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fec) = ((fec)->Cat(toBin_((feb)->fdk)));
(fec) = ((fec)->Cat(toBin_((feb)->fdj)));
(fec) = ((fec)->Cat(toBin_((feb)->fdl)));
(fec) = ((fec)->Cat(toBin_((feb)->fdq)));
(fec) = ((fec)->Cat(toBin_((feb)->buj)));
(fec) = ((fec)->Cat(toBin_((feb)->ne)));
(fec) = ((fec)->Cat(toBin_((feb)->nf)));
(fec) = ((fec)->Cat(toBin_((feb)->ng)));
(fec) = ((fec)->Cat(toBin_((feb)->nh)));
(fec) = ((fec)->Cat(toBin_((feb)->ni)));
(fec) = ((fec)->Cat(toBin_((feb)->nj)));
(fec) = ((fec)->Cat(toBin_((feb)->nk)));
(fec) = ((fec)->Cat(toBin_((feb)->no)));
(fec) = ((fec)->Cat(toBin_((feb)->lw)));
return fec;
}
// _fromBin
static cml* fer(cml* fes, Array_<uint8_t>* fet, int64_t* feu){
cml* fev;
(fev) = (new cml());
((fev)->fdk) = (fromBin_<gd*>((fet), (*feu)));
((fev)->fdj) = (fromBin_<gd*>((fet), (*feu)));
((fev)->fdl) = (fromBin_<gd*>((fet), (*feu)));
((fev)->fdq) = (fromBin_<List_<ge*>*>((fet), (*feu)));
((fev)->buj) = (fromBin_<gb*>((fet), (*feu)));
((fev)->ne) = (fromBin_<ga*>((fet), (*feu)));
((fev)->nf) = (fromBin_<Array_<char16_t>*>((fet), (*feu)));
((fev)->ng) = (fromBin_<fx*>((fet), (*feu)));
((fev)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fet), (*feu)));
((fev)->ni) = (fromBin_<Array_<char16_t>*>((fet), (*feu)));
((fev)->nj) = (fromBin_<fx*>((fet), (*feu)));
((fev)->nk) = (fromBin_<fy*>((fet), (*feu)));
((fev)->no) = (fromBin_<bool>((fet), (*feu)));
((fev)->lw) = (fromBin_<int64_t>((fet), (*feu)));
return fev;
}
// buildTry
static void cmn(bty* few /*ast*/, ge* fex /*breakStat*/, ge* fey /*skipStat*/){
bby* fez; // infoMe
bby* ffa; // info
bool ffi; // first
List_<bub*>* ffj; // items
bub* ffl; // item
bool ffp; // first2
List_<buc*>* ffq; // items2
buc* ffs; // exprs
(fez) = ((bbx)((few)));
(ffa) = ((bbx)(((few)->buj)));
if(!((ffa)->bca)){
((ffa)->bca) = (true);
uh<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), ((few)->buj));
}
if(!eqAddr_(((few)->bur), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
(cms)(((few)->bun), (fex), (fey));
if(!eqAddr_(((few)->bur), (nullptr))){
(cms)(((few)->bur), (fex), (fey));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(15, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u0069', u'\u006E', u'\u0074', u'\u0036', u'\u0034', u'\u005F', u'\u0074', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ffa)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
(ffi) = (true);
(ffj) = ((few)->buo);
awe<List_<bub*>*>((ffj), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bub*>*>((ffj), (new Array_<int64_t>(1, (0LL)))))){
(ffl) = (awi<List_<bub*>*, bub*>((ffj), (new Array_<int64_t>(1, (0LL)))));
if(ffi){
(ffi) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(ffp) = (true);
(ffq) = ((ffl)->bvl);
awe<List_<buc*>*>((ffq), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buc*>*>((ffq), (new Array_<int64_t>(1, (0LL)))))){
(ffs) = (awi<List_<buc*>*, buc*>((ffq), (new Array_<int64_t>(1, (0LL)))));
if(ffp){
(ffp) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0020', u'\u007C', u'\u007C', u'\u0020')));
}
if(eqAddr_(((ffs)->bwd), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((ffa)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0028'))));
(etj)(((ffs)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((ffs)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ffa)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(4, u'\u0020', u'\u0026', u'\u0026', u'\u0020'))->Cat(v<Array_<char16_t>*>(((ffa)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0028')))));
(etj)(((ffs)->bwd));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ays<List_<buc*>*>((ffq), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(cms)(((ffl)->bvo), (fex), (fey));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<bub*>*>((ffj), (new Array_<int64_t>(1, (0LL))));
}
if(ffi){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007B', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u003B', u'\u000A', u'\u007D', u'\u000A')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if(!eqAddr_(((few)->bur), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(14, u'\u007D', u'\u000A', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028', u'\u002E', u'\u002E', u'\u002E', u'\u0029', u'\u007B', u'\u000A')));
(cms)(((few)->bur), (fex), (fey));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u003B', u'\u000A', u'\u007D', u'\u000A')));
}
if((!eqAddr_(((fez)->bzd), (nullptr))) && ((fez)->bzj)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fez)->bzd), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// buildThrow
static void cmp(cmq* fgg /*ast*/){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020')));
(etj)(((fgg)->fgh));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// _dtor
static void fgi(cmq* fgj){
((fgj)->fgh) = (nullptr);
((fgj)->ne) = (nullptr);
((fgj)->nf) = (nullptr);
((fgj)->ng) = (nullptr);
((fgj)->nh) = (nullptr);
((fgj)->ni) = (nullptr);
((fgj)->nj) = (nullptr);
((fgj)->nk) = (nullptr);
}
// _copy
static cmq* fgk(cmq* fgl){
cmq* fgm;
(fgm) = (new cmq());
((fgm)->fgh) = (copy_((fgl)->fgh));
((fgm)->ne) = (copy_((fgl)->ne));
((fgm)->nf) = (copy_((fgl)->nf));
((fgm)->ng) = (copy_((fgl)->ng));
((fgm)->nh) = (copy_((fgl)->nh));
((fgm)->ni) = (copy_((fgl)->ni));
((fgm)->nj) = (copy_((fgl)->nj));
((fgm)->nk) = (copy_((fgl)->nk));
((fgm)->no) = ((fgl)->no);
((fgm)->lw) = ((fgl)->lw);
return as_<cmq>(classTable_, (fgm), 102);
}
// _toBin
static Array_<uint8_t>* fgn(cmq* fgo){
Array_<uint8_t>* fgp;
(fgp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fgp) = ((fgp)->Cat(toBin_((fgo)->fgh)));
(fgp) = ((fgp)->Cat(toBin_((fgo)->ne)));
(fgp) = ((fgp)->Cat(toBin_((fgo)->nf)));
(fgp) = ((fgp)->Cat(toBin_((fgo)->ng)));
(fgp) = ((fgp)->Cat(toBin_((fgo)->nh)));
(fgp) = ((fgp)->Cat(toBin_((fgo)->ni)));
(fgp) = ((fgp)->Cat(toBin_((fgo)->nj)));
(fgp) = ((fgp)->Cat(toBin_((fgo)->nk)));
(fgp) = ((fgp)->Cat(toBin_((fgo)->no)));
(fgp) = ((fgp)->Cat(toBin_((fgo)->lw)));
return fgp;
}
// _fromBin
static cmq* fha(cmq* fhb, Array_<uint8_t>* fhc, int64_t* fhd){
cmq* fhe;
(fhe) = (new cmq());
((fhe)->fgh) = (fromBin_<gd*>((fhc), (*fhd)));
((fhe)->ne) = (fromBin_<ga*>((fhc), (*fhd)));
((fhe)->nf) = (fromBin_<Array_<char16_t>*>((fhc), (*fhd)));
((fhe)->ng) = (fromBin_<fx*>((fhc), (*fhd)));
((fhe)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fhc), (*fhd)));
((fhe)->ni) = (fromBin_<Array_<char16_t>*>((fhc), (*fhd)));
((fhe)->nj) = (fromBin_<fx*>((fhc), (*fhd)));
((fhe)->nk) = (fromBin_<fy*>((fhc), (*fhd)));
((fhe)->no) = (fromBin_<bool>((fhc), (*fhd)));
((fhe)->lw) = (fromBin_<int64_t>((fhc), (*fhd)));
return fhe;
}
// buildBlock
static void cms(bua* fhf /*ast*/, ge* fhg /*breakStat*/, ge* fhh /*skipStat*/){
bby* fhi; // infoMe
(fhi) = ((bbx)((fhf)));
(bfd)(((fhf)->bum), (fhg), (fhh));
if((!eqAddr_(((fhi)->bzd), (nullptr))) && ((fhi)->bzj)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fhi)->bzd), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u003B', u'\u000A'))));
}
}
// buildRet
static void cmu(cmv* fhl /*ast*/){
if(eqAddr_(((fhl)->fhn), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020')));
(etj)(((fhl)->fhn));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
}
// _dtor
static void fhq(cmv* fhr){
((fhr)->fhn) = (nullptr);
((fhr)->ne) = (nullptr);
((fhr)->nf) = (nullptr);
((fhr)->ng) = (nullptr);
((fhr)->nh) = (nullptr);
((fhr)->ni) = (nullptr);
((fhr)->nj) = (nullptr);
((fhr)->nk) = (nullptr);
}
// _copy
static cmv* fhs(cmv* fht){
cmv* fhu;
(fhu) = (new cmv());
((fhu)->fhn) = (copy_((fht)->fhn));
((fhu)->ne) = (copy_((fht)->ne));
((fhu)->nf) = (copy_((fht)->nf));
((fhu)->ng) = (copy_((fht)->ng));
((fhu)->nh) = (copy_((fht)->nh));
((fhu)->ni) = (copy_((fht)->ni));
((fhu)->nj) = (copy_((fht)->nj));
((fhu)->nk) = (copy_((fht)->nk));
((fhu)->no) = ((fht)->no);
((fhu)->lw) = ((fht)->lw);
return as_<cmv>(classTable_, (fhu), 104);
}
// _toBin
static Array_<uint8_t>* fhv(cmv* fhw){
Array_<uint8_t>* fhx;
(fhx) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fhx) = ((fhx)->Cat(toBin_((fhw)->fhn)));
(fhx) = ((fhx)->Cat(toBin_((fhw)->ne)));
(fhx) = ((fhx)->Cat(toBin_((fhw)->nf)));
(fhx) = ((fhx)->Cat(toBin_((fhw)->ng)));
(fhx) = ((fhx)->Cat(toBin_((fhw)->nh)));
(fhx) = ((fhx)->Cat(toBin_((fhw)->ni)));
(fhx) = ((fhx)->Cat(toBin_((fhw)->nj)));
(fhx) = ((fhx)->Cat(toBin_((fhw)->nk)));
(fhx) = ((fhx)->Cat(toBin_((fhw)->no)));
(fhx) = ((fhx)->Cat(toBin_((fhw)->lw)));
return fhx;
}
// _fromBin
static cmv* fii(cmv* fij, Array_<uint8_t>* fik, int64_t* fil){
cmv* fim;
(fim) = (new cmv());
((fim)->fhn) = (fromBin_<gd*>((fik), (*fil)));
((fim)->ne) = (fromBin_<ga*>((fik), (*fil)));
((fim)->nf) = (fromBin_<Array_<char16_t>*>((fik), (*fil)));
((fim)->ng) = (fromBin_<fx*>((fik), (*fil)));
((fim)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fik), (*fil)));
((fim)->ni) = (fromBin_<Array_<char16_t>*>((fik), (*fil)));
((fim)->nj) = (fromBin_<fx*>((fik), (*fil)));
((fim)->nk) = (fromBin_<fy*>((fik), (*fil)));
((fim)->no) = (fromBin_<bool>((fik), (*fil)));
((fim)->lw) = (fromBin_<int64_t>((fik), (*fil)));
return fim;
}
// buildDo
static void cmx(buy* fin /*ast*/){
(etj)(((fin)->bvi));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// buildBreak
static void cmz(ge* fio /*ast*/, ge* fip /*breakStat*/){
bby* fit; // info
if(!((aye<int64_t>((((fio)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
throw 0xE9170000U;
}
if(eqAddr_(((fio)->nj), (fip))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
}
else{
(fit) = ((bbx)(((fio)->nj)));
((fit)->bzj) = (true);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0067', u'\u006F', u'\u0074', u'\u006F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fit)->bzd), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
}
// buildSkip
static void cnb(ge* fiu /*ast*/, ge* fiv /*skipStat*/){
bby* fiz; // info
if(!((aye<int64_t>((((fiu)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (16843264LL))) == (16843264LL))){
throw 0xE9170000U;
}
if(eqAddr_(((fiu)->nj), (fiv))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0069', u'\u006E', u'\u0075', u'\u0065', u'\u003B', u'\u000A')));
}
else{
(fiz) = ((bbx)(((fiu)->nj)));
((fiz)->bzk) = (true);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0067', u'\u006F', u'\u0074', u'\u006F', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fiz)->bzg), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
}
// buildAssert
static void cnd(cne* fja /*ast*/){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u0028')));
(etj)(((fja)->fjb));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u0029', u'\u0029', u'\u007B', u'\u000A', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020'))->Cat(v<uint32_t>((0xE9170000U), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u0055', u'\u003B', u'\u000A', u'\u007D', u'\u000A'))));
}
// _dtor
static void fjc(cne* fjd){
((fjd)->fjb) = (nullptr);
((fjd)->ne) = (nullptr);
((fjd)->nf) = (nullptr);
((fjd)->ng) = (nullptr);
((fjd)->nh) = (nullptr);
((fjd)->ni) = (nullptr);
((fjd)->nj) = (nullptr);
((fjd)->nk) = (nullptr);
}
// _copy
static cne* fje(cne* fjf){
cne* fjg;
(fjg) = (new cne());
((fjg)->fjb) = (copy_((fjf)->fjb));
((fjg)->ne) = (copy_((fjf)->ne));
((fjg)->nf) = (copy_((fjf)->nf));
((fjg)->ng) = (copy_((fjf)->ng));
((fjg)->nh) = (copy_((fjf)->nh));
((fjg)->ni) = (copy_((fjf)->ni));
((fjg)->nj) = (copy_((fjf)->nj));
((fjg)->nk) = (copy_((fjf)->nk));
((fjg)->no) = ((fjf)->no);
((fjg)->lw) = ((fjf)->lw);
return as_<cne>(classTable_, (fjg), 106);
}
// _toBin
static Array_<uint8_t>* fjh(cne* fji){
Array_<uint8_t>* fjj;
(fjj) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fjj) = ((fjj)->Cat(toBin_((fji)->fjb)));
(fjj) = ((fjj)->Cat(toBin_((fji)->ne)));
(fjj) = ((fjj)->Cat(toBin_((fji)->nf)));
(fjj) = ((fjj)->Cat(toBin_((fji)->ng)));
(fjj) = ((fjj)->Cat(toBin_((fji)->nh)));
(fjj) = ((fjj)->Cat(toBin_((fji)->ni)));
(fjj) = ((fjj)->Cat(toBin_((fji)->nj)));
(fjj) = ((fjj)->Cat(toBin_((fji)->nk)));
(fjj) = ((fjj)->Cat(toBin_((fji)->no)));
(fjj) = ((fjj)->Cat(toBin_((fji)->lw)));
return fjj;
}
// _fromBin
static cne* fju(cne* fjv, Array_<uint8_t>* fjw, int64_t* fjx){
cne* fjy;
(fjy) = (new cne());
((fjy)->fjb) = (fromBin_<gd*>((fjw), (*fjx)));
((fjy)->ne) = (fromBin_<ga*>((fjw), (*fjx)));
((fjy)->nf) = (fromBin_<Array_<char16_t>*>((fjw), (*fjx)));
((fjy)->ng) = (fromBin_<fx*>((fjw), (*fjx)));
((fjy)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fjw), (*fjx)));
((fjy)->ni) = (fromBin_<Array_<char16_t>*>((fjw), (*fjx)));
((fjy)->nj) = (fromBin_<fx*>((fjw), (*fjx)));
((fjy)->nk) = (fromBin_<fy*>((fjw), (*fjx)));
((fjy)->no) = (fromBin_<bool>((fjw), (*fjx)));
((fjy)->lw) = (fromBin_<int64_t>((fjw), (*fjx)));
return fjy;
}
// getId
static Array_<char16_t>* csn(){
Array_<char16_t>* fjz; // curId
Array_<char16_t>* fka; // newId
int64_t fke; // idx
char16_t fkj;
int64_t fkt;
Array_<char16_t>* fkw;
Array_<char16_t>* fla;
Array_<char16_t>* fle;
(fjz) = (bk);
(fka) = (copy_(bk));
while(true){
(fke) = (((fka)->Len()) - (1LL));
while(true){
fkj = (fka)->At(fke);
switch(fkj){
case u'\u007A':
((fka)->At(fke)) = (((fke) == (0LL)) ? (u'\u0041') : (u'\u0030'));
break;
case u'\u0039':
((fka)->At(fke)) = (u'\u0041');
break;
case u'\u005A':
if((fke) == (0LL)){
(fka) = (newArray_<char16_t, Array_<char16_t>*>(1, (((fka)->Len()) + (1LL))));
elx<Array_<char16_t>*, char16_t>((fka), (new Array_<int64_t>(1, (0LL))), (u'\u0061'));
}
else{
((fka)->At(fke)) = (u'\u0061');
(fke) = ((fke) - (1LL));
continue;
}
break;
default:
((fka)->At(fke)) = ((emb)(((fka)->At(fke)), (1LL)));
break;
}
break;
}
fkt = (fka)->Len();
switch(fkt){
case 2LL:
fkw = fka;
if(cmp_(fkw, (new Array_<char16_t>(2, u'\u0064', u'\u006F'))) == 0 || cmp_(fkw, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0 || cmp_(fkw, (new Array_<char16_t>(2, u'\u0069', u'\u006E'))) == 0){
continue;
}
break;
case 3LL:
fla = fka;
if(cmp_(fla, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0 || cmp_(fla, (new Array_<char16_t>(3, u'\u006C', u'\u0065', u'\u0074'))) == 0 || cmp_(fla, (new Array_<char16_t>(3, u'\u006E', u'\u0065', u'\u0077'))) == 0 || cmp_(fla, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0 || cmp_(fla, (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0 || cmp_(fla, (new Array_<char16_t>(3, u'\u004D', u'\u0061', u'\u0070'))) == 0 || cmp_(fla, (new Array_<char16_t>(3, u'\u004E', u'\u0061', u'\u004E'))) == 0 || cmp_(fla, (new Array_<char16_t>(3, u'\u0053', u'\u0065', u'\u0074'))) == 0){
continue;
}
break;
case 4LL:
fle = fka;
if(cmp_(fle, (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u0065', u'\u0076', u'\u0061', u'\u006C'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u006E', u'\u0061', u'\u006D', u'\u0065'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u0074', u'\u0068', u'\u0069', u'\u0073'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u0076', u'\u006F', u'\u0069', u'\u0064'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u0077', u'\u0069', u'\u0074', u'\u0068'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u0044', u'\u0061', u'\u0074', u'\u0065'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u0049', u'\u006E', u'\u0074', u'\u006C'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u004A', u'\u0053', u'\u004F', u'\u004E'))) == 0 || cmp_(fle, (new Array_<char16_t>(4, u'\u004D', u'\u0061', u'\u0074', u'\u0068'))) == 0){
continue;
}
break;
}
break;
}
(bk) = (fka);
return fjz;
}
// search
static bjb* dal(List_<um*>* flg /*members*/, Array_<char16_t>* flh /*name*/){
fx* flj; // def
awe<List_<um*>*>((flg), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((flg), (new Array_<int64_t>(1, (0LL)))))){
(flj) = ((awi<List_<um*>*, um*>((flg), (new Array_<int64_t>(1, (0LL)))))->azl);
if(((((flj)->lw) == (2LL)) && (!eqAddr_((((as_<bgn>(classTable_, (flj), 38))->bgp)->nf), (nullptr)))) && (cmp_((((as_<bgn>(classTable_, (flj), 38))->bgp)->nf), (flh)) == 0)){
return (bja)(((as_<bgn>(classTable_, (flj), 38))->bgp));
}
ays<List_<um*>*>((flg), (new Array_<int64_t>(1, (0LL))));
}
if(!(false)){
throw 0xE9170000U;
}
return nullptr;
}
// buildIf
static void dcv(clz* flm /*ast*/){
bjb* fln; // infoMe
List_<cma*>* fly; // items
cma* fma; // item
(fln) = ((bja)((flm)));
if(eqAddr_(((flm)->ete), (nullptr))){
if(!eqAddr_(((fln)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fln)->csq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u007B', u'\u000A'))));
}
(ddh)(((flm)->etg));
if(!eqAddr_(((fln)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
return;
}
if(!eqAddr_(((fln)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fln)->csq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
(flw)(((flm)->ete));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(ddh)(((flm)->etg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
(fly) = ((flm)->etm);
awe<List_<cma*>*>((fly), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cma*>*>((fly), (new Array_<int64_t>(1, (0LL)))))){
(fma) = (awi<List_<cma*>*, cma*>((fly), (new Array_<int64_t>(1, (0LL)))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
(flw)(((fma)->etp));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(ddh)(((fma)->etq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<cma*>*>((fly), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((flm)->ets), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
(ddh)(((flm)->ets));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
// buildSwitch
static void dcx(cmd* fmd /*ast*/){
bjb* fme; // infoMe
bjb* fmf; // info
bool fmi; // useSwitch
List_<cme*>* fmm; // items
cme* fmo; // item
List_<buc*>* fmp; // items2
buc* fmr; // exprs
List_<cme*>* fmz; // items
cme* fnb; // item
List_<buc*>* fnc; // items2
buc* fne; // exprs
bool fnk; // first
List_<cme*>* fnl; // items
cme* fnn; // item
bool fnr; // first2
List_<buc*>* fns; // items2
buc* fnu; // exprs
(fme) = ((bja)((fmd)));
(fmf) = ((bja)(((fmd)->buj)));
if(!((fmf)->bjd)){
((fmf)->bjd) = (true);
uh<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), ((fmd)->buj));
}
(fmi) = (false);
if(((((bdm)((((fmd)->ewf)->pf))) || ((ewg)((((fmd)->ewf)->pf)))) || ((ewh)((((fmd)->ewf)->pf)))) || (((((fmd)->ewf)->pf)->lw) == (1025LL))){
(fmi) = (true);
(fmm) = ((fmd)->ewk);
awe<List_<cme*>*>((fmm), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cme*>*>((fmm), (new Array_<int64_t>(1, (0LL)))))){
(fmo) = (awi<List_<cme*>*, cme*>((fmm), (new Array_<int64_t>(1, (0LL)))));
(fmp) = ((fmo)->ewo);
awe<List_<buc*>*>((fmp), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buc*>*>((fmp), (new Array_<int64_t>(1, (0LL)))))){
(fmr) = (awi<List_<buc*>*, buc*>((fmp), (new Array_<int64_t>(1, (0LL)))));
if(((aye<int64_t>((((fmr)->bvy)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL)) || (!eqAddr_(((fmr)->bwd), (nullptr)))){
(fmi) = (false);
goto fmk;
}
ays<List_<buc*>*>((fmp), (new Array_<int64_t>(1, (0LL))));
}
ays<List_<cme*>*>((fmm), (new Array_<int64_t>(1, (0LL))));
}
}
fmk:;
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fmf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003D'))));
(flw)(((fmd)->ewf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
if(fmi){
if(!eqAddr_(((fme)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fme)->csq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fmf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
(fmz) = ((fmd)->ewk);
awe<List_<cme*>*>((fmz), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cme*>*>((fmz), (new Array_<int64_t>(1, (0LL)))))){
(fnb) = (awi<List_<cme*>*, cme*>((fmz), (new Array_<int64_t>(1, (0LL)))));
(fnc) = ((fnb)->ewo);
awe<List_<buc*>*>((fnc), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buc*>*>((fnc), (new Array_<int64_t>(1, (0LL)))))){
(fne) = (awi<List_<buc*>*, buc*>((fnc), (new Array_<int64_t>(1, (0LL)))));
if(!(eqAddr_(((fne)->bwd), (nullptr)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0073', u'\u0065', u'\u0020')));
(flw)(((fne)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003A', u'\u000A')));
ays<List_<buc*>*>((fnc), (new Array_<int64_t>(1, (0LL))));
}
(ddh)(((fnb)->exc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
ays<List_<cme*>*>((fmz), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((fmd)->exe), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074', u'\u003A', u'\u000A')));
(ddh)(((fmd)->exe));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u003B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
else{
if(!eqAddr_(((fme)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fme)->csq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u007B', u'\u000A'))));
}
(fnk) = (true);
(fnl) = ((fmd)->ewk);
awe<List_<cme*>*>((fnl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cme*>*>((fnl), (new Array_<int64_t>(1, (0LL)))))){
(fnn) = (awi<List_<cme*>*, cme*>((fnl), (new Array_<int64_t>(1, (0LL)))));
if(fnk){
(fnk) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(fnr) = (true);
(fns) = ((fnn)->ewo);
awe<List_<buc*>*>((fns), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buc*>*>((fns), (new Array_<int64_t>(1, (0LL)))))){
(fnu) = (awi<List_<buc*>*, buc*>((fns), (new Array_<int64_t>(1, (0LL)))));
if(fnr){
(fnr) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007C', u'\u007C')));
}
if(eqAddr_(((fnu)->bwd), (nullptr))){
if((fob)((((fmd)->ewf)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fmf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(6, u'\u002E', u'\u0053', u'\u003D', u'\u003D', u'\u003D', u'\u0028'))));
(flw)(((fnu)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byn)((((fmd)->ewf)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fmf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0028'))));
(flw)(((fnu)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003D', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fmf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u003D', u'\u003D', u'\u003D', u'\u0028'))));
(flw)(((fnu)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((fnu)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003C', u'\u003D'))->Cat(v<Array_<char16_t>*>(((fmf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((fmf)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003C', u'\u003D', u'\u0028')))));
(flw)(((fnu)->bwd));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ays<List_<buc*>*>((fns), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(ddh)(((fnn)->exc));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<cme*>*>((fnl), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((fmd)->exe), (nullptr))){
if(((fnl)->Len()) == (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u007B')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B')));
}
(ddh)(((fmd)->exe));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
if(!eqAddr_(((fme)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
}
// buildWhile
static void dcz(cmh* fon /*ast*/){
bjb* foo; // infoMe
(foo) = ((bja)((fon)));
if(eqAddr_(((fon)->fal), (nullptr))){
if(!eqAddr_(((foo)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((foo)->csq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u003B', u'\u003B', u'\u0029', u'\u007B', u'\u000A')));
(bkn)(((fon)->fan));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
return;
}
if((fon)->fat){
if(!eqAddr_(((foo)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((foo)->csq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0064', u'\u006F', u'\u007B', u'\u000A')));
(bkn)(((fon)->fan));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u007D', u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(flw)(((fon)->fal));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003B', u'\u000A')));
return;
}
if(!eqAddr_(((foo)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((foo)->csq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065', u'\u0028')));
(flw)(((fon)->fal));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(bkn)(((fon)->fan));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
// buildFor
static void ddb(cml* fpa /*ast*/){
bjb* fpb; // infoMe
bjb* fpc; // info
Array_<char16_t>* fpf; // endId
int64_t fpj; // step
(fpb) = ((bja)((fpa)));
(fpc) = ((bja)(((fpa)->buj)));
if(!((fpc)->bjd)){
((fpc)->bjd) = (true);
uh<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), ((fpa)->buj));
}
(fpf) = ((fpg)((((fpa)->fdj)->pf)));
if(!eqAddr_(((fpb)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fpb)->csq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0066', u'\u006F', u'\u0072', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fpc)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(flw)(((fpa)->fdk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u002C'))->Cat(v<Array_<char16_t>*>((fpf), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(flw)(((fpa)->fdj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u003B'))->Cat(v<Array_<char16_t>*>(((fpc)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
if(!(((((fpa)->fdl)->lw) == (67585LL)) && ((bdm)((((fpa)->fdj)->pf))))){
throw 0xE9170000U;
}
(fpj) = (static_cast<int64_t>((as_<bvt>(classTable_, ((fpa)->fdl), 70))->bvv));
if((fpj) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003C', u'\u003D')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003E', u'\u003D')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((fpf), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(1, u'\u003B'))->Cat(v<Array_<char16_t>*>(((fpc)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u002B', u'\u003D', u'\u0028')))));
(flw)(((fpa)->fdl));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u007B', u'\u000A')));
(bkn)(((fpa)->fdq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
// buildTry
static void ddd(bty* fpn /*ast*/){
bjb* fpo; // infoMe
bjb* fpp; // info
bool fpv; // first
List_<bub*>* fpw; // items
bub* fpy; // item
bool fqc; // first2
List_<buc*>* fqd; // items2
buc* fqf; // exprs
(fpo) = ((bja)((fpn)));
(fpp) = ((bja)(((fpn)->buj)));
if(!((fpp)->bjd)){
((fpp)->bjd) = (true);
uh<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), ((fpn)->buj));
}
if(!eqAddr_(((fpo)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fpo)->csq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003A', u'\u000A'))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u0072', u'\u0079', u'\u007B', u'\u000A')));
(ddh)(((fpn)->bun));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u007D', u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068', u'\u0028'))->Cat(v<Array_<char16_t>*>(((fpp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A'))));
(fpv) = (true);
(fpw) = ((fpn)->buo);
awe<List_<bub*>*>((fpw), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bub*>*>((fpw), (new Array_<int64_t>(1, (0LL)))))){
(fpy) = (awi<List_<bub*>*, bub*>((fpw), (new Array_<int64_t>(1, (0LL)))));
if(fpv){
(fpv) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0066', u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u0020', u'\u0069', u'\u0066', u'\u0028')));
}
(fqc) = (true);
(fqd) = ((fpy)->bvl);
awe<List_<buc*>*>((fqd), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buc*>*>((fqd), (new Array_<int64_t>(1, (0LL)))))){
(fqf) = (awi<List_<buc*>*, buc*>((fqd), (new Array_<int64_t>(1, (0LL)))));
if(fqc){
(fqc) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007C', u'\u007C')));
}
if(eqAddr_(((fqf)->bwd), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fpp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u003D', u'\u003D', u'\u003D', u'\u0028'))));
(flw)(((fqf)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((fqf)->bvy));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003C', u'\u003D'))->Cat(v<Array_<char16_t>*>(((fpp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u0026', u'\u0026'))->Cat(v<Array_<char16_t>*>(((fpp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003C', u'\u003D', u'\u0028')))));
(flw)(((fqf)->bwd));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
ays<List_<buc*>*>((fqd), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u007B', u'\u000A')));
(ddh)(((fpy)->bvo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
ays<List_<bub*>*>((fpw), (new Array_<int64_t>(1, (0LL))));
}
if(fpv){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007B', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u000A')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fpp)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u003B', u'\u000A', u'\u007D', u'\u000A'))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
if(!eqAddr_(((fpn)->bur), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079', u'\u007B', u'\u000A')));
(ddh)(((fpn)->bur));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
// buildThrow
static void ddf(cmq* fqr /*ast*/){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020')));
(flw)(((fqr)->fgh));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// buildBlock
static void ddh(bua* fqs /*ast*/){
bjb* fqt; // infoMe
(fqt) = ((bja)((fqs)));
if(!eqAddr_(((fqt)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((fqt)->csq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003A', u'\u007B', u'\u000A'))));
}
(bkn)(((fqs)->bum));
if(!eqAddr_(((fqt)->csq), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u007D', u'\u000A')));
}
}
// buildRet
static void ddj(cmv* fqy /*ast*/){
if(eqAddr_(((fqy)->fhn), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u003B', u'\u000A')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020')));
(flw)(((fqy)->fhn));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
}
// buildDo
static void ddl(buy* frc /*ast*/){
(flw)(((frc)->bvi));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u003B', u'\u000A')));
}
// buildBreak
static void ddn(ge* frd /*ast*/){
bjb* fre; // info
if(!((aye<int64_t>((((frd)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
throw 0xE9170000U;
}
(fre) = ((bja)(((frd)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(6, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B', u'\u0020'))->Cat(v<Array_<char16_t>*>(((fre)->csq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
// buildSkip
static void ddp(ge* frf /*ast*/){
bjb* frg; // info
if(!((aye<int64_t>((((frf)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (16843264LL))) == (16843264LL))){
throw 0xE9170000U;
}
(frg) = ((bja)(((frf)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0063', u'\u006F', u'\u006E', u'\u0074', u'\u0069', u'\u006E', u'\u0075', u'\u0065', u'\u0020'))->Cat(v<Array_<char16_t>*>(((frg)->csq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003B', u'\u000A'))));
}
// buildAssert
static void ddr(cne* frh /*ast*/){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0069', u'\u0066', u'\u0028', u'\u0021', u'\u0028')));
(flw)(((frh)->fjb));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0029', u'\u0029', u'\u007B', u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077', u'\u0020'))->Cat(v<uint32_t>((0xE9170000U), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003B', u'\u007D', u'\u000A'))));
}
// getDefaultValue
static Array_<char16_t>* deq(gc* fri /*type*/){
int64_t frn;
int64_t frs;
if((frk)((fri))){
return new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C');
}
frn = (fri)->lw;
switch(frn){
case 66565LL:
if(!((ewh)((fri)))){
throw 0xE9170000U;
}
return new Array_<char16_t>(1, u'\u0030');
break;
case 1025LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1026LL:
frs = (as_<buh>(classTable_, (fri), 60))->bui;
switch(frs){
case 0LL:
case 2LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 1LL:
return new Array_<char16_t>(1, u'\u0030');
break;
case 3LL:
return new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// escapeChar
static Array_<char16_t>* dfe(char16_t fry /*c*/){
char16_t fsa;
fsa = fry;
if(fsa == (u'\u0022')){
return new Array_<char16_t>(2, u'\u005C', u'\u0022');
}
else if(fsa == (u'\u0027')){
return new Array_<char16_t>(2, u'\u005C', u'\u0027');
}
else if(fsa == (u'\u005C')){
return new Array_<char16_t>(2, u'\u005C', u'\u005C');
}
else if((u'\u0020') <= fsa && fsa <= (u'\u007E')){
return v<char16_t>((fry), (new Array_<int64_t>(1, (0LL))));
}
else{return ((new Array_<char16_t>(2, u'\u005C', u'\u0075'))->Cat(v<Array_<char16_t>*>((auw<Array_<char16_t>*>((v<uint16_t>((static_cast<uint16_t>(fry)), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))), (2LL), (-1LL))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0));
}
}
// initAstImpl
static void dgo(fx* fsg /*ast*/, int64_t fsh /*typeId*/, ga* fsi /*pos*/, Array_<char16_t>* fsj /*name*/, bool fsk /*setParent*/){
((fsg)->lw) = (fsh);
((fsg)->ne) = (fsi);
((fsg)->nf) = (fsj);
((fsg)->ng) = (nullptr);
((fsg)->nh) = (nullptr);
((fsg)->ni) = (nullptr);
((fsg)->nj) = (nullptr);
((fsg)->nk) = (nullptr);
((fsg)->no) = (false);
if(!eqAddr_(((fsg)->nf), (nullptr))){
(dlf)((fsg), (true));
}
if(fsk){
((fsg)->ng) = (fsp<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))));
}
}
// readBuf
static char16_t dhh(){
char16_t fsq; // c
(fsq) = (u'\u0000');
if((ave) == (u'\u0000')){
if((avf) == (u'\u0000')){
do{
(fsq) = (((bhy)((be))) ? (u'\u0000') : ((bny)((be))));
}while((fsq) == (u'\u000D'));
if((fsq) == (u'\u000A')){
(avc) = ((avc) + (1LL));
(avd) = (0LL);
}
else if((fsq) == (u'\u0000')){
if(!(avg)){
(avg) = (true);
(fsq) = (u'\u000A');
(avc) = ((avc) + (1LL));
(avd) = (0LL);
}
}
else{
(avd) = ((avd) + (1LL));
}
}
else{
(fsq) = (avf);
(avf) = (u'\u0000');
}
}
else{
(fsq) = (ave);
(ave) = (u'\u0000');
}
return fsq;
}
// makePos
static ga* dhs(){
return (bpq)((bf), (avc), (avd));
}
// charToStr
static Array_<char16_t>* dht(char16_t fth /*c*/){
char16_t ftj;
ftj = fth;
switch(ftj){
case u'\u0000':
return new Array_<char16_t>(1, u'\u0020');
break;
case u'\u000D':
if(!(false)){
throw 0xE9170000U;
}
break;
case u'\u000A':
return new Array_<char16_t>(8, u'\u0028', u'\u0052', u'\u0045', u'\u0054', u'\u0055', u'\u0052', u'\u004E', u'\u0029');
break;
case u'\u0009':
case u'\u0020':
return new Array_<char16_t>(7, u'\u0028', u'\u0053', u'\u0050', u'\u0041', u'\u0043', u'\u0045', u'\u0029');
break;
}
return v<char16_t>((fth), (new Array_<int64_t>(1, (0LL))));
}
// addSrc
static void dio(Array_<char16_t>* fto /*name*/){
bool ftq;
if(eqAddr_((avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (fto), (&ftq))), (nullptr))){
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>((bd), (new Array_<int64_t>(1, (0LL))), (fto), (nullptr));
}
}
// readFuncAttr
static Array_<char16_t>* dji(){
char16_t fts; // c
Array_<char16_t>* ftv; // buf
int64_t ftw; // pos
(fts) = ((bps)());
if(!(((((((u'\u0061') <= (fts)) && ((fts) <= (u'\u007A'))) || (((u'\u0041') <= (fts)) && ((fts) <= (u'\u005A')))) || (((u'\u0030') <= (fts)) && ((fts) <= (u'\u0039')))) || ((fts) == (u'\u005F'))) || ((fts) == (u'\u002E')))){
(ad)((65548LL), ((dhs)()), (new Array_<Array_<char16_t>*>(1, ((dht)((fts))))));
return new Array_<char16_t>(0);
}
(ftv) = (newArray_<char16_t, Array_<char16_t>*>(1, (128LL)));
(ftw) = (0LL);
do{
if((ftw) == (128LL)){
(ad)((65549LL), ((dhs)()), (new Array_<Array_<char16_t>*>(1, (ftv))));
return new Array_<char16_t>(0);
}
((ftv)->At(ftw)) = (fts);
(ftw) = ((ftw) + (1LL));
(fts) = ((brf)());
}while(((((((u'\u0061') <= (fts)) && ((fts) <= (u'\u007A'))) || (((u'\u0041') <= (fts)) && ((fts) <= (u'\u005A')))) || (((u'\u0030') <= (fts)) && ((fts) <= (u'\u0039')))) || ((fts) == (u'\u005F'))) || ((fts) == (u'\u002E')));
(ave) = (fts);
return auw<Array_<char16_t>*>((ftv), (new Array_<int64_t>(1, (0LL))), (0LL), (ftw));
}
// _or
template<typename T_> static T_ djq(T_ fub /*me_*/, Array_<int64_t>* fuc /*type*/, T_ fud /*n*/){
return fub | fud;
}
// nextCharErr
static void dkw(char16_t fue /*c*/, char16_t fuf /*c2*/){
(ad)((65550LL), ((dhs)()), (new Array_<Array_<char16_t>*>(2, ((dht)((fue))), ((dht)((fuf))))));
(bre)((fuf));
}
// addScopeRefeds
static void dla(fx* fug /*ast*/, Array_<char16_t>* fuh /*name*/){
avl* fui; // scopeRefedItem
((fug)->ni) = (fuh);
(fui) = (new avl());
((fui)->awk) = (fug);
((fui)->axf) = (fsp<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))));
uh<List_<avl*>*, avl*>((bh), (new Array_<int64_t>(1, (0LL))), (fui));
}
// assertNextChar
static void dlb(char16_t fuj /*c*/, bool fuk /*skipSpaces*/){
char16_t ful; // c2
(ful) = ((fuk) ? ((bps)()) : ((brf)()));
if((fuj) != (ful)){
(dkw)((fuj), (ful));
(ave) = (ful);
}
}
// addScopeName
static void dlf(fx* fuo /*ast*/, bool fup /*refuseReserved*/){
fx* fut; // scope
bool fuv;
fx* fux; // parent
bool fuy; // overFunc
fx* fvg; // child
bool fvh;
bool fvk; // flag
int64_t fvp; // kind
if(!(!eqAddr_(((fuo)->nf), (nullptr)))){
throw 0xE9170000U;
}
if((fup) && ((fur)(((fuo)->nf)))){
(ad)((65537LL), ((dhs)()), (new Array_<Array_<char16_t>*>(1, ((fuo)->nf))));
return;
}
(fut) = (fsp<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))));
if(!eqAddr_((avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fut)->nh), (new Array_<int64_t>(1, (0LL))), ((fuo)->nf), (&fuv))), (nullptr))){
(ad)((65537LL), ((dhs)()), (new Array_<Array_<char16_t>*>(1, ((fuo)->nf))));
}
(fux) = (fut);
(fuy) = (false);
while(true){
if(eqAddr_(((fux)->ng), (nullptr))){
break;
}
if(((!eqAddr_(((fux)->nf), (nullptr))) && (cmp_(((fux)->nf), ((fuo)->nf)) == 0)) && (!((((fux)->lw) == (256LL)) && (!eqAddr_(((fux)->ni), (nullptr)))))){
(ad)((65538LL), ((dhs)()), (new Array_<Array_<char16_t>*>(1, ((fuo)->nf))));
return;
}
(fvg) = (avo<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fux)->nh), (new Array_<int64_t>(1, (0LL))), ((fuo)->nf), (&fvh)));
if(!eqAddr_((fvg), (nullptr))){
(fvk) = (false);
if(fuy){
if(((fvg)->lw) == (7LL)){
(fvp) = ((as_<gb>(classTable_, (fvg), 10))->qk);
if((((fvp) == (5LL)) || ((fvp) == (3LL))) || ((fvp) == (2LL))){
(fvk) = (true);
}
}
if((!(fvk)) && ((aye<int64_t>(((fvg)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) == (66048LL))){
(fvk) = (true);
}
}
if(((!(fvk)) && (((fvg)->lw) == (256LL))) && (!eqAddr_(((fvg)->ni), (nullptr)))){
(fvk) = (true);
}
if(!(fvk)){
(ad)((65538LL), ((dhs)()), (new Array_<Array_<char16_t>*>(1, ((fuo)->nf))));
return;
}
}
if(((fux)->lw) == (256LL)){
(fuy) = (true);
}
(fux) = ((fux)->ng);
}
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fut)->nh), (new Array_<int64_t>(1, (0LL))), ((fuo)->nf), (fuo));
}
// _dtor
static void fwa(dli* fwb){
((fwb)->ne) = (nullptr);
((fwb)->nf) = (nullptr);
((fwb)->ng) = (nullptr);
((fwb)->nh) = (nullptr);
((fwb)->ni) = (nullptr);
((fwb)->nj) = (nullptr);
((fwb)->nk) = (nullptr);
}
// _copy
static dli* fwc(dli* fwd){
dli* fwe;
(fwe) = (new dli());
((fwe)->ne) = (copy_((fwd)->ne));
((fwe)->nf) = (copy_((fwd)->nf));
((fwe)->ng) = (copy_((fwd)->ng));
((fwe)->nh) = (copy_((fwd)->nh));
((fwe)->ni) = (copy_((fwd)->ni));
((fwe)->nj) = (copy_((fwd)->nj));
((fwe)->nk) = (copy_((fwd)->nk));
((fwe)->no) = ((fwd)->no);
((fwe)->lw) = ((fwd)->lw);
return as_<dli>(classTable_, (fwe), 108);
}
// _toBin
static Array_<uint8_t>* fwf(dli* fwg){
Array_<uint8_t>* fwh;
(fwh) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(fwh) = ((fwh)->Cat(toBin_((fwg)->ne)));
(fwh) = ((fwh)->Cat(toBin_((fwg)->nf)));
(fwh) = ((fwh)->Cat(toBin_((fwg)->ng)));
(fwh) = ((fwh)->Cat(toBin_((fwg)->nh)));
(fwh) = ((fwh)->Cat(toBin_((fwg)->ni)));
(fwh) = ((fwh)->Cat(toBin_((fwg)->nj)));
(fwh) = ((fwh)->Cat(toBin_((fwg)->nk)));
(fwh) = ((fwh)->Cat(toBin_((fwg)->no)));
(fwh) = ((fwh)->Cat(toBin_((fwg)->lw)));
return fwh;
}
// _fromBin
static dli* fwr(dli* fws, Array_<uint8_t>* fwt, int64_t* fwu){
dli* fwv;
(fwv) = (new dli());
((fwv)->ne) = (fromBin_<ga*>((fwt), (*fwu)));
((fwv)->nf) = (fromBin_<Array_<char16_t>*>((fwt), (*fwu)));
((fwv)->ng) = (fromBin_<fx*>((fwt), (*fwu)));
((fwv)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((fwt), (*fwu)));
((fwv)->ni) = (fromBin_<Array_<char16_t>*>((fwt), (*fwu)));
((fwv)->nj) = (fromBin_<fx*>((fwt), (*fwu)));
((fwv)->nk) = (fromBin_<fy*>((fwt), (*fwu)));
((fwv)->no) = (fromBin_<bool>((fwt), (*fwu)));
((fwv)->lw) = (fromBin_<int64_t>((fwt), (*fwu)));
return fwv;
}
// parseArg
static gb* dlq(int64_t fww /*kind*/, Array_<char16_t>* fwx /*parentClass*/){
gb* fwy; // ast
char16_t fxc; // c
char16_t fxk; // c
int64_t fxo;
(fwy) = (new gb());
(bpp)((fwy), (7LL), ((dhs)()), ((bqk)((true), (false))), (false));
((fwy)->qk) = (fww);
((fwy)->ql) = (false);
if(!eqAddr_((fwx), (nullptr))){
(dla)((fwy), (fwx));
}
(dlb)((u'\u003A'), (true));
(fxc) = ((bps)());
if((fxc) == (u'\u0026')){
if((fww) != (2LL)){
(ad)((65556LL), ((dhs)()), (nullptr));
}
else{
((fwy)->ql) = (true);
}
}
else{
(ave) = (fxc);
}
((fwy)->qf) = ((dmb)());
(fxk) = ((bps)());
if((fxk) == (u'\u003A')){
(dlb)((u'\u003A'), (false));
if(!((fww) != (0LL))){
throw 0xE9170000U;
}
fxo = fww;
switch(fxo){
case 2LL:
(ad)((65557LL), ((dhs)()), (nullptr));
((fwy)->qg) = (nullptr);
break;
case 5LL:
(ad)((65558LL), ((dhs)()), (nullptr));
((fwy)->qg) = (nullptr);
break;
default:
((fwy)->qg) = ((drg)());
break;
}
}
else{
if((fww) == (4LL)){
(ad)((65559LL), ((dhs)()), (nullptr));
}
((fwy)->qg) = (nullptr);
(ave) = (fxk);
}
return fwy;
}
// parseType
static gc* dmb(){
ga* fxv; // pos
gc* fxw; // ast
char16_t fxx; // c
cam* fya; // ast2
Array_<char16_t>* fyc; // id
Array_<char16_t>* fyf; // size
caq* fyi; // ast2
bool fyj;
Array_<char16_t>* fyn;
cau* fyp; // ast2
cav* fyv; // arg
cbr* fzk; // ast2
cbr* fzm; // ast2
cbr* fzo; // ast2
ccc* fzq; // ast2
buh* fzs; // ast2
buh* fzu; // ast2
buh* fzw; // ast2
buh* fzy; // ast2
dli* gaa; // ast2
(fxv) = ((dhs)());
(fxw) = (nullptr);
(fxx) = ((bps)());
if((fxx) == (u'\u005B')){
(dlb)((u'\u005D'), (true));
(fya) = (new cam());
(bpp)((fya), (66561LL), (fxv), (nullptr), (false));
((fya)->cao) = ((dmb)());
(fxw) = (fya);
}
else{
(ave) = (fxx);
(fyc) = ((bqk)((true), (true)));
if((((((fyc)->Len()) >= (4LL)) && (((fyc)->At(0LL)) == (u'\u0062'))) && (((fyc)->At(1LL)) == (u'\u0069'))) && (((fyc)->At(2LL)) == (u'\u0074'))){
(fyf) = (auw<Array_<char16_t>*>((fyc), (new Array_<int64_t>(1, (0LL))), (3LL), (((fyc)->Len()) - (3LL))));
if((((cmp_((fyf), (new Array_<char16_t>(1, u'\u0038'))) == 0) || (cmp_((fyf), (new Array_<char16_t>(2, u'\u0031', u'\u0036'))) == 0)) || (cmp_((fyf), (new Array_<char16_t>(2, u'\u0033', u'\u0032'))) == 0)) || (cmp_((fyf), (new Array_<char16_t>(2, u'\u0036', u'\u0034'))) == 0)){
(fyi) = (new caq());
(bpp)((fyi), (1025LL), (fxv), (nullptr), (false));
((fyi)->car) = (((er)((fyf), (&fyj))) / (8LL));
(fxw) = (fyi);
}
}
if(eqAddr_((fxw), (nullptr))){
fyn = fyc;
if(cmp_(fyn, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
(dlb)((u'\u003C'), (true));
(dlb)((u'\u0028'), (true));
(fyp) = (new cau());
(bpp)((fyp), (66562LL), (fxv), (nullptr), (false));
((fyp)->eqb) = (0LL);
((fyp)->epx) = (new List_<Array_<char16_t>*>());
((fyp)->cbc) = (new List_<cav*>());
((fyp)->cax) = (nullptr);
(fxx) = ((bps)());
if((fxx) != (u'\u0029')){
(ave) = (fxx);
while(true){
(fyv) = (new cav());
(fxx) = ((bps)());
if((fxx) == (u'\u0000')){
break;
}
if((fxx) == (u'\u0026')){
((fyv)->cbm) = (true);
}
else{
((fyv)->cbm) = (false);
(ave) = (fxx);
}
((fyv)->cbk) = ((dmb)());
uh<List_<cav*>*, cav*>(((fyp)->cbc), (new Array_<int64_t>(1, (0LL))), (fyv));
(fxx) = ((bps)());
if((fxx) == (u'\u0029')){
break;
}
if((fxx) != (u'\u002C')){
(dkw)((u'\u002C'), (fxx));
break;
}
}
}
(fxx) = ((bps)());
if((fxx) == (u'\u003A')){
((fyp)->cax) = ((dmb)());
(fxx) = ((bps)());
}
if((fxx) != (u'\u003E')){
(dkw)((u'\u003E'), (fxx));
}
(fxw) = (fyp);
}
else if(cmp_(fyn, (new Array_<char16_t>(4, u'\u006C', u'\u0069', u'\u0073', u'\u0074'))) == 0){
(dlb)((u'\u003C'), (true));
(fzk) = (new cbr());
(bpp)((fzk), (66563LL), (fxv), (nullptr), (false));
((fzk)->cbu) = (0LL);
((fzk)->cbw) = ((dmb)());
(dlb)((u'\u003E'), (true));
(fxw) = (fzk);
}
else if(cmp_(fyn, (new Array_<char16_t>(5, u'\u0073', u'\u0074', u'\u0061', u'\u0063', u'\u006B'))) == 0){
(dlb)((u'\u003C'), (true));
(fzm) = (new cbr());
(bpp)((fzm), (66563LL), (fxv), (nullptr), (false));
((fzm)->cbu) = (1LL);
((fzm)->cbw) = ((dmb)());
(dlb)((u'\u003E'), (true));
(fxw) = (fzm);
}
else if(cmp_(fyn, (new Array_<char16_t>(5, u'\u0071', u'\u0075', u'\u0065', u'\u0075', u'\u0065'))) == 0){
(dlb)((u'\u003C'), (true));
(fzo) = (new cbr());
(bpp)((fzo), (66563LL), (fxv), (nullptr), (false));
((fzo)->cbu) = (2LL);
((fzo)->cbw) = ((dmb)());
(dlb)((u'\u003E'), (true));
(fxw) = (fzo);
}
else if(cmp_(fyn, (new Array_<char16_t>(4, u'\u0064', u'\u0069', u'\u0063', u'\u0074'))) == 0){
(dlb)((u'\u003C'), (true));
(fzq) = (new ccc());
(bpp)((fzq), (66564LL), (fxv), (nullptr), (false));
((fzq)->ccd) = ((dmb)());
(dlb)((u'\u002C'), (true));
((fzq)->cce) = ((dmb)());
(dlb)((u'\u003E'), (true));
(fxw) = (fzq);
}
else if(cmp_(fyn, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074'))) == 0){
(fzs) = (new buh());
(bpp)((fzs), (1026LL), (fxv), (nullptr), (false));
((fzs)->bui) = (0LL);
(fxw) = (fzs);
}
else if(cmp_(fyn, (new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074'))) == 0){
(fzu) = (new buh());
(bpp)((fzu), (1026LL), (fxv), (nullptr), (false));
((fzu)->bui) = (1LL);
(fxw) = (fzu);
}
else if(cmp_(fyn, (new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072'))) == 0){
(fzw) = (new buh());
(bpp)((fzw), (1026LL), (fxv), (nullptr), (false));
((fzw)->bui) = (2LL);
(fxw) = (fzw);
}
else if(cmp_(fyn, (new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C'))) == 0){
(fzy) = (new buh());
(bpp)((fzy), (1026LL), (fxv), (nullptr), (false));
((fzy)->bui) = (3LL);
(fxw) = (fzy);
}
else{(gaa) = (new dli());
(bpp)((gaa), (66565LL), (fxv), (nullptr), (false));
(dla)((gaa), (fyc));
(fxw) = (gaa);
}
}
}
return fxw;
}
// parseStat
static ge* dmi(fx* gab /*block_*/){
ge* gac; // ast
char16_t gae; // c
int64_t gai; // row
int64_t gaj; // col
Array_<char16_t>* gak; // id
Array_<char16_t>* gam;
(gac) = (nullptr);
(gae) = (u'\u0000');
do{
(gae) = ((bps)());
if((gae) == (u'\u0000')){
(ad)((65560LL), ((dhs)()), (nullptr));
return nullptr;
}
}while((gae) == (u'\u000A'));
(ave) = (gae);
(gai) = (avc);
(gaj) = (avd);
(gak) = ((bqk)((true), (false)));
gam = gak;
if(cmp_(gam, (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064'))) == 0){
(gac) = ((gao)((gai), (gaj), (gab)));
}
else if(cmp_(gam, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
(gac) = ((gaq)());
}
else if(cmp_(gam, (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072'))) == 0){
(gac) = ((gas)());
}
else if(cmp_(gam, (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074'))) == 0){
(gac) = ((gau)());
}
else if(cmp_(gam, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073'))) == 0){
(gac) = ((gaw)());
}
else if(cmp_(gam, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073'))) == 0){
(gac) = ((gay)());
}
else if(cmp_(gam, (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D'))) == 0){
(gac) = ((gba)());
}
else if(cmp_(gam, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0){
(gac) = ((gbc)());
}
else if(cmp_(gam, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0069', u'\u0066'))) == 0){
(gac) = ((gbe)((gai), (gaj), (gab)));
}
else if(cmp_(gam, (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065'))) == 0){
(gac) = ((gbg)((gai), (gaj), (gab)));
}
else if(cmp_(gam, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068'))) == 0){
(gac) = ((gbi)((gai), (gaj)));
}
else if(cmp_(gam, (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065'))) == 0){
(gac) = ((gbk)((gai), (gaj), (gab)));
}
else if(cmp_(gam, (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074'))) == 0){
(gac) = ((gbm)((gai), (gaj), (gab)));
}
else if(cmp_(gam, (new Array_<char16_t>(5, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065'))) == 0){
(gac) = ((gbo)());
}
else if(cmp_(gam, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0){
(gac) = ((gbq)((gai), (gaj)));
}
else if(cmp_(gam, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0){
(gac) = ((gbs)((gai), (gaj)));
}
else if(cmp_(gam, (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068'))) == 0){
(gac) = ((gbu)((gai), (gaj), (gab)));
}
else if(cmp_(gam, (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079'))) == 0){
(gac) = ((gbw)((gai), (gaj), (gab)));
}
else if(cmp_(gam, (new Array_<char16_t>(5, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077'))) == 0){
(gac) = ((gby)());
}
else if(cmp_(gam, (new Array_<char16_t>(5, u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B'))) == 0){
(gac) = ((gca)());
}
else if(cmp_(gam, (new Array_<char16_t>(3, u'\u0072', u'\u0065', u'\u0074'))) == 0){
(gac) = ((gcc)());
}
else if(cmp_(gam, (new Array_<char16_t>(2, u'\u0064', u'\u006F'))) == 0){
(gac) = ((gce)());
}
else if(cmp_(gam, (new Array_<char16_t>(5, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B'))) == 0){
(gac) = ((gcg)());
}
else if(cmp_(gam, (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070'))) == 0){
(gac) = ((gci)());
}
else if(cmp_(gam, (new Array_<char16_t>(6, u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074'))) == 0){
(gac) = ((gck)());
}
else{(ad)((65547LL), ((bpq)((bf), (gai), (gaj))), (new Array_<Array_<char16_t>*>(1, (gak))));
(bre)(((brf)()));
return nullptr;
}
if(eqAddr_((gac), (nullptr))){
return nullptr;
}
((gac)->ne) = ((bpq)((bf), (gai), (gaj)));
return gac;
}
// parseExpr
static gd* drg(){
gd* gco; // ast
int64_t gcq; // row
int64_t gcr; // col
char16_t gcs; // c
byf* gcv; // ast2
char16_t gcw; // c2
char16_t gcy;
(gco) = ((gcp)());
(gcq) = (avc);
(gcr) = (avd);
(gcs) = ((bps)());
if((gcs) == (u'\u003A')){
(gcv) = (new byf());
(drl)((gcv), (2050LL), ((bpq)((bf), (gcq), (gcr))));
(gcw) = ((brf)());
gcy = gcw;
switch(gcy){
case u'\u003A':
((gcv)->byg) = (0LL);
break;
case u'\u002B':
((gcv)->byg) = (1LL);
break;
case u'\u002D':
((gcv)->byg) = (2LL);
break;
case u'\u002A':
((gcv)->byg) = (3LL);
break;
case u'\u002F':
((gcv)->byg) = (4LL);
break;
case u'\u0025':
((gcv)->byg) = (5LL);
break;
case u'\u005E':
((gcv)->byg) = (6LL);
break;
case u'\u007E':
((gcv)->byg) = (7LL);
break;
case u'\u0024':
((gcv)->byg) = (25LL);
break;
default:
(ad)((65569LL), ((gcv)->ne), (new Array_<Array_<char16_t>*>(1, ((dht)((gcw))))));
(bre)((gcw));
return nullptr;
break;
}
((gcv)->byj) = (gco);
((gcv)->byk) = ((drg)());
(gco) = (gcv);
}
else{
(ave) = (gcs);
}
return gco;
}
// initAstExpr
static void drl(gd* gdk /*ast*/, int64_t gdl /*typeId*/, ga* gdm /*pos*/){
if(!(is_(classTable_, (gdk), 14))){
throw 0xE9170000U;
}
(dgo)((gdk), (gdl), (gdm), (nullptr), (false));
((gdk)->pf) = (nullptr);
((gdk)->pj) = (0LL);
}
// readComment
static void dsr(){
int64_t gdn; // row
int64_t gdo; // col
char16_t gdp; // c
bool gdv; // esc
bool gel; // esc
(gdn) = (avc);
(gdo) = (avd);
(gdp) = (u'\u0000');
do{
(gdp) = ((brf)());
if((gdp) == (u'\u0000')){
(ad)((65539LL), ((bpq)((bf), (gdn), (gdo))), (nullptr));
return;
}
if((gdp) == (u'\u0022')){
(gdv) = (false);
while(true){
(gdp) = ((gdz)());
if((gdp) == (u'\u0000')){
(ad)((65539LL), ((bpq)((bf), (gdn), (gdo))), (nullptr));
return;
}
if(gdv){
if((gdp) == (u'\u007B')){
(dsr)();
}
(gdv) = (false);
continue;
}
if((gdp) == (u'\u0022')){
break;
}
if((gdp) == (u'\u005C')){
(gdv) = (true);
}
}
}
else if((gdp) == (u'\u0027')){
(gel) = (false);
while(true){
(gdp) = ((gdz)());
if((gdp) == (u'\u0000')){
(ad)((65539LL), ((bpq)((bf), (gdn), (gdo))), (nullptr));
return;
}
if(gel){
(gel) = (false);
continue;
}
if((gdp) == (u'\u0027')){
break;
}
if((gdp) == (u'\u005C')){
(gel) = (true);
}
}
}
else if((gdp) == (u'\u003B')){
while(true){
(gdp) = ((dhh)());
if((gdp) == (u'\u0000')){
(ad)((65539LL), ((bpq)((bf), (gdn), (gdo))), (nullptr));
return;
}
if((gdp) == (u'\u000A')){
break;
}
}
}
}while((gdp) != (u'\u007D'));
}
// initAstImpl
static void dsy(fx* gff /*ast*/, int64_t gfg /*typeId*/, ga* gfh /*pos*/){
((gff)->lw) = (gfg);
((gff)->ne) = (gfh);
((gff)->nf) = (nullptr);
((gff)->ng) = (nullptr);
((gff)->nh) = (nullptr);
((gff)->ni) = (nullptr);
((gff)->nj) = (nullptr);
((gff)->nk) = (nullptr);
((gff)->no) = (false);
}
// rebuildExprRef
static gd* dys(gd* gfi /*ast*/){
fx* gfl; // refItem
int64_t gfp;
fw* gfr; // func_
cau* gft; // type
List_<gb*>* gfv; // items
gb* gfx; // arg
cav* gfy; // arg2
gb* gga; // arg
int64_t ggc;
if(!eqAddr_(((gfi)->nk), (nullptr))){
return as_<gd>(classTable_, ((gfi)->nk), 14);
}
((gfi)->nk) = (gfi);
if(!(((gfi)->lw) == (2062LL))){
throw 0xE9170000U;
}
(gfl) = ((gfi)->nj);
if(eqAddr_((gfl), (nullptr))){
return nullptr;
}
gfp = (gfl)->lw;
switch(gfp){
case 256LL:
(gfr) = (as_<fw>(classTable_, ((gfi)->nj), 8));
(ayx)((gfr));
(gft) = (new cau());
(btv)((gft), (66562LL), ((gfi)->ne));
((gft)->eqb) = ((gfr)->sm);
((gft)->epx) = ((gfr)->sf);
((gft)->cbc) = (new List_<cav*>());
(gfv) = ((gfr)->sg);
awe<List_<gb*>*>((gfv), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((gfv), (new Array_<int64_t>(1, (0LL)))))){
(gfx) = (awi<List_<gb*>*, gb*>((gfv), (new Array_<int64_t>(1, (0LL)))));
(gfy) = (new cav());
((gfy)->cbm) = ((gfx)->ql);
((gfy)->cbk) = ((gfx)->qf);
uh<List_<cav*>*, cav*>(((gft)->cbc), (new Array_<int64_t>(1, (0LL))), (gfy));
ays<List_<gb*>*>((gfv), (new Array_<int64_t>(1, (0LL))));
}
((gft)->cax) = ((gfr)->sh);
((gfi)->pf) = (gft);
((gfi)->pj) = (1LL);
break;
case 7LL:
(gga) = (as_<gb>(classTable_, ((gfi)->nj), 10));
(bxf)((gga));
ggc = (gga)->qk;
switch(ggc){
case 1LL:
((gfi)->pf) = ((gga)->qf);
((gfi)->pj) = (3LL);
break;
case 2LL:
((gfi)->pf) = ((gga)->qf);
((gfi)->pj) = (((gga)->ql) ? (4LL) : (2LL));
break;
case 3LL:
((gfi)->pf) = ((gga)->qf);
((gfi)->pj) = (2LL);
break;
case 4LL:
if(eqAddr_(((gga)->qg), (nullptr))){
return nullptr;
}
if(!((aye<int64_t>((((gga)->qg)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
throw 0xE9170000U;
}
((gfi)->nk) = ((gga)->qg);
return as_<gd>(classTable_, ((gfi)->nk), 14);
break;
case 5LL:
(ad)((131075LL), ((gfi)->ne), (new Array_<Array_<char16_t>*>(1, ((gfi)->ni))));
return nullptr;
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66050LL:
case 16843266LL:
case 66051LL:
if(!(!eqAddr_(((gfl)->nk), (nullptr)))){
throw 0xE9170000U;
}
((gfi)->nj) = ((as_<btz>(classTable_, (gfl), 50))->buj);
((gfi)->pf) = (((as_<btz>(classTable_, (gfl), 50))->buj)->qf);
((gfi)->pj) = (2LL);
break;
default:
if((((aye<int64_t>(((gfl)->lw), (new Array_<int64_t>(1, (0LL))), (2048LL))) == (2048LL)) && (!eqAddr_(((gfl)->nk), (nullptr)))) && ((ewh)(((as_<gd>(classTable_, ((gfl)->nk), 14))->pf)))){
((gfi)->nk) = ((gfl)->nk);
return as_<gd>(classTable_, ((gfi)->nk), 14);
}
(ad)((131136LL), ((gfi)->ne), (new Array_<Array_<char16_t>*>(1, ((gfi)->ni))));
return nullptr;
break;
}
return gfi;
}
// cmpType
static bool eds(gc* ggp /*type1*/, gc* ggq /*type2*/, bool ggr /*strict*/){
int64_t ggu; // typeId1
int64_t ggv; // typeId2
bool ggx; // nullable1
bool ggy; // nullable2
cau* ghh; // func1
cau* ghi; // func2
List_<cav*>* ghj; // args1
List_<cav*>* ghk; // args2
cav* ghm; // arg1
cav* ghn; // arg2
ccc* gic; // dict1
ccc* gid; // dict2
ul* gin; // class1
ul* gio; // class2
ul* gip; // ptr
if((eqAddr_((ggp), (nullptr))) || (eqAddr_((ggq), (nullptr)))){
return false;
}
(ggu) = ((ggp)->lw);
(ggv) = ((ggq)->lw);
(ggx) = ((((ggu) == (66565LL)) && ((((ggp)->nj)->lw) == (6LL))) ? (false) : ((aye<int64_t>((ggu), (new Array_<int64_t>(1, (0LL))), (66560LL))) == (66560LL)));
(ggy) = ((((ggv) == (66565LL)) && ((((ggq)->nj)->lw) == (6LL))) ? (false) : ((aye<int64_t>((ggv), (new Array_<int64_t>(1, (0LL))), (66560LL))) == (66560LL)));
if((((ggx) && ((ggv) == (1027LL))) || (((ggu) == (1027LL)) && (ggy))) || (((ggu) == (1027LL)) && ((ggv) == (1027LL)))){
return true;
}
if(((ggu) == (66561LL)) && ((ggv) == (66561LL))){
return (eds)(((as_<cam>(classTable_, (ggp), 76))->cao), ((as_<cam>(classTable_, (ggq), 76))->cao), (true));
}
if(((ggu) == (1025LL)) && ((ggv) == (1025LL))){
return ((as_<caq>(classTable_, (ggp), 78))->car) == ((as_<caq>(classTable_, (ggq), 78))->car);
}
if(((ggu) == (66562LL)) && ((ggv) == (66562LL))){
(ghh) = (as_<cau>(classTable_, (ggp), 80));
(ghi) = (as_<cau>(classTable_, (ggq), 80));
(ghj) = ((ghh)->cbc);
(ghk) = ((ghi)->cbc);
awe<List_<cav*>*>((ghj), (new Array_<int64_t>(1, (0LL))));
awe<List_<cav*>*>((ghk), (new Array_<int64_t>(1, (0LL))));
while((!(awg<List_<cav*>*>((ghj), (new Array_<int64_t>(1, (0LL)))))) && (!(awg<List_<cav*>*>((ghk), (new Array_<int64_t>(1, (0LL))))))){
(ghm) = (awi<List_<cav*>*, cav*>((ghj), (new Array_<int64_t>(1, (0LL)))));
(ghn) = (awi<List_<cav*>*, cav*>((ghk), (new Array_<int64_t>(1, (0LL)))));
if((((ghm)->cbm) != ((ghn)->cbm)) || (!((eds)(((ghm)->cbk), ((ghn)->cbk), (true))))){
return false;
}
ays<List_<cav*>*>((ghj), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>((ghk), (new Array_<int64_t>(1, (0LL))));
}
if(!((awg<List_<cav*>*>((ghj), (new Array_<int64_t>(1, (0LL))))) && (awg<List_<cav*>*>((ghk), (new Array_<int64_t>(1, (0LL))))))){
return false;
}
if((eqAddr_(((ghh)->cax), (nullptr))) && (eqAddr_(((ghi)->cax), (nullptr)))){
return true;
}
if((eqAddr_(((ghh)->cax), (nullptr))) || (eqAddr_(((ghi)->cax), (nullptr)))){
return false;
}
return (eds)(((ghh)->cax), ((ghi)->cax), (true));
}
if(((ggu) == (66563LL)) && ((ggv) == (66563LL))){
if(((as_<cbr>(classTable_, (ggp), 84))->cbu) != ((as_<cbr>(classTable_, (ggq), 84))->cbu)){
return false;
}
return (eds)(((as_<cbr>(classTable_, (ggp), 84))->cbw), ((as_<cbr>(classTable_, (ggq), 84))->cbw), (true));
}
if(((ggu) == (66564LL)) && ((ggv) == (66564LL))){
(gic) = (as_<ccc>(classTable_, (ggp), 86));
(gid) = (as_<ccc>(classTable_, (ggq), 86));
return ((eds)(((gic)->ccd), ((gid)->ccd), (true))) && ((eds)(((gic)->cce), ((gid)->cce), (true)));
}
if(((ggu) == (1026LL)) && ((ggv) == (1026LL))){
return ((as_<buh>(classTable_, (ggp), 60))->bui) == ((as_<buh>(classTable_, (ggq), 60))->bui);
}
if(((ggu) == (66565LL)) && ((ggv) == (66565LL))){
if(!(((((ggp)->nj)->lw) != (4LL)) && ((((ggq)->nj)->lw) != (4LL)))){
throw 0xE9170000U;
}
if(((((ggp)->nj)->lw) == (5LL)) && ((((ggq)->nj)->lw) == (5LL))){
if(ggr){
return eqAddr_((as_<ul>(classTable_, ((ggp)->nj), 22)), (as_<ul>(classTable_, ((ggq)->nj), 22)));
}
else{
(gin) = (as_<ul>(classTable_, ((ggp)->nj), 22));
(gio) = (as_<ul>(classTable_, ((ggq)->nj), 22));
(gip) = (nullptr);
(gip) = (gin);
while(!eqAddr_((gip), (nullptr))){
if(eqAddr_((gip), (gio))){
return true;
}
(gip) = (as_<ul>(classTable_, ((gip)->nj), 22));
}
return false;
}
}
return eqAddr_(((ggp)->nj), ((ggq)->nj));
}
if((((((ggu) == (66565LL)) && ((((ggp)->nj)->lw) == (6LL))) || ((ggu) == (1028LL))) && ((((ggv) == (66565LL)) && ((((ggq)->nj)->lw) == (6LL))) || ((ggv) == (1028LL)))) && (!(((ggu) == (1028LL)) && ((ggv) == (1028LL))))){
return true;
}
return false;
}
// rebuildEnumElement
static bvt* edv(gd* giv /*enumElement*/, gc* giw /*type*/){
bvt* gix; // enumElement2
if(!(((giv)->lw) == (67587LL))){
throw 0xE9170000U;
}
if(!((ewh)((giw)))){
throw 0xE9170000U;
}
(gix) = (new bvt());
(bvd)((gix), (67585LL), ((giv)->ne));
((gix)->bvv) = ((giy)((as_<ehf>(classTable_, (giv), 130)), (as_<brc>(classTable_, ((giw)->nj), 48))));
((gix)->pf) = (giw);
(gix) = (as_<bvt>(classTable_, ((egz)((gix))), 70));
return gix;
}
// rebuildClass
static void eek(ul* giz /*ast*/){
fw* gjc; // dtor
fw* gjd; // copy
fw* gje; // toBin
fw* gjf; // fromBin
if(!eqAddr_(((giz)->nk), (nullptr))){
return;
}
((giz)->nk) = (giz);
(gjc) = (nullptr);
(gjd) = (nullptr);
(gje) = (nullptr);
(gjf) = (nullptr);
(gjg)((giz), (&gjc), (&gjd), (&gje), (&gjf));
(gjh)((giz), (gjc), (gjd), (gje), (gjf));
(ayx)((gjc));
(ayx)((gjd));
(ayx)((gje));
(ayx)((gjf));
}
// rebuildEnum
static void eem(brc* gji /*ast*/){
dli* gjl; // type
int64_t gjm; // defaultNum
Dict_<int64_t, bool>* gjn; // enumValues
List_<gd*>* gjo; // items
gd* gjs; // item
Array_<char16_t>* gjt; // itemName
bvt* gjy; // item2
int64_t gkg; // value
bool gki;
if(!eqAddr_(((gji)->nk), (nullptr))){
return;
}
((gji)->nk) = (gji);
(gjl) = (new dli());
(btv)((gjl), (66565LL), ((gji)->ne));
((gjl)->nk) = (gjl);
((gjl)->nj) = (gji);
(gjm) = (-1LL);
(gjn) = (new Dict_<int64_t, bool>());
(gjo) = ((gji)->dqo);
awe<List_<gd*>*>((gjo), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((gjo), (new Array_<int64_t>(1, (0LL)))))){
(gjs) = (awi<List_<gd*>*, gd*>((gjo), (new Array_<int64_t>(1, (0LL)))));
(gjt) = ((gjs)->nf);
(gjs) = ((byb)((gjs), (eqAddr_(((gjs)->pf), (nullptr)))));
if(eqAddr_((gjs), (nullptr))){
continue;
}
((gjs)->nf) = (gjt);
bfk<List_<gd*>*, gd*>((gjo), (new Array_<int64_t>(1, (0LL))), (gjs));
bfm<List_<gd*>*>((gjo), (new Array_<int64_t>(1, (0LL))));
if((((gjs)->lw) != (67585LL)) || ((!eqAddr_(((gjs)->pf), (nullptr))) && (!((bdm)(((gjs)->pf)))))){
(ad)((131087LL), ((gji)->ne), (new Array_<Array_<char16_t>*>(2, ((gji)->nf), ((gjs)->nf))));
return;
}
(gjy) = (as_<bvt>(classTable_, (gjs), 70));
if(eqAddr_(((gjs)->pf), (nullptr))){
if((gjm) == (9223372036854775807LL)){
(ad)((131088LL), ((gji)->ne), (new Array_<Array_<char16_t>*>(2, ((gji)->nf), ((gjs)->nf))));
return;
}
(gjm) = ((gjm) + (1LL));
((gjy)->bvv) = (static_cast<uint64_t>(gjm));
}
else{
(gjm) = (static_cast<int64_t>((gjy)->bvv));
}
(gkg) = (static_cast<int64_t>((gjy)->bvv));
if(avo<Dict_<int64_t, bool>*, int64_t, bool>((gjn), (new Array_<int64_t>(1, (0LL))), (gkg), (&gki))){
(ad)((131089LL), ((gji)->ne), (new Array_<Array_<char16_t>*>(3, ((gji)->nf), ((gjs)->nf), (v<int64_t>((gkg), (new Array_<int64_t>(1, (0LL))))))));
return;
}
dv<Dict_<int64_t, bool>*, int64_t, bool>((gjn), (new Array_<int64_t>(1, (0LL))), (gkg), (true));
((gjs)->pf) = (gjl);
}
}
// rebuildAlias
static void eeo(bqw* gkk /*ast*/, bqw* gkl /*parent*/){
if(eqAddr_((gkk), (gkl))){
(ad)((131079LL), ((gkl)->ne), (new Array_<Array_<char16_t>*>(1, ((gkl)->nf))));
((gkk)->dns) = (nullptr);
return;
}
if(!eqAddr_(((gkk)->nk), (nullptr))){
return;
}
((gkk)->nk) = (gkk);
((gkk)->dns) = ((bxi)(((gkk)->dns), (gkk)));
}
// rebuildExpr1
static gd* efs(eft* gkq /*ast*/){
gc* gkw; // childType
int64_t gky;
bvt* gln; // expr
ehi* glo; // expr
bvt* glw; // expr
buh* gmd; // type
if(!eqAddr_(((gkq)->nk), (nullptr))){
return as_<gd>(classTable_, ((gkq)->nk), 14);
}
((gkq)->nk) = (gkq);
((gkq)->gkt) = ((byb)(((gkq)->gkt), (false)));
if(eqAddr_(((gkq)->gkt), (nullptr))){
return nullptr;
}
if(!(eqAddr_(((gkq)->pf), (nullptr)))){
throw 0xE9170000U;
}
(gkw) = (((gkq)->gkt)->pf);
gky = (gkq)->gkz;
switch(gky){
case 0LL:
if((((bdm)((gkw))) || ((glc)((gkw)))) || (((gkw)->lw) == (1025LL))){
if((aye<int64_t>((((gkq)->gkt)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)){
((gkq)->nk) = ((gkq)->gkt);
return as_<gd>(classTable_, ((gkq)->nk), 14);
}
((gkq)->pf) = (gkw);
}
break;
case 1LL:
if(((bdm)((gkw))) || ((glc)((gkw)))){
if((aye<int64_t>((((gkq)->gkt)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)){
if((bdm)((gkw))){
(gln) = (new bvt());
(bvd)((gln), (67585LL), ((gkq)->ne));
((gln)->pf) = (gkw);
((gln)->bvv) = (static_cast<uint64_t>(-(static_cast<int64_t>((as_<bvt>(classTable_, ((gkq)->gkt), 70))->bvv))));
(gln) = (as_<bvt>(classTable_, ((egz)((gln))), 70));
((gkq)->nk) = (gln);
return as_<gd>(classTable_, ((gkq)->nk), 14);
}
if(!((glc)((gkw)))){
throw 0xE9170000U;
}
(glo) = (new ehi());
(bvd)((glo), (67588LL), ((gkq)->ne));
((glo)->pf) = (gkw);
((glo)->glp) = (-((as_<ehi>(classTable_, ((gkq)->gkt), 132))->glp));
(glo) = (as_<ehi>(classTable_, ((ehh)((glo))), 132));
((gkq)->nk) = (glo);
return as_<gd>(classTable_, ((gkq)->nk), 14);
}
((gkq)->pf) = (gkw);
}
break;
case 2LL:
if((gls)((gkw))){
if((((gkq)->gkt)->lw) == (67585LL)){
(glw) = (new bvt());
(bvd)((glw), (67585LL), ((gkq)->ne));
((glw)->pf) = (gkw);
((glw)->bvv) = ((((as_<bvt>(classTable_, ((gkq)->gkt), 70))->bvv) != (0x0000000000000000ULL)) ? (0x0000000000000000ULL) : (0x0000000000000001ULL));
(glw) = (as_<bvt>(classTable_, ((egz)((glw))), 70));
((gkq)->nk) = (glw);
return as_<gd>(classTable_, ((gkq)->nk), 14);
}
((gkq)->pf) = (gkw);
}
break;
case 3LL:
if(((((ele)((gkw))) || (((gkw)->lw) == (66561LL))) || (((gkw)->lw) == (66563LL))) || (((gkw)->lw) == (66564LL))){
((gkq)->pf) = (gkw);
}
break;
case 4LL:
if(((((gkw)->lw) == (66561LL)) || (((gkw)->lw) == (66563LL))) || (((gkw)->lw) == (66564LL))){
(gmd) = (new buh());
(btv)((gmd), (1026LL), ((gkq)->ne));
((gmd)->bui) = (0LL);
((gkq)->pf) = (gmd);
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(eqAddr_(((gkq)->pf), (nullptr))){
(ad)((131113LL), ((gkq)->ne), (nullptr));
return nullptr;
}
((gkq)->pj) = (1LL);
return gkq;
}
// _dtor
static void gmh(eft* gmi){
((gmi)->gkt) = (nullptr);
((gmi)->pf) = (nullptr);
((gmi)->ne) = (nullptr);
((gmi)->nf) = (nullptr);
((gmi)->ng) = (nullptr);
((gmi)->nh) = (nullptr);
((gmi)->ni) = (nullptr);
((gmi)->nj) = (nullptr);
((gmi)->nk) = (nullptr);
}
// _copy
static eft* gmj(eft* gmk){
eft* gml;
(gml) = (new eft());
((gml)->gkz) = ((gmk)->gkz);
((gml)->gkt) = (copy_((gmk)->gkt));
((gml)->pf) = (copy_((gmk)->pf));
((gml)->pj) = ((gmk)->pj);
((gml)->ne) = (copy_((gmk)->ne));
((gml)->nf) = (copy_((gmk)->nf));
((gml)->ng) = (copy_((gmk)->ng));
((gml)->nh) = (copy_((gmk)->nh));
((gml)->ni) = (copy_((gmk)->ni));
((gml)->nj) = (copy_((gmk)->nj));
((gml)->nk) = (copy_((gmk)->nk));
((gml)->no) = ((gmk)->no);
((gml)->lw) = ((gmk)->lw);
return as_<eft>(classTable_, (gml), 110);
}
// _toBin
static Array_<uint8_t>* gmm(eft* gmn){
Array_<uint8_t>* gmo;
(gmo) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->gkz)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->gkt)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->pf)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->pj)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->ne)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->nf)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->ng)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->nh)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->ni)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->nj)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->nk)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->no)));
(gmo) = ((gmo)->Cat(toBin_((gmn)->lw)));
return gmo;
}
// _fromBin
static eft* gnc(eft* gnd, Array_<uint8_t>* gne, int64_t* gnf){
eft* gng;
(gng) = (new eft());
((gng)->gkz) = (fromBin_<int64_t>((gne), (*gnf)));
((gng)->gkt) = (fromBin_<gd*>((gne), (*gnf)));
((gng)->pf) = (fromBin_<gc*>((gne), (*gnf)));
((gng)->pj) = (fromBin_<int64_t>((gne), (*gnf)));
((gng)->ne) = (fromBin_<ga*>((gne), (*gnf)));
((gng)->nf) = (fromBin_<Array_<char16_t>*>((gne), (*gnf)));
((gng)->ng) = (fromBin_<fx*>((gne), (*gnf)));
((gng)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gne), (*gnf)));
((gng)->ni) = (fromBin_<Array_<char16_t>*>((gne), (*gnf)));
((gng)->nj) = (fromBin_<fx*>((gne), (*gnf)));
((gng)->nk) = (fromBin_<fy*>((gne), (*gnf)));
((gng)->no) = (fromBin_<bool>((gne), (*gnf)));
((gng)->lw) = (fromBin_<int64_t>((gne), (*gnf)));
return gng;
}
// rebuildExpr2
static gd* efv(byf* gnh /*ast*/){
bool gnr; // correct
int64_t gnt;
ul* gnz; // ptr
bool gok; // value
buh* gou; // type
bool gpd; // value
gc* gpe; // children0Type
uint64_t gph; // n1
uint64_t gpi; // n2
int64_t gpk;
int64_t gpr; // n1
int64_t gps; // n2
int64_t gpu;
double gqb; // n1
double gqc; // n2
int64_t gqe;
int64_t gql; // cmp
int64_t gqp;
bvt* gqv; // expr
buh* grb; // type
bool grj; // value
gc* grk; // children0Type
uint64_t grn; // n1
uint64_t gro; // n2
int64_t grq;
double grv; // n1
double grw; // n2
int64_t gry;
int64_t gsd; // cmp
int64_t gsf;
bvt* gsj; // expr
buh* gsn; // type
Array_<char16_t>* gsx; // s1
Array_<char16_t>* gsy; // s2
ehc* gsz; // expr
uint64_t gth; // n1
uint64_t gti; // n2
int64_t gtk;
bvt* gua; // expr
int64_t gud; // n1
int64_t gue; // n2
int64_t gug;
bvt* guw; // expr
double guy; // n1
double guz; // n2
int64_t gvb;
ehi* gvr; // expr
if(!eqAddr_(((gnh)->nk), (nullptr))){
return as_<gd>(classTable_, ((gnh)->nk), 14);
}
((gnh)->nk) = (gnh);
((gnh)->byj) = ((byb)(((gnh)->byj), (false)));
if(eqAddr_(((gnh)->byj), (nullptr))){
return nullptr;
}
((gnh)->byk) = ((byb)(((gnh)->byk), (false)));
if(eqAddr_(((gnh)->byk), (nullptr))){
return nullptr;
}
if(!((eds)((((gnh)->byk)->pf), (((gnh)->byj)->pf), (false)))){
(ad)((131113LL), ((gnh)->ne), (nullptr));
return nullptr;
}
(gnr) = (false);
gnt = (gnh)->byg;
switch(gnt){
case 0LL:
if((((gnh)->byj)->pj) == (1LL)){
(ad)((131114LL), ((gnh)->ne), (nullptr));
return nullptr;
}
if(((ele)((((gnh)->byj)->pf))) && ((ele)((((gnh)->byk)->pf)))){
(gnz) = (as_<ul>(classTable_, ((((gnh)->byk)->pf)->nj), 22));
while(!eqAddr_(((((gnh)->byj)->pf)->nj), (gnz))){
(gnz) = (as_<ul>(classTable_, ((gnz)->nj), 22));
if(eqAddr_((gnz), (nullptr))){
(ad)((131113LL), ((gnh)->ne), (nullptr));
return nullptr;
}
}
}
if(((((gnh)->byk)->pf)->lw) == (1028LL)){
((gnh)->byk) = ((edv)(((gnh)->byk), (((gnh)->byj)->pf)));
}
((gnh)->pf) = (nullptr);
(gnr) = (true);
break;
case 8LL:
case 9LL:
if((gls)((((gnh)->byj)->pf))){
if((((gnh)->byj)->lw) == (67585LL)){
(gok) = (((as_<bvt>(classTable_, ((gnh)->byj), 70))->bvv) != (0x0000000000000000ULL));
if(((gnh)->byg) == (8LL)){
((gnh)->nk) = ((gok) ? ((gnh)->byj) : ((gnh)->byk));
}
else{
if(!(((gnh)->byg) == (9LL))){
throw 0xE9170000U;
}
((gnh)->nk) = ((!(gok)) ? ((gnh)->byj) : ((gnh)->byk));
}
return as_<gd>(classTable_, ((gnh)->nk), 14);
}
((gnh)->pf) = (((gnh)->byj)->pf);
(gnr) = (true);
}
break;
case 10LL:
case 11LL:
case 12LL:
case 13LL:
if((((((gnh)->byj)->pf)->lw) == (1027LL)) || (((((gnh)->byk)->pf)->lw) == (1027LL))){
(ad)((131115LL), ((gnh)->ne), (nullptr));
return nullptr;
}
if((gos)((((gnh)->byj)->pf), (true))){
(gou) = (new buh());
(btv)((gou), (1026LL), ((gnh)->ne));
((gou)->bui) = (3LL);
if(((((gnh)->byj)->pf)->lw) == (1028LL)){
if(((((gnh)->byk)->pf)->lw) == (1028LL)){
if(!((((gnh)->byj)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((gnh)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<ehf>(classTable_, ((gnh)->byj), 130))->goz))));
return nullptr;
}
((gnh)->byj) = ((edv)(((gnh)->byj), (((gnh)->byk)->pf)));
}
else if(((((gnh)->byk)->pf)->lw) == (1028LL)){
((gnh)->byk) = ((edv)(((gnh)->byk), (((gnh)->byj)->pf)));
}
if(((aye<int64_t>((((gnh)->byj)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((aye<int64_t>((((gnh)->byk)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
(gpd) = (false);
(gpe) = (((gnh)->byj)->pf);
if((((gpe)->lw) == (1025LL)) || ((ewg)((gpe)))){
(gph) = ((as_<bvt>(classTable_, ((gnh)->byj), 70))->bvv);
(gpi) = ((as_<bvt>(classTable_, ((gnh)->byk), 70))->bvv);
gpk = (gnh)->byg;
switch(gpk){
case 10LL:
(gpd) = ((gph) < (gpi));
break;
case 11LL:
(gpd) = ((gph) > (gpi));
break;
case 12LL:
(gpd) = ((gph) <= (gpi));
break;
case 13LL:
(gpd) = ((gph) >= (gpi));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if(((bdm)((gpe))) || ((ewh)((gpe)))){
(gpr) = (static_cast<int64_t>((as_<bvt>(classTable_, ((gnh)->byj), 70))->bvv));
(gps) = (static_cast<int64_t>((as_<bvt>(classTable_, ((gnh)->byk), 70))->bvv));
gpu = (gnh)->byg;
switch(gpu){
case 10LL:
(gpd) = ((gpr) < (gps));
break;
case 11LL:
(gpd) = ((gpr) > (gps));
break;
case 12LL:
(gpd) = ((gpr) <= (gps));
break;
case 13LL:
(gpd) = ((gpr) >= (gps));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if((glc)((gpe))){
(gqb) = ((as_<ehi>(classTable_, ((gnh)->byj), 132))->glp);
(gqc) = ((as_<ehi>(classTable_, ((gnh)->byk), 132))->glp);
gqe = (gnh)->byg;
switch(gqe){
case 10LL:
(gpd) = ((gqb) < (gqc));
break;
case 11LL:
(gpd) = ((gqb) > (gqc));
break;
case 12LL:
(gpd) = ((gqb) <= (gqc));
break;
case 13LL:
(gpd) = ((gqb) >= (gqc));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((fob)((gpe)))){
throw 0xE9170000U;
}
(gql) = ((gqm)(((as_<ehc>(classTable_, ((gnh)->byj), 128))->gqn), ((as_<ehc>(classTable_, ((gnh)->byk), 128))->gqn)));
gqp = (gnh)->byg;
switch(gqp){
case 10LL:
(gpd) = ((gql) < (0LL));
break;
case 11LL:
(gpd) = ((gql) > (0LL));
break;
case 12LL:
(gpd) = ((gql) <= (0LL));
break;
case 13LL:
(gpd) = ((gql) >= (0LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
(gqv) = (new bvt());
(bvd)((gqv), (67585LL), ((gnh)->ne));
((gqv)->pf) = (gou);
((gqv)->bvv) = ((gpd) ? (0x0000000000000001ULL) : (0x0000000000000000ULL));
(gqv) = (as_<bvt>(classTable_, ((egz)((gqv))), 70));
((gnh)->nk) = (gqv);
return as_<gd>(classTable_, ((gnh)->nk), 14);
}
((gnh)->pf) = (gou);
(gnr) = (true);
}
break;
case 14LL:
case 15LL:
if((((((gnh)->byj)->pf)->lw) == (1027LL)) || (((((gnh)->byk)->pf)->lw) == (1027LL))){
(ad)((131115LL), ((gnh)->ne), (nullptr));
return nullptr;
}
if((gos)((((gnh)->byj)->pf), (false))){
(grb) = (new buh());
(btv)((grb), (1026LL), ((gnh)->ne));
((grb)->bui) = (3LL);
if(((((gnh)->byj)->pf)->lw) == (1028LL)){
if(((((gnh)->byk)->pf)->lw) == (1028LL)){
if(!((((gnh)->byj)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((gnh)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<ehf>(classTable_, ((gnh)->byj), 130))->goz))));
return nullptr;
}
((gnh)->byj) = ((edv)(((gnh)->byj), (((gnh)->byk)->pf)));
}
else if(((((gnh)->byk)->pf)->lw) == (1028LL)){
((gnh)->byk) = ((edv)(((gnh)->byk), (((gnh)->byj)->pf)));
}
if(((aye<int64_t>((((gnh)->byj)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((aye<int64_t>((((gnh)->byk)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
(grj) = (false);
(grk) = (((gnh)->byj)->pf);
if(((((((grk)->lw) == (1025LL)) || ((bdm)((grk)))) || ((ewg)((grk)))) || ((gls)((grk)))) || ((ewh)((grk)))){
(grn) = ((as_<bvt>(classTable_, ((gnh)->byj), 70))->bvv);
(gro) = ((as_<bvt>(classTable_, ((gnh)->byk), 70))->bvv);
grq = (gnh)->byg;
switch(grq){
case 14LL:
(grj) = ((grn) == (gro));
break;
case 15LL:
(grj) = ((grn) != (gro));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if((glc)((grk))){
(grv) = ((as_<ehi>(classTable_, ((gnh)->byj), 132))->glp);
(grw) = ((as_<ehi>(classTable_, ((gnh)->byk), 132))->glp);
gry = (gnh)->byg;
switch(gry){
case 14LL:
(grj) = ((grv) == (grw));
break;
case 15LL:
(grj) = ((grv) != (grw));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((fob)((grk)))){
throw 0xE9170000U;
}
(gsd) = ((gqm)(((as_<ehc>(classTable_, ((gnh)->byj), 128))->gqn), ((as_<ehc>(classTable_, ((gnh)->byk), 128))->gqn)));
gsf = (gnh)->byg;
switch(gsf){
case 14LL:
(grj) = ((gsd) == (0LL));
break;
case 15LL:
(grj) = ((gsd) != (0LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
(gsj) = (new bvt());
(bvd)((gsj), (67585LL), ((gnh)->ne));
((gsj)->pf) = (grb);
((gsj)->bvv) = ((grj) ? (0x0000000000000001ULL) : (0x0000000000000000ULL));
(gsj) = (as_<bvt>(classTable_, ((egz)((gsj))), 70));
((gnh)->nk) = (gsj);
return as_<gd>(classTable_, ((gnh)->nk), 14);
}
((gnh)->pf) = (grb);
(gnr) = (true);
}
break;
case 16LL:
case 17LL:
if(((frk)((((gnh)->byj)->pf))) || (((((gnh)->byj)->pf)->lw) == (1027LL))){
(gsn) = (new buh());
(btv)((gsn), (1026LL), ((gnh)->ne));
((gsn)->bui) = (3LL);
((gnh)->pf) = (gsn);
(gnr) = (true);
}
break;
case 18LL:
if((((((gnh)->byj)->pf)->lw) == (1027LL)) || (((((gnh)->byk)->pf)->lw) == (1027LL))){
(ad)((131117LL), ((gnh)->ne), (nullptr));
return nullptr;
}
if(((((gnh)->byj)->pf)->lw) == (66561LL)){
if(((aye<int64_t>((((gnh)->byj)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((aye<int64_t>((((gnh)->byk)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
if((fob)((((gnh)->byj)->pf))){
(gsx) = ((as_<ehc>(classTable_, ((gnh)->byj), 128))->gqn);
(gsy) = ((as_<ehc>(classTable_, ((gnh)->byk), 128))->gqn);
(gsz) = (new ehc());
(bvd)((gsz), (67586LL), ((gnh)->ne));
((gsz)->pf) = (((gnh)->byj)->pf);
((gsz)->gqn) = ((gsx)->Cat(gsy));
(gsz) = (as_<ehc>(classTable_, ((ehb)((gsz))), 128));
((gnh)->nk) = (gsz);
return as_<gd>(classTable_, ((gnh)->nk), 14);
}
}
((gnh)->pf) = (((gnh)->byj)->pf);
(gnr) = (true);
}
break;
case 19LL:
case 20LL:
case 21LL:
case 22LL:
case 23LL:
if(((((((gnh)->byj)->pf)->lw) == (1025LL)) || ((bdm)((((gnh)->byj)->pf)))) || ((glc)((((gnh)->byj)->pf)))){
if(((aye<int64_t>((((gnh)->byj)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)) && ((aye<int64_t>((((gnh)->byk)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
if(((((gnh)->byj)->pf)->lw) == (1025LL)){
(gth) = ((as_<bvt>(classTable_, ((gnh)->byj), 70))->bvv);
(gti) = ((as_<bvt>(classTable_, ((gnh)->byk), 70))->bvv);
gtk = (gnh)->byg;
switch(gtk){
case 19LL:
(gth) = ((gth) + (gti));
break;
case 20LL:
(gth) = ((gth) - (gti));
break;
case 21LL:
(gth) = ((gth) * (gti));
break;
case 22LL:
if((gti) == (0x0000000000000000ULL)){
(ad)((131118LL), ((gnh)->ne), (nullptr));
return nullptr;
}
(gth) = ((gth) / (gti));
break;
case 23LL:
if((gti) == (0x0000000000000000ULL)){
(ad)((131118LL), ((gnh)->ne), (nullptr));
return nullptr;
}
(gth) = ((gth) % (gti));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(gua) = (new bvt());
(bvd)((gua), (67585LL), ((gnh)->ne));
((gua)->pf) = (((gnh)->byj)->pf);
((gua)->bvv) = ((gub)(((as_<caq>(classTable_, (((gnh)->byj)->pf), 78))->car), (gth)));
(gua) = (as_<bvt>(classTable_, ((egz)((gua))), 70));
((gnh)->nk) = (gua);
return as_<gd>(classTable_, ((gnh)->nk), 14);
}
else if((bdm)((((gnh)->byj)->pf))){
(gud) = (static_cast<int64_t>((as_<bvt>(classTable_, ((gnh)->byj), 70))->bvv));
(gue) = (static_cast<int64_t>((as_<bvt>(classTable_, ((gnh)->byk), 70))->bvv));
gug = (gnh)->byg;
switch(gug){
case 19LL:
(gud) = ((gud) + (gue));
break;
case 20LL:
(gud) = ((gud) - (gue));
break;
case 21LL:
(gud) = ((gud) * (gue));
break;
case 22LL:
if((gue) == (0LL)){
(ad)((131118LL), ((gnh)->ne), (nullptr));
return nullptr;
}
(gud) = ((gud) / (gue));
break;
case 23LL:
if((gue) == (0LL)){
(ad)((131118LL), ((gnh)->ne), (nullptr));
return nullptr;
}
(gud) = ((gud) % (gue));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(guw) = (new bvt());
(bvd)((guw), (67585LL), ((gnh)->ne));
((guw)->pf) = (((gnh)->byj)->pf);
((guw)->bvv) = (static_cast<uint64_t>(gud));
(guw) = (as_<bvt>(classTable_, ((egz)((guw))), 70));
((gnh)->nk) = (guw);
return as_<gd>(classTable_, ((gnh)->nk), 14);
}
else{
if(!((glc)((((gnh)->byj)->pf)))){
throw 0xE9170000U;
}
(guy) = ((as_<ehi>(classTable_, ((gnh)->byj), 132))->glp);
(guz) = ((as_<ehi>(classTable_, ((gnh)->byk), 132))->glp);
gvb = (gnh)->byg;
switch(gvb){
case 19LL:
(guy) = ((guy) + (guz));
break;
case 20LL:
(guy) = ((guy) - (guz));
break;
case 21LL:
(guy) = ((guy) * (guz));
break;
case 22LL:
if(((guy) == (0.0)) && ((guz) == (0.0))){
(ad)((131118LL), ((gnh)->ne), (nullptr));
return nullptr;
}
(guy) = ((guy) / (guz));
break;
case 23LL:
if(((guy) == (0.0)) && ((guz) == (0.0))){
(ad)((131118LL), ((gnh)->ne), (nullptr));
return nullptr;
}
(guy) = (fmod((guy), (guz)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(gvr) = (new ehi());
(bvd)((gvr), (67588LL), ((gnh)->ne));
((gvr)->pf) = (((gnh)->byj)->pf);
((gvr)->glp) = (guy);
(gvr) = (as_<ehi>(classTable_, ((ehh)((gvr))), 132));
((gnh)->nk) = (gvr);
return as_<gd>(classTable_, ((gnh)->nk), 14);
}
}
((gnh)->pf) = (((gnh)->byj)->pf);
(gnr) = (true);
}
break;
case 24LL:
if(((bdm)((((gnh)->byj)->pf))) || ((glc)((((gnh)->byj)->pf)))){
((gnh)->pf) = (((gnh)->byj)->pf);
(gnr) = (true);
}
break;
case 25LL:
if(((((gnh)->byj)->pj) == (1LL)) || ((((gnh)->byk)->pj) == (1LL))){
(ad)((131119LL), ((gnh)->ne), (nullptr));
return nullptr;
}
if(!(((ele)((((gnh)->byj)->pf))) && (!eqAddr_(((((gnh)->byj)->pf)->nj), ((((gnh)->byk)->pf)->nj))))){
((gnh)->pf) = (((gnh)->byj)->pf);
(gnr) = (true);
}
break;
}
if(!(gnr)){
(ad)((131113LL), ((gnh)->ne), (nullptr));
return nullptr;
}
((gnh)->pj) = (1LL);
return gnh;
}
// rebuildExpr3
static gd* efx(efy* gwc /*ast*/){
if(!eqAddr_(((gwc)->nk), (nullptr))){
return as_<gd>(classTable_, ((gwc)->nk), 14);
}
((gwc)->nk) = (gwc);
((gwc)->gwf) = ((byb)(((gwc)->gwf), (false)));
if(eqAddr_(((gwc)->gwf), (nullptr))){
return nullptr;
}
((gwc)->gwi) = ((byb)(((gwc)->gwi), (false)));
if(eqAddr_(((gwc)->gwi), (nullptr))){
return nullptr;
}
((gwc)->gwl) = ((byb)(((gwc)->gwl), (false)));
if(eqAddr_(((gwc)->gwl), (nullptr))){
return nullptr;
}
if(!((gls)((((gwc)->gwf)->pf)))){
(ad)((131120LL), ((gwc)->ne), (nullptr));
return nullptr;
}
if((!((eds)((((gwc)->gwi)->pf), (((gwc)->gwl)->pf), (false)))) && (!((eds)((((gwc)->gwl)->pf), (((gwc)->gwi)->pf), (false))))){
(ad)((131121LL), ((gwc)->ne), (nullptr));
return nullptr;
}
if((((gwc)->gwf)->lw) == (67585LL)){
((gwc)->nk) = ((((as_<bvt>(classTable_, ((gwc)->gwf), 70))->bvv) != (0x0000000000000000ULL)) ? ((gwc)->gwi) : ((gwc)->gwl));
return as_<gd>(classTable_, ((gwc)->nk), 14);
}
if(((((gwc)->gwi)->pf)->lw) == (1028LL)){
if(((((gwc)->gwl)->pf)->lw) == (1028LL)){
if(!((((gwc)->gwi)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((gwc)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<ehf>(classTable_, ((gwc)->gwi), 130))->goz))));
return nullptr;
}
((gwc)->gwi) = ((edv)(((gwc)->gwi), (((gwc)->gwl)->pf)));
}
else if(((((gwc)->gwl)->pf)->lw) == (1028LL)){
((gwc)->gwl) = ((edv)(((gwc)->gwl), (((gwc)->gwi)->pf)));
}
if((eds)((((gwc)->gwi)->pf), (((gwc)->gwl)->pf), (false))){
((gwc)->pf) = ((((((gwc)->gwl)->pf)->lw) == (1027LL)) ? (((gwc)->gwi)->pf) : (((gwc)->gwl)->pf));
}
else{
((gwc)->pf) = ((((((gwc)->gwi)->pf)->lw) == (1027LL)) ? (((gwc)->gwl)->pf) : (((gwc)->gwi)->pf));
}
((gwc)->pj) = (1LL);
return gwc;
}
// _dtor
static void gxc(efy* gxd){
((gxd)->gwf) = (nullptr);
((gxd)->gwi) = (nullptr);
((gxd)->gwl) = (nullptr);
((gxd)->pf) = (nullptr);
((gxd)->ne) = (nullptr);
((gxd)->nf) = (nullptr);
((gxd)->ng) = (nullptr);
((gxd)->nh) = (nullptr);
((gxd)->ni) = (nullptr);
((gxd)->nj) = (nullptr);
((gxd)->nk) = (nullptr);
}
// _copy
static efy* gxe(efy* gxf){
efy* gxg;
(gxg) = (new efy());
((gxg)->gwf) = (copy_((gxf)->gwf));
((gxg)->gwi) = (copy_((gxf)->gwi));
((gxg)->gwl) = (copy_((gxf)->gwl));
((gxg)->pf) = (copy_((gxf)->pf));
((gxg)->pj) = ((gxf)->pj);
((gxg)->ne) = (copy_((gxf)->ne));
((gxg)->nf) = (copy_((gxf)->nf));
((gxg)->ng) = (copy_((gxf)->ng));
((gxg)->nh) = (copy_((gxf)->nh));
((gxg)->ni) = (copy_((gxf)->ni));
((gxg)->nj) = (copy_((gxf)->nj));
((gxg)->nk) = (copy_((gxf)->nk));
((gxg)->no) = ((gxf)->no);
((gxg)->lw) = ((gxf)->lw);
return as_<efy>(classTable_, (gxg), 112);
}
// _toBin
static Array_<uint8_t>* gxh(efy* gxi){
Array_<uint8_t>* gxj;
(gxj) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->gwf)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->gwi)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->gwl)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->pf)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->pj)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->ne)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->nf)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->ng)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->nh)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->ni)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->nj)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->nk)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->no)));
(gxj) = ((gxj)->Cat(toBin_((gxi)->lw)));
return gxj;
}
// _fromBin
static efy* gxy(efy* gxz, Array_<uint8_t>* gya, int64_t* gyb){
efy* gyc;
(gyc) = (new efy());
((gyc)->gwf) = (fromBin_<gd*>((gya), (*gyb)));
((gyc)->gwi) = (fromBin_<gd*>((gya), (*gyb)));
((gyc)->gwl) = (fromBin_<gd*>((gya), (*gyb)));
((gyc)->pf) = (fromBin_<gc*>((gya), (*gyb)));
((gyc)->pj) = (fromBin_<int64_t>((gya), (*gyb)));
((gyc)->ne) = (fromBin_<ga*>((gya), (*gyb)));
((gyc)->nf) = (fromBin_<Array_<char16_t>*>((gya), (*gyb)));
((gyc)->ng) = (fromBin_<fx*>((gya), (*gyb)));
((gyc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gya), (*gyb)));
((gyc)->ni) = (fromBin_<Array_<char16_t>*>((gya), (*gyb)));
((gyc)->nj) = (fromBin_<fx*>((gya), (*gyb)));
((gyc)->nk) = (fromBin_<fy*>((gya), (*gyb)));
((gyc)->no) = (fromBin_<bool>((gya), (*gyb)));
((gyc)->lw) = (fromBin_<int64_t>((gya), (*gyb)));
return gyc;
}
// rebuildExprNew
static gd* ega(egb* gyd /*ast*/){
if(!eqAddr_(((gyd)->nk), (nullptr))){
return as_<gd>(classTable_, ((gyd)->nk), 14);
}
((gyd)->nk) = (gyd);
((gyd)->gyg) = ((bxi)(((gyd)->gyg), (nullptr)));
if(eqAddr_(((gyd)->gyg), (nullptr))){
return nullptr;
}
if(((ele)(((gyd)->gyg))) && (eqAddr_((((gyd)->gyg)->nj), (nullptr)))){
return nullptr;
}
if(!((((ele)(((gyd)->gyg))) || ((((gyd)->gyg)->lw) == (66563LL))) || ((((gyd)->gyg)->lw) == (66564LL)))){
(ad)((131122LL), ((gyd)->ne), (nullptr));
return nullptr;
}
((gyd)->pf) = ((gyd)->gyg);
((gyd)->pj) = (1LL);
return gyd;
}
// _dtor
static void gyn(egb* gyo){
((gyo)->gyg) = (nullptr);
((gyo)->pf) = (nullptr);
((gyo)->ne) = (nullptr);
((gyo)->nf) = (nullptr);
((gyo)->ng) = (nullptr);
((gyo)->nh) = (nullptr);
((gyo)->ni) = (nullptr);
((gyo)->nj) = (nullptr);
((gyo)->nk) = (nullptr);
}
// _copy
static egb* gyp(egb* gyq){
egb* gyr;
(gyr) = (new egb());
((gyr)->gyg) = (copy_((gyq)->gyg));
((gyr)->pf) = (copy_((gyq)->pf));
((gyr)->pj) = ((gyq)->pj);
((gyr)->ne) = (copy_((gyq)->ne));
((gyr)->nf) = (copy_((gyq)->nf));
((gyr)->ng) = (copy_((gyq)->ng));
((gyr)->nh) = (copy_((gyq)->nh));
((gyr)->ni) = (copy_((gyq)->ni));
((gyr)->nj) = (copy_((gyq)->nj));
((gyr)->nk) = (copy_((gyq)->nk));
((gyr)->no) = ((gyq)->no);
((gyr)->lw) = ((gyq)->lw);
return as_<egb>(classTable_, (gyr), 114);
}
// _toBin
static Array_<uint8_t>* gys(egb* gyt){
Array_<uint8_t>* gyu;
(gyu) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(gyu) = ((gyu)->Cat(toBin_((gyt)->gyg)));
(gyu) = ((gyu)->Cat(toBin_((gyt)->pf)));
(gyu) = ((gyu)->Cat(toBin_((gyt)->pj)));
(gyu) = ((gyu)->Cat(toBin_((gyt)->ne)));
(gyu) = ((gyu)->Cat(toBin_((gyt)->nf)));
(gyu) = ((gyu)->Cat(toBin_((gyt)->ng)));
(gyu) = ((gyu)->Cat(toBin_((gyt)->nh)));
(gyu) = ((gyu)->Cat(toBin_((gyt)->ni)));
(gyu) = ((gyu)->Cat(toBin_((gyt)->nj)));
(gyu) = ((gyu)->Cat(toBin_((gyt)->nk)));
(gyu) = ((gyu)->Cat(toBin_((gyt)->no)));
(gyu) = ((gyu)->Cat(toBin_((gyt)->lw)));
return gyu;
}
// _fromBin
static egb* gzh(egb* gzi, Array_<uint8_t>* gzj, int64_t* gzk){
egb* gzl;
(gzl) = (new egb());
((gzl)->gyg) = (fromBin_<gc*>((gzj), (*gzk)));
((gzl)->pf) = (fromBin_<gc*>((gzj), (*gzk)));
((gzl)->pj) = (fromBin_<int64_t>((gzj), (*gzk)));
((gzl)->ne) = (fromBin_<ga*>((gzj), (*gzk)));
((gzl)->nf) = (fromBin_<Array_<char16_t>*>((gzj), (*gzk)));
((gzl)->ng) = (fromBin_<fx*>((gzj), (*gzk)));
((gzl)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((gzj), (*gzk)));
((gzl)->ni) = (fromBin_<Array_<char16_t>*>((gzj), (*gzk)));
((gzl)->nj) = (fromBin_<fx*>((gzj), (*gzk)));
((gzl)->nk) = (fromBin_<fy*>((gzj), (*gzk)));
((gzl)->no) = (fromBin_<bool>((gzj), (*gzk)));
((gzl)->lw) = (fromBin_<int64_t>((gzj), (*gzk)));
return gzl;
}
// rebuildExprNewArray
static gd* egd(ege* gzm /*ast*/){
List_<gd*>* gzq; // items
gd* gzv; // data
gc* hae; // type
int64_t hai;
cam* hak; // type2
int64_t haj;
if(!eqAddr_(((gzm)->nk), (nullptr))){
return as_<gd>(classTable_, ((gzm)->nk), 14);
}
((gzm)->nk) = (gzm);
(gzq) = ((gzm)->gzr);
awe<List_<gd*>*>((gzq), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((gzq), (new Array_<int64_t>(1, (0LL)))))){
(gzv) = (awi<List_<gd*>*, gd*>((gzq), (new Array_<int64_t>(1, (0LL)))));
(gzv) = ((byb)((gzv), (false)));
if(eqAddr_((gzv), (nullptr))){
return nullptr;
}
if(!((bdm)(((gzv)->pf)))){
(ad)((131123LL), ((gzv)->ne), (nullptr));
return nullptr;
}
bfk<List_<gd*>*, gd*>((gzq), (new Array_<int64_t>(1, (0LL))), (gzv));
bfm<List_<gd*>*>((gzq), (new Array_<int64_t>(1, (0LL))));
}
((gzm)->haa) = ((bxi)(((gzm)->haa), (nullptr)));
if(eqAddr_(((gzm)->haa), (nullptr))){
return nullptr;
}
(hae) = ((gzm)->haa);
for(hai = (0LL), haj = ((((gzm)->gzr)->Len()) - (1LL)); hai <= haj; hai += (1LL)){
(hak) = (new cam());
(btv)((hak), (66561LL), ((gzm)->ne));
((hak)->cao) = (hae);
(hae) = (hak);
}
((gzm)->pf) = (hae);
((gzm)->pj) = (1LL);
return gzm;
}
// _dtor
static void hal(ege* ham){
((ham)->gzr) = (nullptr);
((ham)->haa) = (nullptr);
((ham)->pf) = (nullptr);
((ham)->ne) = (nullptr);
((ham)->nf) = (nullptr);
((ham)->ng) = (nullptr);
((ham)->nh) = (nullptr);
((ham)->ni) = (nullptr);
((ham)->nj) = (nullptr);
((ham)->nk) = (nullptr);
}
// _copy
static ege* han(ege* hao){
ege* hap;
(hap) = (new ege());
((hap)->gzr) = (copy_((hao)->gzr));
((hap)->haa) = (copy_((hao)->haa));
((hap)->pf) = (copy_((hao)->pf));
((hap)->pj) = ((hao)->pj);
((hap)->ne) = (copy_((hao)->ne));
((hap)->nf) = (copy_((hao)->nf));
((hap)->ng) = (copy_((hao)->ng));
((hap)->nh) = (copy_((hao)->nh));
((hap)->ni) = (copy_((hao)->ni));
((hap)->nj) = (copy_((hao)->nj));
((hap)->nk) = (copy_((hao)->nk));
((hap)->no) = ((hao)->no);
((hap)->lw) = ((hao)->lw);
return as_<ege>(classTable_, (hap), 116);
}
// _toBin
static Array_<uint8_t>* haq(ege* har){
Array_<uint8_t>* has;
(has) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(has) = ((has)->Cat(toBin_((har)->gzr)));
(has) = ((has)->Cat(toBin_((har)->haa)));
(has) = ((has)->Cat(toBin_((har)->pf)));
(has) = ((has)->Cat(toBin_((har)->pj)));
(has) = ((has)->Cat(toBin_((har)->ne)));
(has) = ((has)->Cat(toBin_((har)->nf)));
(has) = ((has)->Cat(toBin_((har)->ng)));
(has) = ((has)->Cat(toBin_((har)->nh)));
(has) = ((has)->Cat(toBin_((har)->ni)));
(has) = ((has)->Cat(toBin_((har)->nj)));
(has) = ((has)->Cat(toBin_((har)->nk)));
(has) = ((has)->Cat(toBin_((har)->no)));
(has) = ((has)->Cat(toBin_((har)->lw)));
return has;
}
// _fromBin
static ege* hbg(ege* hbh, Array_<uint8_t>* hbi, int64_t* hbj){
ege* hbk;
(hbk) = (new ege());
((hbk)->gzr) = (fromBin_<List_<gd*>*>((hbi), (*hbj)));
((hbk)->haa) = (fromBin_<gc*>((hbi), (*hbj)));
((hbk)->pf) = (fromBin_<gc*>((hbi), (*hbj)));
((hbk)->pj) = (fromBin_<int64_t>((hbi), (*hbj)));
((hbk)->ne) = (fromBin_<ga*>((hbi), (*hbj)));
((hbk)->nf) = (fromBin_<Array_<char16_t>*>((hbi), (*hbj)));
((hbk)->ng) = (fromBin_<fx*>((hbi), (*hbj)));
((hbk)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hbi), (*hbj)));
((hbk)->ni) = (fromBin_<Array_<char16_t>*>((hbi), (*hbj)));
((hbk)->nj) = (fromBin_<fx*>((hbi), (*hbj)));
((hbk)->nk) = (fromBin_<fy*>((hbi), (*hbj)));
((hbk)->no) = (fromBin_<bool>((hbi), (*hbj)));
((hbk)->lw) = (fromBin_<int64_t>((hbi), (*hbj)));
return hbk;
}
// rebuildExprAs
static gd* egg(egh* hbl /*ast*/){
int64_t hbv;
gc* hby; // t1
gc* hbz; // t2
uint64_t hdm; // n
bvt* hdp; // expr
bvt* hdr; // expr
ehi* hdt; // expr
bvt* hdy; // expr
bvt* hea; // expr
bvt* hec; // expr
double hee; // n
bvt* heh; // expr
bvt* hej; // expr
buh* hen; // type
if(!eqAddr_(((hbl)->nk), (nullptr))){
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
((hbl)->nk) = (hbl);
((hbl)->hbo) = ((byb)(((hbl)->hbo), (false)));
if(eqAddr_(((hbl)->hbo), (nullptr))){
return nullptr;
}
((hbl)->hbr) = ((bxi)(((hbl)->hbr), (nullptr)));
if(eqAddr_(((hbl)->hbr), (nullptr))){
return nullptr;
}
if(!(eqAddr_(((hbl)->pf), (nullptr)))){
throw 0xE9170000U;
}
hbv = (hbl)->hbw;
switch(hbv){
case 0LL:
(hby) = (((hbl)->hbo)->pf);
(hbz) = ((hbl)->hbr);
if((((hby)->lw) == (1025LL)) || ((bdm)((hby)))){
if((((((((hbz)->lw) == (1025LL)) || ((bdm)((hbz)))) || ((glc)((hbz)))) || ((ewg)((hbz)))) || ((gls)((hbz)))) || ((ewh)((hbz)))){
if((eds)((hby), (hbz), (false))){
((hbl)->nk) = ((hbl)->hbo);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
((hbl)->pf) = (hbz);
}
}
else if((glc)((hby))){
if(((((hbz)->lw) == (1025LL)) || ((bdm)((hbz)))) || ((glc)((hbz)))){
if((eds)((hby), (hbz), (false))){
((hbl)->nk) = ((hbl)->hbo);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
((hbl)->pf) = (hbz);
}
}
else if((ewg)((hby))){
if(((((hbz)->lw) == (1025LL)) || ((bdm)((hbz)))) || ((ewg)((hbz)))){
if((eds)((hby), (hbz), (false))){
((hbl)->nk) = ((hbl)->hbo);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
((hbl)->pf) = (hbz);
}
}
else if((gls)((hby))){
if(((((hbz)->lw) == (1025LL)) || ((bdm)((hbz)))) || ((gls)((hbz)))){
if((eds)((hby), (hbz), (false))){
((hbl)->nk) = ((hbl)->hbo);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
((hbl)->pf) = (hbz);
}
}
else if((ele)((hby))){
if((ele)((hbz))){
((hbl)->pf) = (hbz);
}
}
else if((ewh)((hby))){
if(((((hbz)->lw) == (1025LL)) || ((bdm)((hbz)))) || ((ewh)((hbz)))){
if((eds)((hby), (hbz), (false))){
((hbl)->nk) = ((hbl)->hbo);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
((hbl)->pf) = (hbz);
}
}
else if(((hby)->lw) == (1028LL)){
if((ewh)((hbz))){
((hbl)->pf) = (hbz);
}
}
if(!eqAddr_(((hbl)->pf), (nullptr))){
if((aye<int64_t>((((hbl)->hbo)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL)){
if(((((((hby)->lw) == (1025LL)) || ((ewg)((hby)))) || ((gls)((hby)))) || ((bdm)((hby)))) || ((ewh)((hby)))){
(hdm) = ((as_<bvt>(classTable_, ((hbl)->hbo), 70))->bvv);
if(((hbz)->lw) == (1025LL)){
(hdp) = (new bvt());
(bvd)((hdp), (67585LL), ((hbl)->ne));
((hdp)->pf) = ((hbl)->pf);
((hdp)->bvv) = ((gub)(((as_<caq>(classTable_, (hbz), 78))->car), (hdm)));
(hdp) = (as_<bvt>(classTable_, ((egz)((hdp))), 70));
((hbl)->nk) = (hdp);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
else if(((bdm)((hbz))) || ((ewh)((hbz)))){
(hdr) = (new bvt());
(bvd)((hdr), (67585LL), ((hbl)->ne));
((hdr)->pf) = ((hbl)->pf);
((hdr)->bvv) = (hdm);
(hdr) = (as_<bvt>(classTable_, ((egz)((hdr))), 70));
((hbl)->nk) = (hdr);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
else if((glc)((hbz))){
(hdt) = (new ehi());
(bvd)((hdt), (67588LL), ((hbl)->ne));
((hdt)->pf) = ((hbl)->pf);
if(((bdm)((hby))) || ((ewh)((hby)))){
((hdt)->glp) = (static_cast<double>(static_cast<int64_t>(hdm)));
}
else{
((hdt)->glp) = (static_cast<double>(hdm));
}
(hdt) = (as_<ehi>(classTable_, ((ehh)((hdt))), 132));
((hbl)->nk) = (hdt);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
else if((ewg)((hbz))){
(hdy) = (new bvt());
(bvd)((hdy), (67585LL), ((hbl)->ne));
((hdy)->pf) = ((hbl)->pf);
((hdy)->bvv) = ((gub)((2LL), (hdm)));
(hdy) = (as_<bvt>(classTable_, ((egz)((hdy))), 70));
((hbl)->nk) = (hdy);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
else{
if(!((gls)((hbz)))){
throw 0xE9170000U;
}
(hea) = (new bvt());
(bvd)((hea), (67585LL), ((hbl)->ne));
((hea)->pf) = ((hbl)->pf);
((hea)->bvv) = (((hdm) != (0x0000000000000000ULL)) ? (0x0000000000000001ULL) : (0x0000000000000000ULL));
(hea) = (as_<bvt>(classTable_, ((egz)((hea))), 70));
((hbl)->nk) = (hea);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
}
else if(((hby)->lw) == (1028LL)){
if(!((((hbz)->nj)->lw) == (6LL))){
throw 0xE9170000U;
}
(hec) = (new bvt());
(bvd)((hec), (67585LL), ((hbl)->ne));
((hec)->pf) = ((hbl)->pf);
((hec)->bvv) = ((giy)((as_<ehf>(classTable_, ((hbl)->hbo), 130)), (as_<brc>(classTable_, ((hbz)->nj), 48))));
(hec) = (as_<bvt>(classTable_, ((egz)((hec))), 70));
((hbl)->nk) = (hec);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
else{
if(!((glc)((hby)))){
throw 0xE9170000U;
}
(hee) = ((as_<ehi>(classTable_, ((hbl)->hbo), 132))->glp);
if(((hbz)->lw) == (1025LL)){
(heh) = (new bvt());
(bvd)((heh), (67585LL), ((hbl)->ne));
((heh)->pf) = ((hbl)->pf);
((heh)->bvv) = ((gub)(((as_<caq>(classTable_, (hbz), 78))->car), (static_cast<uint64_t>(hee))));
(heh) = (as_<bvt>(classTable_, ((egz)((heh))), 70));
((hbl)->nk) = (heh);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
else{
if(!((bdm)((hbz)))){
throw 0xE9170000U;
}
(hej) = (new bvt());
(bvd)((hej), (67585LL), ((hbl)->ne));
((hej)->pf) = ((hbl)->pf);
((hej)->bvv) = (static_cast<uint64_t>(hee));
(hej) = (as_<bvt>(classTable_, ((egz)((hej))), 70));
((hbl)->nk) = (hej);
return as_<gd>(classTable_, ((hbl)->nk), 14);
}
}
}
}
break;
case 1LL:
case 2LL:
if(((ele)((((hbl)->hbo)->pf))) && ((ele)(((hbl)->hbr)))){
(hen) = (new buh());
(btv)((hen), (1026LL), ((hbl)->ne));
((hen)->bui) = (3LL);
((hbl)->pf) = (hen);
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(eqAddr_(((hbl)->pf), (nullptr))){
(ad)((131113LL), ((hbl)->ne), (nullptr));
return nullptr;
}
((hbl)->pj) = (1LL);
return hbl;
}
// _dtor
static void her(egh* hes){
((hes)->hbo) = (nullptr);
((hes)->hbr) = (nullptr);
((hes)->pf) = (nullptr);
((hes)->ne) = (nullptr);
((hes)->nf) = (nullptr);
((hes)->ng) = (nullptr);
((hes)->nh) = (nullptr);
((hes)->ni) = (nullptr);
((hes)->nj) = (nullptr);
((hes)->nk) = (nullptr);
}
// _copy
static egh* het(egh* heu){
egh* hev;
(hev) = (new egh());
((hev)->hbw) = ((heu)->hbw);
((hev)->hbo) = (copy_((heu)->hbo));
((hev)->hbr) = (copy_((heu)->hbr));
((hev)->pf) = (copy_((heu)->pf));
((hev)->pj) = ((heu)->pj);
((hev)->ne) = (copy_((heu)->ne));
((hev)->nf) = (copy_((heu)->nf));
((hev)->ng) = (copy_((heu)->ng));
((hev)->nh) = (copy_((heu)->nh));
((hev)->ni) = (copy_((heu)->ni));
((hev)->nj) = (copy_((heu)->nj));
((hev)->nk) = (copy_((heu)->nk));
((hev)->no) = ((heu)->no);
((hev)->lw) = ((heu)->lw);
return as_<egh>(classTable_, (hev), 118);
}
// _toBin
static Array_<uint8_t>* hew(egh* hex){
Array_<uint8_t>* hey;
(hey) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hey) = ((hey)->Cat(toBin_((hex)->hbw)));
(hey) = ((hey)->Cat(toBin_((hex)->hbo)));
(hey) = ((hey)->Cat(toBin_((hex)->hbr)));
(hey) = ((hey)->Cat(toBin_((hex)->pf)));
(hey) = ((hey)->Cat(toBin_((hex)->pj)));
(hey) = ((hey)->Cat(toBin_((hex)->ne)));
(hey) = ((hey)->Cat(toBin_((hex)->nf)));
(hey) = ((hey)->Cat(toBin_((hex)->ng)));
(hey) = ((hey)->Cat(toBin_((hex)->nh)));
(hey) = ((hey)->Cat(toBin_((hex)->ni)));
(hey) = ((hey)->Cat(toBin_((hex)->nj)));
(hey) = ((hey)->Cat(toBin_((hex)->nk)));
(hey) = ((hey)->Cat(toBin_((hex)->no)));
(hey) = ((hey)->Cat(toBin_((hex)->lw)));
return hey;
}
// _fromBin
static egh* hfn(egh* hfo, Array_<uint8_t>* hfp, int64_t* hfq){
egh* hfr;
(hfr) = (new egh());
((hfr)->hbw) = (fromBin_<int64_t>((hfp), (*hfq)));
((hfr)->hbo) = (fromBin_<gd*>((hfp), (*hfq)));
((hfr)->hbr) = (fromBin_<gc*>((hfp), (*hfq)));
((hfr)->pf) = (fromBin_<gc*>((hfp), (*hfq)));
((hfr)->pj) = (fromBin_<int64_t>((hfp), (*hfq)));
((hfr)->ne) = (fromBin_<ga*>((hfp), (*hfq)));
((hfr)->nf) = (fromBin_<Array_<char16_t>*>((hfp), (*hfq)));
((hfr)->ng) = (fromBin_<fx*>((hfp), (*hfq)));
((hfr)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hfp), (*hfq)));
((hfr)->ni) = (fromBin_<Array_<char16_t>*>((hfp), (*hfq)));
((hfr)->nj) = (fromBin_<fx*>((hfp), (*hfq)));
((hfr)->nk) = (fromBin_<fy*>((hfp), (*hfq)));
((hfr)->no) = (fromBin_<bool>((hfp), (*hfq)));
((hfr)->lw) = (fromBin_<int64_t>((hfp), (*hfq)));
return hfr;
}
// rebuildExprToBin
static gd* egj(egk* hfs /*ast*/){
if(!eqAddr_(((hfs)->nk), (nullptr))){
return as_<gd>(classTable_, ((hfs)->nk), 14);
}
((hfs)->nk) = (hfs);
((hfs)->hfv) = ((byb)(((hfs)->hfv), (false)));
if(eqAddr_(((hfs)->hfv), (nullptr))){
return nullptr;
}
if((((((hfs)->hfv)->pf)->lw) == (1027LL)) || (((((hfs)->hfv)->pf)->lw) == (1028LL))){
(ad)((131113LL), ((hfs)->ne), (nullptr));
return nullptr;
}
if((((((hfs)->hgb)->lw) != (66561LL)) || ((((as_<cam>(classTable_, ((hfs)->hgb), 76))->cao)->lw) != (1025LL))) || (((as_<caq>(classTable_, ((as_<cam>(classTable_, ((hfs)->hgb), 76))->cao), 78))->car) != (1LL))){
(ad)((131113LL), ((hfs)->ne), (nullptr));
return nullptr;
}
((hfs)->pf) = ((hfs)->hgb);
((hfs)->pj) = (1LL);
return hfs;
}
// _dtor
static void hgd(egk* hge){
((hge)->hfv) = (nullptr);
((hge)->hgb) = (nullptr);
((hge)->pf) = (nullptr);
((hge)->ne) = (nullptr);
((hge)->nf) = (nullptr);
((hge)->ng) = (nullptr);
((hge)->nh) = (nullptr);
((hge)->ni) = (nullptr);
((hge)->nj) = (nullptr);
((hge)->nk) = (nullptr);
}
// _copy
static egk* hgf(egk* hgg){
egk* hgh;
(hgh) = (new egk());
((hgh)->hfv) = (copy_((hgg)->hfv));
((hgh)->hgb) = (copy_((hgg)->hgb));
((hgh)->pf) = (copy_((hgg)->pf));
((hgh)->pj) = ((hgg)->pj);
((hgh)->ne) = (copy_((hgg)->ne));
((hgh)->nf) = (copy_((hgg)->nf));
((hgh)->ng) = (copy_((hgg)->ng));
((hgh)->nh) = (copy_((hgg)->nh));
((hgh)->ni) = (copy_((hgg)->ni));
((hgh)->nj) = (copy_((hgg)->nj));
((hgh)->nk) = (copy_((hgg)->nk));
((hgh)->no) = ((hgg)->no);
((hgh)->lw) = ((hgg)->lw);
return as_<egk>(classTable_, (hgh), 120);
}
// _toBin
static Array_<uint8_t>* hgi(egk* hgj){
Array_<uint8_t>* hgk;
(hgk) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->hfv)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->hgb)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->pf)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->pj)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->ne)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->nf)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->ng)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->nh)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->ni)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->nj)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->nk)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->no)));
(hgk) = ((hgk)->Cat(toBin_((hgj)->lw)));
return hgk;
}
// _fromBin
static egk* hgy(egk* hgz, Array_<uint8_t>* hha, int64_t* hhb){
egk* hhc;
(hhc) = (new egk());
((hhc)->hfv) = (fromBin_<gd*>((hha), (*hhb)));
((hhc)->hgb) = (fromBin_<gc*>((hha), (*hhb)));
((hhc)->pf) = (fromBin_<gc*>((hha), (*hhb)));
((hhc)->pj) = (fromBin_<int64_t>((hha), (*hhb)));
((hhc)->ne) = (fromBin_<ga*>((hha), (*hhb)));
((hhc)->nf) = (fromBin_<Array_<char16_t>*>((hha), (*hhb)));
((hhc)->ng) = (fromBin_<fx*>((hha), (*hhb)));
((hhc)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hha), (*hhb)));
((hhc)->ni) = (fromBin_<Array_<char16_t>*>((hha), (*hhb)));
((hhc)->nj) = (fromBin_<fx*>((hha), (*hhb)));
((hhc)->nk) = (fromBin_<fy*>((hha), (*hhb)));
((hhc)->no) = (fromBin_<bool>((hha), (*hhb)));
((hhc)->lw) = (fromBin_<int64_t>((hha), (*hhb)));
return hhc;
}
// rebuildExprFromBin
static gd* egm(egn* hhd /*ast*/){
if(!eqAddr_(((hhd)->nk), (nullptr))){
return as_<gd>(classTable_, ((hhd)->nk), 14);
}
((hhd)->nk) = (hhd);
((hhd)->hhg) = ((byb)(((hhd)->hhg), (false)));
if(eqAddr_(((hhd)->hhg), (nullptr))){
return nullptr;
}
if(((((((hhd)->hhg)->pf)->lw) != (66561LL)) || ((((as_<cam>(classTable_, (((hhd)->hhg)->pf), 76))->cao)->lw) != (1025LL))) || (((as_<caq>(classTable_, ((as_<cam>(classTable_, (((hhd)->hhg)->pf), 76))->cao), 78))->car) != (1LL))){
(ad)((131113LL), ((hhd)->ne), (nullptr));
return nullptr;
}
((hhd)->pf) = ((hhd)->hhl);
((hhd)->pj) = (1LL);
((hhd)->hhm) = ((byb)(((hhd)->hhm), (false)));
return hhd;
}
// _dtor
static void hhn(egn* hho){
((hho)->hhg) = (nullptr);
((hho)->hhl) = (nullptr);
((hho)->hhm) = (nullptr);
((hho)->pf) = (nullptr);
((hho)->ne) = (nullptr);
((hho)->nf) = (nullptr);
((hho)->ng) = (nullptr);
((hho)->nh) = (nullptr);
((hho)->ni) = (nullptr);
((hho)->nj) = (nullptr);
((hho)->nk) = (nullptr);
}
// _copy
static egn* hhp(egn* hhq){
egn* hhr;
(hhr) = (new egn());
((hhr)->hhg) = (copy_((hhq)->hhg));
((hhr)->hhl) = (copy_((hhq)->hhl));
((hhr)->hhm) = (copy_((hhq)->hhm));
((hhr)->pf) = (copy_((hhq)->pf));
((hhr)->pj) = ((hhq)->pj);
((hhr)->ne) = (copy_((hhq)->ne));
((hhr)->nf) = (copy_((hhq)->nf));
((hhr)->ng) = (copy_((hhq)->ng));
((hhr)->nh) = (copy_((hhq)->nh));
((hhr)->ni) = (copy_((hhq)->ni));
((hhr)->nj) = (copy_((hhq)->nj));
((hhr)->nk) = (copy_((hhq)->nk));
((hhr)->no) = ((hhq)->no);
((hhr)->lw) = ((hhq)->lw);
return as_<egn>(classTable_, (hhr), 122);
}
// _toBin
static Array_<uint8_t>* hhs(egn* hht){
Array_<uint8_t>* hhu;
(hhu) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hhu) = ((hhu)->Cat(toBin_((hht)->hhg)));
(hhu) = ((hhu)->Cat(toBin_((hht)->hhl)));
(hhu) = ((hhu)->Cat(toBin_((hht)->hhm)));
(hhu) = ((hhu)->Cat(toBin_((hht)->pf)));
(hhu) = ((hhu)->Cat(toBin_((hht)->pj)));
(hhu) = ((hhu)->Cat(toBin_((hht)->ne)));
(hhu) = ((hhu)->Cat(toBin_((hht)->nf)));
(hhu) = ((hhu)->Cat(toBin_((hht)->ng)));
(hhu) = ((hhu)->Cat(toBin_((hht)->nh)));
(hhu) = ((hhu)->Cat(toBin_((hht)->ni)));
(hhu) = ((hhu)->Cat(toBin_((hht)->nj)));
(hhu) = ((hhu)->Cat(toBin_((hht)->nk)));
(hhu) = ((hhu)->Cat(toBin_((hht)->no)));
(hhu) = ((hhu)->Cat(toBin_((hht)->lw)));
return hhu;
}
// _fromBin
static egn* hij(egn* hik, Array_<uint8_t>* hil, int64_t* him){
egn* hin;
(hin) = (new egn());
((hin)->hhg) = (fromBin_<gd*>((hil), (*him)));
((hin)->hhl) = (fromBin_<gc*>((hil), (*him)));
((hin)->hhm) = (fromBin_<gd*>((hil), (*him)));
((hin)->pf) = (fromBin_<gc*>((hil), (*him)));
((hin)->pj) = (fromBin_<int64_t>((hil), (*him)));
((hin)->ne) = (fromBin_<ga*>((hil), (*him)));
((hin)->nf) = (fromBin_<Array_<char16_t>*>((hil), (*him)));
((hin)->ng) = (fromBin_<fx*>((hil), (*him)));
((hin)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hil), (*him)));
((hin)->ni) = (fromBin_<Array_<char16_t>*>((hil), (*him)));
((hin)->nj) = (fromBin_<fx*>((hil), (*him)));
((hin)->nk) = (fromBin_<fy*>((hil), (*him)));
((hin)->no) = (fromBin_<bool>((hil), (*him)));
((hin)->lw) = (fromBin_<int64_t>((hil), (*him)));
return hin;
}
// rebuildExprCall
static gd* egp(bvb* hio /*ast*/){
cau* hiu; // type
bvc* hix; // valueType
egb* hiz; // expr
bvc* hjf; // me_
bvc* hjm; // meType
ehl* hjo; // expr
bvt* hjr; // value
buh* hjt; // prim
int64_t hke; // n
List_<bvc*>* hkf; // itemsExpr
List_<cav*>* hkg; // itemsType
bvc* hki; // argExpr
cav* hkj; // argType
if(!eqAddr_(((hio)->nk), (nullptr))){
return as_<gd>(classTable_, ((hio)->nk), 14);
}
((hio)->nk) = (hio);
((hio)->bvh) = ((byb)(((hio)->bvh), (false)));
if(eqAddr_(((hio)->bvh), (nullptr))){
return nullptr;
}
(hiu) = (as_<cau>(classTable_, (((hio)->bvh)->pf), 80));
if((aye<int64_t>(((hiu)->eqb), (new Array_<int64_t>(1, (0LL))), (2048LL))) != (0LL)){
(hix) = (new bvc());
if(!(!eqAddr_(((hiu)->cax), (nullptr)))){
throw 0xE9170000U;
}
(hiz) = (new egb());
(bvd)((hiz), (2052LL), ((hio)->ne));
((hiz)->gyg) = ((hiu)->cax);
((hix)->bwq) = ((byb)((hiz), (false)));
((hix)->bwm) = (false);
((hix)->bwn) = (false);
if((((hio)->bve)->Len()) == (0LL)){
uh<List_<bvc*>*, bvc*>(((hio)->bve), (new Array_<int64_t>(1, (0LL))), (hix));
}
else{
awe<List_<bvc*>*>(((hio)->bve), (new Array_<int64_t>(1, (0LL))));
bfk<List_<bvc*>*, bvc*>(((hio)->bve), (new Array_<int64_t>(1, (0LL))), (hix));
}
}
if(((((hio)->bvh)->lw) == (2059LL)) && (((((hio)->bvh)->pf)->lw) == (66562LL))){
(hjf) = (new bvc());
((hjf)->bwq) = ((as_<egv>(classTable_, ((hio)->bvh), 126))->hjg);
((hjf)->bwm) = (false);
((hjf)->bwn) = (false);
if((((hio)->bve)->Len()) == (0LL)){
uh<List_<bvc*>*, bvc*>(((hio)->bve), (new Array_<int64_t>(1, (0LL))), (hjf));
}
else{
awe<List_<bvc*>*>(((hio)->bve), (new Array_<int64_t>(1, (0LL))));
bfk<List_<bvc*>*, bvc*>(((hio)->bve), (new Array_<int64_t>(1, (0LL))), (hjf));
}
if((aye<int64_t>(((hiu)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL)){
(hjm) = (new bvc());
(hjo) = (new ehl());
(bvd)((hjo), (2060LL), ((hio)->ne));
((hjo)->hjp) = (new List_<gd*>());
(hjr) = (new bvt());
(bvd)((hjr), (67585LL), ((hio)->ne));
((hjr)->bvv) = (0x0000000000000000ULL);
(hjt) = (new buh());
(btv)((hjt), (1026LL), ((hio)->ne));
((hjt)->bui) = (0LL);
((hjr)->pf) = (hjt);
uh<List_<gd*>*, gd*>(((hjo)->hjp), (new Array_<int64_t>(1, (0LL))), (hjr));
((hjm)->bwq) = ((byb)((hjo), (false)));
((hjm)->bwm) = (false);
((hjm)->bwn) = (false);
if((((hio)->bve)->Len()) == (1LL)){
uh<List_<bvc*>*, bvc*>(((hio)->bve), (new Array_<int64_t>(1, (0LL))), (hjm));
}
else{
if(!((((hio)->bve)->Len()) >= (2LL))){
throw 0xE9170000U;
}
awe<List_<bvc*>*>(((hio)->bve), (new Array_<int64_t>(1, (0LL))));
ays<List_<bvc*>*>(((hio)->bve), (new Array_<int64_t>(1, (0LL))));
bfk<List_<bvc*>*, bvc*>(((hio)->bve), (new Array_<int64_t>(1, (0LL))), (hjm));
}
}
}
else{
if(((hiu)->lw) != (66562LL)){
(ad)((131124LL), ((hio)->ne), (nullptr));
return nullptr;
}
(hiu) = (as_<cau>(classTable_, (((hio)->bvh)->pf), 80));
}
((hio)->pf) = ((hiu)->cax);
if((((hio)->bve)->Len()) != (((hiu)->cbc)->Len())){
(ad)((131125LL), ((hio)->ne), (new Array_<Array_<char16_t>*>(3, (v<int64_t>((((hiu)->cbc)->Len()), (new Array_<int64_t>(1, (0LL))))), (v<int64_t>((((hio)->bve)->Len()), (new Array_<int64_t>(1, (0LL))))), ((hkc)((hiu))))));
return nullptr;
}
(hke) = (0LL);
(hkf) = ((hio)->bve);
(hkg) = ((hiu)->cbc);
awe<List_<bvc*>*>((hkf), (new Array_<int64_t>(1, (0LL))));
awe<List_<cav*>*>((hkg), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvc*>*>((hkf), (new Array_<int64_t>(1, (0LL)))))){
(hki) = (awi<List_<bvc*>*, bvc*>((hkf), (new Array_<int64_t>(1, (0LL)))));
(hkj) = (awi<List_<cav*>*, cav*>((hkg), (new Array_<int64_t>(1, (0LL)))));
if((hki)->bwn){
((as_<gb>(classTable_, (((hki)->bwq)->nj), 10))->qf) = ((hkj)->cbk);
}
((hki)->bwq) = ((byb)(((hki)->bwq), (false)));
if(!eqAddr_(((hki)->bwq), (nullptr))){
if((((hki)->bwm) && (!((hki)->bwn))) && ((((hki)->bwq)->pj) == (1LL))){
(ad)((131126LL), ((hio)->ne), (new Array_<Array_<char16_t>*>(1, (v<int64_t>(((hke) + (1LL)), (new Array_<int64_t>(1, (0LL))))))));
return nullptr;
}
if((((hki)->bwm) != ((hkj)->cbm)) || (!((eds)((((hki)->bwq)->pf), ((hkj)->cbk), (false))))){
(ad)((131127LL), ((hio)->ne), (new Array_<Array_<char16_t>*>(3, (v<int64_t>(((hke) + (1LL)), (new Array_<int64_t>(1, (0LL))))), ((((hkj)->cbm) ? (new Array_<char16_t>(1, u'\u0026')) : (new Array_<char16_t>(0)))->Cat((hkc)(((hkj)->cbk)))), ((((hki)->bwm) ? (new Array_<char16_t>(1, u'\u0026')) : (new Array_<char16_t>(0)))->Cat((hkc)((((hki)->bwq)->pf)))))));
return nullptr;
}
if(((((hki)->bwq)->pf)->lw) == (1028LL)){
((hki)->bwq) = ((edv)(((hki)->bwq), ((hkj)->cbk)));
}
}
ays<List_<bvc*>*>((hkf), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>((hkg), (new Array_<int64_t>(1, (0LL))));
(hke) = ((hke) + (1LL));
}
((hio)->pj) = (1LL);
return hio;
}
// rebuildExprArray
static gd* egr(egs* hkv /*ast*/){
if(!eqAddr_(((hkv)->nk), (nullptr))){
return as_<gd>(classTable_, ((hkv)->nk), 14);
}
((hkv)->nk) = (hkv);
((hkv)->hky) = ((byb)(((hkv)->hky), (false)));
if(eqAddr_(((hkv)->hky), (nullptr))){
return nullptr;
}
if(((((hkv)->hky)->pf)->lw) != (66561LL)){
(ad)((131128LL), ((hkv)->ne), (nullptr));
return nullptr;
}
((hkv)->hld) = ((byb)(((hkv)->hld), (false)));
if(eqAddr_(((hkv)->hld), (nullptr))){
return nullptr;
}
if(!((bdm)((((hkv)->hld)->pf)))){
(ad)((131129LL), (((hkv)->hld)->ne), (nullptr));
return nullptr;
}
((hkv)->pf) = ((as_<cam>(classTable_, (((hkv)->hky)->pf), 76))->cao);
((hkv)->pj) = (3LL);
return hkv;
}
// _dtor
static void hli(egs* hlj){
((hlj)->hky) = (nullptr);
((hlj)->hld) = (nullptr);
((hlj)->pf) = (nullptr);
((hlj)->ne) = (nullptr);
((hlj)->nf) = (nullptr);
((hlj)->ng) = (nullptr);
((hlj)->nh) = (nullptr);
((hlj)->ni) = (nullptr);
((hlj)->nj) = (nullptr);
((hlj)->nk) = (nullptr);
}
// _copy
static egs* hlk(egs* hll){
egs* hlm;
(hlm) = (new egs());
((hlm)->hky) = (copy_((hll)->hky));
((hlm)->hld) = (copy_((hll)->hld));
((hlm)->pf) = (copy_((hll)->pf));
((hlm)->pj) = ((hll)->pj);
((hlm)->ne) = (copy_((hll)->ne));
((hlm)->nf) = (copy_((hll)->nf));
((hlm)->ng) = (copy_((hll)->ng));
((hlm)->nh) = (copy_((hll)->nh));
((hlm)->ni) = (copy_((hll)->ni));
((hlm)->nj) = (copy_((hll)->nj));
((hlm)->nk) = (copy_((hll)->nk));
((hlm)->no) = ((hll)->no);
((hlm)->lw) = ((hll)->lw);
return as_<egs>(classTable_, (hlm), 124);
}
// _toBin
static Array_<uint8_t>* hln(egs* hlo){
Array_<uint8_t>* hlp;
(hlp) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->hky)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->hld)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->pf)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->pj)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->ne)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->nf)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->ng)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->nh)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->ni)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->nj)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->nk)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->no)));
(hlp) = ((hlp)->Cat(toBin_((hlo)->lw)));
return hlp;
}
// _fromBin
static egs* hmd(egs* hme, Array_<uint8_t>* hmf, int64_t* hmg){
egs* hmh;
(hmh) = (new egs());
((hmh)->hky) = (fromBin_<gd*>((hmf), (*hmg)));
((hmh)->hld) = (fromBin_<gd*>((hmf), (*hmg)));
((hmh)->pf) = (fromBin_<gc*>((hmf), (*hmg)));
((hmh)->pj) = (fromBin_<int64_t>((hmf), (*hmg)));
((hmh)->ne) = (fromBin_<ga*>((hmf), (*hmg)));
((hmh)->nf) = (fromBin_<Array_<char16_t>*>((hmf), (*hmg)));
((hmh)->ng) = (fromBin_<fx*>((hmf), (*hmg)));
((hmh)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hmf), (*hmg)));
((hmh)->ni) = (fromBin_<Array_<char16_t>*>((hmf), (*hmg)));
((hmh)->nj) = (fromBin_<fx*>((hmf), (*hmg)));
((hmh)->nk) = (fromBin_<fy*>((hmf), (*hmg)));
((hmh)->no) = (fromBin_<bool>((hmf), (*hmg)));
((hmh)->lw) = (fromBin_<int64_t>((hmf), (*hmg)));
return hmh;
}
// rebuildExprDot
static gd* egu(egv* hmi /*ast*/){
bool hmp; // found
ul* hmq; // ptr
List_<um*>* hms; // items
um* hmu; // item
cau* hmz; // type
List_<gb*>* hnb; // items2
gb* hnd; // arg
cav* hne; // arg2
gc* hnl; // varType
Array_<char16_t>* hno; // member
gd* hns; // expr
cau* hnw; // func_
gc* hob; // argType
cau* how; // type
cav* hoy; // item
cav* hpa; // item
cav* hpc; // item
cam* hpt; // type
cam* hpy; // type
cam* hqd; // type
if(!eqAddr_(((hmi)->nk), (nullptr))){
return as_<gd>(classTable_, ((hmi)->nk), 14);
}
((hmi)->nk) = (hmi);
((hmi)->hjg) = ((byb)(((hmi)->hjg), (false)));
if(eqAddr_(((hmi)->hjg), (nullptr))){
return nullptr;
}
if((ele)((((hmi)->hjg)->pf))){
(hmp) = (false);
(hmq) = (as_<ul>(classTable_, ((((hmi)->hjg)->pf)->nj), 22));
while(!eqAddr_((hmq), (nullptr))){
(hms) = ((hmq)->bag);
awe<List_<um*>*>((hms), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((hms), (new Array_<int64_t>(1, (0LL)))))){
(hmu) = (awi<List_<um*>*, um*>((hms), (new Array_<int64_t>(1, (0LL)))));
if(((((hmu)->azl)->lw) == (2LL)) && (cmp_(((hmi)->hmw), (((as_<bgn>(classTable_, ((hmu)->azl), 38))->bgp)->nf)) == 0)){
((hmi)->pf) = (((as_<bgn>(classTable_, ((hmu)->azl), 38))->bgp)->qf);
((hmi)->pj) = (3LL);
(hmp) = (true);
}
else if(((((hmu)->azl)->lw) == (256LL)) && (cmp_(((hmi)->hmw), (((hmu)->azl)->nf)) == 0)){
(hmz) = (new cau());
(btv)((hmz), (66562LL), ((hmi)->ne));
((hmz)->eqb) = ((as_<fw>(classTable_, ((hmu)->azl), 8))->sm);
((hmz)->epx) = ((as_<fw>(classTable_, ((hmu)->azl), 8))->sf);
((hmz)->cbc) = (new List_<cav*>());
(hnb) = ((as_<fw>(classTable_, ((hmu)->azl), 8))->sg);
awe<List_<gb*>*>((hnb), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gb*>*>((hnb), (new Array_<int64_t>(1, (0LL)))))){
(hnd) = (awi<List_<gb*>*, gb*>((hnb), (new Array_<int64_t>(1, (0LL)))));
(hne) = (new cav());
((hne)->cbk) = ((hnd)->qf);
((hne)->cbm) = ((hnd)->ql);
uh<List_<cav*>*, cav*>(((hmz)->cbc), (new Array_<int64_t>(1, (0LL))), (hne));
ays<List_<gb*>*>((hnb), (new Array_<int64_t>(1, (0LL))));
}
((hmz)->cax) = ((as_<fw>(classTable_, ((hmu)->azl), 8))->sh);
((hmi)->pf) = (hmz);
((hmi)->pj) = (1LL);
(hmp) = (true);
}
if(hmp){
if((!((hmu)->azq)) && ((eqAddr_((((hmi)->hjg)->ni), (nullptr))) || (cmp_((((hmi)->hjg)->ni), (new Array_<char16_t>(2, u'\u006D', u'\u0065'))) != 0))){
(ad)((131131LL), ((hmi)->ne), (new Array_<Array_<char16_t>*>(1, ((hmi)->hmw))));
return nullptr;
}
((hmi)->hnj) = (hmu);
return hmi;
}
ays<List_<um*>*>((hms), (new Array_<int64_t>(1, (0LL))));
}
(hmq) = (as_<ul>(classTable_, ((hmq)->nj), 22));
}
}
else{
(hnl) = (((hmi)->hjg)->pf);
if(((hnl)->lw) == (1028LL)){
if(!((((hmi)->hjg)->lw) == (67587LL))){
throw 0xE9170000U;
}
(ad)((131116LL), ((hmi)->ne), (new Array_<Array_<char16_t>*>(1, ((as_<ehf>(classTable_, ((hmi)->hjg), 130))->goz))));
return nullptr;
}
(hno) = ((hmi)->hmw);
if((hnq)((&hno), (hnl))){
(hns) = (as_<gd>(classTable_, ((buu)((new Array_<char16_t>(4, u'\u006B', u'\u0075', u'\u0069', u'\u006E')), ((new Array_<char16_t>(1, u'\u005F'))->Cat(hno)), (true))), 14));
if(eqAddr_((hns), (nullptr))){
if(!(false)){
throw 0xE9170000U;
}
return nullptr;
}
(hnw) = (as_<cau>(classTable_, ((hns)->pf), 80));
if((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL)){
if(!((((hnw)->cbc)->Len()) >= (2LL))){
throw 0xE9170000U;
}
awe<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
if(!((bdm)(((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk)))){
throw 0xE9170000U;
}
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
(hob) = ((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk);
if(!((((hob)->lw) == (66561LL)) && ((bdm)(((as_<cam>(classTable_, (hob), 76))->cao))))){
throw 0xE9170000U;
}
awe<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk) = (hnl);
}
if((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (2LL))) != (0LL)){
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (8LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (32LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (256LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hnw)->cbc)->Len()) >= (3LL))){
throw 0xE9170000U;
}
awe<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
if(!((bdm)(((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk)))){
throw 0xE9170000U;
}
awe<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk) = (hnl);
}
if((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (8LL))) != (0LL)){
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (2LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (32LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (256LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hnw)->cbc)->Len()) >= (3LL))){
throw 0xE9170000U;
}
awe<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
if(!((bdm)(((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk)))){
throw 0xE9170000U;
}
awe<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
if(((hnl)->lw) == (66561LL)){
((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk) = ((as_<cam>(classTable_, (hnl), 76))->cao);
}
else if(((hnl)->lw) == (66563LL)){
((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk) = ((as_<cbr>(classTable_, (hnl), 84))->cbw);
}
else{
if(!(((hnl)->lw) == (66564LL))){
throw 0xE9170000U;
}
((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk) = ((as_<ccc>(classTable_, (hnl), 86))->ccd);
}
}
if((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (32LL))) != (0LL)){
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (2LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (8LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (256LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hnw)->cbc)->Len()) >= (4LL))){
throw 0xE9170000U;
}
awe<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
if(!((bdm)(((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk)))){
throw 0xE9170000U;
}
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
if(!((bdm)(((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk)))){
throw 0xE9170000U;
}
if(!(((hnl)->lw) == (66564LL))){
throw 0xE9170000U;
}
awe<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk) = ((as_<ccc>(classTable_, (hnl), 86))->ccd);
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk) = ((as_<ccc>(classTable_, (hnl), 86))->cce);
}
if((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (256LL))) != (0LL)){
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (2LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (8LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (32LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((((hnw)->cbc)->Len()) >= (3LL))){
throw 0xE9170000U;
}
awe<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
if(!((bdm)(((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk)))){
throw 0xE9170000U;
}
if(!(((hnl)->lw) == (66564LL))){
throw 0xE9170000U;
}
(how) = (new cau());
(btv)((how), (66562LL), ((hmi)->ne));
((how)->eqb) = (0LL);
((how)->epx) = (new List_<Array_<char16_t>*>());
((how)->cbc) = (new List_<cav*>());
(hoy) = (new cav());
((hoy)->cbk) = ((as_<ccc>(classTable_, (hnl), 86))->ccd);
((hoy)->cbm) = (false);
uh<List_<cav*>*, cav*>(((how)->cbc), (new Array_<int64_t>(1, (0LL))), (hoy));
(hpa) = (new cav());
((hpa)->cbk) = ((as_<ccc>(classTable_, (hnl), 86))->cce);
((hpa)->cbm) = (false);
uh<List_<cav*>*, cav*>(((how)->cbc), (new Array_<int64_t>(1, (0LL))), (hpa));
(hpc) = (new cav());
awe<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
((hpc)->cbk) = ((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk);
((hpc)->cbm) = (false);
uh<List_<cav*>*, cav*>(((how)->cbc), (new Array_<int64_t>(1, (0LL))), (hpc));
((how)->cax) = ((hnw)->cax);
awe<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
ays<List_<cav*>*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL))));
((awi<List_<cav*>*, cav*>(((hnw)->cbc), (new Array_<int64_t>(1, (0LL)))))->cbk) = (how);
}
if((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (4LL))) != (0LL)){
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdm)(((hnw)->cax)))){
throw 0xE9170000U;
}
((hnw)->cax) = (hnl);
}
if((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (16LL))) != (0LL)){
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdm)(((hnw)->cax)))){
throw 0xE9170000U;
}
if(((hnl)->lw) == (66561LL)){
((hnw)->cax) = ((as_<cam>(classTable_, (hnl), 76))->cao);
}
else if(((hnl)->lw) == (66563LL)){
((hnw)->cax) = ((as_<cbr>(classTable_, (hnl), 84))->cbw);
}
else{
if(!(((hnl)->lw) == (66564LL))){
throw 0xE9170000U;
}
((hnw)->cax) = ((as_<ccc>(classTable_, (hnl), 86))->cce);
}
}
if((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (64LL))) != (0LL)){
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdm)(((hnw)->cax)))){
throw 0xE9170000U;
}
if(!(((hnl)->lw) == (66563LL))){
throw 0xE9170000U;
}
if(!(((as_<cbr>(classTable_, (hnl), 84))->cbu) == (0LL))){
throw 0xE9170000U;
}
(hpt) = (new cam());
(btv)((hpt), (66561LL), ((hmi)->ne));
((hpt)->cao) = ((as_<cbr>(classTable_, (hnl), 84))->cbw);
((hnw)->cax) = (hpt);
}
if((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (512LL))) != (0LL)){
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdm)(((hnw)->cax)))){
throw 0xE9170000U;
}
if(!(((hnl)->lw) == (66564LL))){
throw 0xE9170000U;
}
(hpy) = (new cam());
(btv)((hpy), (66561LL), ((hmi)->ne));
((hpy)->cao) = ((as_<ccc>(classTable_, (hnl), 86))->ccd);
((hnw)->cax) = (hpy);
}
if((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1024LL))) != (0LL)){
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) != (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (4LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (16LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (64LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((aye<int64_t>(((hnw)->eqb), (new Array_<int64_t>(1, (0LL))), (512LL))) == (0LL))){
throw 0xE9170000U;
}
if(!((bdm)(((hnw)->cax)))){
throw 0xE9170000U;
}
if(!(((hnl)->lw) == (66564LL))){
throw 0xE9170000U;
}
(hqd) = (new cam());
(btv)((hqd), (66561LL), ((hmi)->ne));
((hqd)->cao) = ((as_<ccc>(classTable_, (hnl), 86))->cce);
((hnw)->cax) = (hqd);
}
((hmi)->nj) = (hns);
((hmi)->pf) = ((hns)->pf);
((hmi)->pj) = (1LL);
return hmi;
}
}
(ad)((131130LL), ((hmi)->ne), (new Array_<Array_<char16_t>*>(1, ((hmi)->hmw))));
return nullptr;
}
// _dtor
static void hqe(egv* hqf){
((hqf)->hjg) = (nullptr);
((hqf)->hmw) = (nullptr);
((hqf)->hnj) = (nullptr);
((hqf)->pf) = (nullptr);
((hqf)->ne) = (nullptr);
((hqf)->nf) = (nullptr);
((hqf)->ng) = (nullptr);
((hqf)->nh) = (nullptr);
((hqf)->ni) = (nullptr);
((hqf)->nj) = (nullptr);
((hqf)->nk) = (nullptr);
}
// _copy
static egv* hqg(egv* hqh){
egv* hqi;
(hqi) = (new egv());
((hqi)->hjg) = (copy_((hqh)->hjg));
((hqi)->hmw) = (copy_((hqh)->hmw));
((hqi)->hnj) = (copy_((hqh)->hnj));
((hqi)->pf) = (copy_((hqh)->pf));
((hqi)->pj) = ((hqh)->pj);
((hqi)->ne) = (copy_((hqh)->ne));
((hqi)->nf) = (copy_((hqh)->nf));
((hqi)->ng) = (copy_((hqh)->ng));
((hqi)->nh) = (copy_((hqh)->nh));
((hqi)->ni) = (copy_((hqh)->ni));
((hqi)->nj) = (copy_((hqh)->nj));
((hqi)->nk) = (copy_((hqh)->nk));
((hqi)->no) = ((hqh)->no);
((hqi)->lw) = ((hqh)->lw);
return as_<egv>(classTable_, (hqi), 126);
}
// _toBin
static Array_<uint8_t>* hqj(egv* hqk){
Array_<uint8_t>* hql;
(hql) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hql) = ((hql)->Cat(toBin_((hqk)->hjg)));
(hql) = ((hql)->Cat(toBin_((hqk)->hmw)));
(hql) = ((hql)->Cat(toBin_((hqk)->hnj)));
(hql) = ((hql)->Cat(toBin_((hqk)->pf)));
(hql) = ((hql)->Cat(toBin_((hqk)->pj)));
(hql) = ((hql)->Cat(toBin_((hqk)->ne)));
(hql) = ((hql)->Cat(toBin_((hqk)->nf)));
(hql) = ((hql)->Cat(toBin_((hqk)->ng)));
(hql) = ((hql)->Cat(toBin_((hqk)->nh)));
(hql) = ((hql)->Cat(toBin_((hqk)->ni)));
(hql) = ((hql)->Cat(toBin_((hqk)->nj)));
(hql) = ((hql)->Cat(toBin_((hqk)->nk)));
(hql) = ((hql)->Cat(toBin_((hqk)->no)));
(hql) = ((hql)->Cat(toBin_((hqk)->lw)));
return hql;
}
// _fromBin
static egv* hra(egv* hrb, Array_<uint8_t>* hrc, int64_t* hrd){
egv* hre;
(hre) = (new egv());
((hre)->hjg) = (fromBin_<gd*>((hrc), (*hrd)));
((hre)->hmw) = (fromBin_<Array_<char16_t>*>((hrc), (*hrd)));
((hre)->hnj) = (fromBin_<um*>((hrc), (*hrd)));
((hre)->pf) = (fromBin_<gc*>((hrc), (*hrd)));
((hre)->pj) = (fromBin_<int64_t>((hrc), (*hrd)));
((hre)->ne) = (fromBin_<ga*>((hrc), (*hrd)));
((hre)->nf) = (fromBin_<Array_<char16_t>*>((hrc), (*hrd)));
((hre)->ng) = (fromBin_<fx*>((hrc), (*hrd)));
((hre)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hrc), (*hrd)));
((hre)->ni) = (fromBin_<Array_<char16_t>*>((hrc), (*hrd)));
((hre)->nj) = (fromBin_<fx*>((hrc), (*hrd)));
((hre)->nk) = (fromBin_<fy*>((hrc), (*hrd)));
((hre)->no) = (fromBin_<bool>((hrc), (*hrd)));
((hre)->lw) = (fromBin_<int64_t>((hrc), (*hrd)));
return hre;
}
// rebuildExprValue
static gd* egx(bvu* hrf /*ast*/){
if(!eqAddr_(((hrf)->nk), (nullptr))){
return as_<gd>(classTable_, ((hrf)->nk), 14);
}
((hrf)->nk) = (hrf);
if(!(((hrf)->lw) == (67584LL))){
throw 0xE9170000U;
}
((hrf)->pj) = (1LL);
return hrf;
}
// rebuildExprValuePrim
static gd* egz(bvt* hri /*ast*/){
if(!eqAddr_(((hri)->nk), (nullptr))){
return as_<gd>(classTable_, ((hri)->nk), 14);
}
((hri)->nk) = (hri);
((hri)->pj) = (1LL);
return hri;
}
// rebuildExprValueStr
static gd* ehb(ehc* hrl /*ast*/){
if(!eqAddr_(((hrl)->nk), (nullptr))){
return as_<gd>(classTable_, ((hrl)->nk), 14);
}
((hrl)->nk) = (hrl);
((hrl)->pj) = (1LL);
return hrl;
}
// _dtor
static void hro(ehc* hrp){
((hrp)->gqn) = (nullptr);
((hrp)->pf) = (nullptr);
((hrp)->ne) = (nullptr);
((hrp)->nf) = (nullptr);
((hrp)->ng) = (nullptr);
((hrp)->nh) = (nullptr);
((hrp)->ni) = (nullptr);
((hrp)->nj) = (nullptr);
((hrp)->nk) = (nullptr);
}
// _copy
static ehc* hrq(ehc* hrr){
ehc* hrs;
(hrs) = (new ehc());
((hrs)->gqn) = (copy_((hrr)->gqn));
((hrs)->pf) = (copy_((hrr)->pf));
((hrs)->pj) = ((hrr)->pj);
((hrs)->ne) = (copy_((hrr)->ne));
((hrs)->nf) = (copy_((hrr)->nf));
((hrs)->ng) = (copy_((hrr)->ng));
((hrs)->nh) = (copy_((hrr)->nh));
((hrs)->ni) = (copy_((hrr)->ni));
((hrs)->nj) = (copy_((hrr)->nj));
((hrs)->nk) = (copy_((hrr)->nk));
((hrs)->no) = ((hrr)->no);
((hrs)->lw) = ((hrr)->lw);
return as_<ehc>(classTable_, (hrs), 128);
}
// _toBin
static Array_<uint8_t>* hrt(ehc* hru){
Array_<uint8_t>* hrv;
(hrv) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hrv) = ((hrv)->Cat(toBin_((hru)->gqn)));
(hrv) = ((hrv)->Cat(toBin_((hru)->pf)));
(hrv) = ((hrv)->Cat(toBin_((hru)->pj)));
(hrv) = ((hrv)->Cat(toBin_((hru)->ne)));
(hrv) = ((hrv)->Cat(toBin_((hru)->nf)));
(hrv) = ((hrv)->Cat(toBin_((hru)->ng)));
(hrv) = ((hrv)->Cat(toBin_((hru)->nh)));
(hrv) = ((hrv)->Cat(toBin_((hru)->ni)));
(hrv) = ((hrv)->Cat(toBin_((hru)->nj)));
(hrv) = ((hrv)->Cat(toBin_((hru)->nk)));
(hrv) = ((hrv)->Cat(toBin_((hru)->no)));
(hrv) = ((hrv)->Cat(toBin_((hru)->lw)));
return hrv;
}
// _fromBin
static ehc* hsi(ehc* hsj, Array_<uint8_t>* hsk, int64_t* hsl){
ehc* hsm;
(hsm) = (new ehc());
((hsm)->gqn) = (fromBin_<Array_<char16_t>*>((hsk), (*hsl)));
((hsm)->pf) = (fromBin_<gc*>((hsk), (*hsl)));
((hsm)->pj) = (fromBin_<int64_t>((hsk), (*hsl)));
((hsm)->ne) = (fromBin_<ga*>((hsk), (*hsl)));
((hsm)->nf) = (fromBin_<Array_<char16_t>*>((hsk), (*hsl)));
((hsm)->ng) = (fromBin_<fx*>((hsk), (*hsl)));
((hsm)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hsk), (*hsl)));
((hsm)->ni) = (fromBin_<Array_<char16_t>*>((hsk), (*hsl)));
((hsm)->nj) = (fromBin_<fx*>((hsk), (*hsl)));
((hsm)->nk) = (fromBin_<fy*>((hsk), (*hsl)));
((hsm)->no) = (fromBin_<bool>((hsk), (*hsl)));
((hsm)->lw) = (fromBin_<int64_t>((hsk), (*hsl)));
return hsm;
}
// rebuildExprValueEnumElement
static gd* ehe(ehf* hsn /*ast*/){
if(!eqAddr_(((hsn)->nk), (nullptr))){
return as_<gd>(classTable_, ((hsn)->nk), 14);
}
((hsn)->nk) = (hsn);
((hsn)->pj) = (1LL);
return hsn;
}
// _dtor
static void hsq(ehf* hsr){
((hsr)->goz) = (nullptr);
((hsr)->pf) = (nullptr);
((hsr)->ne) = (nullptr);
((hsr)->nf) = (nullptr);
((hsr)->ng) = (nullptr);
((hsr)->nh) = (nullptr);
((hsr)->ni) = (nullptr);
((hsr)->nj) = (nullptr);
((hsr)->nk) = (nullptr);
}
// _copy
static ehf* hss(ehf* hst){
ehf* hsu;
(hsu) = (new ehf());
((hsu)->goz) = (copy_((hst)->goz));
((hsu)->pf) = (copy_((hst)->pf));
((hsu)->pj) = ((hst)->pj);
((hsu)->ne) = (copy_((hst)->ne));
((hsu)->nf) = (copy_((hst)->nf));
((hsu)->ng) = (copy_((hst)->ng));
((hsu)->nh) = (copy_((hst)->nh));
((hsu)->ni) = (copy_((hst)->ni));
((hsu)->nj) = (copy_((hst)->nj));
((hsu)->nk) = (copy_((hst)->nk));
((hsu)->no) = ((hst)->no);
((hsu)->lw) = ((hst)->lw);
return as_<ehf>(classTable_, (hsu), 130);
}
// _toBin
static Array_<uint8_t>* hsv(ehf* hsw){
Array_<uint8_t>* hsx;
(hsx) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hsx) = ((hsx)->Cat(toBin_((hsw)->goz)));
(hsx) = ((hsx)->Cat(toBin_((hsw)->pf)));
(hsx) = ((hsx)->Cat(toBin_((hsw)->pj)));
(hsx) = ((hsx)->Cat(toBin_((hsw)->ne)));
(hsx) = ((hsx)->Cat(toBin_((hsw)->nf)));
(hsx) = ((hsx)->Cat(toBin_((hsw)->ng)));
(hsx) = ((hsx)->Cat(toBin_((hsw)->nh)));
(hsx) = ((hsx)->Cat(toBin_((hsw)->ni)));
(hsx) = ((hsx)->Cat(toBin_((hsw)->nj)));
(hsx) = ((hsx)->Cat(toBin_((hsw)->nk)));
(hsx) = ((hsx)->Cat(toBin_((hsw)->no)));
(hsx) = ((hsx)->Cat(toBin_((hsw)->lw)));
return hsx;
}
// _fromBin
static ehf* htk(ehf* htl, Array_<uint8_t>* htm, int64_t* htn){
ehf* hto;
(hto) = (new ehf());
((hto)->goz) = (fromBin_<Array_<char16_t>*>((htm), (*htn)));
((hto)->pf) = (fromBin_<gc*>((htm), (*htn)));
((hto)->pj) = (fromBin_<int64_t>((htm), (*htn)));
((hto)->ne) = (fromBin_<ga*>((htm), (*htn)));
((hto)->nf) = (fromBin_<Array_<char16_t>*>((htm), (*htn)));
((hto)->ng) = (fromBin_<fx*>((htm), (*htn)));
((hto)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((htm), (*htn)));
((hto)->ni) = (fromBin_<Array_<char16_t>*>((htm), (*htn)));
((hto)->nj) = (fromBin_<fx*>((htm), (*htn)));
((hto)->nk) = (fromBin_<fy*>((htm), (*htn)));
((hto)->no) = (fromBin_<bool>((htm), (*htn)));
((hto)->lw) = (fromBin_<int64_t>((htm), (*htn)));
return hto;
}
// rebuildExprValueFloat
static gd* ehh(ehi* htp /*ast*/){
if(!eqAddr_(((htp)->nk), (nullptr))){
return as_<gd>(classTable_, ((htp)->nk), 14);
}
((htp)->nk) = (htp);
((htp)->pj) = (1LL);
return htp;
}
// _dtor
static void hts(ehi* htt){
((htt)->pf) = (nullptr);
((htt)->ne) = (nullptr);
((htt)->nf) = (nullptr);
((htt)->ng) = (nullptr);
((htt)->nh) = (nullptr);
((htt)->ni) = (nullptr);
((htt)->nj) = (nullptr);
((htt)->nk) = (nullptr);
}
// _copy
static ehi* htu(ehi* htv){
ehi* htw;
(htw) = (new ehi());
((htw)->glp) = ((htv)->glp);
((htw)->pf) = (copy_((htv)->pf));
((htw)->pj) = ((htv)->pj);
((htw)->ne) = (copy_((htv)->ne));
((htw)->nf) = (copy_((htv)->nf));
((htw)->ng) = (copy_((htv)->ng));
((htw)->nh) = (copy_((htv)->nh));
((htw)->ni) = (copy_((htv)->ni));
((htw)->nj) = (copy_((htv)->nj));
((htw)->nk) = (copy_((htv)->nk));
((htw)->no) = ((htv)->no);
((htw)->lw) = ((htv)->lw);
return as_<ehi>(classTable_, (htw), 132);
}
// _toBin
static Array_<uint8_t>* htx(ehi* hty){
Array_<uint8_t>* htz;
(htz) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(htz) = ((htz)->Cat(toBin_((hty)->glp)));
(htz) = ((htz)->Cat(toBin_((hty)->pf)));
(htz) = ((htz)->Cat(toBin_((hty)->pj)));
(htz) = ((htz)->Cat(toBin_((hty)->ne)));
(htz) = ((htz)->Cat(toBin_((hty)->nf)));
(htz) = ((htz)->Cat(toBin_((hty)->ng)));
(htz) = ((htz)->Cat(toBin_((hty)->nh)));
(htz) = ((htz)->Cat(toBin_((hty)->ni)));
(htz) = ((htz)->Cat(toBin_((hty)->nj)));
(htz) = ((htz)->Cat(toBin_((hty)->nk)));
(htz) = ((htz)->Cat(toBin_((hty)->no)));
(htz) = ((htz)->Cat(toBin_((hty)->lw)));
return htz;
}
// _fromBin
static ehi* hum(ehi* hun, Array_<uint8_t>* huo, int64_t* hup){
ehi* huq;
(huq) = (new ehi());
((huq)->glp) = (fromBin_<double>((huo), (*hup)));
((huq)->pf) = (fromBin_<gc*>((huo), (*hup)));
((huq)->pj) = (fromBin_<int64_t>((huo), (*hup)));
((huq)->ne) = (fromBin_<ga*>((huo), (*hup)));
((huq)->nf) = (fromBin_<Array_<char16_t>*>((huo), (*hup)));
((huq)->ng) = (fromBin_<fx*>((huo), (*hup)));
((huq)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((huo), (*hup)));
((huq)->ni) = (fromBin_<Array_<char16_t>*>((huo), (*hup)));
((huq)->nj) = (fromBin_<fx*>((huo), (*hup)));
((huq)->nk) = (fromBin_<fy*>((huo), (*hup)));
((huq)->no) = (fromBin_<bool>((huo), (*hup)));
((huq)->lw) = (fromBin_<int64_t>((huo), (*hup)));
return huq;
}
// rebuildExprValueArray
static gd* ehk(ehl* hur /*ast*/){
bool huv; // nullSet
bool huw; // enumSet
List_<gd*>* hux; // items
gd* huz; // data
gc* hvd; // dataType
cam* hvs; // type
List_<gd*>* hwb; // items
gd* hwd; // item
bool hwj; // isConst
List_<gd*>* hwl; // items
ehc* hwt; // ast2
Array_<char16_t>* hwu; // s
int64_t hwv; // idx
List_<gd*>* hww; // items
if(!eqAddr_(((hur)->nk), (nullptr))){
return as_<gd>(classTable_, ((hur)->nk), 14);
}
((hur)->nk) = (hur);
if(!(eqAddr_(((hur)->pf), (nullptr)))){
throw 0xE9170000U;
}
(huv) = (false);
(huw) = (false);
(hux) = ((hur)->hjp);
awe<List_<gd*>*>((hux), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((hux), (new Array_<int64_t>(1, (0LL)))))){
(huz) = (awi<List_<gd*>*, gd*>((hux), (new Array_<int64_t>(1, (0LL)))));
(huz) = ((byb)((huz), (false)));
if(eqAddr_((huz), (nullptr))){
return nullptr;
}
(hvd) = ((huz)->pf);
if(eqAddr_(((hur)->pf), (nullptr))){
if(((hvd)->lw) == (1027LL)){
if(huw){
(ad)((131132LL), ((hur)->ne), (nullptr));
return nullptr;
}
(huv) = (true);
}
else if(((hvd)->lw) == (1028LL)){
if(huv){
(ad)((131133LL), ((hur)->ne), (nullptr));
return nullptr;
}
(huw) = (true);
}
else{
if((huv) && (!((frk)((hvd))))){
(ad)((131133LL), ((hur)->ne), (nullptr));
return nullptr;
}
if((huw) && (!((ewh)((hvd))))){
(ad)((131132LL), ((hur)->ne), (nullptr));
return nullptr;
}
(hvs) = (new cam());
(btv)((hvs), (66561LL), ((hvd)->ne));
((hvs)->cao) = (hvd);
((hur)->pf) = (hvs);
}
}
else if(!((eds)(((as_<cam>(classTable_, ((hur)->pf), 76))->cao), (hvd), (false)))){
(ad)((131132LL), ((hur)->ne), (nullptr));
return nullptr;
}
bfk<List_<gd*>*, gd*>((hux), (new Array_<int64_t>(1, (0LL))), (huz));
bfm<List_<gd*>*>((hux), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_(((hur)->pf), (nullptr))){
if(huw){
(ad)((131134LL), ((hur)->ne), (nullptr));
return nullptr;
}
else{
(ad)((131135LL), ((hur)->ne), (nullptr));
return nullptr;
}
}
if((ewh)(((as_<cam>(classTable_, ((hur)->pf), 76))->cao))){
(hwb) = ((hur)->hjp);
awe<List_<gd*>*>((hwb), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((hwb), (new Array_<int64_t>(1, (0LL)))))){
(hwd) = (awi<List_<gd*>*, gd*>((hwb), (new Array_<int64_t>(1, (0LL)))));
if((((hwd)->pf)->lw) == (1028LL)){
(hwd) = ((edv)((hwd), ((as_<cam>(classTable_, ((hur)->pf), 76))->cao)));
bfk<List_<gd*>*, gd*>((hwb), (new Array_<int64_t>(1, (0LL))), (hwd));
bfm<List_<gd*>*>((hwb), (new Array_<int64_t>(1, (0LL))));
}
else{
ays<List_<gd*>*>((hwb), (new Array_<int64_t>(1, (0LL))));
}
}
}
if((fob)(((hur)->pf))){
(hwj) = (true);
(hwl) = ((hur)->hjp);
awe<List_<gd*>*>((hwl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((hwl), (new Array_<int64_t>(1, (0LL)))))){
if((aye<int64_t>(((awi<List_<gd*>*, gd*>((hwl), (new Array_<int64_t>(1, (0LL)))))->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) != (67584LL)){
(hwj) = (false);
break;
}
ays<List_<gd*>*>((hwl), (new Array_<int64_t>(1, (0LL))));
}
if(hwj){
(hwt) = (new ehc());
(bvd)((hwt), (67586LL), ((hur)->ne));
((hwt)->pf) = ((hur)->pf);
(hwu) = (newArray_<char16_t, Array_<char16_t>*>(1, (((hur)->hjp)->Len())));
(hwv) = (0LL);
(hww) = ((hur)->hjp);
awe<List_<gd*>*>((hww), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((hww), (new Array_<int64_t>(1, (0LL)))))){
((hwu)->At(hwv)) = (static_cast<char16_t>((as_<bvt>(classTable_, (awi<List_<gd*>*, gd*>((hww), (new Array_<int64_t>(1, (0LL))))), 70))->bvv));
ays<List_<gd*>*>((hww), (new Array_<int64_t>(1, (0LL))));
(hwv) = ((hwv) + (1LL));
}
((hwt)->gqn) = (hwu);
(hwt) = (as_<ehc>(classTable_, ((ehb)((hwt))), 128));
((hur)->nk) = (hwt);
return as_<gd>(classTable_, ((hur)->nk), 14);
}
}
((hur)->pj) = (1LL);
return hur;
}
// _dtor
static void hwz(ehl* hxa){
((hxa)->hjp) = (nullptr);
((hxa)->pf) = (nullptr);
((hxa)->ne) = (nullptr);
((hxa)->nf) = (nullptr);
((hxa)->ng) = (nullptr);
((hxa)->nh) = (nullptr);
((hxa)->ni) = (nullptr);
((hxa)->nj) = (nullptr);
((hxa)->nk) = (nullptr);
}
// _copy
static ehl* hxb(ehl* hxc){
ehl* hxd;
(hxd) = (new ehl());
((hxd)->hjp) = (copy_((hxc)->hjp));
((hxd)->pf) = (copy_((hxc)->pf));
((hxd)->pj) = ((hxc)->pj);
((hxd)->ne) = (copy_((hxc)->ne));
((hxd)->nf) = (copy_((hxc)->nf));
((hxd)->ng) = (copy_((hxc)->ng));
((hxd)->nh) = (copy_((hxc)->nh));
((hxd)->ni) = (copy_((hxc)->ni));
((hxd)->nj) = (copy_((hxc)->nj));
((hxd)->nk) = (copy_((hxc)->nk));
((hxd)->no) = ((hxc)->no);
((hxd)->lw) = ((hxc)->lw);
return as_<ehl>(classTable_, (hxd), 134);
}
// _toBin
static Array_<uint8_t>* hxe(ehl* hxf){
Array_<uint8_t>* hxg;
(hxg) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hxg) = ((hxg)->Cat(toBin_((hxf)->hjp)));
(hxg) = ((hxg)->Cat(toBin_((hxf)->pf)));
(hxg) = ((hxg)->Cat(toBin_((hxf)->pj)));
(hxg) = ((hxg)->Cat(toBin_((hxf)->ne)));
(hxg) = ((hxg)->Cat(toBin_((hxf)->nf)));
(hxg) = ((hxg)->Cat(toBin_((hxf)->ng)));
(hxg) = ((hxg)->Cat(toBin_((hxf)->nh)));
(hxg) = ((hxg)->Cat(toBin_((hxf)->ni)));
(hxg) = ((hxg)->Cat(toBin_((hxf)->nj)));
(hxg) = ((hxg)->Cat(toBin_((hxf)->nk)));
(hxg) = ((hxg)->Cat(toBin_((hxf)->no)));
(hxg) = ((hxg)->Cat(toBin_((hxf)->lw)));
return hxg;
}
// _fromBin
static ehl* hxt(ehl* hxu, Array_<uint8_t>* hxv, int64_t* hxw){
ehl* hxx;
(hxx) = (new ehl());
((hxx)->hjp) = (fromBin_<List_<gd*>*>((hxv), (*hxw)));
((hxx)->pf) = (fromBin_<gc*>((hxv), (*hxw)));
((hxx)->pj) = (fromBin_<int64_t>((hxv), (*hxw)));
((hxx)->ne) = (fromBin_<ga*>((hxv), (*hxw)));
((hxx)->nf) = (fromBin_<Array_<char16_t>*>((hxv), (*hxw)));
((hxx)->ng) = (fromBin_<fx*>((hxv), (*hxw)));
((hxx)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hxv), (*hxw)));
((hxx)->ni) = (fromBin_<Array_<char16_t>*>((hxv), (*hxw)));
((hxx)->nj) = (fromBin_<fx*>((hxv), (*hxw)));
((hxx)->nk) = (fromBin_<fy*>((hxv), (*hxw)));
((hxx)->no) = (fromBin_<bool>((hxv), (*hxw)));
((hxx)->lw) = (fromBin_<int64_t>((hxv), (*hxw)));
return hxx;
}
// _dtor
static void hxy(ejc* hxz){
((hxz)->eje) = (nullptr);
((hxz)->ne) = (nullptr);
((hxz)->nf) = (nullptr);
((hxz)->ng) = (nullptr);
((hxz)->nh) = (nullptr);
((hxz)->ni) = (nullptr);
((hxz)->nj) = (nullptr);
((hxz)->nk) = (nullptr);
}
// _copy
static ejc* hya(ejc* hyb){
ejc* hyc;
(hyc) = (new ejc());
((hyc)->eje) = (copy_((hyb)->eje));
((hyc)->ne) = (copy_((hyb)->ne));
((hyc)->nf) = (copy_((hyb)->nf));
((hyc)->ng) = (copy_((hyb)->ng));
((hyc)->nh) = (copy_((hyb)->nh));
((hyc)->ni) = (copy_((hyb)->ni));
((hyc)->nj) = (copy_((hyb)->nj));
((hyc)->nk) = (copy_((hyb)->nk));
((hyc)->no) = ((hyb)->no);
((hyc)->lw) = ((hyb)->lw);
return as_<ejc>(classTable_, (hyc), 136);
}
// _toBin
static Array_<uint8_t>* hyd(ejc* hye){
Array_<uint8_t>* hyf;
(hyf) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(hyf) = ((hyf)->Cat(toBin_((hye)->eje)));
(hyf) = ((hyf)->Cat(toBin_((hye)->ne)));
(hyf) = ((hyf)->Cat(toBin_((hye)->nf)));
(hyf) = ((hyf)->Cat(toBin_((hye)->ng)));
(hyf) = ((hyf)->Cat(toBin_((hye)->nh)));
(hyf) = ((hyf)->Cat(toBin_((hye)->ni)));
(hyf) = ((hyf)->Cat(toBin_((hye)->nj)));
(hyf) = ((hyf)->Cat(toBin_((hye)->nk)));
(hyf) = ((hyf)->Cat(toBin_((hye)->no)));
(hyf) = ((hyf)->Cat(toBin_((hye)->lw)));
return hyf;
}
// _fromBin
static ejc* hyq(ejc* hyr, Array_<uint8_t>* hys, int64_t* hyt){
ejc* hyu;
(hyu) = (new ejc());
((hyu)->eje) = (fromBin_<bgn*>((hys), (*hyt)));
((hyu)->ne) = (fromBin_<ga*>((hys), (*hyt)));
((hyu)->nf) = (fromBin_<Array_<char16_t>*>((hys), (*hyt)));
((hyu)->ng) = (fromBin_<fx*>((hys), (*hyt)));
((hyu)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((hys), (*hyt)));
((hyu)->ni) = (fromBin_<Array_<char16_t>*>((hys), (*hyt)));
((hyu)->nj) = (fromBin_<fx*>((hys), (*hyt)));
((hyu)->nk) = (fromBin_<fy*>((hys), (*hyt)));
((hyu)->no) = (fromBin_<bool>((hys), (*hyt)));
((hyu)->lw) = (fromBin_<int64_t>((hys), (*hyt)));
return hyu;
}
// rebuildVar
static void ejd(bgn* hyv /*ast*/){
if(!eqAddr_(((hyv)->nk), (nullptr))){
return;
}
((hyv)->nk) = (hyv);
(bxf)(((hyv)->bgp));
}
// makeExprDefaultValue
static bvu* eju(gc* hyy /*type*/, ga* hyz /*pos*/){
bvt* hzc; // value
ehi* hzh; // value
int64_t hzj;
bvt* hzl; // value
if((ewh)((hyy))){
(hzc) = (new bvt());
(bvd)((hzc), (67585LL), (hyz));
((hzc)->pf) = (hyy);
((hzc)->bvv) = (0x0000000000000000ULL);
return hzc;
}
if((frk)((hyy))){
return (byu)((hyz));
}
if((glc)((hyy))){
(hzh) = (new ehi());
(bvd)((hzh), (67588LL), (hyz));
((hzh)->pf) = (hyy);
((hzh)->glp) = (0.0);
return hzh;
}
hzj = (hyy)->lw;
switch(hzj){
case 1025LL:
case 1026LL:
(hzl) = (new bvt());
(bvd)((hzl), (67585LL), (hyz));
((hzl)->pf) = (hyy);
((hzl)->bvv) = (0x0000000000000000ULL);
return hzl;
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// rebuildIf
static ge* ekc(clz* hzn /*ast*/, gc* hzo /*retType*/, fw* hzp /*parentFunc*/){
List_<cma*>* hzv; // items
cma* hzx; // elIf
bua* iae; // stats
List_<cma*>* ial; // items
cma* iap; // elIf
bua* iay; // block_
if(!eqAddr_(((hzn)->nk), (nullptr))){
return as_<ge>(classTable_, ((hzn)->nk), 16);
}
((hzn)->nk) = (hzn);
((hzn)->ete) = ((byb)(((hzn)->ete), (false)));
if((!eqAddr_(((hzn)->ete), (nullptr))) && (!((gls)((((hzn)->ete)->pf))))){
(ad)((131094LL), (((hzn)->ete)->ne), (nullptr));
}
((hzn)->etg) = (as_<bua>(classTable_, ((eko)(((hzn)->etg), (hzo), (hzp))), 54));
(hzv) = ((hzn)->etm);
awe<List_<cma*>*>((hzv), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cma*>*>((hzv), (new Array_<int64_t>(1, (0LL)))))){
(hzx) = (awi<List_<cma*>*, cma*>((hzv), (new Array_<int64_t>(1, (0LL)))));
((hzx)->etp) = ((byb)(((hzx)->etp), (false)));
if((!eqAddr_(((hzx)->etp), (nullptr))) && (!((gls)((((hzx)->etp)->pf))))){
(ad)((131095LL), (((hzx)->etp)->ne), (nullptr));
}
((hzx)->etq) = (as_<bua>(classTable_, ((eko)(((hzx)->etq), (hzo), (hzp))), 54));
ays<List_<cma*>*>((hzv), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((hzn)->ets), (nullptr))){
((hzn)->ets) = (as_<bua>(classTable_, ((eko)(((hzn)->ets), (hzo), (hzp))), 54));
}
if(!eqAddr_(((hzn)->ete), (nullptr))){
(iae) = (nullptr);
if((((hzn)->ete)->lw) != (67585LL)){
return hzn;
}
if(((as_<bvt>(classTable_, ((hzn)->ete), 70))->bvv) != (0x0000000000000000ULL)){
(iae) = ((hzn)->etg);
}
if(!eqAddr_((iae), (nullptr))){
(ial) = ((hzn)->etm);
awe<List_<cma*>*>((ial), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cma*>*>((ial), (new Array_<int64_t>(1, (0LL)))))){
(iap) = (awi<List_<cma*>*, cma*>((ial), (new Array_<int64_t>(1, (0LL)))));
if((((iap)->etp)->lw) != (67585LL)){
return hzn;
}
if(((as_<bvt>(classTable_, ((iap)->etp), 70))->bvv) != (0x0000000000000000ULL)){
(iae) = ((iap)->etq);
break;
}
ays<List_<cma*>*>((ial), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_((iae), (nullptr))){
if(eqAddr_(((hzn)->ets), (nullptr))){
(iay) = (new bua());
(btv)((iay), (66052LL), ((hzn)->ne));
((iay)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((iay)->bum) = (new List_<ge*>());
(iae) = (iay);
}
else{
(iae) = ((hzn)->ets);
}
}
}
((hzn)->ete) = (nullptr);
((hzn)->etg) = (iae);
}
return hzn;
}
// rebuildSwitch
static ge* eke(cmd* iba /*ast*/, gc* ibb /*retType*/, fw* ibc /*parentFunc*/){
List_<cme*>* ibk; // items
cme* ibm; // case_
List_<buc*>* ibn; // items2
buc* ibp; // exprs
if(!eqAddr_(((iba)->nk), (nullptr))){
return as_<ge>(classTable_, ((iba)->nk), 16);
}
((iba)->nk) = (iba);
((iba)->ewf) = ((byb)(((iba)->ewf), (false)));
if(!eqAddr_(((iba)->ewf), (nullptr))){
if(!((gos)((((iba)->ewf)->pf), (true)))){
(ad)((131096LL), (((iba)->ewf)->ne), (nullptr));
}
(((iba)->buj)->qf) = (((iba)->ewf)->pf);
}
(ibk) = ((iba)->ewk);
awe<List_<cme*>*>((ibk), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cme*>*>((ibk), (new Array_<int64_t>(1, (0LL)))))){
(ibm) = (awi<List_<cme*>*, cme*>((ibk), (new Array_<int64_t>(1, (0LL)))));
(ibn) = ((ibm)->ewo);
awe<List_<buc*>*>((ibn), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buc*>*>((ibn), (new Array_<int64_t>(1, (0LL)))))){
(ibp) = (awi<List_<buc*>*, buc*>((ibn), (new Array_<int64_t>(1, (0LL)))));
((ibp)->bvy) = ((byb)(((ibp)->bvy), (false)));
if((!eqAddr_(((iba)->ewf), (nullptr))) && (!eqAddr_(((ibp)->bvy), (nullptr)))){
if(!((eds)((((iba)->ewf)->pf), (((ibp)->bvy)->pf), (false)))){
(ad)((131097LL), (((ibp)->bvy)->ne), (nullptr));
}
else if(((((ibp)->bvy)->pf)->lw) == (1028LL)){
((ibp)->bvy) = ((edv)(((ibp)->bvy), (((iba)->ewf)->pf)));
}
}
if(!eqAddr_(((ibp)->bwd), (nullptr))){
((ibp)->bwd) = ((byb)(((ibp)->bwd), (false)));
if((!eqAddr_(((iba)->ewf), (nullptr))) && (!eqAddr_(((ibp)->bwd), (nullptr)))){
if(!((eds)((((iba)->ewf)->pf), (((ibp)->bwd)->pf), (false)))){
(ad)((131097LL), (((ibp)->bwd)->ne), (nullptr));
}
else if(((((ibp)->bwd)->pf)->lw) == (1028LL)){
((ibp)->bwd) = ((edv)(((ibp)->bwd), (((iba)->ewf)->pf)));
}
}
}
ays<List_<buc*>*>((ibn), (new Array_<int64_t>(1, (0LL))));
}
((ibm)->exc) = (as_<bua>(classTable_, ((eko)(((ibm)->exc), (ibb), (ibc))), 54));
ays<List_<cme*>*>((ibk), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((iba)->exe), (nullptr))){
((iba)->exe) = (as_<bua>(classTable_, ((eko)(((iba)->exe), (ibb), (ibc))), 54));
}
return iba;
}
// rebuildWhile
static ge* ekg(cmh* ice /*ast*/, gc* icf /*retType*/, fw* icg /*parentFunc*/){
if(!eqAddr_(((ice)->nk), (nullptr))){
return as_<ge>(classTable_, ((ice)->nk), 16);
}
((ice)->nk) = (ice);
if(!eqAddr_(((ice)->fal), (nullptr))){
((ice)->fal) = ((byb)(((ice)->fal), (false)));
if((!eqAddr_(((ice)->fal), (nullptr))) && (!((gls)((((ice)->fal)->pf))))){
(ad)((131098LL), (((ice)->fal)->ne), (nullptr));
}
}
((ice)->fan) = ((bxj)(((ice)->fan), (icf), (icg)));
return ice;
}
// rebuildFor
static ge* eki(cml* icn /*ast*/, gc* ico /*retType*/, fw* icp /*parentFunc*/){
if(!eqAddr_(((icn)->nk), (nullptr))){
return as_<ge>(classTable_, ((icn)->nk), 16);
}
((icn)->nk) = (icn);
((icn)->fdk) = ((byb)(((icn)->fdk), (false)));
if(!eqAddr_(((icn)->fdk), (nullptr))){
if(!((bdm)((((icn)->fdk)->pf)))){
(ad)((131099LL), (((icn)->fdk)->ne), (nullptr));
}
(((icn)->buj)->qf) = (((icn)->fdk)->pf);
}
((icn)->fdj) = ((byb)(((icn)->fdj), (false)));
if((!eqAddr_(((icn)->fdj), (nullptr))) && (!((bdm)((((icn)->fdj)->pf))))){
(ad)((131100LL), (((icn)->fdj)->ne), (nullptr));
}
((icn)->fdl) = ((byb)(((icn)->fdl), (false)));
if(!eqAddr_(((icn)->fdl), (nullptr))){
if(!((bdm)((((icn)->fdl)->pf)))){
(ad)((131101LL), (((icn)->fdl)->ne), (nullptr));
}
if((((icn)->fdl)->lw) != (67585LL)){
(ad)((131102LL), (((icn)->fdl)->ne), (nullptr));
}
if(((as_<bvt>(classTable_, ((icn)->fdl), 70))->bvv) == (0x0000000000000000ULL)){
(ad)((131103LL), (((icn)->fdl)->ne), (nullptr));
}
}
((icn)->fdq) = ((bxj)(((icn)->fdq), (ico), (icp)));
return icn;
}
// rebuildTry
static ge* ekk(bty* idg /*ast*/, gc* idh /*retType*/, fw* idi /*parentFunc*/){
List_<bub*>* idn; // items
bub* idp; // catch_
List_<buc*>* idq; // items2
buc* ids; // exprs
if(!eqAddr_(((idg)->nk), (nullptr))){
return as_<ge>(classTable_, ((idg)->nk), 16);
}
((idg)->nk) = (idg);
(bxf)(((idg)->buj));
((idg)->bun) = (as_<bua>(classTable_, ((eko)(((idg)->bun), (idh), (idi))), 54));
if((((idg)->buo)->Len()) != (0LL)){
(idn) = ((idg)->buo);
awe<List_<bub*>*>((idn), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bub*>*>((idn), (new Array_<int64_t>(1, (0LL)))))){
(idp) = (awi<List_<bub*>*, bub*>((idn), (new Array_<int64_t>(1, (0LL)))));
(idq) = ((idp)->bvl);
awe<List_<buc*>*>((idq), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<buc*>*>((idq), (new Array_<int64_t>(1, (0LL)))))){
(ids) = (awi<List_<buc*>*, buc*>((idq), (new Array_<int64_t>(1, (0LL)))));
((ids)->bvy) = ((byb)(((ids)->bvy), (false)));
if((!eqAddr_(((ids)->bvy), (nullptr))) && ((!((bdm)((((ids)->bvy)->pf)))) || ((((ids)->bvy)->lw) != (67585LL)))){
(ad)((131104LL), (((ids)->bvy)->ne), (nullptr));
}
if(!eqAddr_(((ids)->bwd), (nullptr))){
((ids)->bwd) = ((byb)(((ids)->bwd), (false)));
if((!eqAddr_(((ids)->bwd), (nullptr))) && ((!((bdm)((((ids)->bwd)->pf)))) || ((((ids)->bwd)->lw) != (67585LL)))){
(ad)((131104LL), (((ids)->bwd)->ne), (nullptr));
}
}
ays<List_<buc*>*>((idq), (new Array_<int64_t>(1, (0LL))));
}
((idp)->bvo) = (as_<bua>(classTable_, ((eko)(((idp)->bvo), (idh), (idi))), 54));
ays<List_<bub*>*>((idn), (new Array_<int64_t>(1, (0LL))));
}
}
if(!eqAddr_(((idg)->bur), (nullptr))){
((idg)->bur) = (as_<bua>(classTable_, ((eko)(((idg)->bur), (idh), (idi))), 54));
}
return idg;
}
// rebuildThrow
static ge* ekm(cmq* ieb /*ast*/){
if(!eqAddr_(((ieb)->nk), (nullptr))){
return as_<ge>(classTable_, ((ieb)->nk), 16);
}
((ieb)->nk) = (ieb);
((ieb)->fgh) = ((byb)(((ieb)->fgh), (false)));
if((!eqAddr_(((ieb)->fgh), (nullptr))) && (!((bdm)((((ieb)->fgh)->pf))))){
(ad)((131105LL), (((ieb)->fgh)->ne), (nullptr));
}
return ieb;
}
// rebuildBlock
static ge* eko(bua* ieg /*ast*/, gc* ieh /*retType*/, fw* iei /*parentFunc*/){
if(!eqAddr_(((ieg)->nk), (nullptr))){
return as_<ge>(classTable_, ((ieg)->nk), 16);
}
((ieg)->nk) = (ieg);
((ieg)->bum) = ((bxj)(((ieg)->bum), (ieh), (iei)));
return ieg;
}
// rebuildRet
static ge* ekq(cmv* iel /*ast*/, gc* iem /*retType*/){
if(!eqAddr_(((iel)->nk), (nullptr))){
return as_<ge>(classTable_, ((iel)->nk), 16);
}
((iel)->nk) = (iel);
if(eqAddr_(((iel)->fhn), (nullptr))){
if(!eqAddr_((iem), (nullptr))){
(ad)((131106LL), ((iel)->ne), (nullptr));
}
}
else{
((iel)->fhn) = ((byb)(((iel)->fhn), (false)));
if(!eqAddr_(((iel)->fhn), (nullptr))){
if((eqAddr_((iem), (nullptr))) || (!((eds)((((iel)->fhn)->pf), (iem), (false))))){
(ad)((131107LL), ((iel)->ne), (nullptr));
}
else if(((((iel)->fhn)->pf)->lw) == (1028LL)){
((iel)->fhn) = ((edv)(((iel)->fhn), (iem)));
}
}
}
return iel;
}
// rebuildDo
static ge* eks(buy* iez /*ast*/){
byf* ife; // expr
int64_t iff; // kind
int64_t ifh;
bua* ifr; // block_
gd* ift; // lhs
egv* ify; // lhs2
egs* igb; // lhs2
byf* igc; // exprAssign
byf* ige; // exprOne
if(!eqAddr_(((iez)->nk), (nullptr))){
return as_<ge>(classTable_, ((iez)->nk), 16);
}
((iez)->nk) = (iez);
if((!eqAddr_(((iez)->bvi), (nullptr))) && ((((iez)->bvi)->lw) == (2050LL))){
(ife) = (as_<byf>(classTable_, ((iez)->bvi), 72));
(iff) = (0LL);
ifh = (ife)->byg;
switch(ifh){
case 1LL:
(iff) = (19LL);
break;
case 2LL:
(iff) = (20LL);
break;
case 3LL:
(iff) = (21LL);
break;
case 4LL:
(iff) = (22LL);
break;
case 5LL:
(iff) = (23LL);
break;
case 6LL:
(iff) = (24LL);
break;
case 7LL:
(iff) = (18LL);
break;
}
if((iff) != (0LL)){
(ifr) = (new bua());
(btv)((ifr), (66052LL), ((iez)->ne));
((ifr)->nk) = (ifr);
((ifr)->nf) = (new Array_<char16_t>(1, u'\u0024'));
((ifr)->buj) = (nullptr);
((ifr)->bum) = (new List_<ge*>());
(ift) = ((byb)(((ife)->byj), (false)));
if(eqAddr_((ift), (nullptr))){
return nullptr;
}
if(((ift)->lw) == (2059LL)){
(ify) = (as_<egv>(classTable_, (ift), 126));
((ify)->hjg) = ((ifz)(((ifr)->bum), ((ify)->hjg), ((iez)->ne)));
}
else if(((ift)->lw) == (2058LL)){
(igb) = (as_<egs>(classTable_, (ift), 124));
((igb)->hky) = ((ifz)(((ifr)->bum), ((igb)->hky), ((iez)->ne)));
((igb)->hld) = ((ifz)(((ifr)->bum), ((igb)->hld), ((iez)->ne)));
}
(igc) = (new byf());
(bvd)((igc), (2050LL), ((iez)->ne));
((igc)->byg) = (0LL);
((igc)->byj) = (ift);
(ige) = (new byf());
(bvd)((ige), (2050LL), ((iez)->ne));
((ige)->byg) = (iff);
((ige)->byj) = (ift);
((ige)->byk) = ((ife)->byk);
((igc)->byk) = (ige);
((iez)->bvi) = ((byb)((igc), (true)));
uh<List_<ge*>*, ge*>(((ifr)->bum), (new Array_<int64_t>(1, (0LL))), (iez));
return ifr;
}
}
((iez)->bvi) = ((byb)(((iez)->bvi), (true)));
if(eqAddr_(((iez)->bvi), (nullptr))){
return nullptr;
}
if(!((((((iez)->bvi)->lw) == (2050LL)) && ((((as_<byf>(classTable_, ((iez)->bvi), 72))->byg) == (0LL)) || (((as_<byf>(classTable_, ((iez)->bvi), 72))->byg) == (25LL)))) || ((((iez)->bvi)->lw) == (2057LL)))){
(ad)((131108LL), (((iez)->bvi)->ne), (nullptr));
}
return iez;
}
// rebuildBreak
static ge* eku(ge* igj /*ast*/, gc* igk /*retType*/, fw* igl /*parentFunc*/){
if(!eqAddr_(((igj)->nk), (nullptr))){
return as_<ge>(classTable_, ((igj)->nk), 16);
}
((igj)->nk) = (igj);
if((eqAddr_(((igj)->nj), (nullptr))) || ((aye<int64_t>((((igj)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) != (66048LL))){
(ad)((131109LL), ((igj)->ne), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(5, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B')))));
return nullptr;
}
((igj)->nj) = ((byl)((as_<ge>(classTable_, ((igj)->nj), 16)), (igk), (igl)));
return igj;
}
// rebuildSkip
static ge* ekw(ge* igq /*ast*/, gc* igr /*retType*/, fw* igs /*parentFunc*/){
if(!eqAddr_(((igq)->nk), (nullptr))){
return as_<ge>(classTable_, ((igq)->nk), 16);
}
((igq)->nk) = (igq);
if((eqAddr_(((igq)->nj), (nullptr))) || ((aye<int64_t>((((igq)->nj)->lw), (new Array_<int64_t>(1, (0LL))), (66048LL))) != (66048LL))){
(ad)((131109LL), ((igq)->ne), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070')))));
return nullptr;
}
((igq)->nj) = ((byl)((as_<ge>(classTable_, ((igq)->nj), 16)), (igr), (igs)));
return igq;
}
// rebuildAssert
static ge* eky(cne* igx /*ast*/){
if(!eqAddr_(((igx)->nk), (nullptr))){
return as_<ge>(classTable_, ((igx)->nk), 16);
}
if(cv){
return nullptr;
}
((igx)->nk) = (igx);
((igx)->fjb) = ((byb)(((igx)->fjb), (false)));
if((!eqAddr_(((igx)->fjb), (nullptr))) && (!((gls)((((igx)->fjb)->pf))))){
(ad)((131110LL), (((igx)->fjb)->ne), (nullptr));
}
return igx;
}
// isClass
static bool ele(gc* ihe /*type*/){
return (((ihe)->lw) == (66565LL)) && ((((ihe)->nj)->lw) == (5LL));
}
// _dtor
static void ihf(elj* ihg){
((ihg)->ne) = (nullptr);
((ihg)->nf) = (nullptr);
((ihg)->ng) = (nullptr);
((ihg)->nh) = (nullptr);
((ihg)->ni) = (nullptr);
((ihg)->nj) = (nullptr);
((ihg)->nk) = (nullptr);
}
// _copy
static elj* ihh(elj* ihi){
elj* ihj;
(ihj) = (new elj());
((ihj)->ne) = (copy_((ihi)->ne));
((ihj)->nf) = (copy_((ihi)->nf));
((ihj)->ng) = (copy_((ihi)->ng));
((ihj)->nh) = (copy_((ihi)->nh));
((ihj)->ni) = (copy_((ihi)->ni));
((ihj)->nj) = (copy_((ihi)->nj));
((ihj)->nk) = (copy_((ihi)->nk));
((ihj)->no) = ((ihi)->no);
((ihj)->lw) = ((ihi)->lw);
return as_<elj>(classTable_, (ihj), 138);
}
// _toBin
static Array_<uint8_t>* ihk(elj* ihl){
Array_<uint8_t>* ihm;
(ihm) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ihm) = ((ihm)->Cat(toBin_((ihl)->ne)));
(ihm) = ((ihm)->Cat(toBin_((ihl)->nf)));
(ihm) = ((ihm)->Cat(toBin_((ihl)->ng)));
(ihm) = ((ihm)->Cat(toBin_((ihl)->nh)));
(ihm) = ((ihm)->Cat(toBin_((ihl)->ni)));
(ihm) = ((ihm)->Cat(toBin_((ihl)->nj)));
(ihm) = ((ihm)->Cat(toBin_((ihl)->nk)));
(ihm) = ((ihm)->Cat(toBin_((ihl)->no)));
(ihm) = ((ihm)->Cat(toBin_((ihl)->lw)));
return ihm;
}
// _fromBin
static elj* ihw(elj* ihx, Array_<uint8_t>* ihy, int64_t* ihz){
elj* iia;
(iia) = (new elj());
((iia)->ne) = (fromBin_<ga*>((ihy), (*ihz)));
((iia)->nf) = (fromBin_<Array_<char16_t>*>((ihy), (*ihz)));
((iia)->ng) = (fromBin_<fx*>((ihy), (*ihz)));
((iia)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((ihy), (*ihz)));
((iia)->ni) = (fromBin_<Array_<char16_t>*>((ihy), (*ihz)));
((iia)->nj) = (fromBin_<fx*>((ihy), (*ihz)));
((iia)->nk) = (fromBin_<fy*>((ihy), (*ihz)));
((iia)->no) = (fromBin_<bool>((ihy), (*ihz)));
((iia)->lw) = (fromBin_<int64_t>((ihy), (*ihz)));
return iia;
}
// _fill
template<typename T_, typename C_> static void elx(T_ iib /*me_*/, Array_<int64_t>* iic /*type*/, C_ iid /*value*/){
for(int64_t i_ = 0; i_ < iib->L; i_++) iib->B[i_] = iid;
}
// _offset
static char16_t emb(char16_t iie /*me_*/, int64_t iif /*n*/){
return static_cast<char16_t>((static_cast<uint64_t>(iie)) + (static_cast<uint64_t>(iif)));
}
// buildExpr
static void etj(gd* iig /*ast*/){
int64_t iii;
iii = (iig)->lw;
switch(iii){
case 2049LL:
(iik)((as_<eft>(classTable_, (iig), 110)));
break;
case 2050LL:
(iim)((as_<byf>(classTable_, (iig), 72)));
break;
case 2051LL:
(iio)((as_<efy>(classTable_, (iig), 112)));
break;
case 2052LL:
(iiq)((as_<egb>(classTable_, (iig), 114)));
break;
case 2053LL:
(iis)((as_<ege>(classTable_, (iig), 116)));
break;
case 2054LL:
(iiu)((as_<egh>(classTable_, (iig), 118)));
break;
case 2055LL:
(iiw)((as_<egk>(classTable_, (iig), 120)));
break;
case 2056LL:
(iiy)((as_<egn>(classTable_, (iig), 122)));
break;
case 2057LL:
(ija)((as_<bvb>(classTable_, (iig), 64)));
break;
case 2058LL:
(ijc)((as_<egs>(classTable_, (iig), 124)));
break;
case 2059LL:
(ije)((as_<egv>(classTable_, (iig), 126)));
break;
case 67584LL:
(ijg)((as_<bvu>(classTable_, (iig), 68)));
break;
case 67585LL:
(iji)((as_<bvt>(classTable_, (iig), 70)));
break;
case 67586LL:
(ijk)((as_<ehc>(classTable_, (iig), 128)));
break;
case 67588LL:
(ijm)((as_<ehi>(classTable_, (iig), 132)));
break;
case 2060LL:
(ijo)((as_<ehl>(classTable_, (iig), 134)));
break;
case 2062LL:
(ijq)((as_<gd>(classTable_, (iig), 14)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// isChar
static bool ewg(gc* ijs /*type*/){
return (((ijs)->lw) == (1026LL)) && (((as_<buh>(classTable_, (ijs), 60))->bui) == (2LL));
}
// isEnum
static bool ewh(gc* ijt /*type*/){
return (((ijt)->lw) == (66565LL)) && ((((ijt)->nj)->lw) == (6LL));
}
// addTmpVar
static Array_<char16_t>* fdi(gc* iju /*type*/){
un* ijv; // tmpVar
(ijv) = (new un());
((ijv)->bbe) = ((bza)());
((ijv)->bbf) = (iju);
uh<List_<un*>*, un*>((aq), (new Array_<int64_t>(1, (0LL))), (ijv));
return (ijv)->bbe;
}
// buildExpr
static void flw(gd* ijw /*ast*/){
int64_t ijy;
ijy = (ijw)->lw;
switch(ijy){
case 2049LL:
(ika)((as_<eft>(classTable_, (ijw), 110)));
break;
case 2050LL:
(ikc)((as_<byf>(classTable_, (ijw), 72)));
break;
case 2051LL:
(ike)((as_<efy>(classTable_, (ijw), 112)));
break;
case 2052LL:
(ikg)((as_<egb>(classTable_, (ijw), 114)));
break;
case 2053LL:
(iki)((as_<ege>(classTable_, (ijw), 116)));
break;
case 2054LL:
(ikk)((as_<egh>(classTable_, (ijw), 118)));
break;
case 2055LL:
(ikm)((as_<egk>(classTable_, (ijw), 120)));
break;
case 2056LL:
(iko)((as_<egn>(classTable_, (ijw), 122)));
break;
case 2057LL:
(ikq)((as_<bvb>(classTable_, (ijw), 64)));
break;
case 2058LL:
(iks)((as_<egs>(classTable_, (ijw), 124)));
break;
case 2059LL:
(iku)((as_<egv>(classTable_, (ijw), 126)));
break;
case 67584LL:
(ikw)((as_<bvu>(classTable_, (ijw), 68)));
break;
case 67585LL:
(iky)((as_<bvt>(classTable_, (ijw), 70)));
break;
case 67586LL:
(ila)((as_<ehc>(classTable_, (ijw), 128)));
break;
case 67588LL:
(ilc)((as_<ehi>(classTable_, (ijw), 132)));
break;
case 2060LL:
(ile)((as_<ehl>(classTable_, (ijw), 134)));
break;
case 2062LL:
(ilg)((as_<gd>(classTable_, (ijw), 14)));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// isStr
static bool fob(gc* ili /*type*/){
gc* ill; // itemType
if(((ili)->lw) == (66561LL)){
(ill) = ((as_<cam>(classTable_, (ili), 76))->cao);
if((((ill)->lw) == (1026LL)) && (((as_<buh>(classTable_, (ill), 60))->bui) == (2LL))){
return true;
}
}
return false;
}
// addTmpVar
static Array_<char16_t>* fpg(gc* ilo /*type*/){
va* ilp; // tmpVar
(ilp) = (new va());
((ilp)->bij) = ((csn)());
((ilp)->bik) = (ilo);
uh<List_<va*>*, va*>((bm), (new Array_<int64_t>(1, (0LL))), (ilp));
return (ilp)->bij;
}
// isNullable
static bool frk(gc* ilq /*type*/){
return ((aye<int64_t>(((ilq)->lw), (new Array_<int64_t>(1, (0LL))), (66560LL))) == (66560LL)) && (!((ewh)((ilq))));
}
// _peekStack
template<typename T_, typename R_> static R_ fsp(T_ ilr /*me_*/, Array_<int64_t>* ils /*type*/){
return ilr->B.top();
}
// isReserved
static bool fur(Array_<char16_t>* ilt /*name*/){
int64_t imb;
int64_t imc;
if(eqAddr_((bb), (nullptr))){
(bb) = (new Array_<Array_<char16_t>*>(47, (new Array_<char16_t>(5, u'\u0061', u'\u006C', u'\u0069', u'\u0061', u'\u0073')), (new Array_<char16_t>(6, u'\u0061', u'\u0073', u'\u0073', u'\u0065', u'\u0072', u'\u0074')), (new Array_<char16_t>(5, u'\u0062', u'\u0069', u'\u0074', u'\u0031', u'\u0036')), (new Array_<char16_t>(5, u'\u0062', u'\u0069', u'\u0074', u'\u0033', u'\u0032')), (new Array_<char16_t>(5, u'\u0062', u'\u0069', u'\u0074', u'\u0036', u'\u0034')), (new Array_<char16_t>(4, u'\u0062', u'\u0069', u'\u0074', u'\u0038')), (new Array_<char16_t>(5, u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B')), (new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C')), (new Array_<char16_t>(5, u'\u0062', u'\u0072', u'\u0065', u'\u0061', u'\u006B')), (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065')), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072')), (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073')), (new Array_<char16_t>(5, u'\u0063', u'\u006F', u'\u006E', u'\u0073', u'\u0074')), (new Array_<char16_t>(3, u'\u0064', u'\u0062', u'\u0067')), (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074')), (new Array_<char16_t>(4, u'\u0064', u'\u0069', u'\u0063', u'\u0074')), (new Array_<char16_t>(2, u'\u0064', u'\u006F')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0069', u'\u0066')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065')), (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0064')), (new Array_<char16_t>(4, u'\u0065', u'\u006E', u'\u0075', u'\u006D')), (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0076')), (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079')), (new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074')), (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072')), (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063')), (new Array_<char16_t>(2, u'\u0069', u'\u0066')), (new Array_<char16_t>(7, u'\u0069', u'\u006E', u'\u0063', u'\u006C', u'\u0075', u'\u0064', u'\u0065')), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066')), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074')), (new Array_<char16_t>(4, u'\u006C', u'\u0069', u'\u0073', u'\u0074')), (new Array_<char16_t>(2, u'\u006D', u'\u0065')), (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C')), (new Array_<char16_t>(5, u'\u0071', u'\u0075', u'\u0065', u'\u0075', u'\u0065')), (new Array_<char16_t>(3, u'\u0072', u'\u0065', u'\u0074')), (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070')), (new Array_<char16_t>(5, u'\u0073', u'\u0074', u'\u0061', u'\u0063', u'\u006B')), (new Array_<char16_t>(5, u'\u0073', u'\u0075', u'\u0070', u'\u0065', u'\u0072')), (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(5, u'\u0074', u'\u0068', u'\u0072', u'\u006F', u'\u0077')), (new Array_<char16_t>(2, u'\u0074', u'\u006F')), (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065')), (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079')), (new Array_<char16_t>(3, u'\u0076', u'\u0061', u'\u0072')), (new Array_<char16_t>(5, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065'))));
for(imb = (0LL), imc = (((bb)->Len()) - (2LL)); imb <= imc; imb += (1LL)){
if(!(cmp_(((bb)->At(imb)), ((bb)->At((imb) + (1LL)))) < 0)){
throw 0xE9170000U;
}
}
}
return (imd<Array_<Array_<char16_t>*>*, Array_<char16_t>*>((bb), (new Array_<int64_t>(1, (0LL))), (ilt))) != (-1LL);
}
// parseStatEnd
static ge* gao(int64_t ime /*row*/, int64_t imf /*col*/, fx* img /*block_*/){
ge* imh; // ast
Array_<char16_t>* imi; // id
bool imj; // err
Array_<char16_t>* iml;
(imh) = (new ge());
(bpp)((imh), (513LL), ((bpq)((bf), (ime), (imf))), (nullptr), (false));
(imi) = ((bqk)((true), (false)));
(imj) = (false);
(dlb)((u'\u000A'), (true));
iml = imi;
if(cmp_(iml, (new Array_<char16_t>(4, u'\u0066', u'\u0075', u'\u006E', u'\u0063'))) == 0){
if(((img)->lw) != (256LL)){
(imj) = (true);
}
}
else if(cmp_(iml, (new Array_<char16_t>(2, u'\u0069', u'\u0066'))) == 0){
if(((img)->lw) != (66049LL)){
(imj) = (true);
}
}
else if(cmp_(iml, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068'))) == 0){
if(((img)->lw) != (66050LL)){
(imj) = (true);
}
}
else if(cmp_(iml, (new Array_<char16_t>(5, u'\u0077', u'\u0068', u'\u0069', u'\u006C', u'\u0065'))) == 0){
if(((img)->lw) != (16843265LL)){
(imj) = (true);
}
}
else if(cmp_(iml, (new Array_<char16_t>(3, u'\u0066', u'\u006F', u'\u0072'))) == 0){
if(((img)->lw) != (16843266LL)){
(imj) = (true);
}
}
else if(cmp_(iml, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079'))) == 0){
if(((img)->lw) != (66051LL)){
(imj) = (true);
}
}
else if(cmp_(iml, (new Array_<char16_t>(5, u'\u0062', u'\u006C', u'\u006F', u'\u0063', u'\u006B'))) == 0){
if(((img)->lw) != (66052LL)){
(imj) = (true);
}
}
else{(ad)((65561LL), ((bpq)((bf), (ime), (imf))), (new Array_<Array_<char16_t>*>(1, (imi))));
}
if(imj){
(ad)((65562LL), ((bpq)((bf), (ime), (imf))), (new Array_<Array_<char16_t>*>(1, (imi))));
}
return imh;
}
// parseStatFunc
static ge* gaq(){
inl* ink; // ast
(ink) = (new inl());
(bpp)((ink), (514LL), (nullptr), (nullptr), (false));
((ink)->inm) = ((bqo)((nullptr), (false)));
return ink;
}
// parseStatVar
static ge* gas(){
ejc* inn; // ast
(inn) = (new ejc());
(bpp)((inn), (515LL), (nullptr), (nullptr), (false));
((inn)->eje) = ((bqq)((3LL), (nullptr)));
return inn;
}
// parseStatConst
static ge* gau(){
inp* ino; // ast
(ino) = (new inp());
(bpp)((ino), (516LL), (nullptr), (nullptr), (false));
((ino)->inq) = ((bqs)());
return ino;
}
// parseStatAlias
static ge* gaw(){
ins* inr; // ast
(inr) = (new ins());
(bpp)((inr), (517LL), (nullptr), (nullptr), (false));
((inr)->inu) = ((bqv)());
return inr;
}
// parseStatClass
static ge* gay(){
inw* inv; // ast
(inv) = (new inw());
(bpp)((inv), (518LL), (nullptr), (nullptr), (false));
((inv)->inx) = ((bqz)());
return inv;
}
// parseStatEnum
static ge* gba(){
inz* iny; // ast
(iny) = (new inz());
(bpp)((iny), (519LL), (nullptr), (nullptr), (false));
((iny)->ioa) = ((brb)());
return iny;
}
// parseStatIf
static ge* gbc(){
clz* iob; // ast
ge* iof; // stat
int64_t iog; // typeId
cma* ioj; // elIf
(iob) = (new clz());
(bpp)((iob), (66049LL), ((dhs)()), (nullptr), (false));
((iob)->buj) = (nullptr);
((iob)->etm) = (new List_<cma*>());
((iob)->ets) = (nullptr);
(ioc)((iob));
(iod)((iob));
((iob)->ete) = ((drg)());
(dlb)((u'\u0029'), (true));
(dlb)((u'\u000A'), (true));
(iof) = (nullptr);
(iog) = (0LL);
((iob)->etg) = ((ioh)((&iof), (&iog), (66049LL), (iob)));
while((iog) == (520LL)){
(ioj) = (as_<cma>(classTable_, (iof), 90));
((ioj)->etq) = ((ioh)((&iof), (&iog), (520LL), (iob)));
uh<List_<cma*>*, cma*>(((iob)->etm), (new Array_<int64_t>(1, (0LL))), (ioj));
}
while((iog) == (521LL)){
((iob)->ets) = ((ioh)((&iof), (&iog), (521LL), (iob)));
}
if(!((iog) == (513LL))){
throw 0xE9170000U;
}
brl<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return iob;
}
// parseStatElIf
static ge* gbe(int64_t iol /*row*/, int64_t iom /*col*/, fx* ion /*block_*/){
cma* ioo; // ast
(ioo) = (new cma());
(bpp)((ioo), (520LL), (nullptr), (nullptr), (false));
((ioo)->etq) = (nullptr);
if(((ion)->lw) != (66049LL)){
(ad)((65566LL), ((bpq)((bf), (iol), (iom))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0069', u'\u0066')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0069', u'\u0066')))));
(bre)(((brf)()));
return nullptr;
}
(dlb)((u'\u0028'), (true));
((ioo)->etp) = ((drg)());
(dlb)((u'\u0029'), (true));
(dlb)((u'\u000A'), (true));
return ioo;
}
// parseStatElse
static ge* gbg(int64_t ior /*row*/, int64_t ios /*col*/, fx* iot /*block_*/){
ge* iou; // ast
(iou) = (new ge());
(bpp)((iou), (521LL), (nullptr), (nullptr), (false));
if(((iot)->lw) != (66049LL)){
(ad)((65566LL), ((bpq)((bf), (ior), (ios))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0069', u'\u0066')), (new Array_<char16_t>(4, u'\u0065', u'\u006C', u'\u0073', u'\u0065')))));
(bre)(((brf)()));
return nullptr;
}
(dlb)((u'\u000A'), (true));
return iou;
}
// parseStatSwitch
static ge* gbi(int64_t iox /*row*/, int64_t ioy /*col*/){
cmd* ioz; // ast
ge* ipc; // stat
int64_t ipd; // typeId
cme* ipp; // case_
(ioz) = (new cmd());
(bpp)((ioz), (66050LL), ((dhs)()), (nullptr), (false));
((ioz)->buj) = ((ipa)(((ioz)->ne)));
((ioz)->ewk) = (new List_<cme*>());
((ioz)->exe) = (nullptr);
(ioc)((ioz));
(iod)((ioz));
((ioz)->ewf) = ((drg)());
(dlb)((u'\u0029'), (true));
(dlb)((u'\u000A'), (true));
(ipc) = (nullptr);
(ipd) = (0LL);
while(true){
(ipc) = ((dmi)((ioz)));
if(eqAddr_((ipc), (nullptr))){
if(avg){
return nullptr;
}
else{
continue;
}
}
break;
}
(ipd) = ((ipc)->lw);
if(!((((ipd) == (522LL)) || ((ipd) == (523LL))) || ((ipd) == (513LL)))){
(ad)((65567LL), ((dhs)()), (nullptr));
}
while((ipd) == (522LL)){
(ipp) = (as_<cme>(classTable_, (ipc), 94));
((ipp)->exc) = ((ioh)((&ipc), (&ipd), (522LL), (ioz)));
uh<List_<cme*>*, cme*>(((ioz)->ewk), (new Array_<int64_t>(1, (0LL))), (ipp));
}
while((ipd) == (523LL)){
((ioz)->exe) = ((ioh)((&ipc), (&ipd), (523LL), (ioz)));
}
if(!((ipd) == (513LL))){
throw 0xE9170000U;
}
brl<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return ioz;
}
// parseStatCase
static ge* gbk(int64_t ipr /*row*/, int64_t ips /*col*/, fx* ipt /*block_*/){
cme* ipu; // ast
buc* iqa; // exprs
char16_t iqb; // c
Array_<char16_t>* iqi; // id
(ipu) = (new cme());
(bpp)((ipu), (522LL), (nullptr), (nullptr), (false));
((ipu)->ewo) = (new List_<buc*>());
((ipu)->exc) = (nullptr);
if(((ipt)->lw) != (66050LL)){
(ad)((65566LL), ((bpq)((bf), (ipr), (ips))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(4, u'\u0063', u'\u0061', u'\u0073', u'\u0065')))));
(bre)(((brf)()));
return nullptr;
}
while(true){
(iqa) = (new buc());
((iqa)->bvy) = ((drg)());
((iqa)->bwd) = (nullptr);
(iqb) = ((bps)());
if((iqb) == (u'\u0000')){
break;
}
if((iqb) == (u'\u000A')){
uh<List_<buc*>*, buc*>(((ipu)->ewo), (new Array_<int64_t>(1, (0LL))), (iqa));
break;
}
if((iqb) == (u'\u002C')){
uh<List_<buc*>*, buc*>(((ipu)->ewo), (new Array_<int64_t>(1, (0LL))), (iqa));
continue;
}
(ave) = (iqb);
(iqi) = ((bqk)((true), (false)));
if(cmp_((iqi), (new Array_<char16_t>(2, u'\u0074', u'\u006F'))) != 0){
(ad)((65568LL), ((dhs)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0074', u'\u006F')), (iqi))));
(bre)(((brf)()));
return nullptr;
}
((iqa)->bwd) = ((drg)());
(iqb) = ((bps)());
if((iqb) == (u'\u0000')){
break;
}
uh<List_<buc*>*, buc*>(((ipu)->ewo), (new Array_<int64_t>(1, (0LL))), (iqa));
if((iqb) == (u'\u000A')){
break;
}
if((iqb) != (u'\u002C')){
(dkw)((u'\u002C'), (iqb));
}
}
return ipu;
}
// parseStatDefault
static ge* gbm(int64_t iqr /*row*/, int64_t iqs /*col*/, fx* iqt /*block_*/){
ge* iqu; // ast
(iqu) = (new ge());
(bpp)((iqu), (523LL), (nullptr), (nullptr), (false));
if(((iqt)->lw) != (66050LL)){
(ad)((65566LL), ((bpq)((bf), (iqr), (iqs))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(6, u'\u0073', u'\u0077', u'\u0069', u'\u0074', u'\u0063', u'\u0068')), (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u0066', u'\u0061', u'\u0075', u'\u006C', u'\u0074')))));
(bre)(((brf)()));
return nullptr;
}
(dlb)((u'\u000A'), (true));
return iqu;
}
// parseStatWhile
static ge* gbo(){
cmh* iqx; // ast
char16_t iqz; // c
Array_<char16_t>* irc; // id
ge* irj; // stat
(iqx) = (new cmh());
(bpp)((iqx), (16843265LL), ((dhs)()), (nullptr), (false));
((iqx)->buj) = (nullptr);
((iqx)->fat) = (false);
((iqx)->fan) = (new List_<ge*>());
(ioc)((iqx));
(iod)((iqx));
((iqx)->fal) = ((drg)());
(iqz) = ((bps)());
if((iqz) == (u'\u002C')){
(irc) = ((bqk)((true), (false)));
if(cmp_((irc), (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070'))) != 0){
(ad)((65568LL), ((dhs)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(4, u'\u0073', u'\u006B', u'\u0069', u'\u0070')), (irc))));
}
((iqx)->fat) = (true);
}
else{
(ave) = (iqz);
}
(dlb)((u'\u0029'), (true));
(dlb)((u'\u000A'), (true));
while(true){
(irj) = ((dmi)((iqx)));
if(eqAddr_((irj), (nullptr))){
if(avg){
return nullptr;
}
else{
continue;
}
}
if(((irj)->lw) == (513LL)){
break;
}
uh<List_<ge*>*, ge*>(((iqx)->fan), (new Array_<int64_t>(1, (0LL))), (irj));
}
brl<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return iqx;
}
// parseStatFor
static ge* gbq(int64_t irr /*row*/, int64_t irs /*col*/){
cml* irt; // ast
char16_t irv; // c
ge* isd; // stat
(irt) = (new cml());
(bpp)((irt), (16843266LL), ((dhs)()), (nullptr), (false));
((irt)->buj) = ((ipa)(((irt)->ne)));
((irt)->fdq) = (new List_<ge*>());
(ioc)((irt));
(iod)((irt));
((irt)->fdk) = ((drg)());
(dlb)((u'\u002C'), (true));
((irt)->fdj) = ((drg)());
(irv) = ((bps)());
if((irv) == (u'\u002C')){
((irt)->fdl) = ((drg)());
(dlb)((u'\u0029'), (true));
(dlb)((u'\u000A'), (true));
}
else{
((irt)->fdl) = ((irz)(((dhs)()), (0LL), (0x0000000000000001ULL)));
(ave) = (irv);
(dlb)((u'\u0029'), (true));
(dlb)((u'\u000A'), (true));
}
while(true){
(isd) = ((dmi)((irt)));
if(eqAddr_((isd), (nullptr))){
if(avg){
return nullptr;
}
else{
continue;
}
}
if(((isd)->lw) == (513LL)){
break;
}
uh<List_<ge*>*, ge*>(((irt)->fdq), (new Array_<int64_t>(1, (0LL))), (isd));
}
brl<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return irt;
}
// parseStatTry
static ge* gbs(int64_t isl /*row*/, int64_t ism /*col*/){
bty* isn; // ast
char16_t isp; // c
buh* isu; // type
ge* isw; // stat
int64_t isx; // typeId
bub* isz; // catch_
(isn) = (new bty());
(bpp)((isn), (66051LL), ((dhs)()), (nullptr), (false));
((isn)->buj) = ((ipa)(((isn)->ne)));
((isn)->buo) = (new List_<bub*>());
((isn)->bur) = (nullptr);
(ioc)((isn));
(isp) = ((bps)());
if((isp) != (u'\u000A')){
(ave) = (isp);
((isn)->nf) = ((bqk)((true), (false)));
(dlf)((isn), (true));
(dlb)((u'\u000A'), (true));
}
else{
((isn)->nf) = (new Array_<char16_t>(1, u'\u0024'));
}
(isu) = (new buh());
(bpp)((isu), (1026LL), ((bpq)((bf), (isl), (ism))), (nullptr), (false));
((isu)->bui) = (0LL);
(((isn)->buj)->qf) = (isu);
(isw) = (nullptr);
(isx) = (0LL);
((isn)->bun) = ((ioh)((&isw), (&isx), (66051LL), (isn)));
while((isx) == (524LL)){
(isz) = (as_<bub>(classTable_, (isw), 56));
((isz)->bvo) = ((ioh)((&isw), (&isx), (524LL), (isn)));
uh<List_<bub*>*, bub*>(((isn)->buo), (new Array_<int64_t>(1, (0LL))), (isz));
}
if((isx) == (525LL)){
((isn)->bur) = ((ioh)((&isw), (&isx), (525LL), (isn)));
}
if(!((isx) == (513LL))){
throw 0xE9170000U;
}
brl<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return isn;
}
// parseStatCatch
static ge* gbu(int64_t itc /*row*/, int64_t itd /*col*/, fx* ite /*block_*/){
bub* itf; // ast
char16_t itj; // c
buc* itm; // exprs
ga* itn; // pos
buc* its; // exprs
Array_<char16_t>* itz; // id
(itf) = (new bub());
(bpp)((itf), (524LL), (nullptr), (nullptr), (false));
((itf)->bvl) = (new List_<buc*>());
((itf)->bvo) = (nullptr);
if(((ite)->lw) != (66051LL)){
(ad)((65566LL), ((bpq)((bf), (itc), (itd))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079')), (new Array_<char16_t>(5, u'\u0063', u'\u0061', u'\u0074', u'\u0063', u'\u0068')))));
(bre)(((brf)()));
return nullptr;
}
(itj) = ((bps)());
if((itj) == (u'\u000A')){
(itm) = (new buc());
(itn) = ((dhs)());
((itm)->bvy) = ((irz)((itn), (0LL), (0x0000000000000000ULL)));
((itm)->bwd) = ((irz)((itn), (0LL), (0x00000000FFFFFFFFULL)));
uh<List_<buc*>*, buc*>(((itf)->bvl), (new Array_<int64_t>(1, (0LL))), (itm));
}
else{
(ave) = (itj);
while(true){
(its) = (new buc());
((its)->bvy) = ((drg)());
((its)->bwd) = (nullptr);
(itj) = ((bps)());
if((itj) == (u'\u0000')){
break;
}
if((itj) == (u'\u000A')){
uh<List_<buc*>*, buc*>(((itf)->bvl), (new Array_<int64_t>(1, (0LL))), (its));
break;
}
if((itj) == (u'\u002C')){
uh<List_<buc*>*, buc*>(((itf)->bvl), (new Array_<int64_t>(1, (0LL))), (its));
continue;
}
(ave) = (itj);
(itz) = ((bqk)((true), (false)));
if(cmp_((itz), (new Array_<char16_t>(2, u'\u0074', u'\u006F'))) != 0){
(ad)((65568LL), ((dhs)()), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(2, u'\u0074', u'\u006F')), (itz))));
}
((its)->bwd) = ((drg)());
(itj) = ((bps)());
if((itj) == (u'\u0000')){
break;
}
uh<List_<buc*>*, buc*>(((itf)->bvl), (new Array_<int64_t>(1, (0LL))), (its));
if((itj) == (u'\u000A')){
break;
}
if((itj) != (u'\u002C')){
(dkw)((u'\u002C'), (itj));
}
}
}
return itf;
}
// parseStatFinally
static ge* gbw(int64_t iui /*row*/, int64_t iuj /*col*/, fx* iuk /*block_*/){
ge* iul; // ast
(iul) = (new ge());
(bpp)((iul), (525LL), (nullptr), (nullptr), (false));
if(((iuk)->lw) != (66051LL)){
(ad)((65566LL), ((bpq)((bf), (iui), (iuj))), (new Array_<Array_<char16_t>*>(2, (new Array_<char16_t>(3, u'\u0074', u'\u0072', u'\u0079')), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0061', u'\u006C', u'\u006C', u'\u0079')))));
(bre)(((brf)()));
return nullptr;
}
(dlb)((u'\u000A'), (true));
return iul;
}
// parseStatThrow
static ge* gby(){
cmq* iuo; // ast
(iuo) = (new cmq());
(bpp)((iuo), (526LL), ((dhs)()), (nullptr), (false));
((iuo)->fgh) = ((drg)());
(dlb)((u'\u000A'), (true));
return iuo;
}
// parseStatBlock
static ge* gca(){
bua* iup; // ast
char16_t iur; // c
ge* iuy; // stat
(iup) = (new bua());
(bpp)((iup), (66052LL), ((dhs)()), (nullptr), (false));
((iup)->buj) = (nullptr);
((iup)->bum) = (new List_<ge*>());
(ioc)((iup));
(iur) = ((bps)());
if((iur) != (u'\u000A')){
(ave) = (iur);
((iup)->nf) = ((bqk)((true), (false)));
(dlf)((iup), (true));
(dlb)((u'\u000A'), (true));
}
else{
((iup)->nf) = (new Array_<char16_t>(1, u'\u0024'));
}
while(true){
(iuy) = ((dmi)((iup)));
if(eqAddr_((iuy), (nullptr))){
if(avg){
return nullptr;
}
else{
continue;
}
}
if(((iuy)->lw) == (513LL)){
break;
}
uh<List_<ge*>*, ge*>(((iup)->bum), (new Array_<int64_t>(1, (0LL))), (iuy));
}
brl<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return iup;
}
// parseStatRet
static ge* gcc(){
cmv* ivg; // ast
char16_t ivi; // c
(ivg) = (new cmv());
(bpp)((ivg), (527LL), ((dhs)()), (nullptr), (false));
(ivi) = ((bps)());
if((ivi) != (u'\u000A')){
(ave) = (ivi);
((ivg)->fhn) = ((drg)());
(dlb)((u'\u000A'), (true));
}
else{
((ivg)->fhn) = (nullptr);
}
return ivg;
}
// parseStatDo
static ge* gce(){
buy* ivm; // ast
(ivm) = (new buy());
(bpp)((ivm), (528LL), ((dhs)()), (nullptr), (false));
((ivm)->bvi) = ((drg)());
(dlb)((u'\u000A'), (true));
return ivm;
}
// parseStatBreak
static ge* gcg(){
ge* ivn; // ast
(ivn) = (new ge());
(bpp)((ivn), (529LL), ((dhs)()), (nullptr), (false));
(dla)((ivn), ((bqk)((true), (false))));
(dlb)((u'\u000A'), (true));
return ivn;
}
// parseStatSkip
static ge* gci(){
ge* ivo; // ast
(ivo) = (new ge());
(bpp)((ivo), (530LL), ((dhs)()), (nullptr), (false));
(dla)((ivo), ((bqk)((true), (false))));
(dlb)((u'\u000A'), (true));
return ivo;
}
// parseStatAssert
static ge* gck(){
cne* ivp; // ast
(ivp) = (new cne());
(bpp)((ivp), (531LL), ((dhs)()), (nullptr), (false));
((ivp)->fjb) = ((drg)());
(dlb)((u'\u000A'), (true));
return ivp;
}
// parseExprThree
static gd* gcp(){
gd* ivq; // ast
int64_t ivv; // row
int64_t ivw; // col
char16_t ivx; // c
efy* iwa; // ast2
(ivq) = ((ivr)());
while(true){
(ivv) = (avc);
(ivw) = (avd);
(ivx) = ((bps)());
if((ivx) == (u'\u003F')){
(dlb)((u'\u0028'), (false));
(iwa) = (new efy());
(drl)((iwa), (2051LL), ((bpq)((bf), (ivv), (ivw))));
((iwa)->gwf) = (ivq);
((iwa)->gwi) = ((drg)());
(dlb)((u'\u002C'), (true));
((iwa)->gwl) = ((drg)());
(ivq) = (iwa);
(dlb)((u'\u0029'), (true));
}
else{
(ave) = (ivx);
break;
}
}
return ivq;
}
// readInStr
static char16_t gdz(){
char16_t iwf; // c
char16_t iwh;
while(true){
(iwf) = ((dhh)());
iwh = iwf;
switch(iwh){
case u'\u0009':
(ad)((65540LL), ((dhs)()), (nullptr));
continue;
break;
case u'\u000A':
(ad)((65541LL), ((dhs)()), (nullptr));
break;
}
return iwf;
}
}
// searchEnumElementValue
static uint64_t giy(ehf* iwk /*ast*/, brc* iwl /*enum_*/){
Array_<char16_t>* iwm; // name
List_<gd*>* iwn; // items
gd* iwp; // item
if(!((((iwk)->pf)->lw) == (1028LL))){
throw 0xE9170000U;
}
(eem)((iwl));
(iwm) = ((iwk)->goz);
(iwn) = ((iwl)->dqo);
awe<List_<gd*>*>((iwn), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((iwn), (new Array_<int64_t>(1, (0LL)))))){
(iwp) = (awi<List_<gd*>*, gd*>((iwn), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((iwm), ((iwp)->nf)) == 0){
if(((iwp)->lw) != (67585LL)){
return 0x0000000000000000ULL;
}
return (as_<bvt>(classTable_, (iwp), 70))->bvv;
}
ays<List_<gd*>*>((iwn), (new Array_<int64_t>(1, (0LL))));
}
(ad)((131090LL), ((iwk)->ne), (new Array_<Array_<char16_t>*>(1, (iwm))));
return 0x0000000000000000ULL;
}
// process1
static void gjg(ul* iwu /*ast*/, fw** iwv /*dtor*/, fw** iww /*copy*/, fw** iwx /*toBin*/, fw** iwy /*fromBin*/){
fx* ixb; // parent
ul* ixg; // parent
Dict_<ul*, bool>* ixh; // chk
bool ixk;
List_<um*>* ixn; // astItems
um* ixp; // item
Array_<char16_t>* ixq; // memberName
fx* ixs; // def
um* ixx; // parentItem
ul* ixz; // parent
List_<um*>* iyb; // items
Array_<char16_t>* iyd; // parentName
um* iye; // item2
fx* iyf; // def
fw* iyx; // func1
fw* iyy; // func2
List_<gb*>* izb; // items1
List_<gb*>* izc; // items2
int64_t izg;
gb* izi; // arg1
gb* izj; // arg2
Array_<char16_t>* izn;
fw* izp; // func_
char16_t izt;
fx* jaa; // def
int64_t jad; // idx
dli* jak; // type
cam* jan; // type
caq* jap; // type2
gb* jat; // arg
cam* jav; // type
caq* jax; // type2
gb* jaz; // arg
buh* jbb; // type
int64_t izh;
if(!eqAddr_(((iwu)->nj), (nullptr))){
(ixb) = ((iwu)->nj);
if(((ixb)->lw) == (4LL)){
(eeo)((as_<bqw>(classTable_, (ixb), 46)), (nullptr));
((iwu)->nj) = (((as_<bqw>(classTable_, (ixb), 46))->dns)->nj);
if(!((((iwu)->nj)->lw) == (5LL))){
throw 0xE9170000U;
}
}
else{
if(!(((ixb)->lw) == (5LL))){
throw 0xE9170000U;
}
(eek)((as_<ul>(classTable_, (ixb), 22)));
}
}
(ixg) = (iwu);
(ixh) = (new Dict_<ul*, bool>());
while(!eqAddr_((ixg), (nullptr))){
if(avo<Dict_<ul*, bool>*, ul*, bool>((ixh), (new Array_<int64_t>(1, (0LL))), (ixg), (&ixk))){
(ad)((131080LL), ((iwu)->ne), (new Array_<Array_<char16_t>*>(1, ((iwu)->nf))));
return;
}
dv<Dict_<ul*, bool>*, ul*, bool>((ixh), (new Array_<int64_t>(1, (0LL))), (ixg), (true));
(ixg) = (as_<ul>(classTable_, ((ixg)->nj), 22));
}
(ixn) = ((iwu)->bag);
awe<List_<um*>*>((ixn), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((ixn), (new Array_<int64_t>(1, (0LL)))))){
(ixp) = (awi<List_<um*>*, um*>((ixn), (new Array_<int64_t>(1, (0LL)))));
(ixq) = (nullptr);
(ixs) = ((ixp)->azl);
if(((ixs)->lw) == (2LL)){
(ixq) = (((as_<bgn>(classTable_, (ixs), 38))->bgp)->nf);
}
else if(((ixs)->lw) == (3LL)){
(ixq) = (((as_<bqt>(classTable_, (ixs), 44))->brj)->nf);
}
else{
(ixq) = ((ixs)->nf);
}
(ixx) = (nullptr);
(ixz) = (as_<ul>(classTable_, ((iwu)->nj), 22));
while((eqAddr_((ixx), (nullptr))) && (!eqAddr_((ixz), (nullptr)))){
(iyb) = ((ixz)->bag);
awe<List_<um*>*>((iyb), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((iyb), (new Array_<int64_t>(1, (0LL)))))){
(iyd) = (nullptr);
(iye) = (awi<List_<um*>*, um*>((iyb), (new Array_<int64_t>(1, (0LL)))));
(iyf) = ((iye)->azl);
if(((iyf)->lw) == (2LL)){
(iyd) = (((as_<bgn>(classTable_, (iyf), 38))->bgp)->nf);
}
else if(((iyf)->lw) == (3LL)){
(iyd) = (((as_<bqt>(classTable_, (iyf), 44))->brj)->nf);
}
else{
(iyd) = ((iyf)->nf);
}
if(cmp_((ixq), (iyd)) == 0){
(ixx) = (iye);
}
ays<List_<um*>*>((iyb), (new Array_<int64_t>(1, (0LL))));
}
(ixz) = (as_<ul>(classTable_, ((ixz)->nj), 22));
}
if(eqAddr_((ixx), (nullptr))){
if((ixp)->azr){
(ad)((131081LL), (((ixp)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (ixq))));
return;
}
}
else{
if(!((ixp)->azr)){
(ad)((131082LL), (((ixp)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (ixq))));
return;
}
if(!(((((ixp)->azl)->lw) == (256LL)) && ((((ixx)->azl)->lw) == (256LL)))){
(ad)((131083LL), (((ixp)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (ixq))));
return;
}
if(((ixp)->azq) != ((ixx)->azq)){
(ad)((131084LL), (((ixp)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (ixq))));
return;
}
(iyx) = (as_<fw>(classTable_, ((ixp)->azl), 8));
(iyy) = (as_<fw>(classTable_, ((ixx)->azl), 8));
if(((((eqAddr_(((iyx)->sh), (nullptr))) && (!eqAddr_(((iyy)->sh), (nullptr)))) || ((!eqAddr_(((iyx)->sh), (nullptr))) && (eqAddr_(((iyy)->sh), (nullptr))))) || (((!eqAddr_(((iyx)->sh), (nullptr))) && (!eqAddr_(((iyy)->sh), (nullptr)))) && (!((eds)(((iyx)->sh), ((iyy)->sh), (false)))))) || ((((iyx)->sg)->Len()) != (((iyy)->sg)->Len()))){
(ad)((131085LL), (((ixp)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (ixq))));
return;
}
(izb) = ((iyx)->sg);
(izc) = ((iyy)->sg);
awe<List_<gb*>*>((izb), (new Array_<int64_t>(1, (0LL))));
awe<List_<gb*>*>((izc), (new Array_<int64_t>(1, (0LL))));
for(izg = (0LL), izh = (((izb)->Len()) - (1LL)); izg <= izh; izg += (1LL)){
(izi) = (awi<List_<gb*>*, gb*>((izb), (new Array_<int64_t>(1, (0LL)))));
(izj) = (awi<List_<gb*>*, gb*>((izc), (new Array_<int64_t>(1, (0LL)))));
if(((((((((izi)->qf)->lw) == (66565LL)) && (eqAddr_((((izi)->qf)->nj), (nullptr)))) || (((((izj)->qf)->lw) == (66565LL)) && (eqAddr_((((izj)->qf)->nj), (nullptr))))) || (!((eds)(((izi)->qf), ((izj)->qf), (false))))) || (((!eqAddr_(((izi)->nf), (nullptr))) && (!eqAddr_(((izj)->nf), (nullptr)))) && (cmp_(((izi)->nf), ((izj)->nf)) != 0))) || (((izi)->ql) != ((izj)->ql))){
(ad)((131085LL), (((ixp)->azl)->ne), (new Array_<Array_<char16_t>*>(1, (ixq))));
return;
}
ays<List_<gb*>*>((izb), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>((izc), (new Array_<int64_t>(1, (0LL))));
}
((ixp)->azm) = (ixx);
}
izn = ixq;
if(cmp_(izn, (new Array_<char16_t>(5, u'\u005F', u'\u0064', u'\u0074', u'\u006F', u'\u0072'))) == 0 || cmp_(izn, (new Array_<char16_t>(5, u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079'))) == 0 || cmp_(izn, (new Array_<char16_t>(6, u'\u005F', u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E'))) == 0 || cmp_(izn, (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E'))) == 0){
if(!((((ixp)->azl)->lw) == (256LL))){
throw 0xE9170000U;
}
(izp) = (as_<fw>(classTable_, ((ixp)->azl), 8));
if(((ixp)->azr) && ((aye<int64_t>(((as_<fw>(classTable_, ((ixp)->azl), 8))->sm), (new Array_<int64_t>(1, (0LL))), (128LL))) == (0LL))){
(ad)((131086LL), ((izp)->ne), (new Array_<Array_<char16_t>*>(1, (ixq))));
return;
}
izt = (ixq)->At(1LL);
switch(izt){
case u'\u0064':
(*iwv) = (izp);
break;
case u'\u0063':
(*iww) = (izp);
break;
case u'\u0074':
(*iwx) = (izp);
break;
case u'\u0066':
(*iwy) = (izp);
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{(jaa) = ((ixp)->azl);
if(((jaa)->lw) == (256LL)){
(jad) = (bfc<List_<um*>*>((ixn), (new Array_<int64_t>(1, (0LL)))));
if(!((jad) != (-1LL))){
throw 0xE9170000U;
}
(ayx)((as_<fw>(classTable_, (jaa), 8)));
awe<List_<um*>*>((ixn), (new Array_<int64_t>(1, (0LL))));
bfe<List_<um*>*>((ixn), (new Array_<int64_t>(1, (0LL))), (jad));
}
else if(((jaa)->lw) == (2LL)){
(ejd)((as_<bgn>(classTable_, (jaa), 38)));
}
}
ays<List_<um*>*>((ixn), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_((*iwv), (nullptr))){
(*iwv) = ((jah)((iwu), (new Array_<char16_t>(5, u'\u005F', u'\u0064', u'\u0074', u'\u006F', u'\u0072'))));
}
if(eqAddr_((*iww), (nullptr))){
(*iww) = ((jah)((iwu), (new Array_<char16_t>(5, u'\u005F', u'\u0063', u'\u006F', u'\u0070', u'\u0079'))));
(jak) = (new dli());
(btv)((jak), (66565LL), ((iwu)->ne));
((jak)->nj) = (iwu);
((*iww)->sh) = (jak);
}
if(eqAddr_((*iwx), (nullptr))){
(*iwx) = ((jah)((iwu), (new Array_<char16_t>(6, u'\u005F', u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E'))));
(jan) = (new cam());
(btv)((jan), (66561LL), ((iwu)->ne));
(jap) = (new caq());
(btv)((jap), (1025LL), ((iwu)->ne));
((jap)->car) = (1LL);
((jan)->cao) = (jap);
((*iwx)->sh) = (jan);
}
if(eqAddr_((*iwy), (nullptr))){
(*iwy) = ((jah)((iwu), (new Array_<char16_t>(8, u'\u005F', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E'))));
(jat) = (new gb());
(btv)((jat), (7LL), ((iwu)->ne));
((jat)->qk) = (2LL);
((jat)->ql) = (false);
((jat)->qg) = (nullptr);
(jav) = (new cam());
(btv)((jav), (66561LL), ((iwu)->ne));
(jax) = (new caq());
(btv)((jax), (1025LL), ((iwu)->ne));
((jax)->car) = (1LL);
((jav)->cao) = (jax);
((jat)->qf) = (jav);
uh<List_<gb*>*, gb*>(((*iwy)->sg), (new Array_<int64_t>(1, (0LL))), (jat));
(jaz) = (new gb());
(btv)((jaz), (7LL), ((iwu)->ne));
((jaz)->qk) = (2LL);
((jaz)->ql) = (true);
((jaz)->qg) = (nullptr);
(jbb) = (new buh());
(btv)((jbb), (1026LL), ((iwu)->ne));
((jbb)->bui) = (0LL);
((jaz)->qf) = (jbb);
uh<List_<gb*>*, gb*>(((*iwy)->sg), (new Array_<int64_t>(1, (0LL))), (jaz));
awe<List_<gb*>*>(((*iwy)->sg), (new Array_<int64_t>(1, (0LL))));
((*iwy)->sh) = ((awi<List_<gb*>*, gb*>(((*iwy)->sg), (new Array_<int64_t>(1, (0LL)))))->qf);
}
}
// process2
static void gjh(ul* jbc /*ast*/, fw* jbd /*dtor*/, fw* jbe /*copy*/, fw* jbf /*toBin*/, fw* jbg /*fromBin*/){
ul* jbi; // ptr
List_<um*>* jbk; // items
um* jbm; // item
buy* jbp; // do_
byf* jbr; // assign
gd* jbu; // result
ejc* jbw; // var_
bgn* jby; // var2
gb* jca; // arg
dli* jcc; // type
egb* jce; // new_
dli* jch; // type
ul* jcj; // ptr
List_<um*>* jcl; // items
um* jcn; // item
gb* jcq; // member
buy* jcs; // do_
byf* jcu; // assign
egv* jcw; // dot
eft* jcz; // copy2
cmv* jdc; // ret_
egh* jde; // as
gd* jdg; // result
ejc* jdi; // var_
bgn* jdk; // var2
gb* jdm; // arg
ege* jdo; // new_
bvt* jdq; // value
buh* jds; // prim
caq* jdu; // type
cam* jdw; // type
caq* jdy; // type2
dli* jeb; // type
ul* jed; // ptr
List_<um*>* jef; // items
um* jeh; // item
gb* jek; // member
buy* jem; // do_
byf* jeo; // assign
egk* jeq; // expr
cam* jes; // array_
caq* jeu; // bit
cmv* jew; // ret_
gd* jey; // result
ejc* jfa; // var_
bgn* jfc; // var2
gb* jfe; // arg
egb* jfg; // new_
dli* jfj; // type
ul* jfl; // ptr
List_<um*>* jfn; // items
um* jfp; // item
gb* jfs; // member
buy* jfu; // do_
byf* jfw; // assign
egv* jfy; // dot
egn* jga; // expr
gd* jgc; // ref
gd* jge; // ref
cmv* jgg; // ret_
(jbi) = (jbc);
while(!eqAddr_((jbi), (nullptr))){
(jbk) = ((jbi)->bag);
awe<List_<um*>*>((jbk), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((jbk), (new Array_<int64_t>(1, (0LL)))))){
(jbm) = (awi<List_<um*>*, um*>((jbk), (new Array_<int64_t>(1, (0LL)))));
if(((((jbm)->azl)->lw) == (2LL)) && ((byn)((((as_<bgn>(classTable_, ((jbm)->azl), 38))->bgp)->qf)))){
(jbp) = (new buy());
(btv)((jbp), (528LL), ((jbc)->ne));
(jbr) = (new byf());
(bvd)((jbr), (2050LL), ((jbc)->ne));
((jbr)->byg) = (0LL);
awe<List_<gb*>*>(((jbd)->sg), (new Array_<int64_t>(1, (0LL))));
((jbr)->byj) = ((jbs)((jbc), (awi<List_<gb*>*, gb*>(((jbd)->sg), (new Array_<int64_t>(1, (0LL))))), (((as_<bgn>(classTable_, ((jbm)->azl), 38))->bgp)->nf)));
((jbr)->byk) = ((byu)(((jbc)->ne)));
((jbp)->bvi) = (jbr);
uh<List_<ge*>*, ge*>(((jbd)->si), (new Array_<int64_t>(1, (0LL))), ((byl)((jbp), ((jbd)->sh), (jbd))));
}
ays<List_<um*>*>((jbk), (new Array_<int64_t>(1, (0LL))));
}
(jbi) = (as_<ul>(classTable_, ((jbi)->nj), 22));
}
(jbu) = (nullptr);
(jbw) = (new ejc());
(btv)((jbw), (515LL), ((jbc)->ne));
(jby) = (new bgn());
(btv)((jby), (2LL), ((jbc)->ne));
(jca) = (new gb());
(btv)((jca), (7LL), ((jbc)->ne));
((jca)->qk) = (3LL);
((jca)->ql) = (false);
(jcc) = (new dli());
(btv)((jcc), (66565LL), ((jbc)->ne));
((jcc)->nj) = (jbc);
((jca)->qf) = (jcc);
(jce) = (new egb());
(bvd)((jce), (2052LL), ((jbc)->ne));
((jce)->gyg) = ((jca)->qf);
((jca)->qg) = (jce);
((jby)->bgp) = (jca);
((jbw)->eje) = (jby);
uh<List_<ge*>*, ge*>(((jbe)->si), (new Array_<int64_t>(1, (0LL))), ((byl)((jbw), ((jbe)->sh), (jbe))));
(jbu) = (new gd());
(bvd)((jbu), (2062LL), ((jbc)->ne));
((jbu)->ni) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
((jbu)->nj) = (((jbw)->eje)->bgp);
(jch) = (new dli());
(btv)((jch), (66565LL), ((jbc)->ne));
((jch)->nj) = (jbc);
((jbu)->pf) = (jch);
(jcj) = (jbc);
while(!eqAddr_((jcj), (nullptr))){
(jcl) = ((jcj)->bag);
awe<List_<um*>*>((jcl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((jcl), (new Array_<int64_t>(1, (0LL)))))){
(jcn) = (awi<List_<um*>*, um*>((jcl), (new Array_<int64_t>(1, (0LL)))));
if((((jcn)->azl)->lw) == (2LL)){
(jcq) = ((as_<bgn>(classTable_, ((jcn)->azl), 38))->bgp);
(jcs) = (new buy());
(btv)((jcs), (528LL), ((jbc)->ne));
(jcu) = (new byf());
(bvd)((jcu), (2050LL), ((jbc)->ne));
((jcu)->byg) = (0LL);
(jcw) = (new egv());
(bvd)((jcw), (2059LL), ((jbc)->ne));
((jcw)->hjg) = (jbu);
((jcw)->hmw) = ((jcq)->nf);
((jcw)->hnj) = (nullptr);
((jcu)->byj) = (jcw);
if((byn)(((jcq)->qf))){
(jcz) = (new eft());
(bvd)((jcz), (2049LL), ((jbc)->ne));
((jcz)->gkz) = (3LL);
awe<List_<gb*>*>(((jbe)->sg), (new Array_<int64_t>(1, (0LL))));
((jcz)->gkt) = ((jbs)((jbc), (awi<List_<gb*>*, gb*>(((jbe)->sg), (new Array_<int64_t>(1, (0LL))))), ((jcq)->nf)));
((jcu)->byk) = (jcz);
}
else{
awe<List_<gb*>*>(((jbe)->sg), (new Array_<int64_t>(1, (0LL))));
((jcu)->byk) = ((jbs)((jbc), (awi<List_<gb*>*, gb*>(((jbe)->sg), (new Array_<int64_t>(1, (0LL))))), ((jcq)->nf)));
}
((jcs)->bvi) = (jcu);
uh<List_<ge*>*, ge*>(((jbe)->si), (new Array_<int64_t>(1, (0LL))), ((byl)((jcs), ((jbe)->sh), (jbe))));
}
ays<List_<um*>*>((jcl), (new Array_<int64_t>(1, (0LL))));
}
(jcj) = (as_<ul>(classTable_, ((jcj)->nj), 22));
}
(jdc) = (new cmv());
(btv)((jdc), (527LL), ((jbc)->ne));
(jde) = (new egh());
(bvd)((jde), (2054LL), ((jbc)->ne));
((jde)->hbw) = (0LL);
((jde)->hbo) = (jbu);
((jde)->hbr) = ((jbe)->sh);
((jdc)->fhn) = (jde);
uh<List_<ge*>*, ge*>(((jbe)->si), (new Array_<int64_t>(1, (0LL))), ((byl)((jdc), ((jbe)->sh), (jbe))));
(jdg) = (nullptr);
(jdi) = (new ejc());
(btv)((jdi), (515LL), ((jbc)->ne));
(jdk) = (new bgn());
(btv)((jdk), (2LL), ((jbc)->ne));
(jdm) = (new gb());
(btv)((jdm), (7LL), ((jbc)->ne));
((jdm)->qk) = (3LL);
((jdm)->ql) = (false);
(jdo) = (new ege());
(bvd)((jdo), (2053LL), ((jbc)->ne));
((jdo)->gzr) = (new List_<gd*>());
(jdq) = (new bvt());
(bvd)((jdq), (67585LL), ((jbc)->ne));
((jdq)->bvv) = (0x0000000000000008ULL);
(jds) = (new buh());
(btv)((jds), (1026LL), ((jbc)->ne));
((jds)->bui) = (0LL);
((jdq)->pf) = (jds);
uh<List_<gd*>*, gd*>(((jdo)->gzr), (new Array_<int64_t>(1, (0LL))), (jdq));
(jdu) = (new caq());
(btv)((jdu), (1025LL), ((jbc)->ne));
((jdu)->car) = (1LL);
((jdo)->haa) = (jdu);
((jdm)->qg) = (jdo);
(jdw) = (new cam());
(btv)((jdw), (66561LL), ((jbc)->ne));
(jdy) = (new caq());
(btv)((jdy), (1025LL), ((jbc)->ne));
((jdy)->car) = (1LL);
((jdw)->cao) = (jdy);
((jdm)->qf) = (jdw);
((jdk)->bgp) = (jdm);
((jdi)->eje) = (jdk);
uh<List_<ge*>*, ge*>(((jbf)->si), (new Array_<int64_t>(1, (0LL))), ((byl)((jdi), ((jbf)->sh), (jbf))));
(jdg) = (new gd());
(bvd)((jdg), (2062LL), ((jbc)->ne));
((jdg)->nj) = (((jdi)->eje)->bgp);
(jeb) = (new dli());
(btv)((jeb), (66565LL), ((jbc)->ne));
((jeb)->nj) = (jbc);
((jdg)->pf) = (jeb);
(jed) = (jbc);
while(!eqAddr_((jed), (nullptr))){
(jef) = ((jed)->bag);
awe<List_<um*>*>((jef), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((jef), (new Array_<int64_t>(1, (0LL)))))){
(jeh) = (awi<List_<um*>*, um*>((jef), (new Array_<int64_t>(1, (0LL)))));
if((((jeh)->azl)->lw) == (2LL)){
(jek) = ((as_<bgn>(classTable_, ((jeh)->azl), 38))->bgp);
(jem) = (new buy());
(btv)((jem), (528LL), ((jbc)->ne));
(jeo) = (new byf());
(bvd)((jeo), (2050LL), ((jbc)->ne));
((jeo)->byg) = (7LL);
((jeo)->byj) = (jdg);
(jeq) = (new egk());
(bvd)((jeq), (2055LL), ((jbc)->ne));
awe<List_<gb*>*>(((jbf)->sg), (new Array_<int64_t>(1, (0LL))));
((jeq)->hfv) = ((jbs)((jbc), (awi<List_<gb*>*, gb*>(((jbf)->sg), (new Array_<int64_t>(1, (0LL))))), ((jek)->nf)));
(jes) = (new cam());
(btv)((jes), (66561LL), ((jbc)->ne));
(jeu) = (new caq());
(btv)((jeu), (1025LL), ((jbc)->ne));
((jeu)->car) = (1LL);
((jes)->cao) = (jeu);
((jeq)->hgb) = (jes);
((jeo)->byk) = (jeq);
((jem)->bvi) = (jeo);
uh<List_<ge*>*, ge*>(((jbf)->si), (new Array_<int64_t>(1, (0LL))), ((byl)((jem), ((jbf)->sh), (jbf))));
}
ays<List_<um*>*>((jef), (new Array_<int64_t>(1, (0LL))));
}
(jed) = (as_<ul>(classTable_, ((jed)->nj), 22));
}
(jew) = (new cmv());
(btv)((jew), (527LL), ((jbc)->ne));
((jew)->fhn) = (jdg);
uh<List_<ge*>*, ge*>(((jbf)->si), (new Array_<int64_t>(1, (0LL))), ((byl)((jew), ((jbf)->sh), (jbf))));
(jey) = (nullptr);
(jfa) = (new ejc());
(btv)((jfa), (515LL), ((jbc)->ne));
(jfc) = (new bgn());
(btv)((jfc), (2LL), ((jbc)->ne));
(jfe) = (new gb());
(btv)((jfe), (7LL), ((jbc)->ne));
((jfe)->qk) = (3LL);
((jfe)->ql) = (false);
awe<List_<gb*>*>(((jbg)->sg), (new Array_<int64_t>(1, (0LL))));
((jfe)->qf) = ((awi<List_<gb*>*, gb*>(((jbg)->sg), (new Array_<int64_t>(1, (0LL)))))->qf);
(jfg) = (new egb());
(bvd)((jfg), (2052LL), ((jbc)->ne));
((jfg)->gyg) = ((jfe)->qf);
((jfe)->qg) = (jfg);
((jfc)->bgp) = (jfe);
((jfa)->eje) = (jfc);
uh<List_<ge*>*, ge*>(((jbg)->si), (new Array_<int64_t>(1, (0LL))), ((byl)((jfa), ((jbg)->sh), (jbg))));
(jey) = (new gd());
(bvd)((jey), (2062LL), ((jbc)->ne));
((jey)->nj) = (((jfa)->eje)->bgp);
((jey)->ni) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
(jfj) = (new dli());
(btv)((jfj), (66565LL), ((jbc)->ne));
((jfj)->nj) = (jbc);
((jey)->pf) = (jfj);
(jfl) = (jbc);
while(!eqAddr_((jfl), (nullptr))){
(jfn) = ((jfl)->bag);
awe<List_<um*>*>((jfn), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((jfn), (new Array_<int64_t>(1, (0LL)))))){
(jfp) = (awi<List_<um*>*, um*>((jfn), (new Array_<int64_t>(1, (0LL)))));
if((((jfp)->azl)->lw) == (2LL)){
(jfs) = ((as_<bgn>(classTable_, ((jfp)->azl), 38))->bgp);
(jfu) = (new buy());
(btv)((jfu), (528LL), ((jbc)->ne));
(jfw) = (new byf());
(bvd)((jfw), (2050LL), ((jbc)->ne));
((jfw)->byg) = (0LL);
(jfy) = (new egv());
(bvd)((jfy), (2059LL), ((jbc)->ne));
((jfy)->hnj) = (nullptr);
((jfy)->hjg) = (jey);
((jfy)->hmw) = ((jfs)->nf);
((jfw)->byj) = (jfy);
(jga) = (new egn());
(bvd)((jga), (2056LL), ((jbc)->ne));
(jgc) = (new gd());
(bvd)((jgc), (2062LL), ((jbc)->ne));
awe<List_<gb*>*>(((jbg)->sg), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>(((jbg)->sg), (new Array_<int64_t>(1, (0LL))));
((jgc)->nj) = (awi<List_<gb*>*, gb*>(((jbg)->sg), (new Array_<int64_t>(1, (0LL)))));
if(!(!eqAddr_(((jgc)->nj), (nullptr)))){
throw 0xE9170000U;
}
((jga)->hhg) = (jgc);
((jga)->hhl) = ((jfs)->qf);
(jge) = (new gd());
(bvd)((jge), (2062LL), ((jbc)->ne));
awe<List_<gb*>*>(((jbg)->sg), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>(((jbg)->sg), (new Array_<int64_t>(1, (0LL))));
ays<List_<gb*>*>(((jbg)->sg), (new Array_<int64_t>(1, (0LL))));
((jge)->nj) = (awi<List_<gb*>*, gb*>(((jbg)->sg), (new Array_<int64_t>(1, (0LL)))));
if(!(!eqAddr_(((jge)->nj), (nullptr)))){
throw 0xE9170000U;
}
((jga)->hhm) = (jge);
((jfw)->byk) = (jga);
((jfu)->bvi) = (jfw);
uh<List_<ge*>*, ge*>(((jbg)->si), (new Array_<int64_t>(1, (0LL))), ((byl)((jfu), ((jbg)->sh), (jbg))));
}
ays<List_<um*>*>((jfn), (new Array_<int64_t>(1, (0LL))));
}
(jfl) = (as_<ul>(classTable_, ((jfl)->nj), 22));
}
(jgg) = (new cmv());
(btv)((jgg), (527LL), ((jbc)->ne));
((jgg)->fhn) = (jey);
uh<List_<ge*>*, ge*>(((jbg)->si), (new Array_<int64_t>(1, (0LL))), ((byl)((jgg), ((jbg)->sh), (jbg))));
}
// isFloat
static bool glc(gc* jgh /*type*/){
return (((jgh)->lw) == (1026LL)) && (((as_<buh>(classTable_, (jgh), 60))->bui) == (1LL));
}
// isBool
static bool gls(gc* jgi /*type*/){
return (((jgi)->lw) == (1026LL)) && (((as_<buh>(classTable_, (jgi), 60))->bui) == (3LL));
}
// isComparable
static bool gos(gc* jgj /*type*/, bool jgk /*lessOrGreater*/){
if((((((((((jgj)->lw) == (1025LL)) || ((bdm)((jgj)))) || ((glc)((jgj)))) || ((ewg)((jgj)))) || ((ewh)((jgj)))) || ((ele)((jgj)))) || ((fob)((jgj)))) || (((jgj)->lw) == (1028LL))){
return true;
}
if((!(jgk)) && ((gls)((jgj)))){
return true;
}
return false;
}
// cmp
static int64_t gqm(Array_<char16_t>* jgp /*s1*/, Array_<char16_t>* jgq /*s2*/){
int64_t jgr; // p
(jgr) = (0LL);
while(((jgr) < ((jgp)->Len())) && ((jgr) < ((jgq)->Len()))){
if(((jgp)->At(jgr)) != ((jgq)->At(jgr))){
return (((jgp)->At(jgr)) > ((jgq)->At(jgr))) ? (1LL) : ((((jgp)->At(jgr)) < ((jgq)->At(jgr))) ? (-1LL) : (0LL));
}
(jgr) = ((jgr) + (1LL));
}
return (((jgp)->Len()) > ((jgq)->Len())) ? (1LL) : ((((jgp)->Len()) < ((jgq)->Len())) ? (-1LL) : (0LL));
}
// bitCast
static uint64_t gub(int64_t jgw /*size*/, uint64_t jgx /*n*/){
int64_t jgz;
jgz = jgw;
switch(jgz){
case 1LL:
return static_cast<uint64_t>(static_cast<uint8_t>(jgx));
break;
case 2LL:
return static_cast<uint64_t>(static_cast<uint16_t>(jgx));
break;
case 4LL:
return static_cast<uint64_t>(static_cast<uint32_t>(jgx));
break;
case 8LL:
return jgx;
if(!(false)){
throw 0xE9170000U;
}
break;
}
return 0x0000000000000000ULL;
}
// getTypeName
static Array_<char16_t>* hkc(gc* jhe /*type*/){
int64_t jhi;
cau* jhm; // type2
Array_<char16_t>* jhn; // s
bool jho; // first
List_<cav*>* jhp; // items
cav* jhr; // arg
cbr* jig; // type2
Array_<char16_t>* jih; // s
int64_t jij;
ccc* jip; // type2
buh* jir; // type2
int64_t jit;
if(eqAddr_((jhe), (nullptr))){
return new Array_<char16_t>(0);
}
jhi = (jhe)->lw;
switch(jhi){
case 66561LL:
return (new Array_<char16_t>(2, u'\u005B', u'\u005D'))->Cat((hkc)(((as_<cam>(classTable_, (jhe), 76))->cao)));
break;
case 1025LL:
return (new Array_<char16_t>(3, u'\u0062', u'\u0069', u'\u0074'))->Cat(v<int64_t>((((as_<caq>(classTable_, (jhe), 78))->car) * (8LL)), (new Array_<int64_t>(1, (0LL)))));
break;
case 66562LL:
(jhm) = (as_<cau>(classTable_, (jhe), 80));
(jhn) = (new Array_<char16_t>(6, u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u003C', u'\u0028'));
(jho) = (true);
(jhp) = ((jhm)->cbc);
awe<List_<cav*>*>((jhp), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<cav*>*>((jhp), (new Array_<int64_t>(1, (0LL)))))){
(jhr) = (awi<List_<cav*>*, cav*>((jhp), (new Array_<int64_t>(1, (0LL)))));
if(jho){
(jho) = (false);
}
else{
(jhn) = ((jhn)->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
}
if((jhr)->cbm){
(jhn) = ((jhn)->Cat(new Array_<char16_t>(1, u'\u0026')));
}
(jhn) = ((jhn)->Cat((hkc)(((jhr)->cbk))));
ays<List_<cav*>*>((jhp), (new Array_<int64_t>(1, (0LL))));
}
if(eqAddr_(((jhm)->cax), (nullptr))){
(jhn) = ((jhn)->Cat(new Array_<char16_t>(2, u'\u0029', u'\u003E')));
}
else{
(jhn) = ((jhn)->Cat(((new Array_<char16_t>(3, u'\u0029', u'\u003A', u'\u0020'))->Cat((hkc)(((jhm)->cax))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
return jhn;
break;
case 66563LL:
(jig) = (as_<cbr>(classTable_, (jhe), 84));
(jih) = (nullptr);
jij = (jig)->cbu;
switch(jij){
case 0LL:
(jih) = (new Array_<char16_t>(5, u'\u006C', u'\u0069', u'\u0073', u'\u0074', u'\u003C'));
break;
case 1LL:
(jih) = (new Array_<char16_t>(6, u'\u0073', u'\u0074', u'\u0061', u'\u0063', u'\u006B', u'\u003C'));
break;
case 2LL:
(jih) = (new Array_<char16_t>(6, u'\u0071', u'\u0075', u'\u0065', u'\u0075', u'\u0065', u'\u003C'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return ((jih)->Cat((hkc)(((jig)->cbw))))->Cat(new Array_<char16_t>(1, u'\u003E'));
break;
case 66564LL:
(jip) = (as_<ccc>(classTable_, (jhe), 86));
return ((((new Array_<char16_t>(5, u'\u0064', u'\u0069', u'\u0063', u'\u0074', u'\u003C'))->Cat((hkc)(((jip)->ccd))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')))->Cat((hkc)(((jip)->cce))))->Cat(new Array_<char16_t>(1, u'\u003E'));
break;
case 1026LL:
(jir) = (as_<buh>(classTable_, (jhe), 60));
jit = (jir)->bui;
switch(jit){
case 0LL:
return new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0074');
break;
case 1LL:
return new Array_<char16_t>(5, u'\u0066', u'\u006C', u'\u006F', u'\u0061', u'\u0074');
break;
case 2LL:
return new Array_<char16_t>(4, u'\u0063', u'\u0068', u'\u0061', u'\u0072');
break;
case 3LL:
return new Array_<char16_t>(4, u'\u0062', u'\u006F', u'\u006F', u'\u006C');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
break;
case 66565LL:
return ((cmp_(((jhe)->ni), (new Array_<char16_t>(1, u'\u0040'))) == 0) ? (((jhe)->ne)->hk) : (new Array_<char16_t>(0)))->Cat((jhe)->ni);
break;
case 1028LL:
return new Array_<char16_t>(9, u'\u0028', u'\u0055', u'\u004E', u'\u004B', u'\u004E', u'\u004F', u'\u0057', u'\u004E', u'\u0029');
break;
default:
if(!(false)){
throw 0xE9170000U;
}
return new Array_<char16_t>(0);
break;
}
}
// chkBuiltinFuncType
static bool hnq(Array_<char16_t>** jjc /*member*/, gc* jjd /*type*/){
bool jjg; // found
int64_t jjh; // kind
int64_t jjl;
int64_t jki;
int64_t jkt;
Array_<char16_t>* jln;
Array_<char16_t>* jly;
Array_<char16_t>* jmq;
Array_<char16_t>* jmz;
if(eqAddr_((ai), (nullptr))){
(ai) = (new Dict_<Array_<char16_t>*, int64_t>());
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0061', u'\u0062', u'\u0073')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0061', u'\u0064', u'\u0064')), (6LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0061', u'\u006E', u'\u0064')), (1LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0064', u'\u0065', u'\u006C')), (14LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u006C', u'\u004E', u'\u0065', u'\u0078', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0065', u'\u006E', u'\u0064', u'\u0069', u'\u0061', u'\u006E')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0065', u'\u0078', u'\u0069', u'\u0073', u'\u0074')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006C', u'\u006C')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006E', u'\u0064')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0042', u'\u0069', u'\u006E')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0053', u'\u0074', u'\u0072')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0053', u'\u0074', u'\u0072', u'\u0045', u'\u0078')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(11, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0053', u'\u0074', u'\u0072', u'\u004C', u'\u0061', u'\u0073', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0066', u'\u006F', u'\u0072', u'\u0045', u'\u0061', u'\u0063', u'\u0068')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0067', u'\u0065', u'\u0074')), (7LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0067', u'\u0065', u'\u0074', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0068', u'\u0065', u'\u0061', u'\u0064')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u0064', u'\u0078')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0073')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006A', u'\u006F', u'\u0069', u'\u006E')), (11LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u006C', u'\u006F', u'\u0077', u'\u0065', u'\u0072')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u006D', u'\u0061', u'\u0078')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u006D', u'\u0069', u'\u006E')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u006D', u'\u006F', u'\u0076', u'\u0065', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0078', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u006E', u'\u006F', u'\u0074')), (1LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u006F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (2LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u006F', u'\u0072')), (1LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0070', u'\u0065', u'\u0065', u'\u006B')), (9LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0070', u'\u0072', u'\u0065', u'\u0076')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0070', u'\u006C', u'\u0061', u'\u0063', u'\u0065')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0072', u'\u0065', u'\u0076', u'\u0065', u'\u0072', u'\u0073', u'\u0065')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0061', u'\u0072')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0068', u'\u006C')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0068', u'\u0072')), (3LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0073', u'\u0068', u'\u0075', u'\u0066', u'\u0066', u'\u006C', u'\u0065')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u0067', u'\u006E')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0073', u'\u006F', u'\u0072', u'\u0074')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063')), (13LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0073', u'\u0070', u'\u006C', u'\u0069', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0073', u'\u0075', u'\u0062')), (4LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0074', u'\u0061', u'\u0069', u'\u006C')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0074', u'\u0065', u'\u0072', u'\u006D')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0074', u'\u0065', u'\u0072', u'\u006D', u'\u004F', u'\u0066', u'\u0066', u'\u0073', u'\u0065', u'\u0074')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079')), (8LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u004B', u'\u0065', u'\u0079')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(12, u'\u0074', u'\u006F', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0056', u'\u0061', u'\u006C', u'\u0075', u'\u0065')), (12LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u0074', u'\u0036', u'\u0034')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0049', u'\u006E', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072')), (0LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074')), (10LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0069', u'\u006D')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0074', u'\u0072', u'\u0069', u'\u006D', u'\u004C', u'\u0065', u'\u0066', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0074', u'\u0072', u'\u0069', u'\u006D', u'\u0052', u'\u0069', u'\u0067', u'\u0068', u'\u0074')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0075', u'\u0070', u'\u0070', u'\u0065', u'\u0072')), (5LL));
dv<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0078', u'\u006F', u'\u0072')), (1LL));
}
(jjg) = (false);
(jjh) = (avo<Dict_<Array_<char16_t>*, int64_t>*, Array_<char16_t>*, int64_t>((ai), (new Array_<int64_t>(1, (0LL))), (*jjc), (&jjg)));
if(!(jjg)){
return false;
}
jjl = jjh;
switch(jjl){
case 0LL:
if(((((((bdm)((jjd))) || ((glc)((jjd)))) || ((ewg)((jjd)))) || ((gls)((jjd)))) || (((jjd)->lw) == (1025LL))) || ((fob)((jjd)))){
return true;
}
break;
case 1LL:
if((((jjd)->lw) == (1025LL)) || ((ewh)((jjd)))){
return true;
}
break;
case 2LL:
if((ewg)((jjd))){
return true;
}
break;
case 3LL:
if(((jjd)->lw) == (1025LL)){
return true;
}
break;
case 4LL:
if(((jjd)->lw) == (66561LL)){
return true;
}
break;
case 5LL:
if((fob)((jjd))){
return true;
}
break;
case 6LL:
if(((jjd)->lw) == (66563LL)){
jki = (as_<cbr>(classTable_, (jjd), 84))->cbu;
switch(jki){
case 0LL:
(*jjc) = (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
break;
case 1LL:
(*jjc) = (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'));
break;
case 2LL:
(*jjc) = (new Array_<char16_t>(8, u'\u0061', u'\u0064', u'\u0064', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return true;
}
if(((jjd)->lw) == (66564LL)){
(*jjc) = (new Array_<char16_t>(7, u'\u0061', u'\u0064', u'\u0064', u'\u0044', u'\u0069', u'\u0063', u'\u0074'));
return true;
}
break;
case 7LL:
if(((jjd)->lw) == (66563LL)){
jkt = (as_<cbr>(classTable_, (jjd), 84))->cbu;
switch(jkt){
case 0LL:
(*jjc) = (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
break;
case 1LL:
(*jjc) = (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'));
break;
case 2LL:
(*jjc) = (new Array_<char16_t>(8, u'\u0067', u'\u0065', u'\u0074', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return true;
}
if(((jjd)->lw) == (66564LL)){
(*jjc) = (new Array_<char16_t>(7, u'\u0067', u'\u0065', u'\u0074', u'\u0044', u'\u0069', u'\u0063', u'\u0074'));
return true;
}
break;
case 8LL:
if((((jjd)->lw) == (66563LL)) && (((as_<cbr>(classTable_, (jjd), 84))->cbu) == (0LL))){
return true;
}
break;
case 9LL:
if(((jjd)->lw) == (66563LL)){
if(((as_<cbr>(classTable_, (jjd), 84))->cbu) == (1LL)){
(*jjc) = (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B'));
return true;
}
else if(((as_<cbr>(classTable_, (jjd), 84))->cbu) == (2LL)){
(*jjc) = (new Array_<char16_t>(9, u'\u0070', u'\u0065', u'\u0065', u'\u006B', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065'));
return true;
}
}
break;
case 10LL:
if((bdm)((jjd))){
jln = *jjc;
if(cmp_(jln, (new Array_<char16_t>(3, u'\u0061', u'\u0062', u'\u0073'))) == 0){
(*jjc) = (new Array_<char16_t>(6, u'\u0061', u'\u0062', u'\u0073', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jln, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070'))) == 0){
(*jjc) = (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jln, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E'))) == 0){
(*jjc) = (new Array_<char16_t>(11, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jln, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078'))) == 0){
(*jjc) = (new Array_<char16_t>(11, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jln, (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u0067', u'\u006E'))) == 0){
(*jjc) = (new Array_<char16_t>(7, u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0049', u'\u006E', u'\u0074'));
}
else if(cmp_(jln, (new Array_<char16_t>(8, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074'))) == 0){
(*jjc) = (new Array_<char16_t>(11, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074', u'\u0049', u'\u006E', u'\u0074'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
if((glc)((jjd))){
jly = *jjc;
if(cmp_(jly, (new Array_<char16_t>(3, u'\u0061', u'\u0062', u'\u0073'))) == 0){
(*jjc) = (new Array_<char16_t>(8, u'\u0061', u'\u0062', u'\u0073', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jly, (new Array_<char16_t>(5, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070'))) == 0){
(*jjc) = (new Array_<char16_t>(10, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jly, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E'))) == 0){
(*jjc) = (new Array_<char16_t>(13, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0069', u'\u006E', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jly, (new Array_<char16_t>(8, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078'))) == 0){
(*jjc) = (new Array_<char16_t>(13, u'\u0063', u'\u006C', u'\u0061', u'\u006D', u'\u0070', u'\u004D', u'\u0061', u'\u0078', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jly, (new Array_<char16_t>(4, u'\u0073', u'\u0069', u'\u0067', u'\u006E'))) == 0){
(*jjc) = (new Array_<char16_t>(9, u'\u0073', u'\u0069', u'\u0067', u'\u006E', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else if(cmp_(jly, (new Array_<char16_t>(8, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074'))) == 0){
(*jjc) = (new Array_<char16_t>(13, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072', u'\u0046', u'\u006D', u'\u0074', u'\u0046', u'\u006C', u'\u006F', u'\u0061', u'\u0074'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
break;
case 11LL:
if((((jjd)->lw) == (66561LL)) && ((fob)(((as_<cam>(classTable_, (jjd), 76))->cao)))){
return true;
}
break;
case 12LL:
if(((jjd)->lw) == (66564LL)){
return true;
}
break;
case 13LL:
if(((jjd)->lw) == (66561LL)){
jmq = *jjc;
if(cmp_(jmq, (new Array_<char16_t>(4, u'\u0073', u'\u006F', u'\u0072', u'\u0074'))) == 0){
(*jjc) = (new Array_<char16_t>(9, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else if(cmp_(jmq, (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063'))) == 0){
(*jjc) = (new Array_<char16_t>(13, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else if(cmp_(jmq, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006E', u'\u0064'))) == 0){
(*jjc) = (new Array_<char16_t>(9, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else if(cmp_(jmq, (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074'))) == 0){
(*jjc) = (new Array_<char16_t>(13, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
if((((jjd)->lw) == (66563LL)) && (((as_<cbr>(classTable_, (jjd), 84))->cbu) == (0LL))){
jmz = *jjc;
if(cmp_(jmz, (new Array_<char16_t>(4, u'\u0073', u'\u006F', u'\u0072', u'\u0074'))) == 0){
(*jjc) = (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else if(cmp_(jmz, (new Array_<char16_t>(8, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063'))) == 0){
(*jjc) = (new Array_<char16_t>(12, u'\u0073', u'\u006F', u'\u0072', u'\u0074', u'\u0044', u'\u0065', u'\u0073', u'\u0063', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else if(cmp_(jmz, (new Array_<char16_t>(4, u'\u0066', u'\u0069', u'\u006E', u'\u0064'))) == 0){
(*jjc) = (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else if(cmp_(jmz, (new Array_<char16_t>(8, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074'))) == 0){
(*jjc) = (new Array_<char16_t>(12, u'\u0066', u'\u0069', u'\u006E', u'\u0064', u'\u004C', u'\u0061', u'\u0073', u'\u0074', u'\u004C', u'\u0069', u'\u0073', u'\u0074'));
}
else{if(!(false)){
throw 0xE9170000U;
}
}
return true;
}
break;
case 14LL:
if((((jjd)->lw) == (66563LL)) && (((as_<cbr>(classTable_, (jjd), 84))->cbu) == (0LL))){
return true;
}
if(((jjd)->lw) == (66564LL)){
(*jjc) = (new Array_<char16_t>(7, u'\u0064', u'\u0065', u'\u006C', u'\u0044', u'\u0069', u'\u0063', u'\u0074'));
return true;
}
break;
}
return false;
}
// cacheSubExpr
static gd* ifz(List_<ge*>* jnk /*stats*/, gd* jnl /*ast*/, ga* jnm /*pos*/){
gd* jnr; // ref
gb* jnt; // arg
buy* jnv; // do_
byf* jnx; // exprAssign
if(eqAddr_((jnl), (nullptr))){
return nullptr;
}
if((((jnl)->lw) == (2062LL)) || ((aye<int64_t>(((jnl)->lw), (new Array_<int64_t>(1, (0LL))), (67584LL))) == (67584LL))){
return jnl;
}
(jnr) = (new gd());
(bvd)((jnr), (2062LL), (jnm));
((jnr)->ni) = (new Array_<char16_t>(1, u'\u0024'));
((jnr)->pj) = (2LL);
((jnr)->nk) = (jnr);
(jnt) = (new gb());
(btv)((jnt), (7LL), (jnm));
((jnt)->qk) = (3LL);
((jnt)->ql) = (false);
((jnt)->qf) = ((jnl)->pf);
((jnt)->qg) = (nullptr);
((jnt)->nk) = (jnt);
((jnr)->nj) = (jnt);
((jnr)->pf) = ((jnt)->qf);
(jnv) = (new buy());
(btv)((jnv), (528LL), (jnm));
(jnx) = (new byf());
(bvd)((jnx), (2050LL), (jnm));
((jnx)->byg) = (0LL);
((jnx)->byj) = (jnr);
((jnx)->byk) = (jnl);
((jnv)->bvi) = (jnx);
uh<List_<ge*>*, ge*>((jnk), (new Array_<int64_t>(1, (0LL))), ((eks)((jnv))));
return jnr;
}
// buildExpr1
static void iik(eft* jny /*ast*/){
int64_t joa;
if(!(((jny)->pj) != (0LL))){
throw 0xE9170000U;
}
joa = (jny)->gkz;
switch(joa){
case 0LL:
(etj)(((jny)->gkt));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002D', u'\u0028')));
(etj)(((jny)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0021', u'\u0028')));
(etj)(((jny)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 3LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006F', u'\u0070', u'\u0079', u'\u005F', u'\u0028')));
(etj)(((jny)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 4LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((jny)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002D', u'\u003E', u'\u004C', u'\u0065', u'\u006E', u'\u0028', u'\u0029')));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr2
static void iim(byf* joh /*ast*/){
gc* joi; // type
int64_t jok;
Array_<char16_t>* jqc; // tmpVar
if(!(((joh)->pj) != (0LL))){
throw 0xE9170000U;
}
(joi) = (((joh)->byj)->pf);
jok = (joh)->byg;
switch(jok){
case 0LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003D', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 8LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u007C', u'\u007C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 9LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u0026', u'\u0026', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 10LL:
if((byn)((joi))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0029', u'\u0020', u'\u003C', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 11LL:
if((byn)((joi))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003E', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 12LL:
if((byn)((joi))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u003C', u'\u003D', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 13LL:
if((byn)((joi))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u003E', u'\u003D', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 14LL:
if((byn)((joi))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u003D', u'\u003D', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 15LL:
if((byn)((joi))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u0029', u'\u0020', u'\u0021', u'\u003D', u'\u0020', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u0020', u'\u0021', u'\u003D', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 16LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0065', u'\u0071', u'\u0041', u'\u0064', u'\u0064', u'\u0072', u'\u005F', u'\u0028', u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 17LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0021', u'\u0065', u'\u0071', u'\u0041', u'\u0064', u'\u0064', u'\u0072', u'\u005F', u'\u0028', u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 18LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u002D', u'\u003E', u'\u0043', u'\u0061', u'\u0074', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 19LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002B', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 20LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002D', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 21LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002A', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 22LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u002F', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 23LL:
if(((bdm)((joi))) || ((aye<int64_t>(((joi)->lw), (new Array_<int64_t>(1, (0LL))), (1025LL))) == (1025LL))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u0025', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
if(!((glc)((joi)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0066', u'\u006D', u'\u006F', u'\u0064', u'\u0028', u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
break;
case 24LL:
if(((bdm)((joi))) || ((aye<int64_t>(((joi)->lw), (new Array_<int64_t>(1, (0LL))), (1025LL))) == (1025LL))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0070', u'\u006F', u'\u0077', u'\u0049', u'\u005F', u'\u0028', u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
else{
if(!((glc)((joi)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0070', u'\u006F', u'\u0077', u'\u0028', u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
break;
case 25LL:
(jqc) = ((fdi)((joi)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((jqc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u0020', u'\u003D', u'\u0020', u'\u0028'))));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003D', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((joh)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003D', u'\u0020', u'\u0028'))->Cat(v<Array_<char16_t>*>((jqc), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr3
static void iio(efy* jqe /*ast*/){
if(!(((jqe)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((jqe)->gwf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003F', u'\u0020', u'\u0028')));
(etj)(((jqe)->gwi));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0020', u'\u003A', u'\u0020', u'\u0028')));
(etj)(((jqe)->gwl));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprNew
static void iiq(egb* jqf /*ast*/){
ul* jqi; // class_
Array_<char16_t>* jqj; // id
cbr* jqn; // gen
int64_t jqp;
ccc* jqv; // dict_
if(!(((jqf)->pj) != (0LL))){
throw 0xE9170000U;
}
if((ele)(((jqf)->gyg))){
(jqi) = (as_<ul>(classTable_, (((jqf)->gyg)->nj), 22));
(jqj) = ((bft)((jqi)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0077', u'\u0020'))->Cat(v<Array_<char16_t>*>((jqj), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))));
}
else{
if((((jqf)->gyg)->lw) == (66563LL)){
(jqn) = (as_<cbr>(classTable_, ((jqf)->gyg), 84));
jqp = (jqn)->cbu;
switch(jqp){
case 0LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u004C', u'\u0069', u'\u0073', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((jqn)->cbw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029'))));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0053', u'\u0074', u'\u0061', u'\u0063', u'\u006B', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((jqn)->cbw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029'))));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0051', u'\u0075', u'\u0065', u'\u0075', u'\u0065', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((jqn)->cbw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((((jqf)->gyg)->lw) == (66564LL))){
throw 0xE9170000U;
}
(jqv) = (as_<ccc>(classTable_, ((jqf)->gyg), 86));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0044', u'\u0069', u'\u0063', u'\u0074', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((jqv)->ccd))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((jqv)->cce))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0029')))));
}
}
}
// buildExprNewArray
static void iis(ege* jqw /*ast*/){
List_<gd*>* jqy; // items
if(!(((jqw)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((jqw)->haa))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((jqw)->pf))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003E', u'\u0028'))->Cat(v<int64_t>((((jqw)->gzr)->Len()), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))))));
(jqy) = ((jqw)->gzr);
awe<List_<gd*>*>((jqy), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((jqy), (new Array_<int64_t>(1, (0LL)))))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028')));
(etj)((awi<List_<gd*>*, gd*>((jqy), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((jqy), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprAs
static void iiu(egh* jra /*ast*/){
int64_t jrc;
gc* jre; // t1
gc* jrf; // t2
Array_<char16_t>* jri; // id
bby* jrj; // info
bby* jrm; // info
bby* jro; // info
if(!(((jra)->pj) != (0LL))){
throw 0xE9170000U;
}
jrc = (jra)->hbw;
switch(jrc){
case 0LL:
(jre) = (((jra)->hbo)->pf);
(jrf) = ((jra)->hbr);
if((ele)((jre))){
if(!((ele)((jrf)))){
throw 0xE9170000U;
}
(jri) = ((bft)((as_<ul>(classTable_, ((jrf)->nj), 22))));
(jrj) = ((bbx)(((jrf)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0061', u'\u0073', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>((jri), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(16, u'\u003E', u'\u0028', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u002C', u'\u0020', u'\u0028'))));
(etj)(((jra)->hbo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<int64_t>((((jrj)->bfy) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((jra)->hbr))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003E', u'\u0028'))));
(etj)(((jra)->hbo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 1LL:
(bft)((as_<ul>(classTable_, (((jra)->hbr)->nj), 22)));
(jrm) = ((bbx)((((jra)->hbr)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(18, u'\u0069', u'\u0073', u'\u005F', u'\u0028', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((jra)->hbo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<int64_t>((((jrm)->bfy) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
case 2LL:
(bft)((as_<ul>(classTable_, (((jra)->hbr)->nj), 22)));
(jro) = ((bbx)((((jra)->hbr)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(19, u'\u0021', u'\u0069', u'\u0073', u'\u005F', u'\u0028', u'\u0063', u'\u006C', u'\u0061', u'\u0073', u'\u0073', u'\u0054', u'\u0061', u'\u0062', u'\u006C', u'\u0065', u'\u005F', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((jra)->hbo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0020'))->Cat(v<int64_t>((((jro)->bfy) * (2LL)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExprToBin
static void iiw(egk* jrq /*ast*/){
if(!(((jrq)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u0028')));
(etj)(((jrq)->hfv));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprFromBin
static void iiy(egn* jrr /*ast*/){
if(!(((jrr)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(9, u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((jrr)->hhl))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u003E', u'\u0028', u'\u0028'))));
(etj)(((jrr)->hhg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002C', u'\u0020', u'\u0028')));
(etj)(((jrr)->hhm));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
// buildExprCall
static void ija(bvb* jrs /*ast*/){
cau* jrt; // funcType
Array_<char16_t>* jru; // template
List_<bvc*>* jrx; // items
gc* jry; // meType
bool jtc; // first
List_<bvc*>* jtd; // items
bvc* jtf; // item
gc* jtm; // type
if(!(((jrs)->pj) != (0LL))){
throw 0xE9170000U;
}
(jrt) = (as_<cau>(classTable_, (((jrs)->bvh)->pf), 80));
(jru) = (nullptr);
if((!eqAddr_((jrt), (nullptr))) && ((aye<int64_t>(((jrt)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL))){
(jrx) = ((jrs)->bve);
awe<List_<bvc*>*>((jrx), (new Array_<int64_t>(1, (0LL))));
(jry) = (((awi<List_<bvc*>*, bvc*>((jrx), (new Array_<int64_t>(1, (0LL)))))->bwq)->pf);
if((aye<int64_t>(((jrt)->eqb), (new Array_<int64_t>(1, (0LL))), (32LL))) == (32LL)){
(jru) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)((jry))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<ccc>(classTable_, (jry), 86))->ccd))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<ccc>(classTable_, (jry), 86))->cce))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E')))));
}
else if((aye<int64_t>(((jrt)->eqb), (new Array_<int64_t>(1, (0LL))), (8LL))) == (8LL)){
if((aye<int64_t>(((jrt)->eqb), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(jru) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)((jry))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
if(((jry)->lw) == (66563LL)){
(jru) = ((jru)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<cbr>(classTable_, (jry), 84))->cbw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020'))));
}
else{
if(!(((jry)->lw) == (66564LL))){
throw 0xE9170000U;
}
(jru) = ((jru)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<ccc>(classTable_, (jry), 86))->ccd))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020'))));
}
(jru) = ((jru)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)(((jrt)->cax))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else{
(jru) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)((jry))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0020')));
if(((jry)->lw) == (66561LL)){
(jru) = ((jru)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<cam>(classTable_, (jry), 76))->cao))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else if(((jry)->lw) == (66563LL)){
(jru) = ((jru)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<cbr>(classTable_, (jry), 84))->cbw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else{
if(!(((jry)->lw) == (66564LL))){
throw 0xE9170000U;
}
(jru) = ((jru)->Cat(((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<ccc>(classTable_, (jry), 86))->ccd))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
}
}
else if((aye<int64_t>(((jrt)->eqb), (new Array_<int64_t>(1, (0LL))), (16LL))) == (16LL)){
(jru) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)((jry))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((jrt)->cax))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else if((aye<int64_t>(((jrt)->eqb), (new Array_<int64_t>(1, (0LL))), (256LL))) == (256LL)){
(jru) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)((jry))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<ccc>(classTable_, (jry), 86))->ccd))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<ccc>(classTable_, (jry), 86))->cce))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E')))));
}
else if((aye<int64_t>(((jrt)->eqb), (new Array_<int64_t>(1, (0LL))), (64LL))) == (64LL)){
(jru) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)((jry))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<cbr>(classTable_, (jry), 84))->cbw))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else if((aye<int64_t>(((jrt)->eqb), (new Array_<int64_t>(1, (0LL))), (512LL))) == (512LL)){
(jru) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)((jry))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<ccc>(classTable_, (jry), 86))->ccd))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else if((aye<int64_t>(((jrt)->eqb), (new Array_<int64_t>(1, (0LL))), (1024LL))) == (1024LL)){
(jru) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)((jry))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u002C', u'\u0020'))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<ccc>(classTable_, (jry), 86))->cce))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E'))));
}
else{
(jru) = (((new Array_<char16_t>(1, u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)((jry))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003E')));
}
}
if(eqAddr_((jru), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((jrs)->bvh));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
(etj)(((jrs)->bvh));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (jru));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(jtc) = (true);
(jtd) = ((jrs)->bve);
awe<List_<bvc*>*>((jtd), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvc*>*>((jtd), (new Array_<int64_t>(1, (0LL)))))){
(jtf) = (awi<List_<bvc*>*, bvc*>((jtd), (new Array_<int64_t>(1, (0LL)))));
if(jtc){
(jtc) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028')));
}
if((jtf)->bwm){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0026')));
}
(etj)(((jtf)->bwq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<bvc*>*>((jtd), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
(jtm) = ((jrs)->pf);
if(!eqAddr_((jtm), (nullptr))){
if((ele)((jtm))){
(bft)((as_<ul>(classTable_, ((jtm)->nj), 22)));
}
}
}
// buildExprArray
static void ijc(egs* jtr /*ast*/){
if(!(((jtr)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((jtr)->hky));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002D', u'\u003E', u'\u0041', u'\u0074', u'\u0028')));
(etj)(((jtr)->hld));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprDot
static void ije(egv* jts /*ast*/){
um* jtv; // classItem
bby* jtw; // info
if(!(((jts)->pj) != (0LL))){
throw 0xE9170000U;
}
if((ele)((((jts)->hjg)->pf))){
(jtv) = ((jts)->hnj);
if(!(!eqAddr_((jtv), (nullptr)))){
throw 0xE9170000U;
}
(bft)((as_<ul>(classTable_, ((((jts)->hjg)->pf)->nj), 22)));
(jtw) = (nullptr);
if((((jtv)->azl)->lw) == (2LL)){
(jtw) = ((bbx)(((as_<bgn>(classTable_, ((jtv)->azl), 38))->bgp)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(etj)(((jts)->hjg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u002D', u'\u003E'))->Cat(v<Array_<char16_t>*>(((jtw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
else{
if(!((((jtv)->azl)->lw) == (256LL))){
throw 0xE9170000U;
}
(jtw) = ((bbx)(((jtv)->azl)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((jtw)->bee), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
}
else{
if(!((((jts)->nj)->lw) == (2062LL))){
throw 0xE9170000U;
}
(ijq)((as_<gd>(classTable_, ((jts)->nj), 14)));
}
}
// buildExprValue
static void ijg(bvu* jub /*ast*/){
if(!((((jub)->pf)->lw) == (1027LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u0070', u'\u0074', u'\u0072')));
}
// buildExprValuePrim
static void iji(bvt* juc /*ast*/){
gc* jud; // type
int64_t juk;
(jud) = ((juc)->pf);
if(((bdm)((jud))) || ((ewh)((jud)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((v<int64_t>((static_cast<int64_t>((juc)->bvv)), (new Array_<int64_t>(1, (0LL)))))->Cat(new Array_<char16_t>(2, u'\u004C', u'\u004C'))));
}
else if((ewg)((jud))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u0075', u'\u0027', u'\u005C', u'\u0075'))->Cat(v<Array_<char16_t>*>((auw<Array_<char16_t>*>((v<uint16_t>((static_cast<uint16_t>((juc)->bvv)), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))), (2LL), (-1LL))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0027'))));
}
else if((gls)((jud))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((((juc)->bvv) == (0x0000000000000000ULL)) ? (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')) : (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))));
}
else if(((jud)->lw) == (1025LL)){
juk = (as_<caq>(classTable_, (jud), 78))->car;
switch(juk){
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(21, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0038', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<uint8_t>((static_cast<uint8_t>((juc)->bvv)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0055', u'\u0029'))));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(22, u'\u0073', u'\u0074', u'\u0061', u'\u0074', u'\u0069', u'\u0063', u'\u005F', u'\u0063', u'\u0061', u'\u0073', u'\u0074', u'\u003C', u'\u0075', u'\u0069', u'\u006E', u'\u0074', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<uint16_t>((static_cast<uint16_t>((juc)->bvv)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0055', u'\u0029'))));
break;
case 4LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<uint32_t>((static_cast<uint32_t>((juc)->bvv)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0055'))));
break;
case 8LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<uint64_t>(((juc)->bvv), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(3, u'\u0055', u'\u004C', u'\u004C'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!(false)){
throw 0xE9170000U;
}
}
}
// buildExprValueStr
static void ijk(ehc* jur /*ast*/){
Array_<char16_t>* jus; // value
Array_<char16_t>* jut; // s
int64_t jux;
int64_t juy;
(jus) = ((jur)->gqn);
(jut) = (((new Array_<char16_t>(21, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0031', u'\u0036', u'\u005F', u'\u0074', u'\u003E', u'\u0028'))->Cat(v<int64_t>(((jus)->Len()), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0)));
for(jux = (0LL), juy = (((jus)->Len()) - (1LL)); jux <= juy; jux += (1LL)){
(jut) = ((jut)->Cat(((new Array_<char16_t>(6, u'\u002C', u'\u0020', u'\u0075', u'\u0027', u'\u005C', u'\u0075'))->Cat(v<Array_<char16_t>*>((auw<Array_<char16_t>*>((v<uint16_t>((static_cast<uint16_t>((jus)->At(jux))), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))), (2LL), (-1LL))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0027'))));
}
(jut) = ((jut)->Cat(new Array_<char16_t>(1, u'\u0029')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (jut));
}
// buildExprValueFloat
static void ijm(ehi* jvb /*ast*/){
Array_<char16_t>* jvc; // value
(jvc) = (v<double>(((jvb)->glp), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((jvc), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(39, u'\u0073', u'\u0074', u'\u0064', u'\u003A', u'\u003A', u'\u006E', u'\u0075', u'\u006D', u'\u0065', u'\u0072', u'\u0069', u'\u0063', u'\u005F', u'\u006C', u'\u0069', u'\u006D', u'\u0069', u'\u0074', u'\u0073', u'\u003C', u'\u0064', u'\u006F', u'\u0075', u'\u0062', u'\u006C', u'\u0065', u'\u003E', u'\u003A', u'\u003A', u'\u0069', u'\u006E', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0079', u'\u0028', u'\u0029')));
}
else if((awn<Array_<char16_t>*, char16_t>((jvc), (new Array_<int64_t>(1, (0LL))), (u'\u002E'), (-1LL))) == (-1LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((jvc)->Cat(new Array_<char16_t>(2, u'\u002E', u'\u0030'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (jvc));
}
}
// buildExprValueArray
static void ijo(ehl* jvh /*ast*/){
List_<gd*>* jvi; // items
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(11, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u005F', u'\u003C'))->Cat(v<Array_<char16_t>*>(((bcz)(((as_<cam>(classTable_, ((jvh)->pf), 76))->cao))), (new Array_<int64_t>(1, (0LL))))))->Cat(((new Array_<char16_t>(2, u'\u003E', u'\u0028'))->Cat(v<int64_t>((((jvh)->hjp)->Len()), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0)))));
(jvi) = ((jvh)->hjp);
awe<List_<gd*>*>((jvi), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((jvi), (new Array_<int64_t>(1, (0LL)))))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u002C', u'\u0020', u'\u0028')));
(etj)((awi<List_<gd*>*, gd*>((jvi), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((jvi), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprRef
static void ijq(gd* jvk /*ast*/){
fx* jvl; // ast2
bby* jvm; // info
gb* jvq; // arg
int64_t jvs;
(jvl) = ((jvk)->nj);
(jvm) = ((bbx)((jvl)));
if(((jvl)->lw) == (256LL)){
uk<Queue_<fw*>*, fw*>((aj), (new Array_<int64_t>(1, (0LL))), (as_<fw>(classTable_, (jvl), 8)));
}
else{
if(!(((jvl)->lw) == (7LL))){
throw 0xE9170000U;
}
(jvq) = (as_<gb>(classTable_, (jvl), 10));
jvs = (jvq)->qk;
switch(jvs){
case 1LL:
if(!((jvm)->bca)){
((jvm)->bca) = (true);
uh<List_<gb*>*, gb*>((ar), (new Array_<int64_t>(1, (0LL))), (jvq));
}
break;
case 2LL:
break;
case 3LL:
if(!((jvm)->bca)){
((jvm)->bca) = (true);
uh<List_<gb*>*, gb*>((as), (new Array_<int64_t>(1, (0LL))), (jvq));
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if((jvq)->ql){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u002A')));
}
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((ao), (new Array_<int64_t>(1, (0LL))), ((jvm)->bee));
}
// buildExpr1
static void ika(eft* jwd /*ast*/){
int64_t jwf;
Array_<char16_t>* jwk; // typeId
gc* jwn; // type
int64_t jwr;
if(!(((jwd)->pj) != (0LL))){
throw 0xE9170000U;
}
jwf = (jwd)->gkz;
switch(jwf){
case 0LL:
(flw)(((jwd)->gkt));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002D', u'\u0028')));
(flw)(((jwd)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0021', u'\u0028')));
(flw)(((jwd)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 3LL:
(jwk) = ((jwl)((((jwd)->gkt)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0043', u'\u005F', u'\u0028'))->Cat(v<Array_<char16_t>*>((jwk), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002C', u'\u0028'))));
(flw)(((jwd)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 4LL:
(jwn) = (((jwd)->gkt)->pf);
if(((jwn)->lw) == (66563LL)){
jwr = (as_<cbr>(classTable_, (jwn), 84))->cbu;
switch(jwr){
case 0LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jwd)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u004C')));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jwd)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jwd)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else if(((jwn)->lw) == (66564LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jwd)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002E', u'\u0073', u'\u0069', u'\u007A', u'\u0065')));
}
else{
if(!(((jwn)->lw) == (66561LL))){
throw 0xE9170000U;
}
if((ewg)(((as_<cam>(classTable_, (jwn), 76))->cao))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jwd)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jwd)->gkt));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0029', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068')));
}
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr2
static void ikc(byf* jxc /*ast*/){
gc* jxd; // type
int64_t jxf;
egs* jxj; // ast2
Array_<char16_t>* jxk; // tmpIdx
Array_<char16_t>* jxl; // tmpChar
Array_<char16_t>* jzl; // tmpVar
if(!(((jxc)->pj) != (0LL))){
throw 0xE9170000U;
}
(jxd) = (((jxc)->byj)->pf);
jxf = (jxc)->byg;
switch(jxf){
case 0LL:
if(((((jxc)->byj)->lw) == (2058LL)) && ((ewg)(((as_<egs>(classTable_, ((jxc)->byj), 124))->pf)))){
(jxj) = (as_<egs>(classTable_, ((jxc)->byj), 124));
(jxk) = ((fpg)((((jxj)->hld)->pf)));
(jxl) = ((fpg)(((jxj)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxj)->hky));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u003D', u'\u0028'))->Cat(v<Array_<char16_t>*>((jxk), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(flw)(((jxj)->hld));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(flw)(((jxj)->hky));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028', u'\u0030', u'\u002C'))->Cat(v<Array_<char16_t>*>((jxk), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(22, u'\u0029', u'\u002B', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028'))));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002B', u'\u0028')));
(flw)(((jxj)->hky));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(10, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u0073', u'\u006C', u'\u0069', u'\u0063', u'\u0065', u'\u0028'))->Cat(v<Array_<char16_t>*>((jxk), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(4, u'\u002B', u'\u0031', u'\u0029', u'\u0029'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 8LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u007C', u'\u007C', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 9LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0026', u'\u0026', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 10LL:
if((fob)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u003C', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byn)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u003C', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003C', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 11LL:
if((fob)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u003E', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byn)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0029', u'\u003E', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003E', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 12LL:
if((fob)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002E', u'\u0053', u'\u003C', u'\u003D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byn)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003C', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u003C', u'\u003D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 13LL:
if((fob)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0029', u'\u002E', u'\u0053', u'\u003E', u'\u003D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byn)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003E', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u003E', u'\u003D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 14LL:
if((fob)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u002E', u'\u0053', u'\u003D', u'\u003D', u'\u003D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byn)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u003D', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 15LL:
if((fob)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0029', u'\u002E', u'\u0053', u'\u0021', u'\u003D', u'\u003D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002E', u'\u0053')));
}
else if((byn)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(6, u'\u0063', u'\u006D', u'\u0070', u'\u005F', u'\u0028', u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0029', u'\u0021', u'\u003D', u'\u0030')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0021', u'\u003D', u'\u003D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 16LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u003D', u'\u003D', u'\u003D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 17LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u0021', u'\u003D', u'\u003D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 18LL:
if((fob)((jxd))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u007B', u'\u0053', u'\u003A', u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u002E', u'\u0053', u'\u002B', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u002E', u'\u0053', u'\u007D')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u0029', u'\u002E', u'\u0063', u'\u006F', u'\u006E', u'\u0063', u'\u0061', u'\u0074', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 19LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002B', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 20LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 21LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002A', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 22LL:
if(!((glc)((jxd)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u007E', u'\u007E', u'\u0028')));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002F', u'\u0028')));
(flw)(((jxc)->byk));
if(!((glc)((jxd)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
break;
case 23LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u0025', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
break;
case 24LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u004D', u'\u0061', u'\u0074', u'\u0068', u'\u002E', u'\u0070', u'\u006F', u'\u0077', u'\u0028', u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
break;
case 25LL:
(jzl) = ((fpg)((jxd)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((jzl), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u003D', u'\u0028'))));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(flw)(((jxc)->byj));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003D', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(flw)(((jxc)->byk));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u003D', u'\u0028'))->Cat(v<Array_<char16_t>*>((jzl), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExpr3
static void ike(efy* jzn /*ast*/){
if(!(((jzn)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((jzn)->gwf));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003F', u'\u0028')));
(flw)(((jzn)->gwi));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u003A', u'\u0028')));
(flw)(((jzn)->gwl));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprNew
static void ikg(egb* jzo /*ast*/){
ul* jzr; // class_
Array_<char16_t>* jzs; // id
cbr* jzw; // gen
int64_t jzy;
if(!(((jzo)->pj) != (0LL))){
throw 0xE9170000U;
}
if((ele)(((jzo)->gyg))){
(jzr) = (as_<ul>(classTable_, (((jzo)->gyg)->nj), 22));
(jzs) = ((bla)((jzr)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(4, u'\u006E', u'\u0065', u'\u0077', u'\u0020'))->Cat(v<Array_<char16_t>*>((jzs), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u0028', u'\u0029'))));
}
else{
if((((jzo)->gyg)->lw) == (66563LL)){
(jzw) = (as_<cbr>(classTable_, ((jzo)->gyg), 84));
jzy = (jzw)->cbu;
switch(jzy){
case 0LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(26, u'\u007B', u'\u004C', u'\u003A', u'\u0030', u'\u002C', u'\u0048', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0054', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u002C', u'\u0050', u'\u003A', u'\u006E', u'\u0075', u'\u006C', u'\u006C', u'\u007D')));
break;
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005B', u'\u005D')));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005B', u'\u005D')));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!((((jzo)->gyg)->lw) == (66564LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(9, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u004D', u'\u0061', u'\u0070', u'\u0028', u'\u0029')));
}
}
}
// buildExprNewArray
static void iki(ege* kae /*ast*/){
List_<gd*>* kag; // items
bool kam; // first
bool kav; // first
if(!(((kae)->pj) != (0LL))){
throw 0xE9170000U;
}
(kag) = ((kae)->gzr);
awe<List_<gd*>*>((kag), (new Array_<int64_t>(1, (0LL))));
if((ewg)(((kae)->haa))){
if(((kag)->Len()) == (1LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u005C', u'\u0030', u'\u0022', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074', u'\u0028')));
(flw)((awi<List_<gd*>*, gd*>((kag), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u007D')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(53, u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0041', u'\u005F', u'\u0028', u'\u006E', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u006E', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003D', u'\u003D', u'\u003D', u'\u0031', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u007B', u'\u0053', u'\u003A', u'\u0022', u'\u005C', u'\u0030', u'\u0022', u'\u002E', u'\u0072', u'\u0065', u'\u0070', u'\u0065', u'\u0061', u'\u0074', u'\u0028'))->Cat(v<Array_<char16_t>*>(((deq)(((kae)->haa))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(88, u'\u0029', u'\u007D', u'\u003B', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u002C', u'\u006D', u'\u003D', u'\u006E', u'\u002E', u'\u0073', u'\u0068', u'\u0069', u'\u0066', u'\u0074', u'\u0028', u'\u0029', u'\u002C', u'\u0069', u'\u003B', u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0061', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0041', u'\u005F', u'\u0028', u'\u006D', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u003B', u'\u007D', u'\u007D', u'\u0029', u'\u0028', u'\u005B'))));
(kam) = (true);
while(!(awg<List_<gd*>*>((kag), (new Array_<int64_t>(1, (0LL)))))){
if(kam){
(kam) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(flw)((awi<List_<gd*>*, gd*>((kag), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((kag), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005D', u'\u0029')));
}
}
else{
if(((kag)->Len()) == (1LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028')));
(flw)((awi<List_<gd*>*, gd*>((kag), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(7, u'\u0029', u'\u002E', u'\u0066', u'\u0069', u'\u006C', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((deq)(((kae)->haa))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(60, u'\u0028', u'\u0066', u'\u0075', u'\u006E', u'\u0063', u'\u0074', u'\u0069', u'\u006F', u'\u006E', u'\u0020', u'\u0041', u'\u005F', u'\u0028', u'\u006E', u'\u0029', u'\u007B', u'\u0069', u'\u0066', u'\u0028', u'\u006E', u'\u002E', u'\u006C', u'\u0065', u'\u006E', u'\u0067', u'\u0074', u'\u0068', u'\u003D', u'\u003D', u'\u003D', u'\u0031', u'\u0029', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u002E', u'\u0066', u'\u0069', u'\u006C', u'\u006C', u'\u0028'))->Cat(v<Array_<char16_t>*>(((deq)(((kae)->haa))), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(85, u'\u0029', u'\u0065', u'\u006C', u'\u0073', u'\u0065', u'\u007B', u'\u006C', u'\u0065', u'\u0074', u'\u0020', u'\u0061', u'\u003D', u'\u006E', u'\u0065', u'\u0077', u'\u0020', u'\u0041', u'\u0072', u'\u0072', u'\u0061', u'\u0079', u'\u0028', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u0029', u'\u002C', u'\u006D', u'\u003D', u'\u006E', u'\u002E', u'\u0073', u'\u0068', u'\u0069', u'\u0066', u'\u0074', u'\u0028', u'\u0029', u'\u002C', u'\u0069', u'\u003B', u'\u0066', u'\u006F', u'\u0072', u'\u0028', u'\u0069', u'\u003D', u'\u0030', u'\u003B', u'\u0069', u'\u003C', u'\u006E', u'\u005B', u'\u0030', u'\u005D', u'\u003B', u'\u0069', u'\u002B', u'\u002B', u'\u0029', u'\u0061', u'\u005B', u'\u0069', u'\u005D', u'\u003D', u'\u0041', u'\u005F', u'\u0028', u'\u006D', u'\u0029', u'\u003B', u'\u0072', u'\u0065', u'\u0074', u'\u0075', u'\u0072', u'\u006E', u'\u0020', u'\u0061', u'\u007D', u'\u007D', u'\u0029', u'\u0028', u'\u005B'))));
(kav) = (true);
while(!(awg<List_<gd*>*>((kag), (new Array_<int64_t>(1, (0LL)))))){
if(kav){
(kav) = (false);
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(flw)((awi<List_<gd*>*, gd*>((kag), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((kag), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u005D', u'\u0029')));
}
}
}
// buildExprAs
static void ikk(egh* kba /*ast*/){
int64_t kbc;
gc* kbe; // t1
gc* kbf; // t2
bjb* kbx; // info
bjb* kbz; // info
if(!(((kba)->pj) != (0LL))){
throw 0xE9170000U;
}
kbc = (kba)->hbw;
switch(kbc){
case 0LL:
(kbe) = (((kba)->hbo)->pf);
(kbf) = ((kba)->hbr);
if((ele)((kbe))){
if(!((ele)((kbf)))){
throw 0xE9170000U;
}
(bla)((as_<ul>(classTable_, ((kbf)->nj), 22)));
(flw)(((kba)->hbo));
}
else{
if((((((kbe)->lw) == (1025LL)) || ((bdm)((kbe)))) || ((ewg)((kbe)))) || ((ewh)((kbe)))){
if(((((((kbf)->lw) == (1025LL)) || ((bdm)((kbf)))) || ((ewg)((kbf)))) || ((ewh)((kbf)))) || ((glc)((kbf)))){
(flw)(((kba)->hbo));
}
else{
if(!((gls)((kbf)))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((kba)->hbo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u0029', u'\u0021', u'\u003D', u'\u0030')));
}
}
else if((glc)((kbe))){
if((((kbf)->lw) == (1025LL)) || ((bdm)((kbf)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u007E', u'\u007E', u'\u0028')));
(flw)(((kba)->hbo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
if(!((glc)((kbf)))){
throw 0xE9170000U;
}
(flw)(((kba)->hbo));
}
}
else{
if(!((gls)((kbe)))){
throw 0xE9170000U;
}
if((((kbf)->lw) == (1025LL)) || ((bdm)((kbf)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((kba)->hbo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(5, u'\u0029', u'\u003F', u'\u0031', u'\u003A', u'\u0030')));
}
else{
if(!((gls)((kbf)))){
throw 0xE9170000U;
}
(flw)(((kba)->hbo));
}
}
}
break;
case 1LL:
(bla)((as_<ul>(classTable_, (((kba)->hbr)->nj), 22)));
(kbx) = ((bja)((((kba)->hbr)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((kba)->hbo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0029', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0063', u'\u0065', u'\u006F', u'\u0066', u'\u0020'))->Cat(v<Array_<char16_t>*>(((kbx)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
break;
case 2LL:
(bla)((as_<ul>(classTable_, (((kba)->hbr)->nj), 22)));
(kbz) = ((bja)((((kba)->hbr)->nj)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0021', u'\u0028', u'\u0028')));
(flw)(((kba)->hbo));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(12, u'\u0029', u'\u0069', u'\u006E', u'\u0073', u'\u0074', u'\u0061', u'\u006E', u'\u0063', u'\u0065', u'\u006F', u'\u0066', u'\u0020'))->Cat(v<Array_<char16_t>*>(((kbz)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u0029'))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
// buildExprToBin
static void ikm(egk* kcb /*ast*/){
if(!(((kcb)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(7, u'\u0074', u'\u006F', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u0028')));
(flw)(((kcb)->hfv));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
// buildExprFromBin
static void iko(egn* kcc /*ast*/){
if(!(((kcc)->pj) != (0LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(10, u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0042', u'\u0069', u'\u006E', u'\u005F', u'\u0028', u'\u0028')));
(flw)(((kcc)->hhg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(3, u'\u0029', u'\u002C', u'\u0028')));
(flw)(((kcc)->hhm));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0029')));
}
// buildExprCall
static void ikq(bvb* kcd /*ast*/){
cau* kce; // funcType
Array_<char16_t>* kcf; // meTypeId
List_<bvc*>* kci; // items
int64_t kcj; // refNum
List_<bvc*>* kcl; // items
Array_<char16_t>* kcq; // resultVar
Array_<Array_<char16_t>*>* kcr; // refVar
int64_t kcx; // idx
int64_t kcy; // refCnt
bool kcz; // first
List_<bvc*>* kda; // items
bvc* kdc; // item
int64_t kdp; // idx
int64_t kdq; // refCnt
List_<bvc*>* kdr; // items
bvc* kdt; // item
gc* kec; // type
if(!(((kcd)->pj) != (0LL))){
throw 0xE9170000U;
}
(kce) = (as_<cau>(classTable_, (((kcd)->bvh)->pf), 80));
(kcf) = (nullptr);
if((!eqAddr_((kce), (nullptr))) && ((aye<int64_t>(((kce)->eqb), (new Array_<int64_t>(1, (0LL))), (1LL))) == (1LL))){
(kci) = ((kcd)->bve);
awe<List_<bvc*>*>((kci), (new Array_<int64_t>(1, (0LL))));
(kcf) = ((jwl)((((awi<List_<bvc*>*, bvc*>((kci), (new Array_<int64_t>(1, (0LL)))))->bwq)->pf)));
}
(kcj) = (0LL);
(kcl) = ((kcd)->bve);
awe<List_<bvc*>*>((kcl), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvc*>*>((kcl), (new Array_<int64_t>(1, (0LL)))))){
if((awi<List_<bvc*>*, bvc*>((kcl), (new Array_<int64_t>(1, (0LL)))))->bwm){
(kcj) = ((kcj) + (1LL));
}
ays<List_<bvc*>*>((kcl), (new Array_<int64_t>(1, (0LL))));
}
(kcq) = (nullptr);
(kcr) = (nullptr);
if((kcj) > (0LL)){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
if(!eqAddr_(((kcd)->pf), (nullptr))){
(kcq) = ((fpg)(((kcd)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>((kcq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(1, u'\u003D'))));
}
(kcr) = (newArray_<Array_<char16_t>*, Array_<Array_<char16_t>*>*>(1, (kcj)));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((kcd)->bvh));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u0028')));
(kcx) = (0LL);
(kcy) = (0LL);
(kcz) = (true);
(kda) = ((kcd)->bve);
awe<List_<bvc*>*>((kda), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvc*>*>((kda), (new Array_<int64_t>(1, (0LL)))))){
(kdc) = (awi<List_<bvc*>*, bvc*>((kda), (new Array_<int64_t>(1, (0LL)))));
if(kcz){
(kcz) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
if((!eqAddr_((kcf), (nullptr))) && ((kcx) == (1LL))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (kcf));
}
else if((kdc)->bwm){
((kcr)->At(kcy)) = ((fpg)((((kdc)->bwq)->pf)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((kcr)->At(kcy)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(5, u'\u003D', u'\u007B', u'\u0024', u'\u003A', u'\u0028'))));
(flw)(((kdc)->bwq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(3, u'\u0029', u'\u007D', u'\u002C'))->Cat(v<Array_<char16_t>*>(((kcr)->At(kcy)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
(kcy) = ((kcy) + (1LL));
}
else{
(flw)(((kdc)->bwq));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
(kcx) = ((kcx) + (1LL));
ays<List_<bvc*>*>((kda), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
if((kcj) > (0LL)){
(kdp) = (0LL);
(kdq) = (0LL);
(kdr) = ((kcd)->bve);
awe<List_<bvc*>*>((kdr), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<bvc*>*>((kdr), (new Array_<int64_t>(1, (0LL)))))){
(kdt) = (awi<List_<bvc*>*, bvc*>((kdr), (new Array_<int64_t>(1, (0LL)))));
if((!eqAddr_((kcf), (nullptr))) && ((kdp) == (1LL))){
}
else if((kdt)->bwm){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
(flw)(((kdt)->bwq));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u003D'))->Cat(v<Array_<char16_t>*>(((kcr)->At(kdq)), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002E', u'\u0024'))));
(kdq) = ((kdq) + (1LL));
}
(kdp) = ((kdp) + (1LL));
ays<List_<bvc*>*>((kdr), (new Array_<int64_t>(1, (0LL))));
}
if(!eqAddr_(((kcd)->pf), (nullptr))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(1, u'\u002C'))->Cat(v<Array_<char16_t>*>((kcq), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
(kec) = ((kcd)->pf);
if(!eqAddr_((kec), (nullptr))){
if((ele)((kec))){
(bla)((as_<ul>(classTable_, ((kec)->nj), 22)));
}
}
}
// buildExprArray
static void iks(egs* keh /*ast*/){
if(!(((keh)->pj) != (0LL))){
throw 0xE9170000U;
}
if((ewg)(((keh)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((keh)->hky));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(15, u'\u0029', u'\u002E', u'\u0053', u'\u002E', u'\u0063', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0041', u'\u0074', u'\u0028')));
(flw)(((keh)->hld));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((keh)->hky));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u005B')));
(flw)(((keh)->hld));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u005D')));
}
}
// buildExprDot
static void iku(egv* kel /*ast*/){
um* keo; // classItem
bjb* kep; // info
if(!(((kel)->pj) != (0LL))){
throw 0xE9170000U;
}
if((ele)((((kel)->hjg)->pf))){
(keo) = ((kel)->hnj);
if(!(!eqAddr_((keo), (nullptr)))){
throw 0xE9170000U;
}
(bla)((as_<ul>(classTable_, ((((kel)->hjg)->pf)->nj), 22)));
(kep) = (nullptr);
if((((keo)->azl)->lw) == (2LL)){
(kep) = ((bja)(((as_<bgn>(classTable_, ((keo)->azl), 38))->bgp)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
(flw)(((kel)->hjg));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(2, u'\u0029', u'\u002E'))->Cat(v<Array_<char16_t>*>(((kep)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
else{
if(!((((keo)->azl)->lw) == (256LL))){
throw 0xE9170000U;
}
(kep) = ((bja)(((keo)->azl)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((kep)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(0))));
}
}
else{
if(!((((kel)->nj)->lw) == (2062LL))){
throw 0xE9170000U;
}
(ilg)((as_<gd>(classTable_, ((kel)->nj), 14)));
}
}
// buildExprValue
static void ikw(bvu* keu /*ast*/){
if(!((((keu)->pf)->lw) == (1027LL))){
throw 0xE9170000U;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C')));
}
// buildExprValuePrim
static void iky(bvt* kev /*ast*/){
gc* kew; // type
int64_t kfd;
(kew) = ((kev)->pf);
if(((bdm)((kew))) || ((ewh)((kew)))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<int64_t>((static_cast<int64_t>((kev)->bvv)), (new Array_<int64_t>(1, (0LL))))));
}
else if((ewg)((kew))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint16_t>((static_cast<uint16_t>((kev)->bvv)), (new Array_<int64_t>(1, (0LL))))));
}
else if((gls)((kew))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), ((((kev)->bvv) == (0x0000000000000000ULL)) ? (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065')) : (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))));
}
else if(((kew)->lw) == (1025LL)){
kfd = (as_<caq>(classTable_, (kew), 78))->car;
switch(kfd){
case 1LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint8_t>((static_cast<uint8_t>((kev)->bvv)), (new Array_<int64_t>(1, (0LL))))));
break;
case 2LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint16_t>((static_cast<uint16_t>((kev)->bvv)), (new Array_<int64_t>(1, (0LL))))));
break;
case 4LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint32_t>((static_cast<uint32_t>((kev)->bvv)), (new Array_<int64_t>(1, (0LL))))));
break;
case 8LL:
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (v<uint64_t>(((kev)->bvv), (new Array_<int64_t>(1, (0LL))))));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
}
else{
if(!(false)){
throw 0xE9170000U;
}
}
}
// buildExprValueStr
static void ila(ehc* kfk /*ast*/){
Array_<char16_t>* kfl; // value
Array_<char16_t>* kfm; // s
int64_t kfq;
int64_t kfr;
(kfl) = ((kfk)->gqn);
(kfm) = (new Array_<char16_t>(4, u'\u007B', u'\u0053', u'\u003A', u'\u0022'));
for(kfq = (0LL), kfr = (((kfl)->Len()) - (1LL)); kfq <= kfr; kfq += (1LL)){
(kfm) = ((kfm)->Cat((dfe)(((kfl)->At(kfq)))));
}
(kfm) = ((kfm)->Cat(new Array_<char16_t>(2, u'\u0022', u'\u007D')));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (kfm));
}
// buildExprValueFloat
static void ilc(ehi* kfu /*ast*/){
Array_<char16_t>* kfv; // value
(kfv) = (v<double>(((kfu)->glp), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((kfv), (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066'))) == 0){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(8, u'\u0049', u'\u006E', u'\u0066', u'\u0069', u'\u006E', u'\u0069', u'\u0074', u'\u0079')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (kfv));
}
}
// buildExprValueArray
static void ile(ehl* kfz /*ast*/){
bool kgc; // first
List_<gd*>* kgd; // items
bool kgi; // first
List_<gd*>* kgj; // items
if((fob)(((kfz)->pf))){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(23, u'\u007B', u'\u0053', u'\u003A', u'\u0053', u'\u0074', u'\u0072', u'\u0069', u'\u006E', u'\u0067', u'\u002E', u'\u0066', u'\u0072', u'\u006F', u'\u006D', u'\u0043', u'\u0068', u'\u0061', u'\u0072', u'\u0043', u'\u006F', u'\u0064', u'\u0065', u'\u0028')));
(kgc) = (true);
(kgd) = ((kfz)->hjp);
awe<List_<gd*>*>((kgd), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((kgd), (new Array_<int64_t>(1, (0LL)))))){
if(kgc){
(kgc) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(flw)((awi<List_<gd*>*, gd*>((kgd), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((kgd), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u0029', u'\u007D')));
return;
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u005B')));
(kgi) = (true);
(kgj) = ((kfz)->hjp);
awe<List_<gd*>*>((kgj), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<gd*>*>((kgj), (new Array_<int64_t>(1, (0LL)))))){
if(kgi){
(kgi) = (false);
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0028')));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(2, u'\u002C', u'\u0028')));
}
(flw)((awi<List_<gd*>*, gd*>((kgj), (new Array_<int64_t>(1, (0LL))))));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u0029')));
ays<List_<gd*>*>((kgj), (new Array_<int64_t>(1, (0LL))));
}
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (new Array_<char16_t>(1, u'\u005D')));
}
// buildExprRef
static void ilg(gd* kgo /*ast*/){
fx* kgp; // ast2
bjb* kgq; // info
gb* kgu; // arg
int64_t kgw;
(kgp) = ((kgo)->nj);
(kgq) = ((bja)((kgp)));
if(((kgp)->lw) == (256LL)){
uk<Queue_<fw*>*, fw*>((bi), (new Array_<int64_t>(1, (0LL))), (as_<fw>(classTable_, (kgp), 8)));
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), ((kgq)->bjr));
}
else{
if(!(((kgp)->lw) == (7LL))){
throw 0xE9170000U;
}
(kgu) = (as_<gb>(classTable_, (kgp), 10));
kgw = (kgu)->qk;
switch(kgw){
case 1LL:
if(!((kgq)->bjd)){
((kgq)->bjd) = (true);
uh<List_<gb*>*, gb*>((bn), (new Array_<int64_t>(1, (0LL))), (kgu));
}
break;
case 2LL:
break;
case 3LL:
if(!((kgq)->bjd)){
((kgq)->bjd) = (true);
uh<List_<gb*>*, gb*>((bo), (new Array_<int64_t>(1, (0LL))), (kgu));
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if((kgu)->ql){
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), (((new Array_<char16_t>(0))->Cat(v<Array_<char16_t>*>(((kgq)->bjr), (new Array_<int64_t>(1, (0LL))))))->Cat(new Array_<char16_t>(2, u'\u002E', u'\u0024'))));
}
else{
uh<List_<Array_<char16_t>*>*, Array_<char16_t>*>((bl), (new Array_<int64_t>(1, (0LL))), ((kgq)->bjr));
}
}
}
// _findBin
template<typename T_, typename C_> static int64_t imd(T_ khi /*me_*/, Array_<int64_t>* khj /*type*/, C_ khk /*item*/){
int64_t a_ = 0, b_ = khi->L - 1;
while (a_ <= b_) {
int64_t c_ = (a_ + b_) / 2;
int64_t m_ = cmp_(khk, khi->B[c_]);
if(m_ < 0) b_ = c_ - 1;
else if(m_ > 0) a_ = c_ + 1;
else return c_;
}
return -1;
}
// _dtor
static void khl(inl* khm){
((khm)->inm) = (nullptr);
((khm)->ne) = (nullptr);
((khm)->nf) = (nullptr);
((khm)->ng) = (nullptr);
((khm)->nh) = (nullptr);
((khm)->ni) = (nullptr);
((khm)->nj) = (nullptr);
((khm)->nk) = (nullptr);
}
// _copy
static inl* khn(inl* kho){
inl* khp;
(khp) = (new inl());
((khp)->inm) = (copy_((kho)->inm));
((khp)->ne) = (copy_((kho)->ne));
((khp)->nf) = (copy_((kho)->nf));
((khp)->ng) = (copy_((kho)->ng));
((khp)->nh) = (copy_((kho)->nh));
((khp)->ni) = (copy_((kho)->ni));
((khp)->nj) = (copy_((kho)->nj));
((khp)->nk) = (copy_((kho)->nk));
((khp)->no) = ((kho)->no);
((khp)->lw) = ((kho)->lw);
return as_<inl>(classTable_, (khp), 140);
}
// _toBin
static Array_<uint8_t>* khq(inl* khr){
Array_<uint8_t>* khs;
(khs) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(khs) = ((khs)->Cat(toBin_((khr)->inm)));
(khs) = ((khs)->Cat(toBin_((khr)->ne)));
(khs) = ((khs)->Cat(toBin_((khr)->nf)));
(khs) = ((khs)->Cat(toBin_((khr)->ng)));
(khs) = ((khs)->Cat(toBin_((khr)->nh)));
(khs) = ((khs)->Cat(toBin_((khr)->ni)));
(khs) = ((khs)->Cat(toBin_((khr)->nj)));
(khs) = ((khs)->Cat(toBin_((khr)->nk)));
(khs) = ((khs)->Cat(toBin_((khr)->no)));
(khs) = ((khs)->Cat(toBin_((khr)->lw)));
return khs;
}
// _fromBin
static inl* kid(inl* kie, Array_<uint8_t>* kif, int64_t* kig){
inl* kih;
(kih) = (new inl());
((kih)->inm) = (fromBin_<fw*>((kif), (*kig)));
((kih)->ne) = (fromBin_<ga*>((kif), (*kig)));
((kih)->nf) = (fromBin_<Array_<char16_t>*>((kif), (*kig)));
((kih)->ng) = (fromBin_<fx*>((kif), (*kig)));
((kih)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kif), (*kig)));
((kih)->ni) = (fromBin_<Array_<char16_t>*>((kif), (*kig)));
((kih)->nj) = (fromBin_<fx*>((kif), (*kig)));
((kih)->nk) = (fromBin_<fy*>((kif), (*kig)));
((kih)->no) = (fromBin_<bool>((kif), (*kig)));
((kih)->lw) = (fromBin_<int64_t>((kif), (*kig)));
return kih;
}
// _dtor
static void kii(inp* kij){
((kij)->inq) = (nullptr);
((kij)->ne) = (nullptr);
((kij)->nf) = (nullptr);
((kij)->ng) = (nullptr);
((kij)->nh) = (nullptr);
((kij)->ni) = (nullptr);
((kij)->nj) = (nullptr);
((kij)->nk) = (nullptr);
}
// _copy
static inp* kik(inp* kil){
inp* kim;
(kim) = (new inp());
((kim)->inq) = (copy_((kil)->inq));
((kim)->ne) = (copy_((kil)->ne));
((kim)->nf) = (copy_((kil)->nf));
((kim)->ng) = (copy_((kil)->ng));
((kim)->nh) = (copy_((kil)->nh));
((kim)->ni) = (copy_((kil)->ni));
((kim)->nj) = (copy_((kil)->nj));
((kim)->nk) = (copy_((kil)->nk));
((kim)->no) = ((kil)->no);
((kim)->lw) = ((kil)->lw);
return as_<inp>(classTable_, (kim), 142);
}
// _toBin
static Array_<uint8_t>* kin(inp* kio){
Array_<uint8_t>* kip;
(kip) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kip) = ((kip)->Cat(toBin_((kio)->inq)));
(kip) = ((kip)->Cat(toBin_((kio)->ne)));
(kip) = ((kip)->Cat(toBin_((kio)->nf)));
(kip) = ((kip)->Cat(toBin_((kio)->ng)));
(kip) = ((kip)->Cat(toBin_((kio)->nh)));
(kip) = ((kip)->Cat(toBin_((kio)->ni)));
(kip) = ((kip)->Cat(toBin_((kio)->nj)));
(kip) = ((kip)->Cat(toBin_((kio)->nk)));
(kip) = ((kip)->Cat(toBin_((kio)->no)));
(kip) = ((kip)->Cat(toBin_((kio)->lw)));
return kip;
}
// _fromBin
static inp* kja(inp* kjb, Array_<uint8_t>* kjc, int64_t* kjd){
inp* kje;
(kje) = (new inp());
((kje)->inq) = (fromBin_<bqt*>((kjc), (*kjd)));
((kje)->ne) = (fromBin_<ga*>((kjc), (*kjd)));
((kje)->nf) = (fromBin_<Array_<char16_t>*>((kjc), (*kjd)));
((kje)->ng) = (fromBin_<fx*>((kjc), (*kjd)));
((kje)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kjc), (*kjd)));
((kje)->ni) = (fromBin_<Array_<char16_t>*>((kjc), (*kjd)));
((kje)->nj) = (fromBin_<fx*>((kjc), (*kjd)));
((kje)->nk) = (fromBin_<fy*>((kjc), (*kjd)));
((kje)->no) = (fromBin_<bool>((kjc), (*kjd)));
((kje)->lw) = (fromBin_<int64_t>((kjc), (*kjd)));
return kje;
}
// _dtor
static void kjf(ins* kjg){
((kjg)->inu) = (nullptr);
((kjg)->ne) = (nullptr);
((kjg)->nf) = (nullptr);
((kjg)->ng) = (nullptr);
((kjg)->nh) = (nullptr);
((kjg)->ni) = (nullptr);
((kjg)->nj) = (nullptr);
((kjg)->nk) = (nullptr);
}
// _copy
static ins* kjh(ins* kji){
ins* kjj;
(kjj) = (new ins());
((kjj)->inu) = (copy_((kji)->inu));
((kjj)->ne) = (copy_((kji)->ne));
((kjj)->nf) = (copy_((kji)->nf));
((kjj)->ng) = (copy_((kji)->ng));
((kjj)->nh) = (copy_((kji)->nh));
((kjj)->ni) = (copy_((kji)->ni));
((kjj)->nj) = (copy_((kji)->nj));
((kjj)->nk) = (copy_((kji)->nk));
((kjj)->no) = ((kji)->no);
((kjj)->lw) = ((kji)->lw);
return as_<ins>(classTable_, (kjj), 144);
}
// _toBin
static Array_<uint8_t>* kjk(ins* kjl){
Array_<uint8_t>* kjm;
(kjm) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kjm) = ((kjm)->Cat(toBin_((kjl)->inu)));
(kjm) = ((kjm)->Cat(toBin_((kjl)->ne)));
(kjm) = ((kjm)->Cat(toBin_((kjl)->nf)));
(kjm) = ((kjm)->Cat(toBin_((kjl)->ng)));
(kjm) = ((kjm)->Cat(toBin_((kjl)->nh)));
(kjm) = ((kjm)->Cat(toBin_((kjl)->ni)));
(kjm) = ((kjm)->Cat(toBin_((kjl)->nj)));
(kjm) = ((kjm)->Cat(toBin_((kjl)->nk)));
(kjm) = ((kjm)->Cat(toBin_((kjl)->no)));
(kjm) = ((kjm)->Cat(toBin_((kjl)->lw)));
return kjm;
}
// _fromBin
static ins* kjx(ins* kjy, Array_<uint8_t>* kjz, int64_t* kka){
ins* kkb;
(kkb) = (new ins());
((kkb)->inu) = (fromBin_<bqw*>((kjz), (*kka)));
((kkb)->ne) = (fromBin_<ga*>((kjz), (*kka)));
((kkb)->nf) = (fromBin_<Array_<char16_t>*>((kjz), (*kka)));
((kkb)->ng) = (fromBin_<fx*>((kjz), (*kka)));
((kkb)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kjz), (*kka)));
((kkb)->ni) = (fromBin_<Array_<char16_t>*>((kjz), (*kka)));
((kkb)->nj) = (fromBin_<fx*>((kjz), (*kka)));
((kkb)->nk) = (fromBin_<fy*>((kjz), (*kka)));
((kkb)->no) = (fromBin_<bool>((kjz), (*kka)));
((kkb)->lw) = (fromBin_<int64_t>((kjz), (*kka)));
return kkb;
}
// _dtor
static void kkc(inw* kkd){
((kkd)->inx) = (nullptr);
((kkd)->ne) = (nullptr);
((kkd)->nf) = (nullptr);
((kkd)->ng) = (nullptr);
((kkd)->nh) = (nullptr);
((kkd)->ni) = (nullptr);
((kkd)->nj) = (nullptr);
((kkd)->nk) = (nullptr);
}
// _copy
static inw* kke(inw* kkf){
inw* kkg;
(kkg) = (new inw());
((kkg)->inx) = (copy_((kkf)->inx));
((kkg)->ne) = (copy_((kkf)->ne));
((kkg)->nf) = (copy_((kkf)->nf));
((kkg)->ng) = (copy_((kkf)->ng));
((kkg)->nh) = (copy_((kkf)->nh));
((kkg)->ni) = (copy_((kkf)->ni));
((kkg)->nj) = (copy_((kkf)->nj));
((kkg)->nk) = (copy_((kkf)->nk));
((kkg)->no) = ((kkf)->no);
((kkg)->lw) = ((kkf)->lw);
return as_<inw>(classTable_, (kkg), 146);
}
// _toBin
static Array_<uint8_t>* kkh(inw* kki){
Array_<uint8_t>* kkj;
(kkj) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(kkj) = ((kkj)->Cat(toBin_((kki)->inx)));
(kkj) = ((kkj)->Cat(toBin_((kki)->ne)));
(kkj) = ((kkj)->Cat(toBin_((kki)->nf)));
(kkj) = ((kkj)->Cat(toBin_((kki)->ng)));
(kkj) = ((kkj)->Cat(toBin_((kki)->nh)));
(kkj) = ((kkj)->Cat(toBin_((kki)->ni)));
(kkj) = ((kkj)->Cat(toBin_((kki)->nj)));
(kkj) = ((kkj)->Cat(toBin_((kki)->nk)));
(kkj) = ((kkj)->Cat(toBin_((kki)->no)));
(kkj) = ((kkj)->Cat(toBin_((kki)->lw)));
return kkj;
}
// _fromBin
static inw* kku(inw* kkv, Array_<uint8_t>* kkw, int64_t* kkx){
inw* kky;
(kky) = (new inw());
((kky)->inx) = (fromBin_<ul*>((kkw), (*kkx)));
((kky)->ne) = (fromBin_<ga*>((kkw), (*kkx)));
((kky)->nf) = (fromBin_<Array_<char16_t>*>((kkw), (*kkx)));
((kky)->ng) = (fromBin_<fx*>((kkw), (*kkx)));
((kky)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((kkw), (*kkx)));
((kky)->ni) = (fromBin_<Array_<char16_t>*>((kkw), (*kkx)));
((kky)->nj) = (fromBin_<fx*>((kkw), (*kkx)));
((kky)->nk) = (fromBin_<fy*>((kkw), (*kkx)));
((kky)->no) = (fromBin_<bool>((kkw), (*kkx)));
((kky)->lw) = (fromBin_<int64_t>((kkw), (*kkx)));
return kky;
}
// _dtor
static void kkz(inz* kla){
((kla)->ioa) = (nullptr);
((kla)->ne) = (nullptr);
((kla)->nf) = (nullptr);
((kla)->ng) = (nullptr);
((kla)->nh) = (nullptr);
((kla)->ni) = (nullptr);
((kla)->nj) = (nullptr);
((kla)->nk) = (nullptr);
}
// _copy
static inz* klb(inz* klc){
inz* kld;
(kld) = (new inz());
((kld)->ioa) = (copy_((klc)->ioa));
((kld)->ne) = (copy_((klc)->ne));
((kld)->nf) = (copy_((klc)->nf));
((kld)->ng) = (copy_((klc)->ng));
((kld)->nh) = (copy_((klc)->nh));
((kld)->ni) = (copy_((klc)->ni));
((kld)->nj) = (copy_((klc)->nj));
((kld)->nk) = (copy_((klc)->nk));
((kld)->no) = ((klc)->no);
((kld)->lw) = ((klc)->lw);
return as_<inz>(classTable_, (kld), 148);
}
// _toBin
static Array_<uint8_t>* kle(inz* klf){
Array_<uint8_t>* klg;
(klg) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(klg) = ((klg)->Cat(toBin_((klf)->ioa)));
(klg) = ((klg)->Cat(toBin_((klf)->ne)));
(klg) = ((klg)->Cat(toBin_((klf)->nf)));
(klg) = ((klg)->Cat(toBin_((klf)->ng)));
(klg) = ((klg)->Cat(toBin_((klf)->nh)));
(klg) = ((klg)->Cat(toBin_((klf)->ni)));
(klg) = ((klg)->Cat(toBin_((klf)->nj)));
(klg) = ((klg)->Cat(toBin_((klf)->nk)));
(klg) = ((klg)->Cat(toBin_((klf)->no)));
(klg) = ((klg)->Cat(toBin_((klf)->lw)));
return klg;
}
// _fromBin
static inz* klr(inz* kls, Array_<uint8_t>* klt, int64_t* klu){
inz* klv;
(klv) = (new inz());
((klv)->ioa) = (fromBin_<brc*>((klt), (*klu)));
((klv)->ne) = (fromBin_<ga*>((klt), (*klu)));
((klv)->nf) = (fromBin_<Array_<char16_t>*>((klt), (*klu)));
((klv)->ng) = (fromBin_<fx*>((klt), (*klu)));
((klv)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((klt), (*klu)));
((klv)->ni) = (fromBin_<Array_<char16_t>*>((klt), (*klu)));
((klv)->nj) = (fromBin_<fx*>((klt), (*klu)));
((klv)->nk) = (fromBin_<fy*>((klt), (*klu)));
((klv)->no) = (fromBin_<bool>((klt), (*klu)));
((klv)->lw) = (fromBin_<int64_t>((klt), (*klu)));
return klv;
}
// pushDummyScope
static void ioc(fx* klw /*ast*/){
fx* klx; // dummy
(klx) = (new fx());
(bpp)((klx), (0LL), (nullptr), (nullptr), (true));
dv<Dict_<Array_<char16_t>*, fx*>*, Array_<char16_t>*, fx*>(((fsp<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL)))))->nh), (new Array_<int64_t>(1, (0LL))), ((new Array_<char16_t>(1, u'\u0024'))->Cat(v<int64_t>((avh), (new Array_<int64_t>(1, (0LL)))))), (klx));
(avh) = ((avh) + (1LL));
((klx)->nh) = (new Dict_<Array_<char16_t>*, fx*>());
bpr<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))), (klx));
((klw)->ng) = (klx);
}
// obtainBlockName
static void iod(fx* klz /*ast*/){
char16_t kma; // c
(kma) = ((bps)());
if((kma) != (u'\u0028')){
(ave) = (kma);
((klz)->nf) = ((bqk)((true), (false)));
(dlf)((klz), (true));
(dlb)((u'\u0028'), (true));
}
else{
((klz)->nf) = (new Array_<char16_t>(1, u'\u0024'));
}
}
// parseDummyBlock
static bua* ioh(ge** kme /*outStat*/, int64_t* kmf /*outTypeId*/, int64_t kmg /*typeId*/, fx* kmh /*block_*/){
bua* kmi; // ast
ge* kmm; // stat
bool kms; // endFlag
int64_t kmu;
int64_t kmx;
int64_t knb;
int64_t knf;
int64_t knk;
int64_t kno;
int64_t knt;
int64_t knx;
int64_t kob;
(kmi) = (new bua());
(bpp)((kmi), (66052LL), ((dhs)()), (nullptr), (false));
((kmi)->buj) = (nullptr);
((kmi)->bum) = (new List_<ge*>());
(ioc)((kmi));
((kmi)->nf) = (new Array_<char16_t>(1, u'\u0024'));
while(true){
(kmm) = ((dmi)((kmh)));
if(eqAddr_((kmm), (nullptr))){
if(avg){
(*kme) = (nullptr);
(*kmf) = (513LL);
break;
}
else{
continue;
}
}
(kms) = (false);
kmu = kmg;
switch(kmu){
case 66049LL:
kmx = (kmm)->lw;
switch(kmx){
case 520LL:
case 521LL:
case 513LL:
(kms) = (true);
break;
}
break;
case 520LL:
knb = (kmm)->lw;
switch(knb){
case 520LL:
case 521LL:
case 513LL:
(kms) = (true);
break;
}
break;
case 521LL:
knf = (kmm)->lw;
switch(knf){
case 520LL:
case 521LL:
(ad)((65563LL), ((dhs)()), (nullptr));
continue;
break;
case 513LL:
(kms) = (true);
break;
}
break;
case 522LL:
knk = (kmm)->lw;
switch(knk){
case 522LL:
case 523LL:
case 513LL:
(kms) = (true);
break;
}
break;
case 523LL:
kno = (kmm)->lw;
switch(kno){
case 522LL:
case 523LL:
(ad)((65564LL), ((dhs)()), (nullptr));
continue;
break;
case 513LL:
(kms) = (true);
break;
}
break;
case 66051LL:
knt = (kmm)->lw;
switch(knt){
case 524LL:
case 525LL:
(kms) = (true);
break;
}
break;
case 524LL:
knx = (kmm)->lw;
switch(knx){
case 524LL:
case 525LL:
case 520LL:
(kms) = (true);
break;
}
break;
case 525LL:
kob = (kmm)->lw;
switch(kob){
case 524LL:
case 525LL:
(ad)((65565LL), ((dhs)()), (nullptr));
continue;
break;
case 513LL:
(kms) = (true);
break;
}
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
if(kms){
(*kme) = (kmm);
(*kmf) = ((kmm)->lw);
break;
}
uh<List_<ge*>*, ge*>(((kmi)->bum), (new Array_<int64_t>(1, (0LL))), (kmm));
}
brl<Stack_<fx*>*, fx*>((bg), (new Array_<int64_t>(1, (0LL))));
return kmi;
}
// makeBlockVar
static gb* ipa(ga* koh /*pos*/){
gb* koi; // arg
(koi) = (new gb());
(bpp)((koi), (7LL), (koh), (nullptr), (false));
((koi)->qk) = (3LL);
((koi)->ql) = (false);
((koi)->qf) = (nullptr);
((koi)->qg) = (nullptr);
return koi;
}
// makePrimValue
static bvt* irz(ga* koj /*pos*/, int64_t kok /*kind*/, uint64_t kol /*value*/){
bvt* kom; // expr
buh* koo; // type
(kom) = (new bvt());
(drl)((kom), (67585LL), (koj));
(koo) = (new buh());
(bpp)((koo), (1026LL), (koj), (nullptr), (false));
((koo)->bui) = (kok);
((kom)->pf) = (koo);
((kom)->bvv) = (kol);
return kom;
}
// parseExprOr
static gd* ivr(){
gd* kop; // ast
int64_t kou; // row
int64_t kov; // col
char16_t kow; // c
byf* koz; // ast2
(kop) = ((koq)());
while(true){
(kou) = (avc);
(kov) = (avd);
(kow) = ((bps)());
if((kow) == (u'\u007C')){
(koz) = (new byf());
(drl)((koz), (2050LL), ((bpq)((bf), (kou), (kov))));
((koz)->byg) = (8LL);
((koz)->byj) = (kop);
((koz)->byk) = ((koq)());
(kop) = (koz);
}
else{
(ave) = (kow);
break;
}
}
return kop;
}
// addSpecialFunc
static fw* jah(ul* kpb /*class_*/, Array_<char16_t>* kpc /*name*/){
fw* kpd; // ast
gb* kpf; // me_
dli* kph; // type
um* kpj; // item
ul* kpk; // ptr
List_<um*>* kpm; // items
um* kpq; // item2
(kpd) = (new fw());
(btv)((kpd), (256LL), ((kpb)->ne));
((kpd)->nf) = (kpc);
((kpd)->sm) = (0LL);
((kpd)->sf) = (new List_<Array_<char16_t>*>());
((kpd)->sg) = (new List_<gb*>());
((kpd)->sh) = (nullptr);
((kpd)->si) = (new List_<ge*>());
(kpf) = (new gb());
(btv)((kpf), (7LL), ((kpb)->ne));
((kpf)->qk) = (2LL);
((kpf)->ql) = (false);
((kpf)->qg) = (nullptr);
(kph) = (new dli());
(btv)((kph), (66565LL), ((kpb)->ne));
((kph)->nj) = (kpb);
((kpf)->qf) = (kph);
uh<List_<gb*>*, gb*>(((kpd)->sg), (new Array_<int64_t>(1, (0LL))), (kpf));
(kpj) = (new um());
((kpj)->azr) = (true);
((kpj)->azl) = (kpd);
((kpj)->azm) = (nullptr);
(kpk) = (as_<ul>(classTable_, ((kpb)->nj), 22));
while(!eqAddr_(((kpk)->nj), (nullptr))){
(kpk) = (as_<ul>(classTable_, ((kpk)->nj), 22));
}
(kpm) = ((kpk)->bag);
awe<List_<um*>*>((kpm), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<um*>*>((kpm), (new Array_<int64_t>(1, (0LL)))))){
(kpq) = (awi<List_<um*>*, um*>((kpm), (new Array_<int64_t>(1, (0LL)))));
if(cmp_((((kpq)->azl)->nf), (kpc)) == 0){
((kpj)->azm) = (kpq);
break;
}
ays<List_<um*>*>((kpm), (new Array_<int64_t>(1, (0LL))));
}
if(!(!eqAddr_(((kpj)->azm), (nullptr)))){
throw 0xE9170000U;
}
((kpj)->azq) = (((kpj)->azm)->azq);
uh<List_<um*>*, um*>(((kpb)->bag), (new Array_<int64_t>(1, (0LL))), (kpj));
return kpd;
}
// makeMeDot
static egv* jbs(ul* kpt /*class_*/, gb* kpu /*arg*/, Array_<char16_t>* kpv /*name*/){
egv* kpw; // ast
gd* kpy; // me_
dli* kqa; // type
(kpw) = (new egv());
(bvd)((kpw), (2059LL), ((kpt)->ne));
((kpw)->hmw) = (kpv);
((kpw)->hnj) = (nullptr);
(kpy) = (new gd());
(bvd)((kpy), (2062LL), ((kpt)->ne));
((kpy)->ni) = (new Array_<char16_t>(2, u'\u006D', u'\u0065'));
((kpy)->nj) = (kpu);
(kqa) = (new dli());
(btv)((kqa), (66565LL), ((kpt)->ne));
((kqa)->nj) = (kpt);
((kpy)->pf) = (kqa);
((kpw)->hjg) = (kpy);
return kpw;
}
// makeTypeId
static Array_<char16_t>* jwl(gc* kqb /*type*/){
Array_<char16_t>* kqc; // result
bool kqd; // first
List_<int64_t>* kqe; // items
(kqc) = (new Array_<char16_t>(1, u'\u005B'));
(kqd) = (true);
(kqe) = ((kqf)((kqb)));
awe<List_<int64_t>*>((kqe), (new Array_<int64_t>(1, (0LL))));
while(!(awg<List_<int64_t>*>((kqe), (new Array_<int64_t>(1, (0LL)))))){
if(kqd){
(kqd) = (false);
}
else{
(kqc) = ((kqc)->Cat(new Array_<char16_t>(1, u'\u002C')));
}
(kqc) = ((kqc)->Cat(v<int64_t>((awi<List_<int64_t>*, int64_t>((kqe), (new Array_<int64_t>(1, (0LL))))), (new Array_<int64_t>(1, (0LL))))));
ays<List_<int64_t>*>((kqe), (new Array_<int64_t>(1, (0LL))));
}
(kqc) = ((kqc)->Cat(new Array_<char16_t>(1, u'\u005D')));
return kqc;
}
// parseExprAnd
static gd* koq(){
gd* kqn; // ast
int64_t kqs; // row
int64_t kqt; // col
char16_t kqu; // c
byf* kqx; // ast2
(kqn) = ((kqo)());
while(true){
(kqs) = (avc);
(kqt) = (avd);
(kqu) = ((bps)());
if((kqu) == (u'\u0026')){
(kqx) = (new byf());
(drl)((kqx), (2050LL), ((bpq)((bf), (kqs), (kqt))));
((kqx)->byg) = (9LL);
((kqx)->byj) = (kqn);
((kqx)->byk) = ((kqo)());
(kqn) = (kqx);
}
else{
(ave) = (kqu);
break;
}
}
return kqn;
}
// getTypeId
static List_<int64_t>* kqf(gc* kqz /*type*/){
List_<int64_t>* kra; // result
(kra) = (new List_<int64_t>());
(krb)((kqz), (kra));
return kra;
}
// parseExprCmp
static gd* kqo(){
gd* krc; // ast
int64_t krh; // row
int64_t kri; // col
char16_t krj; // c
char16_t krl;
char16_t kro;
byf* krq; // ast2
char16_t krt;
byf* krv; // ast2
egh* krx; // ast2
byf* krz; // ast2
byf* ksb; // ast2
byf* ksd; // ast2
char16_t ksj;
byf* ksl; // ast2
egh* ksn; // ast2
byf* ksp; // ast2
(krc) = ((krd)());
while(true){
(krh) = (avc);
(kri) = (avd);
(krj) = ((bps)());
krl = krj;
switch(krl){
case u'\u003C':
(krj) = ((brf)());
kro = krj;
switch(kro){
case u'\u003D':
(krq) = (new byf());
(drl)((krq), (2050LL), ((bpq)((bf), (krh), (kri))));
((krq)->byg) = (12LL);
((krq)->byj) = (krc);
((krq)->byk) = ((krd)());
(krc) = (krq);
break;
case u'\u003E':
(krj) = ((brf)());
krt = krj;
switch(krt){
case u'\u0026':
(krv) = (new byf());
(drl)((krv), (2050LL), ((bpq)((bf), (krh), (kri))));
((krv)->byg) = (17LL);
((krv)->byj) = (krc);
((krv)->byk) = ((krd)());
(krc) = (krv);
break;
case u'\u0024':
(krx) = (new egh());
(drl)((krx), (2054LL), ((bpq)((bf), (krh), (kri))));
((krx)->hbw) = (2LL);
((krx)->hbo) = (krc);
((krx)->hbr) = ((dmb)());
(krc) = (krx);
break;
default:
(ave) = (krj);
(krz) = (new byf());
(drl)((krz), (2050LL), ((bpq)((bf), (krh), (kri))));
((krz)->byg) = (15LL);
((krz)->byj) = (krc);
((krz)->byk) = ((krd)());
(krc) = (krz);
break;
}
break;
default:
(ave) = (krj);
(ksb) = (new byf());
(drl)((ksb), (2050LL), ((bpq)((bf), (krh), (kri))));
((ksb)->byg) = (10LL);
((ksb)->byj) = (krc);
((ksb)->byk) = ((krd)());
(krc) = (ksb);
break;
}
break;
case u'\u003E':
(ksd) = (new byf());
(drl)((ksd), (2050LL), ((bpq)((bf), (krh), (kri))));
(krj) = ((brf)());
if((krj) == (u'\u003D')){
((ksd)->byg) = (13LL);
}
else{
(ave) = (krj);
((ksd)->byg) = (11LL);
}
((ksd)->byj) = (krc);
((ksd)->byk) = ((krd)());
(krc) = (ksd);
break;
case u'\u003D':
(krj) = ((brf)());
ksj = krj;
switch(ksj){
case u'\u0026':
(ksl) = (new byf());
(drl)((ksl), (2050LL), ((bpq)((bf), (krh), (kri))));
((ksl)->byg) = (16LL);
((ksl)->byj) = (krc);
((ksl)->byk) = ((krd)());
(krc) = (ksl);
break;
case u'\u0024':
(ksn) = (new egh());
(drl)((ksn), (2054LL), ((bpq)((bf), (krh), (kri))));
((ksn)->hbw) = (1LL);
((ksn)->hbo) = (krc);
((ksn)->hbr) = ((dmb)());
(krc) = (ksn);
break;
default:
(ave) = (krj);
(ksp) = (new byf());
(drl)((ksp), (2050LL), ((bpq)((bf), (krh), (kri))));
((ksp)->byg) = (14LL);
((ksp)->byj) = (krc);
((ksp)->byk) = ((krd)());
(krc) = (ksp);
break;
}
break;
default:
(ave) = (krj);
goto krf;
break;
}
}
krf:;
return krc;
}
// makeTypeIdRecursion
static void krb(gc* ksr /*type*/, List_<int64_t>* kss /*output*/){
int64_t kte;
int64_t ktt;
if((bdm)((ksr))){
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (0LL));
return;
}
if((glc)((ksr))){
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (1LL));
return;
}
if((ewg)((ksr))){
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (2LL));
return;
}
if((gls)((ksr))){
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (3LL));
return;
}
if(((ksr)->lw) == (1025LL)){
kte = (as_<caq>(classTable_, (ksr), 78))->car;
switch(kte){
case 1LL:
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (4LL));
break;
case 2LL:
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (5LL));
break;
case 4LL:
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (6LL));
break;
case 8LL:
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (7LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
return;
}
if(((ksr)->lw) == (66562LL)){
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (8LL));
return;
}
if((ewh)((ksr))){
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (9LL));
return;
}
if(((ksr)->lw) == (66561LL)){
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (129LL));
(krb)(((as_<cam>(classTable_, (ksr), 76))->cao), (kss));
return;
}
if(((ksr)->lw) == (66563LL)){
ktt = (as_<cbr>(classTable_, (ksr), 84))->cbu;
switch(ktt){
case 0LL:
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (130LL));
break;
case 1LL:
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (131LL));
break;
case 2LL:
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (132LL));
break;
default:
if(!(false)){
throw 0xE9170000U;
}
break;
}
(krb)(((as_<cbr>(classTable_, (ksr), 84))->cbw), (kss));
return;
}
if(((ksr)->lw) == (66564LL)){
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (133LL));
(krb)(((as_<ccc>(classTable_, (ksr), 86))->ccd), (kss));
(krb)(((as_<ccc>(classTable_, (ksr), 86))->cce), (kss));
return;
}
if(!((ele)((ksr)))){
throw 0xE9170000U;
}
uh<List_<int64_t>*, int64_t>((kss), (new Array_<int64_t>(1, (0LL))), (134LL));
}
// parseExprCat
static gd* krd(){
gd* kua; // ast
int64_t kuf; // row
int64_t kug; // col
char16_t kuh; // c
byf* kuk; // ast2
(kua) = ((kub)());
while(true){
(kuf) = (avc);
(kug) = (avd);
(kuh) = ((bps)());
if((kuh) == (u'\u007E')){
(kuk) = (new byf());
(drl)((kuk), (2050LL), ((bpq)((bf), (kuf), (kug))));
((kuk)->byg) = (18LL);
((kuk)->byj) = (kua);
((kuk)->byk) = ((kub)());
(kua) = (kuk);
}
else{
(ave) = (kuh);
break;
}
}
return kua;
}
// parseExprAdd
static gd* kub(){
gd* kum; // ast
int64_t kur; // row
int64_t kus; // col
char16_t kut; // c
char16_t kuv;
byf* kux; // ast2
byf* kuz; // ast2
(kum) = ((kun)());
while(true){
(kur) = (avc);
(kus) = (avd);
(kut) = ((bps)());
kuv = kut;
switch(kuv){
case u'\u002B':
(kux) = (new byf());
(drl)((kux), (2050LL), ((bpq)((bf), (kur), (kus))));
((kux)->byg) = (19LL);
((kux)->byj) = (kum);
((kux)->byk) = ((kun)());
(kum) = (kux);
break;
case u'\u002D':
(kuz) = (new byf());
(drl)((kuz), (2050LL), ((bpq)((bf), (kur), (kus))));
((kuz)->byg) = (20LL);
((kuz)->byj) = (kum);
((kuz)->byk) = ((kun)());
(kum) = (kuz);
break;
default:
(ave) = (kut);
goto kup;
break;
}
}
kup:;
return kum;
}
// parseExprMul
static gd* kun(){
gd* kvb; // ast
int64_t kvg; // row
int64_t kvh; // col
char16_t kvi; // c
char16_t kvk;
byf* kvm; // ast2
byf* kvo; // ast2
byf* kvq; // ast2
(kvb) = ((kvc)());
while(true){
(kvg) = (avc);
(kvh) = (avd);
(kvi) = ((bps)());
kvk = kvi;
switch(kvk){
case u'\u002A':
(kvm) = (new byf());
(drl)((kvm), (2050LL), ((bpq)((bf), (kvg), (kvh))));
((kvm)->byg) = (21LL);
((kvm)->byj) = (kvb);
((kvm)->byk) = ((kvc)());
(kvb) = (kvm);
break;
case u'\u002F':
(kvo) = (new byf());
(drl)((kvo), (2050LL), ((bpq)((bf), (kvg), (kvh))));
((kvo)->byg) = (22LL);
((kvo)->byj) = (kvb);
((kvo)->byk) = ((kvc)());
(kvb) = (kvo);
break;
case u'\u0025':
(kvq) = (new byf());
(drl)((kvq), (2050LL), ((bpq)((bf), (kvg), (kvh))));
((kvq)->byg) = (23LL);
((kvq)->byj) = (kvb);
((kvq)->byk) = ((kvc)());
(kvb) = (kvq);
break;
default:
(ave) = (kvi);
goto kve;
break;
}
}
kve:;
return kvb;
}
// parseExprPlus
static gd* kvc(){
gd* kvs; // ast
int64_t kvw; // row
int64_t kvx; // col
char16_t kvy; // c
char16_t kwc;
ege* kwe; // ast2
eft* kwp; // ast2
egb* kwr; // ast2
eft* kwt; // ast2
char16_t kwv;
(kvs) = ((kvt)());
if(!eqAddr_((kvs), (nullptr))){
return kvs;
}
(kvw) = (avc);
(kvx) = (avd);
(kvy) = ((bps)());
if((kvy) == (u'\u0023')){
(kvy) = ((brf)());
kwc = kvy;
switch(kwc){
case u'\u005B':
(kwe) = (new ege());
(drl)((kwe), (2053LL), ((bpq)((bf), (kvw), (kvx))));
((kwe)->gzr) = (new List_<gd*>());
while(true){
uh<List_<gd*>*, gd*>(((kwe)->gzr), (new Array_<int64_t>(1, (0LL))), ((drg)()));
(kvy) = ((bps)());
if((kvy) == (u'\u0000')){
break;
}
if((kvy) == (u'\u005D')){
break;
}
if((kvy) != (u'\u002C')){
(dkw)((u'\u002C'), (kvy));
return nullptr;
}
}
((kwe)->haa) = ((dmb)());
(kvs) = (kwe);
break;
case u'\u0023':
(kwp) = (new eft());
(drl)((kwp), (2049LL), ((bpq)((bf), (kvw), (kvx))));
((kwp)->gkz) = (3LL);
((kwp)->gkt) = ((kvc)());
(kvs) = (kwp);
break;
default:
(ave) = (kvy);
(kwr) = (new egb());
(drl)((kwr), (2052LL), ((bpq)((bf), (kvw), (kvx))));
((kwr)->gyg) = ((dmb)());
(kvs) = (kwr);
break;
}
}
else{
(kwt) = (new eft());
(drl)((kwt), (2049LL), ((bpq)((bf), (kvw), (kvx))));
kwv = kvy;
switch(kwv){
case u'\u002B':
((kwt)->gkz) = (0LL);
break;
case u'\u002D':
((kwt)->gkz) = (1LL);
break;
case u'\u0021':
((kwt)->gkz) = (2LL);
break;
case u'\u005E':
((kwt)->gkz) = (4LL);
break;
default:
(ad)((65569LL), ((kwt)->ne), (new Array_<Array_<char16_t>*>(1, ((dht)((kvy))))));
(bre)((kvy));
return nullptr;
break;
}
((kwt)->gkt) = ((kvc)());
(kvs) = (kwt);
}
return kvs;
}
// parseExprPow
static gd* kvt(){
gd* kxb; // ast
int64_t kxf; // row
int64_t kxg; // col
char16_t kxh; // c
byf* kxk; // ast2
(kxb) = ((kxc)());
if(eqAddr_((kxb), (nullptr))){
return kxb;
}
(kxf) = (avc);
(kxg) = (avd);
(kxh) = ((bps)());
if((kxh) == (u'\u005E')){
(kxk) = (new byf());
(drl)((kxk), (2050LL), ((bpq)((bf), (kxf), (kxg))));
((kxk)->byg) = (24LL);
((kxk)->byj) = (kxb);
((kxk)->byk) = ((kvc)());
(kxb) = (kxk);
}
else{
(ave) = (kxh);
}
return kxb;
}
// parseExprCall
static gd* kxc(){
gd* kxm; // ast
int64_t kxt; // row
int64_t kxu; // col
char16_t kxv; // c
char16_t kxx;
bvb* kxz; // ast2
bvc* kyf; // arg
gd* kyn; // ast3
egs* kyw; // ast2
egv* kyy; // ast2
char16_t kzb;
egk* kzd; // ast2
egn* kzf; // ast2
egh* kzh; // ast2
(kxm) = ((kxn)());
if(eqAddr_((kxm), (nullptr))){
return kxm;
}
while(true){
(kxt) = (avc);
(kxu) = (avd);
(kxv) = ((bps)());
kxx = kxv;
switch(kxx){
case u'\u0028':
if(!(!eqAddr_((kxm), (nullptr)))){
throw 0xE9170000U;
}
(kxz) = (new bvb());
(drl)((kxz), (2057LL), ((bpq)((bf), (kxt), (kxu))));
((kxz)->bvh) = (kxm);
((kxz)->bve) = (new List_<bvc*>());
(kxv) = ((bps)());
if((kxv) != (u'\u0029')){
(ave) = (kxv);
while(true){
(kyf) = (new bvc());
((kyf)->bwn) = (false);
(kxv) = ((bps)());
if((kxv) == (u'\u0026')){
((kyf)->bwm) = (true);
(kxv) = ((bps)());
if(((kxv) == (u'\u002C')) || ((kxv) == (u'\u0029'))){
((kyf)->bwn) = (true);
}
}
else{
((kyf)->bwm) = (false);
}
(ave) = (kxv);
if((kyf)->bwn){
(kyn) = (new gd());
(drl)((kyn), (2062LL), ((kxz)->ne));
((kyn)->ni) = (new Array_<char16_t>(1, u'\u0024'));
((kyn)->nj) = ((ipa)(((kyn)->ne)));
((kyf)->bwq) = (kyn);
}
else{
((kyf)->bwq) = ((drg)());
}
uh<List_<bvc*>*, bvc*>(((kxz)->bve), (new Array_<int64_t>(1, (0LL))), (kyf));
(kxv) = ((bps)());
if((kxv) == (u'\u0000')){
break;
}
if((kxv) == (u'\u0029')){
break;
}
if((kxv) != (u'\u002C')){
(dkw)((u'\u002C'), (kxv));
return nullptr;
}
}
}
(kxm) = (kxz);
break;
case u'\u005B':
if(!(!eqAddr_((kxm), (nullptr)))){
throw 0xE9170000U;
}
(kyw) = (new egs());
(drl)((kyw), (2058LL), ((bpq)((bf), (kxt), (kxu))));
((kyw)->hky) = (kxm);
((kyw)->hld) = ((drg)());
(dlb)((u'\u005D'), (true));
(kxm) = (kyw);
break;
case u'\u002E':
if(!(!eqAddr_((kxm), (nullptr)))){
throw 0xE9170000U;
}
(kyy) = (new egv());
(drl)((kyy), (2059LL), ((bpq)((bf), (kxt), (kxu))));
((kyy)->hjg) = (kxm);
((kyy)->hmw) = ((bqk)((true), (false)));
((kyy)->hnj) = (nullptr);
(kxm) = (kyy);
break;
case u'\u0024':
if(!(!eqAddr_((kxm), (nullptr)))){
throw 0xE9170000U;
}
(kxv) = ((brf)());
kzb = kxv;
switch(kzb){
case u'\u003E':
(kzd) = (new egk());
(drl)((kzd), (2055LL), ((bpq)((bf), (kxt), (kxu))));
((kzd)->hfv) = (kxm);
((kzd)->hgb) = ((dmb)());
(kxm) = (kzd);
break;
case u'\u003C':
(kzf) = (new egn());
(drl)((kzf), (2056LL), ((bpq)((bf), (kxt), (kxu))));
((kzf)->hhg) = (kxm);
((kzf)->hhl) = ((dmb)());
((kzf)->hhm) = ((irz)(((kzf)->ne), (0LL), (0x0000000000000000ULL)));
(kxm) = (kzf);
break;
default:
(ave) = (kxv);
(kzh) = (new egh());
(drl)((kzh), (2054LL), ((bpq)((bf), (kxt), (kxu))));
((kzh)->hbw) = (0LL);
((kzh)->hbo) = (kxm);
((kzh)->hbr) = ((dmb)());
(kxm) = (kzh);
break;
}
break;
default:
(ave) = (kxv);
goto kxr;
break;
}
}
kxr:;
return kxm;
}
// parseExprValue
static gd* kxn(){
int64_t kzj; // row
int64_t kzk; // col
char16_t kzl; // c
ga* kzm; // pos
char16_t kzo;
Array_<char16_t>* kzq; // buf
int64_t kzr; // len
bool kzs; // esc
byf* lac; // cat
byf* lae; // cat2
bvb* lah; // call
egv* laj; // dot
char16_t law; // buf
bool lax; // set
bool lay; // esc
gd* lbr; // ast
ehl* lbv; // ast
gd* lcb; // expr
Array_<char16_t>* lcl; // id
ehf* lcm; // expr
lcp* lco; // type
Array_<char16_t>* lcw; // id
Array_<char16_t>* lcy;
bvu* lde; // ast
elj* ldg; // type
gd* ldk; // ast
(kzj) = (avc);
(kzk) = (avd);
(kzl) = ((bps)());
(kzm) = ((bpq)((bf), (kzj), (kzk)));
kzo = kzl;
switch(kzo){
case u'\u0022':
(kzq) = (newArray_<char16_t, Array_<char16_t>*>(1, (1024LL)));
(kzr) = (0LL);
(kzs) = (false);
while(true){
(kzl) = ((gdz)());
if((kzl) == (u'\u0000')){
(ad)((65573LL), (kzm), (nullptr));
return nullptr;
}
if(kzs){
if((kzl) == (u'\u007B')){
(lac) = (new byf());
(drl)((lac), (2050LL), (kzm));
((lac)->byg) = (18LL);
(lae) = (new byf());
(drl)((lae), (2050LL), (kzm));
((lae)->byg) = (18LL);
((lae)->byj) = ((laf)((kzm), (auw<Array_<char16_t>*>((kzq), (new Array_<int64_t>(1, (0LL))), (0LL), (kzr)))));
(lah) = (new bvb());
(drl)((lah), (2057LL), (kzm));
((lah)->bve) = (new List_<bvc*>());
(laj) = (new egv());
(drl)((laj), (2059LL), (kzm));
((laj)->hjg) = ((drg)());
((laj)->hmw) = (new Array_<char16_t>(5, u'\u0074', u'\u006F', u'\u0053', u'\u0074', u'\u0072'));
((laj)->hnj) = (nullptr);
((lah)->bvh) = (laj);
((lae)->byk) = (lah);
(dlb)((u'\u007D'), (false));
((lac)->byj) = (lae);
(ave) = (u'\u0022');
((lac)->byk) = ((kxn)());
return lac;
}
if((kzr) == (1024LL)){
(ad)((65570LL), (kzm), (new Array_<Array_<char16_t>*>(1, (kzq))));
(bre)((kzl));
return nullptr;
}
((kzq)->At(kzr)) = ((lam)((kzl)));
(kzr) = ((kzr) + (1LL));
(kzs) = (false);
continue;
}
if((kzl) == (u'\u0022')){
break;
}
if((kzl) == (u'\u005C')){
(kzs) = (true);
continue;
}
if((kzr) == (1024LL)){
(ad)((65570LL), (kzm), (new Array_<Array_<char16_t>*>(1, (kzq))));
(bre)((kzl));
return nullptr;
}
((kzq)->At(kzr)) = (kzl);
(kzr) = ((kzr) + (1LL));
}
return (laf)((kzm), (auw<Array_<char16_t>*>((kzq), (new Array_<int64_t>(1, (0LL))), (0LL), (kzr))));
break;
case u'\u0027':
(law) = (u'\u0000');
(lax) = (false);
(lay) = (false);
while(true){
(kzl) = ((gdz)());
if((kzl) == (u'\u0000')){
(ad)((65573LL), (kzm), (nullptr));
return nullptr;
}
if(lay){
if(lax){
(ad)((65574LL), (kzm), (new Array_<Array_<char16_t>*>(1, ((dht)((law))))));
(bre)((kzl));
return nullptr;
}
(law) = ((lam)((kzl)));
(lax) = (true);
(lay) = (false);
continue;
}
if((kzl) == (u'\u0027')){
break;
}
if((kzl) == (u'\u005C')){
(lay) = (true);
continue;
}
if(lax){
(ad)((65574LL), (kzm), (new Array_<Array_<char16_t>*>(1, ((dht)((law))))));
(bre)((kzl));
return nullptr;
}
(law) = (kzl);
(lax) = (true);
}
if(!(lax)){
(ad)((65575LL), (kzm), (nullptr));
(bre)((kzl));
return nullptr;
}
return (irz)((kzm), (2LL), (static_cast<uint64_t>(law)));
break;
case u'\u0028':
(lbr) = ((drg)());
(kzl) = ((bps)());
if((kzl) != (u'\u0029')){
(ad)((65576LL), (kzm), (nullptr));
(bre)((kzl));
return nullptr;
}
return lbr;
break;
case u'\u005B':
(lbv) = (new ehl());
(drl)((lbv), (2060LL), (kzm));
((lbv)->hjp) = (new List_<gd*>());
(kzl) = ((bps)());
if((kzl) != (u'\u005D')){
(ave) = (kzl);
while(true){
(lcb) = ((drg)());
if(!eqAddr_((lcb), (nullptr))){
uh<List_<gd*>*, gd*>(((lbv)->hjp), (new Array_<int64_t>(1, (0LL))), (lcb));
}
(kzl) = ((bps)());
if((kzl) == (u'\u0000')){
break;
}
if((kzl) == (u'\u005D')){
break;
}
if((kzl) != (u'\u002C')){
(dkw)((u'\u002C'), (kzl));
return nullptr;
}
}
}
return lbv;
break;
case u'\u0025':
(lcl) = ((bqk)((false), (false)));
(lcm) = (new ehf());
(drl)((lcm), (67587LL), (kzm));
(lco) = (new lcp());
(bpp)((lco), (1028LL), (kzm), (nullptr), (false));
((lcm)->pf) = (lco);
((lcm)->goz) = (lcl);
return lcm;
break;
default:
if(((u'\u0030') <= (kzl)) && ((kzl) <= (u'\u0039'))){
return (lct)((kzj), (kzk), (kzl));
}
if(((((((u'\u0061') <= (kzl)) && ((kzl) <= (u'\u007A'))) || (((u'\u0041') <= (kzl)) && ((kzl) <= (u'\u005A')))) || ((kzl) == (u'\u005F'))) || ((kzl) == (u'\u0040'))) || ((kzl) == (u'\u005C'))){
(ave) = (kzl);
(lcw) = ((bqk)((true), (true)));
lcy = lcw;
if(cmp_(lcy, (new Array_<char16_t>(5, u'\u0066', u'\u0061', u'\u006C', u'\u0073', u'\u0065'))) == 0){
return (irz)((kzm), (3LL), (0x0000000000000000ULL));
}
else if(cmp_(lcy, (new Array_<char16_t>(4, u'\u0074', u'\u0072', u'\u0075', u'\u0065'))) == 0){
return (irz)((kzm), (3LL), (0x0000000000000001ULL));
}
else if(cmp_(lcy, (new Array_<char16_t>(3, u'\u0069', u'\u006E', u'\u0066'))) == 0){
return (ldc)((kzm), (std::numeric_limits<double>::infinity()));
}
else if(cmp_(lcy, (new Array_<char16_t>(4, u'\u006E', u'\u0075', u'\u006C', u'\u006C'))) == 0){
(lde) = (new bvu());
(drl)((lde), (67584LL), (kzm));
(ldg) = (new elj());
(bpp)((ldg), (1027LL), (kzm), (nullptr), (false));
((lde)->pf) = (ldg);
return lde;
}
else if(cmp_(lcy, (new Array_<char16_t>(3, u'\u0064', u'\u0062', u'\u0067'))) == 0){
return (irz)((kzm), (3LL), ((cv) ? (0x0000000000000000ULL) : (0x0000000000000001ULL)));
}
else if(cmp_(lcy, (new Array_<char16_t>(3, u'\u0065', u'\u006E', u'\u0076'))) == 0){
return (irz)((kzm), (0LL), (static_cast<uint64_t>(ec)));
}
else{(ldk) = (new gd());
(drl)((ldk), (2062LL), (kzm));
(dla)((ldk), (lcw));
return ldk;
}
}
break;
}
(ave) = (kzl);
return nullptr;
}
// makeStrValue
static ehc* laf(ga* ldl /*pos*/, Array_<char16_t>* ldm /*value*/){
ehc* ldn; // expr
cam* ldp; // type
buh* ldr; // type2
(ldn) = (new ehc());
(drl)((ldn), (67586LL), (ldl));
(ldp) = (new cam());
(bpp)((ldp), (66561LL), (ldl), (nullptr), (false));
(ldr) = (new buh());
(bpp)((ldr), (1026LL), (ldl), (nullptr), (false));
((ldr)->bui) = (2LL);
((ldp)->cao) = (ldr);
((ldn)->pf) = (ldp);
((ldn)->gqn) = (ldm);
return ldn;
}
// escChar
static char16_t lam(char16_t lds /*c*/){
char16_t ldu;
Array_<char16_t>* lea; // buf
int64_t lee;
bool lei;
int64_t lef;
ldu = lds;
switch(ldu){
case u'\u0022':
case u'\u0027':
case u'\u005C':
return lds;
break;
case u'\u0030':
return u'\u0000';
break;
case u'\u006E':
return u'\u000A';
break;
case u'\u0074':
return u'\u0009';
break;
case u'\u0075':
(lea) = (newArray_<char16_t, Array_<char16_t>*>(1, (6LL)));
((lea)->At(0LL)) = (u'\u0030');
((lea)->At(1LL)) = (u'\u0078');
for(lee = (0LL), lef = (3LL); lee <= lef; lee += (1LL)){
(lds) = ((gdz)());
if(!((((u'\u0030') <= (lds)) && ((lds) <= (u'\u0039'))) || (((u'\u0041') <= (lds)) && ((lds) <= (u'\u0046'))))){
(ad)((65572LL), ((dhs)()), (nullptr));
return u'\u0075';
}
((lea)->At((2LL) + (lee))) = (lds);
}
return static_cast<char16_t>((er)((lea), (&lei)));
break;
default:
(ad)((65571LL), ((dhs)()), (new Array_<Array_<char16_t>*>(1, ((dht)((lds))))));
return lds;
break;
}
}
// _dtor
static void lek(lcp* lel){
((lel)->ne) = (nullptr);
((lel)->nf) = (nullptr);
((lel)->ng) = (nullptr);
((lel)->nh) = (nullptr);
((lel)->ni) = (nullptr);
((lel)->nj) = (nullptr);
((lel)->nk) = (nullptr);
}
// _copy
static lcp* lem(lcp* len){
lcp* leo;
(leo) = (new lcp());
((leo)->ne) = (copy_((len)->ne));
((leo)->nf) = (copy_((len)->nf));
((leo)->ng) = (copy_((len)->ng));
((leo)->nh) = (copy_((len)->nh));
((leo)->ni) = (copy_((len)->ni));
((leo)->nj) = (copy_((len)->nj));
((leo)->nk) = (copy_((len)->nk));
((leo)->no) = ((len)->no);
((leo)->lw) = ((len)->lw);
return as_<lcp>(classTable_, (leo), 150);
}
// _toBin
static Array_<uint8_t>* lep(lcp* leq){
Array_<uint8_t>* ler;
(ler) = (newArray_<uint8_t, Array_<uint8_t>*>(1, (8LL)));
(ler) = ((ler)->Cat(toBin_((leq)->ne)));
(ler) = ((ler)->Cat(toBin_((leq)->nf)));
(ler) = ((ler)->Cat(toBin_((leq)->ng)));
(ler) = ((ler)->Cat(toBin_((leq)->nh)));
(ler) = ((ler)->Cat(toBin_((leq)->ni)));
(ler) = ((ler)->Cat(toBin_((leq)->nj)));
(ler) = ((ler)->Cat(toBin_((leq)->nk)));
(ler) = ((ler)->Cat(toBin_((leq)->no)));
(ler) = ((ler)->Cat(toBin_((leq)->lw)));
return ler;
}
// _fromBin
static lcp* lfb(lcp* lfc, Array_<uint8_t>* lfd, int64_t* lfe){
lcp* lff;
(lff) = (new lcp());
((lff)->ne) = (fromBin_<ga*>((lfd), (*lfe)));
((lff)->nf) = (fromBin_<Array_<char16_t>*>((lfd), (*lfe)));
((lff)->ng) = (fromBin_<fx*>((lfd), (*lfe)));
((lff)->nh) = (fromBin_<Dict_<Array_<char16_t>*, fx*>*>((lfd), (*lfe)));
((lff)->ni) = (fromBin_<Array_<char16_t>*>((lfd), (*lfe)));
((lff)->nj) = (fromBin_<fx*>((lfd), (*lfe)));
((lff)->nk) = (fromBin_<fy*>((lfd), (*lfe)));
((lff)->no) = (fromBin_<bool>((lfd), (*lfe)));
((lff)->lw) = (fromBin_<int64_t>((lfd), (*lfe)));
return lff;
}
// parseExprNumber
static gd* lct(int64_t lfg /*row*/, int64_t lfh /*col*/, char16_t lfi /*c*/){
bvu* lfj; // ast
ga* lfk; // pos
Array_<char16_t>* lfl; // buf
int64_t lfm; // len
int64_t lfn; // base
bool lfo; // changeBase
bool lfp; // floatType
int64_t lfq; // byteSize
char16_t lfv;
bool lhh; // success
double lhi; // value
ehi* lhm; // ast2
char16_t lhr;
uint64_t lhz; // value
bool lia; // success
bvt* lij; // ast2
buh* lim; // type
caq* lir; // type
(lfj) = (nullptr);
(lfk) = ((bpq)((bf), (lfg), (lfh)));
(lfl) = (newArray_<char16_t, Array_<char16_t>*>(1, (1024LL)));
(lfm) = (0LL);
(lfn) = (10LL);
(lfo) = (false);
(lfp) = (false);
(lfq) = (0LL);
while(true){
lfv = lfi;
if(lfv == (u'\u0078')){
if((lfo) || (lfp)){
(ad)((65577LL), (lfk), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(1, u'\u0078')))));
(bre)((lfi));
return nullptr;
}
if(((lfm) != (1LL)) || (((lfl)->At(0LL)) != (u'\u0030'))){
(ad)((65579LL), (lfk), (nullptr));
(bre)((lfi));
return nullptr;
}
(lfm) = (0LL);
(lfn) = (16LL);
(lfo) = (true);
}
else if(lfv == (u'\u002E')){
if((lfo) || (lfp)){
(ad)((65577LL), (lfk), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(1, u'\u002E')))));
(bre)((lfi));
return nullptr;
}
if((lfm) == (1024LL)){
(ad)((65578LL), (lfk), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((lfl), (new Array_<int64_t>(1, (0LL))), (0LL), (lfm))))));
(bre)((lfi));
return nullptr;
}
((lfl)->At(lfm)) = (lfi);
(lfm) = ((lfm) + (1LL));
(lfp) = (true);
}
else if((u'\u0030') <= lfv && lfv <= (u'\u0039') || (u'\u0041') <= lfv && lfv <= (u'\u0046')){
if((lfm) == (1024LL)){
(ad)((65578LL), (lfk), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((lfl), (new Array_<int64_t>(1, (0LL))), (0LL), (lfm))))));
(bre)((lfi));
return nullptr;
}
((lfl)->At(lfm)) = (lfi);
(lfm) = ((lfm) + (1LL));
}
else{(ave) = (lfi);
break;
}
(lfi) = ((brf)());
}
if(((lfm) == (0LL)) || (((lfl)->At((lfm) - (1LL))) == (u'\u002E'))){
(ad)((65577LL), (lfk), (new Array_<Array_<char16_t>*>(1, (new Array_<char16_t>(1, u'\u002E')))));
(bre)(((brf)()));
return nullptr;
}
if(lfp){
(lfi) = ((brf)());
if((lfi) == (u'\u0065')){
if((lfm) == (1024LL)){
(ad)((65578LL), (lfk), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((lfl), (new Array_<int64_t>(1, (0LL))), (0LL), (lfm))))));
(bre)((lfi));
return nullptr;
}
((lfl)->At(lfm)) = (lfi);
(lfm) = ((lfm) + (1LL));
(lfi) = ((brf)());
if(((lfi) != (u'\u002B')) && ((lfi) != (u'\u002D'))){
(ad)((65580LL), (lfk), (nullptr));
(bre)((lfi));
return nullptr;
}
if((lfm) == (1024LL)){
(ad)((65578LL), (lfk), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((lfl), (new Array_<int64_t>(1, (0LL))), (0LL), (lfm))))));
(bre)((lfi));
return nullptr;
}
((lfl)->At(lfm)) = (lfi);
(lfm) = ((lfm) + (1LL));
(lfi) = ((brf)());
if(!(((u'\u0030') <= (lfi)) && ((lfi) <= (u'\u0039')))){
(ad)((65580LL), (lfk), (nullptr));
(bre)((lfi));
return nullptr;
}
do{
if((lfm) == (1024LL)){
(ad)((65578LL), (lfk), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((lfl), (new Array_<int64_t>(1, (0LL))), (0LL), (lfm))))));
(bre)((lfi));
return nullptr;
}
((lfl)->At(lfm)) = (lfi);
(lfm) = ((lfm) + (1LL));
(lfi) = ((brf)());
}while(((u'\u0030') <= (lfi)) && ((lfi) <= (u'\u0039')));
}
(ave) = (lfi);
(lhh) = (false);
(lhi) = ((lhj)((auw<Array_<char16_t>*>((lfl), (new Array_<int64_t>(1, (0LL))), (0LL), (lfm))), (&lhh)));
if(!(lhh)){
(ad)((65581LL), (lfk), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((lfl), (new Array_<int64_t>(1, (0LL))), (0LL), (lfm))))));
(bre)(((brf)()));
return nullptr;
}
(lhm) = (new ehi());
(drl)((lhm), (67588LL), (lfk));
((lhm)->glp) = (lhi);
(lfj) = (lhm);
}
else{
(lfi) = ((brf)());
if((lfi) == (u'\u0062')){
(lfi) = ((brf)());
lhr = lfi;
switch(lhr){
case u'\u0038':
(lfq) = (1LL);
break;
case u'\u0031':
(dlb)((u'\u0036'), (false));
(lfq) = (2LL);
break;
case u'\u0033':
(dlb)((u'\u0032'), (false));
(lfq) = (4LL);
break;
case u'\u0036':
(dlb)((u'\u0034'), (false));
(lfq) = (8LL);
break;
default:
(ad)((65582LL), (lfk), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((lfl), (new Array_<int64_t>(1, (0LL))), (0LL), (lfm))))));
(bre)((lfi));
break;
}
}
else{
(ave) = (lfi);
}
(lhz) = (0x0000000000000000ULL);
(lia) = (false);
if((lfn) == (10LL)){
(lhz) = ((lid)((auw<Array_<char16_t>*>((lfl), (new Array_<int64_t>(1, (0LL))), (0LL), (lfm))), (&lia)));
}
else{
if(!((lfn) == (16LL))){
throw 0xE9170000U;
}
(lhz) = ((lid)(((new Array_<char16_t>(2, u'\u0030', u'\u0078'))->Cat(auw<Array_<char16_t>*>((lfl), (new Array_<int64_t>(1, (0LL))), (0LL), (lfm)))), (&lia)));
}
if(!(lia)){
(ad)((65583LL), (lfk), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((lfl), (new Array_<int64_t>(1, (0LL))), (0LL), (lfm))))));
(bre)(((brf)()));
return nullptr;
}
if((((((lfq) == (1LL)) && ((lhz) > (0x00000000000000FFULL))) || (((lfq) == (2LL)) && ((lhz) > (0x000000000000FFFFULL)))) || (((lfq) == (4LL)) && ((lhz) > (0x00000000FFFFFFFFULL)))) || (((lfq) == (0LL)) && ((lhz) > (0x7FFFFFFFFFFFFFFFULL)))){
(ad)((65583LL), (lfk), (new Array_<Array_<char16_t>*>(1, (auw<Array_<char16_t>*>((lfl), (new Array_<int64_t>(1, (0LL))), (0LL), (lfm))))));
(bre)(((brf)()));
return nullptr;
}
(lij) = (new bvt());
(drl)((lij), (67585LL), (lfk));
((lij)->bvv) = (lhz);
(lfj) = (lij);
}
if((lfq) == (0LL)){
(lim) = (new buh());
(bpp)((lim), (1026LL), (lfk), (nullptr), (false));
if(lfp){
((lim)->bui) = (1LL);
}
else{
((lim)->bui) = (0LL);
}
((lfj)->pf) = (lim);
}
else{
(lir) = (new caq());
(bpp)((lir), (1025LL), (lfk), (nullptr), (false));
((lir)->car) = (lfq);
((lfj)->pf) = (lir);
}
return lfj;
}
// makeFloatValue
static ehi* ldc(ga* lis /*pos*/, double lit /*value*/){
ehi* liu; // expr
buh* liw; // type
(liu) = (new ehi());
(drl)((liu), (67588LL), (lis));
(liw) = (new buh());
(bpp)((liw), (1026LL), (lis), (nullptr), (false));
((liw)->bui) = (1LL);
((liu)->pf) = (liw);
((liu)->glp) = (lit);
return liu;
}
// _toFloat
static double lhj(Array_<char16_t>* lix /*me_*/, bool* liy /*success*/){
std::u16string s_ = lix->B;
const std::string& t_ = utf16ToUtf8_(s_);
try{
size_t s_;
double v_ = std::stod(t_, &s_);
if(s_ == t_.size()){
*liy = true;
return v_;
}else{
*liy = false;
return 0;
}
}catch(...){
*liy = false;
return 0;
}
}
// _toBit64
static uint64_t lid(Array_<char16_t>* liz /*me_*/, bool* lja /*success*/){
std::u16string s_ = liz->B;
const std::string& t_ = utf16ToUtf8_(s_);
try{
size_t s_;
uint64_t v_ = t_.size() > 2 && t_[0] == '0' && t_[1] == 'x' ? std::stoull(t_, &s_, 16) : std::stoull(t_, &s_);
if(s_ == t_.size()){
*lja = true;
return v_;
}else{
*lja = false;
return 0;
}
}catch(...){
*lja = false;
return 0;
}
}
}
int main(int c_, char** v_){
argc_ = static_cast<int64_t>(c_) - 1;
argv_ = v_ + 1;
classTable_[0] = 0;
classTable_[2] = 0;
classTable_[6] = 0;
classTable_[4] = 2;
classTable_[12] = 4;
classTable_[14] = 4;
classTable_[10] = 4;
classTable_[16] = 4;
classTable_[8] = 4;
classTable_[18] = 0;
classTable_[20] = 0;
classTable_[24] = 0;
classTable_[22] = 4;
classTable_[26] = 0;
classTable_[28] = 0;
classTable_[30] = 0;
classTable_[34] = 0;
classTable_[32] = 4;
classTable_[36] = 2;
classTable_[38] = 4;
classTable_[40] = 0;
classTable_[42] = 2;
classTable_[44] = 4;
classTable_[46] = 4;
classTable_[48] = 4;
classTable_[50] = 16;
classTable_[54] = 50;
classTable_[58] = 0;
classTable_[56] = 16;
classTable_[52] = 50;
classTable_[60] = 12;
classTable_[62] = 16;
classTable_[66] = 0;
classTable_[64] = 14;
classTable_[68] = 14;
classTable_[70] = 68;
classTable_[72] = 14;
classTable_[74] = 12;
classTable_[76] = 74;
classTable_[78] = 12;
classTable_[82] = 0;
classTable_[80] = 74;
classTable_[84] = 74;
classTable_[86] = 74;
classTable_[90] = 16;
classTable_[88] = 50;
classTable_[94] = 16;
classTable_[92] = 50;
classTable_[96] = 50;
classTable_[98] = 96;
classTable_[100] = 96;
classTable_[102] = 16;
classTable_[104] = 16;
classTable_[106] = 16;
classTable_[108] = 74;
classTable_[110] = 14;
classTable_[112] = 14;
classTable_[114] = 14;
classTable_[116] = 14;
classTable_[118] = 14;
classTable_[120] = 14;
classTable_[122] = 14;
classTable_[124] = 14;
classTable_[126] = 14;
classTable_[128] = 68;
classTable_[130] = 68;
classTable_[132] = 68;
classTable_[134] = 14;
classTable_[136] = 16;
classTable_[138] = 12;
classTable_[140] = 16;
classTable_[142] = 16;
classTable_[144] = 16;
classTable_[146] = 16;
classTable_[148] = 16;
classTable_[150] = 12;
init_();
a();
return 0;
}
