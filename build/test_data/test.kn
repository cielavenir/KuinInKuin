func main()
	do @test1()
end func

func test1()
	do cui@print("Kuin" ~ " Test " ~ "Program")
	
	block
		var a: int :: (7 + 7) / 7 - 7 * 7 + 7 + 7 + 7 + 7 + 7 + 7 + 7 + 7 + 7 + 7 + (+7) + (-7) {23}
		do cui@print(a.toStr() ~ ", " ~ (23 % 7).toStr() ~ ", " ~ (7 ^ 7).toStr())
		
		var n: int :: 7
		var b: int :: (n + n) / n - n * n + n + n + n + n + n + n + n + n + n + n + (+n) + (-n) {23}
		do cui@print(b.toStr() ~ ", " ~ (b % n).toStr() ~ ", " ~ (n ^ n).toStr())
		
		var c: int :: -2
		do cui@print((c ^ 0).toStr() ~ ", " ~ (c ^ 1).toStr() ~ ", " ~ (c ^ 2).toStr() ~ ", " ~ (c ^ 3).toStr() ~ ", " ~ (c ^ 4).toStr() ~ ", " ~ (c ^ 5).toStr())
	end block
	
	block
		var a: float :: (7.0 + 7.0) / 7.0 - 7.0 * 7.0 + 7.0 + 7.0 + 7.0 + 7.0 + 7.0 + 7.0 + 7.0 + 7.0 + 7.0 + 7.0 + (+7.0) + (-7.0) {23.0}
		do cui@print(a.toStr() ~ ", " ~ (23.00 % 7.0).toStr() ~ ", " ~ (7 ^ 7).toStr())
		
		var n: float :: 7.0
		var b: float :: (n + n) / n - n * n + n + n + n + n + n + n + n + n + n + n + (+n) + (-n) {23.0}
		do cui@print(b.toStr() ~ ", " ~ (b % n).toStr() ~ ", " ~ (n ^ n).toStr())
		
		var c: float :: -2.0
		do cui@print((c ^ 0.0).toStr() ~ ", " ~ (c ^ 1.0).toStr() ~ ", " ~ (c ^ 2.0).toStr() ~ ", " ~ (c ^ 3.0).toStr() ~ ", " ~ (c ^ 4.0).toStr() ~ ", " ~ (c ^ 5.0).toStr())
	end block
	
	block
		var a: bit8 :: (7b8 + 7b8) / 7b8 - 7b8 * 7b8 + 7b8 + 7b8 + 7b8 + 7b8 + 7b8 + 7b8 + 7b8 + 7b8 + 7b8 + 7b8 + (+7b8) + (-7b8) {23}
		do cui@print(a.toStr() ~ ", " ~ (23b8 % 7b8).toStr())
		
		var n: bit8 :: 7b8
		var b: bit8 :: (n + n) / n - n * n + n + n + n + n + n + n + n + n + n + n + (+n) + (-n) {23}
		do cui@print(b.toStr() ~ ", " ~ (b % n).toStr())
		
		var c1: bit8 :: 255b8 + 2b8
		var c2: bit8 :: -1b8
		var d1: bit8 :: 255b8
		var d2: bit8 :: 1b8
		do d1 :+ 2b8
		do d2 :: -d2
		do cui@print(c1.toStr() ~ ", " ~ d1.toStr() ~ ", " ~ c2.toStr() ~ ", " ~ d2.toStr())
	end block
	
	block
		var a: bit16 :: (7b16 + 7b16) / 7b16 - 7b16 * 7b16 + 7b16 + 7b16 + 7b16 + 7b16 + 7b16 + 7b16 + 7b16 + 7b16 + 7b16 + 7b16 + (+7b16) + (-7b16) {23}
		do cui@print(a.toStr() ~ ", " ~ (23b16 % 7b16).toStr())
		
		var n: bit16 :: 7b16
		var b: bit16 :: (n + n) / n - n * n + n + n + n + n + n + n + n + n + n + n + (+n) + (-n) {23}
		do cui@print(b.toStr() ~ ", " ~ (b % n).toStr())
		
		var c1: bit16 :: 65535b16 + 2b16
		var c2: bit16 :: -1b16
		var d1: bit16 :: 65535b16
		var d2: bit16 :: 1b16
		do d1 :+ 2b16
		do d2 :: -d2
		do cui@print(c1.toStr() ~ ", " ~ d1.toStr() ~ ", " ~ c2.toStr() ~ ", " ~ d2.toStr())
	end block
	
	block
		var a: bit32 :: (7b32 + 7b32) / 7b32 - 7b32 * 7b32 + 7b32 + 7b32 + 7b32 + 7b32 + 7b32 + 7b32 + 7b32 + 7b32 + 7b32 + 7b32 + (+7b32) + (-7b32) {23}
		do cui@print(a.toStr() ~ ", " ~ (23b32 % 7b32).toStr())
		
		var n: bit32 :: 7b32
		var b: bit32 :: (n + n) / n - n * n + n + n + n + n + n + n + n + n + n + n + (+n) + (-n) {23}
		do cui@print(b.toStr() ~ ", " ~ (b % n).toStr())
		
		var c1: bit32 :: 0xFFFFFFFFb32 + 2b32
		var c2: bit32 :: -1b32
		var d1: bit32 :: 0xFFFFFFFFb32
		var d2: bit32 :: 1b32
		do d1 :+ 2b32
		do d2 :: -d2
		do cui@print(c1.toStr() ~ ", " ~ d1.toStr() ~ ", " ~ c2.toStr() ~ ", " ~ d2.toStr())
	end block
	
	block
		var a: bit64 :: (7b64 + 7b64) / 7b64 - 7b64 * 7b64 + 7b64 + 7b64 + 7b64 + 7b64 + 7b64 + 7b64 + 7b64 + 7b64 + 7b64 + 7b64 + (+7b64) + (-7b64) {23}
		do cui@print(a.toStr() ~ ", " ~ (23b64 % 7b64).toStr())
		
		var n: bit64 :: 7b64
		var b: bit64 :: (n + n) / n - n * n + n + n + n + n + n + n + n + n + n + n + (+n) + (-n) {23}
		do cui@print(b.toStr() ~ ", " ~ (b % n).toStr())
	end block
end func
